void sub_100002ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000031B8()
{
  if (qword_100306560 != -1)
    dispatch_once(&qword_100306560, &stru_1002C3368);
  return (id)qword_100306568;
}

void sub_100003204(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 16));
}

void sub_1000035E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  id *v23;

  objc_destroyWeak(v23);
  _Block_object_dispose(&a23, 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10000362C(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_100003654(uint64_t a1)
{

}

void sub_10000365C(uint64_t a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSObject *v8;
  uint64_t v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = sub_100052F5C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    sub_100225360(a1);

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "request"));
  (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);

  v7 = sub_100052F5C();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    sub_1002252DC(a1);

  v9 = *(_QWORD *)(a1 + 40);
  if (v9)
    (*(void (**)(void))(v9 + 16))();

}

void sub_100003900(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_100004044(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1000056C0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  uint32_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v16 = *(_QWORD *)(a1 + 32);
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v16, 1);
      v17 = sub_1000031B8();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v18 = 138412546;
      v19 = v10;
      v20 = 2048;
      v21 = objc_msgSend(v3, "httpResponseStatus");
      v11 = "%@: successful with status %ld";
      v12 = v8;
      v13 = 22;
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v18 = 138412290;
        v19 = v10;
        v11 = "%@: Cancelled";
        v12 = v8;
        v13 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v18, v13);
LABEL_14:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v14 = objc_msgSend(v3, "httpResponseStatus");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v18 = 138412802;
      v19 = v10;
      v20 = 2048;
      v21 = v14;
      v22 = 2112;
      v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v18, 0x20u);

      goto LABEL_14;
    }
LABEL_15:

  }
}

void sub_100005EB4(id a1)
{
  FMDLocationManagerFactory *v1;
  void *v2;

  v1 = objc_alloc_init(FMDLocationManagerFactory);
  v2 = (void *)qword_100306390;
  qword_100306390 = (uint64_t)v1;

}

void sub_100006004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100006020(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  id WeakRetained;
  uint8_t v7[16];

  v3 = a2;
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FMDLocationManagerFactory proxy dealloc callback", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_discardLocationManager:", v3);

}

void sub_100006268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100006290(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000062A0(uint64_t a1)
{

}

void sub_1000062A8(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle bundleWithPath:](NSBundle, "bundleWithPath:", CFSTR("/System/Library/PrivateFrameworks/FindMyDevice.framework")));
  v2 = objc_msgSend(objc_alloc((Class)CLLocationManager), "initWithEffectiveBundle:", v6);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "locationManagers"));
  objc_msgSend(v5, "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));

}

void sub_1000063EC(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  NSObject *v9;
  void *v10;
  int v11;
  id v12;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "object"));
  if (v4)
  {
    v5 = objc_opt_class(CLLocationManager, v3);
    if ((objc_opt_isKindOfClass(v4, v5) & 1) != 0)
    {
      v6 = v4;
      objc_msgSend(v6, "setDelegate:", 0);
      objc_msgSend(v6, "stopUpdatingLocation");
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "locationManagers"));
      objc_msgSend(v7, "removeObject:", v6);

    }
  }
  v8 = sub_1000031B8();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "locationManagers"));
    v11 = 134217984;
    v12 = objc_msgSend(v10, "count");
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "FMDLocationManagerFactory active location managers %ld", (uint8_t *)&v11, 0xCu);

  }
}

void sub_1000065E4(id a1)
{
  id v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;

  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    sub_1002254B4(v2, v3, v4, v5, v6, v7, v8, v9);

  v10 = -[FMDMessageMgr_iOS initSingleton]([FMDMessageMgr_iOS alloc], "initSingleton");
  v11 = (void *)qword_1003063A0;
  qword_1003063A0 = (uint64_t)v10;

}

void sub_100006F8C(uint64_t a1)
{
  CFRunLoopSourceRef RunLoopSource;
  __CFRunLoopSource *v2;
  __CFRunLoop *Current;

  RunLoopSource = CFUserNotificationCreateRunLoopSource(kCFAllocatorDefault, *(CFUserNotificationRef *)(a1 + 32), (CFUserNotificationCallBack)sub_100006FF8, 0);
  if (RunLoopSource)
  {
    v2 = RunLoopSource;
    Current = CFRunLoopGetCurrent();
    CFRunLoopAddSource(Current, v2, kCFRunLoopCommonModes);
    CFRelease(v2);
  }
}

void sub_100006FF8(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  int v20;
  void *v21;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[FMDMessageMgr_iOS sharedInstance](FMDMessageMgr_iOS, "sharedInstance"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "activeMessage"));

  if (a2 == 1)
  {
    v10 = sub_1000031B8();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "fm_logID"));
      v20 = 138412290;
      v21 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Alternate button activated for message %@", (uint8_t *)&v20, 0xCu);

    }
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "alternateButtonAction"));

    if (v13)
    {
      v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "alternateButtonAction"));
      goto LABEL_11;
    }
  }
  else if (!a2)
  {
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "fm_logID"));
      v20 = 138412290;
      v21 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Default button activated for message %@", (uint8_t *)&v20, 0xCu);

    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "defaultButtonAction"));

    if (v8)
    {
      v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "defaultButtonAction"));
LABEL_11:
      v14 = (void *)v9;
      (*(void (**)(void))(v9 + 16))();

    }
  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[FMDMessageMgr_iOS sharedInstance](FMDMessageMgr_iOS, "sharedInstance"));
  objc_msgSend(v15, "setActiveMessage:", 0);

  v16 = (void *)objc_claimAutoreleasedReturnValue(+[FMDMessageMgr_iOS sharedInstance](FMDMessageMgr_iOS, "sharedInstance"));
  objc_msgSend(v16, "setCfNotification:", 0);

  v17 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[FMDMessageMgr_iOS sharedInstance](FMDMessageMgr_iOS, "sharedInstance"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "_xpcTransactionNameFor:", v4));
  objc_msgSend(v17, "endTransaction:", v19);

}

void sub_1000072E8(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12[16];

  v2 = a2;
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_10022564C((uint64_t)v2, v5, v6, v7, v8, v9, v10, v11);
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Playing XPC sound", v12, 2u);
  }

}

void sub_1000073B4(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12[16];

  v2 = a2;
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1002256B0((uint64_t)v2, v5, v6, v7, v8, v9, v10, v11);
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Stopped XPC sound", v12, 2u);
  }

}

void sub_1000075A0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_1000094DC(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x100009464);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000975C(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_100009E5C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  unsigned int v14;
  void *v15;
  uint64_t v16;
  id v17;

  v17 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  v14 = objc_msgSend(*(id *)(a1 + 32), "cancelled");
  v16 = *(_QWORD *)(a1 + 32);
  v15 = *(void **)(a1 + 40);
  if (v14)
  {
    objc_msgSend(v15, "_disablePowerAssertionForRequest:", v16);
    objc_msgSend(*(id *)(a1 + 40), "_endXPCTransactionForRequest:", *(_QWORD *)(a1 + 32));
  }
  else
  {
    objc_msgSend(v15, "_handleResponseForRequest:withStatus:headers:body:location:error:", v16, a2, v17, v11, v12, v13);
  }

}

void sub_10000A90C(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_10000AB54(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_10000AE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  uint64_t v15;

  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v15 - 40));
  _Unwind_Resume(a1);
}

void sub_10000AE3C(uint64_t a1)
{
  id v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_sendRequest:", v2);

}

id sub_10000B44C(id a1)
{
  return a1;
}

id sub_10000B470(id a1)
{
  return a1;
}

void sub_10000B488(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void sub_10000B920(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 120));
  objc_destroyWeak((id *)(v4 - 112));
  _Unwind_Resume(a1);
}

void sub_10000B974(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id WeakRetained;
  id v8;
  NSObject *v9;
  uint64_t v10;
  FMDLocation *v11;
  id v12;
  int v13;
  id v14;
  __int16 v15;
  uint64_t v16;

  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = sub_1000031B8();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v10 = *(_QWORD *)(a1 + 32);
    v13 = 138412546;
    v14 = v6;
    v15 = 2112;
    v16 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Locator received location %@ for accessory %@", (uint8_t *)&v13, 0x16u);
  }

  v11 = -[FMDLocation initWithLocation:eventType:positionType:]([FMDLocation alloc], "initWithLocation:eventType:positionType:", v6, *(_QWORD *)(a1 + 56), 255);
  objc_msgSend(WeakRetained, "setLocation:", v11);
  objc_msgSend(WeakRetained, "updateLocationMetaData");
  if (a4 == 5 || a4 == 3)
  {
    v12 = objc_loadWeakRetained((id *)(a1 + 48));
    objc_msgSend(v12, "stopLocator");

  }
}

void sub_10000BAB0(uint64_t a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "locator"));
    v6 = *(_QWORD *)(a1 + 32);
    v9 = 138412546;
    v10 = v5;
    v11 = 2112;
    v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Locator stopped %@ for accessory %@", (uint8_t *)&v9, 0x16u);

  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "locator"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "locatorPublisher"));
  objc_msgSend(v8, "flushLocations");

  objc_msgSend(WeakRetained, "_completeLocate");
}

id sub_10000BBBC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startLocator");
}

void sub_10000BE6C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_10000BEA8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_finishAction");

}

void sub_10000BED4(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessoryUpdateFuture"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.icloud.findmydeviced.accessoryCurrentLocationAction"), 1, 0));
  objc_msgSend(v1, "finishWithError:", v2);

}

void sub_10000C2E0(id a1)
{
  ActionManager *v1;
  void *v2;

  v1 = objc_alloc_init(ActionManager);
  v2 = (void *)qword_1003063B0;
  qword_1003063B0 = (uint64_t)v1;

}

void sub_10000C4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000C4C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id *v4;
  id v5;
  void *v6;
  id v7;
  id WeakRetained;

  v4 = (id *)(a1 + 32);
  v5 = a4;
  WeakRetained = objc_loadWeakRetained(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", NSKeyValueChangeNewKey));

  v7 = objc_msgSend(v6, "unsignedIntegerValue");
  objc_msgSend(WeakRetained, "refreshTransactionState:", v7);

}

void sub_10000C648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000C660(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10000C670(uint64_t a1)
{

}

void sub_10000C678(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  MetaAction *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isKindOfClass;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _BOOL4 v16;
  MetaAction *v17;
  double v18;
  double v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  NSObject *v28;
  uint64_t v29;
  void *v30;
  MetaAction *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  NSObject *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  NSObject *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  NSObject *v52;
  void **v53;
  uint64_t v54;
  void (*v55)(uint64_t);
  void *v56;
  id v57;
  id v58;
  id from;
  id location;
  uint8_t buf[4];
  double v62;
  __int16 v63;
  MetaAction *v64;
  __int16 v65;
  void *v66;
  __int16 v67;
  MetaAction *v68;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v5 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v4);
    v6 = *(MetaAction **)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    v62 = *(double *)&v5;
    v63 = 2048;
    v64 = v6;
    v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Received enqueue for action %@ (0x%lX)", buf, 0x16u);

  }
  v8 = *(_QWORD *)(a1 + 32);
  v10 = objc_opt_class(RegisterAction, v9);
  if ((objc_opt_isKindOfClass(v8, v10) & 1) != 0)
  {
    isKindOfClass = 1;
  }
  else
  {
    v13 = *(_QWORD *)(a1 + 32);
    v14 = objc_opt_class(AccessoryRegisterAction, v11);
    isKindOfClass = objc_opt_isKindOfClass(v13, v14);
  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "nextRegisterDate"));
  v16 = v15 != 0;

  if ((v16 & isKindOfClass) == 0)
    goto LABEL_10;
  v17 = (MetaAction *)*(id *)(a1 + 32);
  if ((-[MetaAction force](v17, "force") & 1) != 0
    || (+[NSDate timeIntervalSinceReferenceDate](NSDate, "timeIntervalSinceReferenceDate"),
        v19 = v18,
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "nextRegisterDate")),
        objc_msgSend(v20, "timeIntervalSinceReferenceDate"),
        v22 = v21,
        v20,
        v23 = v19 - v22,
        v23 >= 0.0))
  {

LABEL_10:
    v24 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(*(id *)(a1 + 40), "nextActionIdNumber")));
    v25 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v26 = *(void **)(v25 + 40);
    *(_QWORD *)(v25 + 40) = v24;

    objc_msgSend(*(id *)(a1 + 40), "setNextActionIdNumber:", (char *)objc_msgSend(*(id *)(a1 + 40), "nextActionIdNumber") + 1);
    v17 = -[MetaAction initWithAction:id:]([MetaAction alloc], "initWithAction:id:", *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
    v27 = sub_1000031B8();
    v28 = objc_claimAutoreleasedReturnValue(v27);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      v30 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v29);
      v31 = *(MetaAction **)(a1 + 32);
      v32 = v30;
      v34 = (void *)objc_opt_class(v17, v33);
      *(_DWORD *)buf = 138413058;
      v62 = *(double *)&v30;
      v63 = 2048;
      v64 = v31;
      v65 = 2112;
      v66 = v34;
      v67 = 2048;
      v68 = v17;
      v35 = v34;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "Wrapping action %@ (0x%lX) in %@ (0x%lX)", buf, 0x2Au);

    }
    v36 = sub_1000031B8();
    v37 = objc_claimAutoreleasedReturnValue(v36);
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      v39 = (void *)objc_opt_class(v17, v38);
      v40 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138412802;
      v62 = *(double *)&v39;
      v63 = 2048;
      v64 = v17;
      v65 = 2112;
      v66 = v40;
      v41 = v39;
      _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "Enqueuing action %@ (0x%lX). Current actions : %@", buf, 0x20u);

    }
    objc_msgSend(*(id *)(a1 + 40), "_setDependenciesForNewAction:", v17);
    objc_initWeak(&location, v17);
    objc_initWeak(&from, *(id *)(a1 + 40));
    v53 = _NSConcreteStackBlock;
    v54 = 3221225472;
    v55 = sub_10000CBC0;
    v56 = &unk_1002C12D8;
    objc_copyWeak(&v57, &location);
    objc_copyWeak(&v58, &from);
    -[MetaAction setCompletionBlock:](v17, "setCompletionBlock:", &v53);
    v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "weakActions", v53, v54, v55, v56));
    objc_msgSend(v42, "addPointer:", v17);

    v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    -[MetaAction setQueueAddedDate:](v17, "setQueueAddedDate:", v43);

    v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "actionExecutionQueue"));
    objc_msgSend(v44, "addOperation:", v17);

    v45 = sub_1000031B8();
    v46 = objc_claimAutoreleasedReturnValue(v45);
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
    {
      v48 = (void *)objc_opt_class(v17, v47);
      v49 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138412802;
      v62 = *(double *)&v48;
      v63 = 2048;
      v64 = v17;
      v65 = 2112;
      v66 = v49;
      v50 = v48;
      _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "Enqueued action %@ (0x%lX). Current actions : %@", buf, 0x20u);

    }
    objc_destroyWeak(&v58);
    objc_destroyWeak(&v57);
    objc_destroyWeak(&from);
    objc_destroyWeak(&location);
    goto LABEL_17;
  }
  v51 = sub_1000031B8();
  v52 = objc_claimAutoreleasedReturnValue(v51);
  if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v62 = v23;
    _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "Throttling registers for %f", buf, 0xCu);
  }

LABEL_17:
}

void sub_10000CB80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_10000CBC0(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  _QWORD block[4];
  id v6;
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "metadataModsQueue"));
  if (v3)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10000CC64;
    block[3] = &unk_1002C13E8;
    v6 = WeakRetained;
    v7 = v2;
    dispatch_sync(v3, block);

  }
}

void sub_10000CC64(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v5 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v4);
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    v9 = 138412802;
    v10 = v5;
    v11 = 2048;
    v12 = v6;
    v13 = 2112;
    v14 = v7;
    v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Completed action %@ (0x%lX). Current actions : %@", (uint8_t *)&v9, 0x20u);

  }
}

void sub_10000CDCC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void **v10;
  uint64_t v11;
  void (*v12)(uint64_t, void *, uint64_t, _BYTE *);
  void *v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t);
  id v21;
  uint8_t buf[4];
  void *v23;
  __int16 v24;
  uint64_t v25;

  v16 = 0;
  v17 = &v16;
  v18 = 0x3032000000;
  v19 = sub_10000C660;
  v20 = sub_10000C670;
  v21 = 0;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "weakActions"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allObjects"));

  v10 = _NSConcreteStackBlock;
  v11 = 3221225472;
  v12 = sub_10000CF88;
  v13 = &unk_1002C1438;
  v14 = *(id *)(a1 + 40);
  v15 = &v16;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", &v10);
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7 = (void *)objc_opt_class(v17[5], v6);
    v8 = v17[5];
    *(_DWORD *)buf = 138412546;
    v23 = v7;
    v24 = 2048;
    v25 = v8;
    v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Cancelling action %@ (0x%lX)", buf, 0x16u);

  }
  objc_msgSend((id)v17[5], "cancel", v10, v11, v12, v13);

  _Block_object_dispose(&v16, 8);
}

void sub_10000CF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000CF88(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "actionId"));
  v8 = *(void **)(a1 + 32);

  if (v7 == v8)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_10000D074(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "actionExecutionQueue"));
  objc_msgSend(v1, "cancelAllOperations");

}

id sub_10000D11C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int v8;
  uint64_t v9;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 40);
    v8 = 134217984;
    v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "ActionManager operation count %lu", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(a1 + 40);
  if (!v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
    objc_msgSend(v6, "endTransaction:", CFSTR("ActionManagerTransaction"));
    goto LABEL_7;
  }
  if ((objc_msgSend(*(id *)(a1 + 32), "operationTransactionActive") & 1) == 0)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
    objc_msgSend(v6, "beginTransaction:", CFSTR("ActionManagerTransaction"));
LABEL_7:

  }
  return objc_msgSend(*(id *)(a1 + 32), "setOperationTransactionActive:", v5 != 0);
}

void sub_10000E9A8(id a1)
{
  FMDAbsintheV3SigningInterface *v1;
  void *v2;

  v1 = objc_alloc_init(FMDAbsintheV3SigningInterface);
  v2 = (void *)qword_1003063C0;
  qword_1003063C0 = (uint64_t)v1;

}

NSDictionary *__cdecl sub_10000EB44(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  const __CFString *v15;
  int v17;
  void *v18;
  __int16 v19;
  void *v20;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMDAbsintheV3SigningInterface pscSUIURL](FMDAbsintheV3SigningInterface, "pscSUIURL"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "URLByDeletingLastPathComponent"));
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v17 = 138412546;
    v18 = v3;
    v19 = 2112;
    v20 = v2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Reading PSC.sui Folder %@, file %@", (uint8_t *)&v17, 0x16u);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "path"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "attributesOfItemAtPath:error:", v7, 0));

  if (v8)
  {
    objc_msgSend(v1, "fm_safeSetObject:forKey:", v8, CFSTR("PSCFileAttributes"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "absoluteString"));
    v10 = CFSTR("PSCFileURL");
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "absoluteString"));
    v10 = CFSTR("PSCFileNotFound");
  }
  objc_msgSend(v1, "fm_safeSetObject:forKey:", v9, v10);

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "path"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "attributesOfItemAtPath:error:", v12, 0));

  if (v13)
  {
    objc_msgSend(v1, "fm_safeSetObject:forKey:", v13, CFSTR("PSCFolderAttributes"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "absoluteString"));
    v15 = CFSTR("PSCFolderURL");
  }
  else
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "absoluteString"));
    v15 = CFSTR("PSCFolderNotFound");
  }
  objc_msgSend(v1, "fm_safeSetObject:forKey:", v14, v15);

  return (NSDictionary *)v1;
}

void sub_10000EF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000EF38(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10000EF48(uint64_t a1)
{

}

void sub_10000EF50(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void **v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v10 = a2;
  v5 = a3;
  if (v10)
  {
    v6 = (void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    v7 = v10;
  }
  else
  {
    v6 = (void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v7 = v5;
  }
  v8 = v7;
  v9 = *v6;
  *v6 = v8;

  objc_msgSend(*(id *)(a1 + 32), "signal");
}

void sub_10000F108(uint64_t a1)
{
  FMDAbsintheV3SigningSession *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;

  v2 = objc_alloc_init(FMDAbsintheV3SigningSession);
  -[FMDAbsintheV3SigningSession setActivationLockRequestUUID:](v2, "setActivationLockRequestUUID:", *(_QWORD *)(a1 + 32));
  -[FMDAbsintheV3SigningSession setCause:](v2, "setCause:", *(_QWORD *)(a1 + 40));
  -[FMDAbsintheV3SigningSession setMode:](v2, "setMode:", *(_QWORD *)(a1 + 72) != 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "serverInteractionController"));
  -[FMDAbsintheV3SigningSession establishSessionWithServerInteractionController:](v2, "establishSessionWithServerInteractionController:", v3);

  v4 = *(_QWORD *)(a1 + 56);
  v8 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[FMDAbsintheV3SigningSession signatureForData:error:](v2, "signatureForData:error:", v4, &v8));
  v6 = v8;
  v7 = *(_QWORD *)(a1 + 64);
  if (v7)
    (*(void (**)(uint64_t, id, void *))(v7 + 16))(v7, v6, v5);

}

void sub_10000FD0C(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[7];
  _QWORD v18[7];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull objectType](NSNull, "objectType"));
  v17[0] = v1;
  v18[0] = objc_opt_class(NSNull, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL objectType](NSURL, "objectType"));
  v17[1] = v3;
  v18[1] = objc_opt_class(NSURL, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate objectType](NSDate, "objectType"));
  v17[2] = v5;
  v18[2] = objc_opt_class(NSDate, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString objectType](NSString, "objectType"));
  v17[3] = v7;
  v18[3] = objc_opt_class(NSString, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber objectType](NSNumber, "objectType"));
  v17[4] = v9;
  v18[4] = objc_opt_class(NSNumber, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray objectType](NSArray, "objectType"));
  v17[5] = v11;
  v18[5] = objc_opt_class(NSArray, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary objectType](NSDictionary, "objectType"));
  v17[6] = v13;
  v18[6] = objc_opt_class(NSDictionary, v14);
  v15 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v18, v17, 7));
  v16 = (void *)qword_1003063D0;
  qword_1003063D0 = v15;

}

uint64_t sub_1000107B4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_1000107C8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_1000107DC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setCurrentTask:", 0);
}

void sub_100010A10(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  uint8_t v9[16];

  v4 = a3;
  v5 = sub_1000533BC();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  if (v4)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_100225B70(v4, v7);

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentTask"));
    objc_msgSend(v8, "finishWithError:", v4);
  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Finished evaluating policy.", v9, 2u);
    }

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentTask"));
    objc_msgSend(v8, "finishWithNoResult");
  }

}

void sub_100011874(id a1)
{
  id v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;

  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    sub_100225C30(v2, v3, v4, v5, v6, v7, v8, v9);

  v10 = -[FMDLostModeManager initSingleton]([FMDLostModeManager alloc], "initSingleton");
  v11 = (void *)qword_1003063E0;
  qword_1003063E0 = (uint64_t)v10;

}

NSDictionary *__cdecl sub_1000119F0(id a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMDPreferencesMgr lostModeInfo](FMDPreferencesMgr, "lostModeInfo"));
  if (v2)
    objc_msgSend(v1, "addEntriesFromDictionary:", v2);

  return (NSDictionary *)v1;
}

void sub_1000123D8(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("com.apple.AOSNotification.LostModeDisabled"), 0);

}

void sub_100012534(id a1)
{
  FMDExtExtensionsDataSource *v1;
  void *v2;

  v1 = objc_alloc_init(FMDExtExtensionsDataSource);
  v2 = (void *)qword_1003063F0;
  qword_1003063F0 = (uint64_t)v1;

}

void sub_100012634(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10001267C(id a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithArray:", &off_1002D8EA0);
  objc_msgSend(v3, "addObject:", CFSTR("com.apple.icloud.FindMyDevice.FindMyExtensionContainer.FMDMagSafeExtension"));
  v1 = objc_claimAutoreleasedReturnValue(+[NSSet setWithSet:](NSSet, "setWithSet:", v3));
  v2 = (void *)qword_100306400;
  qword_100306400 = v1;

}

void sub_10001285C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  NSObject *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  void *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  id v19;
  NSObject *v20;
  _BOOL4 v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  _QWORD block[4];
  id v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint8_t v35[128];
  uint8_t buf[4];
  id v37;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = sub_1000530AC();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v37 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "error finding extensions %@", buf, 0xCu);
    }
  }
  else
  {
    if (!objc_msgSend(v5, "count"))
      goto LABEL_22;
    v9 = sub_1000530AC();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v37 = v5;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "all extensions %@", buf, 0xCu);
    }

    v33 = 0u;
    v34 = 0u;
    v31 = 0u;
    v32 = 0u;
    v8 = v5;
    v11 = -[NSObject countByEnumeratingWithState:objects:count:](v8, "countByEnumeratingWithState:objects:count:", &v31, v35, 16);
    if (v11)
    {
      v12 = v11;
      v26 = 0;
      v27 = v5;
      v13 = *(_QWORD *)v32;
      do
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(_QWORD *)v32 != v13)
            objc_enumerationMutation(v8);
          v15 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)i);
          v16 = (void *)objc_claimAutoreleasedReturnValue(+[FMDExtExtensionsDataSource _allowedExtensionsIDForDataSource](FMDExtExtensionsDataSource, "_allowedExtensionsIDForDataSource", v26, v27));
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "identifier"));
          v18 = objc_msgSend(v16, "containsObject:", v17);

          v19 = sub_1000530AC();
          v20 = objc_claimAutoreleasedReturnValue(v19);
          v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);
          if (v18)
          {
            if (v21)
            {
              *(_DWORD *)buf = 138412290;
              v37 = v15;
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "found extension %@", buf, 0xCu);
            }

            objc_msgSend(*(id *)(a1 + 32), "_setCompleteionBlocksForExtension:", v15);
            v20 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "extensions"));
            v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "identifier"));
            -[NSObject setObject:forKey:](v20, "setObject:forKey:", v15, v22);

          }
          else if (v21)
          {
            *(_DWORD *)buf = 138412290;
            v37 = v15;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "skipping extension %@", buf, 0xCu);
          }

        }
        v12 = -[NSObject countByEnumeratingWithState:objects:count:](v8, "countByEnumeratingWithState:objects:count:", &v31, v35, 16);
      }
      while (v12);
      v6 = v26;
      v5 = v27;
    }
  }

LABEL_22:
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100012BBC;
  block[3] = &unk_1002C16D8;
  v23 = *(id *)(a1 + 40);
  v29 = v6;
  v30 = v23;
  v24 = qword_100306410;
  v25 = v6;
  if (v24 != -1)
    dispatch_once(&qword_100306410, block);

}

uint64_t sub_100012BBC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = sub_1000530AC();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Extension data source calling completion block", v5, 2u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_100012D3C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v2 = sub_1000530AC();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = 138412290;
    v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#ext extension request completed for %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_100012DE0(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v2 = sub_1000530AC();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = 138412290;
    v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#ext extension request interrupted for %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_100012E84(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v2 = sub_1000530AC();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = 138412290;
    v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "extension request cancelled for %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_1000130BC(id a1, NSDictionary *a2, NSError *a3)
{
  NSError *v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  uint8_t v7[16];

  v3 = a3;
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_100225DC4((uint64_t)v3, v6);
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "OpenURL completed.", v7, 2u);
  }

}

void sub_100013E20(id a1)
{
  id v1;
  NSObject *v2;
  FMDBLEStateOwner *v3;
  void *v4;

  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    sub_100225EAC(v2);

  v3 = objc_alloc_init(FMDBLEStateOwner);
  v4 = (void *)qword_100306418;
  qword_100306418 = (uint64_t)v3;

}

void sub_100013F44(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_monitorWatchBLEStatus");
  objc_msgSend(WeakRetained, "_updateBLEStatus");

}

void sub_10001411C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100014158(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  uint8_t v5[16];

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BluetoothAvailabilityChangedNotification", v5, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_updateBLEStatus");

}

void sub_1000141D4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  uint8_t v5[16];

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BluetoothStateChangedNotification", v5, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_updateBLEStatus");

}

void sub_1000143D4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_updateBLEStatus");

}

void sub_100014A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100014A20(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100014A30(uint64_t a1)
{

}

void sub_100014A38(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 8));
}

void sub_10001508C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000150A4(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  unsigned int v8;
  id v9;

  v9 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "macAddress"));
  v8 = objc_msgSend(v7, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v8)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_100015EB8(id a1)
{
  FMDDaemon *v1;
  void *v2;

  v1 = objc_alloc_init(FMDDaemon);
  v2 = (void *)qword_100306428;
  qword_100306428 = (uint64_t)v1;

}

NSDictionary *__cdecl sub_100015FAC(id a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  const __CFString *v7;
  CFDictionaryRef v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  _QWORD v15[5];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v15[0] = kFMDPrefDomain;
  v15[1] = kFMDNotBackedUpPrefDomain;
  v15[2] = kFMDPublicNotBackedUpPrefDomain;
  v15[3] = kFMDWatchPrefDomain;
  v15[4] = kFMDWatchNotBackedUpPrefDomain;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v15, 5));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(const __CFString **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i);
        v8 = CFPreferencesCopyMultiple(0, v7, kCFPreferencesCurrentUser, kCFPreferencesAnyHost);
        objc_msgSend(v1, "fm_safeSetObject:forKey:", v8, v7, (_QWORD)v10);

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

  return (NSDictionary *)v1;
}

void sub_100016580(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "apsHandlers", 0));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v6);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "apsHandlers"));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", v7));

        objc_msgSend(v9, "resumeRegistrations");
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

}

void sub_100016778(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  int v7;
  id v8;
  __int16 v9;
  void *v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "apsHandlerForEnvironment:", v3));
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = 138412546;
    v8 = v3;
    v9 = 2112;
    v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Checked in APS mach handlder %@:%@", (uint8_t *)&v7, 0x16u);
  }

}

void sub_100016974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100016990(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000169A0(uint64_t a1)
{

}

void sub_1000169A8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "apsHandlers"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v6 = objc_alloc((Class)FMAPSHandler);
    v7 = *(_QWORD *)(a1 + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("com.apple.icloud.findmydeviced.aps-"), "stringByAppendingString:", v7));
    v9 = objc_msgSend(v6, "initWithEnvironmentName:launchOnDemandPort:", v7, v8);
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    if ((objc_msgSend(*(id *)(a1 + 32), "startupComplete") & 1) == 0)
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "suspendRegistrations");
    v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "apsHandlers"));
    objc_msgSend(v13, "setObject:forKeyedSubscript:", v12, *(_QWORD *)(a1 + 40));

  }
}

void sub_100016C1C(id a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  _QWORD v31[4];
  id v32;
  id v33;
  _QWORD v34[21];
  _QWORD v35[21];
  _QWORD v36[6];

  v36[0] = CFSTR("AppleLanguagePreferencesChangedNotification");
  v36[1] = CFSTR("AppleDatePreferencesChangedNotification");
  v36[2] = CFSTR("AppleTimePreferencesChangedNotification");
  v36[3] = CFSTR("AppleNumberPreferencesChangedNotification");
  v36[4] = CFSTR("AppleKeyboardsPreferencesChangedNotification");
  v36[5] = CFSTR("com.apple.language.changed");
  v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v36, 6));
  v34[0] = MCPasscodeChangedNotification;
  v30 = objc_msgSend(&stru_1002C18F8, "copy");
  v35[0] = v30;
  v34[1] = MCAllowPasscodeModificationChangedNotification;
  v28 = objc_msgSend(&stru_1002C1918, "copy");
  v35[1] = v28;
  v34[2] = CFSTR("com.apple.locationd.authorization");
  v27 = objc_msgSend(&stru_1002C1938, "copy");
  v35[2] = v27;
  v34[3] = v29;
  v26 = objc_msgSend(&stru_1002C1958, "copy");
  v35[3] = v26;
  v34[4] = CFSTR("com.apple.purplebuddy.setupdone");
  v25 = objc_msgSend(&stru_1002C1978, "copy");
  v35[4] = v25;
  v34[5] = NRPairedDeviceRegistryDeviceDidPairDarwinNotification;
  v24 = objc_msgSend(&stru_1002C1998, "copy");
  v35[5] = v24;
  v34[6] = NRPairedDeviceRegistryDeviceDidUnpairDarwinNotification;
  v23 = objc_msgSend(&stru_1002C19B8, "copy");
  v35[6] = v23;
  v34[7] = kLockdownNotificationActivationStateChanged;
  v22 = objc_msgSend(&stru_1002C19D8, "copy");
  v35[7] = v22;
  v34[8] = CFSTR("com.apple.bluetooth.connection");
  v21 = objc_msgSend(&stru_1002C19F8, "copy");
  v35[8] = v21;
  v34[9] = CFSTR("com.apple.bluetooth.pairing");
  v20 = objc_msgSend(&stru_1002C1A18, "copy");
  v35[9] = v20;
  v34[10] = SPAccessoryDidPairNotification;
  v19 = objc_msgSend(&stru_1002C1A38, "copy");
  v35[10] = v19;
  v34[11] = CFSTR("com.apple.icloud.findmydeviced.findkit.magSafe.added");
  v18 = objc_msgSend(&stru_1002C1A58, "copy");
  v35[11] = v18;
  v34[12] = CFSTR("com.apple.icloud.findmydeviced.findkit.magSafe.removed");
  v1 = objc_msgSend(&stru_1002C1A78, "copy");
  v35[12] = v1;
  v34[13] = CFSTR("com.apple.icloud.findmydeviced.findkit.magSafe.attach");
  v2 = objc_msgSend(&stru_1002C1A98, "copy");
  v35[13] = v2;
  v34[14] = CFSTR("com.apple.icloud.findmydeviced.findkit.magSafe.detach");
  v3 = objc_msgSend(&stru_1002C1AB8, "copy");
  v35[14] = v3;
  v34[15] = CFSTR("com.apple.accessories.connection.passedMFi4Auth");
  v4 = objc_msgSend(&stru_1002C1AD8, "copy");
  v35[15] = v4;
  v34[16] = CFSTR("com.apple.icloud.FindMy.addMagSafeAccessory");
  v5 = objc_msgSend(&stru_1002C1AF8, "copy");
  v35[16] = v5;
  v34[17] = CFSTR("com.apple.accessories.connection.MFi4AccessoryDisconnected");
  v6 = objc_msgSend(&stru_1002C1B18, "copy");
  v35[17] = v6;
  v34[18] = CFSTR("com.apple.locationd/Prefs");
  v7 = objc_msgSend(&stru_1002C1B38, "copy");
  v35[18] = v7;
  v34[19] = CFSTR("com.apple.system.hostname");
  v8 = objc_msgSend(&stru_1002C1B58, "copy");
  v35[19] = v8;
  v34[20] = CFSTR("com.apple.icloud.searchparty.selfbeaconchanged");
  v9 = objc_msgSend(&stru_1002C1B78, "copy");
  v35[20] = v9;
  v10 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v35, v34, 21));
  v11 = (void *)qword_100306438;
  qword_100306438 = v10;

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v13 = (void *)qword_100306438;
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_100017814;
  v31[3] = &unk_1002C1BC8;
  v32 = v12;
  v33 = v29;
  v14 = v29;
  v15 = v12;
  objc_msgSend(v13, "enumerateKeysAndObjectsUsingBlock:", v31);
  v16 = objc_msgSend(v15, "copy");
  v17 = (void *)qword_100306438;
  qword_100306438 = (uint64_t)v16;

}

void sub_1000170F8(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FMDDevicePasscodeMayHaveChangedNotification"), 0);

}

void sub_10001713C(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FMDAllowPasscodeModificationChangedNotification"), 0);

}

void sub_100017180(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FMDLocationServiceAuthorizationChangedNotification"), 0);

}

void sub_1000171C4(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FMDLocaleChangedNotification"), 0);

}

void sub_100017208(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("purplebuddy.setupdone"), 0);

}

void sub_10001724C(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("nano.devicedidpair"), 0);

}

void sub_100017290(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("nano.devicedidunpair"), 0);

}

void sub_1000172D4(id a1)
{
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  id v5;
  NSObject *v6;
  id v7;
  NSObject *v8;
  void *v9;
  id v10;
  uint8_t buf[4];
  void *v12;

  v10 = 0;
  v1 = (void *)MAEGetActivationStateWithError(&v10);
  v2 = v10;
  if (v2)
  {
    v3 = sub_1000031B8();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1002260F0();

  }
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v12 = v1;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Received ActivationStateChanged. Current activation state : %@", buf, 0xCu);
  }

  if (objc_msgSend(v1, "isEqualToString:", kMAActivationStateActivated))
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Device is activated. Deleting any post wipe lost mode info...", buf, 2u);
    }

    +[FMDPreferencesMgr setFMIPWipeLostModeInfo:](FMDPreferencesMgr, "setFMIPWipeLostModeInfo:", 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[FMDLocalActivationLockInfoManager sharedInstance](FMDLocalActivationLockInfoManager, "sharedInstance"));
    objc_msgSend(v9, "clearAllState");

  }
}

void sub_100017454(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FMIPDeviceDidConnectBluetoothDevice"), 0);

}

void sub_100017498(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FMIPDeviceDidPairBluetoothDevice"), 0);

}

void sub_1000174DC(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("kFMDAccessoryDidPairLocalNotification"), 0);

}

void sub_100017520(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("com.apple.icloud.findmydeviced.findkit.magSafe.added"), 0);

}

void sub_100017564(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("com.apple.icloud.findmydeviced.findkit.magSafe.removed"), 0);

}

void sub_1000175A8(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("com.apple.icloud.findmydeviced.findkit.magSafe.attach"), 0);

}

void sub_1000175EC(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("com.apple.icloud.findmydeviced.findkit.magSafe.detach"), 0);

}

void sub_100017630(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("com.apple.accessories.connection.passedMFi4Auth"), 0);

}

void sub_100017674(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("com.apple.icloud.FindMy.addMagSafeAccessory"), 0);

}

void sub_1000176B8(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("com.apple.accessories.connection.MFi4AccessoryDisconnected"), 0);

}

void sub_1000176FC(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FMDLocationServicesStateChangedNotification"), 0);

}

void sub_100017740(id a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  uint8_t v4[16];

  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Received darwin notification for host name change", v4, 2u);
  }

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v3, "postNotificationName:object:", CFSTR("FMDDeviceNameMayHaveChangedNotification"), 0);

}

void sub_1000177D0(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("kFMDDeviceSPSelfBeaconChangeNotification"), 0);

}

void sub_100017814(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  id v12;

  v5 = a2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000178E0;
  v9[3] = &unk_1002C1BA0;
  v10 = a3;
  v11 = v5;
  v12 = *(id *)(a1 + 40);
  v6 = v5;
  v7 = v10;
  v8 = objc_msgSend(v9, "copy");
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v8, v6);

}

void sub_1000178E0(uint64_t a1)
{
  void (**v2)(void);
  __CFString *v3;
  __CFString *v4;
  void *v5;
  FMDEventLoggerEventScalar *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  v2[2]();
  v3 = (__CFString *)*(id *)(a1 + 40);
  if (objc_msgSend(*(id *)(a1 + 40), "isEqual:", *(_QWORD *)(a1 + 48)))
  {
    v4 = CFSTR("FMDLocaleChangedNotification");

    v3 = v4;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("DarwinEvent.%@"), v3));
  v6 = -[FMDEventLoggerEventScalar initWithEventName:]([FMDEventLoggerEventScalar alloc], "initWithEventName:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLogger sharedLogger](FMDEventLogger, "sharedLogger"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLoggerFacilityDataPeek facilityName](FMDEventLoggerFacilityDataPeek, "facilityName"));
  v10 = v8;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v10, 1));
  objc_msgSend(v7, "logEvent:toFacilitiesNamed:", v6, v9);

}

void sub_100017A7C(id a1)
{
  void *v1;

  v1 = (void *)qword_100306448;
  qword_100306448 = (uint64_t)&__NSDictionary0__struct;

}

void sub_100018400()
{
  void *v0;
  void *v1;
  unsigned int v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  id v7;
  NSObject *v8;
  id v9;
  uint8_t buf[4];
  void *v11;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[FMPreferencesUtil dictionaryForKey:inDomain:](FMPreferencesUtil, "dictionaryForKey:inDomain:", CFSTR("FMIPWipeLostModeInfo"), kFMDPostWipePrefDomain));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "objectForKey:", CFSTR("lostModeEnabled")));
  v2 = objc_msgSend(v1, "BOOLValue");

  if (v2)
  {
    v9 = 0;
    v3 = (void *)MAEGetActivationStateWithError(&v9);
    v4 = v9;
    if (v4)
    {
      v5 = sub_1000031B8();
      v6 = objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1002260F0();

    }
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Doing fallback cleanup of postwipe preferences (notification).  Activation state: [%@]", buf, 0xCu);
    }

    +[FMDPreferencesMgr setFMIPWipeLostModeInfo:](FMDPreferencesMgr, "setFMIPWipeLostModeInfo:", 0);
  }

}

void sub_100018EC8(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  WipeAction *v5;
  void *v6;
  id v7;
  int v8;
  void *v9;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fm_logID"));
    v8 = 138412290;
    v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Making %@ inactive because wipe was received", (uint8_t *)&v8, 0xCu);

  }
  objc_msgSend(*(id *)(a1 + 40), "makeProviderInactive");
  v5 = -[WipeAction initWithProvider:]([WipeAction alloc], "initWithProvider:", *(_QWORD *)(a1 + 40));
  -[WipeAction setMaxDelayInterval:](v5, "setMaxDelayInterval:", *(double *)(a1 + 48));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[ActionManager sharedManager](ActionManager, "sharedManager"));
  v7 = objc_msgSend(v6, "enqueueAction:", v5);

}

void sub_100019030(id a1)
{
  FMDStartupRegisterManager *v1;
  void *v2;

  v1 = objc_alloc_init(FMDStartupRegisterManager);
  v2 = (void *)qword_100306458;
  qword_100306458 = (uint64_t)v1;

}

void sub_10001928C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000192A4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v2, "count") != 0;

}

void sub_100019654(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info"));
  objc_msgSend(v2, "removeObjectForKey:", CFSTR("qcPendingEpoch"));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "infoAtStartup"));
  v4 = objc_msgSend(v3, "count");

  if (v4)
  {
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "infoAtStartup", 0));
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v17;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v17 != v8)
            objc_enumerationMutation(v5);
          v10 = *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v9);
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info"));
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", v10));

          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "infoAtStartup"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", v10));

          if (v12)
          {
            if (objc_msgSend(v12, "isEqualToNumber:", v14))
            {
              v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info"));
              objc_msgSend(v15, "removeObjectForKey:", v10);

            }
          }

          v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      }
      while (v7);
    }

    objc_msgSend(*(id *)(a1 + 32), "setInfoAtStartup:", 0);
    objc_msgSend(*(id *)(a1 + 32), "_saveInfo");
  }
}

id sub_100019890(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  objc_msgSend(*(id *)(a1 + 32), "setInfo:", v2);

  return objc_msgSend(*(id *)(a1 + 32), "_saveInfo");
}

id sub_100019990(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info"));
  objc_msgSend(v2, "setObject:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

  return objc_msgSend(*(id *)(a1 + 32), "_saveInfo");
}

id sub_100019A64(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info"));
  objc_msgSend(v2, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 32), "_saveInfo");
}

void sub_100019C08(id a1)
{
  FMDExtConfigurationRegistry *v1;
  void *v2;

  v1 = objc_alloc_init(FMDExtConfigurationRegistry);
  v2 = (void *)qword_100306468;
  qword_100306468 = (uint64_t)v1;

}

id sub_100019EA4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_initializeFromDisk");
}

void sub_10001A3F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

id sub_10001A424(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "fetchSupportedAccessoryTypes");
}

void sub_10001A42C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "listner"));
  objc_msgSend(v1, "supportedAccessoryTypesUpdated");

}

void sub_10001AAC0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  NSObject *v23;
  dispatch_queue_global_t global_queue;
  NSObject *v25;
  _QWORD block[5];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t v31[128];
  uint8_t buf[4];
  id v33;
  __int16 v34;
  void *v35;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("version")));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "version"));
  if (!v3
    || (v4 = (void *)v3,
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "version")),
        v6 = objc_msgSend(v2, "compare:", v5),
        v5,
        v4,
        v6))
  {
    objc_msgSend(*(id *)(a1 + 40), "setVersion:", v2);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("accessoryTypes")));
    v8 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", v7);
    objc_msgSend(*(id *)(a1 + 40), "setSupportedAccessories:", v8);

    v9 = sub_1000530AC();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "version"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "supportedAccessories"));
      *(_DWORD *)buf = 138412546;
      v33 = v11;
      v34 = 2112;
      v35 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "SupportedAccessoryTypes updated with version = %@ and accessories = %@", buf, 0x16u);

    }
    objc_msgSend(*(id *)(a1 + 40), "_updateDisk");
    v13 = objc_alloc_init((Class)NSMutableArray);
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    v30 = 0u;
    v14 = v7;
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v28;
      do
      {
        v18 = 0;
        do
        {
          if (*(_QWORD *)v28 != v17)
            objc_enumerationMutation(v14);
          v19 = *(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)v18);
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "configurations"));
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "objectForKeyedSubscript:", v19));

          if (!v21)
            objc_msgSend(v13, "addObject:", v19);
          v18 = (char *)v18 + 1;
        }
        while (v16 != v18);
        v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
      }
      while (v16);
    }

    v22 = sub_1000530AC();
    v23 = objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v33 = v13;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "accessoryTypesNeedConfig %@", buf, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 40), "fetchConfigForAccessoryTypes:", v13);
    global_queue = dispatch_get_global_queue(0, 0);
    v25 = objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001ADF0;
    block[3] = &unk_1002C1328;
    block[4] = *(_QWORD *)(a1 + 40);
    dispatch_async(v25, block);

  }
}

void sub_10001ADF0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "listner"));
  objc_msgSend(v1, "supportedAccessoryTypesUpdated");

}

void sub_10001AF78(id *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  mach_header_64 *v4;
  const __CFString *v5;
  const __CFString *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  unsigned int v15;
  FMDExtAccessoryConfiguration *v16;
  const __CFString *v17;
  const __CFString *v18;
  mach_header_64 *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  unsigned __int8 v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  dispatch_queue_global_t global_queue;
  NSObject *v32;
  id v33;
  uint64_t v34;
  id obj;
  _QWORD block[5];
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint8_t buf[4];
  void *v44;
  _BYTE v45[128];

  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  obj = a1[4];
  v1 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v45, 16);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)v40;
    v4 = (mach_header_64 *)&_mh_execute_header;
    v5 = CFSTR("statusCode");
    v6 = CFSTR("200");
    v34 = *(_QWORD *)v40;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v40 != v3)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * (_QWORD)v7);
        v9 = sub_1000530AC();
        v10 = objc_claimAutoreleasedReturnValue(v9);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v44 = v8;
          _os_log_impl(v4, v10, OS_LOG_TYPE_DEFAULT, "received configuration %@", buf, 0xCu);
        }

        v11 = sub_1000530AC();
        v12 = objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", v5));
          *(_DWORD *)buf = 138412290;
          v44 = v13;
          _os_log_impl(v4, v12, OS_LOG_TYPE_DEFAULT, "received statusCode %@", buf, 0xCu);

        }
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", v5));
        v15 = objc_msgSend(v14, "isEqualToString:", v6);

        if (v15)
        {
          v16 = -[FMDExtAccessoryConfiguration initWithConfigurationInfo:]([FMDExtAccessoryConfiguration alloc], "initWithConfigurationInfo:", v8);
          if (v16)
          {
            v17 = v5;
            v18 = v6;
            v19 = v4;
            v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "configurations"));
            v21 = (void *)objc_claimAutoreleasedReturnValue(-[FMDExtAccessoryConfiguration accessoryType](v16, "accessoryType"));
            v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "objectForKeyedSubscript:", v21));

            if (!v22
              || (v23 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject version](v22, "version")),
                  v24 = (void *)objc_claimAutoreleasedReturnValue(-[FMDExtAccessoryConfiguration version](v16, "version")),
                  v25 = objc_msgSend(v23, "isEqualToString:", v24),
                  v24,
                  v23,
                  (v25 & 1) == 0))
            {
              v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "configurations"));
              v27 = (void *)objc_claimAutoreleasedReturnValue(-[FMDExtAccessoryConfiguration accessoryType](v16, "accessoryType"));
              objc_msgSend(v26, "setObject:forKeyedSubscript:", v16, v27);

              v28 = a1[6];
              v29 = (void *)objc_claimAutoreleasedReturnValue(-[FMDExtAccessoryConfiguration accessoryType](v16, "accessoryType"));
              objc_msgSend(v28, "addObject:", v29);

            }
            v4 = v19;
            v6 = v18;
            v5 = v17;
            v3 = v34;
          }
          else
          {
            v30 = sub_1000530AC();
            v22 = objc_claimAutoreleasedReturnValue(v30);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              v44 = v8;
              _os_log_error_impl(v4, v22, OS_LOG_TYPE_ERROR, "Invalid configuration received %@", buf, 0xCu);
            }
          }

        }
        v7 = (char *)v7 + 1;
      }
      while (v2 != v7);
      v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v45, 16);
    }
    while (v2);
  }

  if (objc_msgSend(a1[6], "count"))
  {
    objc_msgSend(a1[5], "_updateDisk");
    global_queue = dispatch_get_global_queue(0, 0);
    v32 = objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001B35C;
    block[3] = &unk_1002C13E8;
    v33 = a1[6];
    block[4] = a1[5];
    v38 = v33;
    dispatch_async(v32, block);

  }
}

void sub_10001B35C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "listner"));
  objc_msgSend(v2, "configurationUpdated:", *(_QWORD *)(a1 + 40));

}

void sub_10001B468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001B480(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supportedAccessories"));
  if (objc_msgSend(v4, "containsObject:", *(_QWORD *)(a1 + 40)))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
  }
  else
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "defaultConfigurations"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v3 != 0;

  }
}

void sub_10001B600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001B618(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10001B628(uint64_t a1)
{

}

void sub_10001B630(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned int v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "defaultConfigurations"));
  v3 = (_QWORD *)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

  v5 = *(void **)(a1 + 32);
  if (v4)
  {
    v33 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "defaultConfigurations"));
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "supportedAccessories"));
    v10 = objc_msgSend(v9, "containsObject:", *v3);

    if (v10)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "configurations"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

      if (!v12)
      {
        v13 = sub_1000530AC();
        v14 = objc_claimAutoreleasedReturnValue(v13);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          sub_1002262B0(a1 + 40, v14, v15, v16, v17, v18, v19, v20);

      }
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "configurations"));
      v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
      v23 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v24 = *(void **)(v23 + 40);
      *(_QWORD *)(v23 + 40) = v22;

    }
    else
    {
      v25 = sub_1000530AC();
      v26 = objc_claimAutoreleasedReturnValue(v25);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        sub_100226318((uint64_t)v3, v26, v27, v28, v29, v30, v31, v32);

    }
  }
}

void sub_10001BD5C(id a1)
{
  FMDAutomationHelperFactory *v1;
  void *v2;

  v1 = objc_alloc_init(FMDAutomationHelperFactory);
  v2 = (void *)qword_100306478;
  qword_100306478 = (uint64_t)v1;

}

void sub_10001C928(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_10001CAD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_10001CAE4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "terminate");

}

void sub_10001CD0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10001CD30(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setCompletion:", *(_QWORD *)(a1 + 32));

}

id sub_10001CF0C(uint64_t a1)
{
  FMDActingRequestDecorator *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = objc_alloc_init(FMDActingRequestDecorator);
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v2, "standardDeviceContext"));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "commandContext"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "lastCompletedIntentDictionary"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("id")));

  objc_msgSend(v3, "fm_safeSetObject:forKey:", v6, CFSTR("lastCommandId"));
  return v3;
}

id sub_10001CFAC(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "deviceInfoForAccount:accessory:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40)));

  return v3;
}

void sub_10001D0C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10001D0D8(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  id v7;
  NSObject *v8;
  id v9;
  NSObject *v10;
  uint8_t v11[16];
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryIdentifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessory"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "accessoryIdentifier"));
  if (objc_msgSend(v3, "isEqual:", v5))
  {
    if (!*(_BYTE *)(a1 + 48))
    {

      goto LABEL_11;
    }
    v6 = objc_msgSend(WeakRetained, "accessoryIsConnected:", *(_QWORD *)(a1 + 32));

    if ((v6 & 1) != 0)
    {
LABEL_11:
      if ((objc_msgSend(WeakRetained, "enqueuedQC") & 1) == 0)
      {
        v9 = sub_1000031B8();
        v10 = objc_claimAutoreleasedReturnValue(v9);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "AccessoryAction enqueuing QC.", v11, 2u);
        }

        objc_msgSend(WeakRetained, "setEnqueuedQC:", 1);
        objc_msgSend(WeakRetained, "setAccessory:", *(_QWORD *)(a1 + 32));
        objc_msgSend(WeakRetained, "_enqueueQCAction");
        objc_msgSend(WeakRetained, "terminate");
      }
      goto LABEL_9;
    }
  }
  else
  {

  }
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "AccessoryAction accessory not connected - waiting.", buf, 2u);
  }

LABEL_9:
}

void sub_10001D3D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10001D3E8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  unsigned int v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryIdentifier"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessory"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "accessoryIdentifier"));
  v5 = objc_msgSend(v2, "isEqual:", v4);

  if (v5)
    objc_msgSend(WeakRetained, "terminate");

}

void sub_10001D678(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("com.apple.icloud.findmydeviced.accessoryRegisterDigestSerialQueue", 0);
  v2 = (void *)qword_1003064B0;
  qword_1003064B0 = (uint64_t)v1;

}

void sub_10001DBD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;
  uint64_t v19;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v19 - 232), 8);
  _Block_object_dispose((const void *)(v19 - 184), 8);
  _Block_object_dispose((const void *)(v19 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001DC30(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10001DC40(uint64_t a1)
{

}

void sub_10001DC48(uint64_t a1)
{
  unsigned int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;

  v2 = objc_msgSend(*(id *)(a1 + 32), "includeDeviceState");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v4 = *(_QWORD *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessory"));
  if (v2)
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "completeDeviceInfoForAccount:accessory:", v4, v5));
  else
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deviceInfoForAccount:accessory:", v4, v5));
  v7 = v6;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v6);

  v9 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 48), v8), "volatileKeysToExcludeFromRegisterDigest");
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[FMDDigestSanitizer sanitizeDictionary:withExclusionKeys:](FMDDigestSanitizer, "sanitizeDictionary:withExclusionKeys:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v10));
  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestWithDeviceInfo:", v11));
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v14 = *(void **)(v13 + 40);
  *(_QWORD *)(v13 + 40) = v12;

  if ((objc_msgSend(*(id *)(a1 + 32), "force") & 1) == 0)
  {
    if (qword_100306498
      && objc_msgSend((id)qword_100306498, "isEqualToData:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40)))
    {
      v15 = sub_1000031B8();
      v16 = objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v18 = objc_opt_class(*(_QWORD *)(a1 + 32), v17);
        v19 = *(_QWORD *)(a1 + 32);
        v20 = *(_QWORD *)(a1 + 56);
        v36 = 138412802;
        v37 = v18;
        v38 = 2048;
        v39 = v19;
        v40 = 2112;
        v41 = v20;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Not sending register with cause %@ because there is already another register with the same registration information in-progress", (uint8_t *)&v36, 0x20u);
      }

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 0;
    }
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24))
    {
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[AccessoryRegisterAction contextKeyForAccessory:](AccessoryRegisterAction, "contextKeyForAccessory:", *(_QWORD *)(a1 + 48)));
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[FMPreferencesUtil dataForKey:inDomain:](FMPreferencesUtil, "dataForKey:inDomain:", v21, kFMDNotBackedUpPrefDomain));

      v23 = (void *)objc_claimAutoreleasedReturnValue(+[AccessoryRegisterAction contextKeyForAccessory:](AccessoryRegisterAction, "contextKeyForAccessory:", *(_QWORD *)(a1 + 48)));
      v24 = (void *)objc_claimAutoreleasedReturnValue(+[AccessoryRegisterAction accessoryRegisterDigestForKey:](AccessoryRegisterAction, "accessoryRegisterDigestForKey:", v23));

      if (!v24)
      {
        v25 = (void *)objc_claimAutoreleasedReturnValue(+[AccessoryRegisterAction contextKeyForAccessory:](AccessoryRegisterAction, "contextKeyForAccessory:", *(_QWORD *)(a1 + 48)));
        +[AccessoryRegisterAction saveAccessoryRegisterDigest:forKey:](AccessoryRegisterAction, "saveAccessoryRegisterDigest:forKey:", v22, v25);

      }
      if (v22
        && objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "isEqualToData:", v22))
      {
        v26 = sub_1000031B8();
        v27 = objc_claimAutoreleasedReturnValue(v26);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          v29 = objc_opt_class(*(_QWORD *)(a1 + 32), v28);
          v30 = *(_QWORD *)(a1 + 32);
          v36 = 138412546;
          v37 = v29;
          v38 = 2048;
          v39 = v30;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) No need to register accessory, digests match.", (uint8_t *)&v36, 0x16u);
        }

        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 0;
      }

    }
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24))
  {
    objc_storeStrong((id *)&qword_100306498, *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40));
    v31 = sub_1000031B8();
    v32 = objc_claimAutoreleasedReturnValue(v31);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      v34 = objc_opt_class(*(_QWORD *)(a1 + 32), v33);
      v35 = *(_QWORD *)(a1 + 32);
      v36 = 138412546;
      v37 = v34;
      v38 = 2048;
      v39 = v35;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Set inProgressAccessoryRegisterDigest to newRegisterDigest", (uint8_t *)&v36, 0x16u);
    }

  }
}

id sub_10001E018(uint64_t a1)
{
  FMDActingRequestDecorator *v2;
  void *v3;

  v2 = objc_alloc_init(FMDActingRequestDecorator);
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator registerDeviceContextForAccount:](v2, "registerDeviceContextForAccount:", *(_QWORD *)(a1 + 32)));

  objc_msgSend(v3, "fm_safelyMapKey:toObject:", CFSTR("cause"), *(_QWORD *)(a1 + 40));
  return v3;
}

id sub_10001E078(uint64_t a1)
{
  return *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
}

id sub_10001E088(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "authId"));
  objc_msgSend(v2, "fm_safeSetObject:forKey:", v3, CFSTR("X-Apple-PrsId"));

  return v2;
}

void sub_10001E0E4(id *a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  void *v6;
  unsigned int v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  id v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  NSObject *v19;
  _QWORD block[4];
  id v21;
  id v22;
  id v23;
  _QWORD v24[4];
  id v25;
  id v26;
  id v27;
  _QWORD v28[4];
  NSObject *v29;
  id v30;
  id v31;
  uint8_t buf[4];
  void *v33;
  __int16 v34;
  id v35;
  __int16 v36;
  void *v37;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 7);
  v5 = v3;
  if ((objc_msgSend(v5, "willRetry") & 1) == 0)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "httpResponseError"));
    if (v6
      || (uint64_t)objc_msgSend(v5, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v5, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v5, "cancelled") & 1) == 0)
    {
      v15 = sub_1000031B8();
      v16 = objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "fm_logID"));
        *(_DWORD *)buf = 138412546;
        v33 = v17;
        v34 = 2048;
        v35 = objc_msgSend(v5, "httpResponseStatus");
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", buf, 0x16u);

      }
      v18 = objc_claimAutoreleasedReturnValue(+[AccessoryRegisterAction sharedAccessoryRegisterDigestSerialQueue](AccessoryRegisterAction, "sharedAccessoryRegisterDigestSerialQueue"));
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_10001E4A8;
      v28[3] = &unk_1002C1BA0;
      v19 = v5;
      v29 = v19;
      v30 = a1[4];
      v31 = WeakRetained;
      dispatch_async(v18, v28);

      if (-[NSObject httpResponseStatus](v19, "httpResponseStatus") == (id)200)
      {
        v24[0] = _NSConcreteStackBlock;
        v24[1] = 3221225472;
        v24[2] = sub_10001E630;
        v24[3] = &unk_1002C1BA0;
        v25 = a1[5];
        v26 = a1[4];
        v27 = a1[6];
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v24);

      }
      v9 = v29;
      goto LABEL_12;
    }
    v7 = objc_msgSend(v5, "cancelled");
    v8 = sub_1000031B8();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v10)
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "fm_logID"));
        *(_DWORD *)buf = 138412290;
        v33 = v11;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_11:

      }
    }
    else if (v10)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "fm_logID"));
      v12 = objc_msgSend(v5, "httpResponseStatus");
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "httpResponseError"));
      *(_DWORD *)buf = 138412802;
      v33 = v11;
      v34 = 2048;
      v35 = v12;
      v36 = 2112;
      v37 = v13;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_11;
    }
LABEL_12:

    v14 = objc_claimAutoreleasedReturnValue(+[AccessoryRegisterAction sharedAccessoryRegisterDigestSerialQueue](AccessoryRegisterAction, "sharedAccessoryRegisterDigestSerialQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001E6A0;
    block[3] = &unk_1002C1BA0;
    v21 = v5;
    v22 = WeakRetained;
    v23 = v21;
    dispatch_async(v14, block);

    objc_msgSend(WeakRetained, "terminate");
  }

}

void sub_10001E4A8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;

  v2 = qword_100306498;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestData"));

  if ((void *)v2 == v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestData"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[AccessoryRegisterAction contextKeyForAccessory:](AccessoryRegisterAction, "contextKeyForAccessory:", *(_QWORD *)(a1 + 40)));
    +[AccessoryRegisterAction saveAccessoryRegisterDigest:forKey:](AccessoryRegisterAction, "saveAccessoryRegisterDigest:forKey:", v4, v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestData"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestKey"));
    +[FMPreferencesUtil setData:forKey:inDomain:](FMPreferencesUtil, "setData:forKey:inDomain:", v6, v7, kFMDNotBackedUpPrefDomain);

    +[FMPreferencesUtil synchronizeDomain:](FMPreferencesUtil, "synchronizeDomain:", kFMDNotBackedUpPrefDomain);
    v8 = sub_1000031B8();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v11 = objc_opt_class(*(_QWORD *)(a1 + 48), v10);
      v12 = *(_QWORD *)(a1 + 48);
      v13 = 138412546;
      v14 = v11;
      v15 = 2048;
      v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Save newDigest to pref", (uint8_t *)&v13, 0x16u);
    }

  }
}

void sub_10001E630(_QWORD *a1)
{
  void *v1;
  id v2;
  AccessoryAction *v3;

  v3 = -[AccessoryAction initWithAccount:accessory:requiresConnectivity:serverInteractionController:]([AccessoryAction alloc], "initWithAccount:accessory:requiresConnectivity:serverInteractionController:", a1[4], a1[5], 0, a1[6]);
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[ActionManager sharedManager](ActionManager, "sharedManager"));
  v2 = objc_msgSend(v1, "enqueueAction:", v3);

}

void sub_10001E6A0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;

  v2 = qword_100306498;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestData"));

  if ((void *)v2 == v3)
  {
    v4 = (void *)qword_100306498;
    qword_100306498 = 0;

    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v8 = objc_opt_class(*(_QWORD *)(a1 + 40), v7);
      v9 = *(_QWORD *)(a1 + 40);
      v11 = objc_opt_class(*(_QWORD *)(a1 + 48), v10);
      v12 = *(_QWORD *)(a1 + 48);
      v13 = 138413058;
      v14 = v8;
      v15 = 2048;
      v16 = v9;
      v17 = 2112;
      v18 = v11;
      v19 = 2048;
      v20 = v12;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@(0x%lX)-%@(0x%lX) Set inProgressAccessoryRegisterDigest to nil", (uint8_t *)&v13, 0x2Au);
    }

  }
}

void sub_10001E8A4(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  int v6;
  void *v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AccessoryRegisterAction contextKeyForAccessory:](AccessoryRegisterAction, "contextKeyForAccessory:", *(_QWORD *)(a1 + 32)));
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138412290;
    v7 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Trying to delete register context for accessory %@", (uint8_t *)&v6, 0xCu);
  }

  +[FMPreferencesUtil removeKey:inDomain:](FMPreferencesUtil, "removeKey:inDomain:", v2, kFMDNotBackedUpPrefDomain);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[AccessoryRegisterAction contextKeyForAccessory:](AccessoryRegisterAction, "contextKeyForAccessory:", *(_QWORD *)(a1 + 32)));
  +[AccessoryRegisterAction saveAccessoryRegisterDigest:forKey:](AccessoryRegisterAction, "saveAccessoryRegisterDigest:forKey:", 0, v5);

}

uint64_t start()
{
  void *v0;
  id v1;
  NSObject *v2;
  void *v3;
  void *v4;
  uint8_t v6[16];

  v0 = objc_autoreleasePoolPush();
  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "findmydeviced has been launched", v6, 2u);
  }

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[FMDDaemon sharedInstance](FMDDaemon, "sharedInstance"));
  objc_msgSend(v3, "initialize");

  objc_autoreleasePoolPop(v0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop mainRunLoop](NSRunLoop, "mainRunLoop"));
  objc_msgSend(v4, "run");

  return 0;
}

void sub_10001EF18(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10001EF38(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  FMDStandardAsset *v22;
  void *v23;
  FMDStandardAsset *v24;
  void *v25;
  void *v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  id v30;
  __int16 v31;
  void *v32;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v5
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
  {

    goto LABEL_5;
  }
  if ((objc_msgSend(v3, "cancelled") & 1) != 0)
  {
LABEL_5:
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        *(_DWORD *)buf = 138412290;
        v28 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_10:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v11 = objc_msgSend(v3, "httpResponseStatus");
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      *(_DWORD *)buf = 138412802;
      v28 = v10;
      v29 = 2048;
      v30 = v11;
      v31 = 2112;
      v32 = v12;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_10;
    }

    goto LABEL_12;
  }
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseHeaders"));
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("Last-Modified")));

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseHeaders"));
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectForKeyedSubscript:", CFSTR("etag")));

  v24 = [FMDStandardAsset alloc];
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "asset"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "fileURL"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "asset"));
  v19 = objc_msgSend(v18, "assetType");
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "asset"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "url"));
  v22 = -[FMDStandardAsset initWithFileURL:lastModified:etag:type:url:](v24, "initWithFileURL:lastModified:etag:type:url:", v17, v26, v25, v19, v21);

  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fileLocation"));
  objc_msgSend(WeakRetained, "_saveAsset:fromLocation:", v22, v23);

LABEL_12:
  v13 = *(_QWORD *)(a1 + 32);
  if (v13)
    (*(void (**)(void))(v13 + 16))();

}

void sub_100020458(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  uint32_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v16 = *(_QWORD *)(a1 + 32);
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v16, 1);
      v17 = sub_1000031B8();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v18 = 138412546;
      v19 = v10;
      v20 = 2048;
      v21 = objc_msgSend(v3, "httpResponseStatus");
      v11 = "%@: successful with status %ld";
      v12 = v8;
      v13 = 22;
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v18 = 138412290;
        v19 = v10;
        v11 = "%@: Cancelled";
        v12 = v8;
        v13 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v18, v13);
LABEL_14:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v14 = objc_msgSend(v3, "httpResponseStatus");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v18 = 138412802;
      v19 = v10;
      v20 = 2048;
      v21 = v14;
      v22 = 2112;
      v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v18, 0x20u);

      goto LABEL_14;
    }
LABEL_15:

  }
}

void sub_1000207B8(id a1)
{
  id v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;

  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    sub_100226814(v2, v3, v4, v5, v6, v7, v8, v9);

  v10 = -[FMIPConfig initSingleton]([FMIPConfig alloc], "initSingleton");
  v11 = (void *)qword_1003064B8;
  qword_1003064B8 = (uint64_t)v10;

}

void sub_10002165C(id a1, FMDRequest *a2)
{
  FMDRequest *v2;
  void *v3;
  unsigned int v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  void *v8;
  const char *v9;
  NSObject *v10;
  uint32_t v11;
  int64_t v12;
  void *v13;
  __CFNotificationCenter *DarwinNotifyCenter;
  id v15;
  int v16;
  void *v17;
  __int16 v18;
  int64_t v19;
  __int16 v20;
  void *v21;

  v2 = a2;
  if (!-[FMDRequest willRetry](v2, "willRetry"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
    if (v3
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") < 200
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") > 399)
    {

    }
    else if (!-[FMDRequest cancelled](v2, "cancelled"))
    {
      +[FMDPreferencesMgr setNeedsLostModeExitAuth:](FMDPreferencesMgr, "setNeedsLostModeExitAuth:", 0);
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification(DarwinNotifyCenter, FMDLostModeExitAuthCompleteNotification, 0, 0, 1u);
      v15 = sub_1000031B8();
      v6 = objc_claimAutoreleasedReturnValue(v15);
      if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        goto LABEL_13;
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      v16 = 138412546;
      v17 = v8;
      v18 = 2048;
      v19 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      v9 = "%@: successful with status %ld.";
      v10 = v6;
      v11 = 22;
      goto LABEL_9;
    }
    v4 = -[FMDRequest cancelled](v2, "cancelled");
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v7)
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
        v16 = 138412290;
        v17 = v8;
        v9 = "%@: Cancelled";
        v10 = v6;
        v11 = 12;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v16, v11);
LABEL_12:

      }
    }
    else if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      v12 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      v13 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
      v16 = 138412802;
      v17 = v8;
      v18 = 2048;
      v19 = v12;
      v20 = 2112;
      v21 = v13;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_12;
    }
LABEL_13:

  }
}

void sub_1000219C8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  FMDLocation *v7;
  id v8;
  int v9;
  id v10;

  v3 = a2;
  v4 = v3;
  if (v3 && objc_msgSend(v3, "count"))
  {
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v9 = 134217984;
      v10 = objc_msgSend(v4, "count");
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Sending %ld tracked locations", (uint8_t *)&v9, 0xCu);
    }

    v7 = -[FMDLocation initWithLocation:eventType:positionType:]([FMDLocation alloc], "initWithLocation:eventType:positionType:", *(_QWORD *)(a1 + 32), 0, 255);
    objc_msgSend(*(id *)(a1 + 40), "sendTrackedLocations:withCurrentLocation:", v4, v7);
  }
  else
  {
    v8 = sub_1000031B8();
    v7 = (FMDLocation *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(&v7->super, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, &v7->super, OS_LOG_TYPE_DEFAULT, "No tracked locations available. Not sending anything", (uint8_t *)&v9, 2u);
    }
  }

}

NSDictionary *__cdecl sub_100021C9C(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_100021CD8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "deviceInfoForAccount:", v3));

  return v4;
}

void sub_100021D40(id a1, FMDRequest *a2)
{
  FMDRequest *v2;
  void *v3;
  unsigned int v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  void *v8;
  const char *v9;
  NSObject *v10;
  uint32_t v11;
  int64_t v12;
  void *v13;
  id v14;
  int v15;
  void *v16;
  __int16 v17;
  int64_t v18;
  __int16 v19;
  void *v20;

  v2 = a2;
  if (!-[FMDRequest willRetry](v2, "willRetry"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
    if (v3
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") < 200
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") > 399)
    {

    }
    else if (!-[FMDRequest cancelled](v2, "cancelled"))
    {
      v14 = sub_1000031B8();
      v6 = objc_claimAutoreleasedReturnValue(v14);
      if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        goto LABEL_13;
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      v15 = 138412546;
      v16 = v8;
      v17 = 2048;
      v18 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      v9 = "%@: successful with status %ld";
      v10 = v6;
      v11 = 22;
      goto LABEL_9;
    }
    v4 = -[FMDRequest cancelled](v2, "cancelled");
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v7)
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
        v15 = 138412290;
        v16 = v8;
        v9 = "%@: Cancelled";
        v10 = v6;
        v11 = 12;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v15, v11);
LABEL_12:

      }
    }
    else if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      v12 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      v13 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
      v15 = 138412802;
      v16 = v8;
      v17 = 2048;
      v18 = v12;
      v19 = 2112;
      v20 = v13;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v15, 0x20u);

      goto LABEL_12;
    }
LABEL_13:

  }
}

void sub_100022460(id a1)
{
  FMDLocalActivationLockInfoManager *v1;
  void *v2;

  v1 = objc_alloc_init(FMDLocalActivationLockInfoManager);
  v2 = (void *)qword_1003064C8;
  qword_1003064C8 = (uint64_t)v1;

}

void sub_10002258C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  const __CFString *v17;
  void *v18;
  int v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  __int16 v27;
  const __CFString *v28;
  __int16 v29;
  id v30;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "retrieveMaskedAppleID"));
  objc_msgSend(*(id *)(a1 + 32), "setMaskedAppleID:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "retrieveActivationLockStatus"));
  objc_msgSend(*(id *)(a1 + 32), "setActivationLockStatus:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "retrieveOfflineFindingStatus"));
  objc_msgSend(*(id *)(a1 + 32), "setOfflineFindingStatus:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "retrieveOfflineFindingInfo"));
  objc_msgSend(*(id *)(a1 + 32), "setOfflineFindingInfo:", v9);

  v10 = sub_1000031B8();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fm_logID"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "maskedAppleID"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activationLockStatus"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "offlineFindingStatus"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "offlineFindingInfo"));
    if (v16)
      v17 = CFSTR("(not-nil)");
    else
      v17 = CFSTR("(nil)");
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "offlineFindingInfo"));
    v19 = 138413570;
    v20 = v12;
    v21 = 2112;
    v22 = v13;
    v23 = 2112;
    v24 = v14;
    v25 = 2112;
    v26 = v15;
    v27 = 2112;
    v28 = v17;
    v29 = 2048;
    v30 = objc_msgSend(v18, "length");
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@ Cached local AL/SP state from persistent store. maskedAppleID %@ AL %@ OfflineFinding %@ offlineFindingInfo %@ datalen %lu", (uint8_t *)&v19, 0x3Eu);

  }
}

void sub_100022868(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  __int16 v13;
  id v14;
  __int16 v15;
  id v16;

  v5 = a2;
  v6 = a3;
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fm_logID"));
    v11 = 138412802;
    v12 = v9;
    v13 = 2112;
    v14 = v5;
    v15 = 2112;
    v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ Got BA status - %@ with reason - %@", (uint8_t *)&v11, 0x20u);

  }
  v10 = objc_msgSend(v5, "isEqualToString:", SPServiceStateEnabled);
  if ((v10 & 1) != 0 || objc_msgSend(v5, "isEqualToString:", SPServiceStateDisabled))
    objc_msgSend(*(id *)(a1 + 32), "updateOfflineFindingStatus:", v10);

}

void sub_100022A24(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned int v5;
  int v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  const __CFString *v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  const __CFString *v17;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activationLockStatus"));
  if (!v2
    || (v3 = (void *)v2,
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activationLockStatus")),
        v5 = objc_msgSend(v4, "BOOLValue"),
        v6 = *(unsigned __int8 *)(a1 + 40),
        v4,
        v3,
        v6 != v5))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
    objc_msgSend(v8, "updateActivationLockStatus:", v7);

    objc_msgSend(*(id *)(a1 + 32), "setActivationLockStatus:", v7);
    objc_msgSend(*(id *)(a1 + 32), "_postLocalActivationLockInfoChangedNotification");
    v9 = sub_1000031B8();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fm_logID"));
      v12 = (void *)v11;
      v13 = CFSTR("YES");
      if (!*(_BYTE *)(a1 + 40))
        v13 = CFSTR("NO");
      v14 = 138412546;
      v15 = v11;
      v16 = 2112;
      v17 = v13;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%@ Updating activation lock status with %@", (uint8_t *)&v14, 0x16u);

    }
  }
}

void sub_100022C24(uint64_t a1)
{
  void *v2;
  char *v3;
  int v4;
  id v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unsigned int v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  const __CFString *v18;
  int v19;
  uint64_t v20;
  __int16 v21;
  const __CFString *v22;

  if (*(_BYTE *)(a1 + 40))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
    v3 = (char *)objc_msgSend(v2, "fmipState");
    v4 = (unint64_t)(v3 - 4) < 0xFFFFFFFFFFFFFFFELL;
    if ((unint64_t)(v3 - 4) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v5 = sub_1000031B8();
      v6 = objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fm_logID"));
        v19 = 138412290;
        v20 = (uint64_t)v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@ Overriding offlineFindingStatus to NO since FMIP is OFF", (uint8_t *)&v19, 0xCu);

      }
    }

  }
  else
  {
    v4 = 0;
  }
  v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "offlineFindingStatus"));
  if (!v8
    || (v9 = (void *)v8,
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "offlineFindingStatus")),
        v11 = objc_msgSend(v10, "BOOLValue"),
        v10,
        v9,
        v4 != v11))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
    objc_msgSend(v13, "updateOfflineFindingStatus:", v12);

    objc_msgSend(*(id *)(a1 + 32), "setOfflineFindingStatus:", v12);
    objc_msgSend(*(id *)(a1 + 32), "_postLocalActivationLockInfoChangedNotification");
    v14 = sub_1000031B8();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v16 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fm_logID"));
      v17 = (void *)v16;
      v18 = CFSTR("YES");
      if (!*(_BYTE *)(a1 + 40))
        v18 = CFSTR("NO");
      v19 = 138412546;
      v20 = v16;
      v21 = 2112;
      v22 = v18;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "%@ Updating offlineFindingStatus with %@", (uint8_t *)&v19, 0x16u);

    }
  }
}

id sub_10002309C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  objc_msgSend(v2, "clearMaskedAppleID");

  objc_msgSend(*(id *)(a1 + 32), "setMaskedAppleID:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "_postLocalActivationLockInfoChangedNotification");
}

void sub_1000231BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000231D4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000231E4(uint64_t a1)
{

}

void sub_1000231EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "maskedAppleID"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1000232E8(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  dispatch_queue_global_t global_queue;
  NSObject *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;

  v2 = objc_alloc_init((Class)FMDActivationLockInfo);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "maskedAppleID"));
  objc_msgSend(v2, "setMaskedAppleID:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activationLockStatus"));
  objc_msgSend(v2, "setIsActivationLocked:", objc_msgSend(v4, "BOOLValue"));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "offlineFindingStatus"));
  objc_msgSend(v2, "setIsOfflineFindingEnabled:", objc_msgSend(v5, "BOOLValue"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[FMDRestrictedRegions sharedInstance](FMDRestrictedRegions, "sharedInstance"));
  objc_msgSend(v2, "setIsRestrictedSKU:", objc_msgSend(v6, "isRestrictedSKU"));

  objc_msgSend(v2, "setIsFindMyLPEMEnabled:", objc_msgSend(*(id *)(a1 + 32), "_readIODeviceSupportsFindMy"));
  objc_msgSend(*(id *)(a1 + 32), "_addLocalizedStrings:", v2);
  global_queue = dispatch_get_global_queue(0, 0);
  v8 = objc_claimAutoreleasedReturnValue(global_queue);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10002344C;
  v11[3] = &unk_1002C16D8;
  v9 = *(id *)(a1 + 40);
  v12 = v2;
  v13 = v9;
  v10 = v2;
  dispatch_async(v8, v11);

}

uint64_t sub_10002344C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 0);
}

void sub_100023524(uint64_t a1)
{
  void *v2;
  dispatch_queue_global_t global_queue;
  NSObject *v4;
  _QWORD block[4];
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  objc_msgSend(v2, "updateOfflineFindingInfo:", *(_QWORD *)(a1 + 40));

  objc_msgSend(*(id *)(a1 + 32), "setOfflineFindingInfo:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "_postLocalActivationLockInfoChangedNotification");
  global_queue = dispatch_get_global_queue(0, 0);
  v4 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000235D8;
  block[3] = &unk_1002C2060;
  v6 = *(id *)(a1 + 48);
  dispatch_async(v4, block);

}

uint64_t sub_1000235D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000236A0(uint64_t a1)
{
  void *v2;
  dispatch_queue_global_t global_queue;
  NSObject *v4;
  void *v5;
  dispatch_time_t v6;
  NSObject *v7;
  void *v8;
  dispatch_queue_global_t v9;
  NSObject *v10;
  _QWORD v11[4];
  id v12;
  _QWORD v13[5];
  id v14;
  _QWORD block[4];
  id v16;
  id v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_fetchOfflineFindingInfoInternal"));
  if (v2)
  {
    global_queue = dispatch_get_global_queue(0, 0);
    v4 = objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100023844;
    block[3] = &unk_1002C16D8;
    v17 = *(id *)(a1 + 40);
    v16 = v2;
    dispatch_async(v4, block);

    v5 = v17;
  }
  else if (objc_msgSend(*(id *)(a1 + 32), "_isWithinDaemonStartupThreshold"))
  {
    v6 = dispatch_time(0, 3000000000);
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeAccessQueue"));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100023858;
    v13[3] = &unk_1002C2038;
    v8 = *(void **)(a1 + 40);
    v13[4] = *(_QWORD *)(a1 + 32);
    v14 = v8;
    dispatch_after(v6, v7, v13);

    v5 = v14;
  }
  else
  {
    v9 = dispatch_get_global_queue(0, 0);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10002394C;
    v11[3] = &unk_1002C2060;
    v12 = *(id *)(a1 + 40);
    dispatch_async(v10, v11);

    v5 = v12;
  }

}

uint64_t sub_100023844(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 0);
}

void sub_100023858(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fm_logID"));
    v6 = 138412546;
    v7 = v4;
    v8 = 2048;
    v9 = 0x4008000000000000;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@ Executing fetchOfflineInfo after delay %f", (uint8_t *)&v6, 0x16u);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_fetchOfflineFindingInfoInternal"));
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

uint64_t sub_10002394C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100023A7C(uint64_t a1)
{
  void *v2;
  dispatch_queue_global_t global_queue;
  NSObject *v4;
  _QWORD block[4];
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  objc_msgSend(v2, "clearOfflineFindingInfo");

  objc_msgSend(*(id *)(a1 + 32), "setOfflineFindingInfo:", 0);
  objc_msgSend(*(id *)(a1 + 32), "_postLocalActivationLockInfoChangedNotification");
  global_queue = dispatch_get_global_queue(0, 0);
  v4 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100023B30;
  block[3] = &unk_1002C2060;
  v6 = *(id *)(a1 + 40);
  dispatch_async(v4, block);

}

uint64_t sub_100023B30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_100023BB8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  objc_msgSend(v2, "clearMaskedAppleID");

  objc_msgSend(*(id *)(a1 + 32), "setMaskedAppleID:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  objc_msgSend(v3, "updateActivationLockStatus:", &__kCFBooleanFalse);

  objc_msgSend(*(id *)(a1 + 32), "setActivationLockStatus:", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  objc_msgSend(v4, "updateOfflineFindingStatus:", &__kCFBooleanFalse);

  objc_msgSend(*(id *)(a1 + 32), "setOfflineFindingStatus:", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "store"));
  objc_msgSend(v5, "clearOfflineFindingInfo");

  objc_msgSend(*(id *)(a1 + 32), "setOfflineFindingInfo:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "_postLocalActivationLockInfoChangedNotification");
}

void sub_10002445C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000244A4(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned int *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  if ((result + 1) >= 2)
    return IOObjectRelease(result);
  return result;
}

void sub_1000256AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000256D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "completion"));
  v2 = (void *)v1;
  if (v1)
    (*(void (**)(uint64_t))(v1 + 16))(v1);

}

void sub_100025F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100025FA0(uint64_t a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  NSErrorUserInfoKey v12;
  const __CFString *v13;
  uint8_t buf[4];
  uint64_t v15;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 134217984;
    v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction (0x%lX) Timeout waiting for device to connect.", buf, 0xCu);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessory"));
  v7 = objc_msgSend(v6, "connectionState");

  if (v7 == (id)1)
  {
    v12 = NSLocalizedFailureReasonErrorKey;
    v13 = CFSTR("Timeout waiting for in-ear state.");
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.icloud.findmydeviced.FMDAccessoryPlaySoundAction"), 1, v8));
    objc_msgSend(WeakRetained, "setTimeoutError:", v9);

    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "commandStatusForInternalAccessoryAudioSafetyStatus:", objc_msgSend(WeakRetained, "defaultAudioSafetyStatus")));
  }
  else
  {
    v10 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049B0));
  }
  v11 = (void *)v10;
  objc_msgSend(WeakRetained, "notifyCompletionWithStatus:", v10);

  objc_msgSend(WeakRetained, "terminate");
}

void sub_100026240(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100026254(uint64_t a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  uint64_t v5;
  const char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  id v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  double v23;
  double v24;
  NSObject *v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  unsigned __int8 v33;
  id v34;
  NSObject *v35;
  uint64_t v36;
  id v37;
  NSObject *v38;
  uint64_t v39;
  unsigned int v40;
  id v41;
  NSObject *v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  double v61;
  double v62;
  id v63;
  void *v64;
  id v65;
  NSObject *v66;
  uint64_t v67;
  id v68;
  NSObject *v69;
  uint64_t v70;
  uint64_t *v71;
  id v72;
  NSObject *v73;
  uint64_t v74;
  id v75;
  NSObject *v76;
  uint64_t v77;
  id v78;
  NSObject *v79;
  uint64_t v80;
  id v81;
  NSObject *v82;
  uint64_t v83;
  void *v84;
  _QWORD v85[4];
  NSObject *v86;
  uint64_t v87;
  id v88;
  _QWORD v89[5];
  _QWORD v90[6];
  _QWORD v91[6];
  NSObject *v92;
  uint8_t buf[4];
  uint64_t v94;
  __int16 v95;
  NSObject *v96;
  __int16 v97;
  id v98;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (objc_msgSend(WeakRetained, "terminated"))
  {
    v3 = sub_1000031B8();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 134218240;
      v94 = v5;
      v95 = 1024;
      LODWORD(v96) = objc_msgSend(WeakRetained, "terminated");
      v6 = "AccessoryPlaySoundAction (0x%lX) attempting to execute after beign terminated T%i";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, v6, buf, 0x12u);
      goto LABEL_69;
    }
    goto LABEL_69;
  }
  if (!objc_msgSend(WeakRetained, "playingSound"))
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessory"));
    if (!-[NSObject conformsToProtocol:](v4, "conformsToProtocol:", &OBJC_PROTOCOL___FMDAudioAccessory))
    {
      v12 = objc_opt_class(FMDExtAccessory, v9);
      if ((objc_opt_isKindOfClass(v4, v12) & 1) != 0)
      {
        objc_msgSend(*(id *)(a1 + 32), "_executePlaySoundUsingExtensions");
      }
      else
      {
        v13 = sub_1000031B8();
        v14 = objc_claimAutoreleasedReturnValue(v13);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          v15 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 134217984;
          v94 = v15;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) could not find an audio accessory", buf, 0xCu);
        }

        objc_msgSend(*(id *)(a1 + 32), "cancelTimer");
        v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049A8));
        objc_msgSend(WeakRetained, "notifyCompletionWithStatus:", v16);

        objc_msgSend(WeakRetained, "terminate");
      }
      goto LABEL_69;
    }
    v4 = v4;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "channels"));
    if (!objc_msgSend(v10, "count"))
    {
      objc_msgSend(WeakRetained, "cancelTimer");
      v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rampDownDuration"));
      v18 = sub_1000031B8();
      v19 = objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        v20 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 134218242;
        v94 = v20;
        v95 = 2112;
        v96 = v4;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "PlaySoundAction (0x%lX) Stopping sound for accessory %@", buf, 0x16u);
      }

      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessoryRegistry"));
      v89[0] = _NSConcreteStackBlock;
      v89[1] = 3221225472;
      v89[2] = sub_100026F9C;
      v89[3] = &unk_1002C1328;
      v89[4] = WeakRetained;
      objc_msgSend(v21, "updateAccessory:playbackChannels:completion:", v4, v10, v89);
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[FMDFMIPManager sharedInstance](FMDFMIPManager, "sharedInstance"));
      -[NSObject doubleValue](v17, "doubleValue");
      v24 = v23;
      v85[0] = _NSConcreteStackBlock;
      v85[1] = 3221225472;
      v85[2] = sub_100026FF0;
      v85[3] = &unk_1002C20E8;
      v25 = v4;
      v26 = *(_QWORD *)(a1 + 32);
      v86 = v25;
      v87 = v26;
      v88 = WeakRetained;
      objc_msgSend(v22, "stopPlayingSoundForAccessory:rampDownDuration:completion:", v25, v85, v24);

LABEL_21:
      goto LABEL_68;
    }
    if (-[NSObject connectionState](v4, "connectionState") != (id)1)
    {
      if (objc_msgSend(WeakRetained, "forceConnection"))
      {
        v27 = sub_1000031B8();
        v28 = objc_claimAutoreleasedReturnValue(v27);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          v29 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 134218242;
          v94 = v29;
          v95 = 2112;
          v96 = v4;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) Waiting to play sound 'till accessory is connected : %@", buf, 0x16u);
        }

        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bluetoothManager"));
        v31 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject address](v4, "address"));
        objc_msgSend(v30, "connectToDeviceAddress:", v31);

      }
      goto LABEL_68;
    }
    if ((objc_msgSend(WeakRetained, "bypassInEarCheck") & 1) != 0)
      goto LABEL_12;
    v32 = (void *)objc_claimAutoreleasedReturnValue(+[FMSystemInfo sharedInstance](FMSystemInfo, "sharedInstance"));
    if ((objc_msgSend(v32, "isInternalBuild") & 1) != 0)
    {
      v33 = +[FMPreferencesUtil BOOLForKey:inDomain:](FMPreferencesUtil, "BOOLForKey:inDomain:", CFSTR("DisableInEarCheck"), kFMDNotBackedUpPrefDomain);

      if ((v33 & 1) != 0)
      {
LABEL_12:
        v11 = 1;
LABEL_31:
        v34 = sub_1000031B8();
        v35 = objc_claimAutoreleasedReturnValue(v34);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          v36 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 134218496;
          v94 = v36;
          v95 = 2050;
          v96 = v4;
          v97 = 2048;
          v98 = -[NSObject audioSafetyStatus](v4, "audioSafetyStatus");
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) audioAccessory<%{public}p>.inEar %lu", buf, 0x20u);
        }

        v37 = sub_1000031B8();
        v38 = objc_claimAutoreleasedReturnValue(v37);
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          v39 = *(_QWORD *)(a1 + 32);
          v40 = -[NSObject playingSound](v4, "playingSound");
          *(_DWORD *)buf = 134218496;
          v94 = v39;
          v95 = 2050;
          v96 = v4;
          v97 = 1024;
          LODWORD(v98) = v40;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) audioAccessory<%{public}p>.playingSound %i", buf, 0x1Cu);
        }

        if (!v11)
        {
          switch((unint64_t)-[NSObject audioSafetyStatus](v4, "audioSafetyStatus"))
          {
            case 0uLL:
              v44 = sub_1000031B8();
              v45 = objc_claimAutoreleasedReturnValue(v44);
              if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
              {
                v46 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                v94 = v46;
                _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found inEar Unknown - waiting for update.", buf, 0xCu);
              }

              v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "inEarTimer"));
              if (v47)
                goto LABEL_68;
              v48 = objc_alloc((Class)FMDispatchTimer);
              v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "inEarDetectionTimeout"));
              objc_msgSend(v49, "doubleValue");
              v90[0] = _NSConcreteStackBlock;
              v90[1] = 3221225472;
              v90[2] = sub_100026E40;
              v90[3] = &unk_1002C13E8;
              v50 = *(_QWORD *)(a1 + 32);
              v90[4] = WeakRetained;
              v90[5] = v50;
              v51 = objc_msgSend(v48, "initWithQueue:timeout:completion:", &_dispatch_main_q, v90);
              objc_msgSend(WeakRetained, "setInEarTimer:", v51);

              v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "inEarTimer"));
              objc_msgSend(v52, "start");

              v53 = sub_1000031B8();
              v17 = objc_claimAutoreleasedReturnValue(v53);
              if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
              {
                v54 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                v94 = v54;
                _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) started pending in ear detection timer (from unknown).", buf, 0xCu);
              }
              goto LABEL_21;
            case 1uLL:
              goto LABEL_39;
            case 2uLL:
              v55 = sub_1000031B8();
              v56 = objc_claimAutoreleasedReturnValue(v55);
              if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
              {
                v57 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                v94 = v57;
                _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found inEar pending - waiting for other bud to report.", buf, 0xCu);
              }

              v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "inEarTimer"));
              if (!v58)
              {
                v59 = objc_alloc((Class)FMDispatchTimer);
                v60 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "inEarDetectionTimeout"));
                objc_msgSend(v60, "doubleValue");
                v62 = v61;
                v91[0] = _NSConcreteStackBlock;
                v91[1] = 3221225472;
                v91[2] = sub_100026D94;
                v91[3] = &unk_1002C1BA0;
                v91[4] = *(_QWORD *)(a1 + 32);
                v91[5] = WeakRetained;
                v92 = v4;
                v63 = objc_msgSend(v59, "initWithQueue:timeout:completion:", &_dispatch_main_q, v91, v62);
                objc_msgSend(WeakRetained, "setInEarTimer:", v63);

                v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "inEarTimer"));
                objc_msgSend(v64, "start");

                v65 = sub_1000031B8();
                v66 = objc_claimAutoreleasedReturnValue(v65);
                if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
                {
                  v67 = *(_QWORD *)(a1 + 32);
                  *(_DWORD *)buf = 134217984;
                  v94 = v67;
                  _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) started pending in ear detection timer (from pending).", buf, 0xCu);
                }

              }
              goto LABEL_68;
            case 3uLL:
              v68 = sub_1000031B8();
              v69 = objc_claimAutoreleasedReturnValue(v68);
              if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
              {
                v70 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                v94 = v70;
                _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found inEar true - waiting for user warning.", buf, 0xCu);
              }

              v71 = &qword_1003049B8;
              goto LABEL_67;
            case 4uLL:
              v72 = sub_1000031B8();
              v73 = objc_claimAutoreleasedReturnValue(v72);
              if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
              {
                v74 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                v94 = v74;
                _os_log_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found onNeck true - waiting for user warning.", buf, 0xCu);
              }

              v71 = &qword_1003049D0;
              goto LABEL_67;
            case 5uLL:
              v75 = sub_1000031B8();
              v76 = objc_claimAutoreleasedReturnValue(v75);
              if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
              {
                v77 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                v94 = v77;
                _os_log_impl((void *)&_mh_execute_header, v76, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found onHead true - waiting for user warning.", buf, 0xCu);
              }

              v71 = &qword_1003049D8;
              goto LABEL_67;
            case 6uLL:
              v78 = sub_1000031B8();
              v79 = objc_claimAutoreleasedReturnValue(v78);
              if (os_log_type_enabled(v79, OS_LOG_TYPE_DEFAULT))
              {
                v80 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                v94 = v80;
                _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found onTableTop true - waiting for user warning.", buf, 0xCu);
              }

              v71 = &qword_1003049E0;
              goto LABEL_67;
            case 7uLL:
              v81 = sub_1000031B8();
              v82 = objc_claimAutoreleasedReturnValue(v81);
              if (os_log_type_enabled(v82, OS_LOG_TYPE_DEFAULT))
              {
                v83 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                v94 = v83;
                _os_log_impl((void *)&_mh_execute_header, v82, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found carryingCaseClosed true - waiting for user warning.", buf, 0xCu);
              }

              v71 = &qword_1003049E8;
LABEL_67:
              v84 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *v71));
              objc_msgSend(WeakRetained, "notifyCompletionWithStatus:", v84);

              objc_msgSend(WeakRetained, "terminate");
              goto LABEL_68;
            default:
              goto LABEL_68;
          }
        }
        v41 = sub_1000031B8();
        v42 = objc_claimAutoreleasedReturnValue(v41);
        if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
        {
          v43 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 134217984;
          v94 = v43;
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) ear check disabled.", buf, 0xCu);
        }

LABEL_39:
        objc_msgSend(WeakRetained, "_playSoundNow:", v4);
LABEL_68:

        goto LABEL_69;
      }
    }
    else
    {

    }
    v11 = -[NSObject playingSound](v4, "playingSound");
    goto LABEL_31;
  }
  v7 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 134218240;
    v94 = v8;
    v95 = 1024;
    LODWORD(v96) = objc_msgSend(WeakRetained, "playingSound");
    v6 = "AccessoryPlaySoundAction (0x%lX) attempting to execute after starting playback P%i";
    goto LABEL_7;
  }
LABEL_69:

}

id sub_100026D94(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) done waiting for in-ear, playing sound now.", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "_playSoundNow:", *(_QWORD *)(a1 + 48));
}

void sub_100026E40(uint64_t a1)
{
  NSObject *v2;
  _QWORD v3[4];
  int8x16_t v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serialQueue"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100026EB8;
  v3[3] = &unk_1002C13E8;
  v4 = vextq_s8(*(int8x16_t *)(a1 + 32), *(int8x16_t *)(a1 + 32), 8uLL);
  dispatch_sync(v2, v3);

}

id sub_100026EB8(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  int v8;
  uint64_t v9;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v8 = 134217984;
    v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) done waiting for in-ear. Asking for audio safety warning confirmation.", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(void **)(a1 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "commandStatusForInternalAccessoryAudioSafetyStatus:", objc_msgSend(v5, "defaultAudioSafetyStatus")));
  objc_msgSend(v5, "notifyCompletionWithStatus:", v6);

  return objc_msgSend(*(id *)(a1 + 40), "terminate");
}

void sub_100026F9C(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049A8));
  objc_msgSend(v1, "notifyCompletionWithStatus:", v2);

}

void sub_100026FF0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;

  v3 = a2;
  if (v3)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_100226B24();

  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "discovery"));
  objc_msgSend(v6, "stopDiscovery");

  objc_msgSend(*(id *)(a1 + 48), "terminate");
}

void sub_1000271A4(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;

  v2 = a2;
  if (v2)
  {
    v3 = sub_10005311C();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_100226B90();

  }
}

void sub_1000280CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  uint64_t v44;

  _Block_object_dispose((const void *)(v44 - 176), 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose(&a44, 8);
  _Unwind_Resume(a1);
}

void sub_100028188(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049A8));
  objc_msgSend(v1, "notifyCompletionWithStatus:", v2);

}

void sub_1000281DC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;

  v3 = a2;
  if (v3)
  {
    v4 = sub_10005311C();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_100226B24();

  }
  objc_msgSend(*(id *)(a1 + 40), "terminate");

}

void sub_100028248(uint64_t a1, char a2, uint64_t a3)
{
  id v5;
  NSObject *v6;

  if (a3 || (a2 & 1) == 0)
  {
    v5 = sub_10005311C();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_100226E28();

  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_1000282B4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000282C4(uint64_t a1)
{

}

void sub_1000282CC(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  id v13;
  _DWORD v14[2];
  __int16 v15;
  id v16;
  __int16 v17;
  id v18;

  v7 = a3;
  v8 = a4;
  v9 = sub_10005311C();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v14[0] = 67109634;
    v14[1] = a2;
    v15 = 2112;
    v16 = v7;
    v17 = 2112;
    v18 = v8;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "safe = %d alertType = %@ error = %@", (uint8_t *)v14, 0x1Cu);
  }

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v7;
  v13 = v7;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000283E0(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  v3 = sub_10005311C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "discovery started with error %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_100028488(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  dispatch_time_t v13;
  NSObject *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  NSObject *v29;
  id WeakRetained;
  void *v31;
  void *v32;
  id v33;
  _QWORD block[5];
  _QWORD v35[5];
  id v36;
  id v37;
  _QWORD v38[4];
  id v39;
  uint8_t buf[4];
  void *v41;
  __int16 v42;
  unint64_t v43;
  __int16 v44;
  id v45;

  v3 = a2;
  v4 = sub_10005311C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    *(_DWORD *)buf = 138412546;
    v41 = v6;
    v42 = 2112;
    v43 = (unint64_t)v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "completion called at %@ error = %@", buf, 0x16u);

  }
  if (v3)
  {
    v7 = sub_10005311C();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_100226E54();

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "timeoutDate"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v9, "timeIntervalSinceDate:", v10);
    v12 = v11;

    if ((uint64_t)objc_msgSend(*(id *)(a1 + 32), "playSoundRetryCounter") > 5 || v12 < 1.0)
    {
      v28 = sub_1000031B8();
      v29 = objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        v32 = *(void **)(a1 + 48);
        v33 = objc_msgSend(*(id *)(a1 + 32), "playSoundRetryCounter");
        *(_DWORD *)buf = 138412802;
        v41 = v32;
        v42 = 2048;
        v43 = (unint64_t)v12;
        v44 = 2048;
        v45 = v33;
        _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "Timed out waiting for accessory[%@]: wait time remaining: %lu for retry count: %lu", buf, 0x20u);
      }

      WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
      v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049B0));
      objc_msgSend(WeakRetained, "notifyCompletionWithStatus:", v31);

      objc_msgSend(*(id *)(a1 + 32), "terminate");
    }
    else
    {
      v13 = dispatch_time(0, 1000000000);
      v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serialQueue"));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100028A70;
      block[3] = &unk_1002C1328;
      block[4] = *(_QWORD *)(a1 + 32);
      dispatch_after(v13, v14, block);

    }
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setPlayingSound:", 1);
    objc_msgSend(*(id *)(a1 + 32), "cancelTimer");
    v15 = objc_loadWeakRetained((id *)(a1 + 56));
    v16 = *(void **)(a1 + 40);
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "accessory"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "channels"));
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v38[2] = sub_100028918;
    v38[3] = &unk_1002C1378;
    objc_copyWeak(&v39, (id *)(a1 + 56));
    objc_msgSend(v16, "updateAccessory:playbackChannels:completion:", v17, v18, v38);

    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    v20 = objc_alloc((Class)FMDispatchTimer);
    v21 = &_dispatch_main_q;
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "duration"));
    objc_msgSend(v22, "doubleValue");
    v24 = v23;
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472;
    v35[2] = sub_100028978;
    v35[3] = &unk_1002C21C8;
    objc_copyWeak(&v37, (id *)(a1 + 56));
    v35[4] = *(_QWORD *)(a1 + 32);
    v25 = v19;
    v36 = v25;
    v26 = objc_msgSend(v20, "initWithQueue:timeout:completion:", &_dispatch_main_q, v35, v24);
    objc_msgSend(v15, "setTimeoutTimer:", v26);

    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeoutTimer"));
    objc_msgSend(v27, "start");

    objc_destroyWeak(&v37);
    objc_destroyWeak(&v39);

  }
}

void sub_1000288D8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100028918(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049A8));
  objc_msgSend(WeakRetained, "notifyCompletionWithStatus:", v1);

}

void sub_100028978(uint64_t a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = sub_10005311C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v6, "timeIntervalSinceDate:", *(_QWORD *)(a1 + 40));
    v8 = 134218240;
    v9 = v5;
    v10 = 2048;
    v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction (0x%lX) ending, sound played %f", (uint8_t *)&v8, 0x16u);

  }
  objc_msgSend(WeakRetained, "terminate");

}

id sub_100028A70(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_executePlaySoundUsingExtensions");
}

void sub_10002944C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100029478(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  void *v7;
  _BOOL4 v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  dispatch_time_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  NSObject *v31;
  void *v32;
  uint64_t v33;
  id v34;
  int8x16_t v35;
  _QWORD v36[5];
  id v37;
  id v38;
  _QWORD v39[4];
  id v40;
  _QWORD block[4];
  int8x16_t v42;
  id v43;
  double v44;
  uint8_t buf[4];
  uint64_t v46;
  __int16 v47;
  unint64_t v48;
  __int16 v49;
  id v50;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (!v3)
  {
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoryRegistry"));
    v19 = *(_QWORD *)(a1 + 32);
    v20 = *(_QWORD *)(a1 + 48);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_100029B2C;
    v39[3] = &unk_1002C1378;
    objc_copyWeak(&v40, (id *)(a1 + 64));
    objc_msgSend(v18, "updateAccessory:playbackChannels:completion:", v19, v20, v39);
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    v22 = objc_alloc((Class)FMDispatchTimer);
    v23 = &_dispatch_main_q;
    objc_msgSend(*(id *)(a1 + 56), "doubleValue");
    v25 = v24;
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_100029B8C;
    v36[3] = &unk_1002C21C8;
    objc_copyWeak(&v38, (id *)(a1 + 64));
    v36[4] = *(_QWORD *)(a1 + 40);
    v26 = v21;
    v37 = v26;
    v27 = objc_msgSend(v22, "initWithQueue:timeout:completion:", &_dispatch_main_q, v36, v25);
    objc_msgSend(WeakRetained, "setTimeoutTimer:", v27);

    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "timeoutTimer"));
    objc_msgSend(v28, "start");

    objc_destroyWeak(&v38);
    objc_destroyWeak(&v40);

    goto LABEL_14;
  }
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    sub_100226E80();

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "domain"));
  if (!objc_msgSend(v7, "isEqualToString:", kFMDAccessoryPlaySoundErrorDomain))
  {

    goto LABEL_13;
  }
  v8 = objc_msgSend(v3, "code") == 0;

  if (!v8)
  {
LABEL_13:
    v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049B0));
    objc_msgSend(WeakRetained, "notifyCompletionWithStatus:", v29);

    objc_msgSend(WeakRetained, "terminate");
    goto LABEL_14;
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "timeoutDate"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v9, "timeIntervalSinceDate:", v10);
  v12 = v11;

  v13 = sub_1000031B8();
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v15 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 134218240;
    v46 = v15;
    v47 = 2048;
    v48 = (unint64_t)v12;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction (0x%lX) waiting for routable accessory for: %lu", buf, 0x16u);
  }

  if ((uint64_t)objc_msgSend(*(id *)(a1 + 40), "playSoundRetryCounter") > 5 || v12 < 0.0)
  {
    v30 = sub_1000031B8();
    v31 = objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
    {
      v33 = *(_QWORD *)(a1 + 32);
      v34 = objc_msgSend(*(id *)(a1 + 40), "playSoundRetryCounter");
      *(_DWORD *)buf = 138412802;
      v46 = v33;
      v47 = 2048;
      v48 = (unint64_t)v12;
      v49 = 2048;
      v50 = v34;
      _os_log_error_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "Timed out routing for accessory[%@]: wait time remaining: %lu for retry count: %lu", buf, 0x20u);
    }

    v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049B0));
    objc_msgSend(WeakRetained, "notifyCompletionWithStatus:", v32);

    objc_msgSend(*(id *)(a1 + 40), "terminate");
  }
  else
  {
    v16 = dispatch_time(0, 1000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100029948;
    block[3] = &unk_1002C2218;
    v35 = *(int8x16_t *)(a1 + 32);
    v17 = (id)v35.i64[0];
    v42 = vextq_s8(v35, v35, 8uLL);
    v44 = v12;
    v43 = WeakRetained;
    dispatch_after(v16, (dispatch_queue_t)&_dispatch_main_q, block);

  }
LABEL_14:

}

void sub_100029908(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100029948(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  void *v5;
  void *v6;
  double v7;
  id v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t buf[4];
  id v15;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "playSoundRetryCounter");
    *(_DWORD *)buf = 134217984;
    v15 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction: RETRY: %lu", buf, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[FMDFMIPManager sharedInstance](FMDFMIPManager, "sharedInstance"));
  v6 = *(void **)(a1 + 40);
  v7 = *(double *)(a1 + 56);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100029A74;
  v10[3] = &unk_1002C20E8;
  v8 = v6;
  v9 = *(_QWORD *)(a1 + 48);
  v11 = v8;
  v12 = v9;
  v13 = *(_QWORD *)(a1 + 32);
  objc_msgSend(v5, "waitForRoutableAccessory:timeout:completion:", v8, v10, v7);

}

void sub_100029A74(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;

  v3 = a2;
  if (v3)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_100226EEC();

    v6 = *(void **)(a1 + 40);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049B0));
    objc_msgSend(v6, "notifyCompletionWithStatus:", v7);

    objc_msgSend(*(id *)(a1 + 48), "terminate");
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "setPlayingSound:", 0);
    objc_msgSend(*(id *)(a1 + 40), "_playSoundNow:", *(_QWORD *)(a1 + 32));
  }

}

void sub_100029B2C(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049A8));
  objc_msgSend(WeakRetained, "notifyCompletionWithStatus:", v1);

}

void sub_100029B8C(uint64_t a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v6, "timeIntervalSinceDate:", *(_QWORD *)(a1 + 40));
    v8 = 134218240;
    v9 = v5;
    v10 = 2048;
    v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction (0x%lX) ending, sound played %f", (uint8_t *)&v8, 0x16u);

  }
  objc_msgSend(WeakRetained, "terminate");

}

void sub_100029F7C(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  NSObject *v4;
  id v5;
  NSObject *v6;
  uint8_t v7[16];

  v2 = a2;
  if (v2)
  {
    v3 = sub_1000031B8();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_100226F58();

  }
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Stop sound from panning done!", v7, 2u);
  }

}

void sub_10002A350(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

id sub_10002A35C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "code");
}

void sub_10002A36C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10002AD10(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  FMDNanoRegistryAccessory *v6;

  v3 = a2;
  v6 = -[FMDNanoRegistryAccessory initWithNRDevice:]([FMDNanoRegistryAccessory alloc], "initWithNRDevice:", v3);

  -[FMDNanoRegistryAccessory setMigrationPossible:](v6, "setMigrationPossible:", 1);
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoRegistryAccessory accessoryIdentifier](v6, "accessoryIdentifier"));
  objc_msgSend(v4, "fm_safeSetObject:forKey:", v6, v5);

}

void sub_10002AEAC(uint64_t a1, void *a2)
{
  void *v3;
  unsigned int v4;
  void *v5;
  FMDNanoRegistryAccessory *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  if (!*(_QWORD *)(a1 + 32)
    || (v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "valueForProperty:")),
        v4 = objc_msgSend(v3, "BOOLValue"),
        v3,
        v5 = v10,
        v4))
  {
    v6 = -[FMDNanoRegistryAccessory initWithNRDevice:]([FMDNanoRegistryAccessory alloc], "initWithNRDevice:", v10);
    v7 = *(void **)(a1 + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoRegistryAccessory accessoryIdentifier](v6, "accessoryIdentifier"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", v8));

    if (v9)
      -[FMDNanoRegistryAccessory setMigrationPossible:](v6, "setMigrationPossible:", 1);
    objc_msgSend(*(id *)(a1 + 48), "addObject:", v6);

    v5 = v10;
  }

}

id sub_10002B040(void *a1)
{
  id v1;
  uint64_t v2;
  NSBundle *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = a1;
  v3 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(FMDFMIPManager, v2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (v4)
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedStringForKey:value:table:", v1, &stru_1002CD590, 0));
  else
    v6 = 0;

  return v6;
}

id sub_10002B0C4(uint64_t a1)
{
  void *v1;
  int v2;
  int v3;
  void *v4;
  id v6;
  NSObject *v7;
  id v8;
  NSObject *v9;
  uint8_t v10[12];
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;

  if (!a1)
    return 0;
  v14 = 0;
  v15 = 0;
  v13 = 0;
  v12 = 0;
  v11 = 0;
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSScanner scannerWithString:](NSScanner, "scannerWithString:", a1));
  objc_msgSend(v1, "scanUnsignedLongLong:", &v15);
  sub_1000E2070(v15, (uint64_t)&v14, (uint64_t)&v13, (uint64_t)&v12, (uint64_t)&v11);
  if (v2 == -45061)
  {
    v6 = sub_1000031B8();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "ADIOTPRequest():kADIAccountNotProvisoned", v10, 2u);
    }

    goto LABEL_12;
  }
  v3 = v2;
  if (v2)
  {
    v8 = sub_1000031B8();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_100226FE0(v3, v9);

LABEL_12:
    v4 = 0;
    goto LABEL_13;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](NSData, "dataWithBytes:length:", v14, v13));
  sub_1000C6F0C(v14);
  sub_1000C6F0C(v12);
LABEL_13:

  return v4;
}

void sub_10002B3A4(id *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  v5 = a3;
  if ((objc_msgSend(a1[4], "containsObject:", v7) & 1) == 0)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "_digestObject:withExclusionKeys:", v5, a1[4]));
    if (v6)
      objc_msgSend(a1[5], "setObject:forKey:", v6, v7);

  }
}

void sub_10002B4F8(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_digestObject:withExclusionKeys:", a2, *(_QWORD *)(a1 + 32)));
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v3);
    v3 = v4;
  }

}

void sub_10002B58C(id a1)
{
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  int v5;
  uint64_t v6;

  v1 = -[FMDSystemConfig initSingleton]([FMDSystemConfig_ios alloc], "initSingleton");
  v2 = (void *)qword_1003064D8;
  qword_1003064D8 = (uint64_t)v1;

  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = qword_1003064D8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#start - inited system config instance %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_10002B764(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 96);
  *(_QWORD *)(v2 + 96) = 0;

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 104) = 1;
}

void sub_10002B984(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  id v6;
  id v7;
  void **v8;
  uint64_t v9;
  id (*v10)(uint64_t, void *);
  void *v11;
  uint64_t v12;
  id v13;
  uint8_t buf[4];
  uint64_t v15;

  v2 = (void *)objc_opt_new(SPPairingManager);
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 134217984;
    v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Fetching BA-UUID with timeout - %f", buf, 0xCu);
  }

  v6 = objc_msgSend(objc_alloc((Class)FMSynchronizer), "initWithDescription:andTimeout:", CFSTR("SP-BA-UUID"), *(double *)(a1 + 40));
  v8 = _NSConcreteStackBlock;
  v9 = 3221225472;
  v10 = sub_10002BABC;
  v11 = &unk_1002C2388;
  v12 = *(_QWORD *)(a1 + 32);
  v13 = v6;
  v7 = v6;
  objc_msgSend(v2, "getLocalPairingDataWithCompletion:", &v8);
  objc_msgSend(v7, "wait", v8, v9, v10, v11, v12);

}

id sub_10002BABC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "UUIDString"));
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 96);
  *(_QWORD *)(v4 + 96) = v3;

  return objc_msgSend(*(id *)(a1 + 40), "signal");
}

void sub_10002BBE0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  id v11;
  __int16 v12;
  id v13;

  v5 = a2;
  v6 = a3;
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v10 = 138412546;
    v11 = v5;
    v12 = 2112;
    v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Got BA status - %@ with reason - %@", (uint8_t *)&v10, 0x16u);
  }

  if ((objc_msgSend(v5, "isEqualToString:", SPServiceStateEnabled) & 1) != 0)
  {
    v9 = 3;
LABEL_7:
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 104) = v9;
    goto LABEL_8;
  }
  if (objc_msgSend(v5, "isEqualToString:", SPServiceStateDisabled))
  {
    v9 = 2;
    goto LABEL_7;
  }
LABEL_8:
  objc_msgSend(*(id *)(a1 + 40), "signal");

}

void sub_10002D0B8(id a1)
{
  id v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;

  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    sub_1002271D8(v2, v3, v4, v5, v6, v7, v8, v9);

  v10 = -[FMDXPCManager initSingleton]([FMDXPCManager alloc], "initSingleton");
  v11 = (void *)qword_1003064F0;
  qword_1003064F0 = (uint64_t)v10;

}

void sub_10002E200(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 buf, int a12, __int16 a13, __int16 a14, id a15)
{
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  id v21;

  if (a2 == 1)
  {
    v16 = objc_begin_catch(a1);
    v17 = sub_1000031B8();
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v20 = (void *)objc_opt_class(v15, v19);
      LODWORD(buf) = 138412802;
      *(_QWORD *)((char *)&buf + 4) = v20;
      WORD6(buf) = 2048;
      *(_QWORD *)((char *)&buf + 14) = v15;
      a14 = 2112;
      a15 = v16;
      v21 = v20;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "%@ (0x%lX) Received expection when encoding auth : %@", (uint8_t *)&buf, 0x20u);

    }
    objc_end_catch();
    JUMPOUT(0x10002E1C4);
  }
  _Unwind_Resume(a1);
}

id *sub_10002EBB8(id *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id *v5;
  unsigned __int8 *v6;
  unsigned int v7;

  if (a4)
  {
    v4 = a4;
    v5 = result;
    v6 = (unsigned __int8 *)(a2 + a3);
    do
    {
      v7 = *v6++;
      result = (id *)objc_msgSend(v5[4], "appendFormat:", CFSTR("%02lx"), v7);
      --v4;
    }
    while (v4);
  }
  return result;
}

void sub_10002EC14(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_10002F84C(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  if (v2)
  {
    v3 = sub_1000031B8();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = 138412290;
      v6 = v2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Could Not complete command notify : %@", (uint8_t *)&v5, 0xCu);
    }

  }
}

NSDictionary *__cdecl sub_10002FC40(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_10002FC7C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "account"));
  if (v2)
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deviceInfoForAccount:accessory:", v4, *(_QWORD *)(a1 + 32)));
  else
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deviceInfoForAccount:", v4));
  v6 = (void *)v5;

  return v6;
}

void sub_10002FD04(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  uint32_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v16 = *(_QWORD *)(a1 + 32);
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v16, 1);
      v17 = sub_1000031B8();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v18 = 138412546;
      v19 = v10;
      v20 = 2048;
      v21 = objc_msgSend(v3, "httpResponseStatus");
      v11 = "%@: successful with status %ld";
      v12 = v8;
      v13 = 22;
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v18 = 138412290;
        v19 = v10;
        v11 = "%@: Cancelled";
        v12 = v8;
        v13 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v18, v13);
LABEL_14:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v14 = objc_msgSend(v3, "httpResponseStatus");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v18 = 138412802;
      v19 = v10;
      v20 = 2048;
      v21 = v14;
      v22 = 2112;
      v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v18, 0x20u);

      goto LABEL_14;
    }
LABEL_15:

  }
}

uint64_t sub_1000304E0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_1000304F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_100030508(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setCurrentTask:", 0);
}

void sub_10003088C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "handleRatchetError:", v6);
  }
  else if (v5)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", &off_1002D8020));
    v8 = sub_10005334C();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    v10 = v9;
    if (v7)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ratchetIdentifier"));
        v18 = 138412290;
        v19 = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Ratchet armed %@, proceeding with operation.", (uint8_t *)&v18, 0xCu);

      }
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentTask"));
      objc_msgSend(v12, "finishWithNoResult");
    }
    else
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_100227550(a1);

      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentTask"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[FMDRatchetManager ratchetErrorDeniedWithUnderlyingError:](FMDRatchetManager, "ratchetErrorDeniedWithUnderlyingError:", 0));
      objc_msgSend(v12, "finishWithError:", v17);

    }
  }
  else
  {
    v13 = sub_10005334C();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_1002274D0(a1);

    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentTask"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[FMDRatchetManager ratchetErrorDeniedWithUnderlyingError:](FMDRatchetManager, "ratchetErrorDeniedWithUnderlyingError:", 0));
    objc_msgSend(v15, "finishWithError:", v16);

  }
}

void sub_100030E74(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100030F80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9)
{
  id v9;
  id v10;
  NSObject *v11;

  if (a2 == 1)
  {
    v9 = objc_begin_catch(exception_object);
    v10 = sub_1000031B8();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(a9) = 138412290;
      *(_QWORD *)((char *)&a9 + 4) = v9;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Exception caught in -URLByReplacingHost: -- %@", (uint8_t *)&a9, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x100030F44);
  }
  _Unwind_Resume(exception_object);
}

void sub_100031418(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_100031678(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_100031824(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_100031FEC(uint64_t a1, void *a2)
{
  id v3;
  CLLocationFMGeoLocatableAdapter *v4;

  v3 = a2;
  v4 = -[CLLocationFMGeoLocatableAdapter initWithLocation:]([CLLocationFMGeoLocatableAdapter alloc], "initWithLocation:", v3);

  objc_msgSend(*(id *)(a1 + 32), "addObject:", v4);
}

void sub_100032640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100032660(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  unsigned int v25;
  int v26;
  id v27;
  __int16 v28;
  id v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  void *v33;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = sub_1000530AC();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = objc_msgSend(v3, "httpResponseStatus");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseHeaders"));
    v26 = 138413058;
    v27 = v3;
    v28 = 2048;
    v29 = v7;
    v30 = 2112;
    v31 = v8;
    v32 = 2112;
    v33 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v26, 0x2Au);

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v10
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
  {

    goto LABEL_7;
  }
  if ((objc_msgSend(v3, "cancelled") & 1) != 0)
  {
LABEL_7:
    v11 = objc_msgSend(v3, "cancelled");
    v12 = sub_1000530AC();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
    if (v11)
    {
      if (!v14)
        goto LABEL_13;
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v26 = 138412290;
      v27 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v26, 0xCu);
    }
    else
    {
      if (!v14)
        goto LABEL_13;
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v16 = objc_msgSend(v3, "httpResponseStatus");
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v26 = 138412802;
      v27 = v15;
      v28 = 2048;
      v29 = v16;
      v30 = 2112;
      v31 = v17;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v26, 0x20u);

    }
    goto LABEL_12;
  }
  v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
  v19 = sub_1000530AC();
  v20 = objc_claimAutoreleasedReturnValue(v19);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("statusCode")));
    v26 = 138412546;
    v27 = v22;
    v28 = 2112;
    v29 = v3;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Got server response code %@ for request %@", (uint8_t *)&v26, 0x16u);

  }
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("statusCode")));
  v25 = objc_msgSend(v24, "isEqualToString:", CFSTR("200"));

  if (v25)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "registry"));
    objc_msgSend(v15, "updateSupportedAccessoryTypes:", v13);
LABEL_12:

  }
LABEL_13:

  v18 = *(_QWORD *)(a1 + 32);
  if (v18)
    (*(void (**)(void))(v18 + 16))();

}

void sub_100032B40(id a1)
{
  id v1;
  NSObject *v2;
  ServerDeviceInfo *v3;
  void *v4;

  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    sub_1002276EC(v2);

  v3 = objc_alloc_init(ServerDeviceInfo);
  v4 = (void *)qword_100306510;
  qword_100306510 = (uint64_t)v3;

}

void sub_100035BEC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v5 = objc_opt_class(*(_QWORD *)(a1 + 32), v4);
    v11 = 138412290;
    v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@ Retrying request now...", (uint8_t *)&v11, 0xCu);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(*(id *)(a1 + 32), "setLastRetryTime:", v6);

  v7 = *(void **)(a1 + 32);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "nextRetryType"));
  objc_msgSend(v7, "_incrementRetryCountForType:", v8);

  v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "retryAction"));
  v10 = (void *)v9;
  if (v9)
    (*(void (**)(uint64_t))(v9 + 16))(v9);

}

void sub_100036E5C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_1000370A0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000370C8(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "synchronizer"));
  objc_msgSend(v1, "signal");

}

void sub_1000377DC(uint64_t a1, void *a2, void *a3)
{
  _UNKNOWN **v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _UNKNOWN **v11;
  const __CFString *v12;
  void *v13;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v6)
  {
    v8 = *(void **)(a1 + 32);
    v12 = CFSTR("status");
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v6, "code")));
    v13 = v9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1));
    objc_msgSend(v8, "didHandleCommandWithAckData:", v10);

  }
  else
  {
    if (v5)
      v11 = v5;
    else
      v11 = &off_1002D9368;
    objc_msgSend(*(id *)(a1 + 32), "didHandleCommandWithAckData:", v11);
  }

}

void sub_1000378E8(id a1, BOOL a2)
{
  id v2;

  if (a2)
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(+[FMDStartupRegisterManager sharedInstance](FMDStartupRegisterManager, "sharedInstance"));
    objc_msgSend(v2, "eventDidOccur:", 10);

  }
}

void sub_100037D68(id a1, BOOL a2)
{
  id v2;

  if (a2)
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(+[FMDStartupRegisterManager sharedInstance](FMDStartupRegisterManager, "sharedInstance"));
    objc_msgSend(v2, "eventDidOccur:", 10);

  }
}

void sub_100038114(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a3;
  v5 = objc_opt_class(NSError, v4);
  if ((objc_opt_isKindOfClass(v8, v5) & 1) != 0)
  {
    v6 = *(void **)(a1 + 32);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dictionaryForError:", v8));
    objc_msgSend(v6, "addObject:", v7);

  }
}

void sub_100038C64(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100038C78(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_logEvent:", *(_QWORD *)(a1 + 32));

}

void sub_100038FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100038FFC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10003900C(uint64_t a1)
{

}

void sub_100039014(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  void *v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;

  v15 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "groupValue"));
  objc_msgSend(v7, "doubleValue");
  v9 = v8;

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "precision"));
  objc_msgSend(v10, "doubleValue");
  v12 = v11;

  v13 = *(double *)(a1 + 48) - v9;
  if (v13 >= 0.0)
    v14 = *(double *)(a1 + 48) - v9;
  else
    v14 = -v13;
  if (v14 <= v12)
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  *a4 = v14 <= v12;

}

void sub_100039264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003927C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logs"));
  v2 = objc_msgSend(v6, "copy");
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allValues"));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_100039540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003955C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  id v8;
  void *v9;
  int v10;
  id v11;
  __int16 v12;
  void *v13;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(WeakRetained, "setLogs:");
  }
  else
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    objc_msgSend(v3, "setLogs:", v4);

  }
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "logs"));
    v8 = objc_msgSend(v7, "count");
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "cachedLogFileURL"));
    v10 = 134218242;
    v11 = v8;
    v12 = 2112;
    v13 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Found existing logs %ld %@", (uint8_t *)&v10, 0x16u);

  }
}

void sub_100039768(id a1)
{
  FMDNVRAMUtil *v1;
  void *v2;

  v1 = objc_alloc_init(FMDNVRAMUtil);
  v2 = (void *)qword_100306520;
  qword_100306520 = (uint64_t)v1;

}

void sub_10003AFD0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  const __CFString *v23;
  void *v24;
  uint8_t buf[4];
  void *v26;
  __int16 v27;
  uint64_t v28;

  v5 = a2;
  v6 = a3;
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fm_logID"));
    v10 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    v26 = v9;
    v27 = 2112;
    v28 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ Future completed for command %@", buf, 0x16u);

  }
  if (v6)
  {
    v11 = *(void **)(a1 + 32);
    v23 = CFSTR("status");
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v6, "code")));
    v24 = v12;
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v24, &v23, 1));
    objc_msgSend(v11, "didHandleCommandWithAckData:", v13);

    objc_msgSend(*(id *)(a1 + 48), "removeFutureForCommandId:", *(_QWORD *)(a1 + 40));
  }
  else
  {
    v14 = *(void **)(a1 + 32);
    if (v5)
    {
      objc_msgSend(*(id *)(a1 + 32), "didHandleCommandWithAckData:", v5);
    }
    else
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1003049A8, CFSTR("status")));
      v22 = v15;
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v22, &v21, 1));
      objc_msgSend(v14, "didHandleCommandWithAckData:", v16);

    }
    v17 = sub_1000031B8();
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v19 = *(void **)(a1 + 56);
      *(_DWORD *)buf = 138412290;
      v26 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "FMDCommandHandlerMessage marking command complete %@", buf, 0xCu);
    }

    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "commandContext"));
    objc_msgSend(v20, "setActionCompleted:", *(_QWORD *)(a1 + 56));

  }
}

id sub_10003B228(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "OK button tapped. Performing action %@", (uint8_t *)&v6, 0xCu);
  }

  return +[CommonUtil handleAlertAction:](CommonUtil, "handleAlertAction:", *(_QWORD *)(a1 + 32));
}

id sub_10003B2DC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Cancel button tapped. Performing action %@", (uint8_t *)&v6, 0xCu);
  }

  return +[CommonUtil handleAlertAction:](CommonUtil, "handleAlertAction:", *(_QWORD *)(a1 + 32));
}

id sub_10003B390(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "OK button tapped. Performing action %@", (uint8_t *)&v6, 0xCu);
  }

  return +[CommonUtil handleAlertAction:](CommonUtil, "handleAlertAction:", *(_QWORD *)(a1 + 32));
}

id sub_10003B444(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Cancel button tapped. Performing action %@", (uint8_t *)&v6, 0xCu);
  }

  return +[CommonUtil handleAlertAction:](CommonUtil, "handleAlertAction:", *(_QWORD *)(a1 + 32));
}

NSDictionary *__cdecl sub_10003B948(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_10003B984(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "account"));
  if (v2)
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deviceInfoForAccount:accessory:", v4, *(_QWORD *)(a1 + 32)));
  else
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deviceInfoForAccount:", v4));
  v6 = (void *)v5;

  return v6;
}

void sub_10003BA0C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  uint32_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v16 = *(_QWORD *)(a1 + 32);
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v16, 1);
      v17 = sub_1000031B8();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v18 = 138412546;
      v19 = v10;
      v20 = 2048;
      v21 = objc_msgSend(v3, "httpResponseStatus");
      v11 = "%@: successful with status %ld";
      v12 = v8;
      v13 = 22;
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v18 = 138412290;
        v19 = v10;
        v11 = "%@: Cancelled";
        v12 = v8;
        v13 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v18, v13);
LABEL_14:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v14 = objc_msgSend(v3, "httpResponseStatus");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v18 = 138412802;
      v19 = v10;
      v20 = 2048;
      v21 = v14;
      v22 = 2112;
      v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v18, 0x20u);

      goto LABEL_14;
    }
LABEL_15:

  }
}

void sub_10003C600(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  char v28;
  char v29;
  id v30;
  NSObject *v31;
  id v32;
  NSObject *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  NSObject *v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  NSObject *v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  void *v64;
  const __CFString *v65;
  void *v66;
  const __CFString *v67;
  void *v68;
  uint8_t buf[4];
  void *v70;
  __int16 v71;
  id v72;
  const __CFString *v73;
  void *v74;
  const __CFString *v75;
  void *v76;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) != 0)
    goto LABEL_55;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v4
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
  {

    goto LABEL_6;
  }
  if ((objc_msgSend(v3, "cancelled") & 1) == 0)
  {
    v17 = sub_1000031B8();
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      *(_DWORD *)buf = 138412546;
      v70 = v19;
      v71 = 2048;
      v72 = objc_msgSend(v3, "httpResponseStatus");
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", buf, 0x16u);

    }
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v20 = objc_msgSend(v10, "count");
    v21 = sub_1000031B8();
    v22 = objc_claimAutoreleasedReturnValue(v21);
    v11 = v22;
    if (!v20)
    {
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_100227EDC();
      goto LABEL_51;
    }
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      sub_1002280B8((uint64_t)v10, v11);

    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("message1")));
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v24 = 0;
    if ((-[NSObject isEqual:](v11, "isEqual:", v23) & 1) == 0 && v11)
      v24 = objc_msgSend(objc_alloc((Class)NSData), "initWithBase64EncodedString:options:", v11, 1);

    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("message2")));
    v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    if ((objc_msgSend(v25, "isEqual:", v26) & 1) != 0 || !v25)
    {

      v29 = 0;
      v27 = 0;
      v28 = v24 != 0;
    }
    else
    {
      v27 = objc_msgSend(objc_alloc((Class)NSData), "initWithBase64EncodedString:options:", v25, 1);

      v28 = v24 != 0;
      v29 = v27 != 0;
      if (v24 && v27)
      {
        v30 = sub_1000031B8();
        v31 = objc_claimAutoreleasedReturnValue(v30);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEBUG))
          sub_10022808C();

        v32 = sub_1000031B8();
        v33 = objc_claimAutoreleasedReturnValue(v32);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG))
          sub_100228018(a1);

        v62 = objc_msgSend(*(id *)(a1 + 32), "pscSessionRef");
        v34 = objc_retainAutorelease(v24);
        v35 = objc_msgSend(v34, "bytes");
        LODWORD(v34) = objc_msgSend(v34, "length");
        v27 = objc_retainAutorelease(v27);
        v36 = sub_100175CCC((uint64_t)v62, (uint64_t)v35, (int)v34, (uint64_t)objc_msgSend(v27, "bytes"), (int)objc_msgSend(v27, "length"));
        if ((_DWORD)v36)
        {
          v37 = v36;
          v38 = sub_1000031B8();
          v39 = objc_claimAutoreleasedReturnValue(v38);
          if (os_log_type_enabled(v39, OS_LOG_TYPE_FAULT))
            sub_100227FB4(v37, v39, v40, v41, v42, v43, v44, v45);

          v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pscError"));
          if (v46)
          {
            objc_msgSend(*(id *)(a1 + 32), "setPscError:", v46);
          }
          else
          {
            v67 = CFSTR("kFMDUnderlyingErrorCodeKey");
            v64 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v37));
            v68 = v64;
            v60 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v68, &v67, 1));
            v61 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("FMDAbsintheV3SigningSessionErrorDomain"), 2, v60));
            objc_msgSend(*(id *)(a1 + 32), "setPscError:", v61);

          }
          objc_msgSend(*(id *)(a1 + 32), "_destroySession");
        }
LABEL_50:

        goto LABEL_51;
      }
    }
    v50 = sub_1000031B8();
    v51 = objc_claimAutoreleasedReturnValue(v50);
    if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
      sub_100227F14(v28, v29, v51);

    v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pscError"));
    if (v52)
    {
      objc_msgSend(*(id *)(a1 + 32), "setPscError:", v52);
    }
    else
    {
      v65 = CFSTR("kFMDUnderlyingErrorCodeKey");
      v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", (v24 == 0) | (2 * (v27 == 0))));
      v66 = v53;
      v63 = v27;
      v54 = v24;
      v55 = v25;
      v56 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v66, &v65, 1));
      v57 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("FMDAbsintheV3SigningSessionErrorDomain"), 7, v56));
      objc_msgSend(*(id *)(a1 + 32), "setPscError:", v57);

      v25 = v55;
      v24 = v54;
      v27 = v63;

    }
    goto LABEL_50;
  }
LABEL_6:
  v5 = objc_msgSend(v3, "cancelled");
  v6 = sub_1000031B8();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  if (v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      *(_DWORD *)buf = 138412290;
      v70 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);

    }
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pscError"));
    if (!v10)
    {
      v11 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("FMDAbsintheV3SigningSessionErrorDomain"), 6, 0));
      objc_msgSend(*(id *)(a1 + 32), "setPscError:", v11);
LABEL_51:

      goto LABEL_52;
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_100227E04(v3, v8);

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pscError"));
    v10 = (void *)v13;
    if (v12)
    {
      if (!v13)
      {
        v75 = CFSTR("kFMDUnderlyingErrorCodeKey");
        v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", -[NSObject code](v11, "code")));
        v76 = v14;
        v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v76, &v75, 1));
        v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("FMDAbsintheV3SigningSessionErrorDomain"), 4, v15));
        objc_msgSend(*(id *)(a1 + 32), "setPscError:", v16);

        goto LABEL_51;
      }
    }
    else if (!v13)
    {
      v73 = CFSTR("kFMDUnderlyingErrorCodeKey");
      v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v3, "httpResponseStatus")));
      v74 = v47;
      v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v74, &v73, 1));
      v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("FMDAbsintheV3SigningSessionErrorDomain"), 5, v48));
      objc_msgSend(*(id *)(a1 + 32), "setPscError:", v49);

      goto LABEL_52;
    }
  }
  objc_msgSend(*(id *)(a1 + 32), "setPscError:", v10);
LABEL_52:

  v58 = sub_1000031B8();
  v59 = objc_claimAutoreleasedReturnValue(v58);
  if (os_log_type_enabled(v59, OS_LOG_TYPE_DEBUG))
    sub_100227DD8();

  objc_msgSend(*(id *)(a1 + 40), "signal");
LABEL_55:

}

void sub_10003D208(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_10003D21C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 8u);
}

void sub_10003D2C8(id a1)
{
  id v1;
  NSObject *v2;
  id v3;
  void *v4;

  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    sub_1002281B8();

  v3 = -[FMDAppleAccountManager initSingleton]([FMDAppleAccountManager alloc], "initSingleton");
  v4 = (void *)qword_100306530;
  qword_100306530 = (uint64_t)v3;

}

void sub_10003DBEC(uint64_t a1, unint64_t a2, void *a3)
{
  __CFString *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  void *v9;
  const __CFString *v10;
  const __CFString *v11;
  uint64_t v12;
  int v13;
  void *v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  const __CFString *v18;
  __int16 v19;
  const __CFString *v20;

  v5 = a3;
  if (a2 > 2)
    v6 = 0;
  else
    v6 = (uint64_t)*(&off_1002C2DE8 + a2);
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aa_personID"));
    v10 = CFSTR(" Error: ");
    v13 = 138413058;
    v14 = v9;
    v11 = &stru_1002CD590;
    v15 = 2112;
    if (!v5)
      v10 = &stru_1002CD590;
    v16 = v6;
    if (v5)
      v11 = v5;
    v17 = 2112;
    v18 = v10;
    v19 = 2112;
    v20 = v11;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "forceUserAuth (renewCredentials) of account %@ completed with status %@.%@%@", (uint8_t *)&v13, 0x2Au);

  }
  v12 = *(_QWORD *)(a1 + 40);
  if (v12)
    (*(void (**)(uint64_t, BOOL))(v12 + 16))(v12, a2 != 0);

}

void sub_10003E108(uint64_t a1, unint64_t a2, void *a3)
{
  __CFString *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  const __CFString *v10;
  const __CFString *v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  const __CFString *v17;
  __int16 v18;
  const __CFString *v19;

  v5 = a3;
  if (a2 > 2)
    v6 = 0;
  else
    v6 = (uint64_t)*(&off_1002C2DE8 + a2);
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = CFSTR(" Error: ");
    v12 = 138413058;
    if (!v5)
      v10 = &stru_1002CD590;
    v13 = v9;
    if (v5)
      v11 = v5;
    else
      v11 = &stru_1002CD590;
    v14 = 2112;
    v15 = v6;
    v16 = 2112;
    v17 = v10;
    v18 = 2112;
    v19 = v11;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Renew account credentials for account %@ - status %@.%@%@", (uint8_t *)&v12, 0x2Au);
  }

}

void sub_10003E2EC(uint64_t a1, char a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  id v12;

  v5 = a3;
  if ((a2 & 1) == 0)
  {
    v6 = sub_1000031B8();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aa_personID"));
      v9 = 138412546;
      v10 = v8;
      v11 = 2112;
      v12 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Account %@ failed to save kAccountDataclassDeviceLocator: %@", (uint8_t *)&v9, 0x16u);

    }
  }

}

void sub_10003EF68(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  uint32_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v16 = *(_QWORD *)(a1 + 32);
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v16, 1);
      v17 = sub_1000031B8();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v18 = 138412546;
      v19 = v10;
      v20 = 2048;
      v21 = objc_msgSend(v3, "httpResponseStatus");
      v11 = "%@: successful with status %ld";
      v12 = v8;
      v13 = 22;
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v18 = 138412290;
        v19 = v10;
        v11 = "%@: Cancelled";
        v12 = v8;
        v13 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v18, v13);
LABEL_14:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v14 = objc_msgSend(v3, "httpResponseStatus");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v18 = 138412802;
      v19 = v10;
      v20 = 2048;
      v21 = v14;
      v22 = 2112;
      v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v18, 0x20u);

      goto LABEL_14;
    }
LABEL_15:

  }
}

uint64_t sub_10003F1B0(const __CFString *a1, const void *a2)
{
  io_registry_entry_t v4;
  io_object_t v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  NSObject *v9;
  _DWORD v11[2];

  if (a1 && a2)
  {
    v4 = sub_10003F3B0();
    if (v4)
    {
      v5 = v4;
      v6 = IORegistryEntrySetCFProperty(v4, a1, a2);
      v7 = sub_1000031B8();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        v11[0] = 67109120;
        v11[1] = v6;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "IORegistryEntrySetCFProperty returned:%d", (uint8_t *)v11, 8u);
      }
      IOObjectRelease(v5);
    }
    else
    {
      v9 = sub_1000031B8();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_100228388();
      return 0;
    }
  }
  else
  {
    v8 = sub_1000031B8();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10022835C();
    return 4;
  }
  return v6;
}

uint64_t sub_10003F2D4(const __CFString *a1, CFDataRef *a2)
{
  io_registry_entry_t v4;
  io_object_t v5;
  const __CFData *CFProperty;
  const __CFData *v7;
  CFTypeID v8;
  uint64_t v9;
  NSObject *v10;

  if (a1 && a2)
  {
    v4 = sub_10003F3B0();
    if (v4)
    {
      v5 = v4;
      CFProperty = (const __CFData *)IORegistryEntryCreateCFProperty(v4, a1, kCFAllocatorDefault, 0);
      if (CFProperty)
      {
        v7 = CFProperty;
        v8 = CFGetTypeID(CFProperty);
        if (v8 == CFDataGetTypeID())
          *a2 = CFDataCreateCopy(kCFAllocatorDefault, v7);
        CFRelease(v7);
        v9 = 0;
      }
      else
      {
        v9 = 4294967294;
      }
      IOObjectRelease(v5);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    v10 = sub_1000031B8();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1002283B4();
    return 4;
  }
  return v9;
}

uint64_t sub_10003F3B0()
{
  mach_port_t mainPort;

  mainPort = 0;
  if (IOMasterPort(bootstrap_port, &mainPort))
    return 0;
  else
    return IORegistryEntryFromPath(mainPort, "IODeviceTree:/options");
}

void sub_10003FA78(id a1)
{
  FMDEventLogger *v1;
  void *v2;

  v1 = objc_alloc_init(FMDEventLogger);
  v2 = (void *)qword_100306540;
  qword_100306540 = (uint64_t)v1;

}

void sub_10003FC70(id a1, FMDEventLoggerFacility *a2, unint64_t a3, BOOL *a4)
{
  -[FMDEventLoggerFacility reset](a2, "reset", a3, a4);
}

void sub_10003FD14(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  int v8;
  id v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "facilitiesDictionary"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", v3));

  v6 = sub_1000031B8();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Logging event to facility %@", (uint8_t *)&v8, 0xCu);
  }

  objc_msgSend(v5, "logEvent:", *(_QWORD *)(a1 + 40));
}

void sub_10004050C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  FMDNanoSupportProtoNeedSignature *v11;
  void *v12;
  FMDNanoSupportProtoNeedSignature *v13;
  id v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  FMDNanoSupportProtoSignedData *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  void *v31;

  v8 = a4;
  v9 = a5;
  v10 = a3;
  v11 = [FMDNanoSupportProtoNeedSignature alloc];
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "data"));

  v13 = -[FMDNanoSupportProtoNeedSignature initWithData:](v11, "initWithData:", v12);
  v14 = sub_1000031B8();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoNeedSignature udid](v13, "udid"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoNeedSignature serialNumber](v13, "serialNumber"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoNeedSignature productType](v13, "productType"));
    *(_DWORD *)buf = 138413058;
    v25 = v8;
    v26 = 2112;
    v27 = v16;
    v28 = 2112;
    v29 = v17;
    v30 = 2112;
    v31 = v18;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Received request %@ to sign some data %@,%@,%@. Sending back an error as it is unsupported.", buf, 0x2Au);

  }
  v19 = objc_alloc_init(FMDNanoSupportProtoSignedData);
  -[FMDNanoSupportProtoSignedData setErrorOccurred:](v19, "setErrorOccurred:", 1);
  v20 = objc_alloc((Class)IDSProtobuf);
  v21 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoSignedData data](v19, "data"));
  v22 = objc_msgSend(v20, "initWithProtobufData:type:isResponse:", v21, 2, 1);

  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "idsManager"));
  objc_msgSend(v23, "sendMessageWithProtobuf:inResponseToRequest:withPriority:timeout:bypassingDuet:deviceID:requestAcceptedHandler:responseHandler:", v22, v8, 0, 1, v9, 0, 0.0, 0);

}

void sub_100040718(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  FMDNanoSupportProtoNeedSignatureV3 *v11;
  void *v12;
  FMDNanoSupportProtoNeedSignatureV3 *v13;
  id v14;
  NSObject *v15;
  void *v16;
  FMDNanoSupportProtoSignedDataV3 *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint8_t buf[4];
  id v23;
  __int16 v24;
  id v25;

  v8 = a4;
  v9 = a5;
  v10 = a3;
  v11 = [FMDNanoSupportProtoNeedSignatureV3 alloc];
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "data"));

  v13 = -[FMDNanoSupportProtoNeedSignatureV3 initWithData:](v11, "initWithData:", v12);
  v14 = sub_1000031B8();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoNeedSignatureV3 requestJsonData](v13, "requestJsonData"));
    *(_DWORD *)buf = 138412546;
    v23 = v8;
    v24 = 2048;
    v25 = objc_msgSend(v16, "length");
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Received request %@ to sign data of length %lu. Sending back an error as it is unsupported.", buf, 0x16u);

  }
  v17 = objc_alloc_init(FMDNanoSupportProtoSignedDataV3);
  -[FMDNanoSupportProtoSignedDataV3 setErrorOccurred:](v17, "setErrorOccurred:", 1);
  v18 = objc_alloc((Class)IDSProtobuf);
  v19 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoSignedDataV3 data](v17, "data"));
  v20 = objc_msgSend(v18, "initWithProtobufData:type:isResponse:", v19, 4, 1);

  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "idsManager"));
  objc_msgSend(v21, "sendMessageWithProtobuf:inResponseToRequest:withPriority:timeout:bypassingDuet:deviceID:requestAcceptedHandler:responseHandler:", v20, v8, 0, 1, v9, 0, 0.0, 0);

}

void sub_1000408F0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  FMDNanoSupportProtoNeedSignatureV4 *v11;
  void *v12;
  FMDNanoSupportProtoNeedSignatureV4 *v13;
  id v14;
  NSObject *v15;
  void *v16;
  FMDNanoSupportProtoSignedDataV4 *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint8_t buf[4];
  id v23;
  __int16 v24;
  id v25;

  v8 = a4;
  v9 = a5;
  v10 = a3;
  v11 = [FMDNanoSupportProtoNeedSignatureV4 alloc];
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "data"));

  v13 = -[FMDNanoSupportProtoNeedSignatureV4 initWithData:](v11, "initWithData:", v12);
  v14 = sub_1000031B8();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoNeedSignatureV4 requestJsonData](v13, "requestJsonData"));
    *(_DWORD *)buf = 138412546;
    v23 = v8;
    v24 = 2048;
    v25 = objc_msgSend(v16, "length");
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Received request %@ to sign data of length %lu. Sending back an error as it is unsupported.", buf, 0x16u);

  }
  v17 = objc_alloc_init(FMDNanoSupportProtoSignedDataV4);
  -[FMDNanoSupportProtoSignedDataV4 setErrorOccurred:](v17, "setErrorOccurred:", 1);
  v18 = objc_alloc((Class)IDSProtobuf);
  v19 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoSignedDataV4 data](v17, "data"));
  v20 = objc_msgSend(v18, "initWithProtobufData:type:isResponse:", v19, 8, 1);

  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "idsManager"));
  objc_msgSend(v21, "sendMessageWithProtobuf:inResponseToRequest:withPriority:timeout:bypassingDuet:deviceID:requestAcceptedHandler:responseHandler:", v20, v8, 0, 1, v9, 0, 0.0, 0);

}

void sub_100040AC8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  FMDNanoSupportProtoNeedSignatureV5 *v11;
  void *v12;
  FMDNanoSupportProtoNeedSignatureV5 *v13;
  id v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  FMDNanoSupportProtoSignedDataV5 *v24;
  id v25;
  void *v26;
  id v27;
  FMDNanoSupportProtoSignedDataV5 *v28;
  void *v29;
  unsigned int v30;
  id v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  void *v42;
  void *v43;
  unsigned __int8 v44;
  id v45;
  NSObject *v46;
  NSObject *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  uint8_t buf[4];
  id v65;
  __int16 v66;
  id v67;

  v8 = a4;
  v9 = a5;
  v10 = a3;
  v11 = [FMDNanoSupportProtoNeedSignatureV5 alloc];
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "data"));

  v13 = -[FMDNanoSupportProtoNeedSignatureV5 initWithData:](v11, "initWithData:", v12);
  v14 = sub_1000031B8();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoNeedSignatureV5 requestJsonData](v13, "requestJsonData"));
    *(_DWORD *)buf = 138412546;
    v65 = v8;
    v66 = 2048;
    v67 = objc_msgSend(v16, "length");
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Received request %@ to sign data of length %lu", buf, 0x16u);

  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoNeedSignatureV5 requestJsonData](v13, "requestJsonData"));
  v63 = 0;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v17, 0, &v63));
  v19 = v63;

  v20 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoNeedSignatureV5 activationLockRequestUUIDString](v13, "activationLockRequestUUIDString"));
  if (v20)
    v61 = objc_msgSend(objc_alloc((Class)NSUUID), "initWithUUIDString:", v20);
  else
    v61 = 0;
  v21 = a1;
  v62 = v18;
  if (!v19)
  {
    v24 = (FMDNanoSupportProtoSignedDataV5 *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("dsid")));
    v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v30 = -[FMDNanoSupportProtoSignedDataV5 isEqual:](v24, "isEqual:", v29);

    if (v30)
    {
      v31 = sub_1000031B8();
      v32 = objc_claimAutoreleasedReturnValue(v31);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        sub_1002284B8(v32, v33, v34, v35, v36, v37, v38, v39);

    }
    v40 = sub_1000031B8();
    v41 = objc_claimAutoreleasedReturnValue(v40);
    if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "Fetching FMIP account...", buf, 2u);
    }

    v42 = (void *)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
    v27 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "account"));

    v60 = v9;
    if (v27)
    {
      v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "dsid"));
      v44 = -[FMDNanoSupportProtoSignedDataV5 isEqualToString:](v24, "isEqualToString:", v43);

      v45 = sub_1000031B8();
      v46 = objc_claimAutoreleasedReturnValue(v45);
      v47 = v46;
      if ((v44 & 1) != 0)
      {
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "Proceeding with signing the requested data...", buf, 2u);
        }

        v28 = (FMDNanoSupportProtoSignedDataV5 *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v21 + 32), "_v5SignedResponseForRequestBody:activationLockRequestUUID:", v62, v61));
        goto LABEL_26;
      }
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        sub_100228414(v27, (uint64_t)v24, v47);
    }
    else
    {
      v48 = sub_1000031B8();
      v47 = objc_claimAutoreleasedReturnValue(v48);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
        sub_1002283E0(v47, v49, v50, v51, v52, v53, v54, v55);
    }

    v28 = objc_alloc_init(FMDNanoSupportProtoSignedDataV5);
    -[FMDNanoSupportProtoSignedDataV5 setErrorOccurred:](v28, "setErrorOccurred:", 1);
LABEL_26:
    v56 = objc_alloc((Class)IDSProtobuf);
    v57 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoSignedDataV5 data](v28, "data"));
    v58 = objc_msgSend(v56, "initWithProtobufData:type:isResponse:", v57, 10, 1);

    v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v21 + 32), "idsManager"));
    v9 = v60;
    objc_msgSend(v59, "sendMessageWithProtobuf:inResponseToRequest:withPriority:timeout:bypassingDuet:deviceID:requestAcceptedHandler:responseHandler:", v58, v8, 0, 1, v60, 0, 0.0, 0);

    goto LABEL_27;
  }
  v22 = sub_1000031B8();
  v23 = objc_claimAutoreleasedReturnValue(v22);
  if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    sub_1002284EC((uint64_t)v19, v23);

  v24 = objc_alloc_init(FMDNanoSupportProtoSignedDataV5);
  -[FMDNanoSupportProtoSignedDataV5 setErrorOccurred:](v24, "setErrorOccurred:", 1);
  v25 = objc_alloc((Class)IDSProtobuf);
  v26 = (void *)objc_claimAutoreleasedReturnValue(-[FMDNanoSupportProtoSignedDataV5 data](v24, "data"));
  v27 = objc_msgSend(v25, "initWithProtobufData:type:isResponse:", v26, 10, 1);

  v28 = (FMDNanoSupportProtoSignedDataV5 *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v21 + 32), "idsManager"));
  -[FMDNanoSupportProtoSignedDataV5 sendMessageWithProtobuf:inResponseToRequest:withPriority:timeout:bypassingDuet:deviceID:requestAcceptedHandler:responseHandler:](v28, "sendMessageWithProtobuf:inResponseToRequest:withPriority:timeout:bypassingDuet:deviceID:requestAcceptedHandler:responseHandler:", v27, v8, 0, 1, v9, 0, 0.0, 0);
LABEL_27:

}

void sub_100040FB4(id a1, FMNanoIDSManager *a2, IDSProtobuf *a3, NSString *a4, NSString *a5)
{
  NSString *v6;
  NSString *v7;
  id v8;
  NSObject *v9;
  void *v10;
  NSString *v11;
  _QWORD v12[4];
  NSString *v13;
  uint8_t buf[4];
  NSString *v15;

  v6 = a4;
  v7 = a5;
  v8 = sub_1000031B8();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v15 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Received request %@ to exit lost mode for watch.", buf, 0xCu);
  }

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[FMDFMIPManager sharedInstance](FMDFMIPManager, "sharedInstance"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000410DC;
  v12[3] = &unk_1002C1690;
  v13 = v6;
  v11 = v6;
  objc_msgSend(v10, "initiateLostModeExitAuthForIDSDeviceID:withCompletion:", v7, v12);

}

void sub_1000410DC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;

  v3 = a2;
  if (v3)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_100228560(a1, (uint64_t)v3, v5);

  }
}

void sub_100041A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100041A64(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100041A74(uint64_t a1)
{

}

void sub_100041A7C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v15 = a2;
  v5 = a3;
  v6 = v5;
  if (v5)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v8 = v5;
    v9 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v8;
  }
  else
  {
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "signature"));
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;

    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "attestation"));
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v9 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v13;
  }

  objc_msgSend(*(id *)(a1 + 32), "signal");
}

void sub_100041B48(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

NSDictionary *__cdecl sub_100042030(id a1)
{
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithContentsOfFile:](NSDictionary, "dictionaryWithContentsOfFile:", CFSTR("/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.FMIPAccounts.plist")));
  if (v2)
    objc_msgSend(v1, "addEntriesFromDictionary:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithContentsOfFile:](NSDictionary, "dictionaryWithContentsOfFile:", CFSTR("/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.FMIPAccounts.notbackedup.plist")));
  if (v3)
    objc_msgSend(v1, "addEntriesFromDictionary:", v3);

  return (NSDictionary *)v1;
}

void sub_100043AFC(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_10004498C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void **v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v17 = _NSConcreteStackBlock;
  v18 = 3221225472;
  v19 = sub_100044ABC;
  v20 = &unk_1002C3000;
  v10 = *(id *)(a1 + 48);
  v21 = v8;
  v22 = v7;
  v23 = v9;
  v24 = v10;
  v11 = v7;
  v12 = v9;
  v13 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, &v17);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "requestModifierLock", v17, v18, v19, v20));
  objc_msgSend(v14, "lock");

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "requests"));
  objc_msgSend(v15, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "requestModifierLock"));
  objc_msgSend(v16, "unlock");

}

void sub_100044ABC(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = objc_msgSend(*(id *)(a1 + 32), "statusCode");
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allHeaderFields"));
  v4 = objc_msgSend(*(id *)(a1 + 40), "copy");
  (*(void (**)(uint64_t, id, id, id, _QWORD, _QWORD))(v2 + 16))(v2, v3, v5, v4, 0, *(_QWORD *)(a1 + 48));

}

void sub_1000455F8(uint64_t a1)
{
  id WeakRetained;
  id v2;
  id v3;
  void *v4;
  FMDDeviceMotion *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v9[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_alloc_init((Class)CMMotionActivityManager);
  objc_msgSend(WeakRetained, "setMotionActivityManager:", v2);

  v3 = objc_alloc_init((Class)NSOperationQueue);
  objc_msgSend(WeakRetained, "setActivityUpdateQueue:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activityUpdateQueue"));
  objc_msgSend(v4, "setMaxConcurrentOperationCount:", 1);

  v5 = objc_alloc_init(FMDDeviceMotion);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  -[FMDDeviceMotion setActivityStartDate:](v5, "setActivityStartDate:", v6);

  -[FMDDeviceMotion setActivityState:](v5, "setActivityState:", 0);
  objc_msgSend(WeakRetained, "setLastKnownDeviceMotion:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "motionActivityManager"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activityUpdateQueue"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100045744;
  v9[3] = &unk_1002C3050;
  v9[4] = WeakRetained;
  objc_msgSend(v7, "startActivityUpdatesToQueue:withHandler:", v8, v9);

}

void sub_100045744(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_deviceMotionFrom:", a2));
  objc_msgSend(*(id *)(a1 + 32), "setLastKnownDeviceMotion:", v3);

}

void sub_100045820(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "motionActivityManager"));
  objc_msgSend(v1, "stopActivityUpdates");

  objc_msgSend(WeakRetained, "setMotionActivityManager:", 0);
  objc_msgSend(WeakRetained, "setActivityUpdateQueue:", 0);
  objc_msgSend(WeakRetained, "setLastKnownDeviceMotion:", 0);

}

NSDictionary *__cdecl sub_100045A44(id a1)
{
  return 0;
}

void sub_100046004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100046028(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "checkShutdownSoonRegistration");

}

void sub_100046094(id a1)
{
  FMDAccountStoreFMIP *v1;
  void *v2;

  v1 = objc_alloc_init(FMDAccountStoreFMIP);
  v2 = (void *)qword_100306550;
  qword_100306550 = (uint64_t)v1;

}

void sub_100046C0C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  objc_super v7;

  v3 = a2;
  if (v3)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4)
      (*(void (**)(uint64_t, id))(v4 + 16))(v4, v3);
  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[FMDMagSafeDataStore sharedInstance](FMDMagSafeDataStore, "sharedInstance"));
    objc_msgSend(v5, "clearDataStore");

    v6 = *(_QWORD *)(a1 + 40);
    v7.receiver = *(id *)(a1 + 32);
    v7.super_class = (Class)FMDFMIPServiceProvider;
    objc_msgSendSuper2(&v7, "accountRemoveRequestedWithCompletion:", v6);
  }

}

void sub_100046DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100046E0C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  unsigned int v5;
  FMDBatteryInfo *v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  FMDEventLoggerEventScalar *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "checkShutdownSoonRegistration");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v3, "postNotificationName:object:", CFSTR("FMDSystemShutdownSoonNotification"), 0);

  v4 = (id)objc_claimAutoreleasedReturnValue(+[FMSystemInfo sharedInstance](FMSystemInfo, "sharedInstance"));
  if (!objc_msgSend(v4, "isInternalBuild"))
    goto LABEL_4;
  v5 = +[FMDPreferencesMgr notifyOnShutdownSoon](FMDPreferencesMgr, "notifyOnShutdownSoon");

  if (v5)
  {
    v4 = objc_alloc_init((Class)NSDateFormatter);
    objc_msgSend(v4, "setDateStyle:", 1);
    objc_msgSend(v4, "setTimeStyle:", 2);
    v6 = objc_alloc_init(FMDBatteryInfo);
    -[FMDBatteryInfo batteryLevel](v6, "batteryLevel");
    v8 = v7 * 100.0;

    v9 = objc_alloc_init((Class)FMAlert);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "stringFromDate:", v10));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Shutdown soon notification\n%@\nBattery level : %.2f%%"), v11, *(_QWORD *)&v8));
    objc_msgSend(v9, "setMsgText:", v12);

    objc_msgSend(v9, "setMsgTitle:", CFSTR("Find My iPhone"));
    objc_msgSend(v9, "setShowMsgInLockScreen:", 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[FMAlertManager sharedInstance](FMAlertManager, "sharedInstance"));
    objc_msgSend(v13, "activateAlert:", v9);

LABEL_4:
  }
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("LaunchEvent.%@"), *(_QWORD *)(a1 + 32)));
  v15 = -[FMDEventLoggerEventScalar initWithEventName:]([FMDEventLoggerEventScalar alloc], "initWithEventName:", v14);
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLogger sharedLogger](FMDEventLogger, "sharedLogger"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLoggerFacilityDataPeek facilityName](FMDEventLoggerFacilityDataPeek, "facilityName"));
  v19 = v17;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v19, 1));
  objc_msgSend(v16, "logEvent:toFacilitiesNamed:", v15, v18);

}

void sub_100047104(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "authToken"));
  v3 = objc_msgSend(v2, "length");

  if (!v3)
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(+[FMDAppleAccountManager sharedInstance](FMDAppleAccountManager, "sharedInstance"));
    objc_msgSend(v4, "fixFMIPAuthTokenShouldForce:", 0);

  }
}

void sub_10004723C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100047254(uint64_t a1)
{
  id result;
  objc_super v3;

  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)FMDFMIPServiceProvider;
  result = objc_msgSendSuper2(&v3, "essentialServerInfoMissingError");
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_DWORD)result;
  return result;
}

void sub_100047554(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  void *v20;
  __int16 v21;
  id v22;
  __int16 v23;
  void *v24;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
      v12 = sub_1000031B8();
      v13 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v19 = 138412546;
        v20 = v14;
        v21 = 2048;
        v22 = objc_msgSend(v3, "httpResponseStatus");
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", (uint8_t *)&v19, 0x16u);

      }
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
      -[NSObject setLastIdentityTime:](v7, "setLastIdentityTime:", v15);

      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accountStore"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
      objc_msgSend(v16, "saveAccount:", v17);

      v18 = (void *)objc_claimAutoreleasedReturnValue(+[FMDStartupRegisterManager sharedInstance](FMDStartupRegisterManager, "sharedInstance"));
      objc_msgSend(v18, "eventDidOccur:", 12);

      +[FMPreferencesUtil setInteger:forKey:inDomain:](FMPreferencesUtil, "setInteger:forKey:inDomain:", *(_QWORD *)(a1 + 40), CFSTR("identityVersion"), kFMDNotBackedUpPrefDomain);
      +[FMPreferencesUtil synchronizeDomain:](FMPreferencesUtil, "synchronizeDomain:", kFMDNotBackedUpPrefDomain);
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[FMDLocalActivationLockInfoManager sharedInstance](FMDLocalActivationLockInfoManager, "sharedInstance"));
      objc_msgSend(v9, "updateActivationLockStatus:", 1);
      goto LABEL_11;
    }
    v5 = objc_msgSend(v3, "cancelled");
    v6 = sub_1000031B8();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v8)
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v19 = 138412290;
        v20 = v9;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v19, 0xCu);
LABEL_11:

      }
    }
    else if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v10 = objc_msgSend(v3, "httpResponseStatus");
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v19 = 138412802;
      v20 = v9;
      v21 = 2048;
      v22 = v10;
      v23 = 2112;
      v24 = v11;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v19, 0x20u);

      goto LABEL_11;
    }

  }
}

NSDictionary *__cdecl sub_100047B70(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_100047BAC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100047BB4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "authId"));
  objc_msgSend(v2, "fm_safeSetObject:forKey:", v4, CFSTR("X-Apple-PrsId"));

  return v2;
}

void sub_100047C28(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  void *v21;
  NSErrorUserInfoKey v22;
  void *v23;
  uint8_t buf[4];
  void *v25;
  __int16 v26;
  id v27;
  __int16 v28;
  void *v29;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) != 0)
    goto LABEL_16;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v4
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
  {

    goto LABEL_6;
  }
  if ((objc_msgSend(v3, "cancelled") & 1) != 0)
  {
LABEL_6:
    v5 = objc_msgSend(v3, "cancelled");
    v6 = sub_1000532DC();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v8)
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        *(_DWORD *)buf = 138412290;
        v25 = v9;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_11:

      }
    }
    else if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v10 = objc_msgSend(v3, "httpResponseStatus");
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      *(_DWORD *)buf = 138412802;
      v25 = v9;
      v26 = 2048;
      v27 = v10;
      v28 = 2112;
      v29 = v11;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_11;
    }

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Error contacting the server: %@"), v13));

    }
    else
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Server returned error code %ld"), objc_msgSend(v3, "httpResponseStatus")));
    }
    v15 = *(_QWORD *)(a1 + 32);
    v16 = kFMDErrorDomain;
    v22 = NSLocalizedFailureReasonErrorKey;
    v23 = v14;
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v23, &v22, 1));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v16, 12, v17));
    (*(void (**)(uint64_t, void *))(v15 + 16))(v15, v18);

    goto LABEL_16;
  }
  v19 = sub_1000532DC();
  v20 = objc_claimAutoreleasedReturnValue(v19);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
    *(_DWORD *)buf = 138412546;
    v25 = v21;
    v26 = 2048;
    v27 = objc_msgSend(v3, "httpResponseStatus");
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", buf, 0x16u);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
LABEL_16:

}

void sub_100048308(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint8_t v17[16];

  v5 = a2;
  v6 = a3;
  v7 = sub_1000531FC();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_100228C60((uint64_t)v6, v9, v10, v11, v12, v13, v14, v15);

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Got ephemeral token for repair device.", v17, 2u);
    }

    v16 = *(id *)(a1 + 32);
    objc_msgSend(v16, "setEphemeralToken:", v5);
    objc_msgSend(*(id *)(a1 + 40), "_enableRepairWithContext:callingClient:completion:", v16, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));

  }
}

NSDictionary *__cdecl sub_10004889C(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_1000488D8(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_1000488E0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "authId"));
  objc_msgSend(v2, "fm_safeSetObject:forKey:", v4, CFSTR("X-Apple-PrsId"));

  return v2;
}

void sub_1000489F8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  NSErrorUserInfoKey v25;
  id v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  id v30;
  __int16 v31;
  void *v32;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v19 = sub_1000531FC();
      v20 = objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        *(_DWORD *)buf = 138412546;
        v28 = v21;
        v29 = 2048;
        v30 = objc_msgSend(v3, "httpResponseStatus");
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", buf, 0x16u);

      }
      v22 = objc_alloc((Class)FMDRepairDeviceResult);
      v24 = *(_QWORD *)(a1 + 32);
      v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v24, 1));
      v14 = objc_msgSend(v22, "initWithEligibleDevices:devicesInRepairMode:", &__NSArray0__struct, v23);

      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
      goto LABEL_16;
    }
    v5 = objc_msgSend(v3, "cancelled");
    v6 = sub_1000531FC();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v8)
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        *(_DWORD *)buf = 138412290;
        v28 = v9;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_11:

      }
    }
    else if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v10 = objc_msgSend(v3, "httpResponseStatus");
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      *(_DWORD *)buf = 138412802;
      v28 = v9;
      v29 = 2048;
      v30 = v10;
      v31 = 2112;
      v32 = v11;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_11;
    }

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v14 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Error contacting the server: %@"), v13));

    }
    else
    {
      v14 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Server returned error code %ld"), objc_msgSend(v3, "httpResponseStatus")));
    }
    v15 = *(_QWORD *)(a1 + 40);
    v16 = kFMDErrorDomain;
    v25 = NSLocalizedFailureReasonErrorKey;
    v26 = v14;
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v16, 3, v17));
    (*(void (**)(uint64_t, _QWORD, void *))(v15 + 16))(v15, 0, v18);

LABEL_16:
  }

}

void sub_1000490B4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  int v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v11 = 138412290;
    v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Failed to instantiate authContext: %@", (uint8_t *)&v11, 0xCu);
  }

  v9 = *(_QWORD *)(a1 + 32);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", AKAuthenticationPasswordKey));
  (*(void (**)(uint64_t, void *, id))(v9 + 16))(v9, v10, v6);

}

void sub_10004964C(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  unsigned int v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  unsigned int v25;
  uint64_t *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *i;
  void *v39;
  void *v40;
  unsigned int v41;
  void *v42;
  void *v43;
  unsigned int v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  NSObject *v50;
  id v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  void *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  NSErrorUserInfoKey v69;
  void *v70;
  const __CFString *v71;
  uint8_t v72[128];
  uint8_t buf[4];
  uint64_t v74;
  __int16 v75;
  void *v76;
  __int16 v77;
  id v78;
  __int16 v79;
  void *v80;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[FMDPreferencesMgr errorForUnregister](FMDPreferencesMgr, "errorForUnregister"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v5
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399
      || v4)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v6 = sub_1000031B8();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v9 = (void *)a1[4];
        *(_DWORD *)buf = 138412802;
        v74 = (uint64_t)v8;
        v75 = 2112;
        v76 = v9;
        v77 = 2048;
        v78 = objc_msgSend(v3, "httpResponseStatus");
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ for paired device %@: successful with status %ld", buf, 0x20u);

      }
      v10 = a1[6];
      if (v10)
        (*(void (**)(uint64_t, _QWORD))(v10 + 16))(v10, 0);
LABEL_49:

      goto LABEL_50;
    }
    v11 = objc_msgSend(v3, "cancelled");
    v12 = sub_1000031B8();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
    if (v11)
    {
      if (!v14)
        goto LABEL_18;
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      *(_DWORD *)buf = 138412290;
      v74 = (uint64_t)v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
    }
    else
    {
      if (!v14)
        goto LABEL_18;
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v16 = (void *)a1[4];
      v17 = objc_msgSend(v3, "httpResponseStatus");
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      *(_DWORD *)buf = 138413058;
      v74 = (uint64_t)v15;
      v75 = 2112;
      v76 = v16;
      v77 = 2048;
      v78 = v17;
      v79 = 2112;
      v80 = v18;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@ for paired device %@: Error (%ld) %@", buf, 0x2Au);

    }
LABEL_18:

    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v19)
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v21 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Error contacting the server: %@"), v20));

    }
    else
    {
      if (v4)
        v22 = v4;
      else
        v22 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Server returned error code %ld"), objc_msgSend(v3, "httpResponseStatus")));
      v21 = (uint64_t)v22;
    }
    v23 = sub_1000031B8();
    v24 = objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v74 = v21;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
    }
    v61 = (void *)v21;

    v62 = v4;
    if (v4)
    {
      v25 = objc_msgSend(v4, "containsString:", CFSTR("network"));
      v26 = &qword_100253770;
      if (!v25)
        v26 = &qword_100253760;
      v27 = (id)*v26;
      v28 = (void *)a1[5];
    }
    else
    {
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "alertFromServerResponse"));

      if (v29)
        goto LABEL_32;
      v60 = (void *)a1[5];
      v27 = objc_msgSend(v3, "responseErrorType");
      v28 = v60;
    }
    objc_msgSend(v28, "_showPairedDeviceDisableFMIPErrorForResponseError:", v27);
LABEL_32:
    v63 = v3;
    +[NSDate timeIntervalSinceReferenceDate](NSDate, "timeIntervalSinceReferenceDate");
    v64 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
    v30 = (void *)objc_claimAutoreleasedReturnValue(+[NRPairedDeviceRegistry sharedInstance](NRPairedDeviceRegistry, "sharedInstance"));
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "getPairedDevices"));

    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v32 = v31;
    v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v65, v72, 16);
    if (v33)
    {
      v34 = v33;
      v35 = *(_QWORD *)v66;
      v36 = NRDevicePropertyIsPaired;
      v37 = NRDevicePropertyUDID;
      while (2)
      {
        for (i = 0; i != v34; i = (char *)i + 1)
        {
          if (*(_QWORD *)v66 != v35)
            objc_enumerationMutation(v32);
          v39 = *(void **)(*((_QWORD *)&v65 + 1) + 8 * (_QWORD)i);
          v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "valueForProperty:", v36));
          v41 = objc_msgSend(v40, "BOOLValue");

          if (v41)
          {
            v42 = (void *)a1[4];
            if (v42)
            {
              v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "valueForProperty:", v37));
              v44 = objc_msgSend(v42, "isEqualToString:", v43);

              if (v44)
              {
                v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "valueForProperty:", NRDevicePropertyPairingID));
                v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "valueForProperty:", NRDevicePropertyLocalPairingDataStorePath));
                v47 = objc_alloc((Class)NPSDomainAccessor);
                v48 = objc_msgSend(v47, "initWithDomain:pairingID:pairingDataStore:", kFMDWatchNotBackedUpPrefDomain, v45, v46);
                v49 = sub_1000031B8();
                v50 = objc_claimAutoreleasedReturnValue(v49);
                if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138412546;
                  v74 = (uint64_t)v64;
                  v75 = 2112;
                  v76 = v45;
                  _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "Syncing registerForceTime %@ to device with pairing ID %@", buf, 0x16u);
                }

                objc_msgSend(v48, "setObject:forKey:", v64, CFSTR("LastRegisterForceTime"));
                v51 = objc_msgSend(v48, "synchronize");
                v52 = (void *)objc_opt_new(NPSManager);
                v53 = kFMDWatchNotBackedUpPrefDomain;
                v71 = CFSTR("LastRegisterForceTime");
                v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v71, 1));
                v55 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v54));
                objc_msgSend(v52, "synchronizeNanoDomain:keys:", v53, v55);

                goto LABEL_46;
              }
            }
          }
        }
        v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v65, v72, 16);
        if (v34)
          continue;
        break;
      }
    }
LABEL_46:

    v56 = a1[6];
    if (v56)
    {
      v57 = kFMDErrorDomain;
      v69 = NSLocalizedFailureReasonErrorKey;
      v70 = v61;
      v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v70, &v69, 1));
      v59 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v57, 12, v58));
      (*(void (**)(uint64_t, void *))(v56 + 16))(v56, v59);

    }
    v4 = v62;
    v3 = v63;
    goto LABEL_49;
  }
LABEL_50:

}

void sub_10004A314(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v15;
  void *v16;
  unsigned int v17;
  id v18;
  NSObject *v19;
  _BOOL4 v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  NSObject *v27;
  unsigned int v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  FMDFMIPAccount *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _UNKNOWN **v46;
  void *i;
  void *v48;
  void *v49;
  unsigned int v50;
  id v51;
  unsigned int v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  NSObject *v58;
  id v59;
  void *v60;
  uint64_t v61;
  void *v62;
  void *v63;
  FMDFMIPAccount *v64;
  uint64_t v65;
  void *v66;
  id v67;
  FMDFMIPAccount *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  _QWORD v78[4];
  __CFString *v79;
  __CFString *v80;
  __CFString *v81;
  uint64_t v82;
  _QWORD block[5];
  _QWORD v84[5];
  FMDFMIPAccount *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  const __CFString *v90;
  uint8_t v91[128];
  uint8_t buf[4];
  void *v93;
  __int16 v94;
  id v95;
  __int16 v96;
  void *v97;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) != 0)
    goto LABEL_44;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[FMDPreferencesMgr errorForUnregister](FMDPreferencesMgr, "errorForUnregister"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v5
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399
    || v4)
  {

LABEL_13:
    v17 = objc_msgSend(v3, "cancelled");
    v18 = sub_1000031B8();
    v19 = objc_claimAutoreleasedReturnValue(v18);
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (v17)
    {
      if (!v20)
        goto LABEL_19;
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      *(_DWORD *)buf = 138412290;
      v93 = v21;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
    }
    else
    {
      if (!v20)
        goto LABEL_19;
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v22 = objc_msgSend(v3, "httpResponseStatus");
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      *(_DWORD *)buf = 138412802;
      v93 = v21;
      v94 = 2048;
      v95 = v22;
      v96 = 2112;
      v97 = v23;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

    }
LABEL_19:

    objc_msgSend(*(id *)(a1 + 32), "setUnregisterState:", 3);
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(*(id *)(a1 + 32), "setLastUnregisterFailedTime:", v24);

    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accountStore"));
    objc_msgSend(v25, "saveAccount:", *(_QWORD *)(a1 + 32));

    v26 = sub_1000031B8();
    v27 = objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      sub_100228D28(v3, v27);

    v72 = v3;
    v70 = v4;
    if (v4)
    {
      v28 = objc_msgSend(v4, "isEqualToString:", CFSTR("network"));
      v29 = &qword_100253770;
      if (!v28)
        v29 = &qword_100253760;
      v30 = *v29;
      objc_msgSend(*(id *)(a1 + 40), "_showUnregisterDeviceErrorForResponseError:inContext:", *v29, objc_msgSend(*(id *)(a1 + 32), "fmipDisableContext"));
      v31 = *(void **)(a1 + 40);
      v32 = objc_msgSend(*(id *)(a1 + 32), "fmipDisableContext");
      v33 = v31;
      v34 = (id)v30;
    }
    else
    {
      v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "alertFromServerResponse"));

      if (v35)
      {
        v69 = 0;
        goto LABEL_28;
      }
      objc_msgSend(*(id *)(a1 + 40), "_showUnregisterDeviceErrorForResponseError:inContext:", objc_msgSend(v3, "responseErrorType"), objc_msgSend(*(id *)(a1 + 32), "fmipDisableContext"));
      v66 = *(void **)(a1 + 40);
      v67 = objc_msgSend(v3, "responseErrorType");
      v32 = objc_msgSend(*(id *)(a1 + 32), "fmipDisableContext");
      v33 = v66;
      v34 = v67;
    }
    v69 = objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "_unregisterDeviceErrorForResponseError:inContext:", v34, v32));
LABEL_28:
    v36 = objc_alloc_init(FMDFMIPAccount);
    -[FMDFMIPAccount copyInfoFromAccount:](v36, "copyInfoFromAccount:", *(_QWORD *)(a1 + 32));
    v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastIdentityTime"));
    -[FMDFMIPAccount setLastIdentityTime:](v36, "setLastIdentityTime:", v37);

    v71 = a1;
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastUnregisterFailedTime"));
    v68 = v36;
    -[FMDAccount setLastUnregisterFailedTime:](v36, "setLastUnregisterFailedTime:", v38);

    +[NSDate timeIntervalSinceReferenceDate](NSDate, "timeIntervalSinceReferenceDate");
    v77 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
    v39 = (void *)objc_claimAutoreleasedReturnValue(+[NRPairedDeviceRegistry sharedInstance](NRPairedDeviceRegistry, "sharedInstance"));
    v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "getPairedDevices"));

    v88 = 0u;
    v89 = 0u;
    v86 = 0u;
    v87 = 0u;
    v41 = v40;
    v42 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v86, v91, 16);
    if (v42)
    {
      v43 = v42;
      v44 = *(_QWORD *)v87;
      v45 = NRDevicePropertyIsPaired;
      v74 = NRDevicePropertyPairingID;
      v73 = NRDevicePropertyLocalPairingDataStorePath;
      v46 = &ACErrorKeychainDomain_ptr;
      v75 = *(_QWORD *)v87;
      v76 = v41;
      do
      {
        for (i = 0; i != v43; i = (char *)i + 1)
        {
          if (*(_QWORD *)v87 != v44)
            objc_enumerationMutation(v41);
          v48 = *(void **)(*((_QWORD *)&v86 + 1) + 8 * (_QWORD)i);
          v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "valueForProperty:", v45));
          v50 = objc_msgSend(v49, "BOOLValue");

          if (v50)
          {
            v51 = objc_msgSend(objc_alloc((Class)v46[241]), "initWithUUIDString:", CFSTR("02168E84-5DD8-4B19-9204-A79F04B33A32"));
            v52 = objc_msgSend(v48, "supportsCapability:", v51);

            if (v52)
            {
              v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "valueForProperty:", v74));
              v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "valueForProperty:", v73));
              v55 = objc_alloc((Class)NPSDomainAccessor);
              v56 = objc_msgSend(v55, "initWithDomain:pairingID:pairingDataStore:", kFMDWatchNotBackedUpPrefDomain, v53, v54);
              v57 = sub_1000031B8();
              v58 = objc_claimAutoreleasedReturnValue(v57);
              if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412546;
                v93 = v77;
                v94 = 2112;
                v95 = v53;
                _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "Syncing registerForceTime %@ to device with pairing ID %@", buf, 0x16u);
              }

              objc_msgSend(v56, "setObject:forKey:", v77, CFSTR("LastRegisterForceTime"));
              v59 = objc_msgSend(v56, "synchronize");
              v60 = (void *)objc_opt_new(NPSManager);
              v61 = kFMDWatchNotBackedUpPrefDomain;
              v90 = CFSTR("LastRegisterForceTime");
              v62 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v90, 1));
              v63 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v62));
              objc_msgSend(v60, "synchronizeNanoDomain:keys:", v61, v63);

              v44 = v75;
              v41 = v76;
              v46 = &ACErrorKeychainDomain_ptr;
            }
          }
        }
        v43 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v86, v91, 16);
      }
      while (v43);
    }

    v84[0] = _NSConcreteStackBlock;
    v84[1] = 3221225472;
    v84[2] = sub_10004ABCC;
    v84[3] = &unk_1002C13E8;
    a1 = v71;
    v84[4] = *(_QWORD *)(v71 + 40);
    v85 = v68;
    v64 = v68;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v84);

    v3 = v72;
    v16 = (void *)v69;
    v4 = v70;
    goto LABEL_41;
  }
  if ((objc_msgSend(v3, "cancelled") & 1) != 0)
    goto LABEL_13;
  objc_msgSend(*(id *)(a1 + 32), "setUnregisterState:", 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  objc_msgSend(v6, "beginTransaction:", CFSTR("FMDFMIPServiceProvider-unregisterDeviceWithCompletion"));

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10004ABD8;
  block[3] = &unk_1002C1328;
  block[4] = *(_QWORD *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("oneTimeUnregisterTokens")));

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "fm_nullToNil"));
    v78[0] = _NSConcreteStackBlock;
    v78[1] = 3221225472;
    v78[2] = sub_10004AC44;
    v78[3] = &unk_1002C3210;
    v79 = CFSTR("token");
    v80 = CFSTR("udid");
    v11 = *(_QWORD *)(a1 + 40);
    v81 = CFSTR("expiryTime");
    v82 = v11;
    objc_msgSend(v10, "enumerateObjectsUsingBlock:", v78);

  }
  v12 = sub_1000031B8();
  v13 = objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
    v15 = objc_msgSend(v3, "httpResponseStatus");
    *(_DWORD *)buf = 138412546;
    v93 = v14;
    v94 = 2048;
    v95 = v15;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", buf, 0x16u);

  }
  v16 = 0;
LABEL_41:
  v65 = *(_QWORD *)(a1 + 48);
  if (v65)
    (*(void (**)(uint64_t, void *))(v65 + 16))(v65, v16);

LABEL_44:
}

id sub_10004ABCC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reinitializeProviderWithAccount:", *(_QWORD *)(a1 + 40));
}

void sub_10004ABD8(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "removeAccount");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accountStore"));
  objc_msgSend(v2, "saveAccount:", 0);

  v3 = (id)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  objc_msgSend(v3, "endTransaction:", CFSTR("FMDFMIPServiceProvider-unregisterDeviceWithCompletion"));

}

void sub_10004AC44(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v3));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "fm_nullToNil"));
  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate fm_dateFromEpoch:](NSDate, "fm_dateFromEpoch:", objc_msgSend(v7, "integerValue")));
    if (!v5)
      goto LABEL_7;
  }
  else
  {
    v8 = 0;
    if (!v5)
      goto LABEL_7;
  }
  if (v11)
  {
    v9 = objc_msgSend(objc_alloc((Class)FMDAccessoryIdentifier), "initWithString:", v5);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "unregisterTokenStore"));
    objc_msgSend(v10, "saveUnregisterToken:identifier:expiryDate:", v11, v9, v8);

  }
LABEL_7:

}

void sub_10004B1C8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  unsigned int v10;
  id v11;
  NSObject *v12;
  _BOOL4 v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  unsigned int v23;
  uint64_t *v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  NSErrorUserInfoKey v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  id v38;
  __int16 v39;
  void *v40;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[FMDPreferencesMgr errorForMarkAsMissing](FMDPreferencesMgr, "errorForMarkAsMissing"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v5
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399
      || v4)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v6 = sub_1000031B8();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        *(_DWORD *)buf = 138412546;
        v36 = v8;
        v37 = 2048;
        v38 = objc_msgSend(v3, "httpResponseStatus");
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", buf, 0x16u);

      }
      v9 = *(_QWORD *)(a1 + 40);
      if (v9)
        (*(void (**)(uint64_t, _QWORD))(v9 + 16))(v9, 0);
LABEL_35:

      goto LABEL_36;
    }
    v10 = objc_msgSend(v3, "cancelled");
    v11 = sub_1000031B8();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
    if (v10)
    {
      if (!v13)
        goto LABEL_18;
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      *(_DWORD *)buf = 138412290;
      v36 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
    }
    else
    {
      if (!v13)
        goto LABEL_18;
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v15 = objc_msgSend(v3, "httpResponseStatus");
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      *(_DWORD *)buf = 138412802;
      v36 = v14;
      v37 = 2048;
      v38 = v15;
      v39 = 2112;
      v40 = v16;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

    }
LABEL_18:

    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v17)
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Error contacting the server: %@"), v18));

    }
    else
    {
      if (v4)
        v20 = v4;
      else
        v20 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Server returned error code %ld"), objc_msgSend(v3, "httpResponseStatus")));
      v19 = v20;
    }
    v21 = sub_1000031B8();
    v22 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v36 = v19;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
    }

    if (v4)
    {
      v23 = objc_msgSend(v4, "containsString:", CFSTR("network"));
      v24 = &qword_100253770;
      if (!v23)
        v24 = &qword_100253760;
      v25 = (id)*v24;
      v26 = *(void **)(a1 + 32);
    }
    else
    {
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "alertFromServerResponse"));

      if (v27)
        goto LABEL_32;
      v32 = *(void **)(a1 + 32);
      v25 = objc_msgSend(v3, "responseErrorType");
      v26 = v32;
    }
    objc_msgSend(v26, "_showMarkAsMissingErrorForResponseError:", v25);
LABEL_32:
    v28 = *(_QWORD *)(a1 + 40);
    if (v28)
    {
      v29 = kFMDErrorDomain;
      v33 = NSLocalizedFailureReasonErrorKey;
      v34 = v19;
      v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1));
      v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v29, 12, v30));
      (*(void (**)(uint64_t, void *))(v28 + 16))(v28, v31);

    }
    goto LABEL_35;
  }
LABEL_36:

}

void sub_10004BBE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_10004BBF8(uint64_t a1)
{
  int *WeakRetained;
  void *v2;
  void *v3;
  _QWORD handler[5];

  WeakRetained = (int *)objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingSecureMessage"));
  if (v2)
  {

  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingLocateAlert"));

    if (!v3)
      goto LABEL_6;
  }
  if (objc_msgSend(WeakRetained, "lockStateNotifyToken") == -1)
  {
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_10004BCBC;
    handler[3] = &unk_1002C3260;
    handler[4] = WeakRetained;
    notify_register_dispatch(kMobileKeyBagLockStatusNotifyToken, WeakRetained + 47, (dispatch_queue_t)&_dispatch_main_q, handler);
  }
LABEL_6:

}

id sub_10004BCBC(uint64_t a1, uint64_t a2)
{
  id result;

  result = (id)MKBGetDeviceLockState(0, a2);
  if ((_DWORD)result == 3 || !(_DWORD)result)
    return objc_msgSend(*(id *)(a1 + 32), "_showPendingHomescreenAlertNow");
  return result;
}

void sub_10004BD9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_10004BDB0(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingSecureMessage"));

  if (v1)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMAlertManager sharedInstance](FMAlertManager, "sharedInstance"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingSecureMessage"));
    objc_msgSend(v2, "activateAlert:", v3);

    objc_msgSend(WeakRetained, "setPendingSecureMessage:", 0);
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingLocateAlert"));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[FMAlertManager sharedInstance](FMAlertManager, "sharedInstance"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingLocateAlert"));
    objc_msgSend(v5, "activateAlert:", v6);

    objc_msgSend(WeakRetained, "setPendingLocateAlert:", 0);
  }
  if (objc_msgSend(WeakRetained, "lockStateNotifyToken") != -1)
  {
    notify_cancel((int)objc_msgSend(WeakRetained, "lockStateNotifyToken"));
    objc_msgSend(WeakRetained, "setLockStateNotifyToken:", 0xFFFFFFFFLL);
  }

}

void sub_10004BFB8(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  uint8_t v15[16];
  uint8_t buf[16];

  if (*(_BYTE *)(a1 + 40))
  {
    v2 = sub_1000031B8();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Buddy is done", v15, 2u);
    }

    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v4, "removeObserver:name:object:", *(_QWORD *)(a1 + 32), CFSTR("purplebuddy.setupdone"), 0);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buddyWaitTimer"));
    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buddyWaitTimer"));
      objc_msgSend(v6, "invalidate");

      objc_msgSend(*(id *)(a1 + 32), "setBuddyWaitTimer:", 0);
    }
    objc_msgSend(*(id *)(a1 + 32), "setWaitingForBuddy:", 0);
    objc_msgSend(*(id *)(a1 + 32), "syncFMIPStateToWatch");
    if (*(_BYTE *)(a1 + 41))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[FMDAppleAccountManager sharedInstance](FMDAppleAccountManager, "sharedInstance"));
      objc_msgSend(v7, "syncFMIPAccountInfo");

      if (objc_msgSend(*(id *)(a1 + 32), "waitingToMakeProviderActive"))
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
        objc_msgSend(v8, "endTransaction:", CFSTR("FMIPWaitingForBuddy"));

        objc_msgSend(*(id *)(a1 + 32), "makeProviderActive");
      }
    }
  }
  else
  {
    if ((objc_msgSend(*(id *)(a1 + 32), "waitingForBuddy") & 1) == 0)
    {
      objc_msgSend(*(id *)(a1 + 32), "setWaitingForBuddy:", 1);
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
      objc_msgSend(v9, "beginTransaction:", CFSTR("FMIPWaitingForBuddy"));

      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
      objc_msgSend(v10, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), "buddyDidComplete:", CFSTR("purplebuddy.setupdone"), 0);

    }
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buddyWaitTimer"));
    objc_msgSend(v11, "invalidate");

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSTimer scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:](NSTimer, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", *(_QWORD *)(a1 + 32), "_buddyCompletionCheckTimerFired:", 0, 0, 10.0));
    objc_msgSend(*(id *)(a1 + 32), "setBuddyWaitTimer:", v12);

    v13 = sub_1000031B8();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "FMIP is not active yet since buddy is yet to complete.", buf, 2u);
    }

  }
}

void sub_10004CB6C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  _DWORD v6[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMDLocalActivationLockInfoManager sharedInstance](FMDLocalActivationLockInfoManager, "sharedInstance"));
  v3 = objc_msgSend(*(id *)(a1 + 32), "isActivationLocked");
  objc_msgSend(v2, "updateActivationLockStatus:", v3);
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = (_DWORD)v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "synchronizeLocationActivationState %d", (uint8_t *)v6, 8u);
  }

}

void sub_10004CD48(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  v3 = (id)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  objc_msgSend(v3, "endTransaction:", *(_QWORD *)(a1 + 32));

}

void sub_10004CF04(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10004CF20(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_serialQueue_sendDeviceIdentityIfEligibleWithIdentityInfo:", *(_QWORD *)(a1 + 32));

}

void sub_10004D21C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10004D238(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  id WeakRetained;
  int v7;
  id v8;

  v3 = a2;
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Preferences application state did change: %@", (uint8_t *)&v7, 0xCu);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "checkAndSendPendingDeviceIdentityWithIdentityInfo:", *(_QWORD *)(a1 + 32));

}

void sub_10004D448(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10004D464(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_serialQueue_checkAndSendPendingDeviceIdentityWithIdentityInfo:", *(_QWORD *)(a1 + 32));

}

id sub_10004D8C4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "syncFMIPStateToWatch");
}

NSDictionary *__cdecl sub_10004DA3C(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_10004DA78(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "deviceInfoForAccount:", v3));

  return v4;
}

void sub_10004F10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10004F154(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10004F164(uint64_t a1)
{

}

void sub_10004F16C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v15 = a2;
  v5 = a3;
  v6 = v5;
  if (v5)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v8 = v5;
    v9 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v8;
  }
  else
  {
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "signature"));
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;

    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "attestation"));
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v9 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v13;
  }

  objc_msgSend(*(id *)(a1 + 32), "signal");
}

void sub_10004F4C4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1000510C4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

void sub_100051388(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  int v6;
  id v7;

  v3 = a2;
  v4 = sub_1000530AC();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138412290;
    v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "setupAgent completed with error %@", (uint8_t *)&v6, 0xCu);
  }

  objc_msgSend(*(id *)(a1 + 32), "setSetupAgent:", 0);
}

void sub_10005161C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100051644(uint64_t a1)
{
  id WeakRetained;
  FMDEventLoggerEventScalar *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "unregisterAccessoriesIfNeeded");
  v2 = -[FMDEventLoggerEventScalar initWithEventName:]([FMDEventLoggerEventScalar alloc], "initWithEventName:", CFSTR("FMDNanoMigratorJanitor"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLogger sharedLogger](FMDEventLogger, "sharedLogger"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLoggerFacilityDataPeek facilityName](FMDEventLoggerFacilityDataPeek, "facilityName"));
  v6 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  objc_msgSend(v3, "logEvent:toFacilitiesNamed:", v2, v5);

}

void sub_100051994(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  FMDRequestWatchUnregister *v7;
  void *v8;
  FMDRequestWatchUnregister *v9;
  id v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  void *v14;
  _QWORD v15[4];
  id v16;
  uint64_t v17;
  id v18[2];
  id location;
  uint8_t buf[4];
  id v21;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "accessory"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "udid"));

  v6 = objc_msgSend(objc_alloc((Class)FMDAccessoryIdentifier), "initWithString:", v5);
  v7 = [FMDRequestWatchUnregister alloc];
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "unregisterToken"));
  v9 = -[FMDRequestWatchUnregister initWithDeviceUDID:unregisterToken:](v7, "initWithDeviceUDID:unregisterToken:", v5, v8);

  objc_initWeak(&location, *(id *)(a1 + 32));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100051BA4;
  v15[3] = &unk_1002C32F8;
  objc_copyWeak(v18, &location);
  v18[1] = *(id *)(a1 + 40);
  v10 = v6;
  v11 = *(_QWORD *)(a1 + 32);
  v16 = v10;
  v17 = v11;
  -[FMDRequest setCompletionHandler:](v9, "setCompletionHandler:", v15);
  v12 = sub_10005342C();
  v13 = objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v21 = v10;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Watch Migration: Watch unregister request enqueued %@", buf, 0xCu);
  }

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverInteractionController"));
  objc_msgSend(v14, "enqueueRequest:", v9);

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);

}

void sub_100051B78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100051BA4(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  double v5;
  id v6;
  NSObject *v7;
  void *v8;
  unsigned int v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  NSObject *v19;
  double v20;
  id v21;
  NSObject *v22;
  _BOOL4 v23;
  double v24;
  const char *v25;
  NSObject *v26;
  uint32_t v27;
  id v28;
  NSObject *v29;
  void *v30;
  id v31;
  NSObject *v32;
  double v33;
  double v34;
  id v35;
  double v36;
  int v37;
  double v38;
  __int16 v39;
  double v40;
  __int16 v41;
  void *v42;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) != 0)
    goto LABEL_27;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = *(double *)(a1 + 56);
  v6 = sub_10005342C();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v37 = 134217984;
    v38 = COERCE_DOUBLE(objc_msgSend(v3, "httpResponseStatus"));
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Watch Migration: Watch Unregister request response code %li", (uint8_t *)&v37, 0xCu);
  }

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v8
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
  {

  }
  else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
  {
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "unregisterTokenStore"));
    objc_msgSend(v30, "removeUnregisterTokenForIdentifier:", *(_QWORD *)(a1 + 32));

    v31 = sub_1000031B8();
    v32 = objc_claimAutoreleasedReturnValue(v31);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      v33 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID")));
      v34 = COERCE_DOUBLE(objc_msgSend(v3, "httpResponseStatus"));
      v37 = 138412546;
      v38 = v33;
      v39 = 2048;
      v40 = v34;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", (uint8_t *)&v37, 0x16u);

    }
    v35 = sub_10005342C();
    v19 = objc_claimAutoreleasedReturnValue(v35);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      v36 = *(double *)(a1 + 32);
      v37 = 138412290;
      v38 = v36;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Watch Migration: Watch unregister success %@", (uint8_t *)&v37, 0xCu);
    }
    goto LABEL_24;
  }
  v9 = objc_msgSend(v3, "cancelled");
  v10 = sub_1000031B8();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (v9)
  {
    if (!v12)
      goto LABEL_14;
    v13 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID")));
    v37 = 138412290;
    v38 = v13;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v37, 0xCu);
  }
  else
  {
    if (!v12)
      goto LABEL_14;
    v13 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID")));
    v14 = COERCE_DOUBLE(objc_msgSend(v3, "httpResponseStatus"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    v37 = 138412802;
    v38 = v13;
    v39 = 2048;
    v40 = v14;
    v41 = 2112;
    v42 = v15;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v37, 0x20u);

  }
LABEL_14:

  v16 = sub_1000031B8();
  v17 = objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    sub_100229384(v3, v17);

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseHeaders"));
  v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("X-Apple-Retry-After")));

  if (!v19)
    goto LABEL_24;
  -[NSObject doubleValue](v19, "doubleValue");
  v5 = v20;
  v21 = sub_1000031B8();
  v22 = objc_claimAutoreleasedReturnValue(v21);
  v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);
  if (v5 <= 0.0)
  {
    if (v23)
    {
      v24 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "fm_logID")));
      v37 = 138412290;
      v38 = v24;
      v25 = "%@ Server requested that no more retries be done.";
      v26 = v22;
      v27 = 12;
      goto LABEL_22;
    }
  }
  else if (v23)
  {
    v24 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "fm_logID")));
    v37 = 138412546;
    v38 = v24;
    v39 = 2048;
    v40 = v5;
    v25 = "%@ Server requested a retry after %f seconds";
    v26 = v22;
    v27 = 22;
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, v25, (uint8_t *)&v37, v27);

  }
LABEL_24:

  v28 = sub_10005342C();
  v29 = objc_claimAutoreleasedReturnValue(v28);
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    v37 = 134217984;
    v38 = v5;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "Watch Migration: Retry After %f", (uint8_t *)&v37, 0xCu);
  }

  objc_msgSend(*(id *)(a1 + 40), "scheduleJanitor:", v5);
LABEL_27:

}

void sub_1000525B0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  FMDFMIPUnregisterDeviceInfoAccessoryAdaptor *v8;
  id v9;

  v9 = a2;
  v3 = objc_alloc((Class)FMDAccessoryIdentifier);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "udid"));
  v5 = objc_msgSend(v3, "initWithString:", v4);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "unregisterTokenStore"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "unregisterTokenForIdentifier:", v5));

  if (v7)
  {
    v8 = -[FMDFMIPUnregisterDeviceInfoAccessoryAdaptor initWithAccessory:unregisterToken:]([FMDFMIPUnregisterDeviceInfoAccessoryAdaptor alloc], "initWithAccessory:unregisterToken:", v9, v7);
    objc_msgSend(*(id *)(a1 + 40), "fm_safeAddObject:", v8);

  }
}

void sub_100052A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100052AAC(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void (**v19)(_QWORD, _QWORD);
  void *v20;
  uint64_t v21;
  void *v22;
  int v23;
  id v24;
  __int16 v25;
  id v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  void *v30;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = sub_1000530AC();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = objc_msgSend(v3, "httpResponseStatus");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseHeaders"));
    v23 = 138413058;
    v24 = v3;
    v25 = 2048;
    v26 = v7;
    v27 = 2112;
    v28 = v8;
    v29 = 2112;
    v30 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v23, 0x2Au);

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v10
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
  {

    goto LABEL_7;
  }
  if ((objc_msgSend(v3, "cancelled") & 1) != 0)
  {
LABEL_7:
    v11 = objc_msgSend(v3, "cancelled");
    v12 = sub_1000530AC();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
    if (v11)
    {
      if (v14)
      {
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v23 = 138412290;
        v24 = v15;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v23, 0xCu);
LABEL_12:

      }
    }
    else if (v14)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v16 = objc_msgSend(v3, "httpResponseStatus");
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v23 = 138412802;
      v24 = v15;
      v25 = 2048;
      v26 = v16;
      v27 = 2112;
      v28 = v17;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v23, 0x20u);

      goto LABEL_12;
    }

    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
    if (!v18)
      goto LABEL_16;
    v19 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    ((void (**)(_QWORD, void *))v19)[2](v19, v20);

    goto LABEL_15;
  }
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));

  if (v22)
  {
    v19 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
    v19[2](v19, 0);
LABEL_15:

  }
LABEL_16:
  v21 = *(_QWORD *)(a1 + 32);
  if (v21)
    (*(void (**)(void))(v21 + 16))();

}

void sub_100052EBC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "_");
  v2 = (void *)qword_100306568;
  qword_100306568 = (uint64_t)v1;

}

id sub_100052EEC()
{
  if (qword_100306570 != -1)
    dispatch_once(&qword_100306570, &stru_1002C3388);
  return (id)qword_100306578;
}

void sub_100052F2C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "locations");
  v2 = (void *)qword_100306578;
  qword_100306578 = (uint64_t)v1;

}

id sub_100052F5C()
{
  if (qword_100306580 != -1)
    dispatch_once(&qword_100306580, &stru_1002C33A8);
  return (id)qword_100306588;
}

void sub_100052F9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "accessory");
  v2 = (void *)qword_100306588;
  qword_100306588 = (uint64_t)v1;

}

id sub_100052FCC()
{
  if (qword_100306590 != -1)
    dispatch_once(&qword_100306590, &stru_1002C33C8);
  return (id)qword_100306598;
}

void sub_10005300C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "traffic");
  v2 = (void *)qword_100306598;
  qword_100306598 = (uint64_t)v1;

}

id sub_10005303C()
{
  if (qword_1003065A0 != -1)
    dispatch_once(&qword_1003065A0, &stru_1002C33E8);
  return (id)qword_1003065A8;
}

void sub_10005307C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "encoder");
  v2 = (void *)qword_1003065A8;
  qword_1003065A8 = (uint64_t)v1;

}

id sub_1000530AC()
{
  if (qword_1003065B0 != -1)
    dispatch_once(&qword_1003065B0, &stru_1002C3408);
  return (id)qword_1003065B8;
}

void sub_1000530EC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "extensions");
  v2 = (void *)qword_1003065B8;
  qword_1003065B8 = (uint64_t)v1;

}

id sub_10005311C()
{
  if (qword_1003065C0 != -1)
    dispatch_once(&qword_1003065C0, &stru_1002C3428);
  return (id)qword_1003065C8;
}

void sub_10005315C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "extensions_playSound");
  v2 = (void *)qword_1003065C8;
  qword_1003065C8 = (uint64_t)v1;

}

id sub_10005318C()
{
  if (qword_1003065D0 != -1)
    dispatch_once(&qword_1003065D0, &stru_1002C3448);
  return (id)qword_1003065D8;
}

void sub_1000531CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "secureLocations");
  v2 = (void *)qword_1003065D8;
  qword_1003065D8 = (uint64_t)v1;

}

id sub_1000531FC()
{
  if (qword_1003065E0 != -1)
    dispatch_once(&qword_1003065E0, &stru_1002C3468);
  return (id)qword_1003065E8;
}

void sub_10005323C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "repairDevice");
  v2 = (void *)qword_1003065E8;
  qword_1003065E8 = (uint64_t)v1;

}

id sub_10005326C()
{
  if (qword_1003065F0 != -1)
    dispatch_once(&qword_1003065F0, &stru_1002C3488);
  return (id)qword_1003065F8;
}

void sub_1000532AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "ALFailureAnalytics");
  v2 = (void *)qword_1003065F8;
  qword_1003065F8 = (uint64_t)v1;

}

id sub_1000532DC()
{
  if (qword_100306600 != -1)
    dispatch_once(&qword_100306600, &stru_1002C34A8);
  return (id)qword_100306608;
}

void sub_10005331C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "disableLocationDisplay");
  v2 = (void *)qword_100306608;
  qword_100306608 = (uint64_t)v1;

}

id sub_10005334C()
{
  if (qword_100306610 != -1)
    dispatch_once(&qword_100306610, &stru_1002C34C8);
  return (id)qword_100306618;
}

void sub_10005338C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "accountRatchet");
  v2 = (void *)qword_100306618;
  qword_100306618 = (uint64_t)v1;

}

id sub_1000533BC()
{
  if (qword_100306620 != -1)
    dispatch_once(&qword_100306620, &stru_1002C34E8);
  return (id)qword_100306628;
}

void sub_1000533FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.icloud.findmydeviced", "ownerAuthentication");
  v2 = (void *)qword_100306628;
  qword_100306628 = (uint64_t)v1;

}

id sub_10005342C()
{
  if (qword_100306630 != -1)
    dispatch_once(&qword_100306630, &stru_1002C3508);
  return (id)qword_100306638;
}

void sub_10005346C(id a1)
{
  os_log_t v1;
  void *v2;

  if (+[FMPreferencesUtil BOOLForKey:inDomain:](FMPreferencesUtil, "BOOLForKey:inDomain:", CFSTR("ShowAutomationLogs"), CFSTR("com.apple.icloud.findmydeviced.notbackedup")))
  {
    v1 = os_log_create("com.apple.icloud.findmydeviced", "automation");
    v2 = (void *)qword_100306638;
    qword_100306638 = (uint64_t)v1;

  }
}

void sub_100053A1C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "provider"));
  objc_msgSend(v2, "sendDeviceIdentityWithIdentityInfo:", *(_QWORD *)(a1 + 40));

  v3 = (id)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  objc_msgSend(v3, "endTransaction:", CFSTR("kFMDCommandHandlerIdentityV5TransactionName"));

}

void sub_100053BFC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  uint32_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v16 = *(_QWORD *)(a1 + 32);
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v16, 1);
      v17 = sub_1000031B8();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v18 = 138412546;
      v19 = v10;
      v20 = 2048;
      v21 = objc_msgSend(v3, "httpResponseStatus");
      v11 = "%@: successful with status %ld";
      v12 = v8;
      v13 = 22;
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v18 = 138412290;
        v19 = v10;
        v11 = "%@: Cancelled";
        v12 = v8;
        v13 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v18, v13);
LABEL_14:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v14 = objc_msgSend(v3, "httpResponseStatus");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v18 = 138412802;
      v19 = v10;
      v20 = 2048;
      v21 = v14;
      v22 = 2112;
      v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v18, 0x20u);

      goto LABEL_14;
    }
LABEL_15:

  }
}

void sub_100054134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100054160(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained, "_didCompleteQueueCheckRequest:completion:", v4, *(_QWORD *)(a1 + 32));

}

void sub_1000550C8(id a1)
{
  FMDOperationManager *v1;
  void *v2;

  v1 = objc_alloc_init(FMDOperationManager);
  v2 = (void *)qword_100306648;
  qword_100306648 = (uint64_t)v1;

}

void sub_100055274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005528C(uint64_t a1)
{
  void *v2;
  FMDOperationQueue *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSString *v9;
  FMDOperationQueue *v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  FMDOperationQueue *v17;
  const char *v18;
  id v19;
  uint64_t v20;
  FMDOperationQueue *v21;
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  FMDOperationQueue *v25;
  __int16 v26;
  uint64_t v27;

  if (!*(_QWORD *)(a1 + 32))
  {
    v15 = sub_100052F5C();
    v3 = (FMDOperationQueue *)objc_claimAutoreleasedReturnValue(v15);
    if (!os_log_type_enabled(&v3->super, OS_LOG_TYPE_DEFAULT))
      goto LABEL_15;
    v16 = *(_QWORD *)(a1 + 40);
    v17 = *(FMDOperationQueue **)(a1 + 48);
    *(_DWORD *)buf = 138412546;
    v23 = v16;
    v24 = 2112;
    v25 = v17;
    v18 = "%@ found nil action for identifier %@";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, &v3->super, OS_LOG_TYPE_DEFAULT, v18, buf, 0x16u);
    goto LABEL_15;
  }
  if (!*(_QWORD *)(a1 + 48))
  {
    v19 = sub_100052F5C();
    v3 = (FMDOperationQueue *)objc_claimAutoreleasedReturnValue(v19);
    if (!os_log_type_enabled(&v3->super, OS_LOG_TYPE_DEFAULT))
      goto LABEL_15;
    v21 = *(FMDOperationQueue **)(a1 + 32);
    v20 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    v23 = v20;
    v24 = 2112;
    v25 = v21;
    v18 = "%@ found nil identifier for action %@";
    goto LABEL_14;
  }
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "actionQueueMap"));
  v3 = (FMDOperationQueue *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 48)));

  v4 = sub_100052F5C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    v23 = v6;
    v24 = 2112;
    v25 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@ found queue - %@", buf, 0x16u);
  }

  if (!v3)
  {
    v3 = -[FMDOperationQueue initWithIdentifier:]([FMDOperationQueue alloc], "initWithIdentifier:", *(_QWORD *)(a1 + 48));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "actionQueueMap"));
    objc_msgSend(v7, "setObject:forKey:", v3, *(_QWORD *)(a1 + 48));

    v9 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@-%p"), objc_opt_class(v3, v8), v3);
    v10 = (FMDOperationQueue *)objc_claimAutoreleasedReturnValue(v9);
    v11 = sub_100052F5C();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v13 = *(_QWORD *)(a1 + 40);
      v14 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412802;
      v23 = v13;
      v24 = 2112;
      v25 = v10;
      v26 = 2112;
      v27 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@ creating queue(%@) with identifier - %@", buf, 0x20u);
    }

  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = -[FMDOperationQueue addRequest:](v3, "addRequest:", *(_QWORD *)(a1 + 32));
LABEL_15:

}

void sub_100055608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100055620(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  unsigned __int8 v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  const char *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  NSObject *v18;

  if (!*(_QWORD *)(a1 + 32))
  {
    v8 = sub_100052F5C();
    v3 = objc_claimAutoreleasedReturnValue(v8);
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      goto LABEL_14;
    v9 = *(_QWORD *)(a1 + 40);
    v10 = *(NSObject **)(a1 + 48);
    v15 = 138412546;
    v16 = v9;
    v17 = 2112;
    v18 = v10;
    v11 = "%@ found nil action to be removed for identifier %@";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v15, 0x16u);
    goto LABEL_14;
  }
  if (!*(_QWORD *)(a1 + 48))
  {
    v12 = sub_100052F5C();
    v3 = objc_claimAutoreleasedReturnValue(v12);
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      goto LABEL_14;
    v14 = *(NSObject **)(a1 + 32);
    v13 = *(_QWORD *)(a1 + 40);
    v15 = 138412546;
    v16 = v13;
    v17 = 2112;
    v18 = v14;
    v11 = "%@ found nil identifier to remove action %@";
    goto LABEL_11;
  }
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "actionQueueMap"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 48)));

  v4 = sub_100052F5C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 40);
    v15 = 138412546;
    v16 = v6;
    v17 = 2112;
    v18 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@ found queue for removal - %@", (uint8_t *)&v15, 0x16u);
  }

  if (v3)
    v7 = -[NSObject cancelRequest:](v3, "cancelRequest:", *(_QWORD *)(a1 + 32));
  else
    v7 = 0;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v7;
LABEL_14:

}

void sub_100055A10(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  NSObject *v4;

  v2 = a2;
  v3 = sub_1000530AC();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_100229514();

}

void sub_100055CF8()
{
  id v0;
  NSObject *v1;

  v0 = sub_1000530AC();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    sub_10022965C();

}

void sub_100055D40()
{
  id v0;
  NSObject *v1;

  v0 = sub_1000530AC();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    sub_1002296C4();

}

void sub_100055E8C(id a1)
{
  void *v1;

  v1 = (void *)qword_100306658;
  qword_100306658 = (uint64_t)&off_1002D93B8;

}

uint64_t sub_1000580C4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000580D4(uint64_t a1)
{

}

void sub_1000580DC(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 16));
}

void sub_100058814(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void **v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v17 = _NSConcreteStackBlock;
  v18 = 3221225472;
  v19 = sub_100058944;
  v20 = &unk_1002C3000;
  v10 = *(id *)(a1 + 48);
  v21 = v8;
  v22 = v7;
  v23 = v9;
  v24 = v10;
  v11 = v7;
  v12 = v9;
  v13 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, &v17);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "requestModifierLock", v17, v18, v19, v20));
  objc_msgSend(v14, "lock");

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "requests"));
  objc_msgSend(v15, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "requestModifierLock"));
  objc_msgSend(v16, "unlock");

}

void sub_100058944(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = objc_msgSend(*(id *)(a1 + 32), "statusCode");
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allHeaderFields"));
  v4 = objc_msgSend(*(id *)(a1 + 40), "copy");
  (*(void (**)(uint64_t, id, id, id, _QWORD, _QWORD))(v2 + 16))(v2, v3, v5, v4, 0, *(_QWORD *)(a1 + 48));

}

void sub_10005979C(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  void (*v8)(uint64_t, void *, uint64_t, _BYTE *);
  void *v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t);
  id v17;
  uint8_t buf[4];
  uint64_t v19;

  v12 = 0;
  v13 = &v12;
  v14 = 0x3032000000;
  v15 = sub_100059928;
  v16 = sub_100059938;
  v17 = 0;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pairedDevices"));
  v6 = _NSConcreteStackBlock;
  v7 = 3221225472;
  v8 = sub_100059940;
  v9 = &unk_1002C3628;
  v10 = *(id *)(a1 + 40);
  v11 = &v12;
  objc_msgSend(v2, "enumerateObjectsUsingBlock:", &v6);

  if (v13[5])
  {
    v3 = sub_1000031B8();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      v19 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDBluetoothManager forcing a connection to device %@", buf, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "connectDevice:", v13[5], v6, v7, v8, v9);
  }

  _Block_object_dispose(&v12, 8);
}

void sub_100059904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100059928(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100059938(uint64_t a1)
{

}

void sub_100059940(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  unsigned int v8;
  id v9;

  v9 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "address"));
  v8 = objc_msgSend(v7, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v8)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_100059B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100059B80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  __int128 v8;
  _QWORD block[5];
  __int128 v10;
  uint64_t v11;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "available");
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pairedDevices"));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

  }
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoriesQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100059C64;
  block[3] = &unk_1002C36E0;
  v6 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 64);
  block[4] = v6;
  v8 = *(_OWORD *)(a1 + 48);
  v7 = (id)v8;
  v10 = v8;
  dispatch_async(v5, block);

}

void sub_100059C64(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  dispatch_queue_global_t global_queue;
  NSObject *v10;
  _QWORD block[4];
  id v12;
  id v13;
  id v14;
  _QWORD v15[5];
  id v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v3 = v2;
  if (*(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24))
  {
    v4 = *(void **)(*(_QWORD *)(a1[7] + 8) + 40);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100059DF0;
    v15[3] = &unk_1002C3690;
    v15[4] = a1[4];
    v16 = v2;
    objc_msgSend(v4, "enumerateObjectsUsingBlock:", v15);

    v5 = 0;
  }
  else
  {
    v6 = sub_1000031B8();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_10022983C();

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.icloud.findmydeviced.fmdbluetoothmanager.getaccessories"), 1, 0));
  }
  v8 = (void *)a1[5];
  if (v8)
  {
    global_queue = dispatch_get_global_queue(0, 0);
    v10 = objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10005A228;
    block[3] = &unk_1002C36B8;
    v14 = v8;
    v12 = v3;
    v13 = v5;
    dispatch_async(v10, block);

  }
}

void sub_100059DF0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  id v6;
  FMDBluetoothAccessory *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  void *v19;
  id v20;
  void **v21;
  uint64_t v22;
  void (*v23)(uint64_t, void *);
  void *v24;
  FMDBluetoothAccessory *v25;
  id v26;
  uint8_t buf[4];
  id v28;

  v3 = a2;
  if ((objc_msgSend(v3, "conformsToProtocol:", &OBJC_PROTOCOL___FMDBluetoothFrameworkDevice) & 1) != 0)
  {
    if (objc_msgSend(v3, "isTemporaryPaired"))
    {
      v4 = sub_1000031B8();
      v5 = objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v28 = v3;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "BluetoothManager.pairedDevices Ignoring shared device %@", buf, 0xCu);
      }
    }
    else
    {
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bluetoothManagerDeviceForBluetoothDevice:", v3));
      v7 = -[FMDBluetoothAccessory initWithBluetoothManagerDevice:]([FMDBluetoothAccessory alloc], "initWithBluetoothManagerDevice:", v5);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supportedAccessoryRegistry"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetsForAccessory:", v7));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "fm_filter:", &stru_1002C3668));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "firstObject"));

      -[FMDBluetoothAccessory updateAudioAsset:](v7, "updateAudioAsset:", v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue(-[FMDBluetoothAccessory address](v7, "address"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithMACAddressString:](NSData, "dataWithMACAddressString:", v12));

      if (v13)
      {
        v14 = (void *)objc_opt_new(SPOwnerInterface);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "ownerSession"));

        v16 = objc_msgSend(objc_alloc((Class)FMSynchronizer), "initWithDescription:andTimeout:", CFSTR("SP-BA-UUID"), 5.0);
        v17 = sub_1000031B8();
        v18 = objc_claimAutoreleasedReturnValue(v17);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          v19 = (void *)objc_claimAutoreleasedReturnValue(-[FMDBluetoothAccessory address](v7, "address"));
          *(_DWORD *)buf = 138412290;
          v28 = v19;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Retrieving baUUID for MAC: %@", buf, 0xCu);

        }
        v21 = _NSConcreteStackBlock;
        v22 = 3221225472;
        v23 = sub_10005A104;
        v24 = &unk_1002C2388;
        v25 = v7;
        v26 = v16;
        v20 = v16;
        objc_msgSend(v15, "beaconingIdentifierForMACAddress:completion:", v13, &v21);
        objc_msgSend(v20, "wait", v21, v22, v23, v24);

      }
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v7);

    }
  }
  else
  {
    v6 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_100229868((uint64_t)v3, v5);
  }

}

BOOL sub_10005A0E4(id a1, FMDAsset *a2)
{
  return -[FMDAsset assetType](a2, "assetType") == (id)1;
}

void sub_10005A104(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  void *v14;

  v3 = a2;
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "UUIDString"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "address"));
    v9 = 138412802;
    v10 = v6;
    v11 = 2112;
    v12 = v7;
    v13 = 2112;
    v14 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Received baUUID: %@ for %@, %@", (uint8_t *)&v9, 0x20u);

  }
  if (v3)
    objc_msgSend(*(id *)(a1 + 32), "updateWithBeaconingIdentifier:", v3);
  objc_msgSend(*(id *)(a1 + 40), "signal");

}

uint64_t sub_10005A228(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

id sub_10005A524(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "bluetoothManagerDidUpdateDevice:", *(_QWORD *)(a1 + 40));
}

id sub_10005A798(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "bluetoothManagerDidConnectDevice:", *(_QWORD *)(a1 + 40));
}

id sub_10005AA0C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "bluetoothManagerDidDisconnectDevice:", *(_QWORD *)(a1 + 40));
}

void sub_10005AC04(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  uint64_t v5;

  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 88));
  _Unwind_Resume(a1);
}

void sub_10005AC50(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  NSObject *v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bluetoothDiscoveryQueue"));
  if (v5)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10005ACF4;
    v6[3] = &unk_1002C13E8;
    v7 = v3;
    v8 = WeakRetained;
    dispatch_async(v5, v6);

  }
}

id sub_10005ACF4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BluetoothManager didDiscoverDevice %@", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "didDiscoverDevice:", *(_QWORD *)(a1 + 32));
}

void sub_10005ADA0(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  NSObject *v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bluetoothDiscoveryQueue"));
  if (v5)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10005AE44;
    v6[3] = &unk_1002C13E8;
    v7 = v3;
    v8 = WeakRetained;
    dispatch_async(v5, v6);

  }
}

id sub_10005AE44(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BluetoothManager didLoseDevice %@", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "didLoseDevice:", *(_QWORD *)(a1 + 32));
}

void sub_10005AEF0(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  NSObject *v3;
  _QWORD block[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bluetoothDiscoveryQueue"));
  v3 = v2;
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10005AF70;
    block[3] = &unk_1002C1328;
    block[4] = WeakRetained;
    dispatch_async(v2, block);
  }

}

id sub_10005AF70(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BluetoothManager discovery ended - setting all channels inactive.", v5, 2u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "setAllAudioChannelsActive:", 0);
}

void sub_10005AFE4(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  NSObject *v3;
  _QWORD block[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bluetoothDiscoveryQueue"));
  v3 = v2;
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10005B064;
    block[3] = &unk_1002C1328;
    block[4] = WeakRetained;
    dispatch_async(v2, block);
  }

}

id sub_10005B064(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BluetoothManager discovery started - setting all channels active.", v5, 2u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "setAllAudioChannelsActive:", 1);
}

void sub_10005B16C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  v7 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "bluetoothDevice"));
  v6 = objc_msgSend(v4, "profileForBluetoothManagerDevice:", v5);

  objc_msgSend(*(id *)(a1 + 32), "setInternalDeviceAudioChannels:profile:active:", v7, v6, *(unsigned __int8 *)(a1 + 40));
}

void sub_10005B360(uint64_t a1, void *a2)
{
  id v3;
  FMDAudioChannelStatus *v4;

  v3 = a2;
  v4 = -[FMDAudioChannelStatus initWithName:active:]([FMDAudioChannelStatus alloc], "initWithName:active:", v3, *(unsigned __int8 *)(a1 + 40));

  objc_msgSend(*(id *)(a1 + 32), "addAudioChannelStatus:", v4);
}

void sub_10005B510(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  FMDAudioChannelStatus *v5;
  FMDBLEBeacon *v6;

  v4 = a3;
  v6 = -[FMDBLEBeacon initWithConfiguration:]([FMDBLEBeacon alloc], "initWithConfiguration:", v4);
  -[FMDBLEBeacon setActive:](v6, "setActive:", *(unsigned __int8 *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "addBLEBeacon:", v6);
  v5 = -[FMDAudioChannelStatus initWithConfiguration:]([FMDAudioChannelStatus alloc], "initWithConfiguration:", v4);

  -[FMDBLEBeacon setActive:](v5, "setActive:", *(unsigned __int8 *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "addAudioChannelStatus:", v5);

}

void sub_10005B6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005B6DC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  __int128 v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  id v11;
  NSObject *v12;
  id v13;
  void *v14;
  unsigned int v15;
  uint64_t v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint8_t buf[4];
  void *v24;
  _BYTE v25[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bluetoothAddress"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fm_MACAddressString"));

  if (v3 && objc_msgSend(*(id *)(a1 + 40), "available"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pairedDevices"));
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v22 = 0u;
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v25, 16);
    if (!v5)
      goto LABEL_19;
    v7 = v5;
    v8 = *(_QWORD *)v20;
    *(_QWORD *)&v6 = 138412290;
    v18 = v6;
    while (1)
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v8)
          objc_enumerationMutation(v4);
        v10 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
        if ((objc_msgSend(v10, "conformsToProtocol:", &OBJC_PROTOCOL___FMDBluetoothFrameworkDevice, v18) & 1) != 0)
        {
          if (objc_msgSend(v10, "isTemporaryPaired"))
          {
            v11 = sub_1000031B8();
            v12 = objc_claimAutoreleasedReturnValue(v11);
            if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = v18;
              v24 = v10;
              _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "BluetoothManager.pairedDevices ignoring temporary device - %@", buf, 0xCu);
            }
          }
          else
          {
            v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "address"));
            v15 = objc_msgSend(v14, "isEqualToString:", v3);

            if (!v15)
              continue;
            v16 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
            v17 = v10;
            v12 = *(NSObject **)(v16 + 40);
            *(_QWORD *)(v16 + 40) = v17;
          }
        }
        else
        {
          v13 = sub_1000031B8();
          v12 = objc_claimAutoreleasedReturnValue(v13);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v18;
            v24 = v10;
            _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "BluetoothManager.pairedDevices unexpected object type %@", buf, 0xCu);
          }
        }

      }
      v7 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v25, 16);
      if (!v7)
      {
LABEL_19:

        break;
      }
    }
  }

}

void sub_10005BA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005BA90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bluetoothManagerDeviceForBluetoothDevice:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10005C710(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v3 = *(void **)(a1 + 32);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "channelName"));
    v5 = objc_msgSend(v3, "containsObject:", v4);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v5));
    objc_msgSend(v7, "setPlayingSound:", v6);

  }
  else
  {
    objc_msgSend(v7, "setPlayingSound:", 0);
  }

}

void sub_10005CBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005CC04(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10005CC14(uint64_t a1)
{

}

void sub_10005CC1C(uint64_t a1, char a2, id obj)
{
  id v6;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
  v6 = obj;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

id sub_10005F040(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "updatedLocations:reason:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_10005F204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;
  id *v23;
  uint64_t v24;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  objc_destroyWeak(v22);
  objc_destroyWeak((id *)(v24 - 88));
  _Unwind_Resume(a1);
}

void sub_10005F244(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id *v7;
  id v8;
  id v9;
  id WeakRetained;

  v7 = (id *)(a1 + 32);
  v8 = a5;
  v9 = a3;
  WeakRetained = objc_loadWeakRetained(v7);
  objc_msgSend(WeakRetained, "logPublishedLocation:reason:publisher:", v9, a4, v8);

}

void sub_10005F2B0(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  id WeakRetained;
  uint8_t v13[16];

  v7 = a2;
  v8 = a3;
  v9 = sub_1000031B8();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "FMCompareLocatorPublisher publishing to primary publisher.", v13, 2u);
  }

  v11 = *(_QWORD *)(a1 + 32);
  if (v11)
    (*(void (**)(uint64_t, id, id, uint64_t))(v11 + 16))(v11, v7, v8, a4);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_10005F394(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10005F41C;
  v6[3] = &unk_1002C38D8;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  objc_msgSend(v5, "startPublishingWithBlock:", v6);

}

uint64_t sub_10005F41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), a2, a3, a4, *(_QWORD *)(a1 + 32));
}

id sub_10005F4F4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setStartThreshold:", *(_QWORD *)(a1 + 32));
}

id sub_10005F5C8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setEndThreshold:", *(_QWORD *)(a1 + 32));
}

id sub_10005F69C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setDecayFactor:", *(_QWORD *)(a1 + 32));
}

id sub_10005F770(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setMinimumDistance:", *(_QWORD *)(a1 + 32));
}

id sub_10005F844(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setPublishTimeInterval:", *(_QWORD *)(a1 + 32));
}

id sub_10005F918(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setCachedLocationValidityTimeInterval:", *(_QWORD *)(a1 + 32));
}

uint64_t sub_10005FC6C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_10005FCE0(id a1, FMLocatorPublishing *a2)
{
  -[FMLocatorPublishing flushLocations](a2, "flushLocations");
}

void sub_100060124(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_100229A9C(a1, v3, v4, v5, v6, v7, v8, v9);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegates"));
  objc_msgSend(v10, "addPointer:", *(_QWORD *)(a1 + 32));

}

void sub_1000601F4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  NSDictionary *v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v4 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32), v3), "defaultStorageLocation");
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v10 = 0;
  objc_msgSend(v2, "removeItemAtURL:error:", v5, &v10);
  v6 = v10;

  if (v6 && (objc_msgSend(v6, "fm_isFileNotFoundError") & 1) == 0)
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_100229B04(v6, v8);

  }
  v9 = objc_opt_new(NSDictionary);
  objc_msgSend(*(id *)(a1 + 32), "setAccessoriesByIdentifier:", v9);

}

void sub_1000603B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000603CC(id *a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  unsigned __int8 v13;
  _QWORD v14[4];
  id v15;
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v2 = a1 + 6;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessoriesByIdentifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "accessoryIdentifier"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v5));

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v7 = a1[5];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v18;
    while (2)
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v18 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v12, "assetType") == (id)1
          && objc_msgSend(v6, "conformsToProtocol:", &OBJC_PROTOCOL___FMDAudioAccessory))
        {
          v13 = objc_msgSend(v6, "updateAudioAsset:", v12);

          if ((v13 & 1) != 0)
          {
            v14[0] = _NSConcreteStackBlock;
            v14[1] = 3221225472;
            v14[2] = sub_1000605C0;
            v14[3] = &unk_1002C11E8;
            objc_copyWeak(&v16, v2);
            v15 = a1[4];
            dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

            objc_destroyWeak(&v16);
          }
          goto LABEL_13;
        }
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      if (v9)
        continue;
      break;
    }
  }

LABEL_13:
}

void sub_1000605C0(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  uint8_t v5[16];

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry is updating assets.", v5, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "accessoryDidUpdate:", *(_QWORD *)(a1 + 32));

}

void sub_100060764(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_100060778(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  unsigned __int8 v7;
  void *v8;
  uint64_t v9;
  unsigned __int8 v10;
  id v11;
  _QWORD v12[5];
  id v13;
  id v14;
  unsigned __int8 v15;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessoriesByIdentifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryIdentifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", v4));

  v7 = objc_msgSend(v5, "conformsToProtocol:", &OBJC_PROTOCOL___FMDAudioAccessory);
  v8 = v5;
  if ((v7 & 1) == 0)
  {
    v9 = objc_opt_class(FMDExtAccessory, v6);
    if ((objc_opt_isKindOfClass(v5, v9) & 1) == 0)
    {
      v10 = 0;
      goto LABEL_6;
    }
    v8 = *(void **)(a1 + 32);
  }
  v10 = objc_msgSend(v8, "updatePlaybackChannels:", *(_QWORD *)(a1 + 40));
LABEL_6:
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000608AC;
  v12[3] = &unk_1002C39D8;
  v15 = v10;
  v12[4] = WeakRetained;
  v13 = v5;
  v14 = *(id *)(a1 + 48);
  v11 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);

}

uint64_t sub_1000608AC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  if (*(_BYTE *)(a1 + 56))
  {
    v2 = sub_1000031B8();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry is updating playbackChannels.", v5, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "accessoryDidUpdate:", *(_QWORD *)(a1 + 40));
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_100060A00(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100060A24(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataSources"));
  objc_msgSend(v2, "addObjectsFromArray:", *(_QWORD *)(a1 + 32));

}

void sub_100060B40(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100060B64(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataSources"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 32));

}

void sub_100060C50(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100060C64(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "computeAccessoryRegistry");

}

void sub_100061184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006119C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000611AC(uint64_t a1)
{

}

void sub_1000611B4(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegates"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "allObjects"));
  v3 = objc_msgSend(v2, "copy");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_1000612DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000612F0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessoriesByIdentifier"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allValues"));
  v4 = objc_msgSend(v3, "copy");

  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v4);

}

void sub_1000617B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;
  uint64_t v27;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v27 - 192), 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_100061814(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  __int128 v8;
  _QWORD v9[4];
  id v10;
  uint64_t v11;
  id v12;
  __int128 v13;
  uint64_t v14;

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000618C4;
  v9[3] = &unk_1002C3A50;
  v4 = *(id *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v8 = *(_OWORD *)(a1 + 56);
  v7 = (id)v8;
  v13 = v8;
  v14 = *(_QWORD *)(a1 + 72);
  objc_msgSend(a2, "getAccessoriesWithCompletion:", v9);

}

void sub_1000618C4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[5];
  id v12;

  v10 = a2;
  v5 = a3;
  if (v5)
  {
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v8 = *(_QWORD *)(v6 + 40);
    v7 = (id *)(v6 + 40);
    if (!v8)
      objc_storeStrong(v7, a3);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", v10);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1000619B4;
    v11[3] = &unk_1002C3A28;
    v9 = *(void **)(a1 + 48);
    v11[4] = *(_QWORD *)(a1 + 40);
    v12 = v9;
    objc_msgSend(v10, "enumerateObjectsUsingBlock:", v11);
    if (!--*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
      objc_msgSend(*(id *)(a1 + 56), "signal");

  }
}

void sub_1000619B4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "supportsAccessory:"))
  {
    v3 = *(void **)(a1 + 40);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "accessoryIdentifier"));
    objc_msgSend(v3, "addObject:", v4);

  }
}

void sub_100061A18(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  _QWORD block[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessoryQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100061A90;
  block[3] = &unk_1002C1328;
  block[4] = WeakRetained;
  dispatch_async(v2, block);

}

id sub_100061A90(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "computeAccessoryRegistry");
}

void sub_100061A98(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;

  v5 = a3;
  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) & 1) == 0
    && objc_msgSend(v5, "category") != (id)3)
  {
    objc_msgSend(*(id *)(a1 + 40), "_removeAccessory:", v5);
  }

}

id sub_100061AF8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateAccessory:previouslyPaired:", a2, 0);
}

void sub_100061BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100061BF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoriesByIdentifier"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "allValues"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100061DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100061E0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoriesByIdentifier"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100062168(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "accessoryDidPair:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "postConnectionStatusChangeNotification");

}

void sub_100062354(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "accessoryDidUnpair:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "postConnectionStatusChangeNotification");

}

void sub_100062664(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (*(_BYTE *)(a1 + 56))
  {
    objc_msgSend(WeakRetained, "accessoryDidUpdate:", *(_QWORD *)(a1 + 32));
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v13 = 138412290;
      v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry : accessory updated %@", (uint8_t *)&v13, 0xCu);
    }

  }
  if (*(_BYTE *)(a1 + 57))
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = *(_QWORD *)(a1 + 32);
      v13 = 138412290;
      v14 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry : accessory disconnected %@", (uint8_t *)&v13, 0xCu);
    }

    objc_msgSend(v3, "accessoryDidDisconnect:", *(_QWORD *)(a1 + 32));
  }
  else if (*(_BYTE *)(a1 + 58))
  {
    v10 = sub_1000031B8();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = *(_QWORD *)(a1 + 32);
      v13 = 138412290;
      v14 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry : accessory connected %@", (uint8_t *)&v13, 0xCu);
    }

    objc_msgSend(v3, "accessoryDidConnect:", *(_QWORD *)(a1 + 32));
  }
  objc_msgSend(*(id *)(a1 + 40), "postConnectionStatusChangeNotification");

}

id sub_1000628D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_forceUpdateAccessory:", *(_QWORD *)(a1 + 40));
}

void sub_100062B0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100062B20(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_updateAccessory:previouslyPaired:", *(_QWORD *)(a1 + 32), 0);

}

void sub_100062C28(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100062C3C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_removeAccessory:", *(_QWORD *)(a1 + 32));

}

void sub_100062D2C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  _QWORD v5[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoriesByIdentifier"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allValues"));
  v4 = objc_msgSend(v3, "copy");

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100062DC8;
  v5[3] = &unk_1002C3AC8;
  v5[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v5);

}

void sub_100062DC8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  NSObject *v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD v15[4];
  id v16;
  uint64_t v17;
  id v18;
  uint8_t buf[4];
  void *v20;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "address"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithMACAddressString:](NSData, "dataWithMACAddressString:", v4));

  if (v5)
  {
    v6 = (void *)objc_opt_new(SPOwnerInterface);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ownerSession"));

    v8 = objc_msgSend(objc_alloc((Class)FMSynchronizer), "initWithDescription:andTimeout:", CFSTR("SP-BA-UUID"), 5.0);
    v9 = sub_1000031B8();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "address"));
      *(_DWORD *)buf = 138412290;
      v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "FMDExtAccessoryManager Retrieving baUUID for MAC: %@", buf, 0xCu);

    }
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100062F88;
    v15[3] = &unk_1002C3B18;
    v12 = v3;
    v13 = *(_QWORD *)(a1 + 32);
    v16 = v12;
    v17 = v13;
    v18 = v8;
    v14 = v8;
    objc_msgSend(v7, "beaconingIdentifierForMACAddress:completion:", v5, v15);
    objc_msgSend(v14, "wait");

  }
}

void sub_100062F88(id *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  int v11;
  void *v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;

  v3 = a2;
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "UUIDString"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "name"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "address"));
    v11 = 138412802;
    v12 = v6;
    v13 = 2112;
    v14 = v7;
    v15 = 2112;
    v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FMDExtAccessoryManager Received baUUID: %@ for %@, %@", (uint8_t *)&v11, 0x20u);

  }
  if (v3)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "baUUID"));
    v10 = objc_msgSend(v3, "isEqual:", v9);

    if ((v10 & 1) == 0)
    {
      objc_msgSend(a1[4], "updateWithBeaconingIdentifier:", v3);
      objc_msgSend(a1[5], "updateAccessory:", a1[4]);
    }
  }
  objc_msgSend(a1[6], "signal");

}

void sub_100063188(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10006319C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSSet *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v24;
  _QWORD v25[5];
  id v26;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataArchiver"));
  v5 = objc_opt_class(FMDBluetoothAccessory, v4);
  v7 = objc_opt_class(FMDBLEBeacon, v6);
  v9 = objc_opt_class(FMDNanoRegistryAccessory, v8);
  v11 = objc_opt_class(FMDExtAccessory, v10);
  v13 = objc_opt_class(FMDAccessoryIdentifier, v12);
  v15 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v5, v7, v9, v11, v13, objc_opt_class(FMDMockAccessory, v14), 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  v26 = 0;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "readDictionaryAndClasses:error:", v16, &v26));
  v18 = v26;
  v19 = &__NSDictionary0__struct;
  if (v17)
    v19 = v17;
  v20 = v19;

  if (v18 && (objc_msgSend(v18, "fm_isFileNotFoundError") & 1) == 0)
  {
    v21 = sub_1000031B8();
    v22 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      sub_100229CB0();

    v23 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLoggerGeneral sharedInstance](FMDEventLoggerGeneral, "sharedInstance"));
    objc_msgSend(v23, "sendError:forEventName:", v18, CFSTR("FMDAccessoryRegistryFailedReadEventName"));

  }
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "allValues"));
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_100063388;
  v25[3] = &unk_1002C3AC8;
  v25[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v24, "enumerateObjectsUsingBlock:", v25);

}

id sub_100063388(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateAccessory:previouslyPaired:", a2, 1);
}

id *sub_100063734(id *result)
{
  id *v1;
  id v2;
  NSObject *v3;
  __int16 v4[8];

  if (*((_BYTE *)result + 48))
  {
    v1 = result;
    v2 = sub_1000031B8();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4[0] = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry is updating channel availability.", (uint8_t *)v4, 2u);
    }

    return (id *)objc_msgSend(v1[4], "accessoryDidUpdate:", v1[5]);
  }
  return result;
}

void sub_100064120(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  uint32_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v16 = *(_QWORD *)(a1 + 32);
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v16, 1);
      v17 = sub_1000031B8();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v18 = 138412546;
      v19 = v10;
      v20 = 2048;
      v21 = objc_msgSend(v3, "httpResponseStatus");
      v11 = "%@: successful with status %ld";
      v12 = v8;
      v13 = 22;
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v18 = 138412290;
        v19 = v10;
        v11 = "%@: Cancelled";
        v12 = v8;
        v13 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v18, v13);
LABEL_14:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v14 = objc_msgSend(v3, "httpResponseStatus");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v18 = 138412802;
      v19 = v10;
      v20 = 2048;
      v21 = v14;
      v22 = 2112;
      v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v18, 0x20u);

      goto LABEL_14;
    }
LABEL_15:

  }
}

void sub_1000643A8(id a1)
{
  FMDProtectedContextManager *v1;
  void *v2;

  v1 = objc_alloc_init(FMDProtectedContextManager);
  v2 = (void *)qword_100306668;
  qword_100306668 = (uint64_t)v1;

}

void sub_10006466C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000646A8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000646B8(uint64_t a1)
{

}

void sub_1000646C0(uint64_t *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  FMDProtectedContext *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id obj;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMPreferencesUtil stringForKey:inDomain:](FMPreferencesUtil, "stringForKey:inDomain:", a1[4], kFMDNotBackedUpPrefDomain));
  if (v2)
  {
    v3 = objc_msgSend(objc_alloc((Class)NSUUID), "initWithUUIDString:", v2);
    v4 = *(_QWORD *)(a1[5] + 8);
    v5 = *(void **)(v4 + 40);
    *(_QWORD *)(v4 + 40) = v3;

    v6 = sub_1000031B8();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      sub_100229E88(a1 + 4, (uint64_t)(a1 + 5), v7);

    v8 = -[FMDProtectedContext initWithContextKey:contextUUID:]([FMDProtectedContext alloc], "initWithContextKey:contextUUID:", a1[4], *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 40));
    v9 = *(_QWORD *)(a1[7] + 8);
    obj = *(id *)(v9 + 40);
    v10 = objc_claimAutoreleasedReturnValue(-[FMDProtectedContext context:](v8, "context:", &obj));
    objc_storeStrong((id *)(v9 + 40), obj);
    v11 = *(_QWORD *)(a1[6] + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;

  }
}

void sub_1000648F4(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "setProtectionClass:", *(_QWORD *)(a1 + 56));
  objc_msgSend(*(id *)(a1 + 32), "saveContext:", *(_QWORD *)(a1 + 40));
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contextUUID"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "UUIDString"));
  +[FMPreferencesUtil setString:forKey:inDomain:](FMPreferencesUtil, "setString:forKey:inDomain:", v2, *(_QWORD *)(a1 + 48), kFMDNotBackedUpPrefDomain);

}

void sub_100064AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100064ACC(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;

  v2 = (_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[FMDProtectedContext directoryURLForContextKey:](FMDProtectedContext, "directoryURLForContextKey:", *(_QWORD *)(a1 + 32)));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[FMPreferencesUtil stringForKey:inDomain:](FMPreferencesUtil, "stringForKey:inDomain:", *v2, kFMDNotBackedUpPrefDomain));
  if (v4)
  {
    v5 = objc_msgSend(objc_alloc((Class)NSUUID), "initWithUUIDString:", v4);
    if (objc_msgSend(v5, "isEqual:", *(_QWORD *)(a1 + 40)))
    {
      v6 = sub_1000031B8();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
        sub_100229F18(a1 + 32, v7, v8, v9, v10, v11, v12, v13);

      +[FMPreferencesUtil removeKey:inDomain:](FMPreferencesUtil, "removeKey:inDomain:", *(_QWORD *)(a1 + 32), kFMDNotBackedUpPrefDomain);
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(*(id *)(a1 + 48), "cleanOutCurrentContextDirectoryURL:preservingContextUUID:obliterateDirectory:", v3, 0, *(unsigned __int8 *)(a1 + 64));
    }
    else
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 0;
      v14 = sub_1000031B8();
      v15 = objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        v16 = *(_QWORD *)(a1 + 40);
        v17 = 138412290;
        v18 = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Trying to delete an outdated protected context %@", (uint8_t *)&v17, 0xCu);
      }

    }
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(*(id *)(a1 + 48), "cleanOutCurrentContextDirectoryURL:preservingContextUUID:obliterateDirectory:", v3, 0, *(unsigned __int8 *)(a1 + 64));
  }

}

void sub_100064D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100064D70(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[FMDProtectedContext directoryURLForContextKey:](FMDProtectedContext, "directoryURLForContextKey:", *(_QWORD *)(a1 + 32)));
  +[FMPreferencesUtil removeKey:inDomain:](FMPreferencesUtil, "removeKey:inDomain:", *(_QWORD *)(a1 + 32), kFMDNotBackedUpPrefDomain);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(*(id *)(a1 + 40), "cleanOutCurrentContextDirectoryURL:preservingContextUUID:obliterateDirectory:", v2, 0, 1);

}

void sub_100064F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100064F70(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  void *v5;
  unsigned int v6;
  void *v7;
  id v8;
  NSObject *v9;
  const char *v10;
  uint8_t *v11;
  id v12;
  __int16 v13;
  __int16 v14;
  uint8_t buf[16];

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDProtectedContextManager start cleanupblock", buf, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (objc_msgSend(WeakRetained, "_startCleaningEmptyFolders"))
  {
    +[FMPreferencesUtil setBool:forKey:inDomain:](FMPreferencesUtil, "setBool:forKey:inDomain:", 1, CFSTR("kFMDProtectedContextCleanedUpEmptyFolders"), kFMDNotBackedUpPrefDomain);
    +[FMPreferencesUtil synchronizeDomain:](FMPreferencesUtil, "synchronizeDomain:", kFMDNotBackedUpPrefDomain);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCNotificationsUtil sharedInstance](FMXPCNotificationsUtil, "sharedInstance"));
    v6 = objc_msgSend(v5, "isHandlerRegisteredForDarwinNotification:", *(_QWORD *)(a1 + 32));

    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCNotificationsUtil sharedInstance](FMXPCNotificationsUtil, "sharedInstance"));
      objc_msgSend(v7, "deregisterHandlerForDarwinNotification:", *(_QWORD *)(a1 + 32));

    }
    v8 = sub_1000031B8();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v14 = 0;
      v10 = "FMDProtectedContextManager finished cleaning up empty folders";
      v11 = (uint8_t *)&v14;
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v10, v11, 2u);
    }
  }
  else
  {
    v12 = sub_1000031B8();
    v9 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v13 = 0;
      v10 = "FMDProtectedContextManager failed to clean up empty folders";
      v11 = (uint8_t *)&v13;
      goto LABEL_10;
    }
  }

}

void sub_100065210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;
  id *v18;

  v18 = v17;
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_100065244(uint64_t a1, void *a2)
{
  uint64_t v2;
  id *v4;
  id v5;
  void *v6;
  id WeakRetained;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  if (*(_BYTE *)(v2 + 24))
  {
    v4 = (id *)(a1 + 40);
    v5 = a2;
    WeakRetained = objc_loadWeakRetained(v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "lastPathComponent"));

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(WeakRetained, "cleanupAllContextsForKey:", v6);
  }
  else
  {
    *(_BYTE *)(v2 + 24) = 0;
  }
}

void sub_1000653CC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v6 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_enumeratorForDirectoryURL:"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "allObjects"));
  v5 = objc_msgSend(v4, "count");

  if (!v5)
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v6);

}

void sub_100065710(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "hasPrefix:", *(_QWORD *)(a1 + 32)))
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v3);

}

void sub_100065840(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;

  v3 = a2;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 48);
  if (v5 == 1)
  {
    v10 = v3;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_enumeratorForDirectoryURL:", v3));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "allObjects"));
    v8 = objc_msgSend(v7, "count");

    if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
      objc_msgSend(*(id *)(a1 + 32), "addObject:", v9);

    }
    goto LABEL_6;
  }
  if (!v5)
  {
    v10 = v3;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastPathComponent"));
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
LABEL_6:

    v4 = v10;
  }

}

BOOL sub_1000659B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  int v9;
  uint64_t v10;
  __int16 v11;
  id v12;

  v4 = a3;
  if (v4)
  {
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v9 = 138412546;
      v10 = v7;
      v11 = 2112;
      v12 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Could not enumerate folder %@ %@", (uint8_t *)&v9, 0x16u);
    }

  }
  return v4 == 0;
}

void sub_100065B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100065B68(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  NSObject *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint8_t buf[4];
  void *v18;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v16 = 0;
  objc_msgSend(v4, "removeItemAtURL:error:", v3, &v16);
  v5 = v16;
  v6 = v5;
  if (!v5)
  {
    v9 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      sub_100229F80((uint64_t)v3, v8, v10, v11, v12, v13, v14, v15);
    goto LABEL_7;
  }
  if ((objc_msgSend(v5, "fm_isFileNotFoundError") & 1) == 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v18 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Unable to delete protected context file %@", buf, 0xCu);
    }
LABEL_7:

  }
}

BOOL sub_100065E90(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  int v9;
  uint64_t v10;
  __int16 v11;
  id v12;

  v4 = a3;
  if (v4)
  {
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v9 = 138412546;
      v10 = v7;
      v11 = 2112;
      v12 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Could not enumerate folder %@ %@", (uint8_t *)&v9, 0x16u);
    }

  }
  return v4 == 0;
}

void sub_10006618C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000661B8(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  void (**v5)(void);
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32);
  v6 = WeakRetained;
  if (v3)
  {
    (*(void (**)(void))(v3 + 16))();
    WeakRetained = v6;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "completion"));

  if (v4)
  {
    v5 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "completion"));
    v5[2]();

  }
}

void sub_100066EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100066F1C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  int v19;
  id v20;
  __int16 v21;
  id v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = sub_1000530AC();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = objc_msgSend(v3, "httpResponseStatus");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseHeaders"));
    v19 = 138413058;
    v20 = v3;
    v21 = 2048;
    v22 = v7;
    v23 = 2112;
    v24 = v8;
    v25 = 2112;
    v26 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v19, 0x2Au);

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v10
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
  {

  }
  else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
  {
    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "registry"));
    objc_msgSend(v15, "updateConfigurations:", v13);
    goto LABEL_12;
  }
  v11 = objc_msgSend(v3, "cancelled");
  v12 = sub_1000530AC();
  v13 = objc_claimAutoreleasedReturnValue(v12);
  v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
  if (v11)
  {
    if (!v14)
      goto LABEL_13;
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
    v19 = 138412290;
    v20 = v15;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v19, 0xCu);
  }
  else
  {
    if (!v14)
      goto LABEL_13;
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
    v16 = objc_msgSend(v3, "httpResponseStatus");
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    v19 = 138412802;
    v20 = v15;
    v21 = 2048;
    v22 = v16;
    v23 = 2112;
    v24 = v17;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v19, 0x20u);

  }
LABEL_12:

LABEL_13:
  v18 = *(_QWORD *)(a1 + 32);
  if (v18)
    (*(void (**)(void))(v18 + 16))();

}

void sub_100067A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100067A2C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100067A3C(uint64_t a1)
{

}

void sub_100067A44(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;

  v7 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
  if (objc_msgSend(v7, "primary"))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_100068F68(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  id v12;

  v12 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "beacons"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v3));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "updateDate"));
  objc_msgSend(v6, "timeIntervalSinceReferenceDate");
  v8 = v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "updateDate"));
  objc_msgSend(v9, "timeIntervalSinceReferenceDate");
  v11 = v10;

  if (v8 > v11)
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v12, v3);

}

void sub_1000691A0(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "channelName"));
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v3, v4);

}

void sub_10006949C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000694B4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000694C4(uint64_t a1)
{

}

void sub_1000694CC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  if (objc_msgSend(v9, "primary"))
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "updateDate"));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    *a4 = 1;
  }

}

void sub_10006960C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100069624(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  unsigned __int8 v11;
  id v12;

  v12 = a2;
  if (objc_msgSend(v12, "audioState") != (id)1)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
    *a4 = 1;
  }
  if (objc_msgSend(v12, "availability") == (id)1)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "muted"));
    v7 = objc_msgSend(v6, "BOOLValue");

    if ((v7 & 1) == 0)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
      *a4 = 1;
    }
  }
  if (objc_msgSend(v12, "availability") == (id)2)
  {
    v8 = 1;
  }
  else if (objc_msgSend(v12, "availability") == (id)1)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "muted"));
    v8 = objc_msgSend(v9, "BOOLValue");

  }
  else
  {
    v8 = 0;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  if (*(_BYTE *)(v10 + 24))
    v11 = v8;
  else
    v11 = 0;
  *(_BYTE *)(v10 + 24) = v11;

}

void sub_1000697D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000697EC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  void *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  id v11;

  v11 = a2;
  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "playingSound"));
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "playingSound"));
    v9 = objc_msgSend(v8, "BOOLValue");

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "playingSound"));
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v10, "BOOLValue");

    }
  }
  *a4 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

}

void sub_100069A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100069AA8(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v6 = *(void **)(a1 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v8 = a2;
  v9 = objc_msgSend(v6, "audioSafetyStatusForAirPods:knownStatus:", v8, v7);
  v10 = objc_msgSend(*(id *)(a1 + 32), "audioSafetyStatusForStereoPair:", v8);

  if (v9 <= v10)
    v11 = v10;
  else
    v11 = v9;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v11;
  *a4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) > 2uLL;
}

void sub_100069F70(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v3 = *(void **)(a1 + 32);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "channelName"));
    v5 = objc_msgSend(v3, "containsObject:", v4);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v5));
    objc_msgSend(v7, "setPlayingSound:", v6);

  }
  else
  {
    objc_msgSend(v7, "setPlayingSound:", 0);
  }

}

id sub_10006CC8C()
{
  return +[NSTimeZone resetSystemTimeZone](NSTimeZone, "resetSystemTimeZone");
}

void sub_10006CF10(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("SystemConfig-deviceName", 0);
  v2 = (void *)qword_100306680;
  qword_100306680 = (uint64_t)v1;

}

uint64_t sub_10006CF3C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10006CF4C(uint64_t a1)
{

}

void sub_10006CF54(uint64_t a1)
{
  _BYTE *v2;
  void *v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;

  v2 = *(_BYTE **)(a1 + 32);
  if (v2[112])
  {
    v3 = (void *)qword_100306678;
    v4 = (void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  }
  else
  {
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_stringGestaltQueryForKey:", CFSTR("UserAssignedDeviceName")));
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v4 = (void **)&qword_100306678;
  }
  v8 = v3;
  v9 = *v4;
  *v4 = v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 112) = 1;
}

void sub_10006D1A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("DeviceClass")));
  v2 = (void *)qword_100306690;
  qword_100306690 = v1;

}

void sub_10006D248(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  uint64_t v4;
  int v5;

  v5 = 0;
  v2 = (void *)MGCopyAnswerWithError(CFSTR("DeviceClassNumber"), 0, &v5);
  if (v5)
    objc_msgSend(*(id *)(a1 + 32), "_handleGestaltError:forKey:");
  if (v2 && (v3 = objc_msgSend(v2, "intValue") - 1, v3 <= 0xA))
    v4 = qword_100253820[v3];
  else
    v4 = 0;
  qword_1003066A0 = v4;

}

void sub_10006D350(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("UniqueDeviceID")));
  v2 = (void *)qword_1003066B0;
  qword_1003066B0 = v1;

}

void sub_10006D3F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("ProductType")));
  v2 = (void *)qword_1003066C0;
  qword_1003066C0 = v1;

}

void sub_10006D4A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("ProductName")));
  v2 = (void *)qword_1003066D0;
  qword_1003066D0 = v1;

}

void sub_10006D548(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = objc_claimAutoreleasedReturnValue(+[FMDPreferencesMgr overriddenOSVersion](FMDPreferencesMgr, "overriddenOSVersion"));
  if (!v2)
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("ProductVersion")));
  v3 = (void *)qword_1003066E0;
  qword_1003066E0 = v2;

}

void sub_10006D610(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = objc_claimAutoreleasedReturnValue(+[FMDPreferencesMgr overriddenBuildVersion](FMDPreferencesMgr, "overriddenBuildVersion"));
  if (!v2)
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("BuildVersion")));
  v3 = (void *)qword_1003066F0;
  qword_1003066F0 = v2;

}

void sub_10006D6D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("ModelNumber")));
  v2 = (void *)qword_100306700;
  qword_100306700 = v1;

}

void sub_10006D780(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("RegionCode")));
  v2 = (void *)qword_100306710;
  qword_100306710 = v1;

}

void sub_10006D988(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("DeviceColor")));
  v2 = (void *)qword_100306720;
  qword_100306720 = v1;

}

void sub_10006DA30(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("DeviceEnclosureColor")));
  v2 = (void *)qword_100306730;
  qword_100306730 = v1;

}

void sub_10006DAD8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_numberGestaltQueryForKey:", CFSTR("9N7qIucqhr0Cy2/Tk27/hw")));
  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringValue"));
  v2 = (void *)qword_100306740;
  qword_100306740 = v1;

}

void sub_10006DB9C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_numberGestaltQueryForKey:", CFSTR("NJsxTSI2WuD+13rxShXX9w")));
  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringValue"));
  v2 = (void *)qword_100306750;
  qword_100306750 = v1;

}

void sub_10006DC60(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_numberGestaltQueryForKey:", CFSTR("CJcvxERO5v/3IWjDFKZKRw")));
  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringValue"));
  v2 = (void *)qword_100306760;
  qword_100306760 = v1;

}

id sub_10006DD20(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "_BOOLGestaltQueryForKey:", CFSTR("0dnM19zBqLw5ZPhIo4GEkg"));
  byte_100306770 = (char)result;
  return result;
}

id sub_10006DDBC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "_BOOLGestaltQueryForKey:", CFSTR("zxMIgVSILN6S5ee6MZhf+Q"));
  byte_100306780 = (char)result;
  return result;
}

void sub_10006DE80(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("SerialNumber")));
  v2 = (void *)qword_100306790;
  qword_100306790 = v1;

}

void sub_10006DF28(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_numberGestaltQueryForKey:", CFSTR("ChipID")));
  v2 = (void *)qword_1003067A0;
  qword_1003067A0 = v1;

}

void sub_10006DFD0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_numberGestaltQueryForKey:", CFSTR("UniqueChipID")));
  v2 = (void *)qword_1003067B0;
  qword_1003067B0 = v1;

}

void sub_10006E078(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("WifiAddress")));
  v2 = (void *)qword_1003067C0;
  qword_1003067C0 = v1;

}

void sub_10006E120(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stringGestaltQueryForKey:", CFSTR("BluetoothAddress")));
  v2 = (void *)qword_1003067D0;
  qword_1003067D0 = v1;

}

void sub_10006E28C(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("SystemConfig-currentPasscodeConstraint", 0);
  v2 = (void *)qword_1003067E8;
  qword_1003067E8 = (uint64_t)v1;

}

void sub_10006E2B8(uint64_t a1)
{
  void *v2;
  void *v3;

  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 113))
  {
    *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = dword_1003067E0;
  }
  else
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](MCProfileConnection, "sharedConnection"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "effectiveValueForSetting:", MCFeaturePasscodeKeyboardComplexity));
    *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v3, "intValue");

    dword_1003067E0 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  }
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 113) = 1;
}

void sub_10006E524(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("SystemConfig-isPasscodeSet", 0);
  v2 = (void *)qword_100306800;
  qword_100306800 = (uint64_t)v1;

}

void sub_10006E550(uint64_t a1)
{
  void *v2;

  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 114))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = byte_1003067F8;
  }
  else
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](MCProfileConnection, "sharedConnection"));
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v2, "isPasscodeSet");

    byte_1003067F8 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  }
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 114) = 1;
}

void sub_10006E7C0(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("SystemConfig-currentPasscodeConstraintStr", 0);
  v2 = (void *)qword_100306818;
  qword_100306818 = (uint64_t)v1;

}

void sub_10006E7EC(uint64_t a1)
{
  unsigned int v2;
  int v3;
  void *v4;
  void **v5;
  uint64_t v6;
  void *v7;
  const __CFString *v8;
  id v9;
  void *v10;

  v2 = objc_msgSend(*(id *)(a1 + 32), "currentPasscodeConstraint");
  v3 = v2;
  if (v2 == dword_1003051B8)
  {
    v4 = (void *)qword_100306810;
    v5 = (void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  }
  else
  {
    if (v2 == 2)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v7 = *(void **)(v6 + 40);
      v8 = CFSTR("fullKeyboard");
    }
    else if (v2 == 1)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v7 = *(void **)(v6 + 40);
      v8 = CFSTR("numericLong");
    }
    else
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v7 = *(void **)(v6 + 40);
      if (v2)
        v8 = CFSTR("unknown");
      else
        v8 = CFSTR("simple");
    }
    *(_QWORD *)(v6 + 40) = v8;

    v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v5 = (void **)&qword_100306810;
  }
  v9 = v4;
  v10 = *v5;
  *v5 = v9;

  dword_1003051B8 = v3;
}

void sub_10006EB54(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_numberGestaltQueryForKey:", CFSTR("nhGhVMyvrWYe9U2ltAUImg")));
  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringValue"));
  v2 = (void *)qword_100306828;
  qword_100306828 = v1;

}

void sub_10006EDF0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 8u);
}

void sub_10006FAB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006FAE0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10006FAF0(uint64_t a1)
{

}

void sub_10006FAF8(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v12 = a2;
  v5 = a3;
  if ((objc_opt_isKindOfClass(v5, a1[7]) & 1) != 0 || (objc_opt_isKindOfClass(v5, a1[8]) & 1) != 0)
  {
    v7 = (void *)a1[4];
    v6 = (void *)a1[5];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "arrayByAddingObject:", v12));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "flattenedArrayFromObject:parentIndices:", v5, v8));
    objc_msgSend(v7, "addObjectsFromArray:", v9);
  }
  else
  {
    v10 = (void *)a1[4];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "arrayByAddingObject:", v12));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "componentsJoinedByString:", CFSTR("_")));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@_%@"), v9, v5));
    objc_msgSend(v10, "addObject:", v11);

  }
}

void sub_10006FC1C(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v5 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v6 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a3));
  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "arrayByAddingObject:", v7));

  v8 = *(void **)(a1 + 32);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "flattenedArrayFromObject:parentIndices:", v6, v10));

  objc_msgSend(v8, "addObjectsFromArray:", v9);
}

void sub_100070910(uint64_t a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  int v10;
  void *v11;
  __int16 v12;
  void *v13;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(void **)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "embeddedAction"));
    v10 = 138412546;
    v11 = v5;
    v12 = 2112;
    v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ Finished waiting. Will enqueue action %@", (uint8_t *)&v10, 0x16u);

  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[ActionManager sharedManager](ActionManager, "sharedManager"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "embeddedAction"));
  v9 = objc_msgSend(v7, "enqueueAction:", v8);

}

void sub_1000713F4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  NSObject *v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  unsigned __int8 v47;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10022A55C((uint64_t)v6, v8, v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "description"));
    goto LABEL_20;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("state")));
  v12 = objc_msgSend(v11, "isEqualToString:", CFSTR("ready"));

  if ((v12 & 1) != 0)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("contextDump")));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("self")));

    if (!v14)
    {
      v35 = sub_1000031B8();
      v23 = objc_claimAutoreleasedReturnValue(v35);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        sub_10022A2E8(v23, v36, v37, v38, v39, v40, v41, v42);
      goto LABEL_10;
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("contextDump")));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectForKeyedSubscript:", CFSTR("self")));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("dynamicInfo")));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("included")));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("contextDump")));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("self")));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "objectForKeyedSubscript:", CFSTR("peerID")));
    v47 = objc_msgSend(v18, "containsObject:", v21);

    v22 = sub_1000031B8();
    v23 = objc_claimAutoreleasedReturnValue(v22);
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);
    if ((v47 & 1) != 0)
    {
      if (v24)
        sub_10022A31C(v23, v25, v26, v27, v28, v29, v30, v31);
LABEL_10:

      v10 = 0;
      goto LABEL_20;
    }
    if (v24)
      sub_10022A350(v5, v23);

    v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("contextDump")));
    v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "objectForKeyedSubscript:", CFSTR("self")));
    v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "objectForKeyedSubscript:", CFSTR("dynamicInfo")));
    v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "objectForKeyedSubscript:", CFSTR("included")));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("self not in peer list. Peers: %ld"), objc_msgSend(v46, "count")));

  }
  else
  {
    v32 = sub_1000031B8();
    v33 = objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      sub_10022A4C8(v5, v33);

    v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("state")));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("KeyState: %@"), v34));

  }
LABEL_20:
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_1000732E4(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  _QWORD block[4];
  id v6;
  id v7;
  uint64_t v8;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100073370;
  block[3] = &unk_1002C3EE0;
  v2 = *(id *)(a1 + 32);
  v4 = *(void **)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v6 = v2;
  v8 = v3;
  v7 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_100073370(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "account"));

  if (objc_msgSend(v5, "unregisterState"))
  {
    v3 = a1[5];
    if (v3)
      (*(void (**)(uint64_t, _QWORD))(v3 + 16))(v3, 0);
  }
  else
  {
    objc_msgSend(v5, "setUnregisterState:", 1);
    objc_msgSend(v5, "setOneTimeRemoveAuthToken:", a1[4]);
    objc_msgSend(v5, "setFmipDisableContext:", a1[6]);
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
    objc_msgSend(v4, "removeAccount:completion:", v5, a1[5]);

  }
}

void sub_10007342C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  __CFNotificationCenter *DarwinNotifyCenter;
  uint8_t v8[16];

  if (*(_QWORD *)(a1 + 40))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("FMIP account cannot be removed in ratchet.")));
    v3 = *(_QWORD *)(a1 + 40);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_errorForCode:message:", 9, v2));
    (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);

  }
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Sending FMIP state change notification", v8, 2u);
  }

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, kFMIPStateDidChangeNotification, 0, 0, 1u);
}

uint64_t sub_100073510(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_10007351C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_100073528(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_100073534(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_100073540(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_10005334C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 40);
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Ratchet Permitted for this context: %lu. Allowing disable FMIP. Permission Granted, peforming unregister", (uint8_t *)&v6, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1000735F0(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_10005334C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 40);
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "We are in a ratchet state %lu. Denying disable FMIP.", (uint8_t *)&v6, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10007394C(_QWORD *a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "account"));
  objc_msgSend(v2, "setOneTimeRemoveAuthToken:", a1[4]);
  objc_msgSend(v3, "disableFMIPForPairedDeviceWithUDID:account:andCompletion:", a1[5], v2, a1[6]);

}

void sub_100073C5C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  FMDFMIPAccount *v17;

  v17 = objc_opt_new(FMDFMIPAccount);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "username"));
  -[FMDAccount setUsername:](v17, "setUsername:", v2);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dsid"));
  -[FMDFMIPAccount setDsid:](v17, "setDsid:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "oneTimeRemoveAuthToken"));
  -[FMDAccount setOneTimeRemoveAuthToken:](v17, "setOneTimeRemoveAuthToken:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "account"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverURL"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "host"));
  v9 = objc_msgSend(v8, "length");

  if (v9)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverURL"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "host"));
    -[FMDAccount setServerHost:](v17, "setServerHost:", v11);

  }
  else
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "serverHost"));
    -[FMDAccount setServerHost:](v17, "setServerHost:", v10);
  }

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverURL"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "scheme"));
  v14 = objc_msgSend(v13, "length");

  if (v14)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverURL"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "scheme"));
    -[FMDAccount setServerProtocolScheme:](v17, "setServerProtocolScheme:", v16);

  }
  else
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "serverProtocolScheme"));
    -[FMDAccount setServerProtocolScheme:](v17, "setServerProtocolScheme:", v15);
  }

  objc_msgSend(v5, "disableFMIPForPairedDeviceWithUDID:account:andCompletion:", *(_QWORD *)(a1 + 40), v17, *(_QWORD *)(a1 + 48));
}

void sub_100074224(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  _DWORD v17[2];
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "accountAddTime"));
  objc_msgSend(v4, "timeIntervalSinceReferenceDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForProperty:", NRDevicePropertyPairingID));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForProperty:", NRDevicePropertyLocalPairingDataStorePath));
  v8 = objc_alloc((Class)NPSDomainAccessor);
  v9 = objc_msgSend(v8, "initWithDomain:pairingID:pairingDataStore:", kFMDWatchNotBackedUpPrefDomain, v6, v7);
  v10 = objc_msgSend(v9, "synchronize");
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKey:", CFSTR("LastALCompletionInfo")));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("LastIdentityTime")));

  if (v12)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("LastAccountAddTime")));
    v13 = objc_msgSend(v5, "fm_isEqualToNumber:withPrecision:", v12, 0.1);
  }
  else
  {
    v13 = 0;
  }
  v14 = sub_1000031B8();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    v17[0] = 67109634;
    v17[1] = (_DWORD)v13;
    v18 = 2112;
    v19 = v5;
    v20 = 2112;
    v21 = v12;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "alCompleted : %d, currentAccountAddTime: %@, alAccountAddTime: %@", (uint8_t *)v17, 0x1Cu);
  }

  v16 = *(_QWORD *)(a1 + 40);
  if (v16)
    (*(void (**)(uint64_t, id, _QWORD))(v16 + 16))(v16, v13, 0);

}

void sub_100074690(_QWORD *a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
  objc_msgSend(v2, "markPairedDeviceWithUdid:asMissingUsingToken:withCompletion:", a1[4], a1[5], a1[6]);

}

void sub_100074E40(uint64_t a1)
{
  void *v2;
  void *v3;
  __CFNotificationCenter *DarwinNotifyCenter;
  void *v5;
  uint64_t v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "account"));

  if (v7)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[FMDServiceProvider activeServiceProvider](FMDServiceProvider, "activeServiceProvider"));
    objc_msgSend(v3, "registerDeviceWithCause:force:", CFSTR("enableActivationLock"), 0);
    objc_msgSend(v3, "syncFMIPStateToWatch");
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, kActivationLockAllowedMayHaveChangedNotification, 0, 0, 1u);

    v5 = 0;
  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kFMDErrorDomain, 5, 0));
  }
  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v5);

}

void sub_10007551C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100075548(uint64_t a1, int a2)
{
  id WeakRetained;
  void *v5;
  uint64_t v6;
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = WeakRetained;
  if (a2)
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_errorForCode:message:", 3, CFSTR("User auth failed")));
  else
    v5 = 0;
  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v5);

}

void sub_100075EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  char a71;
  uint64_t v71;

  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a53, 8);
  _Block_object_dispose(&a59, 8);
  _Block_object_dispose(&a65, 8);
  _Block_object_dispose(&a71, 8);
  _Block_object_dispose((const void *)(v71 - 160), 8);
  _Block_object_dispose((const void *)(v71 - 224), 8);
  _Block_object_dispose((const void *)(v71 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100075F6C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100075F7C(uint64_t a1)
{

}

void sub_100075F84(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  void *v7;
  _QWORD block[4];
  id v9;
  uint64_t v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  block[1] = 3221225472;
  v2 = *(_OWORD *)(a1 + 80);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = v2;
  v3 = *(_OWORD *)(a1 + 112);
  v14 = *(_OWORD *)(a1 + 96);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_10007601C;
  block[3] = &unk_1002C3F58;
  v15 = v3;
  v4 = *(NSObject **)(a1 + 32);
  v5 = *(id *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(void **)(a1 + 56);
  v9 = v5;
  v10 = v6;
  v11 = v7;
  dispatch_async(v4, block);

}

void sub_10007601C(uint64_t a1)
{
  _BOOL4 v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  NSObject *v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  id v16;
  uint8_t buf[4];
  void *v18;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
    v2 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) != 0;
  else
    v2 = 0;
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v18) = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "signatureHeadersWithData : Populating Headers %i", buf, 8u);
  }

  if (v2)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("X-Apple-Sign1-Error"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40));
    objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("X-Apple-Sign5-Error"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
    objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("X-Mme-Sign1"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40));
    objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("X-Mme-Sign2"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40));
    objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("X-Mme-Sign5"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 40));
    objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("X-Mme-Sign6"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 112) + 8) + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString"));
    objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("X-Apple-AL-ID"), v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_deviceIdentifiersForSignature"));
    v16 = 0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization dataWithJSONObject:options:error:](NSJSONSerialization, "dataWithJSONObject:options:error:", v7, 0, &v16));
    v9 = v16;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "base64EncodedString"));

    if (v9)
    {
      v11 = sub_1000031B8();
      v12 = objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_10022A910();

    }
    objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("X-Apple-AL-Content"), v10);
    v13 = sub_1000031B8();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "signatureHeadersWithData : Completed all signing %@", buf, 0xCu);
    }

    v15 = *(_QWORD *)(a1 + 48);
    if (v15)
      (*(void (**)(uint64_t, void *, _QWORD))(v15 + 16))(v15, v5, 0);

  }
}

void sub_1000762EC(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  NSObject *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  id v21;
  uint8_t buf[4];
  id v23;
  __int16 v24;
  id v25;

  v5 = a2;
  v6 = a3;
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    v23 = v5;
    v24 = 2112;
    v25 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "signatureHeadersWithData : Absinth signing returned %@ %@", buf, 0x16u);
  }

  if (v5)
  {
    v9 = sub_1000031B8();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_10022A970();

    v11 = objc_msgSend(v5, "code");
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "userInfo"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("kFMDUnderlyingErrorCodeKey")));
    v14 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%ld,%ld"), v11, objc_msgSend(v13, "integerValue")));
    v15 = *(_QWORD *)(a1[5] + 8);
    v16 = *(NSObject **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;
  }
  else
  {
    if (objc_msgSend(v6, "count") != (id)2)
      goto LABEL_8;
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", 0));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "base64EncodedString"));

    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", 1));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "base64EncodedString"));

    objc_storeStrong((id *)(*(_QWORD *)(a1[6] + 8) + 40), v12);
    v19 = sub_1000031B8();
    v20 = objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v23 = v12;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Signature header: %@", buf, 0xCu);
    }

    objc_storeStrong((id *)(*(_QWORD *)(a1[7] + 8) + 40), v13);
    v21 = sub_1000031B8();
    v16 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v23 = v13;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "SkAuth header: %@", buf, 0xCu);
    }
  }

LABEL_8:
  *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
  (*(void (**)(void))(a1[4] + 16))();

}

void sub_1000765A4(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;

  v16 = a2;
  v5 = a3;
  v6 = v5;
  if (v5)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "domain"));
    v8 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@|%ld"), v7, objc_msgSend(v6, "code")));
    v9 = a1[5];
  }
  else
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "signature"));
    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "base64EncodedString"));
    v12 = *(_QWORD *)(a1[6] + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "attestation"));
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "base64EncodedString"));
    v9 = a1[7];
  }
  v14 = *(_QWORD *)(v9 + 8);
  v15 = *(void **)(v14 + 40);
  *(_QWORD *)(v14 + 40) = v8;

  *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
  (*(void (**)(void))(a1[4] + 16))();

}

void sub_100076918(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = +[FMDGenericAudioAccessory copyAccessory:](FMDGenericAudioAccessory, "copyAccessory:", a2);
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);

}

void sub_100076D54(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  int v6;
  id v7;

  v3 = a2;
  v4 = sub_1000530AC();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138412290;
    v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Remove completed with error %@.", (uint8_t *)&v6, 0xCu);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1000772DC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_100077704(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  dispatch_time_t v5;
  dispatch_queue_global_t global_queue;
  NSObject *v7;
  _QWORD block[4];
  id v9;
  uint8_t buf[4];
  void *v11;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serialNumber"));
    *(_DWORD *)buf = 138412290;
    v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "### setting keys updated on mulder for %@", buf, 0xCu);

  }
  v5 = dispatch_time(0, 10000000000);
  global_queue = dispatch_get_global_queue(0, 0);
  v7 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100077840;
  block[3] = &unk_1002C1328;
  v9 = *(id *)(a1 + 32);
  dispatch_after(v5, v7, block);

}

void sub_100077840(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serialNumber"));
    v7 = 138412290;
    v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "### calling updateCompletedFor %@", (uint8_t *)&v7, 0xCu);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[FMDExtExtensionHelper getAccessoryProxyForId:withDelegate:](FMDExtExtensionHelper, "getAccessoryProxyForId:withDelegate:", CFSTR("com.apple.icloud.FindMyDevice.FindMyExtensionContainer.FMDMagSafeExtension"), 0));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serialNumber"));
  objc_msgSend(v5, "updateCompletedFor:withCompletion:", v6, &stru_1002C4018);

}

void sub_100077948(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "### update to extension completed %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_1000789F0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint8_t v9[16];

  v3 = a2;
  v4 = sub_1000532DC();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_10022AAB4(v3, v6);

    v7 = *(_QWORD *)(a1 + 32);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kFMDErrorDomain, 12, 0));
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);

  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "requireDisableLocationWithCompletion finished.", v9, 2u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_1000791F8(uint64_t a1, void *a2)
{
  _xpc_activity_s *v3;
  xpc_activity_state_t state;
  xpc_object_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  char v9;
  id v10;
  NSObject *v11;
  id v12;

  v3 = a2;
  state = xpc_activity_get_state(v3);
  v5 = xpc_activity_copy_criteria(v3);
  if (state == 2)
  {
    v6 = objc_alloc_init((Class)FMAlert);
    -[NSObject setCategory:](v6, "setCategory:", 3);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "locateStats"));
    -[NSObject setMsgText:](v6, "setMsgText:", v7);

    -[NSObject setMsgTitle:](v6, "setMsgTitle:", CFSTR("Daily Locate Report"));
    -[NSObject setShowMsgInLockScreen:](v6, "setShowMsgInLockScreen:", 1);
    -[NSObject setDismissMsgOnUnlock:](v6, "setDismissMsgOnUnlock:", 0);
    -[NSObject setDismissMsgOnLock:](v6, "setDismissMsgOnLock:", 0);
    -[NSObject setDefaultButtonTitle:](v6, "setDefaultButtonTitle:", CFSTR("OK"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[FMAlertManager sharedInstance](FMAlertManager, "sharedInstance"));
    objc_msgSend(v8, "activateAlert:", v6);

    v9 = xpc_activity_set_state(v3, 5);
    v10 = sub_1000031B8();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      sub_10022AB34(v9, v11);

  }
  else
  {
    v12 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      sub_10022ABA8((uint64_t)v5, state, v6);
  }

}

void sub_1000794F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100079514(uint64_t a1, void *a2)
{
  void *v3;
  double v4;
  double v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v13 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "groupValue"));
  objc_msgSend(v3, "doubleValue");
  v5 = v4;

  if (v5 >= *(double *)(a1 + 40) && v5 < *(double *)(a1 + 48))
  {
    v6 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    v7 = *(_QWORD *)(a1 + 56) + 24;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "statValue"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%li hours ago: %@"), v7, v8));
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "stringByAppendingString:", v9));
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;

  }
}

void sub_100079CBC(id a1, NSString *a2)
{
  NSString *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSString *v6;

  v2 = a2;
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Sent auth token to paired device : %@", (uint8_t *)&v5, 0xCu);
  }

}

id sub_10007B2C8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_10007BC58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10007BC74(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "_serialQueue_addTrackedLocationNow:", *(_QWORD *)(a1 + 32));
  objc_msgSend(WeakRetained, "_serialQueue_purgeOldTrackedLocationsNow");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "trackedLocations"));
  objc_msgSend(WeakRetained, "_serialQueue_updateTrackedLocationsCache:", v3);

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10007BD44;
  v5[3] = &unk_1002C13E8;
  v6 = WeakRetained;
  v7 = *(id *)(a1 + 40);
  v4 = WeakRetained;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

}

void sub_10007BD44(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "locationTracker"));
  objc_msgSend(v2, "didAddNewTrackedLocation:", *(_QWORD *)(a1 + 40));

}

void sub_10007BF44(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_10007BF58(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "trackedLocations"));
  objc_msgSend(v1, "removeAllObjects");

  objc_msgSend(WeakRetained, "_serialQueue_deleteTrackedLocationsCache");
  objc_msgSend(WeakRetained, "_serialQueue_scheduleLocationPurgeTimer");

}

uint64_t sub_10007C200(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_10007C2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007C2F0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10007C300(uint64_t a1)
{

}

void sub_10007C308(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "trackedLocations"));
  v7 = objc_msgSend(v2, "copy");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "lastObject"));
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("kFMDTrackedLocationsStoreTrackFMDLocation")));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

}

void sub_10007C85C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10007C878(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_10007C880(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_serialQueue_purgeOldTrackedLocationsNow");
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "trackedLocations"));
  objc_msgSend(WeakRetained, "_serialQueue_updateTrackedLocationsCache:", v1);

}

void sub_10007C8D4(uint64_t a1)
{
  void *v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "locationPurgeTimer"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop currentRunLoop](NSRunLoop, "currentRunLoop"));
  objc_msgSend(v2, "scheduleInRunLoop:", v1);

}

void sub_10007CF8C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_10007D550(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10007D564(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_removeUntrackedAssets:", *(_QWORD *)(a1 + 32));

}

void sub_10007D60C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;

  objc_msgSend(*(id *)(a1 + 32), "_removeUntrackedAssets:", &__NSArray0__struct);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v4 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32), v3), "defaultStorageLocation");
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v9 = 0;
  objc_msgSend(v2, "removeItemAtURL:error:", v5, &v9);
  v6 = v9;

  if (v6 && (objc_msgSend(v6, "fm_isFileNotFoundError") & 1) == 0)
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10022B168(v6);

  }
}

void sub_10007DBE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10007DBF8(uint64_t a1)
{
  id *WeakRetained;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v3 = objc_msgSend(WeakRetained[2], "mutableCopy");
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "url"));
  objc_msgSend(v3, "fm_safeSetObject:forKey:", v4, v5);

  v6 = WeakRetained[2];
  WeakRetained[2] = v3;
  v7 = v3;

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataArchiver"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "saveDictionary:", v7));

  if (v9)
  {
    v10 = sub_1000031B8();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_100228A90();

  }
}

void sub_10007DD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007DDB0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10007DDC0(uint64_t a1)
{

}

void sub_10007DDC8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  NSSet *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v11;
  NSObject *v12;
  void *v13;
  id v14;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 16));
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataArchiver"));
    v4 = +[NSSet setWithObject:](NSSet, "setWithObject:", objc_opt_class(FMDStandardAsset, v3));
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v14 = 0;
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "readDictionaryAndClasses:error:", v5, &v14));
    v7 = v14;
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v6;

    if ((objc_msgSend(v7, "fm_isFileNotFoundError") & 1) == 0
      && (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) || v7 != 0))
    {
      v11 = sub_1000031B8();
      v12 = objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_10022B1F0();

      v13 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLoggerGeneral sharedInstance](FMDEventLoggerGeneral, "sharedInstance"));
      objc_msgSend(v13, "sendError:forEventName:", v7, CFSTR("FMDAssetRegistryFailedReadEventName"));

    }
  }
}

void sub_10007E0C4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  FileDownloadAction *v7;
  void *v8;
  id v9;
  int v10;
  id v11;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverInteractionController"));
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Starting download of asset %@", (uint8_t *)&v10, 0xCu);
  }

  v7 = -[FileDownloadAction initWithAsset:serverInteractionController:assetRegistry:]([FileDownloadAction alloc], "initWithAsset:serverInteractionController:assetRegistry:", v3, v4, *(_QWORD *)(a1 + 32));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[ActionManager sharedManager](ActionManager, "sharedManager"));
  v9 = objc_msgSend(v8, "enqueueAction:", v7);

}

void sub_10007E220(id a1, OS_xpc_object *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Received XPC event com.apple.nsurlsessiond-events", v4, 2u);
  }

}

void sub_10007F898(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *i;
  FMDExtAccessory *v14;
  void *v15;
  void *v16;
  unsigned __int8 v17;
  NSObject *v18;
  id v19;
  void *v20;
  void *v21;
  int8x16_t *v22;
  NSObject *v23;
  id v24;
  void *v25;
  id v26;
  NSObject *v27;
  id v28;
  id v29;
  id v30;
  _QWORD v32[4];
  int8x16_t v33;
  id v34;
  id v35;
  id v36;
  _QWORD block[4];
  id v38;
  int8x16_t v39;
  id v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint8_t buf[4];
  id v46;
  __int16 v47;
  void *v48;
  _BYTE v49[128];

  v4 = a2;
  v5 = a3;
  v6 = sub_1000530AC();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  if (v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_10022B250(a1, (uint64_t)v5, v8);
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v46 = v4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "accessoryList = %@", buf, 0xCu);
    }

    v30 = objc_alloc_init((Class)NSMutableDictionary);
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v29 = v4;
    v9 = v4;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v41, v49, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v42;
      do
      {
        for (i = 0; i != v11; i = (char *)i + 1)
        {
          if (*(_QWORD *)v42 != v12)
            objc_enumerationMutation(v9);
          v14 = -[FMDExtAccessory initWithExtAccessoryInfo:]([FMDExtAccessory alloc], "initWithExtAccessoryInfo:", *(_QWORD *)(*((_QWORD *)&v41 + 1) + 8 * (_QWORD)i));
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[FMDExtConfigurationRegistry sharedInstance](FMDExtConfigurationRegistry, "sharedInstance"));
          v16 = (void *)objc_claimAutoreleasedReturnValue(-[FMDExtAccessory accessoryType](v14, "accessoryType"));
          v17 = objc_msgSend(v15, "supportsAccessoryType:", v16);

          if ((v17 & 1) != 0)
          {
            v18 = objc_claimAutoreleasedReturnValue(-[FMDExtAccessory accessoryIdentifier](v14, "accessoryIdentifier"));
            -[FMDExtAccessory setExtensionId:](v14, "setExtensionId:", *(_QWORD *)(a1 + 32));
            objc_msgSend(v30, "setObject:forKeyedSubscript:", v14, v18);
          }
          else
          {
            v19 = sub_1000530AC();
            v18 = objc_claimAutoreleasedReturnValue(v19);
            if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
            {
              v20 = (void *)objc_claimAutoreleasedReturnValue(-[FMDExtAccessory name](v14, "name"));
              v21 = (void *)objc_claimAutoreleasedReturnValue(-[FMDExtAccessory accessoryType](v14, "accessoryType"));
              *(_DWORD *)buf = 138412546;
              v46 = v20;
              v47 = 2112;
              v48 = v21;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "accessory %@ with accessory type %@ not supported", buf, 0x16u);

            }
          }

        }
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v41, v49, 16);
      }
      while (v11);
    }

    v22 = (int8x16_t *)a1;
    v23 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "serialQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10007FC98;
    block[3] = &unk_1002C4138;
    v24 = v30;
    v38 = v24;
    v39 = vextq_s8(v22[2], v22[2], 8uLL);
    v40 = *(id *)(a1 + 48);
    dispatch_async(v23, block);

    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "allAccessories"));
    v26 = objc_msgSend(v25, "copy");

    v27 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "serialQueue"));
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_100080188;
    v32[3] = &unk_1002C4160;
    v33 = vextq_s8(v22[2], v22[2], 8uLL);
    v34 = v26;
    v35 = v24;
    v36 = *(id *)(a1 + 48);
    v8 = v24;
    v28 = v26;
    dispatch_async(v27, v32);

    v5 = 0;
    v4 = v29;
  }

}

void sub_10007FC98(uint64_t a1)
{
  id v2;
  id v3;
  __int128 v4;
  id v5;
  uint64_t v6;
  void *i;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  __int128 v25;
  id v26;
  uint64_t v27;
  void *j;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  NSObject *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  __int128 v40;
  __int128 v41;
  _QWORD v42[4];
  id v43;
  id v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _QWORD block[4];
  id v50;
  id v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint8_t v56[128];
  uint8_t buf[4];
  void *v58;
  _BYTE v59[128];

  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v55 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v52, v59, 16);
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)v53;
    *(_QWORD *)&v4 = 138412290;
    v40 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v53 != v6)
          objc_enumerationMutation(v2);
        v8 = *(_QWORD *)(*((_QWORD *)&v52 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoriesByExtension", v40));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v8));

        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v8));
        if (v11 && (objc_msgSend(v11, "accessoryInfoChanged:", v12) & 1) == 0)
        {
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_100080170;
          block[3] = &unk_1002C13E8;
          v50 = *(id *)(a1 + 56);
          v51 = v11;
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

        }
        else
        {
          v13 = sub_1000530AC();
          v14 = objc_claimAutoreleasedReturnValue(v13);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = v40;
            v58 = v12;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "new accessory added = %@", buf, 0xCu);
          }

          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoriesByExtension"));
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));

          if (!v16)
          {
            v17 = objc_alloc_init((Class)NSMutableDictionary);
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoriesByExtension"));
            objc_msgSend(v18, "setObject:forKeyedSubscript:", v17, *(_QWORD *)(a1 + 48));

          }
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoriesByExtension"));
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
          objc_msgSend(v20, "setObject:forKeyedSubscript:", v12, v8);

          objc_msgSend(*(id *)(a1 + 40), "updateAccessory:", v12);
        }

      }
      v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v52, v59, 16);
    }
    while (v5);
  }

  v47 = 0u;
  v48 = 0u;
  v45 = 0u;
  v46 = 0u;
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoriesByExtension"));
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "allKeys"));

  v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v45, v56, 16);
  if (v24)
  {
    v26 = v24;
    v27 = *(_QWORD *)v46;
    *(_QWORD *)&v25 = 138412290;
    v41 = v25;
    do
    {
      for (j = 0; j != v26; j = (char *)j + 1)
      {
        if (*(_QWORD *)v46 != v27)
          objc_enumerationMutation(v23);
        v29 = *(_QWORD *)(*((_QWORD *)&v45 + 1) + 8 * (_QWORD)j);
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v29, v41));

        if (!v30)
        {
          v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoriesByExtension"));
          v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
          v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "objectForKeyedSubscript:", v29));

          v34 = sub_1000530AC();
          v35 = objc_claimAutoreleasedReturnValue(v34);
          if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
          {
            v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "name"));
            *(_DWORD *)buf = v41;
            v58 = v36;
            _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "removing accessory = %@", buf, 0xCu);

          }
          v42[0] = _NSConcreteStackBlock;
          v42[1] = 3221225472;
          v42[2] = sub_10008017C;
          v42[3] = &unk_1002C13E8;
          v43 = *(id *)(a1 + 56);
          v44 = v33;
          v37 = v33;
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, v42);
          v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoriesByExtension"));
          v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
          objc_msgSend(v39, "removeObjectForKey:", v29);

        }
      }
      v26 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v45, v56, 16);
    }
    while (v26);
  }

}

id sub_100080170(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateAccessory:", *(_QWORD *)(a1 + 40));
}

id sub_10008017C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeAccessory:", *(_QWORD *)(a1 + 40));
}

void sub_100080188(uint64_t a1)
{
  void *v1;
  void *v3;
  unsigned __int8 v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "extensionsAlreadySynced"));
  v4 = objc_msgSend(v3, "containsObject:", *(_QWORD *)(a1 + 40));

  if ((v4 & 1) == 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "extensionsAlreadySynced"));
    objc_msgSend(v5, "addObject:", *(_QWORD *)(a1 + 40));

    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v6 = *(id *)(a1 + 48);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    if (!v7)
      goto LABEL_19;
    v8 = v7;
    v9 = *(_QWORD *)v21;
    while (1)
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v21 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v11, "category") == (id)3)
        {
          v12 = v11;
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "extensionId"));
          if (v13
            && (v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "extensionId")),
                (objc_msgSend(v1, "isEqualToString:", *(_QWORD *)(a1 + 40)) & 1) == 0))
          {

LABEL_15:
          }
          else
          {
            v14 = *(void **)(a1 + 56);
            v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "accessoryIdentifier"));
            v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", v15));

            if (v13)
            {

            }
            if (!v16)
            {
              v17[0] = _NSConcreteStackBlock;
              v17[1] = 3221225472;
              v17[2] = sub_1000803B8;
              v17[3] = &unk_1002C13E8;
              v18 = *(id *)(a1 + 64);
              v19 = v12;
              dispatch_async((dispatch_queue_t)&_dispatch_main_q, v17);

              v13 = v18;
              goto LABEL_15;
            }
          }

          continue;
        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      if (!v8)
      {
LABEL_19:

        return;
      }
    }
  }
}

id sub_1000803B8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeAccessory:", *(_QWORD *)(a1 + 40));
}

void sub_100080460(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  dispatch_time_t v14;
  dispatch_queue_global_t global_queue;
  NSObject *v16;
  id v17;
  uint64_t v18;
  double v19;
  dispatch_time_t v20;
  intptr_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  FMDAudioChannelStatus *v33;
  id v34;
  NSObject *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  NSObject *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _QWORD block[4];
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  _QWORD v56[4];
  id v57;
  NSObject *v58;
  uint8_t buf[4];
  void *v60;
  __int16 v61;
  void *v62;
  __int16 v63;
  void *v64;
  _BYTE v65[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FMDExtConfigurationRegistry sharedInstance](FMDExtConfigurationRegistry, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryType"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "configForAccessoryType:", v3));

  if (v4)
  {
    v5 = sub_1000530AC();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "features"));
      *(_DWORD *)buf = 138412290;
      v60 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "got config %@", buf, 0xCu);

    }
    v8 = dispatch_group_create();
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "flavorForFeature:", CFSTR("style")));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryIdentifier"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "stringValue"));

    if (v9)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[FMDExtExtensionHelper getAccessoryControllerForFeature:flavor:](FMDExtExtensionHelper, "getAccessoryControllerForFeature:flavor:", CFSTR("style"), v9));
      if (v12)
      {
        dispatch_group_enter(v8);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "infoForFeature:", CFSTR("style")));
        v56[0] = _NSConcreteStackBlock;
        v56[1] = 3221225472;
        v56[2] = sub_1000809B4;
        v56[3] = &unk_1002C41B0;
        v57 = *(id *)(a1 + 32);
        v58 = v8;
        objc_msgSend(v12, "getStyleForAccessory:info:withCompletion:", v11, v13, v56);

      }
      v14 = dispatch_time(0, 60000000000);
      global_queue = dispatch_get_global_queue(0, 0);
      v16 = objc_claimAutoreleasedReturnValue(global_queue);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100080AC4;
      block[3] = &unk_1002C4160;
      v51 = *(id *)(a1 + 32);
      v52 = v9;
      v53 = v11;
      v17 = v4;
      v18 = *(_QWORD *)(a1 + 40);
      v54 = v17;
      v55 = v18;
      dispatch_after(v14, v16, block);

    }
    objc_msgSend(v4, "timeoutForFeature:", CFSTR("style"));
    v20 = dispatch_time(0, (uint64_t)(v19 * 1000000000.0));
    v21 = dispatch_group_wait(v8, v20);
    if (v21)
    {
      v22 = v21;
      v23 = sub_1000530AC();
      v24 = objc_claimAutoreleasedReturnValue(v23);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        sub_10022B2D8(v22, v24);

    }
    v43 = v11;
    v44 = v9;
    v45 = v8;
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "infoForFeature:", CFSTR("sound")));
    v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    v49 = 0u;
    v42 = v25;
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "objectForKeyedSubscript:", CFSTR("channels")));
    v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v46, v65, 16);
    if (v28)
    {
      v29 = v28;
      v30 = *(_QWORD *)v47;
      do
      {
        v31 = 0;
        do
        {
          if (*(_QWORD *)v47 != v30)
            objc_enumerationMutation(v27);
          v32 = *(_QWORD *)(*((_QWORD *)&v46 + 1) + 8 * (_QWORD)v31);
          v33 = -[FMDAudioChannelStatus initWithName:active:]([FMDAudioChannelStatus alloc], "initWithName:active:", v32, 1);
          -[FMDAudioChannelStatus setAvailability:](v33, "setAvailability:", 1);
          objc_msgSend(v26, "setObject:forKey:", v33, v32);

          v31 = (char *)v31 + 1;
        }
        while (v29 != v31);
        v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v46, v65, 16);
      }
      while (v29);
    }

    objc_msgSend(*(id *)(a1 + 32), "setAudioChannelInfo:", v26);
    v34 = sub_10005311C();
    v35 = objc_claimAutoreleasedReturnValue(v34);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "playbackChannels"));
      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "audioChannelInfo"));
      v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
      *(_DWORD *)buf = 138412802;
      v60 = v36;
      v61 = 2112;
      v62 = v37;
      v63 = 2112;
      v64 = v38;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "got playback channel  %@  and audioChannelInfo = %@ error for %@", buf, 0x20u);

    }
    v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoryRegistry"));
    objc_msgSend(v39, "updateAccessory:", *(_QWORD *)(a1 + 32));

  }
  else
  {
    v40 = (void *)objc_claimAutoreleasedReturnValue(+[FMDExtConfigurationRegistry sharedInstance](FMDExtConfigurationRegistry, "sharedInstance"));
    v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryType"));
    objc_msgSend(v40, "prepareForAccessoryType:", v41);

  }
}

void sub_1000809B4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  int v10;
  id v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  id v15;

  v5 = a2;
  v6 = a3;
  v7 = sub_1000530AC();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
    v10 = 138412802;
    v11 = v5;
    v12 = 2112;
    v13 = v9;
    v14 = 2112;
    v15 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "got style %@ for %@ error %@", (uint8_t *)&v10, 0x20u);

  }
  if (v5 && !v6)
    objc_msgSend(*(id *)(a1 + 32), "setStyle:", v5);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void sub_100080AC4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  uint64_t v12;
  uint8_t buf[4];
  void *v14;

  v2 = sub_1000530AC();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
    *(_DWORD *)buf = 138412290;
    v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Getting style again for %@", buf, 0xCu);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[FMDExtExtensionHelper getAccessoryControllerForFeature:flavor:](FMDExtExtensionHelper, "getAccessoryControllerForFeature:flavor:", CFSTR("style"), *(_QWORD *)(a1 + 40)));
  v6 = *(_QWORD *)(a1 + 48);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "infoForFeature:", CFSTR("style")));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100080C1C;
  v10[3] = &unk_1002C41B0;
  v8 = *(id *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 64);
  v11 = v8;
  v12 = v9;
  objc_msgSend(v5, "getStyleForAccessory:info:withCompletion:", v6, v7, v10);

}

void sub_100080C1C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  int v15;
  id v16;
  __int16 v17;
  id v18;

  v5 = a2;
  v6 = a3;
  v7 = sub_1000530AC();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v15 = 138412546;
    v16 = v5;
    v17 = 2112;
    v18 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Got style %@ with error = %@", (uint8_t *)&v15, 0x16u);
  }

  if (v5)
  {
    if (!v6)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "style"));
      v10 = objc_msgSend(v5, "isEqualToString:", v9);

      if ((v10 & 1) == 0)
      {
        v11 = sub_1000530AC();
        v12 = objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
          v15 = 138412546;
          v16 = v13;
          v17 = 2112;
          v18 = v5;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "updating Accessory %@ with style %@", (uint8_t *)&v15, 0x16u);

        }
        objc_msgSend(*(id *)(a1 + 32), "setStyle:", v5);
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoryRegistry"));
        objc_msgSend(v14, "updateAccessory:", *(_QWORD *)(a1 + 32));

      }
    }
  }

}

void sub_100080E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100080EAC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100080EBC(uint64_t a1)
{

}

void sub_100080EC4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoriesByExtension", 0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allValues"));

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v11;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v7), "allValues"));
        objc_msgSend(v8, "addObjectsFromArray:", v9);

        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v5);
  }

}

void sub_1000810D8(uint64_t a1)
{
  dispatch_queue_global_t global_queue;
  NSObject *v3;
  _QWORD v4[4];
  id v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "enumerateObjectsUsingBlock:", &stru_1002C41F0);
  global_queue = dispatch_get_global_queue(0, 0);
  v3 = objc_claimAutoreleasedReturnValue(global_queue);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10008147C;
  v4[3] = &unk_1002C16D8;
  v6 = *(id *)(a1 + 40);
  v5 = *(id *)(a1 + 32);
  dispatch_async(v3, v4);

}

void sub_100081184(id a1, FMDExtAccessory *a2, unint64_t a3, BOOL *a4)
{
  FMDExtAccessory *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  FMDExtAccessory *v18;
  id v19;
  uint8_t buf[4];
  void *v21;

  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[FMDExtAccessory address](v4, "address"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithMACAddressString:](NSData, "dataWithMACAddressString:", v5));

  if (v6)
  {
    v7 = (void *)objc_opt_new(SPOwnerInterface);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "ownerSession"));

    v9 = objc_msgSend(objc_alloc((Class)FMSynchronizer), "initWithDescription:andTimeout:", CFSTR("SP-BA-UUID"), 5.0);
    v10 = sub_1000031B8();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(-[FMDExtAccessory address](v4, "address"));
      *(_DWORD *)buf = 138412290;
      v21 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "FMDExtAccessoryManager Retrieving baUUID for MAC: %@", buf, 0xCu);

    }
    v14 = _NSConcreteStackBlock;
    v15 = 3221225472;
    v16 = sub_100081330;
    v17 = &unk_1002C2388;
    v18 = v4;
    v19 = v9;
    v13 = v9;
    objc_msgSend(v8, "beaconingIdentifierForMACAddress:completion:", v6, &v14);
    objc_msgSend(v13, "wait", v14, v15, v16, v17);

  }
}

void sub_100081330(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  int v11;
  void *v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;

  v3 = a2;
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "UUIDString"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "address"));
    v11 = 138412802;
    v12 = v6;
    v13 = 2112;
    v14 = v7;
    v15 = 2112;
    v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FMDExtAccessoryManager Received baUUID: %@ for %@, %@", (uint8_t *)&v11, 0x20u);

  }
  if (v3)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "baUUID"));
    v10 = objc_msgSend(v3, "isEqual:", v9);

    if ((v10 & 1) == 0)
      objc_msgSend(*(id *)(a1 + 32), "updateWithBeaconingIdentifier:", v3);
  }
  objc_msgSend(*(id *)(a1 + 40), "signal");

}

uint64_t sub_10008147C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 0);
}

void sub_100081B3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_100081B74(uint64_t a1)
{
  id WeakRetained;
  FMDEventLoggerEventScalar *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setNextScheduledJanitorDate:", 0);
  objc_msgSend(WeakRetained, "expungeAccessoryLocationStore");
  v2 = -[FMDEventLoggerEventScalar initWithEventName:]([FMDEventLoggerEventScalar alloc], "initWithEventName:", CFSTR("FMDAccessoryLocationStoreJanitor"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLogger sharedLogger](FMDEventLogger, "sharedLogger"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLoggerFacilityDataPeek facilityName](FMDEventLoggerFacilityDataPeek, "facilityName"));
  v6 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  objc_msgSend(v3, "logEvent:toFacilitiesNamed:", v2, v5);

}

id sub_100081C74(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  NSObject *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  _QWORD v9[4];
  id v10;
  _QWORD block[6];
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t);
  id v17;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v12 = 0;
  v13 = &v12;
  v14 = 0x3032000000;
  v15 = sub_100081DC8;
  v16 = sub_100081DD8;
  v17 = 0;
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "serialQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100081DE0;
  block[3] = &unk_1002C11C0;
  block[4] = WeakRetained;
  block[5] = &v12;
  dispatch_sync(v3, block);

  v4 = (void *)v13[5];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100081E18;
  v9[3] = &unk_1002C4240;
  v5 = v2;
  v10 = v5;
  objc_msgSend(v4, "enumerateKeysAndObjectsUsingBlock:", v9);
  v6 = v10;
  v7 = v5;

  _Block_object_dispose(&v12, 8);
  return v7;
}

void sub_100081DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100081DC8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100081DD8(uint64_t a1)
{

}

void sub_100081DE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "recordsByAccessoryIdentifier"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100081E18(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD v4[4];
  id v5;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100081E84;
  v4[3] = &unk_1002C4218;
  v5 = *(id *)(a1 + 32);
  objc_msgSend(a3, "enumerateObjectsUsingBlock:", v4);

}

void sub_100081E84(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "recordName"));
  v7 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "description"));

  v8 = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v8, &v7, 1));

  objc_msgSend(*(id *)(a1 + 32), "addEntriesFromDictionary:", v6);
}

void sub_10008202C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000820BC;
  v6[3] = &unk_1002C16D8;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

uint64_t sub_1000820BC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, *(_QWORD *)(a1 + 32), 1);
  return result;
}

void sub_1000821CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000821E4(uint64_t a1)
{
  id *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  FMDLocation *v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  _QWORD v20[5];
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  uint8_t buf[4];
  uint64_t v29;

  v2 = (id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "expungeRecordsForAccessory:allRecords:", *(_QWORD *)(a1 + 40), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "recordsByAccessoryIdentifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[1], "accessoryIdentifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", v4));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "sortedArrayUsingComparator:", &stru_1002C42D0));
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = sub_100081DC8;
  v26 = sub_100081DD8;
  v27 = 0;
  v7 = objc_msgSend(*v2, "canRetrieveLockedRecords");
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_1000824D8;
  v20[3] = &unk_1002C42F8;
  v20[4] = &v22;
  v21 = v7;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v20);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[FMDProtectedContextManager sharedManager](FMDProtectedContextManager, "sharedManager"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v23[5], "recordName"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "contextForKey:contextUUID:error:", v9, 0, 0));

  if (v10)
  {
    v12 = objc_opt_class(NSDictionary, v11);
    if ((objc_opt_isKindOfClass(v10, v12) & 1) != 0)
    {
      v13 = v10;
      v14 = -[FMDLocation initWithDictionary:]([FMDLocation alloc], "initWithDictionary:", v13);
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

    }
  }
  v17 = sub_1000031B8();
  v18 = objc_claimAutoreleasedReturnValue(v17);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    *(_DWORD *)buf = 138412290;
    v29 = v19;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "AccessoryLocationStore: Historical diskLocation %@", buf, 0xCu);
  }

  _Block_object_dispose(&v22, 8);
}

void sub_100082440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

int64_t sub_10008246C(id a1, FMDAccessoryLocationStoreRecord *a2, FMDAccessoryLocationStoreRecord *a3)
{
  FMDAccessoryLocationStoreRecord *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[FMDAccessoryLocationStoreRecord creationDate](a2, "creationDate"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[FMDAccessoryLocationStoreRecord creationDate](v4, "creationDate"));

  v7 = objc_msgSend(v5, "compare:", v6);
  return (int64_t)v7;
}

void sub_1000824D8(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  id v7;
  void *v8;
  id v9;
  void *v10;

  v7 = a2;
  v8 = v7;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40))
  {
    if ((v10 = v7, objc_msgSend(v7, "protection") == (id)1) && *(_BYTE *)(a1 + 40)
      || (v9 = objc_msgSend(v10, "protection"), v8 = v10, !v9))
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
      v8 = v10;
    }
  }
  *a4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) != 0;

}

void sub_1000825F0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;

  objc_msgSend(*(id *)(a1 + 32), "clearAllRecords");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v4 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32), v3), "defaultStorageLocation");
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v9 = 0;
  objc_msgSend(v2, "removeItemAtURL:error:", v5, &v9);
  v6 = v9;

  if (v6 && (objc_msgSend(v6, "fm_isFileNotFoundError") & 1) == 0)
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10022B34C(v6, v8);

  }
  objc_msgSend(*(id *)(a1 + 32), "setRecordsByAccessoryIdentifier:", &__NSDictionary0__struct);
  objc_msgSend(*(id *)(a1 + 32), "removeOrphanedLocationFiles");
  objc_msgSend(*(id *)(a1 + 32), "scheduleJanitor:", 0);

}

void sub_10008277C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000827A0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint8_t buf[4];
  id v12;

  v3 = a2;
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v12 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "AccessoryLocationStore expunging all accessory locations %@", buf, 0xCu);
  }

  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serialQueue"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000828D0;
  v8[3] = &unk_1002C11E8;
  objc_copyWeak(&v10, (id *)(a1 + 40));
  v9 = v3;
  v7 = v3;
  dispatch_async(v6, v8);

  objc_destroyWeak(&v10);
}

void sub_1000828D0(uint64_t a1)
{
  void *v2;
  id WeakRetained;
  _QWORD v4[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10008294C;
  v4[3] = &unk_1002C3AC8;
  v4[4] = WeakRetained;
  objc_msgSend(v2, "enumerateObjectsUsingBlock:", v4);
  objc_msgSend(WeakRetained, "removeOrphanedLocationFiles");

}

id sub_10008294C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "expungeRecordsForAccessory:allRecords:", a2, 0);
}

void sub_100082B68(uint64_t a1, void *a2)
{
  _QWORD v3[4];
  id v4;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100082BD4;
  v3[3] = &unk_1002C4218;
  v4 = *(id *)(a1 + 32);
  objc_msgSend(a2, "enumerateObjectsUsingBlock:", v3);

}

void sub_100082BD4(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "recordName"));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_100082C18(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;

  v3 = a2;
  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", v3) & 1) == 0)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_10022B3DC();

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[FMDProtectedContextManager sharedManager](FMDProtectedContextManager, "sharedManager"));
    objc_msgSend(v6, "cleanupAllContextsForKey:", v3);

  }
}

void sub_100082E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100082EB8(uint64_t a1, void *a2)
{
  id WeakRetained;
  uint64_t v4;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "saveLocation:forAccessory:", v5, *(_QWORD *)(a1 + 32));
  v4 = *(_QWORD *)(a1 + 40);
  if (v4)
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);

}

void sub_100083238(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 48));
  _Unwind_Resume(a1);
}

void sub_10008324C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  NSMutableArray *v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  NSMutableArray *v18;
  void *v19;
  void *v20;
  uint8_t buf[4];
  uint64_t v22;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "accessoryRegistry"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryIdentifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "accessoryForIdentifier:", v4));

  if (v5)
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "saveLocationToDisk:accessory:protection:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 0));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "saveLocationToDisk:accessory:protection:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 1));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "recordsByAccessoryIdentifier"));
    v8 = objc_msgSend(v7, "mutableCopy");

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "recordsByAccessoryIdentifier"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryIdentifier"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", v10));
    v12 = objc_msgSend(v11, "mutableCopy");
    v13 = v12;
    if (v12)
      v14 = (NSMutableArray *)v12;
    else
      v14 = objc_opt_new(NSMutableArray);
    v18 = v14;

    -[NSMutableArray addObject:](v18, "addObject:", v20);
    -[NSMutableArray addObject:](v18, "addObject:", v6);
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryIdentifier"));
    objc_msgSend(v8, "setObject:forKeyedSubscript:", v18, v19);

    objc_msgSend(WeakRetained, "setRecordsByAccessoryIdentifier:", v8);
    objc_msgSend(WeakRetained, "expungeRecordsForAccessory:allRecords:", *(_QWORD *)(a1 + 32), 0);

  }
  else
  {
    v15 = sub_1000031B8();
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v22 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Unable to save location to disk: The accessory is no longer paired. %@", buf, 0xCu);
    }

  }
}

void sub_100083CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 192), 8);
  _Unwind_Resume(a1);
}

int64_t sub_100083CF4(id a1, FMDAccessoryLocationStoreRecord *a2, FMDAccessoryLocationStoreRecord *a3)
{
  FMDAccessoryLocationStoreRecord *v4;
  void *v5;
  void *v6;
  id v7;
  int64_t v8;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[FMDAccessoryLocationStoreRecord creationDate](a2, "creationDate"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[FMDAccessoryLocationStoreRecord creationDate](v4, "creationDate"));

  v7 = objc_msgSend(v5, "compare:", v6);
  v8 = -1;
  if (v7 != (id)1)
    v8 = (int64_t)v7;
  if (v7 == (id)-1)
    return 1;
  else
    return v8;
}

void sub_100083D74(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  char *v8;
  char *v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  double *v16;
  id v17;
  id v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  double v24;
  _BOOL4 v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  int v33;
  uint64_t v34;

  v3 = a2;
  v4 = v3;
  if (*(_BYTE *)(a1 + 88))
    goto LABEL_9;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v3, "protection")));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringValue"));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "valueForKey:", v6));
  v8 = (char *)objc_msgSend(v7, "unsignedIntegerValue");

  v9 = v8 + 1;
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v9));
  objc_msgSend(v11, "setObject:forKey:", v12, v6);

  v13 = sub_1000031B8();
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v33 = 67109120;
    LODWORD(v34) = (unint64_t)v9 <= v10;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "FMDAccessoryLocationStore Applying max locate rule - valid : %i", (uint8_t *)&v33, 8u);
  }

  if ((unint64_t)v9 > v10)
  {

LABEL_9:
    v17 = 0;
LABEL_10:
    v18 = sub_1000031B8();
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      v20 = *(_QWORD *)(a1 + 56);
      v33 = 134217984;
      v34 = v20;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Accessory location is expired or beyond maximum (%lu), deleting it.", (uint8_t *)&v33, 0xCu);
    }

    v21 = (void *)objc_claimAutoreleasedReturnValue(+[FMDProtectedContextManager sharedManager](FMDProtectedContextManager, "sharedManager"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "recordName"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "contextUUID"));
    objc_msgSend(v21, "cleanupContextsForKey:contextUUID:obliterate:", v22, v23, 0);

    goto LABEL_13;
  }
  if (!objc_msgSend(v4, "protection"))
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "creationDate"));
    v16 = (double *)(a1 + 64);
    goto LABEL_16;
  }
  if (objc_msgSend(v4, "protection") == (id)1)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "creationDate"));
    v16 = (double *)(a1 + 80);
LABEL_16:
    v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "dateByAddingTimeInterval:", *v16));

    objc_msgSend(v17, "timeIntervalSinceReferenceDate");
    v25 = *(double *)(a1 + 72) < v24;
    goto LABEL_18;
  }
  v17 = 0;
  v25 = 1;
LABEL_18:
  v26 = sub_1000031B8();
  v27 = objc_claimAutoreleasedReturnValue(v26);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    v33 = 67109120;
    LODWORD(v34) = v25;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "FMDAccessoryLocationStore Applying time expiry - valid : %i", (uint8_t *)&v33, 8u);
  }

  if (!v25)
    goto LABEL_10;
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObject:", v4);
  v28 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v29 = *(void **)(v28 + 40);
  if (v29)
  {
    objc_msgSend(v29, "timeIntervalSinceReferenceDate");
    v31 = v30;
    objc_msgSend(v17, "timeIntervalSinceReferenceDate");
    if (v31 <= v32)
      goto LABEL_14;
    v28 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  }
  v17 = v17;
  v21 = *(void **)(v28 + 40);
  *(_QWORD *)(v28 + 40) = v17;
LABEL_13:

LABEL_14:
}

void sub_10008418C(id a1, NSArray *a2, unint64_t a3, BOOL *a4)
{
  -[NSArray enumerateObjectsUsingBlock:](a2, "enumerateObjectsUsingBlock:", &stru_1002C4438, a4);
}

void sub_10008419C(id a1, FMDAccessoryLocationStoreRecord *a2, unint64_t a3, BOOL *a4)
{
  FMDAccessoryLocationStoreRecord *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a2;
  v7 = (id)objc_claimAutoreleasedReturnValue(+[FMDProtectedContextManager sharedManager](FMDProtectedContextManager, "sharedManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[FMDAccessoryLocationStoreRecord recordName](v4, "recordName"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[FMDAccessoryLocationStoreRecord contextUUID](v4, "contextUUID"));

  objc_msgSend(v7, "cleanupContextsForKey:contextUUID:obliterate:", v5, v6, 1);
}

void sub_1000842C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000842DC(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSSet *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v15;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataArchiver"));
  v4 = objc_opt_class(FMDAccessoryLocationStoreRecord, v3);
  v6 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v4, objc_opt_class(FMDAccessoryIdentifier, v5), 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v15 = 0;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "readDictionaryAndClasses:error:", v7, &v15));
  v9 = v15;
  v10 = &__NSDictionary0__struct;
  if (v8)
    v10 = v8;
  v11 = v10;

  if (v9 && (objc_msgSend(v9, "fm_isFileNotFoundError") & 1) == 0)
  {
    v12 = sub_1000031B8();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_10022B43C();

    v14 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLoggerGeneral sharedInstance](FMDEventLoggerGeneral, "sharedInstance"));
    objc_msgSend(v14, "sendError:forEventName:", v9, CFSTR("FMDAccessoryLocationStoreFailedReadEventName"));

  }
  objc_msgSend(WeakRetained, "setRecordsByAccessoryIdentifier:", v11);

}

void sub_100084744(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100084758(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "expungeRecordsForAccessory:allRecords:", *(_QWORD *)(a1 + 32), 1);

}

void sub_100084D90(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100084DA4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_logEvent:", *(_QWORD *)(a1 + 32));

}

void sub_100085078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100085090(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000850A0(uint64_t a1)
{

}

void sub_1000850A8(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logs"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1000852F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100085310(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  id v8;
  void *v9;
  int v10;
  id v11;
  __int16 v12;
  void *v13;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(WeakRetained, "setLogs:");
  }
  else
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    objc_msgSend(v3, "setLogs:", v4);

  }
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "logs"));
    v8 = objc_msgSend(v7, "count");
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "cachedLogFileURL"));
    v10 = 134218242;
    v11 = v8;
    v12 = 2112;
    v13 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Found existing logs %ld %@", (uint8_t *)&v10, 0x16u);

  }
}

void sub_10008551C(id a1)
{
  FMDRealDeviceIdentity *v1;
  void *v2;

  v1 = objc_opt_new(FMDRealDeviceIdentity);
  v2 = (void *)qword_100306840;
  qword_100306840 = (uint64_t)v1;

}

void sub_1000856A0(id a1)
{
  void *v1;
  unsigned int v2;
  id v3;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[FMSystemInfo sharedInstance](FMSystemInfo, "sharedInstance"));
  v2 = objc_msgSend(v1, "isInternalBuild");

  if (v2)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    byte_100306850 = objc_msgSend(v3, "fileExistsAtPath:", CFSTR("/tmp/deviceIdentityPrefs/prefs.plist"));

  }
}

void sub_100085C3C(uint64_t a1, void *a2)
{
  _xpc_activity_s *v3;
  xpc_activity_state_t state;
  xpc_object_t v5;
  _BOOL4 v6;
  id v7;
  NSObject *v8;
  void *v9;
  const char *v10;
  NSObject *v11;
  uint32_t v12;
  id v13;
  int v14;
  void *v15;
  __int16 v16;
  xpc_activity_state_t v17;
  __int16 v18;
  xpc_object_t v19;

  v3 = a2;
  state = xpc_activity_get_state(v3);
  v5 = xpc_activity_copy_criteria(v3);
  if (state == 2)
  {
    objc_msgSend(*(id *)(a1 + 32), "performWork");
    v6 = xpc_activity_set_state(v3, 5);
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
      v14 = 138412546;
      v15 = v9;
      v16 = 1024;
      LODWORD(v17) = v6;
      v10 = "FMDXPCJanitor XPC activity triggered. Updating to done so that it can be cleaned. success : %@ : %d";
      v11 = v8;
      v12 = 18;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v14, v12);

    }
  }
  else
  {
    v13 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
      v14 = 138412802;
      v15 = v9;
      v16 = 2048;
      v17 = state;
      v18 = 2048;
      v19 = v5;
      v10 = "FMDXPCJanitor XPC activity XPC activity %@ changed to state %ld with criteria %p";
      v11 = v8;
      v12 = 32;
      goto LABEL_6;
    }
  }

}

void sub_1000861D0(id *a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  id v8;
  NSObject *v9;
  void *v10;
  FMDSecureLocationPublisher *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  double v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  double v36;
  double v37;
  void *v38;
  id v39;
  NSObject *v40;
  const char *v41;
  id v42;
  NSObject *v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  void *v54;
  double v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  void *v65;
  void *v66;
  void *v67;
  id v68;
  void *v69;
  void *v70;
  void *v71;
  id v72;
  void *v73;
  double v74;
  void *v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  double v83;
  double v84;
  void *v85;
  void *v86;
  id v87;
  void *v88;
  id v89;
  void *v90;
  id v91;
  void *v92;
  double v93;
  double v94;
  void *v95;
  void *v96;
  FMDMotionMonitor *v97;
  void *v98;
  dispatch_queue_global_t global_queue;
  NSObject *v100;
  void *v101;
  id v102;
  void *v103;
  id v104;
  void *v105;
  id v106;
  uint64_t v107;
  id v108;
  NSObject *v109;
  void *v110;
  id v111;
  void *v112;
  id v113;
  void *v114;
  double v115;
  double v116;
  void *v117;
  _QWORD block[4];
  id v119;
  _QWORD v120[5];
  _QWORD v121[5];
  uint8_t buf[4];
  void *v123;

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "configManager"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "activeConfig"));

    v6 = sub_10005318C();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v123 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - starting with config %@", buf, 0xCu);
    }

    if (!v5)
    {
      v8 = sub_10005318C();
      v9 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - no active policy. Defaulting to proactive", buf, 2u);
      }

      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "configManager"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "configForPolicy:", kFMDSecureLocationModeBackgroundProactive));

    }
    v11 = -[FMDSecureLocationPublisher initWithConfiguration:]([FMDSecureLocationPublisher alloc], "initWithConfiguration:", v5);
    objc_msgSend(v3, "setLocationPublisher:", v11);

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "locationPublisher"));
    v121[0] = _NSConcreteStackBlock;
    v121[1] = 3221225472;
    v121[2] = sub_100086D34;
    v121[3] = &unk_1002C1328;
    v121[4] = v3;
    objc_msgSend(v12, "publishCriteriaMetBlock:", v121);

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "locationPublisher"));
    v120[0] = _NSConcreteStackBlock;
    v120[1] = 3221225472;
    v120[2] = sub_100086DB4;
    v120[3] = &unk_1002C44A0;
    v120[4] = v3;
    objc_msgSend(v13, "startPublisherWithBlock:", v120);

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "policyName"));
    v15 = kFMDSecureLocationModeProactive;
    v16 = objc_msgSend(v14, "caseInsensitiveCompare:", kFMDSecureLocationModeProactive);

    if (v16)
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "policyName"));
      v18 = objc_msgSend(v17, "caseInsensitiveCompare:", kFMDSecureLocationModeBackgroundProactive);

      if (v18)
      {
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "policyName"));
        v20 = objc_msgSend(v19, "caseInsensitiveCompare:", kFMDSecureLocationModeLive);

        if (v20)
        {
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "policyName"));
          v22 = objc_msgSend(v21, "caseInsensitiveCompare:", kFMDSecureLocationModeProactiveShallow);

          if (!v22)
          {
            v110 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
            objc_msgSend(v3, "setShallowLocationManager:", v110);

            v111 = a1[4];
            v112 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "shallowLocationManager"));
            objc_msgSend(v112, "setDelegate:", v111);

            v113 = a1[4];
            v114 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "desiredAccuracy"));
            objc_msgSend(v113, "_clLocationAccuracyFromConfigValue:", v114);
            v116 = v115;
            v117 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "shallowLocationManager"));
            objc_msgSend(v117, "setDesiredAccuracy:", v116);

            v40 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "shallowLocationManager"));
            -[NSObject startUpdatingLocation](v40, "startUpdatingLocation");
            goto LABEL_25;
          }
          v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "policyName"));
          v24 = objc_msgSend(v23, "caseInsensitiveCompare:", kFMDSecureLocationModeOwnerProactive);

          if (v24)
            goto LABEL_26;
          v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
          objc_msgSend(v3, "setBystanderLocationManager:", v25);

          v26 = a1[4];
          v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
          objc_msgSend(v27, "setDelegate:", v26);

          v28 = kCLLocationAccuracyBystander;
          v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
          objc_msgSend(v29, "setDesiredAccuracy:", v28);

          v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
          objc_msgSend(v30, "startUpdatingLocation");

          v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
          objc_msgSend(v3, "setHeartbeatLocationManager:", v31);

          v32 = a1[4];
          v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "heartbeatLocationManager"));
          objc_msgSend(v33, "setDelegate:", v32);

          v34 = a1[4];
          v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "desiredAccuracy"));
          objc_msgSend(v34, "_clLocationAccuracyFromConfigValue:", v35);
          v37 = v36;
          v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "heartbeatLocationManager"));
          objc_msgSend(v38, "setDesiredAccuracy:", v37);

          v39 = sub_10005318C();
          v40 = objc_claimAutoreleasedReturnValue(v39);
          if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            v41 = "SecureLocationMonitor: Started location managers for ownerproactive";
LABEL_24:
            _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, v41, buf, 2u);
          }
        }
        else
        {
          v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
          objc_msgSend(v3, "setLiveLocationManager:", v78);

          v79 = a1[4];
          v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "liveLocationManager"));
          objc_msgSend(v80, "setDelegate:", v79);

          v81 = a1[4];
          v82 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "desiredAccuracy"));
          objc_msgSend(v81, "_clLocationAccuracyFromConfigValue:", v82);
          v84 = v83;
          v85 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "liveLocationManager"));
          objc_msgSend(v85, "setDesiredAccuracy:", v84);

          v86 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "liveLocationManager"));
          objc_msgSend(v86, "startUpdatingLocation");

          v87 = sub_10005318C();
          v40 = objc_claimAutoreleasedReturnValue(v87);
          if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            v41 = "SecureLocationMonitor: Started live location manager";
            goto LABEL_24;
          }
        }
      }
      else
      {
        v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
        objc_msgSend(v3, "setVisitsLocationManager:", v63);

        v64 = a1[4];
        v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "visitsLocationManager"));
        objc_msgSend(v65, "setDelegate:", v64);

        v66 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "visitsLocationManager"));
        objc_msgSend(v66, "startMonitoringVisits");

        v67 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
        objc_msgSend(v3, "setSlcLocationManager:", v67);

        v68 = a1[4];
        v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "slcLocationManager"));
        objc_msgSend(v69, "setDelegate:", v68);

        v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "slcLocationManager"));
        objc_msgSend(v70, "startMonitoringSignificantLocationChanges");

        v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
        objc_msgSend(v3, "setBystanderLocationManager:", v71);

        v72 = a1[4];
        v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
        objc_msgSend(v73, "setDelegate:", v72);

        v74 = kCLLocationAccuracyBystander;
        v75 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
        objc_msgSend(v75, "setDesiredAccuracy:", v74);

        v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
        objc_msgSend(v76, "startUpdatingLocation");

        v77 = sub_10005318C();
        v40 = objc_claimAutoreleasedReturnValue(v77);
        if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          v41 = "SecureLocationMonitor: Started background proactive location manager";
          goto LABEL_24;
        }
      }
    }
    else
    {
      v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
      objc_msgSend(v3, "setVisitsLocationManager:", v44);

      v45 = a1[4];
      v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "visitsLocationManager"));
      objc_msgSend(v46, "setDelegate:", v45);

      v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "visitsLocationManager"));
      objc_msgSend(v47, "startMonitoringVisits");

      v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
      objc_msgSend(v3, "setSlcLocationManager:", v48);

      v49 = a1[4];
      v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "slcLocationManager"));
      objc_msgSend(v50, "setDelegate:", v49);

      v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "slcLocationManager"));
      objc_msgSend(v51, "startMonitoringSignificantLocationChanges");

      v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
      objc_msgSend(v3, "setBystanderLocationManager:", v52);

      v53 = a1[4];
      v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
      objc_msgSend(v54, "setDelegate:", v53);

      v55 = kCLLocationAccuracyBystander;
      v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
      objc_msgSend(v56, "setDesiredAccuracy:", v55);

      v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
      objc_msgSend(v57, "startUpdatingLocation");

      v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
      objc_msgSend(v3, "setHeartbeatLocationManager:", v58);

      v59 = a1[4];
      v60 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "heartbeatLocationManager"));
      objc_msgSend(v60, "setDelegate:", v59);

      v61 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "heartbeatLocationManager"));
      objc_msgSend(v61, "setDesiredAccuracy:", kCLLocationAccuracyHundredMeters);

      v62 = sub_10005318C();
      v40 = objc_claimAutoreleasedReturnValue(v62);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        v41 = "SecureLocationMonitor: Started proactive location manager";
        goto LABEL_24;
      }
    }
LABEL_25:

LABEL_26:
    v88 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManager"));
    objc_msgSend(v3, "setOndemandLocationManager:", v88);

    v89 = a1[4];
    v90 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ondemandLocationManager"));
    objc_msgSend(v90, "setDelegate:", v89);

    v91 = a1[4];
    v92 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "desiredAccuracy"));
    objc_msgSend(v91, "_clLocationAccuracyFromConfigValue:", v92);
    v94 = v93;

    if (v94 >= kCLLocationAccuracyHundredMeters)
      v94 = kCLLocationAccuracyHundredMeters;
    v95 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ondemandLocationManager"));
    objc_msgSend(v95, "setDesiredAccuracy:", v94);

    v96 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_createLocationManagerForStewie"));
    objc_msgSend(v3, "setStewieLocationManager:", v96);

    objc_msgSend(a1[4], "_scheduleXPCActivity");
    v97 = objc_alloc_init(FMDMotionMonitor);
    objc_msgSend(v3, "setMotionMonitor:", v97);

    v98 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "motionMonitor"));
    objc_msgSend(v98, "startMotionMonitoring");

    objc_msgSend(v3, "setLocationManagerStarted:", 1);
    global_queue = dispatch_get_global_queue(0, 0);
    v100 = objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100086E74;
    block[3] = &unk_1002C2060;
    v119 = a1[5];
    dispatch_async(v100, block);

    v101 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "policyName"));
    v102 = objc_msgSend(v101, "caseInsensitiveCompare:", kFMDSecureLocationModeOwnerProactive);

    if (v102)
    {
      v103 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "policyName"));
      v104 = objc_msgSend(v103, "caseInsensitiveCompare:", v15);

      if (v104)
      {
        v105 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "policyName"));
        v106 = objc_msgSend(v105, "caseInsensitiveCompare:", kFMDSecureLocationModeBackgroundProactive);

        if (v106)
        {
LABEL_35:
          v108 = sub_10005318C();
          v109 = objc_claimAutoreleasedReturnValue(v108);
          if (os_log_type_enabled(v109, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v109, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor Started Location Managers", buf, 2u);
          }

          goto LABEL_38;
        }
        v107 = 3;
      }
      else
      {
        v107 = 1;
      }
    }
    else
    {
      v107 = 2;
    }
    +[FMPreferencesUtil setInteger:forKey:inDomain:](FMPreferencesUtil, "setInteger:forKey:inDomain:", v107, CFSTR("kFMDSecureLocationsShouldStartMonitor"), kFMDNotBackedUpPrefDomain);
    goto LABEL_35;
  }
  v42 = sub_10005318C();
  v43 = objc_claimAutoreleasedReturnValue(v42);
  if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: strongSelf is nil, not starting monitors. Calling completion", buf, 2u);
  }

  (*((void (**)(void))a1[5] + 2))();
LABEL_38:

}

void sub_100086D34(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  uint8_t v5[16];

  v2 = sub_10005318C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - Criteria reached, getting on-demand location.", v5, 2u);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ondemandLocationManager"));
  objc_msgSend(v4, "requestLocation");

}

void sub_100086DB4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  int v6;
  id v7;

  v3 = a2;
  v4 = sub_10005318C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138412290;
    v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - Got location from policy manager %@", (uint8_t *)&v6, 0xCu);
  }

  objc_msgSend(*(id *)(a1 + 32), "_publishLocation:", v3);
}

uint64_t sub_100086E74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100087100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10008711C(uint64_t a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setForcePushOndemandlocation:", 1);
  v3 = sub_10005318C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "startLocationMonitorWithContext ondemandLocationManager requestLocation and force publish", v5, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "requestForcedShallowLocation");
  objc_msgSend(*(id *)(a1 + 32), "publishOnDemandLocation:", &stru_1002C44E8);

}

void sub_1000873C4(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  if (v2)
  {
    v3 = sub_10005318C();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = 138412290;
      v6 = v2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Error starting SecureLocationMonitor %@", (uint8_t *)&v5, 0xCu);
    }

  }
}

void sub_100087610(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  dispatch_queue_global_t global_queue;
  NSObject *v21;
  id v22;
  NSObject *v23;
  id v24;
  NSObject *v25;
  uint8_t v26[8];
  _QWORD block[4];
  id v28;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "visitsLocationManager"));

    if (v4)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "visitsLocationManager"));
      objc_msgSend(v5, "stopMonitoringVisits");

      objc_msgSend(v3, "setVisitsLocationManager:", 0);
    }
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "slcLocationManager"));

    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "slcLocationManager"));
      objc_msgSend(v7, "stopMonitoringSignificantLocationChanges");

      objc_msgSend(v3, "setSlcLocationManager:", 0);
    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));

    if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bystanderLocationManager"));
      objc_msgSend(v9, "stopUpdatingLocation");

      objc_msgSend(v3, "setBystanderLocationManager:", 0);
    }
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "heartbeatLocationManager"));

    if (v10)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "heartbeatLocationManager"));
      objc_msgSend(v11, "stopUpdatingLocation");

      objc_msgSend(v3, "setHeartbeatLocationManager:", 0);
    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ondemandLocationManager"));

    if (v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ondemandLocationManager"));
      objc_msgSend(v13, "stopUpdatingLocation");

      objc_msgSend(v3, "setOndemandLocationManager:", 0);
    }
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "liveLocationManager"));

    if (v14)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "liveLocationManager"));
      objc_msgSend(v15, "stopUpdatingLocation");

      objc_msgSend(v3, "setLiveLocationManager:", 0);
    }
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "shallowLocationManager"));

    if (v16)
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "shallowLocationManager"));
      objc_msgSend(v17, "stopUpdatingLocation");

      objc_msgSend(v3, "setShallowLocationManager:", 0);
    }
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "motionMonitor"));

    if (v18)
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "motionMonitor"));
      objc_msgSend(v19, "stopMotionMonitoring");

      objc_msgSend(v3, "setMotionMonitor:", 0);
    }
    objc_msgSend(v3, "setLocationManagerStarted:", 0);
    global_queue = dispatch_get_global_queue(0, 0);
    v21 = objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100087964;
    block[3] = &unk_1002C2060;
    v28 = *(id *)(a1 + 32);
    dispatch_async(v21, block);

    +[FMPreferencesUtil setInteger:forKey:inDomain:](FMPreferencesUtil, "setInteger:forKey:inDomain:", 0, CFSTR("kFMDSecureLocationsShouldStartMonitor"), kFMDNotBackedUpPrefDomain);
    v22 = sub_10005318C();
    v23 = objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - Stopped Location Managers", v26, 2u);
    }

  }
  else
  {
    v24 = sub_10005318C();
    v25 = objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - strongSelf is nil, calling completion", v26, 2u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

uint64_t sub_100087964(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100087DEC(uint64_t a1)
{
  NSObject *v2;
  _QWORD block[4];
  id v4;
  id v5;
  id location;

  objc_initWeak(&location, *(id *)(a1 + 32));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "locationPublishQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100087EB4;
  block[3] = &unk_1002C4530;
  v4 = *(id *)(a1 + 40);
  objc_copyWeak(&v5, &location);
  dispatch_async(v2, block);

  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_100087EA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100087EB4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  id WeakRetained;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  uint8_t buf[4];
  uint64_t v13;

  v2 = sub_10005318C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Sending location to searchpartyd to publish %@", buf, 0xCu);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "convertToSecureLocationObject"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "secureLocationsManager"));
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100087FEC;
    v9[3] = &unk_1002C2130;
    v10 = v6;
    v11 = WeakRetained;
    v8 = v6;
    objc_msgSend(v7, "publishLocation:completion:", v8, v9);

  }
}

void sub_100087FEC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  int v8;
  id v9;

  v3 = a2;
  v4 = sub_10005318C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Error publishing location to searchpartyd %@", (uint8_t *)&v8, 0xCu);
    }
  }
  else
  {
    if (v6)
    {
      v7 = *(void **)(a1 + 32);
      v8 = 138412290;
      v9 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Published location to searchpartyd - %@", (uint8_t *)&v8, 0xCu);
    }

    v5 = objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(*(id *)(a1 + 40), "setLastPublishedTime:", v5);
  }

}

void sub_1000882F4(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "locationPublisher"));
  v3 = objc_msgSend(v2, "publishPreviouslyReceivedLocation");

  if ((v3 & 1) == 0)
  {
    v4 = sub_10005318C();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "heartbeatLocationManager"));
      v8 = 138412290;
      v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: don't have a valid lastReceivedLocation. Requesting from heartbeat location manager %@", (uint8_t *)&v8, 0xCu);

    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "heartbeatLocationManager"));
    objc_msgSend(v7, "requestLocation");

  }
}

uint64_t sub_100088628(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  id v12;
  NSObject *v13;
  const char *v14;
  uint8_t *v15;
  id v16;
  NSObject *v17;
  void *v18;
  id v19;
  __int16 v21;
  __int16 v22;
  uint8_t buf[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ondemandLocationManager"));

  if (v2)
  {
    v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastOnDemandPublishTime"));
    if (!v3)
      goto LABEL_6;
    v4 = (void *)v3;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastOnDemandPublishTime"));
    objc_msgSend(v5, "timeIntervalSinceNow");
    v7 = -v6;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "configManager"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "activeConfig"));
    objc_msgSend(v9, "onDemandPublishThreshold");
    v11 = v10;

    if (v11 > v7)
    {
      v12 = sub_10005318C();
      v13 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v22 = 0;
        v14 = "SecureLocationMonitor: Rejecting ondemand publish request as its within threshold";
        v15 = (uint8_t *)&v22;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v14, v15, 2u);
      }
    }
    else
    {
LABEL_6:
      v16 = sub_10005318C();
      v17 = objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Requesting ondemand one time location", buf, 2u);
      }

      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ondemandLocationManager"));
      objc_msgSend(v18, "requestLocation");

      v13 = objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
      objc_msgSend(*(id *)(a1 + 32), "setLastOnDemandPublishTime:", v13);
    }
  }
  else
  {
    v19 = sub_10005318C();
    v13 = objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v21 = 0;
      v14 = "SecureLocationMonitor: Received ondemand request but location manager not setup";
      v15 = (uint8_t *)&v21;
      goto LABEL_11;
    }
  }

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40));
}

id sub_100088878(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint8_t v6[16];

  v3 = sub_10005318C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Received ondemand location publish request.", v6, 2u);
  }

  return objc_msgSend(a2, "publishOnDemandLocation:", &stru_1002C45F0);
}

void sub_100088ABC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  int v5;
  const __CFString *v6;

  v2 = sub_10005318C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = CFSTR("stewie:");
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: %@ Requesting one time location", (uint8_t *)&v5, 0xCu);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieLocationManager"));
  objc_msgSend(v4, "requestLocation");

}

void sub_100088CA4(uint64_t a1, void *a2)
{
  int v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  int v7;
  const __CFString *v8;

  v3 = _os_feature_enabled_impl("FindMy", "FM_NiftyCurve");
  v4 = sub_10005318C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      v7 = 138412290;
      v8 = CFSTR("stewie:");
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: %@ Received publish request", (uint8_t *)&v7, 0xCu);
    }

    objc_msgSend(a2, "publishLocationToStewie:", &stru_1002C4610);
  }
  else
  {
    if (v6)
    {
      v7 = 138412290;
      v8 = CFSTR("stewie:");
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: %@ feature disabled", (uint8_t *)&v7, 0xCu);
    }

  }
}

void sub_100089A10(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint8_t v8[16];

  v2 = sub_10005318C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Stopped location monitor since expired", v8, 2u);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "configManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "configManager"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "activeConfig"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "policyName"));
  objc_msgSend(v4, "policyExpired:", v7);

}

void sub_100089C00(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  int v6;
  id v7;

  v3 = a2;
  if (*(_QWORD *)(a1 + 32))
  {
    v4 = sub_10005318C();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = 138412290;
      v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Error stopping SecureLocationMonitor %@", (uint8_t *)&v6, 0xCu);
    }

  }
}

void sub_10008A074(uint64_t a1, void *a2)
{
  _xpc_activity_s *v3;
  id v4;
  NSObject *v5;
  xpc_activity_state_t state;
  id v7;
  NSObject *v8;
  xpc_object_t v9;
  id v10;
  NSObject *v11;
  id v12;
  unsigned int v13;
  id v14;
  NSObject *v15;
  _BOOL4 v16;
  id v17;
  int v18;
  xpc_object_t v19;

  v3 = a2;
  v4 = sub_10005318C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v18) = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: - xpc activity triggered", (uint8_t *)&v18, 2u);
  }

  state = xpc_activity_get_state(v3);
  if (state == 2)
  {
    v10 = sub_10005318C();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v18) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: XPC Activity State Run", (uint8_t *)&v18, 2u);
    }

    if (!xpc_activity_should_defer(v3))
    {
      v13 = +[FMPreferencesUtil BOOLForKey:inDomain:](FMPreferencesUtil, "BOOLForKey:inDomain:", CFSTR("kFMDSecureLocationsShouldStartMonitor"), kFMDNotBackedUpPrefDomain);
      if ((objc_msgSend(*(id *)(a1 + 32), "isRunning") & 1) != 0 || !v13)
      {
        v14 = sub_10005318C();
        v15 = objc_claimAutoreleasedReturnValue(v14);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v18) = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor already running", (uint8_t *)&v18, 2u);
        }

        objc_msgSend(*(id *)(a1 + 32), "_publishHeartbeatIfNeeded");
      }
      else
      {
        objc_msgSend(*(id *)(a1 + 32), "startLocationMonitor:", &stru_1002C4570);
      }
      v16 = xpc_activity_set_state(v3, 5);
      v17 = sub_10005318C();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        v18 = 67109120;
        LODWORD(v19) = v16;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Setting state of XPC activity to done. Result %d", (uint8_t *)&v18, 8u);
      }
      goto LABEL_21;
    }
    if (!xpc_activity_set_state(v3, 3))
    {
      v12 = sub_10005318C();
      v8 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_10022B8D8(v8);
      goto LABEL_21;
    }
  }
  else if (!state)
  {
    v7 = sub_10005318C();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = xpc_activity_copy_criteria(v3);
      v18 = 138412290;
      v19 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: XPC Activity Checkin with criteria %@", (uint8_t *)&v18, 0xCu);

    }
LABEL_21:

  }
}

void sub_10008A30C(id a1, NSError *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  if (a2)
  {
    v2 = sub_10005318C();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "XPC Activity - Error Starting SecureLocationMonitor", v4, 2u);
    }

  }
}

void sub_10008A5A0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  _QWORD v9[4];
  NSObject *v10;
  uint8_t buf[4];
  id v12;
  __int16 v13;
  uint64_t v14;

  v3 = a2;
  if (v3 || (v7 = *(void **)(a1 + 32)) == 0)
  {
    v4 = sub_10005318C();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      v12 = v3;
      v13 = 2114;
      v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Error stopping %{public}@ OR NO activeConfig %{public}@", buf, 0x16u);
    }
  }
  else
  {
    v8 = *(void **)(a1 + 40);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10008A6BC;
    v9[3] = &unk_1002C1690;
    v10 = v7;
    objc_msgSend(v8, "startLocationMonitor:", v9);
    v5 = v10;
  }

}

void sub_10008A6BC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;

  v3 = a2;
  v4 = sub_10005318C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138543618;
    v8 = v6;
    v9 = 2114;
    v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Completed Restarting Location Monitor with new config  %{public}@. Error %{public}@.", (uint8_t *)&v7, 0x16u);
  }

}

void sub_10008A780(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  v3 = sub_10005318C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138543362;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Completed Restarting Location Monitor with new config. Error %{public}@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_10008A990(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  v3 = sub_10005318C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Completed starting Location Monitor with extended config. Error %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_10008AA38(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  v3 = sub_10005318C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Published one time on extension of proactive. Error %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_10008ABCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10008ABE0(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "publishOneTimeShallowLocation:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void sub_10008B174(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  v3 = sub_10005318C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: completed ondemand publish request. Error %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_10008B21C(id a1, NSError *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  const __CFString *v5;

  v2 = sub_10005318C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 138412290;
    v5 = CFSTR("stewie:");
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: %@ requested publish", (uint8_t *)&v4, 0xCu);
  }

}

void sub_10008B300(id a1)
{
  FMDServerConfig *v1;
  void *v2;

  v1 = objc_alloc_init(FMDServerConfig);
  v2 = (void *)qword_100306860;
  qword_100306860 = (uint64_t)v1;

}

void sub_10008BAD8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  NSSet *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v15;
  uint8_t buf[4];
  const __CFString *v17;
  __int16 v18;
  void *v19;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataArchiver"));
  v4 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", objc_opt_class(FMDSecureLocationConfig, v3), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v15 = 0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "readDictionaryAndClasses:error:", v5, &v15));
  v7 = v15;

  if (v7)
  {
    v8 = sub_10005318C();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_10022B918();

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "configForPolicy:", kFMDSecureLocationModeBackgroundProactive));
    v11 = *(void **)(a1 + 32);
  }
  else
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_readConfigFromDictionary:", v6));
    v12 = sub_10005318C();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v17 = CFSTR("SecureLocationConfig");
      v18 = 2112;
      v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@ Read config from file %@", buf, 0x16u);
    }

    v11 = *(void **)(a1 + 32);
    if (!v10)
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "configForPolicy:", kFMDSecureLocationModeBackgroundProactive));
      objc_msgSend(*(id *)(a1 + 32), "setActiveConfig:", v14);

      goto LABEL_9;
    }
  }
  objc_msgSend(v11, "setActiveConfig:", v10);
LABEL_9:

}

void sub_10008BD50(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  id v5;
  NSObject *v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  const __CFString *v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_dictionaryFromConfigData:", *(_QWORD *)(a1 + 40)));
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataArchiver"));
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "saveDictionary:", v2));

    v5 = sub_10005318C();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = v6;
    if (v4)
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_10022B9F4();
    }
    else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v16 = 138412290;
      v17 = CFSTR("SecureLocationConfig");
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ Archived config data successfully", (uint8_t *)&v16, 0xCu);
    }

  }
  else
  {
    v8 = sub_10005318C();
    v4 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_10022B984(v4, v9, v10, v11, v12, v13, v14, v15);
  }

}

void sub_10008BFB8(uint64_t a1)
{
  void *v2;
  void *v3;
  dispatch_queue_global_t global_queue;
  NSObject *v5;
  id v6;
  NSObject *v7;
  void *v8;
  _QWORD block[5];
  uint8_t buf[4];
  const __CFString *v11;
  __int16 v12;
  void *v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_parseConfigFile:", *(_QWORD *)(a1 + 40)));
  if (v2)
  {
    objc_msgSend(*(id *)(a1 + 32), "setActiveConfig:", v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));

    if (v3)
    {
      global_queue = dispatch_get_global_queue(0, 0);
      v5 = objc_claimAutoreleasedReturnValue(global_queue);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10008C124;
      block[3] = &unk_1002C1328;
      block[4] = *(_QWORD *)(a1 + 32);
      dispatch_async(v5, block);

    }
    objc_msgSend(*(id *)(a1 + 32), "_archiveConfigFile:", *(_QWORD *)(a1 + 40));
    v6 = sub_10005318C();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeConfig"));
      *(_DWORD *)buf = 138412546;
      v11 = CFSTR("SecureLocationConfig");
      v12 = 2112;
      v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ Setting active config as %@", buf, 0x16u);

    }
  }

}

void sub_10008C124(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeConfig"));
  objc_msgSend(v3, "activeConfigChanged:", v2);

}

void sub_10008CB58(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10008CB6C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mode"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "configForPolicy:", v2));

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v3, "expirationInterval");
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "dateByAddingTimeInterval:"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "policyExpirationTimes"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mode"));
  objc_msgSend(v6, "setObject:forKey:", v5, v7);

  objc_msgSend(WeakRetained, "_addContext:withExpiration:", *(_QWORD *)(a1 + 32), v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mode"));
  objc_msgSend(WeakRetained, "_policyRequested:", v8);

}

void sub_10008D1D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10008D1E8(id *a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  const char *v16;
  NSObject *v17;
  uint32_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  unsigned int v31;
  void *v32;
  void *v33;
  void *v34;
  _BYTE v35[24];
  void *v36;

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeConfig"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "policyName"));

  if (objc_msgSend(a1[4], "stopMonitoringActivePolicy"))
  {
    v5 = sub_10005318C();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = v6;
    if (v4)
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v35 = 138412546;
        *(_QWORD *)&v35[4] = CFSTR("SecureLocationConfig");
        *(_WORD *)&v35[12] = 2114;
        *(_QWORD *)&v35[14] = v4;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ Removing active policy: %{public}@", v35, 0x16u);
      }

      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activePolicies"));
      objc_msgSend(v8, "removeObjectForKey:", v4);

      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "policyExpirationTimes"));
      objc_msgSend(v9, "removeObjectForKey:", v4);

      objc_msgSend(WeakRetained, "policyExpired:", v4);
    }
    else
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_10022BB3C(v7, v19, v20, v21, v22, v23, v24, v25);

      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
      v27 = v26;
      if (v26)
        objc_msgSend(v26, "activeConfigChanged:", 0);

    }
    goto LABEL_24;
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "_removeContext:", a1[4]));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "policyExpirationTimes"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "mode"));
  if (v10)
  {
    objc_msgSend(v11, "setObject:forKey:", v10, v12);

    v13 = sub_10005318C();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      goto LABEL_17;
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "mode"));
    *(_DWORD *)v35 = 138412802;
    *(_QWORD *)&v35[4] = CFSTR("SecureLocationConfig");
    *(_WORD *)&v35[12] = 2114;
    *(_QWORD *)&v35[14] = v15;
    *(_WORD *)&v35[22] = 2114;
    v36 = v10;
    v16 = "%@ Updated expirationTime for %{public}@ to %{public}@";
    v17 = v14;
    v18 = 32;
  }
  else
  {
    objc_msgSend(v11, "removeObjectForKey:", v12);

    v28 = sub_10005318C();
    v14 = objc_claimAutoreleasedReturnValue(v28);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      goto LABEL_17;
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "mode"));
    *(_DWORD *)v35 = 138412546;
    *(_QWORD *)&v35[4] = CFSTR("SecureLocationConfig");
    *(_WORD *)&v35[12] = 2114;
    *(_QWORD *)&v35[14] = v15;
    v16 = "%@ No more subs left for %{public}@";
    v17 = v14;
    v18 = 22;
  }
  _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, v16, v35, v18);

LABEL_17:
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeConfig"));

  if (v29)
  {
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "mode"));
    v31 = objc_msgSend(v30, "isEqualToString:", v4);

    if (v31)
    {
      v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
      v33 = v32;
      if (!v10 || objc_msgSend(v32, "compare:", v10) == (id)1)
      {
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "mode", *(_OWORD *)v35, *(_QWORD *)&v35[16], v36));
        objc_msgSend(WeakRetained, "policyExpired:", v34);

      }
    }
  }

LABEL_24:
}

int64_t sub_10008D7F4(id a1, id a2, id a3)
{
  return (int64_t)objc_msgSend(a2, "compare:", a3);
}

void sub_10008D91C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10008D930(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *i;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  NSObject *v30;
  void *v31;
  void *v32;
  void *v33;
  id obj;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint8_t v39[128];
  uint8_t buf[4];
  const __CFString *v41;
  __int16 v42;
  void *v43;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (*(_QWORD *)(a1 + 32))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "policyExpirationTimes"));
    objc_msgSend(v4, "removeObjectForKey:", *(_QWORD *)(a1 + 32));

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "activeConfig"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "policyName"));
  LODWORD(v7) = objc_msgSend(v6, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if ((_DWORD)v7)
  {
    v8 = sub_10005318C();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v41 = CFSTR("SecureLocationConfig");
      v42 = 2114;
      v43 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@ Active config expired: %{public}@", buf, 0x16u);
    }

    objc_msgSend(v3, "setActiveConfig:", 0);
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v12 = sub_10005318C();
  v13 = objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "policyExpirationTimes"));
    *(_DWORD *)buf = 138412546;
    v41 = CFSTR("SecureLocationConfig");
    v42 = 2114;
    v43 = v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@ policyExpirationTimes %{public}@", buf, 0x16u);

  }
  v33 = v3;

  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "policyExpirationTimes"));
  v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
  if (v15)
  {
    v16 = v15;
    v17 = 0;
    v18 = *(_QWORD *)v36;
    do
    {
      for (i = 0; i != v16; i = (char *)i + 1)
      {
        if (*(_QWORD *)v36 != v18)
          objc_enumerationMutation(obj);
        v20 = *(_QWORD *)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)i);
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "policyExpirationTimes"));
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKey:", v20));

        if (objc_msgSend(v11, "compare:", v22) == (id)-1)
        {
          v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "configForPolicy:", v20));
          v24 = v23;
          if (!v17 || (v25 = objc_msgSend(v23, "priority"), (uint64_t)v25 > (uint64_t)objc_msgSend(v17, "priority")))
          {
            v26 = sub_10005318C();
            v7 = objc_claimAutoreleasedReturnValue(v26);
            if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
            {
              v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "policyName"));
              *(_DWORD *)buf = 138412546;
              v41 = CFSTR("SecureLocationConfig");
              v42 = 2114;
              v43 = v27;
              _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ Found higher priority policy %{public}@", buf, 0x16u);

            }
            v28 = v24;

            LOBYTE(v7) = 1;
            v17 = v28;
          }

        }
      }
      v16 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
    }
    while (v16);
  }
  else
  {
    v17 = 0;
  }

  if ((v7 & 1) != 0)
  {
    v29 = sub_10005318C();
    v30 = objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v41 = CFSTR("SecureLocationConfig");
      v42 = 2114;
      v43 = v17;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "%@ Changing active config to: %{public}@", buf, 0x16u);
    }

    objc_msgSend(v33, "setActiveConfig:", v17);
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "delegate"));
    if (v31)
    {
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "activeConfig"));
      objc_msgSend(v31, "activeConfigChanged:", v32);

    }
  }

}

void sub_10008DE84(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_10008DF1C(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;

  v2 = objc_alloc_init((Class)objc_opt_class(*(_QWORD *)(a1 + 32), a2));
  v3 = (void *)qword_100306878;
  qword_100306878 = (uint64_t)v2;

}

void sub_10008E0B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10008E0CC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  unsigned int v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  FMDEventLoggerEventDataPeekError *v12;
  void *v13;
  void *v14;
  FMDEventLoggerEventDataPeekError *v15;
  void *v16;
  void *v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[FMSystemInfo sharedInstance](FMSystemInfo, "sharedInstance"));
  v4 = objc_msgSend(v3, "isInternalBuild");

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "loggedEvents"));
    v6 = objc_msgSend(v5, "containsObject:", *(_QWORD *)(a1 + 32));

    if ((v6 & 1) == 0)
    {
      if (*(_QWORD *)(a1 + 40))
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "loggedEvents"));
        objc_msgSend(v7, "addObject:", *(_QWORD *)(a1 + 32));

        v8 = sub_1000031B8();
        v9 = objc_claimAutoreleasedReturnValue(v8);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          v10 = *(_QWORD *)(a1 + 32);
          v11 = *(_QWORD *)(a1 + 40);
          v18 = 138412546;
          v19 = v10;
          v20 = 2112;
          v21 = v11;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@ error occured %@", (uint8_t *)&v18, 0x16u);
        }

        v12 = -[FMDEventLoggerEventError initWithEventName:]([FMDEventLoggerEventDataPeekError alloc], "initWithEventName:", *(_QWORD *)(a1 + 32));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "userInfo"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", NSUnderlyingErrorKey));

        if (v14)
        {
          v15 = v12;
          v16 = v14;
        }
        else
        {
          v16 = *(void **)(a1 + 40);
          v15 = v12;
        }
        -[FMDEventLoggerEventDataPeekError setError:](v15, "setError:", v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLogger sharedLogger](FMDEventLogger, "sharedLogger"));
        objc_msgSend(v17, "logEvent:", v12);

      }
    }
  }

}

void sub_10008F090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10008F0F4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  id WeakRetained;
  int v7;
  void *v8;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "directoryURL"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "path"));
    v7 = 138412290;
    v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Monitored directory changed: %@", (uint8_t *)&v7, 0xCu);

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "directoryChanged");

}

void sub_10008F1D4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  id WeakRetained;
  int v11;
  void *v12;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "directoryURL"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "path"));
    v11 = 138412290;
    v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Monitored directory went away: %@", (uint8_t *)&v11, 0xCu);

  }
  v6 = sub_1000031B8();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "directoryURL"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "path"));
    v11 = 138412290;
    v12 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Monitored directory went away: %@", (uint8_t *)&v11, 0xCu);

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "cancel");

}

void sub_10009067C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location)
{
  uint64_t v15;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v15 - 184));
  _Block_object_dispose((const void *)(v15 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1000906B8(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  v3 = sub_10005311C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDCommandHandlerLocate discovery started with error %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_100090760(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  double v12;
  double v13;
  void *v14;
  _BOOL8 v16;
  void *v17;
  double v18;
  double v19;
  dispatch_time_t v20;
  id WeakRetained;
  void *v22;
  unsigned int v23;
  id v24;
  NSObject *v25;
  void *v26;
  unsigned int v27;
  void *v28;
  void *v29;
  unsigned int v30;
  id v31;
  NSObject *v32;
  id v33;
  NSObject *v34;
  uint8_t v35[8];
  _QWORD block[5];
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  double v45;
  BOOL v46;

  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastPublishedAccuracy"));

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastPublishedAccuracy"));
    objc_msgSend(v8, "doubleValue");
    v10 = v9;
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "horizontalAccuracy"));
    objc_msgSend(v11, "doubleValue");
    v13 = v10 - v12;

  }
  else
  {
    v13 = 0.0;
  }
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "horizontalAccuracy"));
  objc_msgSend(*(id *)(a1 + 32), "setLastPublishedAccuracy:", v14);

  v16 = a4 == 3 || a4 == 5;
  v17 = *(void **)(a1 + 40);
  if (v17)
  {
    objc_msgSend(v17, "timeIntervalSinceNow");
    v19 = v18 + 3.0;
    if (v19 > 0.0)
    {
      v20 = dispatch_time(0, (uint64_t)(v19 * 1000000000.0));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100090B44;
      block[3] = &unk_1002C46D8;
      block[4] = *(_QWORD *)(a1 + 32);
      v37 = v6;
      v46 = v16;
      v38 = *(id *)(a1 + 48);
      v44 = a4;
      v45 = v13;
      v39 = *(id *)(a1 + 56);
      v40 = *(id *)(a1 + 64);
      v41 = *(id *)(a1 + 72);
      v42 = *(id *)(a1 + 80);
      v43 = *(id *)(a1 + 88);
      dispatch_after(v20, (dispatch_queue_t)&_dispatch_main_q, block);

    }
  }
  objc_msgSend(*(id *)(a1 + 32), "_sendCurrentLocation:isFinished:forCmd:withReason:andAccuracyChange:", v6, v16, *(_QWORD *)(a1 + 48), a4, v13);
  if (a4 == 5 || a4 == 3)
  {
    objc_msgSend(*(id *)(a1 + 96), "recordLocation:ofType:", v6, 0);
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 120));
    objc_msgSend(WeakRetained, "stopLocator");

  }
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 112) + 8) + 24))
  {
    if (*(_QWORD *)(a1 + 104))
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[FMDLostModeManager sharedInstance](FMDLostModeManager, "sharedInstance"));
      v23 = objc_msgSend(v22, "lostModeEnabled");

      if (v23)
      {
        v24 = sub_1000031B8();
        v25 = objc_claimAutoreleasedReturnValue(v24);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v35 = 0;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Ignoring locate alert as the device is in lost mode...", v35, 2u);
        }
LABEL_31:

        goto LABEL_32;
      }
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[FMDSystemConfig sharedInstance](FMDSystemConfig, "sharedInstance"));
      v27 = objc_msgSend(v26, "isPasscodeSet");

      if (v27)
      {
        v28 = (void *)objc_claimAutoreleasedReturnValue(+[FMDSystemConfig sharedInstance](FMDSystemConfig, "sharedInstance"));
        if (objc_msgSend(v28, "isLocked"))
        {

        }
        else
        {
          v29 = (void *)objc_claimAutoreleasedReturnValue(+[FMDSystemConfig sharedInstance](FMDSystemConfig, "sharedInstance"));
          v30 = objc_msgSend(v29, "isLocking");

          if (!v30)
          {
            v33 = sub_1000031B8();
            v34 = objc_claimAutoreleasedReturnValue(v33);
            if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)v35 = 0;
              _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "Displaying locate alert...", v35, 2u);
            }

            v25 = objc_claimAutoreleasedReturnValue(+[FMAlertManager sharedInstance](FMAlertManager, "sharedInstance"));
            -[NSObject activateAlert:](v25, "activateAlert:", *(_QWORD *)(a1 + 104));
            goto LABEL_31;
          }
        }
        v31 = sub_1000031B8();
        v32 = objc_claimAutoreleasedReturnValue(v31);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v35 = 0;
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "Device is locked. Enqueing the alert to be shown after unlock", v35, 2u);
        }

        objc_msgSend(*(id *)(a1 + 32), "_showAlertAfterUnlock:", *(_QWORD *)(a1 + 104));
      }
    }
LABEL_32:
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 112) + 8) + 24) = 1;
  }

}

void sub_100090B44(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "_sendCurrentLocation:isFinished:forCmd:withReason:andAccuracyChange:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 112), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 96), *(double *)(a1 + 104));
  if (objc_msgSend(*(id *)(a1 + 56), "category") == (id)3)
  {
    v3 = *(void **)(a1 + 64);
    v2 = *(void **)(a1 + 72);
    v4 = *(_QWORD *)(a1 + 80);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100090BFC;
    v5[3] = &unk_1002C1690;
    v6 = v2;
    objc_msgSend(v3, "stopDiscoveryForAccessory:info:withCompletion:", v6, v4, v5);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 88), "stopDiscovery");
  }
}

void sub_100090BFC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;

  v3 = a2;
  v4 = sub_1000530AC();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412546;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "discovery for %@ ended with error %@", (uint8_t *)&v7, 0x16u);
  }

}

id sub_100090CC0(uint64_t a1)
{
  id *v2;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  double v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[4];
  id v13;

  v2 = (id *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardLocator"));

  if (v3)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      sub_10022BD1C(v2, v5);

    objc_msgSend(*v2, "setStandardLocator:", 0);
  }
  v6 = *(void **)(a1 + 40);
  if (v6)
  {
    objc_msgSend(v6, "timeIntervalSinceNow");
    if (v7 < -3.0)
    {
      if (objc_msgSend(*(id *)(a1 + 48), "category") == (id)3)
      {
        v9 = *(void **)(a1 + 56);
        v8 = *(void **)(a1 + 64);
        v10 = *(_QWORD *)(a1 + 72);
        v12[0] = _NSConcreteStackBlock;
        v12[1] = 3221225472;
        v12[2] = sub_100090DD4;
        v12[3] = &unk_1002C1690;
        v13 = v8;
        objc_msgSend(v9, "stopDiscoveryForAccessory:info:withCompletion:", v13, v10, v12);

      }
      else
      {
        objc_msgSend(*(id *)(a1 + 80), "stopDiscovery");
      }
    }
  }
  return objc_msgSend(*(id *)(a1 + 88), "flushLocations");
}

void sub_100090DD4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;

  v3 = a2;
  v4 = sub_1000530AC();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412546;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "discovery for %@ ended with error %@", (uint8_t *)&v7, 0x16u);
  }

}

id sub_10009115C(uint64_t a1)
{
  FMDActingRequestDecorator *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = objc_alloc_init(FMDActingRequestDecorator);
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v2, "standardDeviceContext"));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "commandParams"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("id")));
  objc_msgSend(v3, "fm_safelyMapKey:toObject:", CFSTR("cmdId"), v5);

  return v3;
}

id sub_1000911F0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryIdentifier"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoryRegistry"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryIdentifier"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "accessoryForIdentifier:", v4));

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "account"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "locationDeviceInfoForAccount:accessory:", v7, v5));

  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "account"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "deviceInfoForAccount:", v6));
  }

  return v8;
}

void sub_1000912F0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  uint32_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v16 = *(_QWORD *)(a1 + 32);
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v16, 1);
      v17 = sub_1000031B8();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v18 = 138412546;
      v19 = v10;
      v20 = 2048;
      v21 = objc_msgSend(v3, "httpResponseStatus");
      v11 = "%@: successful with status %ld";
      v12 = v8;
      v13 = 22;
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v18 = 138412290;
        v19 = v10;
        v11 = "%@: Cancelled";
        v12 = v8;
        v13 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v18, v13);
LABEL_14:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v14 = objc_msgSend(v3, "httpResponseStatus");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v18 = 138412802;
      v19 = v10;
      v20 = 2048;
      v21 = v14;
      v22 = 2112;
      v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v18, 0x20u);

      goto LABEL_14;
    }
LABEL_15:

  }
}

id sub_100091880(uint64_t a1)
{
  FMDActingRequestDecorator *v2;
  void *v3;

  v2 = objc_alloc_init(FMDActingRequestDecorator);
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v2, "standardDeviceContext"));

  objc_msgSend(v3, "fm_safelyMapKey:toObject:", CFSTR("cmdId"), *(_QWORD *)(a1 + 32));
  return v3;
}

id sub_1000918E0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "locationDeviceInfoForAccount:", v3));

  return v4;
}

void sub_100091948(id a1, FMDRequest *a2)
{
  FMDRequest *v2;
  void *v3;
  unsigned int v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  void *v8;
  const char *v9;
  NSObject *v10;
  uint32_t v11;
  int64_t v12;
  void *v13;
  id v14;
  int v15;
  void *v16;
  __int16 v17;
  int64_t v18;
  __int16 v19;
  void *v20;

  v2 = a2;
  if (!-[FMDRequest willRetry](v2, "willRetry"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
    if (v3
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") < 200
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") > 399)
    {

    }
    else if (!-[FMDRequest cancelled](v2, "cancelled"))
    {
      v14 = sub_1000031B8();
      v6 = objc_claimAutoreleasedReturnValue(v14);
      if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        goto LABEL_13;
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      v15 = 138412546;
      v16 = v8;
      v17 = 2048;
      v18 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      v9 = "%@: successful with status %ld";
      v10 = v6;
      v11 = 22;
      goto LABEL_9;
    }
    v4 = -[FMDRequest cancelled](v2, "cancelled");
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v7)
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
        v15 = 138412290;
        v16 = v8;
        v9 = "%@: Cancelled";
        v10 = v6;
        v11 = 12;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v15, v11);
LABEL_12:

      }
    }
    else if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      v12 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      v13 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
      v15 = 138412802;
      v16 = v8;
      v17 = 2048;
      v18 = v12;
      v19 = 2112;
      v20 = v13;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v15, 0x20u);

      goto LABEL_12;
    }
LABEL_13:

  }
}

id sub_100092120(uint64_t a1)
{
  FMDActingRequestDecorator *v2;
  void *v3;

  v2 = objc_alloc_init(FMDActingRequestDecorator);
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v2, "standardDeviceContext"));

  objc_msgSend(v3, "fm_safelyMapKey:toObject:", CFSTR("cmdId"), *(_QWORD *)(a1 + 32));
  return v3;
}

id sub_100092180(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryRegistry"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoryIdentifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "accessoryForIdentifier:", v3));

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "locationDeviceInfoForAccount:accessory:", v6, v4));

  return v7;
}

void sub_10009222C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  NSObject *v7;
  FMDRequestCurrentLocation *v8;
  void *v9;
  uint64_t v10;
  double v11;
  FMDRequestCurrentLocation *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t CTGreenTeaOsLogHandle;
  NSObject *v17;
  NSObject *v18;
  int v19;
  id v20;

  v5 = a2;
  if (v5)
  {
    v6 = sub_1000031B8();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v19 = 138412290;
      v20 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CommandHandlerLocate got an accessory location %@", (uint8_t *)&v19, 0xCu);
    }

    v8 = [FMDRequestCurrentLocation alloc];
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
    v10 = *(_QWORD *)(a1 + 64);
    objc_msgSend(*(id *)(a1 + 40), "doubleValue");
    v12 = -[FMDRequestCurrentLocation initWithAccount:location:finalLocation:reason:accuracyChange:cacheValidityDuration:](v8, "initWithAccount:location:finalLocation:reason:accuracyChange:cacheValidityDuration:", v9, v5, a3, v10, 0.0, v11);

    -[FMDRequest setDecorator:](v12, "setDecorator:", *(_QWORD *)(a1 + 48));
    -[FMDRequest setCompletionHandler:](v12, "setCompletionHandler:", &stru_1002C4768);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryRegistry"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "accessoryForIdentifier:", *(_QWORD *)(a1 + 56)));

    v15 = ct_green_tea_logger_create_static("findmydeviced");
    CTGreenTeaOsLogHandle = getCTGreenTeaOsLogHandle(v15);
    v17 = objc_claimAutoreleasedReturnValue(CTGreenTeaOsLogHandle);
    v18 = v17;
    if (v17 && os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      LOWORD(v19) = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Transmitting Location.", (uint8_t *)&v19, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "enqueueRequest:forAccessory:", v12, v14);
  }

}

void sub_1000923F4(id a1, FMDRequest *a2)
{
  FMDRequest *v2;
  void *v3;
  unsigned int v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  void *v8;
  const char *v9;
  NSObject *v10;
  uint32_t v11;
  int64_t v12;
  void *v13;
  id v14;
  int v15;
  void *v16;
  __int16 v17;
  int64_t v18;
  __int16 v19;
  void *v20;

  v2 = a2;
  if (!-[FMDRequest willRetry](v2, "willRetry"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
    if (v3
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") < 200
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") > 399)
    {

    }
    else if (!-[FMDRequest cancelled](v2, "cancelled"))
    {
      v14 = sub_1000031B8();
      v6 = objc_claimAutoreleasedReturnValue(v14);
      if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        goto LABEL_13;
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      v15 = 138412546;
      v16 = v8;
      v17 = 2048;
      v18 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      v9 = "%@: successful with status %ld";
      v10 = v6;
      v11 = 22;
      goto LABEL_9;
    }
    v4 = -[FMDRequest cancelled](v2, "cancelled");
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v7)
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
        v15 = 138412290;
        v16 = v8;
        v9 = "%@: Cancelled";
        v10 = v6;
        v11 = 12;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v15, v11);
LABEL_12:

      }
    }
    else if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      v12 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      v13 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
      v15 = 138412802;
      v16 = v8;
      v17 = 2048;
      v18 = v12;
      v19 = 2112;
      v20 = v13;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v15, 0x20u);

      goto LABEL_12;
    }
LABEL_13:

  }
}

id sub_100092610(uint64_t a1)
{
  FMDActingRequestDecorator *v2;
  void *v3;

  v2 = objc_alloc_init(FMDActingRequestDecorator);
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v2, "standardDeviceContext"));

  objc_msgSend(v3, "fm_safelyMapKey:toObject:", CFSTR("cmdId"), *(_QWORD *)(a1 + 32));
  return v3;
}

id sub_100092670(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "locationDeviceInfoForAccount:", v3));

  return v4;
}

void sub_100092764(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v7;
  NSObject *v8;
  int v9;
  id v10;

  v3 = a2;
  v4 = v3;
  if (v3 && objc_msgSend(v3, "count"))
  {
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v9 = 134217984;
      v10 = objc_msgSend(v4, "count");
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Sending %ld tracked locations", (uint8_t *)&v9, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "sendTrackedLocations:withCurrentLocation:", v4, 0);
  }
  else
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "No tracked locations available. Not sending anything", (uint8_t *)&v9, 2u);
    }

  }
}

void sub_100092FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100092FE8(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void (**v19)(_QWORD, _QWORD, _QWORD);
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void (**v29)(_QWORD, _QWORD, _QWORD);
  int v30;
  id v31;
  __int16 v32;
  id v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  void *v37;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = sub_1000530AC();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = objc_msgSend(v3, "httpResponseStatus");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseHeaders"));
    v30 = 138413058;
    v31 = v3;
    v32 = 2048;
    v33 = v7;
    v34 = 2112;
    v35 = v8;
    v36 = 2112;
    v37 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v30, 0x2Au);

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v10
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
  {

  }
  else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
  {
    v19 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v20 = objc_alloc_init((Class)FMDPairingCheckCommandResponseInfo);
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("phoneNumber")));
    objc_msgSend(v20, "setPhoneNumber:", v22);

    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("statusCode")));
    objc_msgSend(v20, "setStatusCode:", v23);

    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("signature")));
    objc_msgSend(v20, "setSignature:", v24);

    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("servernonce")));
    objc_msgSend(v20, "setServerNonce:", v25);

    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("lostInfo")));
    objc_msgSend(v20, "setLostModeInfo:", v26);

    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("useEraseKeyType")));
    objc_msgSend(v20, "setUseEraseKeyType:", v27);

    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
    if (v28)
    {
      v29 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
      ((void (**)(_QWORD, _QWORD, id))v29)[2](v29, 0, v20);

    }
    goto LABEL_15;
  }
  v11 = objc_msgSend(v3, "cancelled");
  v12 = sub_1000530AC();
  v13 = objc_claimAutoreleasedReturnValue(v12);
  v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
  if (v11)
  {
    if (v14)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v30 = 138412290;
      v31 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v30, 0xCu);
LABEL_12:

    }
  }
  else if (v14)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
    v16 = objc_msgSend(v3, "httpResponseStatus");
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    v30 = 138412802;
    v31 = v15;
    v32 = 2048;
    v33 = v16;
    v34 = 2112;
    v35 = v17;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v30, 0x20u);

    goto LABEL_12;
  }

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
  if (!v18)
    goto LABEL_16;
  v19 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
  v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  ((void (**)(_QWORD, id, _QWORD))v19)[2](v19, v20, 0);
LABEL_15:

LABEL_16:
  v21 = *(_QWORD *)(a1 + 32);
  if (v21)
    (*(void (**)(void))(v21 + 16))();

}

void sub_100093700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100093718(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "underlyingDictionary"));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v2, "count");

}

void sub_100093850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100093868(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100093878(uint64_t a1)
{

}

void sub_100093880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "underlyingDictionary"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100093998(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "underlyingDictionary"));
  objc_msgSend(v2, "setObject:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_100093A74(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "underlyingDictionary"));
  objc_msgSend(v2, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

}

void sub_100093B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100093B94(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "underlyingDictionary"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100093DF4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100093E18(uint64_t a1)
{
  id WeakRetained;
  unsigned __int8 v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  int v14;
  id v15;
  __int16 v16;
  void *v17;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = objc_msgSend(WeakRetained, "replacedExsitingAction:", *(_QWORD *)(a1 + 32));
  v4 = sub_100052F5C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if ((v3 & 1) != 0)
  {
    if (v6)
    {
      v7 = *(void **)(a1 + 32);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "requests"));
      v14 = 138412546;
      v15 = v7;
      v16 = 2112;
      v17 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Replacing existing action: %@ already in queue: %@", (uint8_t *)&v14, 0x16u);

    }
  }
  else
  {
    if (v6)
    {
      v9 = *(void **)(a1 + 32);
      v14 = 138412290;
      v15 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Executing block add request: %@", (uint8_t *)&v14, 0xCu);
    }

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "requests"));
    objc_msgSend(v10, "addObject:", *(_QWORD *)(a1 + 32));

    v11 = sub_100052F5C();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "requests"));
      v14 = 138412546;
      v15 = WeakRetained;
      v16 = 2112;
      v17 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@ requests in queue - %@", (uint8_t *)&v14, 0x16u);

    }
    objc_msgSend(WeakRetained, "processRequests");
  }

}

void sub_100094138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100094168(uint64_t a1)
{
  id WeakRetained;
  unsigned int v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  int v11;
  id v12;
  __int16 v13;
  void *v14;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = objc_msgSend(WeakRetained, "isPaused");
  v4 = sub_100052F5C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      v11 = 138412290;
      v12 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@ could not cancel request queue paused", (uint8_t *)&v11, 0xCu);
    }
  }
  else
  {
    if (v6)
    {
      v7 = *(void **)(a1 + 32);
      v11 = 138412546;
      v12 = WeakRetained;
      v13 = 2112;
      v14 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@ executing block for action to be removed - %@", (uint8_t *)&v11, 0x16u);
    }

    objc_msgSend(*(id *)(a1 + 32), "willCancelAction");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "requests"));
    objc_msgSend(v8, "removeObject:", *(_QWORD *)(a1 + 32));

    v9 = sub_100052F5C();
    v5 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "requests"));
      v11 = 138412546;
      v12 = WeakRetained;
      v13 = 2112;
      v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@ requests remaining - %@", (uint8_t *)&v11, 0x16u);

    }
  }

}

void sub_1000946E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100094708(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;
  NSObject *v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  uint8_t buf[4];
  id v9;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = sub_100052F5C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v9 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Action with action manager called completion - %@", buf, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "requestsOperationQueue"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100094844;
  v6[3] = &unk_1002C1378;
  objc_copyWeak(&v7, v1);
  objc_msgSend(v5, "addOperationWithBlock:", v6);

  objc_destroyWeak(&v7);
}

void sub_100094828(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100094844(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setQueueCount:", (char *)objc_msgSend(WeakRetained, "queueCount") - 1);
  objc_msgSend(WeakRetained, "processRequests");

}

void sub_100094AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100094AEC(_QWORD *a1, void *a2, uint64_t a3, _BYTE *a4)
{
  char v7;
  void *v8;
  unsigned int v9;
  id v10;

  v10 = a2;
  v7 = objc_opt_respondsToSelector(v10, "shouldCancelAction:");
  v8 = v10;
  if ((v7 & 1) != 0)
  {
    v9 = objc_msgSend(v10, "shouldCancelAction:", a1[4]);
    v8 = v10;
    if (v9)
    {
      *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) = a3;
      *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
      if ((objc_opt_respondsToSelector(v10, "willCancelAction") & 1) != 0)
        objc_msgSend(v10, "willCancelAction");
      *a4 = 1;
      v8 = v10;
    }
  }

}

void sub_100094E84(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_100094EC0(uint64_t a1, void *a2)
{
  id WeakRetained;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "didDiscoverDevice"));
  v5 = (void *)v4;
  if (v4)
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v6);

}

void sub_100094F24(uint64_t a1, void *a2)
{
  id WeakRetained;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "didLoseDevice"));
  v5 = (void *)v4;
  if (v4)
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v6);

}

void sub_100094F88(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "didEndDiscoveryWithError:", v3);

}

void sub_1000951D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000951F4(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  void *v5;
  void (**v6)(void);
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeTokens"));
  v3 = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 32));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeTokens"));
  objc_msgSend(v4, "removeObject:", *(_QWORD *)(a1 + 32));

  if (v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tokenDiscoveryEnded"));

    if (v5)
    {
      v6 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tokenDiscoveryEnded"));
      v6[2]();

    }
  }
  objc_msgSend(WeakRetained, "updateDisccovery");

}

void sub_1000953F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009540C(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeTokens"));
  objc_msgSend(v2, "fm_safeAddObject:", *(_QWORD *)(a1 + 32));

  objc_msgSend(WeakRetained, "updateDisccovery");
}

void sub_10009559C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000955C0(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeTokens"));
  v2 = objc_msgSend(v1, "copy");

  objc_msgSend(v2, "enumerateObjectsUsingBlock:", &stru_1002C4820);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeTokens"));
  objc_msgSend(v3, "removeAllObjects");

}

void sub_100095634(id a1, FMDBluetoothDiscoveryToken *a2, unint64_t a3, BOOL *a4)
{
  void *v4;
  void (**v5)(void);
  FMDBluetoothDiscoveryToken *v6;

  v6 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[FMDBluetoothDiscoveryToken tokenDiscoveryEnded](v6, "tokenDiscoveryEnded"));

  if (v4)
  {
    v5 = (void (**)(void))objc_claimAutoreleasedReturnValue(-[FMDBluetoothDiscoveryToken tokenDiscoveryEnded](v6, "tokenDiscoveryEnded"));
    v5[2]();

  }
}

void sub_1000957C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000957F0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "scanningTimerFired");

}

void sub_1000958E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000958F8(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  int v7;
  void *v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeTokens"));
  v3 = objc_msgSend(v2, "count");

  if (v3)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeTokens"));
      v7 = 138412290;
      v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FMDBluetoothDiscovery unterminated tokens %@.", (uint8_t *)&v7, 0xCu);

    }
  }
  objc_msgSend(WeakRetained, "updateDisccovery");

}

int64_t sub_100095D64(id a1, FMDBluetoothDiscoveryToken *a2, FMDBluetoothDiscoveryToken *a3)
{
  FMDBluetoothDiscoveryToken *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[FMDBluetoothDiscoveryToken endDate](a2, "endDate"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[FMDBluetoothDiscoveryToken endDate](v4, "endDate"));

  v7 = objc_msgSend(v5, "compare:", v6);
  return (int64_t)v7;
}

void sub_100096A9C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  dispatch_queue_global_t global_queue;
  NSObject *v16;
  _QWORD block[4];
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(*(id *)(a1 + 32), "setNotifyWhenDetachedAccessoryIds:", v2);

  objc_msgSend(*(id *)(a1 + 32), "setNotifWhenDetachedListVersion:", *(_QWORD *)(a1 + 48));
  v3 = objc_alloc_init((Class)NSMutableDictionary);
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v4 = *(id *)(a1 + 40);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v20;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v20 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "notificationIdbyAccessoryIds"));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v9));

        if (v11)
        {
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "notificationIdbyAccessoryIds"));
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", v9));
          objc_msgSend(v3, "setObject:forKeyedSubscript:", v13, v9);

        }
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v6);
  }

  objc_msgSend(*(id *)(a1 + 32), "setNotificationIdbyAccessoryIds:", v3);
  v14 = objc_msgSend(*(id *)(a1 + 32), "_writeToDisk");
  global_queue = dispatch_get_global_queue(0, 0);
  v16 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100096CC0;
  block[3] = &unk_1002C2060;
  v18 = *(id *)(a1 + 56);
  dispatch_async(v16, block);

}

uint64_t sub_100096CC0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

void sub_1000971E8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  int v6;
  id v7;

  v3 = a2;
  v4 = sub_1000031B8();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138412290;
    v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "got new location %@", (uint8_t *)&v6, 0xCu);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100097584(uint64_t a1, void *a2)
{
  id v3;
  FMDUserNotificationContent *v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  NSObject *v14;
  double v15;
  id v16;
  NSObject *v17;
  dispatch_time_t v18;
  dispatch_queue_global_t global_queue;
  NSObject *v20;
  void *v21;
  id v22;
  FMDUserNotificationContent *v23;
  _QWORD block[5];
  id v25;
  id v26;
  id v27;
  FMDUserNotificationContent *v28;
  id v29;
  id v30;
  uint8_t buf[4];
  double v32;

  v3 = a2;
  v4 = objc_alloc_init(FMDUserNotificationContent);
  objc_msgSend(*(id *)(a1 + 32), "timeIntervalSinceNow");
  v6 = v5;
  v7 = 0.0;
  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 40), "accessoryType") & 1) != 0)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "performSelector:", "accessoryType"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[FMDExtConfigurationRegistry sharedInstance](FMDExtConfigurationRegistry, "sharedInstance"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "configForAccessoryType:", v8));

    objc_msgSend(v10, "detachNotificaitonsWaitTime");
    v7 = v11;

  }
  v12 = fabs(v6);
  v13 = sub_1000031B8();
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v32 = v7;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: waitTime %f", buf, 0xCu);
  }

  if (v7 - v12 >= 0.0)
    v15 = v7 - v12;
  else
    v15 = 0.0;
  v16 = sub_1000031B8();
  v17 = objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v32 = v15;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: remainingWaitTime %f", buf, 0xCu);
  }

  v18 = dispatch_time(0, (uint64_t)(v15 * 1000000000.0));
  global_queue = dispatch_get_global_queue(0, 0);
  v20 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10009781C;
  block[3] = &unk_1002C4910;
  v21 = *(void **)(a1 + 56);
  block[4] = *(_QWORD *)(a1 + 48);
  v25 = v21;
  v26 = *(id *)(a1 + 64);
  v27 = *(id *)(a1 + 40);
  v28 = v4;
  v29 = v3;
  v30 = *(id *)(a1 + 72);
  v22 = v3;
  v23 = v4;
  dispatch_after(v18, v20, block);

}

void sub_10009781C(id *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  unsigned int v20;
  void *v21;
  void *v22;
  void *v23;
  double v24;
  double v25;
  void *v26;
  void *v27;
  double v28;
  unsigned int v29;
  id v30;
  NSObject *v31;
  int v32;
  __CFString *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  _QWORD v42[5];
  id v43;
  id v44;
  id v45;
  uint8_t buf[4];
  id v47;
  __int16 v48;
  unsigned int v49;
  __int16 v50;
  unsigned int v51;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "notificationIdbyAccessoryIds"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", a1[5]));

  if (v3 && objc_msgSend(a1[6], "isEqualToString:", v3))
  {
    v4 = objc_msgSend(a1[7], "connectionState");
    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v4 == (id)1)
    {
      if (v7)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: Accessory is connected not posting notificaiton", buf, 2u);
      }

      v8 = objc_alloc((Class)NSMutableDictionary);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "notificationIdbyAccessoryIds"));
      v10 = objc_msgSend(v8, "initWithDictionary:", v9);

      objc_msgSend(v10, "setObject:forKeyedSubscript:", 0, a1[5]);
      objc_msgSend(a1[4], "setNotificationIdbyAccessoryIds:", v10);

    }
    else
    {
      if (v7)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: postingNotification", buf, 2u);
      }

      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("MAGSAFE_WALLET_DETACH_NOTIFICATION_TITLE"), "fmd_localizedStringInTable:", CFSTR("Localizable-MULDER")));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "name"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v11, v12));
      objc_msgSend(a1[8], "setTitle:", v13);

      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("MAGSAFE_WALLET_DETACH_NOTIFICATION_MESSAGE_DEFAULT"), "fmd_localizedStringInTable:", CFSTR("Localizable-MULDER")));
      objc_msgSend(a1[8], "setBody:", v14);

      objc_msgSend(a1[8], "setCategoryIdentifier:", CFSTR("FMD_NOTIFY_WHEN_DETACHED"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "deviceInfo"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectForKeyedSubscript:", CFSTR("serialNumbers")));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("systemSerialNumber")));
      objc_msgSend(a1[8], "setSerialNumber:", v17);

      objc_msgSend(a1[8], "setDeviceId:", a1[5]);
      objc_msgSend(a1[8], "setIdentifier:", v3);
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[8], "title"));
      objc_msgSend(a1[8], "setLocationTitle:", v18);

      objc_msgSend(a1[8], "setInterruptionLevel:", 2);
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[FMDRestrictedRegions sharedInstance](FMDRestrictedRegions, "sharedInstance"));
      v20 = objc_msgSend(v19, "isRestrictedSKU");

      v21 = (void *)objc_claimAutoreleasedReturnValue(+[FMDRestrictedRegions sharedInstance](FMDRestrictedRegions, "sharedInstance"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[9], "location"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "latitude"));
      objc_msgSend(v23, "doubleValue");
      v25 = v24;
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[9], "location"));
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "longitude"));
      objc_msgSend(v27, "doubleValue");
      v29 = objc_msgSend(v21, "isRestrictedLocationWithLatitude:longitude:", v25, v28);

      v30 = sub_1000031B8();
      v31 = objc_claimAutoreleasedReturnValue(v30);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEBUG))
      {
        v41 = a1[9];
        *(_DWORD *)buf = 138412802;
        v47 = v41;
        v48 = 1024;
        v49 = v20;
        v50 = 1024;
        v51 = v29;
        _os_log_debug_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "location = %@ isRestrictRegion = %d isRestrictedLocation = %d", buf, 0x18u);
      }

      if (a1[9])
        v32 = v20;
      else
        v32 = 1;
      if (v32 | v29)
        v33 = CFSTR("MAGSAFE_WALLET_DETACH_NOTIFICATION_MESSAGE_DEFAULT");
      else
        v33 = CFSTR("MAGSAFE_WALLET_DETACH_NOTIFICATION_MESSAGE");
      v34 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString fmd_localizedStringInTable:](v33, "fmd_localizedStringInTable:", CFSTR("Localizable-MULDER")));
      objc_msgSend(a1[8], "setLocationMessage:", v34);

      v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[9], "location"));
      v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "latitude"));
      objc_msgSend(v36, "doubleValue");
      objc_msgSend(a1[8], "setLatitude:");

      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[9], "location"));
      v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "longitude"));
      objc_msgSend(v38, "doubleValue");
      objc_msgSend(a1[8], "setLongitude:");

      v39 = (void *)objc_claimAutoreleasedReturnValue(+[FMDFMIPManager sharedInstance](FMDFMIPManager, "sharedInstance"));
      v40 = a1[8];
      v42[0] = _NSConcreteStackBlock;
      v42[1] = 3221225472;
      v42[2] = sub_100097D30;
      v42[3] = &unk_1002C48E8;
      v42[4] = a1[4];
      v43 = a1[10];
      v44 = a1[5];
      v45 = a1[8];
      objc_msgSend(v39, "addNotificationRequest:completion:", v40, v42);

    }
  }

}

void sub_100097D30(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  if (!a2)
  {
    v3 = objc_alloc((Class)NSMutableDictionary);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "notificationIdbyAccessoryIds"));
    v6 = objc_msgSend(v3, "initWithDictionary:", v4);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "identifier"));
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v5, *(_QWORD *)(a1 + 48));

    objc_msgSend(*(id *)(a1 + 32), "setNotificationIdbyAccessoryIds:", v6);
  }
}

void sub_100097F60(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: removing notificaiton completed with %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_100098B54(id a1)
{
  FMDPowerMgr *v1;
  void *v2;

  v1 = objc_alloc_init(FMDPowerMgr);
  v2 = (void *)qword_100306880;
  qword_100306880 = (uint64_t)v1;

}

void sub_100098FE8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 buf)
{
  id v15;
  id v16;
  NSObject *v17;

  if (a2 == 1)
  {
    v15 = objc_begin_catch(a1);
    v16 = sub_1000031B8();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v15;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Exception caught while attempting to take power assertion: %@", (uint8_t *)&buf, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x100098F44);
  }
  _Unwind_Resume(a1);
}

void sub_1000991F4(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 buf)
{
  id v11;
  id v12;
  NSObject *v13;

  if (a2 == 1)
  {
    v11 = objc_begin_catch(a1);
    v12 = sub_1000031B8();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v11;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Exception caught while attempting to release power assertion: %@", (uint8_t *)&buf, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1000991B8);
  }
  _Unwind_Resume(a1);
}

void sub_100099458(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x12u);
}

void sub_100099BEC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  _QWORD block[5];
  uint8_t buf[4];
  void *v12;
  __int16 v13;
  id v14;

  v3 = a2;
  if (objc_msgSend(v3, "responseErrorType") == (id)257)
    goto LABEL_11;
  if ((objc_msgSend(v3, "willRetry") & 1) != 0)
    goto LABEL_12;
  if (objc_msgSend(v3, "cmdStatusCode") != (id)200)
  {
LABEL_11:
    objc_msgSend(*(id *)(a1 + 32), "_abortWipe");
    goto LABEL_12;
  }
  v4 = objc_msgSend(v3, "httpResponseStatus");
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  if (v4 != (id)200)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      *(_DWORD *)buf = 138412546;
      v12 = v9;
      v13 = 2048;
      v14 = v4;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error with status %ld. Aborting wipe...", buf, 0x16u);

    }
    goto LABEL_11;
  }
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    sub_10022C174(v3, v7);

  +[FMDPreferencesMgr setWipeState:](FMDPreferencesMgr, "setWipeState:", 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  objc_msgSend(v8, "beginTransaction:", CFSTR("WipeStarted"));

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100099DBC;
  block[3] = &unk_1002C1328;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
LABEL_12:

}

id sub_100099DBC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_wipeNow");
}

id sub_10009A07C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_abortWipe");
}

void sub_10009A1A0(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  const char *v6;
  NSObject *v7;
  uint32_t v8;
  int v9;
  NSError *v10;

  v2 = a2;
  v3 = sub_1000031B8();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v5)
    {
      v9 = 138412290;
      v10 = v2;
      v6 = "Could not erase device. Error - %@";
      v7 = v4;
      v8 = 12;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&v9, v8);
    }
  }
  else if (v5)
  {
    LOWORD(v9) = 0;
    v6 = "Erase completed";
    v7 = v4;
    v8 = 2;
    goto LABEL_6;
  }

}

void sub_10009B17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009B1A4(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void (**v19)(_QWORD, _QWORD, _QWORD);
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void (**v25)(_QWORD, _QWORD, _QWORD);
  int v26;
  id v27;
  __int16 v28;
  id v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  void *v33;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = sub_1000530AC();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = objc_msgSend(v3, "httpResponseStatus");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseHeaders"));
    v26 = 138413058;
    v27 = v3;
    v28 = 2048;
    v29 = v7;
    v30 = 2112;
    v31 = v8;
    v32 = 2112;
    v33 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v26, 0x2Au);

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  if (v10
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
    || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
  {

  }
  else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
  {
    v19 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseBody"));
    v20 = objc_alloc_init((Class)FMDPairingLockRegisterResponseInfo);
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("serialNumber")));
    objc_msgSend(v20, "setSerialNumber:", v22);

    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("pairingCheckToken")));
    objc_msgSend(v20, "setPairingToken:", v23);

    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
    if (v24)
    {
      v25 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
      ((void (**)(_QWORD, _QWORD, id))v25)[2](v25, 0, v20);

    }
    goto LABEL_15;
  }
  v11 = objc_msgSend(v3, "cancelled");
  v12 = sub_1000530AC();
  v13 = objc_claimAutoreleasedReturnValue(v12);
  v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
  if (v11)
  {
    if (v14)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v26 = 138412290;
      v27 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v26, 0xCu);
LABEL_12:

    }
  }
  else if (v14)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
    v16 = objc_msgSend(v3, "httpResponseStatus");
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    v26 = 138412802;
    v27 = v15;
    v28 = 2048;
    v29 = v16;
    v30 = 2112;
    v31 = v17;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v26, 0x20u);

    goto LABEL_12;
  }

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
  if (!v18)
    goto LABEL_16;
  v19 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onCompletionHandler"));
  v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
  ((void (**)(_QWORD, id, _QWORD))v19)[2](v19, v20, 0);
LABEL_15:

LABEL_16:
  v21 = *(_QWORD *)(a1 + 32);
  if (v21)
    (*(void (**)(void))(v21 + 16))();

}

id sub_10009C2E4(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 16), *(id *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "_accountDidChangeFrom:to:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

uint64_t sub_10009C318(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10009C328(uint64_t a1)
{

}

void sub_10009C6E8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;

  v3 = a2;
  if (v3)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_10022C3FC(a1);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "removeAccountPreferences");
    v5 = objc_claimAutoreleasedReturnValue(+[FMDLocalActivationLockInfoManager sharedInstance](FMDLocalActivationLockInfoManager, "sharedInstance"));
    -[NSObject clearAllState](v5, "clearAllState");
  }

  v6 = *(_QWORD *)(a1 + 48);
  if (v6)
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v3);

}

void sub_10009CB94(id a1, FMDInternalAccessory *a2, unint64_t a3, BOOL *a4)
{
  FMDInternalAccessory *v4;
  id v5;

  v4 = a2;
  +[AccessoryRegisterAction cleanupContextForAccessory:](AccessoryRegisterAction, "cleanupContextForAccessory:", v4);
  v5 = (id)objc_claimAutoreleasedReturnValue(-[FMDInternalAccessory commandContext](v4, "commandContext"));

  objc_msgSend(v5, "cleanupContexts");
}

void sub_10009D358(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  id v10;
  int v11;
  void *v12;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (!v5 || v6)
  {
    v10 = sub_1000031B8();
    v9 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v11 = 138543362;
      v12 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Failed to get PET info %{public}@", (uint8_t *)&v11, 0xCu);
    }
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", AKAuthenticationUsernameKey));
    objc_msgSend(*(id *)(a1 + 32), "setUsername:", v8);

    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", AKAuthenticationPasswordKey));
    objc_msgSend(*(id *)(a1 + 32), "setPet:", v9);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_10009D6C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10009E200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009E228(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  int v7;
  void *v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "apsToken"));

  if (!v3)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "serviceName"));
      v7 = 138412290;
      v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@ is not functional as an APS token is not available.", (uint8_t *)&v7, 0xCu);

    }
  }

}

void sub_10009E30C(uint64_t a1)
{
  id WeakRetained;
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SP Beacon stats changed", v4, 2u);
  }

}

void sub_10009E674(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  RegisterAction *v6;
  _QWORD v7[5];

  v6 = -[RegisterAction initWithReason:force:provider:]([RegisterAction alloc], "initWithReason:force:provider:", 0, 0, *(_QWORD *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ActionManager sharedManager](ActionManager, "sharedManager"));
  v3 = objc_msgSend(v2, "enqueueAction:", v6);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoryRegistry"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "allAccessories"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10009E74C;
  v7[3] = &unk_1002C3FF8;
  v7[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v5, "enumerateObjectsUsingBlock:", v7);

}

id sub_10009E74C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "queueAccessoryActionsIfNeeded:", a2);
}

void sub_10009EEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009EF0C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  FMDDirectServerChannel *v6;
  FMDCadmiumServerChannel *v7;
  void *v8;
  FMDServerInteractionController *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverInteractionControllerByAccessory"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v6 = objc_alloc_init(FMDDirectServerChannel);
    v15[0] = v6;
    v7 = objc_alloc_init(FMDCadmiumServerChannel);
    v15[1] = v7;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v15, 2));

    v9 = -[FMDServerInteractionController initWithChannels:delegate:]([FMDServerInteractionController alloc], "initWithChannels:delegate:", v8, *(_QWORD *)(a1 + 32));
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "stringValue"));
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "setUdid:", v12);

    v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverInteractionControllerByAccessory"));
    objc_msgSend(v14, "setObject:forKeyedSubscript:", v13, *(_QWORD *)(a1 + 40));

  }
}

void sub_10009F1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10009F1E8(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  FMDDirectServerChannel *v8;
  FMDCadmiumServerChannel *v9;
  void *v10;
  FMDServerInteractionController *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  _QWORD v18[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverInteractionControllerByAccount"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "authId"));
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", v3));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

  v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  if (!v7)
  {
    v8 = objc_alloc_init(FMDDirectServerChannel);
    v18[0] = v8;
    v9 = objc_alloc_init(FMDCadmiumServerChannel);
    v18[1] = v9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v18, 2));

    v11 = -[FMDServerInteractionController initWithChannels:delegate:]([FMDServerInteractionController alloc], "initWithChannels:delegate:", v10, *(_QWORD *)(a1 + 32));
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverInteractionControllerByAccount"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "authId"));
    objc_msgSend(v15, "setObject:forKeyedSubscript:", v14, v16);

    v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  }
  return objc_msgSend(v7, "setRequestAccount:", *(_QWORD *)(a1 + 40));
}

id sub_10009FB38(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "OK button tapped. Performing action %@", (uint8_t *)&v6, 0xCu);
  }

  return +[CommonUtil handleAlertAction:](CommonUtil, "handleAlertAction:", *(_QWORD *)(a1 + 40));
}

id sub_10009FBEC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Cancel button tapped. Performing action %@", (uint8_t *)&v6, 0xCu);
  }

  return +[CommonUtil handleAlertAction:](CommonUtil, "handleAlertAction:", *(_QWORD *)(a1 + 40));
}

void sub_10009FCA0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[FMAlertManager sharedInstance](FMAlertManager, "sharedInstance"));
  objc_msgSend(v2, "activateAlert:", *(_QWORD *)(a1 + 32));

}

id sub_1000A005C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "registerDeviceWithCause:force:", CFSTR("searchPartyBeaconsChanged"), 0);
}

void sub_1000A05F0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  id v6;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetsForAccessory:", v4));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoryRegistry"));
  objc_msgSend(v5, "updateAccessory:assets:", v4, v6);

}

NSDictionary *__cdecl sub_1000A1304(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_1000A1340(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "deviceInfoForAccount:", v3));

  return v4;
}

id sub_1000A13A8(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1000A27B4(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  void *v5;
  int v6;
  NSError *v7;

  v2 = a2;
  if (v2)
  {
    v3 = sub_10005318C();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v6 = 138412290;
      v7 = v2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Error sending location payload to spd %@", (uint8_t *)&v6, 0xCu);
    }

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  objc_msgSend(v5, "endTransaction:", CFSTR("MDSecureLocationsHandlePushTransaction"));

}

void sub_1000A2884(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  void *v5;
  int v6;
  NSError *v7;

  v2 = a2;
  if (v2)
  {
    v3 = sub_10005318C();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v6 = 138412290;
      v7 = v2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Error sending location commands to spd %@", (uint8_t *)&v6, 0xCu);
    }

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  objc_msgSend(v5, "endTransaction:", CFSTR("MDSecureLocationsHandlePushTransaction"));

}

void sub_1000A2D58(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_1000A42F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A430C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000A431C(uint64_t a1)
{

}

void sub_1000A4324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "splunkifyObject:eventName:", a3, &stru_1002CD590));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  v12 = v4;
  if (v6)
  {
    if (!objc_msgSend(v6, "isEqualToString:", &stru_1002CD590))
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "stringByAppendingString:", CFSTR(",")));
      v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "stringByAppendingString:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40)));
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v11 = *(void **)(v10 + 40);
      *(_QWORD *)(v10 + 40) = v9;

      goto LABEL_6;
    }
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v4 = v12;
  }
  v7 = v4;
  v8 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v7;
LABEL_6:

}

void sub_1000A45DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000A45F4(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "splunkifyObject:eventName:", a2, &stru_1002CD590));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  v11 = v3;
  if (v5)
  {
    if (!objc_msgSend(v5, "isEqualToString:", &stru_1002CD590))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "stringByAppendingString:", CFSTR(",")));
      v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "stringByAppendingString:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40)));
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v10 = *(void **)(v9 + 40);
      *(_QWORD *)(v9 + 40) = v8;

      goto LABEL_6;
    }
    v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v3 = v11;
  }
  v6 = v3;
  v7 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v6;
LABEL_6:

}

void sub_1000A4A94(id a1)
{
  FMDRestrictedRegions *v1;
  void *v2;

  v1 = objc_alloc_init(FMDRestrictedRegions);
  v2 = (void *)qword_100306898;
  qword_100306898 = (uint64_t)v1;

}

void sub_1000A4EA0(id a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *i;
  void *v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  v1 = objc_alloc_init((Class)GEOMapRegion);
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = objc_msgSend(&off_1002D92F0, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v4)
          objc_enumerationMutation(&off_1002D92F0);
        v6 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", 1));
        objc_msgSend(v7, "doubleValue");
        v9 = v8;

        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", 0));
        objc_msgSend(v10, "doubleValue");
        v12 = v11;

        v13 = objc_msgSend(objc_alloc((Class)GEOLatLng), "initWithLatitude:longitude:", v9, v12);
        objc_msgSend(v1, "addVertex:", v13);

      }
      v3 = objc_msgSend(&off_1002D92F0, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v3);
  }
  v14 = (void *)qword_1003068A8;
  qword_1003068A8 = (uint64_t)v1;

}

void sub_1000A535C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000A5370(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setPublishingBlock:", *(_QWORD *)(a1 + 32));
  objc_msgSend(WeakRetained, "setStartedPublishing:", 1);

}

void sub_1000A5480(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000A5494(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setCriteriaMetBlock:", *(_QWORD *)(a1 + 32));

}

void sub_1000A5598(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000A55AC(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  void *v4;
  double v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  double v27;
  id v28;
  NSObject *v29;
  void *v30;
  double v31;
  const char *v32;
  id v33;
  NSObject *v34;
  double v35;
  double v36;
  void *v37;
  double v38;
  double v39;
  id v40;
  id v41;
  NSObject *v42;
  void *v43;
  double v44;
  void *v45;
  double v46;
  double v47;
  id v48;
  double v49;
  void *v50;
  void *v51;
  double v52;
  double v53;
  void *v54;
  void *v55;
  double v56;
  double v57;
  id v58;
  void *v59;
  void *v60;
  double v61;
  double v62;
  void *v63;
  void *v64;
  double v65;
  double v66;
  id v67;
  double v68;
  double v69;
  void *v70;
  double v71;
  double v72;
  double v73;
  id v74;
  id v75;
  void *v76;
  double v77;
  _BOOL4 v78;
  id v79;
  NSObject *v80;
  id v81;
  NSObject *v82;
  void *v83;
  double v84;
  double v85;
  id v86;
  NSObject *v87;
  id v88;
  NSObject *v89;
  NSObject *v90;
  void *v91;
  double v92;
  double v93;
  id v94;
  void *v95;
  uint64_t v96;
  void *v97;
  void (**v98)(void);
  const __CFString *v99;
  void *v100;
  double v101;
  const __CFString *v102;
  void *v103;
  double v104;
  double v105;
  double v106;
  void *v107;
  id v108;
  id v109;
  uint8_t buf[4];
  double v111;
  __int16 v112;
  double v113;
  __int16 v114;
  double v115;
  __int16 v116;
  uint64_t v117;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ((objc_msgSend(WeakRetained, "startedPublishing") & 1) != 0)
  {
    v3 = *(id *)(a1 + 32);
    v4 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject locationInfo](v3, "locationInfo"));
    v5 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "timestamp")));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lastPublishedLocation"));
    if (-[NSObject publishReason](v3, "publishReason") == (id)2)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lastPublishedVisit"));

      if (!v7)
      {
        v33 = sub_10005318C();
        v34 = objc_claimAutoreleasedReturnValue(v33);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: Publishing visit immediately since there is no previous visit", buf, 2u);
        }

        objc_msgSend(WeakRetained, "_publishResultLocation:", v3);
        objc_msgSend(WeakRetained, "setLastPublishedVisit:", v3);
        goto LABEL_51;
      }
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject locationInfo](v3, "locationInfo"));
      v9 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "timestamp")));

      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lastPublishedVisit"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "locationInfo"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "timestamp"));

      objc_msgSend(*(id *)&v9, "timeIntervalSinceDate:", v12);
      v14 = v13;
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
      objc_msgSend(v15, "minTimeBetweenVisitPublish");
      v17 = v16;

      if (v14 <= v17)
      {
        v41 = sub_10005318C();
        v42 = objc_claimAutoreleasedReturnValue(v41);
        if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
        {
          v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
          objc_msgSend(v43, "minTimeBetweenVisitPublish");
          *(_DWORD *)buf = 134217984;
          v111 = v44;
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: Not publishing visit since it is within min publish limit (%f)", buf, 0xCu);

        }
      }
      else
      {
        objc_msgSend(WeakRetained, "_publishResultLocation:", v3);
        objc_msgSend(WeakRetained, "setLastPublishedVisit:", v3);
      }

LABEL_50:
LABEL_51:

      goto LABEL_52;
    }
    if (!v6)
    {
      v9 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_persistedLastPublishedTimestamp")));
      if (v9 != 0.0)
      {
        objc_msgSend(*(id *)&v5, "timeIntervalSinceDate:", *(_QWORD *)&v9);
        v36 = v35;
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
        objc_msgSend(v37, "minTimeBetweenPublish");
        v39 = v38;

        if (v36 <= v39)
        {
          v79 = sub_10005318C();
          v80 = objc_claimAutoreleasedReturnValue(v79);
          if (os_log_type_enabled(v80, OS_LOG_TYPE_DEBUG))
            sub_10022C8FC(*(uint64_t *)&v9, v80);

          objc_msgSend(WeakRetained, "setLastReceivedLocation:", v3);
          goto LABEL_50;
        }
      }
      v40 = sub_10005318C();
      v29 = objc_claimAutoreleasedReturnValue(v40);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v111 = v9;
        v112 = 2112;
        v113 = v5;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: New location is the first recorded location or greater than persisted lastPublish. lastPublished %@, new %@. Publishing", buf, 0x16u);
      }
      goto LABEL_30;
    }
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "locationInfo"));
    v9 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "timestamp")));

    objc_msgSend(*(id *)&v5, "timeIntervalSinceDate:", *(_QWORD *)&v9);
    v21 = v20;
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
    objc_msgSend(v22, "timeIntervalSinceDate:", *(_QWORD *)&v9);
    v24 = v23;

    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
    objc_msgSend(v25, "heartbeatPublish");
    v27 = v26;

    if (v24 < v27 || v21 <= 0.0)
    {
      if (-[NSObject publishReason](v3, "publishReason") != (id)5
        || (v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config")),
            objc_msgSend(v45, "onDemandPublishThreshold"),
            v47 = v46,
            v45,
            v21 < v47)
        || v21 <= 0.0)
      {
        v50 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject locationInfo](v3, "locationInfo"));
        v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v50, "latitude"));
        objc_msgSend(v51, "doubleValue");
        v53 = v52;

        v54 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject locationInfo](v3, "locationInfo"));
        v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v54, "longitude"));
        objc_msgSend(v55, "doubleValue");
        v57 = v56;

        v58 = objc_msgSend(objc_alloc((Class)CLLocation), "initWithLatitude:longitude:", v53, v57);
        v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "locationInfo"));
        v60 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v59, "latitude"));
        objc_msgSend(v60, "doubleValue");
        v62 = v61;

        v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "locationInfo"));
        v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v63, "longitude"));
        objc_msgSend(v64, "doubleValue");
        v66 = v65;

        v67 = objc_msgSend(objc_alloc((Class)CLLocation), "initWithLatitude:longitude:", v62, v66);
        objc_msgSend(v58, "distanceFromLocation:", v67);
        v69 = v68;
        v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
        objc_msgSend(v70, "minDistanceBetweenPublish");
        if (v69 >= v71)
        {
          v78 = 1;
        }
        else
        {
          v107 = v6;
          v72 = v5;
          v73 = v9;
          v74 = v67;
          v75 = v58;
          v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
          objc_msgSend(v76, "minDistanceBetweenPublish");
          v78 = v77 == 0.0;

          v58 = v75;
          v67 = v74;
          v9 = v73;
          v5 = v72;
          v6 = v107;
        }

        v81 = sub_10005318C();
        v82 = objc_claimAutoreleasedReturnValue(v81);
        if (os_log_type_enabled(v82, OS_LOG_TYPE_DEBUG))
        {
          v99 = CFSTR("no");
          if (v78)
            v99 = CFSTR("yes");
          v108 = v58;
          v100 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config", v99));
          objc_msgSend(v100, "minDistanceBetweenPublish");
          *(_DWORD *)buf = 138412802;
          v111 = v105;
          v112 = 2048;
          v113 = v69;
          v114 = 2048;
          v115 = v101;
          _os_log_debug_impl((void *)&_mh_execute_header, v82, OS_LOG_TYPE_DEBUG, "SecureLocationPublisher: meetsDistanceLimits %@ distance %f configLimit %f", buf, 0x20u);

          v58 = v108;
        }

        v83 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
        objc_msgSend(v83, "minTimeBetweenPublish");
        v85 = v84;

        v86 = sub_10005318C();
        v87 = objc_claimAutoreleasedReturnValue(v86);
        if (os_log_type_enabled(v87, OS_LOG_TYPE_DEBUG))
        {
          v102 = CFSTR("no");
          if (v21 >= v85)
            v102 = CFSTR("yes");
          v109 = v58;
          v103 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config", v102));
          objc_msgSend(v103, "minTimeBetweenPublish");
          *(_DWORD *)buf = 138412802;
          v111 = v106;
          v112 = 2048;
          v113 = v21;
          v114 = 2048;
          v115 = v104;
          _os_log_debug_impl((void *)&_mh_execute_header, v87, OS_LOG_TYPE_DEBUG, "SecureLocationPublisher: meetsTimeLimits %@ time %f limit %f", buf, 0x20u);

          v58 = v109;
        }

        if (v21 < v85)
          v78 = 0;
        v88 = sub_10005318C();
        v89 = objc_claimAutoreleasedReturnValue(v88);
        v90 = v89;
        if (v78)
        {
          if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
          {
            v91 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
            objc_msgSend(v91, "minTimeBetweenPublish");
            v93 = v92;
            v94 = v58;
            v95 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
            objc_msgSend(v95, "minDistanceBetweenPublish");
            *(_DWORD *)buf = 134218752;
            v111 = v21;
            v112 = 2048;
            v113 = v93;
            v114 = 2048;
            v115 = v69;
            v116 = 2048;
            v117 = v96;
            _os_log_impl((void *)&_mh_execute_header, v90, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: new location meets publishing criteria. Time %f Limit %f, Distance %f Limit %f", buf, 0x2Au);

            v58 = v94;
          }

          objc_msgSend(WeakRetained, "_publishResultLocation:", v3);
          v97 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "criteriaMetBlock"));

          if (v97)
          {
            v98 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "criteriaMetBlock"));
            v98[2]();

          }
        }
        else
        {
          if (os_log_type_enabled(v89, OS_LOG_TYPE_DEBUG))
            sub_10022C970(v90);

          objc_msgSend(WeakRetained, "setLastReceivedLocation:", *(_QWORD *)(a1 + 32));
        }

        goto LABEL_50;
      }
      v48 = sub_10005318C();
      v29 = objc_claimAutoreleasedReturnValue(v48);
      if (!os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        goto LABEL_30;
      v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
      objc_msgSend(v30, "onDemandPublishThreshold");
      *(_DWORD *)buf = 134218240;
      v111 = v21;
      v112 = 2048;
      v113 = v49;
      v32 = "SecureLocationPublisher: Publishing ondemand location since time elapsed (%f) greater than ondemand threshold (%f)";
    }
    else
    {
      v28 = sub_10005318C();
      v29 = objc_claimAutoreleasedReturnValue(v28);
      if (!os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
LABEL_30:

        objc_msgSend(WeakRetained, "_publishResultLocation:", v3);
        goto LABEL_50;
      }
      v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "config"));
      objc_msgSend(v30, "heartbeatPublish");
      *(_DWORD *)buf = 134218240;
      v111 = v24;
      v112 = 2048;
      v113 = v31;
      v32 = "SecureLocationPublisher: Publishing location since time elapsed (%f) greater than hearbeat limit (%f)";
    }
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, v32, buf, 0x16u);

    goto LABEL_30;
  }
  v18 = sub_10005318C();
  v3 = objc_claimAutoreleasedReturnValue(v18);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_10022C9B0(v3);
LABEL_52:

}

void sub_1000A5F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000A5F80(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  char v18;
  void *v19;
  void *v20;
  id v21;
  int v22;
  void *v23;
  __int16 v24;
  void *v25;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastReceivedLocation"));
  if (!v2)
    goto LABEL_3;
  v3 = (void *)v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastReceivedLocation"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "locationInfo"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "timestamp"));
  objc_msgSend(v6, "timeIntervalSinceNow");
  v8 = -v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "config"));
  objc_msgSend(v9, "stalenessThreshold");
  v11 = v10;

  if (v11 >= v8)
  {
    v19 = *(void **)(a1 + 32);
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "lastReceivedLocation"));
    objc_msgSend(v19, "_publishResultLocation:", v20);

    v21 = sub_10005318C();
    v13 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v22) = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: publishing lastReceivedLocation", (uint8_t *)&v22, 2u);
    }
    v18 = 1;
  }
  else
  {
LABEL_3:
    v12 = sub_10005318C();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastReceivedLocation"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastReceivedLocation"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "locationInfo"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "timestamp"));
      v22 = 138412546;
      v23 = v14;
      v24 = 2112;
      v25 = v17;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: Can't publish lastReceivedLocation %@, ts: %@", (uint8_t *)&v22, 0x16u);

    }
    v18 = 0;
  }

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v18;
}

uint64_t sub_1000A63C8(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = sub_10005318C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: Executing the publish block.", v5, 2u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_1000A69E8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __CFString *v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  NSObject *v28;
  NSObject *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint8_t buf[4];
  void *v47;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10022CBF8((uint64_t)v6, v8, v9, v10, v11, v12, v13, v14);

    v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "description"));
    v16 = CFSTR("statusFetchError");
    goto LABEL_23;
  }
  if ((unint64_t)objc_msgSend(v5, "count") <= 1)
  {
    v17 = sub_1000031B8();
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      sub_10022CA54(v18);

    v15 = 0;
    v16 = CFSTR("ckksStatusAbsent");
    goto LABEL_23;
  }
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", 1));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("keystate")));
  if (objc_msgSend(v20, "isEqualToString:", CFSTR("ready")))
  {

LABEL_12:
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", 1));
    v25 = objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "objectForKeyedSubscript:", CFSTR("accounttracker")));
    v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@"), v25));

    LOBYTE(v25) = objc_msgSend(v26, "containsString:", CFSTR("deviceToDeviceEncryptionAvailability=(account|device)"));
    v27 = sub_1000031B8();
    v28 = objc_claimAutoreleasedReturnValue(v27);
    v29 = v28;
    if ((v25 & 1) != 0)
    {
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", 1));
        v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "objectForKeyedSubscript:", CFSTR("keystate")));
        *(_DWORD *)buf = 138412290;
        v47 = v31;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "CKKSStatus: good. KeyState: %@", buf, 0xCu);

      }
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", 1));
      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "objectForKeyedSubscript:", CFSTR("keystate")));
      v16 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("good-%@"), v33));

      v15 = 0;
    }
    else
    {
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        sub_10022CA94((uint64_t)v26, v29, v34, v35, v36, v37, v38, v39);

      v15 = v26;
      v16 = CFSTR("d2dEncUnavailable");
    }

    goto LABEL_23;
  }
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", 1));
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("keystate")));
  v23 = objc_msgSend(v22, "isEqualToString:", CFSTR("readypendingunlock"));

  if ((v23 & 1) != 0)
    goto LABEL_12;
  v40 = sub_1000031B8();
  v41 = objc_claimAutoreleasedReturnValue(v40);
  if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
    sub_10022CAF8(v5, v41);

  v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", 1));
  v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "objectForKeyedSubscript:", CFSTR("keystate")));
  v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", 1));
  v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "objectForKeyedSubscript:", CFSTR("keyStateError")));
  v15 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("KeyState: %@. Error: %@"), v43, v45));

  v16 = CFSTR("badStatus");
LABEL_23:
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_1000A6F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A6F2C(uint64_t a1, void *a2)
{
  id WeakRetained;
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  NSErrorUserInfoKey v15;
  void *v16;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (a2)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_10022CC5C((uint64_t)a2, v5, v6, v7, v8, v9, v10, v11);

    v12 = kFMDErrorDomain;
    v15 = NSUnderlyingErrorKey;
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("NSXPCError"), a2, 0));
    v16 = v13;
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v16, &v15, 1));
    a2 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v12, 13, v14));

  }
  objc_msgSend(WeakRetained, "setConnection:", 0);
  objc_msgSend(WeakRetained, "_didEndDiscoveryWithError:", a2);

}

void sub_1000A9000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A9034(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  id v7;
  id WeakRetained;
  void *v9;
  unsigned int v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;

  v7 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v9 = WeakRetained;
  v10 = 1;
  if (a4 != 3 && a4 != 5)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "locator"));
    v10 = objc_msgSend(v4, "locatorRunning") ^ 1;
  }
  if (a4 != 3 && a4 != 5)

  if (v10)
  {
    v11 = sub_1000031B8();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
      sub_10022CF0C(v9);

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "trackedLocationsStore"));
    objc_msgSend(v13, "recordLocation:ofType:", v7, 2);

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "locator"));
    objc_msgSend(v14, "stopLocator");

  }
}

void sub_1000A9128(uint64_t a1)
{
  id WeakRetained;
  id v2;
  NSObject *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_10022CF98(WeakRetained);

  objc_msgSend(WeakRetained, "setLocator:", 0);
  objc_msgSend(WeakRetained, "_updateFallbackRetryTimer");

}

void sub_1000A973C(id *a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  FMDLocator *v5;
  void *v6;
  void *v7;
  FMDTrackedLocationPublisher *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  uint64_t v14;
  void *v15;
  double v16;
  uint64_t v17;
  void *v18;
  FMDConservativeLocatorPublisher *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  double v24;
  uint64_t v25;
  void *v26;
  double v27;
  uint64_t v28;
  void *v29;
  FMDTrackedLocationPublisher *v30;
  FMDTrackedLocationPublisher *v31;
  FMDConservativeLocatorPublisher *v32;
  _QWORD v33[4];
  FMDConservativeLocatorPublisher *v34;
  FMDTrackedLocationPublisher *v35;
  id v36;
  _QWORD v37[4];
  FMDTrackedLocationPublisher *v38;
  id v39;

  WeakRetained = objc_loadWeakRetained(a1 + 7);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "locateParams"));
  v4 = objc_msgSend(WeakRetained, "newLocationManager");
  v5 = -[FMDLocator initWithLocationManager:]([FMDLocator alloc], "initWithLocationManager:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("desiredAccuracy")));
  objc_msgSend(v6, "doubleValue");
  -[FMDLocator setDesiredAccuracy:](v5, "setDesiredAccuracy:");

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("timeout")));
  objc_msgSend(v7, "doubleValue");
  -[FMDLocator setDuration:](v5, "setDuration:");

  v8 = objc_alloc_init(FMDTrackedLocationPublisher);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("startThreshold")));
  -[FMDTrackedLocationPublisher setStartThreshold:](v8, "setStartThreshold:", v9);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("endThreshold")));
  -[FMDTrackedLocationPublisher setEndThreshold:](v8, "setEndThreshold:", v10);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("decayFactor")));
  -[FMDTrackedLocationPublisher setDecayFactor:](v8, "setDecayFactor:", v11);

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("validityDuration")));
  -[FMDTrackedLocationPublisher setCachedLocationValidityTimeInterval:](v8, "setCachedLocationValidityTimeInterval:", v12);

  objc_msgSend(a1[4], "minDistanceBetweenLocations");
  if (v13 > 0.0)
  {
    objc_msgSend(a1[4], "minDistanceBetweenLocations");
    v14 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
  }
  else
  {
    v14 = objc_claimAutoreleasedReturnValue(-[FMDTrackedLocationPublisher minimumDistance](v8, "minimumDistance"));
  }
  v15 = (void *)v14;
  -[FMDTrackedLocationPublisher setMinimumDistance:](v8, "setMinimumDistance:", v14);

  objc_msgSend(a1[4], "minTimeBetweenLocations");
  if (v16 > 0.0)
  {
    objc_msgSend(a1[4], "minTimeBetweenLocations");
    v17 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
  }
  else
  {
    v17 = objc_claimAutoreleasedReturnValue(-[FMDTrackedLocationPublisher publishTimeInterval](v8, "publishTimeInterval"));
  }
  v18 = (void *)v17;
  -[FMDTrackedLocationPublisher setPublishTimeInterval:](v8, "setPublishTimeInterval:", v17);

  -[FMDTrackedLocationPublisher startPublishingWithBlock:](v8, "startPublishingWithBlock:", a1[5]);
  v19 = objc_alloc_init(FMDConservativeLocatorPublisher);
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("startThreshold")));
  -[FMDConservativeLocatorPublisher setStartThreshold:](v19, "setStartThreshold:", v20);

  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("endThreshold")));
  -[FMDConservativeLocatorPublisher setEndThreshold:](v19, "setEndThreshold:", v21);

  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("decayFactor")));
  -[FMDConservativeLocatorPublisher setDecayFactor:](v19, "setDecayFactor:", v22);

  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("validityDuration")));
  -[FMDConservativeLocatorPublisher setCachedLocationValidityTimeInterval:](v19, "setCachedLocationValidityTimeInterval:", v23);

  objc_msgSend(a1[4], "minDistanceBetweenLocations");
  if (v24 > 0.0)
  {
    objc_msgSend(a1[4], "minDistanceBetweenLocations");
    v25 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
  }
  else
  {
    v25 = objc_claimAutoreleasedReturnValue(-[FMDConservativeLocatorPublisher minimumDistance](v19, "minimumDistance"));
  }
  v26 = (void *)v25;
  -[FMDConservativeLocatorPublisher setMinimumDistance:](v19, "setMinimumDistance:", v25);

  objc_msgSend(a1[4], "minTimeBetweenLocations");
  if (v27 > 0.0)
  {
    objc_msgSend(a1[4], "minTimeBetweenLocations");
    v28 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
  }
  else
  {
    v28 = objc_claimAutoreleasedReturnValue(-[FMDConservativeLocatorPublisher publishTimeInterval](v19, "publishTimeInterval"));
  }
  v29 = (void *)v28;
  -[FMDConservativeLocatorPublisher setPublishTimeInterval:](v19, "setPublishTimeInterval:", v28);

  v37[0] = _NSConcreteStackBlock;
  v37[1] = 3221225472;
  v37[2] = sub_1000A9BAC;
  v37[3] = &unk_1002C4C38;
  v30 = v8;
  v38 = v30;
  v39 = a1[5];
  -[FMDConservativeLocatorPublisher startPublishingWithBlock:](v19, "startPublishingWithBlock:", v37);
  -[FMDLocator setLocatorPublisher:](v5, "setLocatorPublisher:", v19);
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_1000A9CE0;
  v33[3] = &unk_1002C2088;
  v34 = v19;
  v35 = v30;
  v36 = a1[6];
  v31 = v30;
  v32 = v19;
  -[FMDLocator setStoppedLocatorBlock:](v5, "setStoppedLocatorBlock:", v33);
  objc_msgSend(WeakRetained, "setLocator:", v5);
  -[FMDLocator startLocator](v5, "startLocator");

}

void sub_1000A9BAC(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  uint64_t v14;
  int v15;
  id v16;
  id v17;

  v7 = a2;
  v8 = a3;
  v9 = v8;
  if (v7 || !v8)
  {
    if (v7)
    {
      v12 = sub_1000031B8();
      v13 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v15 = 138412290;
        v16 = v7;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "FMDLocationTracker error getting location from conservativePublisher %@", (uint8_t *)&v15, 0xCu);
      }

      v14 = *(_QWORD *)(a1 + 40);
      if (v14)
        (*(void (**)(uint64_t, id, void *, uint64_t))(v14 + 16))(v14, v7, v9, a4);
    }
  }
  else
  {
    v10 = *(void **)(a1 + 32);
    v17 = v8;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v17, 1));
    objc_msgSend(v10, "updatedLocations:reason:", v11, a4);

  }
}

uint64_t sub_1000A9CE0(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "flushLocations");
  objc_msgSend(*(id *)(a1 + 40), "flushLocations");
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_1000A9E0C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_1000AA4B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;
  id *v28;

  objc_destroyWeak(v28);
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000AA4E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_1000AA4EC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  id v7;
  id WeakRetained;
  void *v9;
  unsigned int v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;

  v7 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v9 = WeakRetained;
  v10 = 1;
  if (a4 != 3 && a4 != 5)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "locator"));
    v10 = objc_msgSend(v4, "locatorRunning") ^ 1;
  }
  if (a4 != 3 && a4 != 5)

  if (v10)
  {
    v11 = sub_1000031B8();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
      sub_10022D0E8(v9);

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "trackedLocationsStore"));
    objc_msgSend(v13, "recordLocation:ofType:", v7, 3);

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "locator"));
    objc_msgSend(v14, "stopLocator");

  }
}

void sub_1000AA5E0(uint64_t a1)
{
  id WeakRetained;
  id v2;
  NSObject *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_10022D174(WeakRetained);

  objc_msgSend(WeakRetained, "setLocator:", 0);
  objc_msgSend(WeakRetained, "_updateFallbackRetryTimer");

}

void sub_1000AA648(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSRunLoop currentRunLoop](NSRunLoop, "currentRunLoop"));
  objc_msgSend(v1, "scheduleInRunLoop:", v2);

}

void sub_1000AB230(id a1)
{
  FMDMagSafeDataStore *v1;
  void *v2;

  v1 = objc_alloc_init(FMDMagSafeDataStore);
  v2 = (void *)qword_1003068B8;
  qword_1003068B8 = (uint64_t)v1;

}

id sub_1000AB498(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(*(id *)(a1 + 32), "_writeAccessoriesToDisk:", &__NSDictionary0__struct);
  return objc_msgSend(*(id *)(a1 + 32), "writeLostModeInfo:version:", &__NSArray0__struct, &stru_1002CD590);
}

void sub_1000AB5A8(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  dispatch_queue_global_t global_queue;
  NSObject *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;

  v2 = objc_alloc((Class)NSMutableDictionary);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readAllAccessoriesFromDisk"));
  v4 = objc_msgSend(v2, "initWithDictionary:", v3);

  v5 = *(void **)(a1 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "accessoryIdentifier"));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v5, v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_writeAccessoriesToDisk:", v4));
  global_queue = dispatch_get_global_queue(0, 0);
  v9 = objc_claimAutoreleasedReturnValue(global_queue);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000AB6C0;
  v12[3] = &unk_1002C16D8;
  v10 = *(id *)(a1 + 48);
  v13 = v7;
  v14 = v10;
  v11 = v7;
  dispatch_async(v9, v12);

}

uint64_t sub_1000AB6C0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_1000AB78C(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  dispatch_queue_global_t global_queue;
  NSObject *v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;

  v2 = objc_alloc((Class)NSMutableDictionary);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readAllAccessoriesFromDisk"));
  v4 = objc_msgSend(v2, "initWithDictionary:", v3);

  objc_msgSend(v4, "removeObjectForKey:", *(_QWORD *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_writeAccessoriesToDisk:", v4));
  global_queue = dispatch_get_global_queue(0, 0);
  v7 = objc_claimAutoreleasedReturnValue(global_queue);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000AB888;
  v10[3] = &unk_1002C16D8;
  v8 = *(id *)(a1 + 48);
  v11 = v5;
  v12 = v8;
  v9 = v5;
  dispatch_async(v7, v10);

}

uint64_t sub_1000AB888(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_1000AB954(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  void *v19;
  dispatch_queue_global_t global_queue;
  NSObject *v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  uint64_t v26;
  dispatch_queue_global_t v27;
  NSObject *v28;
  void *v29;
  uint64_t v30;
  _QWORD v31[4];
  id v32;
  _QWORD block[4];
  id v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  void *v43;
  _BYTE v44[128];

  v2 = objc_alloc((Class)NSMutableDictionary);
  v30 = a1;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readAllAccessoriesFromDisk"));
  v4 = objc_msgSend(v2, "initWithDictionary:", v3);

  v39 = 0u;
  v37 = 0u;
  v38 = 0u;
  v36 = 0u;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "allValues"));
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
  if (v6)
  {
    v7 = v6;
    v29 = v4;
    v8 = 0;
    v9 = *(_QWORD *)v37;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v37 != v9)
          objc_enumerationMutation(v5);
        v11 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * (_QWORD)i);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "serialNumbers"));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("systemSerialNumber")));
        v14 = objc_msgSend(v13, "isEqualToString:", *(_QWORD *)(v30 + 40));

        if (v14)
        {
          v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "accessoryIdentifier"));

          v8 = (void *)v15;
        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
    }
    while (v7);

    v4 = v29;
    if (v8)
    {
      v16 = sub_1000530AC();
      v17 = objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18 = *(_QWORD *)(v30 + 40);
        *(_DWORD *)buf = 138412546;
        v41 = v18;
        v42 = 2112;
        v43 = v8;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "FMDMagSafeDataSource: removing accessory with serialNumber %@ accessoryId = %@", buf, 0x16u);
      }

      objc_msgSend(v29, "removeObjectForKey:", v8);
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v30 + 32), "_writeAccessoriesToDisk:", v29));
      global_queue = dispatch_get_global_queue(0, 0);
      v21 = objc_claimAutoreleasedReturnValue(global_queue);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000ABCCC;
      block[3] = &unk_1002C16D8;
      v22 = *(id *)(v30 + 48);
      v34 = v19;
      v35 = v22;
      v23 = v19;
      dispatch_async(v21, block);

      goto LABEL_18;
    }
  }
  else
  {

  }
  v24 = sub_1000530AC();
  v25 = objc_claimAutoreleasedReturnValue(v24);
  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
  {
    v26 = *(_QWORD *)(v30 + 40);
    *(_DWORD *)buf = 138412290;
    v41 = v26;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "FMDMagSafeDataSource: No magsafe accessory with serialNumber %@ found", buf, 0xCu);
  }

  v27 = dispatch_get_global_queue(0, 0);
  v28 = objc_claimAutoreleasedReturnValue(v27);
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_1000ABCDC;
  v31[3] = &unk_1002C2060;
  v32 = *(id *)(v30 + 48);
  dispatch_async(v28, v31);

  v8 = v32;
LABEL_18:

}

uint64_t sub_1000ABCCC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t sub_1000ABCDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000AC440(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  dispatch_queue_global_t global_queue;
  NSObject *v19;
  id v20;
  id v21;
  _QWORD v22[4];
  id v23;
  id v24;

  v2 = objc_alloc((Class)NSMutableDictionary);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readAllAccessoriesFromDisk"));
  v4 = objc_msgSend(v2, "initWithDictionary:", v3);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "setLastLostModeKeyRollTime:", *(_QWORD *)(a1 + 48));
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_writeAccessoriesToDisk:", v4));
  }
  else
  {
    v8 = sub_1000031B8();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_10022D2F4(v9, v10, v11, v12, v13, v14, v15, v16);

    v7 = objc_claimAutoreleasedReturnValue(+[NSError fm_genericError](NSError, "fm_genericError"));
  }
  v17 = (void *)v7;
  global_queue = dispatch_get_global_queue(0, 0);
  v19 = objc_claimAutoreleasedReturnValue(global_queue);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_1000AC59C;
  v22[3] = &unk_1002C16D8;
  v20 = *(id *)(a1 + 56);
  v23 = v17;
  v24 = v20;
  v21 = v17;
  dispatch_async(v19, v22);

}

uint64_t sub_1000AC59C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, *(_QWORD *)(a1 + 32));
  return result;
}

void sub_1000AC6B0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  AccessoryRegisterAction *v11;
  void *v12;
  void *v13;
  AccessoryRegisterAction *v14;
  void *v15;
  id v16;
  int v17;
  void *v18;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "provider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "commandParams"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("udid")));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "fm_nullToNil"));

  if (objc_msgSend(v5, "length")
    && (v6 = objc_msgSend(objc_alloc((Class)FMDAccessoryIdentifier), "initWithString:", v5),
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "accessoryRegistry")),
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "accessoryForIdentifier:", v6)),
        v7,
        v6,
        v8))
  {
    v9 = sub_1000031B8();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v17 = 138412290;
      v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Message command for accessory %@", (uint8_t *)&v17, 0xCu);
    }

    v11 = [AccessoryRegisterAction alloc];
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "account"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "serverInteractionControllerForAccessory:", v8));
    v14 = -[AccessoryRegisterAction initWithAccount:accessory:cause:force:serverInteractionController:](v11, "initWithAccount:accessory:cause:force:serverInteractionController:", v12, v8, CFSTR("startupAccessoryRegister"), 1, v13);

    v15 = (void *)objc_claimAutoreleasedReturnValue(+[ActionManager sharedManager](ActionManager, "sharedManager"));
    v16 = objc_msgSend(v15, "enqueueAction:", v14);

  }
  else
  {
    objc_msgSend(v2, "registerDeviceWithCause:force:", CFSTR("RegisterCommand"), 1);
  }

}

NSDictionary *__cdecl sub_1000ACB7C(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_1000ACBB8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "account"));
  if (v2)
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deviceInfoForAccount:accessory:", v4, *(_QWORD *)(a1 + 32)));
  else
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deviceInfoForAccount:", v4));
  v6 = (void *)v5;

  return v6;
}

void sub_1000ACC40(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  uint32_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v3 = a2;
  if ((objc_msgSend(v3, "willRetry") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
    if (v4
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v3, "httpResponseStatus") > 399)
    {

    }
    else if ((objc_msgSend(v3, "cancelled") & 1) == 0)
    {
      v16 = *(_QWORD *)(a1 + 32);
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v16, 1);
      v17 = sub_1000031B8();
      v8 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v18 = 138412546;
      v19 = v10;
      v20 = 2048;
      v21 = objc_msgSend(v3, "httpResponseStatus");
      v11 = "%@: successful with status %ld";
      v12 = v8;
      v13 = 22;
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
    v6 = objc_msgSend(v3, "cancelled");
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
        v18 = 138412290;
        v19 = v10;
        v11 = "%@: Cancelled";
        v12 = v8;
        v13 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v18, v13);
LABEL_14:

      }
    }
    else if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
      v14 = objc_msgSend(v3, "httpResponseStatus");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "httpResponseError"));
      v18 = 138412802;
      v19 = v10;
      v20 = 2048;
      v21 = v14;
      v22 = 2112;
      v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v18, 0x20u);

      goto LABEL_14;
    }
LABEL_15:

  }
}

void sub_1000AD7AC(id a1)
{
  FMDInternalAccessoryConnectionMonitor *v1;
  void *v2;

  v1 = objc_alloc_init(FMDInternalAccessoryConnectionMonitor);
  v2 = (void *)qword_1003068C8;
  qword_1003068C8 = (uint64_t)v1;

}

void sub_1000ADE38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000ADE50(uint64_t a1)
{
  void *v2;
  id *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", *(_QWORD *)(a1 + 32)));
  v3 = (id *)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "playbackChannels"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v4));

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v2, "isEqualToSet:", v5) ^ 1;
  objc_msgSend(*(id *)(a1 + 40), "setPlaybackChannels:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "updateAudioChannelPlayingState:", *(_QWORD *)(a1 + 32));
  v6 = sub_1000031B8();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    sub_10022D35C(v3, v7);

}

void sub_1000ADFD4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v3 = *(void **)(a1 + 32);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "channelName"));
    v5 = objc_msgSend(v3, "containsObject:", v4);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v5));
    objc_msgSend(v7, "setPlayingSound:", v6);

  }
  else
  {
    objc_msgSend(v7, "setPlayingSound:", 0);
  }

}

void sub_1000AE4BC(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "channelName"));
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v3, v4);

}

void sub_1000AE5D8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  id v12;

  v12 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifier"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "beacons"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v3));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "updateDate"));
  objc_msgSend(v6, "timeIntervalSinceReferenceDate");
  v8 = v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "updateDate"));
  objc_msgSend(v9, "timeIntervalSinceReferenceDate");
  v11 = v10;

  if (v8 > v11)
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v12, v3);

}

void sub_1000AE754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000AE76C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  void *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  id v11;

  v11 = a2;
  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "playingSound"));
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "playingSound"));
    v9 = objc_msgSend(v8, "BOOLValue");

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "playingSound"));
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v10, "BOOLValue");

    }
  }
  *a4 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

}

void sub_1000AFBE4(id a1)
{
  unsigned int v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[FMSystemInfo sharedInstance](FMSystemInfo, "sharedInstance"));
  v1 = objc_msgSend(v2, "isInternalBuild");
  if (v1)
    LOBYTE(v1) = +[FMPreferencesUtil BOOLForKey:inDomain:](FMPreferencesUtil, "BOOLForKey:inDomain:", CFSTR("FMDAutomationBluetoothManagerAutomationActiveKey"), kFMDNotBackedUpPrefDomain);
  byte_1003068D8 = v1;

}

id sub_1000AFD58(uint64_t a1)
{
  return +[BluetoothManager setSharedInstanceQueue:](BluetoothManager, "setSharedInstanceQueue:", *(_QWORD *)(a1 + 32));
}

void sub_1000AFD6C(id a1)
{
  void *v1;
  objc_class *v2;
  id v3;
  void *v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[FMDAutomationHelperFactory sharedFactory](FMDAutomationHelperFactory, "sharedFactory"));
  v2 = (objc_class *)objc_msgSend(v1, "automationHelperClassWithName:", CFSTR("FMDAutomationBluetoothManager"));

  v3 = objc_alloc_init(v2);
  v4 = (void *)qword_1003068F0;
  qword_1003068F0 = (uint64_t)v3;

}

void sub_1000B0B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000B0BBC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_publishResultLocation:reason:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48));

}

id sub_1000B14F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dispatchAnalytics:", *(_QWORD *)(a1 + 40));
}

NSDictionary *__cdecl sub_1000B176C(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_1000B17A8(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_1000B17B0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "authId"));
  objc_msgSend(v2, "fm_safeSetObject:forKey:", v4, CFSTR("X-Apple-PrsId"));

  return v2;
}

void sub_1000B1828(id a1, FMDRequest *a2)
{
  FMDRequest *v2;
  void *v3;
  unsigned int v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  void *v8;
  int64_t v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  id v14;
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  int64_t v18;
  __int16 v19;
  void *v20;

  v2 = a2;
  if (!-[FMDRequest willRetry](v2, "willRetry"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
    if (v3
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") < 200
      || -[FMDRequest httpResponseStatus](v2, "httpResponseStatus") > 399)
    {

    }
    else if (!-[FMDRequest cancelled](v2, "cancelled"))
    {
      v14 = sub_10005326C();
      v13 = objc_claimAutoreleasedReturnValue(v14);
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        goto LABEL_16;
      v12 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      *(_DWORD *)buf = 138412546;
      v16 = v12;
      v17 = 2048;
      v18 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", buf, 0x16u);
      goto LABEL_14;
    }
    v4 = -[FMDRequest cancelled](v2, "cancelled");
    v5 = sub_10005326C();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v7)
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
        *(_DWORD *)buf = 138412290;
        v16 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_11:

      }
    }
    else if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest fm_logID](v2, "fm_logID"));
      v9 = -[FMDRequest httpResponseStatus](v2, "httpResponseStatus");
      v10 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
      *(_DWORD *)buf = 138412802;
      v16 = v8;
      v17 = 2048;
      v18 = v9;
      v19 = 2112;
      v20 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_11;
    }

    v11 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
    if (!v11)
    {
      v13 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Server returned error code %ld"), -[FMDRequest httpResponseStatus](v2, "httpResponseStatus")));
      goto LABEL_16;
    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(-[FMDRequest httpResponseError](v2, "httpResponseError"));
    v13 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Error contacting the server: %@"), v12));
LABEL_14:

LABEL_16:
  }

}

void sub_1000B1B74(id a1)
{
  id v1;
  NSObject *v2;
  FMDSPStatusUtil *v3;
  void *v4;

  v1 = sub_1000031B8();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    sub_100225EAC(v2);

  v3 = objc_alloc_init(FMDSPStatusUtil);
  v4 = (void *)qword_100306900;
  qword_100306900 = (uint64_t)v3;

}

void sub_1000B1F44(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000B1F58(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "timer"));
  objc_msgSend(v1, "cancel");

  objc_msgSend(WeakRetained, "setTimer:", 0);
}

void sub_1000B2080(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000B2094(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_serialQueue_refreshBeaconStats");

}

void sub_1000B263C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000B26AC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_serialQueue_refreshBeaconStats");

}

uint64_t sub_1000B26D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000B2958(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 208));
  _Block_object_dispose((const void *)(v1 - 200), 8);
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B2998(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000B29A8(uint64_t a1)
{

}

void sub_1000B29B0(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  dispatch_queue_global_t global_queue;
  NSObject *v14;
  id v15;
  _QWORD block[4];
  NSObject *v17;
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  if (!v3
    || objc_msgSend(v3, "compare:", *(_QWORD *)(a1 + 32)) != (id)1
    || (v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40)) == 0
    || objc_msgSend(v4, "compare:", *(_QWORD *)(a1 + 32)) != (id)1)
  {
    v15 = sub_1000031B8();
    v12 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Waiting for both Oct & Mte beacon stats to be fetched.", buf, 2u);
    }
    goto LABEL_15;
  }
  v5 = sub_1000031B8();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Both Oct & Mte beacon stats have been fetched.", buf, 2u);
  }

  v7 = objc_msgSend(*(id *)(a1 + 40), "copy");
  objc_msgSend(WeakRetained, "setRawStats:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rawStats"));
  +[FMPreferencesUtil setDictionary:forKey:inDomain:](FMPreferencesUtil, "setDictionary:forKey:inDomain:", v8, off_100305910, kFMDNotBackedUpPrefDomain);

  v9 = objc_msgSend(*(id *)(a1 + 48), "isEqualToDictionary:", *(_QWORD *)(a1 + 40));
  if (*(_BYTE *)(a1 + 80) || (v9 & 1) == 0)
  {
    v10 = sub_1000031B8();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Basic or detailed beacon stats have changed. Sending the updated stats to the server", buf, 2u);
    }

    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "statsChangeHandler"));
    if (v12)
    {
      global_queue = dispatch_get_global_queue(0, 0);
      v14 = objc_claimAutoreleasedReturnValue(global_queue);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000B2BE0;
      block[3] = &unk_1002C2060;
      v12 = v12;
      v17 = v12;
      dispatch_async(v14, block);

    }
LABEL_15:

  }
}

uint64_t sub_1000B2BE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000B2BEC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  uint8_t v13[16];

  v5 = a3;
  v6 = a2;
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Oct beacon stats fetched", v13, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "fm_safelyMapKey:toObject:", CFSTR("octStatus"), v6);
  objc_msgSend(*(id *)(a1 + 32), "fm_safelyMapKey:toObject:", CFSTR("octStatusError"), v5);

  v9 = objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v9;

  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "serialQueue"));
  dispatch_async(v12, *(dispatch_block_t *)(a1 + 48));

}

void sub_1000B2CE0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  uint8_t v13[16];

  v5 = a3;
  v6 = a2;
  v7 = sub_1000031B8();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Mte beacon stats fetched", v13, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "fm_safelyMapKey:toObject:", CFSTR("mteStatus"), v6);
  objc_msgSend(*(id *)(a1 + 32), "fm_safelyMapKey:toObject:", CFSTR("mteStatusError"), v5);

  v9 = objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v9;

  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "serialQueue"));
  dispatch_async(v12, *(dispatch_block_t *)(a1 + 48));

}

void sub_1000B2ED0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000B2EE4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  id v12;
  void *v13;
  id v14;
  NSObject *v15;
  void *v16;
  dispatch_queue_global_t global_queue;
  NSObject *v18;
  _QWORD block[4];
  id v20;
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setWaitingForDetailedStats:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rawStats"));
  v4 = objc_msgSend(v3, "copy");

  v5 = objc_msgSend(v4, "mutableCopy");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("octStatus")));
  objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("octStatus"), v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("octStatusError")));
  objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("octStatusError"), v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("mteStatus")));
  objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("mteStatus"), v8);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("mteStatusError")));
  objc_msgSend(v5, "fm_safelyMapKey:toObject:", CFSTR("mteStatusError"), v9);

  v10 = sub_1000031B8();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Both Oct & Mte beacon stats have been fetched.", buf, 2u);
  }

  v12 = objc_msgSend(v5, "copy");
  objc_msgSend(WeakRetained, "setRawStats:", v12);

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rawStats"));
  +[FMPreferencesUtil setDictionary:forKey:inDomain:](FMPreferencesUtil, "setDictionary:forKey:inDomain:", v13, off_100305910, kFMDNotBackedUpPrefDomain);

  if ((objc_msgSend(v4, "isEqualToDictionary:", v5) & 1) == 0)
  {
    v14 = sub_1000031B8();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Detailed beacon stats have changed. Sending the updated stats to the server", buf, 2u);
    }

    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "statsChangeHandler"));
    if (v16)
    {
      global_queue = dispatch_get_global_queue(0, 0);
      v18 = objc_claimAutoreleasedReturnValue(global_queue);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000B3198;
      block[3] = &unk_1002C2060;
      v20 = v16;
      dispatch_async(v18, block);

    }
  }

}

uint64_t sub_1000B3198(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000B3220(id a1)
{
  __CFNotificationCenter *DarwinNotifyCenter;

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, CFSTR("com.apple.icloud.findmydeviced.fetch_spstats"), 0, 0, 1u);
}

void sub_1000B33F4(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("com.apple.icloud.findmydeviced.registerDigestSerialQueue", 0);
  v2 = (void *)qword_100306928;
  qword_100306928 = (uint64_t)v1;

}

void sub_1000B3698(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000B36AC(uint64_t a1)
{
  id WeakRetained;
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  id v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412546;
    v6 = objc_opt_class(WeakRetained, v4);
    v7 = 2048;
    v8 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) will cancel", (uint8_t *)&v5, 0x16u);
  }

  objc_msgSend(WeakRetained, "setCancelled:", 1);
}

void sub_1000B40A4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = objc_msgSend(a2, "mutableCopy");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[FMDBluetoothAccessory volatileKeysToExcludeFromRegisterDigest](FMDBluetoothAccessory, "volatileKeysToExcludeFromRegisterDigest"));
  objc_msgSend(v4, "removeObjectsForKeys:", v3);

  objc_msgSend(*(id *)(a1 + 32), "addObject:", v4);
}

void sub_1000B4108(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", CFSTR("authToken.*,"), 1, 0));
  v2 = (void *)qword_100306930;
  qword_100306930 = v1;

}

void sub_1000B47AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  uint64_t v25;

  _Block_object_dispose((const void *)(v25 - 176), 8);
  _Block_object_dispose((const void *)(v25 - 240), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B4824(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000B4834(uint64_t a1)
{

}

void sub_1000B483C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  unsigned __int8 v20;
  id v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  unsigned int v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int v37;
  uint64_t v38;
  __int16 v39;
  void *v40;
  __int16 v41;
  uint64_t v42;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "provider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[RegisterAction _registerDigestPrefKeyForAccount:](RegisterAction, "_registerDigestPrefKeyForAccount:", v3));

  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_registrationInformationDigest:", byte_100306940));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  if (qword_100306910
    && objc_msgSend((id)qword_100306910, "isEqualToData:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)))
  {
    v8 = sub_1000031B8();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v11 = objc_opt_class(*(_QWORD *)(a1 + 32), v10);
      v12 = *(void **)(a1 + 32);
      v13 = *(_QWORD *)(a1 + 40);
      v37 = 138412802;
      v38 = v11;
      v39 = 2048;
      v40 = v12;
      v41 = 2112;
      v42 = v13;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Not sending register with cause %@ because there is already another register with the same registration information in-progress", (uint8_t *)&v37, 0x20u);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 0;
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    v14 = (void *)qword_100306918;
    if (!qword_100306918)
    {
      v15 = objc_claimAutoreleasedReturnValue(+[FMPreferencesUtil dataForKey:inDomain:](FMPreferencesUtil, "dataForKey:inDomain:", v4, kFMDNotBackedUpPrefDomain));
      v16 = (void *)qword_100306918;
      qword_100306918 = v15;

      v14 = (void *)qword_100306918;
    }
    v17 = v14;
    v18 = v17;
    if (qword_100306910
      || !v17
      || !objc_msgSend(v17, "isEqualToData:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)))
    {
      goto LABEL_26;
    }
    if ((byte_100306940 & 1) == 0)
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[FMDDaemon sharedInstance](FMDDaemon, "sharedInstance"));
      if ((objc_msgSend(v19, "isFirstRunAfterBoot") & 1) != 0)
      {
        v20 = objc_msgSend(*(id *)(a1 + 32), "_shouldThrottleDeviceRestartRegister");

        if ((v20 & 1) == 0)
        {
          v21 = sub_1000031B8();
          v22 = objc_claimAutoreleasedReturnValue(v21);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
          {
            v23 = *(_QWORD *)(a1 + 40);
            v37 = 138543362;
            v38 = v23;
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Reg-info unchanged but forcing register %{public}@", (uint8_t *)&v37, 0xCu);
          }
LABEL_22:

LABEL_26:
          goto LABEL_27;
        }
      }
      else
      {

      }
      if ((byte_100306940 & 1) == 0)
      {
        v24 = (void *)objc_claimAutoreleasedReturnValue(+[FMDStartupRegisterManager sharedInstance](FMDStartupRegisterManager, "sharedInstance"));
        v25 = objc_msgSend(v24, "shouldForceRegisterOnStartup");

        if (v25)
        {
          v26 = sub_1000031B8();
          v22 = objc_claimAutoreleasedReturnValue(v26);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
          {
            v27 = *(_QWORD *)(a1 + 40);
            v28 = (void *)objc_claimAutoreleasedReturnValue(+[FMDStartupRegisterManager sharedInstance](FMDStartupRegisterManager, "sharedInstance"));
            v37 = 138543618;
            v38 = v27;
            v39 = 2114;
            v40 = v28;
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Reg-info unchanged but forcing register %{public}@ due to %{public}@", (uint8_t *)&v37, 0x16u);

          }
          goto LABEL_22;
        }
      }
    }
    v29 = sub_1000031B8();
    v30 = objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      v31 = *(_QWORD *)(a1 + 40);
      v37 = 138543362;
      v38 = v31;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "Reg-info unchanged. Ignoring register %{public}@", (uint8_t *)&v37, 0xCu);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 0;
    goto LABEL_26;
  }
LABEL_27:
  if (objc_msgSend(*(id *)(a1 + 32), "cancelled"))
  {
    v32 = sub_1000031B8();
    v33 = objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      v35 = objc_opt_class(*(_QWORD *)(a1 + 32), v34);
      v36 = *(void **)(a1 + 32);
      v37 = 138412546;
      v38 = v35;
      v39 = 2048;
      v40 = v36;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) cancelled by action manager", (uint8_t *)&v37, 0x16u);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 0;
  }

}

id sub_1000B4C40(uint64_t a1)
{
  FMDActingRequestDecorator *v2;
  void *v3;
  void *v4;

  v2 = objc_alloc_init(FMDActingRequestDecorator);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator registerDeviceContextForAccount:](v2, "registerDeviceContextForAccount:", v3));

  objc_msgSend(v4, "fm_safelyMapKey:toObject:", CFSTR("cause"), *(_QWORD *)(a1 + 40));
  return v4;
}

id sub_1000B4CB8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "deviceInfoForAccount:", v3));

  return v4;
}

void sub_1000B4D20(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(+[RegisterAction sharedregisterDigestSerialQueue](RegisterAction, "sharedregisterDigestSerialQueue"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000B4DDC;
  v6[3] = &unk_1002C4530;
  v7 = v3;
  v5 = v3;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  dispatch_async(v4, v6);

  objc_destroyWeak(&v8);
}

void sub_1000B4DDC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id WeakRetained;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;

  v2 = *(id *)(a1 + 32);
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "digestData"));
  v4 = (void *)qword_100306910;
  qword_100306910 = v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v6 = sub_1000031B8();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v9 = objc_opt_class(WeakRetained, v8);
    v11 = objc_opt_class(*(_QWORD *)(a1 + 32), v10);
    v12 = *(_QWORD *)(a1 + 32);
    v13 = 138413058;
    v14 = v9;
    v15 = 2048;
    v16 = WeakRetained;
    v17 = 2112;
    v18 = v11;
    v19 = 2048;
    v20 = v12;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@(0x%lX)-%@(0x%lX) Set inProgressRegisterDigest to newRegisterDigest", (uint8_t *)&v13, 0x2Au);
  }

}

void sub_1000B4EFC(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  id v6;
  NSObject *v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  NSObject *v12;
  _BOOL4 v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  NSObject *v19;
  void *v20;
  id v21;
  NSObject *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  char *v29;
  char *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void **v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  void *v46;
  id v47;
  _QWORD v48[4];
  id v49;
  id v50;
  _QWORD block[4];
  id v52;
  id v53;
  id v54;
  uint8_t buf[4];
  void *v56;
  __int16 v57;
  id v58;
  __int16 v59;
  void *v60;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v5 = objc_loadWeakRetained((id *)(a1 + 64));
  v6 = v3;
  if ((objc_msgSend(v6, "willRetry") & 1) == 0)
  {
    v7 = objc_claimAutoreleasedReturnValue(+[RegisterAction sharedregisterDigestSerialQueue](RegisterAction, "sharedregisterDigestSerialQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000B54C0;
    block[3] = &unk_1002C1BA0;
    v52 = v6;
    v53 = WeakRetained;
    v8 = v52;
    v54 = v8;
    dispatch_async(v7, block);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "httpResponseError"));
    if (v9
      || (uint64_t)objc_msgSend(v8, "httpResponseStatus") < 200
      || (uint64_t)objc_msgSend(v8, "httpResponseStatus") > 399)
    {

LABEL_6:
      v10 = objc_msgSend(v8, "cancelled");
      v11 = sub_1000031B8();
      v12 = objc_claimAutoreleasedReturnValue(v11);
      v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
      if (v10)
      {
        if (v13)
        {
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "fm_logID"));
          *(_DWORD *)buf = 138412290;
          v56 = v14;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);

        }
      }
      else if (v13)
      {
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "fm_logID"));
        v16 = objc_msgSend(v8, "httpResponseStatus");
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "httpResponseError"));
        *(_DWORD *)buf = 138412802;
        v56 = v15;
        v57 = 2048;
        v58 = v16;
        v59 = 2112;
        v60 = v17;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      }
      objc_msgSend(v5, "registerDidFail");
LABEL_12:

      goto LABEL_13;
    }
    if ((objc_msgSend(v8, "cancelled") & 1) != 0)
      goto LABEL_6;
    v18 = sub_1000031B8();
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "fm_logID"));
      v21 = objc_msgSend(v8, "httpResponseStatus");
      *(_DWORD *)buf = 138412546;
      v56 = v20;
      v57 = 2048;
      v58 = v21;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", buf, 0x16u);

    }
    v22 = objc_claimAutoreleasedReturnValue(+[RegisterAction sharedregisterDigestSerialQueue](RegisterAction, "sharedregisterDigestSerialQueue"));
    v48[0] = _NSConcreteStackBlock;
    v48[1] = 3221225472;
    v48[2] = sub_1000B55D0;
    v48[3] = &unk_1002C13E8;
    v23 = v8;
    v49 = v23;
    v50 = WeakRetained;
    dispatch_async(v22, v48);

    objc_msgSend(v5, "registerDidSucceed");
    byte_100306940 = 1;
    if (objc_msgSend(v23, "httpResponseStatus") == (id)200)
    {
      v24 = (void *)objc_claimAutoreleasedReturnValue(+[FMDStartupRegisterManager sharedInstance](FMDStartupRegisterManager, "sharedInstance"));
      objc_msgSend(v24, "eventDidOccur:", 2);

      v43 = _NSConcreteStackBlock;
      v44 = 3221225472;
      v45 = sub_1000B570C;
      v46 = &unk_1002C1328;
      v47 = v5;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, &v43);
      v25 = v47;
    }
    else
    {
      if (objc_msgSend(v23, "httpResponseStatus") != (id)204)
      {
LABEL_22:
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "httpResponseHeaders", v43, v44, v45, v46));
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKey:", CFSTR("X-Apple-Register-Interval")));

        if (v27)
        {
          v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
          v29 = (char *)objc_msgSend(v28, "fm_epoch");
          v30 = &v29[(_QWORD)objc_msgSend(v27, "longLongValue")];

          v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate fm_dateFromEpoch:](NSDate, "fm_dateFromEpoch:", v30));
          v32 = (void *)objc_claimAutoreleasedReturnValue(+[ActionManager sharedManager](ActionManager, "sharedManager"));
          objc_msgSend(v32, "setNextRegisterDate:", v31);

        }
        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "httpResponseHeaders"));
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "objectForKey:", CFSTR("X-Apple-DeviceRestart-Register-Interval")));

        if (v34)
        {
          v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "provider"));
          v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "account"));
          v37 = (void *)objc_claimAutoreleasedReturnValue(+[RegisterAction _deviceRestartRegisterIntervalConfigPrefKeyForAccount:](RegisterAction, "_deviceRestartRegisterIntervalConfigPrefKeyForAccount:", v36));

          +[FMPreferencesUtil setString:forKey:inDomain:](FMPreferencesUtil, "setString:forKey:inDomain:", v34, v37, kFMDNotBackedUpPrefDomain);
        }
        if (objc_msgSend(*(id *)(a1 + 40), "isEqualToString:", CFSTR("DeviceRestart")))
        {
          v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "provider"));
          v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "account"));
          v40 = (void *)objc_claimAutoreleasedReturnValue(+[RegisterAction _lastDeviceRestartRegisterTimePrefKeyForAccount:](RegisterAction, "_lastDeviceRestartRegisterTimePrefKeyForAccount:", v39));

          v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
          +[FMPreferencesUtil setDate:forKey:inDomain:](FMPreferencesUtil, "setDate:forKey:inDomain:", v41, v40, kFMDNotBackedUpPrefDomain);

        }
        v42 = *(_QWORD *)(a1 + 48);
        if (v42)
          (*(void (**)(void))(v42 + 16))();

        goto LABEL_12;
      }
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[FMDStartupRegisterManager sharedInstance](FMDStartupRegisterManager, "sharedInstance"));
      objc_msgSend(v25, "eventDidOccur:", 3);
    }

    goto LABEL_22;
  }
LABEL_13:

}

void sub_1000B54C0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;

  v2 = qword_100306910;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestData"));

  if ((void *)v2 == v3)
  {
    v4 = (void *)qword_100306910;
    qword_100306910 = 0;

    v5 = sub_1000031B8();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v8 = objc_opt_class(*(_QWORD *)(a1 + 40), v7);
      v9 = *(_QWORD *)(a1 + 40);
      v11 = objc_opt_class(*(_QWORD *)(a1 + 48), v10);
      v12 = *(_QWORD *)(a1 + 48);
      v13 = 138413058;
      v14 = v8;
      v15 = 2048;
      v16 = v9;
      v17 = 2112;
      v18 = v11;
      v19 = 2048;
      v20 = v12;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@(0x%lX)-%@(0x%lX) Set inProgressRegisterDigest to nil", (uint8_t *)&v13, 0x2Au);
    }

  }
}

void sub_1000B55D0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestData"));
  v3 = (void *)qword_100306918;
  qword_100306918 = v2;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestData"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "digestKey"));
  +[FMPreferencesUtil setData:forKey:inDomain:](FMPreferencesUtil, "setData:forKey:inDomain:", v4, v5, kFMDNotBackedUpPrefDomain);

  +[FMPreferencesUtil synchronizeDomain:](FMPreferencesUtil, "synchronizeDomain:", kFMDNotBackedUpPrefDomain);
  v6 = sub_1000031B8();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v9 = objc_opt_class(*(_QWORD *)(a1 + 40), v8);
    v10 = *(_QWORD *)(a1 + 40);
    v11 = 138412546;
    v12 = v9;
    v13 = 2048;
    v14 = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Save newRegisterDigest to pref", (uint8_t *)&v11, 0x16u);
  }

}

void sub_1000B570C(uint64_t a1)
{
  FMDActingRequestDecorator *v2;
  FMDActingRequestDecorator *v3;
  QCAction *v4;
  void *v5;
  void *v6;
  QCAction *v7;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;

  v2 = [FMDActingRequestDecorator alloc];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000B5870;
  v10[3] = &unk_1002C1D20;
  v11 = *(id *)(a1 + 32);
  v3 = -[FMDActingRequestDecorator initWithDeviceContextGenerator:deviceInfoGenerator:serverContextGenerator:requestHeaderGenerator:](v2, "initWithDeviceContextGenerator:deviceInfoGenerator:serverContextGenerator:requestHeaderGenerator:", &stru_1002C4EF0, v10, 0, 0);
  v4 = [QCAction alloc];
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverInteractionController"));
  v7 = -[QCAction initWithAccount:shutdownActivityPending:serverInteractionController:](v4, "initWithAccount:shutdownActivityPending:serverInteractionController:", v5, 0, v6);

  -[QCAction setRequestDecorator:](v7, "setRequestDecorator:", v3);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[ActionManager sharedManager](ActionManager, "sharedManager"));
  v9 = objc_msgSend(v8, "enqueueAction:", v7);

}

NSDictionary *__cdecl sub_1000B5834(id a1)
{
  FMDActingRequestDecorator *v1;
  void *v2;

  v1 = objc_alloc_init(FMDActingRequestDecorator);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FMDActingRequestDecorator standardDeviceContext](v1, "standardDeviceContext"));

  return (NSDictionary *)v2;
}

id sub_1000B5870(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ServerDeviceInfo sharedInstance](ServerDeviceInfo, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "account"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "deviceInfoForAccount:", v3));

  return v4;
}

void sub_1000B5D68(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;

  v2 = sub_1000031B8();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "authId"));
    v8 = 138412290;
    v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Delete Register Digest for account %@", (uint8_t *)&v8, 0xCu);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[RegisterAction _registerDigestPrefKeyForAccount:](RegisterAction, "_registerDigestPrefKeyForAccount:", *(_QWORD *)(a1 + 32)));
  +[FMPreferencesUtil removeKey:inDomain:](FMPreferencesUtil, "removeKey:inDomain:", v5, kFMDNotBackedUpPrefDomain);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[RegisterAction _lastForcedRegisterTimePrefKeyForAccount:](RegisterAction, "_lastForcedRegisterTimePrefKeyForAccount:", *(_QWORD *)(a1 + 32)));
  +[FMPreferencesUtil removeKey:inDomain:](FMPreferencesUtil, "removeKey:inDomain:", v6, kFMDNotBackedUpPrefDomain);
  v7 = (void *)qword_100306918;
  qword_100306918 = 0;

}

void sub_1000B9170(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000B9184(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "tasksWithCompletion:", &stru_1002C4F58);

}

void sub_1000B91B8(id a1, NSArray *a2)
{
  NSArray *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  v2 = a2;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = -[NSArray countByEnumeratingWithState:objects:count:](v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)v6), "resume");
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = -[NSArray countByEnumeratingWithState:objects:count:](v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

void sub_1000B93A4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[4];
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](NSMutableURLRequest, "requestWithURL:", *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setHTTPMethod:", CFSTR("GET"));
  objc_msgSend(v2, "setAllHTTPHeaderFields:", *(_QWORD *)(a1 + 40));
  if (*(_QWORD *)(a1 + 48))
    objc_msgSend(v2, "setHTTPBody:");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "session"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000B948C;
  v5[3] = &unk_1002C4F80;
  v6 = *(id *)(a1 + 64);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "downloadTaskWithRequest:completionHandler:", v2, v5));

  objc_msgSend(v4, "resume");
}

void sub_1000B948C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v12 = a3;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a4;
  v9 = a2;
  v10 = objc_msgSend(v12, "statusCode");
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "allHeaderFields"));
  (*(void (**)(uint64_t, id, void *, _QWORD, id, id))(v7 + 16))(v7, v10, v11, 0, v9, v8);

}

void sub_1000B9610(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000B9624(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "tasksWithCompletion:", &stru_1002C4FC8);

}

void sub_1000B9658(id a1, NSArray *a2)
{
  NSArray *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  v2 = a2;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = -[NSArray countByEnumeratingWithState:objects:count:](v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)v6), "cancel");
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = -[NSArray countByEnumeratingWithState:objects:count:](v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

uint64_t sub_1000B97DC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1000BA154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BA1C8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000BA1D8(uint64_t a1)
{

}

void sub_1000BA1E0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v6 = a2;
  v7 = a4;
  if (v7)
  {
    v8 = sub_1000031B8();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_10022DB7C();
  }
  else
  {
    v9 = objc_msgSend(objc_alloc((Class)NSString), "initWithData:encoding:", v6, 4);
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v9);
    v10 = sub_10005342C();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = *(_QWORD *)(a1 + 32);
      v13 = 138412290;
      v14 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Watch Migration: decrypted token %@", (uint8_t *)&v13, 0xCu);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "signal");

}

void sub_1000BA5D4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  FMDCipherKeychainItemAdaptor *v21;
  void *v22;
  void *v23;
  void *v24;
  unsigned __int8 v25;
  id v26;
  NSObject *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint8_t buf[4];
  id v38;

  v7 = a3;
  v8 = a4;
  if (v8)
  {
    v9 = sub_1000031B8();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v38 = v8;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "FMDUnregisterTokenStore failed to encrypt token %@", buf, 0xCu);
    }
  }
  else
  {
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "base64EncodedStringWithOptions:", 0));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    objc_msgSend(v11, "fm_safeSetObject:forKey:", v10, CFSTR("encryptedToken"));
    v12 = *(void **)(a1 + 32);
    if (v12)
      v13 = v12;
    else
      v13 = (id)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", 691200.0));
    v14 = v13;
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[FMSystemInfo sharedInstance](FMSystemInfo, "sharedInstance"));
    v16 = objc_msgSend(v15, "isInternalBuild");

    if (v16)
    {
      v17 = (uint64_t)+[FMPreferencesUtil integerForKey:inDomain:](FMPreferencesUtil, "integerForKey:inDomain:", CFSTR("UnregisterTokenExpiry"), kFMDNotBackedUpPrefDomain);
      if (v17 >= 1)
      {
        v18 = objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", (double)v17));

        v14 = (void *)v18;
      }
    }
    v36 = v14;
    objc_msgSend(v11, "fm_safeSetObject:forKey:", v14, CFSTR("expiryDate"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[FMDProtectedContextManager sharedManager](FMDProtectedContextManager, "sharedManager"));
    v20 = objc_msgSend(v19, "saveContext:forContextKey:dataProtectionClass:", v11, *(_QWORD *)(a1 + 40), 1);

    v21 = -[FMDCipherKeychainItemAdaptor initWithCipher:]([FMDCipherKeychainItemAdaptor alloc], "initWithCipher:", v7);
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "bundleIdentifier"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[FMKeychainManager sharedInstance](FMKeychainManager, "sharedInstance"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(-[FMDCipherKeychainItemAdaptor rawData](v21, "rawData"));
    v25 = objc_msgSend(v23, "setData:forAccount:service:synchronizable:dataProtectionClass:migratable:", v24, *(_QWORD *)(a1 + 56), v22, 0, 1, 0);

    if ((v25 & 1) != 0)
    {
      v26 = sub_10005342C();
      v27 = objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        v28 = *(void **)(a1 + 64);
        *(_DWORD *)buf = 138412290;
        v38 = v28;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Watch Migration: Saved token and cipher for %@", buf, 0xCu);
      }
    }
    else
    {
      v29 = sub_1000031B8();
      v27 = objc_claimAutoreleasedReturnValue(v29);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        sub_10022DBDC(a1, v27, v30, v31, v32, v33, v34, v35);
    }

  }
}

void sub_1000BAAF0(_QWORD *a1, void *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v3 = (void *)a1[4];
  v4 = a1[5];
  v5 = a2;
  v7 = (void *)objc_opt_class(v4, v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "accessoryIdentifier"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "tokenKeyForIdentifier:", v8));
  objc_msgSend(v3, "addObject:", v9);

  v10 = (void *)a1[6];
  v12 = (void *)objc_opt_class(a1[5], v11);
  v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "accessoryIdentifier"));

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "keychainLookupKeyForIdentifier:", v14));
  objc_msgSend(v10, "addObject:", v13);

}

void sub_1000BABBC(id *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  NSObject *v9;
  id v10;
  unsigned __int8 v11;
  id v12;
  id v13;
  NSObject *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint8_t buf[4];
  id v21;

  v3 = a2;
  if (objc_msgSend(v3, "hasPrefix:", CFSTR("AccessoryUnregisterToken")))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[FMDProtectedContextManager sharedManager](FMDProtectedContextManager, "sharedManager"));
    v19 = 0;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "contextForKey:contextUUID:error:", v3, 0, &v19));
    v6 = v19;

    if (v6 || !v5)
      goto LABEL_18;
    v7 = objc_msgSend(a1[4], "containsObject:", v3);
    if ((v7 & 1) == 0)
    {
      v8 = sub_1000031B8();
      v9 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "FMDUnregisterTokenStore token Key no longer valid.", buf, 2u);
      }

    }
    v10 = a1[5];
    v18 = 0;
    v11 = objc_msgSend(v10, "isTokenDictionaryValid:error:", v5, &v18);
    v12 = v18;
    if ((v11 & 1) != 0)
    {
      if ((v7 & 1) != 0)
      {
LABEL_17:

LABEL_18:
        goto LABEL_19;
      }
    }
    else
    {
      v13 = sub_1000031B8();
      v14 = objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v21 = v12;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "FMDUnregisterTokenStore token expired %@", buf, 0xCu);
      }

    }
    objc_msgSend(a1[5], "removeUnregisterTokenForKey:", v3);
    v15 = objc_msgSend(a1[4], "indexOfObject:", v3);
    if (v15 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      v16 = v15;
      if (v15 < objc_msgSend(a1[6], "count"))
      {
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "objectAtIndex:", v16));
        objc_msgSend(a1[5], "removeKeychainItemForKey:", v17);

      }
    }
    goto LABEL_17;
  }
LABEL_19:

}

void sub_1000BADC8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  int v6;
  id v7;

  v3 = a2;
  if (objc_msgSend(v3, "hasPrefix:", CFSTR("AccessoryUnregisterToken"))
    && (objc_msgSend(*(id *)(a1 + 32), "containsObject:", v3) & 1) == 0)
  {
    v4 = sub_1000031B8();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = 138412290;
      v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FMDUnregisterTokenStore removing orphaned keychain item %@.", (uint8_t *)&v6, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 40), "removeKeychainItemForKey:", v3);
  }

}

void sub_1000BAF60(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "hasPrefix:", CFSTR("AccessoryUnregisterToken")))
    objc_msgSend(*(id *)(a1 + 32), "removeUnregisterTokenForKey:", v3);

}

void sub_1000BAFAC(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "hasPrefix:", CFSTR("AccessoryUnregisterToken")))
    objc_msgSend(*(id *)(a1 + 32), "removeKeychainItemForKey:", v3);

}

void sub_1000BBDFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BBE2C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  _QWORD v17[4];
  id v18;
  id v19;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = *(void **)(a1 + 32);
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("FMDSupportedAccessoryRegistryLocalVersionKey")));
    v5 = objc_msgSend(v4, "integerValue");

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "supportedAccessories"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", CFSTR("FMDSupportedAccessoryRegistryLocalVersionKey")));
    v8 = objc_msgSend(v7, "integerValue");

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "supportedAccessories"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKey:", CFSTR("FMDSupportedAccessoryRegistryVersionKey")));
    v11 = objc_msgSend(v10, "integerValue");

    if ((uint64_t)v11 <= 0 && (uint64_t)v5 > (uint64_t)v8)
    {
      objc_msgSend(WeakRetained, "setSupportedAccessories:", *(_QWORD *)(a1 + 32));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataArchiver"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "supportedAccessories"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "saveDictionary:", v13));

      if (v14)
      {
        v15 = sub_1000031B8();
        v16 = objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          sub_100228A90();

      }
      if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 40), "supportedAccessoryRegistryDidUpdateSupportedAccessories:") & 1) != 0)
      {
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472;
        v17[2] = sub_1000BC008;
        v17[3] = &unk_1002C13E8;
        v18 = *(id *)(a1 + 40);
        v19 = WeakRetained;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v17);

      }
    }
  }

}

id sub_1000BC008(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "supportedAccessoryRegistryDidUpdateSupportedAccessories:", *(_QWORD *)(a1 + 40));
}

void sub_1000BC398(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000BC3AC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  uint64_t v10;
  FMDSupportedAccessory *v11;
  void *v12;
  FMDSupportedAccessory *v13;
  void *v14;
  id v15;
  NSObject *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  id obj;
  _QWORD block[4];
  id v36;
  void *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint8_t buf[4];
  id v43;
  __int16 v44;
  id v45;
  _BYTE v46[128];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("supportedAccessories")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  obj = v3;
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v46, 16);
  v32 = v4;
  v33 = WeakRetained;
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v39;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v39 != v8)
          objc_enumerationMutation(obj);
        v10 = *(_QWORD *)(*((_QWORD *)&v38 + 1) + 8 * (_QWORD)i);
        v11 = [FMDSupportedAccessory alloc];
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetRegistry"));
        v13 = -[FMDSupportedAccessory initWithDictionary:assetRegistry:](v11, "initWithDictionary:assetRegistry:", v10, v12);

        v14 = (void *)objc_claimAutoreleasedReturnValue(-[FMDSupportedAccessory accessoryIdentifier](v13, "accessoryIdentifier"));
        objc_msgSend(v4, "fm_safeSetObject:forKey:", v13, v14);

        v15 = sub_1000031B8();
        v16 = objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          v17 = (void *)objc_claimAutoreleasedReturnValue(-[FMDSupportedAccessory deviceVendor](v13, "deviceVendor"));
          v18 = objc_msgSend(v17, "integerValue");
          v19 = (void *)objc_claimAutoreleasedReturnValue(-[FMDSupportedAccessory deviceProductId](v13, "deviceProductId"));
          v20 = objc_msgSend(v19, "integerValue");
          *(_DWORD *)buf = 134218240;
          v43 = v18;
          v44 = 2048;
          v45 = v20;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "New supported accessory added %li, %li", buf, 0x16u);

          v4 = v32;
          WeakRetained = v33;

        }
        v21 = (void *)objc_claimAutoreleasedReturnValue(-[FMDSupportedAccessory assets](v13, "assets"));
        objc_msgSend(v5, "addObjectsFromArray:", v21);

      }
      v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v46, 16);
    }
    while (v7);
  }

  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetRegistry"));
  objc_msgSend(v22, "removeUntrackedAssets:", v5);

  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetRegistry"));
  objc_msgSend(v23, "downloadAssets:", v5);

  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("accConfigVersion")));
  objc_msgSend(v4, "fm_safelySetObject:forKey:", v24, CFSTR("FMDSupportedAccessoryRegistryVersionKey"));
  objc_msgSend(WeakRetained, "setSupportedAccessories:", v4);
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataArchiver"));
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "supportedAccessories"));
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "saveDictionary:", v26));

  if (v27)
  {
    v28 = sub_1000031B8();
    v29 = objc_claimAutoreleasedReturnValue(v28);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      sub_100228A90();

  }
  v30 = *(_QWORD *)(a1 + 40);
  if (v30)
    (*(void (**)(void))(v30 + 16))();
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "delegate"));
  if ((objc_opt_respondsToSelector(v31, "supportedAccessoryRegistryDidUpdateSupportedAccessories:") & 1) != 0)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000BC798;
    block[3] = &unk_1002C13E8;
    v36 = v31;
    v37 = v33;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

id sub_1000BC798(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "supportedAccessoryRegistryDidUpdateSupportedAccessories:", *(_QWORD *)(a1 + 40));
}

void sub_1000BC86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BC884(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000BC894(uint64_t a1)
{

}

void sub_1000BC89C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  _UNKNOWN **v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supportedAccessories"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKey:", CFSTR("FMDSupportedAccessoryRegistryVersionKey")));
  v3 = (void *)v2;
  if (v2)
    v4 = (_UNKNOWN **)v2;
  else
    v4 = &off_1002D82C0;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v4);

}

void sub_1000BC9AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000BC9C0(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "supportedAccessories"));
  v3 = objc_msgSend(v2, "mutableCopy");

  objc_msgSend(v3, "removeObjectForKey:", CFSTR("FMDSupportedAccessoryRegistryVersionKey"));
  objc_msgSend(WeakRetained, "setSupportedAccessories:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataArchiver"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "supportedAccessories"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "saveDictionary:", v5));

  if (v6)
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_100228A90();

  }
}

void sub_1000BD154(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v4 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32), v3), "defaultStorageLocation");
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v10 = 0;
  objc_msgSend(v2, "removeItemAtURL:error:", v5, &v10);
  v6 = v10;

  if (v6 && (objc_msgSend(v6, "fm_isFileNotFoundError") & 1) == 0)
  {
    v7 = sub_1000031B8();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10022DD40(v6, v8);

  }
  objc_msgSend(*(id *)(a1 + 32), "setSupportedAccessories:", &__NSDictionary0__struct);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetRegistry"));
  objc_msgSend(v9, "clearAssetRegistry");

}

void sub_1000BD404(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  id v7;

  v7 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "fileURL"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "path"));
  v6 = objc_msgSend(v3, "fileExistsAtPath:", v5);

  if ((v6 & 1) == 0)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v7);

}

void sub_1000BD81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000BD848(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  if (*(_QWORD *)(a1 + 32))
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "supportedAccessories"));
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32)));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

  }
}

void sub_1000BD9EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000BDA00(uint64_t a1)
{
  id WeakRetained;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSSet *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  id v14;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (objc_msgSend(WeakRetained, "defaultAccessoriesEnabled"))
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "defaultSupportedAccessoriesIfEnabled:", objc_msgSend(*(id *)(a1 + 32), "defaultAccessoriesEnabled")));
    objc_msgSend(WeakRetained, "setSupportedAccessories:", v3);
  }
  else
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataArchiver"));
    v6 = objc_opt_class(FMDSupportedAccessory, v5);
    v8 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v6, objc_opt_class(FMDAccessoryIdentifier, v7), 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    v14 = 0;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "readDictionaryAndClasses:error:", v9, &v14));
    v3 = v14;

    if ((objc_msgSend(v3, "fm_isFileNotFoundError") & 1) == 0 && (!v10 || v3))
    {

      v11 = sub_1000031B8();
      v12 = objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_10022DE84();

      v13 = (void *)objc_claimAutoreleasedReturnValue(+[FMDEventLoggerGeneral sharedInstance](FMDEventLoggerGeneral, "sharedInstance"));
      objc_msgSend(v13, "sendError:forEventName:", v3, CFSTR("FMDSupportedAccessoryRegistryFailedReadEventName"));

      v10 = &__NSDictionary0__struct;
    }
    objc_msgSend(WeakRetained, "setSupportedAccessories:", v10);

  }
}

void sub_1000BDD5C(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  v3 = (id)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  objc_msgSend(v3, "endTransaction:", *(_QWORD *)(a1 + 32));

}

void sub_1000BDEA8(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  v3 = (id)objc_claimAutoreleasedReturnValue(+[FMXPCTransactionManager sharedInstance](FMXPCTransactionManager, "sharedInstance"));
  objc_msgSend(v3, "endTransaction:", *(_QWORD *)(a1 + 32));

}

uint64_t FMDNanoSupportProtoSignedDataV4ReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  int v10;
  BOOL v11;
  char v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  uint64_t Data;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t String;
  uint64_t v26;
  void *v27;

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        v4 = 0;
        v5 = 0;
        v6 = 0;
        while (1)
        {
          v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
            break;
          v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0)
            goto LABEL_11;
          v4 += 7;
          v9 = v5++ >= 9;
          if (v9)
          {
            v6 = 0;
            v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          v6 = 0;
LABEL_13:
        if (v10)
          v11 = 1;
        else
          v11 = (v6 & 7) == 4;
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              v12 = 0;
              v13 = 0;
              v14 = 0;
              break;
            case 2u:
              Data = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(Data);
              v20 = 48;
              goto LABEL_34;
            case 3u:
              v21 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v21);
              v20 = 56;
              goto LABEL_34;
            case 4u:
              v22 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v22);
              v20 = 32;
              goto LABEL_34;
            case 5u:
              v23 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v23);
              v20 = 16;
              goto LABEL_34;
            case 6u:
              v24 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v24);
              v20 = 8;
              goto LABEL_34;
            case 7u:
              String = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(String);
              v20 = 24;
              goto LABEL_34;
            case 8u:
              v26 = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(v26);
              v20 = 40;
LABEL_34:
              v27 = *(void **)(a1 + v20);
              *(_QWORD *)(a1 + v20) = v19;

              goto LABEL_35;
            default:
              result = PBReaderSkipValueWithTag(a2);
              if (!(_DWORD)result)
                return result;
LABEL_35:
              if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
                return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              continue;
          }
          while (1)
          {
            v15 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1 || v15 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
              break;
            v16 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0)
              goto LABEL_38;
            v12 += 7;
            v9 = v13++ >= 9;
            if (v9)
            {
              v14 = 0;
              goto LABEL_40;
            }
          }
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_38:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
            v14 = 0;
LABEL_40:
          *(_BYTE *)(a1 + 64) = v14 != 0;
          goto LABEL_35;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedSignatureV4ReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  int v10;
  uint64_t Data;
  uint64_t v13;
  uint64_t v14;
  uint64_t String;
  void *v16;

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      v4 = 0;
      v5 = 0;
      v6 = 0;
      while (1)
      {
        v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
          break;
        v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0)
          goto LABEL_11;
        v4 += 7;
        if (v5++ >= 9)
        {
          v6 = 0;
          v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        v6 = 0;
LABEL_13:
      if (v10 || (v6 & 7) == 4)
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      if ((v6 >> 3) == 2)
        break;
      if ((v6 >> 3) == 1)
      {
        Data = PBReaderReadData(a2);
        v13 = objc_claimAutoreleasedReturnValue(Data);
        v14 = 16;
LABEL_21:
        v16 = *(void **)(a1 + v14);
        *(_QWORD *)(a1 + v14) = v13;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag(a2) & 1) == 0)
        return 0;
LABEL_23:
      if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    String = PBReaderReadString(a2);
    v13 = objc_claimAutoreleasedReturnValue(String);
    v14 = 8;
    goto LABEL_21;
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t FMDNanoSupportProtoSignedDataV5ReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  int v10;
  BOOL v11;
  char v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  uint64_t Data;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t String;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        v4 = 0;
        v5 = 0;
        v6 = 0;
        while (1)
        {
          v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
            break;
          v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0)
            goto LABEL_11;
          v4 += 7;
          v9 = v5++ >= 9;
          if (v9)
          {
            v6 = 0;
            v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          v6 = 0;
LABEL_13:
        if (v10)
          v11 = 1;
        else
          v11 = (v6 & 7) == 4;
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              v12 = 0;
              v13 = 0;
              v14 = 0;
              break;
            case 2u:
              Data = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(Data);
              v20 = 72;
              goto LABEL_37;
            case 3u:
              v21 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v21);
              v20 = 80;
              goto LABEL_37;
            case 4u:
              v22 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v22);
              v20 = 56;
              goto LABEL_37;
            case 5u:
              v23 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v23);
              v20 = 40;
              goto LABEL_37;
            case 6u:
              v24 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v24);
              v20 = 24;
              goto LABEL_37;
            case 7u:
              v25 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v25);
              v20 = 8;
              goto LABEL_37;
            case 8u:
              v26 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v26);
              v20 = 32;
              goto LABEL_37;
            case 9u:
              String = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(String);
              v20 = 48;
              goto LABEL_37;
            case 0xAu:
              v28 = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(v28);
              v20 = 64;
              goto LABEL_37;
            case 0xBu:
              v29 = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(v29);
              v20 = 16;
LABEL_37:
              v30 = *(void **)(a1 + v20);
              *(_QWORD *)(a1 + v20) = v19;

              goto LABEL_38;
            default:
              result = PBReaderSkipValueWithTag(a2);
              if (!(_DWORD)result)
                return result;
LABEL_38:
              if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
                return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              continue;
          }
          while (1)
          {
            v15 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1 || v15 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
              break;
            v16 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0)
              goto LABEL_41;
            v12 += 7;
            v9 = v13++ >= 9;
            if (v9)
            {
              v14 = 0;
              goto LABEL_43;
            }
          }
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_41:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
            v14 = 0;
LABEL_43:
          *(_BYTE *)(a1 + 88) = v14 != 0;
          goto LABEL_38;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedSignatureV5ReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  int v10;
  uint64_t Data;
  uint64_t v13;
  uint64_t v14;
  uint64_t String;
  void *v16;

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      v4 = 0;
      v5 = 0;
      v6 = 0;
      while (1)
      {
        v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
          break;
        v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0)
          goto LABEL_11;
        v4 += 7;
        if (v5++ >= 9)
        {
          v6 = 0;
          v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        v6 = 0;
LABEL_13:
      if (v10 || (v6 & 7) == 4)
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      if ((v6 >> 3) == 2)
        break;
      if ((v6 >> 3) == 1)
      {
        Data = PBReaderReadData(a2);
        v13 = objc_claimAutoreleasedReturnValue(Data);
        v14 = 16;
LABEL_21:
        v16 = *(void **)(a1 + v14);
        *(_QWORD *)(a1 + v14) = v13;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag(a2) & 1) == 0)
        return 0;
LABEL_23:
      if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    String = PBReaderReadString(a2);
    v13 = objc_claimAutoreleasedReturnValue(String);
    v14 = 8;
    goto LABEL_21;
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedLostModeExitReadFrom(uint64_t a1, uint64_t a2)
{
  int v3;
  char v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v10;

  while (1)
  {
    v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
      return v3 == 0;
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      v3 = 1;
      return v3 == 0;
    }
    v4 = 0;
    v5 = 0;
    v6 = 0;
    while (1)
    {
      v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
        break;
      v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0)
        goto LABEL_11;
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      LOBYTE(v6) = 0;
LABEL_13:
    if (v3)
      v10 = 1;
    else
      v10 = (v6 & 7) == 4;
    if (v10)
      return v3 == 0;
    if ((PBReaderSkipValueWithTag(a2) & 1) == 0)
      return 0;
  }
}

uint64_t FMDNanoSupportProtoLostModeExitAuthReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  int v10;
  char v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t String;
  uint64_t v18;
  void *v19;
  uint64_t result;

  while (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      break;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    while (1)
    {
      v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
        break;
      v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0)
        goto LABEL_11;
      v4 += 7;
      v9 = v5++ >= 9;
      if (v9)
      {
        v6 = 0;
        v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      v6 = 0;
LABEL_13:
    if (v10 || (v6 & 7) == 4)
      break;
    if ((v6 >> 3) == 2)
    {
      String = PBReaderReadString(a2);
      v18 = objc_claimAutoreleasedReturnValue(String);
      v19 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = v18;

    }
    else if ((v6 >> 3) == 1)
    {
      v12 = 0;
      v13 = 0;
      v14 = 0;
      while (1)
      {
        v15 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1 || v15 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
          break;
        v16 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0)
          goto LABEL_30;
        v12 += 7;
        v9 = v13++ >= 9;
        if (v9)
        {
          v14 = 0;
          goto LABEL_32;
        }
      }
      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_30:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        v14 = 0;
LABEL_32:
      *(_BYTE *)(a1 + 16) = v14 != 0;
    }
    else
    {
      result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result)
        return result;
    }
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedSignatureReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  int v10;
  uint64_t String;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      v4 = 0;
      v5 = 0;
      v6 = 0;
      while (1)
      {
        v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
          break;
        v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0)
          goto LABEL_11;
        v4 += 7;
        if (v5++ >= 9)
        {
          v6 = 0;
          v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        v6 = 0;
LABEL_13:
      if (v10 || (v6 & 7) == 4)
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      switch((v6 >> 3))
      {
        case 1u:
          String = PBReaderReadString(a2);
          v13 = objc_claimAutoreleasedReturnValue(String);
          v14 = 8;
          goto LABEL_24;
        case 2u:
          v15 = PBReaderReadString(a2);
          v13 = objc_claimAutoreleasedReturnValue(v15);
          v14 = 32;
          goto LABEL_24;
        case 3u:
          v16 = PBReaderReadString(a2);
          v13 = objc_claimAutoreleasedReturnValue(v16);
          v14 = 24;
          goto LABEL_24;
        case 4u:
          v17 = PBReaderReadString(a2);
          v13 = objc_claimAutoreleasedReturnValue(v17);
          v14 = 16;
LABEL_24:
          v18 = *(void **)(a1 + v14);
          *(_QWORD *)(a1 + v14) = v13;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag(a2) & 1) == 0)
            return 0;
LABEL_25:
          if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedSignatureV3ReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  int v10;
  uint64_t Data;
  uint64_t v13;
  uint64_t v14;
  uint64_t String;
  void *v16;

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      v4 = 0;
      v5 = 0;
      v6 = 0;
      while (1)
      {
        v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
          break;
        v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0)
          goto LABEL_11;
        v4 += 7;
        if (v5++ >= 9)
        {
          v6 = 0;
          v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        v6 = 0;
LABEL_13:
      if (v10 || (v6 & 7) == 4)
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      if ((v6 >> 3) == 2)
        break;
      if ((v6 >> 3) == 1)
      {
        Data = PBReaderReadData(a2);
        v13 = objc_claimAutoreleasedReturnValue(Data);
        v14 = 16;
LABEL_21:
        v16 = *(void **)(a1 + v14);
        *(_QWORD *)(a1 + v14) = v13;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag(a2) & 1) == 0)
        return 0;
LABEL_23:
      if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    String = PBReaderReadString(a2);
    v13 = objc_claimAutoreleasedReturnValue(String);
    v14 = 8;
    goto LABEL_21;
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t FMDNanoSupportProtoSignedDataReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  int v10;
  BOOL v11;
  char v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  uint64_t Data;
  uint64_t v19;
  uint64_t v20;
  uint64_t String;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        v4 = 0;
        v5 = 0;
        v6 = 0;
        while (1)
        {
          v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
            break;
          v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0)
            goto LABEL_11;
          v4 += 7;
          v9 = v5++ >= 9;
          if (v9)
          {
            v6 = 0;
            v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          v6 = 0;
LABEL_13:
        if (v10)
          v11 = 1;
        else
          v11 = (v6 & 7) == 4;
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              v12 = 0;
              v13 = 0;
              v14 = 0;
              break;
            case 2u:
              Data = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(Data);
              v20 = 40;
              goto LABEL_34;
            case 3u:
              String = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(String);
              v20 = 56;
              goto LABEL_34;
            case 4u:
              v22 = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(v22);
              v20 = 32;
              goto LABEL_34;
            case 5u:
              v23 = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(v23);
              v20 = 24;
              goto LABEL_34;
            case 6u:
              v24 = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(v24);
              v20 = 48;
              goto LABEL_34;
            case 7u:
              v25 = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(v25);
              v20 = 8;
              goto LABEL_34;
            case 8u:
              v26 = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(v26);
              v20 = 16;
LABEL_34:
              v27 = *(void **)(a1 + v20);
              *(_QWORD *)(a1 + v20) = v19;

              goto LABEL_35;
            default:
              result = PBReaderSkipValueWithTag(a2);
              if (!(_DWORD)result)
                return result;
LABEL_35:
              if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
                return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              continue;
          }
          while (1)
          {
            v15 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1 || v15 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
              break;
            v16 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0)
              goto LABEL_38;
            v12 += 7;
            v9 = v13++ >= 9;
            if (v9)
            {
              v14 = 0;
              goto LABEL_40;
            }
          }
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_38:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
            v14 = 0;
LABEL_40:
          *(_BYTE *)(a1 + 64) = v14 != 0;
          goto LABEL_35;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t FMDNanoSupportProtoSignedDataV3ReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  int v10;
  BOOL v11;
  char v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  uint64_t Data;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t String;
  void *v24;

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        v4 = 0;
        v5 = 0;
        v6 = 0;
        while (1)
        {
          v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
            break;
          v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0)
            goto LABEL_11;
          v4 += 7;
          v9 = v5++ >= 9;
          if (v9)
          {
            v6 = 0;
            v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          v6 = 0;
LABEL_13:
        if (v10)
          v11 = 1;
        else
          v11 = (v6 & 7) == 4;
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              v12 = 0;
              v13 = 0;
              v14 = 0;
              break;
            case 2u:
              Data = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(Data);
              v20 = 24;
              goto LABEL_31;
            case 3u:
              v21 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v21);
              v20 = 32;
              goto LABEL_31;
            case 4u:
              v22 = PBReaderReadData(a2);
              v19 = objc_claimAutoreleasedReturnValue(v22);
              v20 = 8;
              goto LABEL_31;
            case 5u:
              String = PBReaderReadString(a2);
              v19 = objc_claimAutoreleasedReturnValue(String);
              v20 = 16;
LABEL_31:
              v24 = *(void **)(a1 + v20);
              *(_QWORD *)(a1 + v20) = v19;

              goto LABEL_36;
            default:
              result = PBReaderSkipValueWithTag(a2);
              if (!(_DWORD)result)
                return result;
LABEL_36:
              if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
                return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              continue;
          }
          while (1)
          {
            v15 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1 || v15 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
              break;
            v16 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0)
              goto LABEL_33;
            v12 += 7;
            v9 = v13++ >= 9;
            if (v9)
            {
              v14 = 0;
              goto LABEL_35;
            }
          }
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_33:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
            v14 = 0;
LABEL_35:
          *(_BYTE *)(a1 + 40) = v14 != 0;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_1000C3CF0(mach_port_t a1, uint64_t a2, int a3, _QWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  mach_msg_header_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  NDR_record_t v19;
  int v20;

  v15 = 1;
  v16 = a2;
  v17 = 16777472;
  v18 = a3;
  v19 = NDR_record;
  v20 = a3;
  reply_port = mig_get_reply_port();
  v14.msgh_remote_port = a1;
  v14.msgh_local_port = reply_port;
  v14.msgh_bits = -2147478253;
  *(_QWORD *)&v14.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&v14);
    reply_port = v14.msgh_local_port;
  }
  v9 = mach_msg(&v14, 3, 0x38u, 0x40u, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(v14.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(v14.msgh_local_port);
    return v10;
  }
  if (v14.msgh_id == 71)
  {
    v12 = 4294966988;
  }
  else if (v14.msgh_id == 1300)
  {
    if ((v14.msgh_bits & 0x80000000) != 0)
    {
      v12 = 4294966996;
      if (v15 == 1 && v14.msgh_size == 56 && !v14.msgh_remote_port && HIBYTE(v17) == 1)
      {
        v13 = v18;
        if (v18 == v20)
        {
          *a4 = v16;
          *a5 = v13;
          return 0;
        }
      }
    }
    else if (v14.msgh_size == 36)
    {
      v12 = 4294966996;
      if (HIDWORD(v16))
      {
        if (v14.msgh_remote_port)
          v12 = 4294966996;
        else
          v12 = HIDWORD(v16);
      }
    }
    else
    {
      v12 = 4294966996;
    }
  }
  else
  {
    v12 = 4294966995;
  }
  mach_msg_destroy(&v14);
  return v12;
}

void sub_1000C3ED8(uint64_t a1, int a2)
{
  __asm { BR              X8 }
}

void sub_1000C40E8(unint64_t a1, uint64_t a2)
{
  _BOOL4 v3;

  v3 = a1 > 0xFFFFFFFFFFFFFFEFLL && a2 != 0;
  __asm { BR              X8 }
}

uint64_t sub_1000C4150(uint64_t a1, _DWORD *a2)
{
  uint64_t v2;
  BOOL v3;

  *a2 = 0;
  v3 = ((uint64_t (*)(uint64_t, uint64_t))((char *)&_malloc_type_malloc - 3))(24, 4101018099) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2 * v3) | 0x1E4u)) - 4))();
}

uint64_t sub_1000C4198(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 2118401485;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(v3 - 136) = a1;
  v4 = v2(4096, 1358311088);
  **(_QWORD **)(v3 - 136) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((216 * (v4 != 0)) ^ 0x354u)) - 8))();
}

uint64_t sub_1000C4228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  *(_QWORD *)(v33 - 152) = v32;
  *(_DWORD *)(v27 + 8) = v29 + 4096;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((712 * (*(_DWORD *)(v27 + 12) - 4093 < ((v28 - 598) ^ 0x2C8) + ((v28 - 468) | 0xEu) - 5061)) ^ (v28 - 598)));
  v35 = *(_QWORD *)(v26 + 8 * (v28 - 821)) - 13;
  *(_QWORD *)(v33 - 200) = v25;
  *(_QWORD *)(v33 - 192) = v35;
  return v34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, v31, a18, a19,
           a20,
           a21,
           a22,
           v27 + 8,
           a24,
           a25);
}

uint64_t sub_1000C429C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((15
                                * (2 * (v0 ^ 0x2F1)
                                 + ((2 * (v3 + 2 * v1)) & 0xFCDB7BFA)
                                 + ((v3 + 2 * v1) ^ 0xFE6DBDFD)
                                 + 26357872 < 0xFFFFEFFB)) ^ v0)))();
}

uint64_t sub_1000C4304@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = __ldaxr(v4);
  v8 = (*(uint64_t (**)(_QWORD, uint64_t))(v6 - 152))((a1 + 26362371), 1120292948);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (((v8 != 0) * ((v7 - 215) ^ 0x797)) ^ v7)) - 8))(v8, v9, v10, v11, v12, v13, v14, v15, a2, a3, a4);
}

void sub_1000C435C(uint64_t a1)
{
  __asm { BR              X17 }
}

uint64_t sub_1000C6718()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1818 * (v0 != v2)) ^ (v1 - 1146)))
                            - (v1 - 1408)
                            + 87))();
}

uint64_t sub_1000C6754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  _BOOL4 v7;

  v7 = v2 < ((v3 + 1547) ^ 0x662u) || (unint64_t)(a1 - a2) < 0x20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((222 * v7) ^ v3)) + 3545690796 - (v3 ^ (v4 + 55))))();
}

void sub_1000C6EA8()
{
  _QWORD *v0;
  void (*v1)(void);
  _QWORD *v2;

  v2 = v0;
  v1();
  *v2 = 0;
  v2[1] = 2118401485;
  ((void (*)(_QWORD *))v1)(v2);
  JUMPOUT(0x1000C6ECCLL);
}

void sub_1000C6F0C(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1000C6F44()
{
  ((void (*)(void))((char *)&_free - 3))();
  return 0;
}

void sub_1000C6F60()
{
  uint64_t v0;
  char v1;

  v0 = qword_100305988 - (_QWORD)&v1 + qword_1003059A0;
  qword_100305988 = 1137813707 * v0 + 0x5751864245CF6939;
  qword_1003059A0 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  __asm { BR              X8 }
}

uint64_t sub_1000C7044()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;

  v1();
  *(_QWORD *)(v0 + 8) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((20 * (*(_QWORD *)(v0 + 24) != 0)) | 0xA8u)) - 4))();
}

uint64_t sub_1000C707C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 111) = v0;
  v2();
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  *(_QWORD *)v1 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(_QWORD *)(v1 + 48) == 0) * (((5 * (v4 ^ 0x92) + 20) | 8) - 290)) ^ (5 * (v4 ^ 0x92))))
                            - ((5 * (v4 ^ 0x92) + 20) ^ 0x199u)
                            + 171))();
}

uint64_t sub_1000C71D8(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)) & 1) != 0)
    __asm { BR              X8 }
  return 4294922295;
}

void sub_1000C75FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _DWORD *a18, int a19, int a20)
{
  uint64_t v20;
  _QWORD *v21;

  v21 = *(_QWORD **)(v20 - 152);
  (*(void (**)(_QWORD))(v20 - 208))(*v21);
  *v21 = a17;
  *a18 = a20;
  JUMPOUT(0x1000C7634);
}

uint64_t sub_1000C76E4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = ((a1 + 968818423) & 0xC640FFBE ^ 0x14473943) + *(_DWORD *)(v1 + 12);
  v4 = *(_DWORD *)(v1 + 8) - 797629582;
  v5 = v3 < 0x14473A79;
  v6 = v3 > v4;
  if (v4 < 0x14473A79 != v5)
    v6 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * ((444 * v6) ^ a1)))();
}

uint64_t sub_1000C7764@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned int v31;
  _BOOL4 v32;
  unsigned int v33;
  _BOOL8 v34;
  _BOOL4 v35;

  *(_QWORD *)(v29 - 152) = v27;
  v30 = a5 - 844;
  v31 = v26 + 659547387;
  v32 = (v26 + 659547387) < 0x6B21FBFE;
  v33 = ((2 * (2 * v26 + 2019283442)) & 0x87B47EFE) + ((2 * v26 + 2019283442) ^ (v30 + 1138376259));
  v34 = v33 + 659012735 < 0x6B21FBFE;
  if (v32 != v34)
    v35 = v33 + 659012735 < 0x6B21FBFE;
  else
    v35 = v33 + 659012735 > v31;
  return ((uint64_t (*)(_BOOL8, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((109 * v35) ^ v30)) - 4))(v34, 2019283442, 1797389310, v33 - 534648, a1, a2, a3, a4, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000C780C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  _DWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  int v36;

  v34 = *v31;
  v35 = ((2 * v29) & 0x9FDFFFFC) + (v29 ^ 0x4FEFFFFE);
  *(_BYTE *)(*v31 + v35 - 1341128701) = -2;
  v36 = (v33 - 222) | 0x88;
  *(_BYTE *)(v34 + v35 - 1341128702) = -123;
  *(_BYTE *)(v34 + v35 + (v36 ^ 0xB01002EC)) = 99;
  *(_BYTE *)(v34 + v35 - 1341128699) = -80;
  *v30 += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(4001280290 - ((v36 + 67120440) | 0xEA7E8106) + *(_QWORD *)(v32 + 11808)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1000C8710()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_DWORD *)(v2 + 8) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((113 * (*(_QWORD *)(v4 - 136) <= 0x1000uLL)) ^ v0 ^ 0x719))
                            - (((v0 ^ 0x719) + 591919830) & 0xDCB800E9)
                            + 221))();
}

uint64_t sub_1000C906C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  uint64_t v25;
  uint64_t v26;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * ((((v26 == 0) ^ (v24 - 17)) & 1 | ((((v26 == 0) ^ (v24 - 17)) & 1) << 6)) ^ v24)) - (v24 + 169) + 1193))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1000C9188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t (*v18)(_QWORD, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v19 = v18((v14 + 50742581), 1120292948);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * (((v19 != 0) * ((v16 - 861) ^ v17 ^ 0x48A)) ^ v17)) - 8))(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1000C9504()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((v3 + ((v1 - 1524) | 0x220) - 675) ^ (v3 + 177)) * (v0 != 0)) ^ v1)))();
}

uint64_t sub_1000C9538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v7 = v2 < 8 || (unint64_t)(a1 - a2) < 0x20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((((((2 * v3) ^ 0x696) - 285297762) & 0xFF7FF9B6 ^ (v5 + 13)) * v7) ^ v3))
                            - 8))();
}

uint64_t sub_1000C958C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  char v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 < 0x20) ^ ((v1 ^ (v3 - 48)) + 1)) & 1)
                                * (((v1 - 336) | 0x71) - 749)) ^ v1)))();
}

uint64_t sub_1000C95CC@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  __int128 v6;
  _BOOL4 v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (((v5 + v3 - 740) | 0x311u) ^ 0x335) != (v2 & 0xFFFFFFE0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)(v7 & 0xFFFFFFFB | (4 * v7) | (v5 + v3 - 488))) - 8))();
}

uint64_t sub_1000C9624()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v1 ^ (205 * (v0 == 0))))
                            - (v1 ^ 0xEE7EB161 ^ ((v1 - 332103741) | 0x24A3120))))();
}

uint64_t sub_1000C9678()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v1 ^ (2
                                               * (((((v1 - 1939960322) ^ (v0 < 8)) & 1) == 0) | (32
                                                                                               * ((((v1 - 1939960322) ^ (v0 < 8)) & 1) == 0))))))
                            - 8))();
}

uint64_t sub_1000C96BC()
{
  int v0;
  unint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1119
                                          * (v1 >= ((v0 + 240029406) | 0xE0302026)
                                                 + (unint64_t)((v0 + 486) | 0x235u)
                                                 - 4001281859u)) ^ v0))
                            - 8))();
}

uint64_t sub_1000C9714()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((85 * (v0 >= ((v1 - 1420) ^ 0x91u))) ^ v1))
                            - (v1 ^ (v3 + 1525) ^ 0xEE7EB12ELL)))();
}

uint64_t sub_1000C9768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  __int128 *v8;
  _OWORD *v9;
  __int128 v10;

  v8 = (__int128 *)(a2 + v2 - 16);
  v9 = (_OWORD *)(a1 + v2 - 16);
  v10 = *v8;
  *(v9 - 1) = *(v8 - 1);
  *v9 = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 0) * (v3 - v7 + 3)) ^ (v6 + v3 + 640))) - 8))();
}

uint64_t sub_1000C98A0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((90 * (((v2 ^ (v1 == v0)) & 1) == 0)) ^ v3)) - 4))();
}

uint64_t sub_1000CA238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  _DWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _DWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;
  void (*v41)(uint64_t);

  v40 = v33;
  v41 = *(void (**)(uint64_t))(v39 - 208);
  *v35 = 0;
  *v37 = 1287174666;
  *v34 = 762592893;
  v41(a33 - 0x44AE206B0F846A58);
  return (*(uint64_t (**)(void))(v36 + 8 * ((1887 * (*v38 != 0)) ^ (v40 + 293687763))))();
}

void sub_1000CA2B4()
{
  _QWORD *v0;
  void (*v1)(void);
  _QWORD *v2;

  v2 = v0;
  v1();
  *v2 = 0;
  v2[1] = 1137841927;
  ((void (*)(_QWORD *))v1)(v2);
  JUMPOUT(0x1000C738CLL);
}

void sub_1000CA2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;
  int v8;

  if (a4)
    v6 = a5 == 0;
  else
    v6 = 1;
  v8 = v6 || a6 == 0;
  __asm { BR              X8 }
}

uint64_t sub_1000CA348(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5)
{
  uint64_t v5;
  _BOOL4 v6;

  *a4 = 0;
  *a5 = 0;
  v6 = ((uint64_t (*)(uint64_t, uint64_t))((char *)&_malloc_type_malloc - 3))(24, 4101018099) != 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((419 * v6) ^ 0xA1u)))();
}

uint64_t sub_1000CA3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)(v31 - 256) = v28;
  *(_QWORD *)(v31 - 184) = v27;
  *(_DWORD *)(v31 - 236) = v26;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 449454675;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(v31 - 152) = v30;
  v33 = v30(4096, 1358311088);
  *(_QWORD *)a1 = v33;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((63 * (v33 == 0)) ^ 0x1DC));
  *(_QWORD *)(v31 - 144) = (char *)&_free - 3;
  return v34(v33, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000CA450()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 - 144))(v0);
  return 4294922293;
}

uint64_t sub_1000CDC74(uint64_t a1)
{
  uint64_t v1;

  if ((unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)) & 1) != 0)
  {
    v1 = (uint64_t)*(&off_1002C50E0
                  + ((867
                    * (((uint64_t (*)(uint64_t, uint64_t))((char *)&_malloc_type_malloc - 3))(24, 4101018099) != 0)) ^ 0x57Eu));
    __asm { BR              X8 }
  }
  return 4294922295;
}

uint64_t sub_1000D0DF0(_DWORD *a1)
{
  unsigned int v1;

  v1 = 882831569 * ((a1 & 0xE8317279 | ~(a1 | 0xE8317279)) ^ 0x84383F4C);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1002C89A0 + (int)(*a1 - v1 - 314))
                                        + 8 * (int)((194 * (v1 + a1[1] - 1169751002 < 0x46)) ^ (*a1 - v1))
                                        - 2)
                            - 4))();
}

uint64_t sub_1000D0E70@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  *(_DWORD *)(result + 8) = *(_DWORD *)(*(_QWORD *)(v3 + 8 * (a2 - 347)) + 4 * v2 - 3);
  return result;
}

uint64_t sub_1000D0E88(uint64_t result)
{
  *(_DWORD *)(result + 8) = 314902380;
  return result;
}

void sub_1000D0E98()
{
  unint64_t v0;
  char *v1;
  char v2;

  v0 = qword_100305980 ^ (unint64_t)&v2 ^ qword_1003059A0;
  qword_100305980 = (1137813707 * v0) ^ 0xE86952A9CE08E98BLL;
  qword_1003059A0 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = (char *)*(&off_1002C50E0
               + ((893
                 * (((uint64_t (*)(uint64_t, uint64_t))((char *)*(&off_1002C89A0
                                                                        + ((-53 * ((qword_1003059A0 - qword_100305980) ^ 0x8B)) ^ byte_100254670[byte_100254350[(-53 * ((qword_1003059A0 - qword_100305980) ^ 0x8B))] ^ 0xA8])
                                                                        + 12)
                                                              - 3))(24, 4101018099) != 0)) ^ 0x5E4u))- 8;
  __asm { BR              X8 }
}

uint64_t sub_1000D0FB4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v6;

  *(_DWORD *)(v4 - 212) = v1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0x35872FBD3D92718DLL;
  *(_DWORD *)(a1 + 16) = 0;
  v6 = v3(4096, 1358311088);
  *(_QWORD *)a1 = v6;
  return (*(uint64_t (**)(void))(v2 + 8 * ((47 * (v6 == 0)) ^ 0x119u)))();
}

uint64_t sub_1000D101C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((((v0 + 732) ^ 0x5E4) + 6) ^ 0x4E045395) * (v2 != 0)) ^ 0x5E4))
                            - 8))();
}

uint64_t sub_1000D1068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v4(v5, a2, a3, a4, 346288128);
  return 4294922293;
}

void sub_1000D4ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v7;
  int v10;

  if (a4)
    v7 = a5 == 0;
  else
    v7 = 1;
  v10 = v7 || a6 == 0 || a7 == 0;
  __asm { BR              X8 }
}

uint64_t sub_1000D4B5C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  *a4 = 0;
  **(_DWORD **)(v8 - 152) = 0;
  **(_QWORD **)(v8 - 144) = 0;
  *a7 = 0;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((787 * (((unk_100306B90 == 0) ^ 0x81) & 1)) ^ 0x15Eu)) - 8);
  *(_QWORD *)(v8 - 216) = (char *)&_free - 3;
  return v9();
}

uint64_t sub_1000D4BD8()
{
  int v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;

  v1();
  *(_QWORD *)(v3 + 8) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1438 * (*(_QWORD *)(v3 + 24) != 0)) ^ (v0 + 1485326383))))();
}

uint64_t sub_1000D4C10()
{
  int v0;
  int v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;

  v2();
  *(_QWORD *)(v4 + 24) = 0;
  *(_DWORD *)(v4 + 36) = 0;
  *(_QWORD *)v4 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((971 * (*(_QWORD *)(v4 + 48) != 0)) ^ (v0 + v1 + 91))) - 4))();
}

uint64_t sub_1000D4C4C()
{
  int v0;
  int v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;

  v2();
  *(_QWORD *)(v4 + 48) = 0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v0 + v1 + 229328577) & 0xF254BEAF) - 1564) * (*(_QWORD *)(v4 + 64) != 0)) ^ (v0 + v1 + 172))))();
}

uint64_t sub_1000D4F44@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v17 = (*(uint64_t (**)(_QWORD, uint64_t))(v16 - 160))(((v14 - 96787069) & 0x5C4D947 ^ 0x40433644u) + a1, 1120292948);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * (int)(((v17 == 0) * ((v14 + 442638946) & 0xE59DDE3F ^ 0x2ED)) ^ v14)) - 4))(v17, v18, v19, v20, v21, v22, v23, v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14);
}

uint64_t sub_1000D5034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t *v46;
  uint64_t v47;
  unsigned int v48;

  *(_QWORD *)(v44 - 232) = 0;
  v45 = (v41 - 1321019948) & 0x4EBD2ABC;
  v46 = *(uint64_t **)(v44 - 192);
  v47 = *v46;
  v48 = ((2 * a9) & 0x9F47E854) + (a9 ^ 0x4FA3F42A) - 1336144938;
  *(_BYTE *)(*v46 + v48) = 0;
  *(_BYTE *)(v47 + v48 + 1) = 0;
  *(_BYTE *)(v47 + v48 + 2) = 0;
  *(_BYTE *)(v47 + v48 + 3) = 1;
  *((_DWORD *)v46 + 3) = v45 + *((_DWORD *)v46 + 3) - 536;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * ((184 * (v45 ^ 0x21A) + 689) ^ v45)) - (v45 ^ 0x389u) + 401))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v40,
           a27,
           a28,
           a29,
           v43,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

void sub_1000D56F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 192) = v0;
  JUMPOUT(0x1000D5984);
}

uint64_t sub_1000D635C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  ((void (*)(uint64_t, char *))((char *)*(&off_1002C89A0 + v41 - 787) - 2))(a1, (char *)*(&off_1002C89A0 + (v41 ^ 0x326)) - 3);
  ((void (*)(uint64_t))((char *)*(&off_1002C89A0 + (v41 ^ 0x335)) - 2))(v39);
  v43 = (void (*)(uint64_t, uint64_t))((char *)*(&off_1002C89A0 + (v41 ^ 0x322)) - 3);
  *(_QWORD *)(v42 - 176) = v39;
  v43(v39, a39);
  v44 = ((uint64_t (*)(void))((char *)*(&off_1002C89A0 + (v41 ^ 0x327)) - 2))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (((v44 == (_QWORD)*(&off_1002C89A0 + v41 - 792) - 15) * (((v41 ^ 0x33F) + 1375) ^ (31 * (v41 ^ 0x33F)) ^ 0x4DB)) | v41)))(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000D6418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t (*v37)(void);

  v37 = *(uint64_t (**)(void))(v34
                            + 8 * (((a34 == (_QWORD)*(&off_1002C89A0 + v35 - 417) - 7) * ((v35 + 383) ^ 0x451)) ^ v35));
  *(_QWORD *)(v36 - 248) = 0xCBEAD696E9196D18;
  return v37();
}

uint64_t sub_1000D647C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t (*v41)(_QWORD, uint64_t);
  uint64_t (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;

  v56 = v41(*(_QWORD *)(v46 - 176), a39);
  v47 = v42();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * (((v47 == v43) * ((v45 - 383) ^ 0x4B5)) ^ v45)))(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           v56,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000D7C7C@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *(unsigned __int8 *)(v3 + ((v5 + v4) & 0xFFF7FDFF ^ (a1 + 730)) + v2);
  *(_DWORD *)(a2 + 12) = v2 + 8;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (v5 ^ (1001 * (v6 != 0xCBEAD696E9196D18)))))(v8);
}

uint64_t sub_1000D826C()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v2 + ((9 * (v1 ^ 0x232) - 1609257476) | 0x7630852) + 52) * (v0 < 8)) ^ v1))
                            - 4))();
}

uint64_t sub_1000D847C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((837 * (((v1 == v0) ^ (v2 - 69) ^ 0x72) & 1)) ^ v3)))();
}

uint64_t sub_1000D84B4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((354 * ((((v1 ^ 0x445) - 208) & v0) != 0)) ^ v1))
                            - ((v1 - 276843214) & 0xB7F7FEFF ^ 0xA777B8D7)))();
}

void sub_1000D890C()
{
  unint64_t v0;
  char *v1;
  char v2;

  v0 = (qword_1003059A0 + qword_100305990) ^ (unint64_t)&v2;
  qword_100305990 = 1137813707 * v0 - 0x1796AD5631F71675;
  qword_1003059A0 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = (char *)*(&off_1002C50E0
               + ((203
                 * (((uint64_t (*)(uint64_t, uint64_t))((char *)*(&off_1002C89A0
                                                                        + ((-53 * (qword_100305990 ^ 0x8B ^ qword_1003059A0)) ^ byte_100253C00[byte_100254570[(-53 * (qword_100305990 ^ 0x8B ^ qword_1003059A0))] ^ 0x5E])
                                                                        + 1)
                                                              - 3))(24, 4101018099) == 0)) ^ 0x173u))- 4;
  __asm { BR              X8 }
}

uint64_t sub_1000D8A10(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 2051828535;
  *(_DWORD *)(a1 + 16) = 0;
  v4 = v1(4096, 1358311088);
  *(_QWORD *)a1 = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * ((139 * (v4 == 0)) ^ 0x47A)))();
}

uint64_t sub_1000D8A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v6)(uint64_t);

  v6(a6);
  return 4294922293;
}

void sub_1000DB798()
{
  unint64_t v0;
  char *v1;
  char v2;

  v0 = (qword_1003059A0 - qword_100305998) ^ (unint64_t)&v2;
  qword_100305998 = 1137813707 * (v0 + 0x1796AD5631F71675);
  qword_1003059A0 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = (char *)*(&off_1002C50E0
               + ((54
                 * (((uint64_t (*)(uint64_t, uint64_t))((char *)*(&off_1002C89A0
                                                                        + ((-53
                                                                                           * ((qword_1003059A0
                                                                                             - 53 * (v0 + 117)) ^ 0x8B)) ^ byte_100253F30[byte_100253B00[(-53 * ((qword_1003059A0 - 53 * (v0 + 117)) ^ 0x8B))] ^ 0x9F])
                                                                        - 10)
                                                              - 3))(24, 4101018099) == 0)) ^ 0x29Du))- 8;
  __asm { BR              X8 }
}

uint64_t sub_1000DB8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 459037928;
  *(_DWORD *)(a1 + 16) = 0;
  v5 = v3(4096, 1358311088);
  *(_QWORD *)a1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((100 * (((v5 == 0) ^ 0xEF) & 1)) ^ 0x43Bu))
                            - ((v1 + 12) ^ 0xB2D17A6BLL)))();
}

uint64_t sub_1000DB950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v8 + 8) = v5 + 4096;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                     + 8
                                                                     * ((1983
                                                                       * (*(_DWORD *)(v8 + 12) - 4093 >= (v4 & 0xFF7 ^ 0x7Cu) - 4764)) ^ v4 & 0xFF7u));
  *(_QWORD *)(v10 - 168) = *(_QWORD *)(v6 + 8 * ((v4 & 0xFF7) - 710)) - 7;
  *(_QWORD *)(v10 - 160) = v3;
  *(_QWORD *)(v10 - 176) = *(_QWORD *)(v6 + 8 * ((v4 & 0xFF7) - 712)) - 13;
  *(_QWORD *)(v10 - 216) = v9;
  return v11(a1, a2, a3, 1294894604);
}

void sub_1000DB9E0(int a1@<W8>)
{
  int v1;
  uint64_t *v4;
  uint64_t v5;
  unsigned int v6;

  v5 = *v4;
  v6 = ((2 * a1) & 0xDFFFEE54) + (a1 ^ 0x6FFFF72A) - 1879046174;
  *(_BYTE *)(*v4 + v6 + v1 - 423) = 0;
  *(_BYTE *)(v5 + v6 + 245) = 0;
  *(_BYTE *)(v5 + v6 + 246) = 0;
  *(_BYTE *)(v5 + v6 + 247) = 1;
  *((_DWORD *)v4 + 3) += 4;
  __asm { BR              X9 }
}

uint64_t sub_1000DCB8C@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  return ((uint64_t (*)(void))(*(_QWORD *)(v29
                                        + 8
                                        * (int)((((v28 + (v27 ^ a1) - 153) ^ (v28 + 650)) * (a26 == v26)) ^ v27 ^ a1))
                            - ((v27 ^ a1)
                             + 145)
                            + 294))();
}

uint64_t sub_1000DCC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(void),uint64_t a35,void (*a36)(_QWORD, _QWORD))
{
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  a36(*(_QWORD *)(v38 - 184), *(_QWORD *)(v38 - 200));
  v39 = a34();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * ((667 * (v39 == a11)) ^ v36)) - (v36 ^ 0x1B3u) - (((v36 - 291) | 0x70u) ^ 0xFFFFFFFFFFFFFF1CLL)))(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000DCE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 - 216))(24, 4101018099);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((251 * (((v27 == 0) ^ ((v24 - 18) ^ (v23 - 93))) & 1)) ^ v24)))(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14, a15, a16, a17, a1, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000DD244@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*v2 == 0) * (v1 + a1 + 478 + 1294894039)) | (a1 + 478))) - 4))();
}

uint64_t sub_1000DD28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int a34)
{
  void (*v34)(_QWORD *);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  *v35 = 0;
  v35[1] = a34;
  v34(v35);
  v42 = (void (*)(uint64_t))((char *)*(&off_1002C89A0 + v40 + 1294894497) - 2);
  v42(v39);
  v42(*(_QWORD *)(v41 - 184));
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * ((1760 * (*(_QWORD *)(v41 - 200) != 0)) ^ (v40 + 1294895287))) - 4))(*(_QWORD *)(v41 - 200), v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, v36, v38, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000DD538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  if (v31)
  {
    *(_QWORD *)(v36 - 184) = v32;
    *(_QWORD *)(v36 - 144) = 0;
    *(_DWORD *)(v36 - 124) = 0;
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 + 8 * ((97 * (((*(_QWORD *)(*(_QWORD *)(v36 - 168) + 8) == 0) ^ (7 * (v34 ^ (v34 - 35) ^ 0x3D) + 1)) & 1)) ^ ((int)a4 + v34 + 428))) - 8))(*(_QWORD *)(*(_QWORD *)(v36 - 168) + 8), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else if (v33)
  {
    return (*(uint64_t (**)(void))(v35 + 8 * ((247 * (**(_QWORD **)(v36 - 152) != 0)) ^ ((int)a4 - 1294893727))))();
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v35
                                          + 8
                                          * ((1129
                                            * (((((_DWORD)a4 + v34 + 125) ^ ((_DWORD)a4 + v34 - 111) ^ (a31 == 0x37D5CEC9A1A3B888)) & 1) == 0)) ^ ((int)a4 + v34 + 177)))
                              - 8))();
  }
}

uint64_t sub_1000DE358(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((a4 + (v5 ^ (v7 - 569)) + v5 + 347 + 857) * (v4 != v6)) ^ v5))
                            - 4))();
}

uint64_t sub_1000DE444@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int128 v9;
  _OWORD *v10;

  v9 = *(_OWORD *)(a3 + v6 + 16);
  v10 = (_OWORD *)(a1 + v6);
  *v10 = *(_OWORD *)(a3 + v6);
  v10[1] = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 + v4 - 755 == v3) * v7) ^ (a2 + v5 + 1247))))();
}

uint64_t sub_1000DE5AC@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v10 = ~v6 + v3;
  v11 = *(_OWORD *)(a3 + v10 - 15);
  v12 = *(_OWORD *)(a3 + v10 - 31);
  v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 + v6 == v5) * v8) ^ (a2 + v4 + 862))))();
}

uint64_t sub_1000DE5F4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8 * ((((v3 + ((v2 - 1147846941) & 0x446ABFFB) - 498) ^ (v3 + 1)) * (v1 == v0)) ^ v2)))();
}

void sub_1000DEB70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1000DEBD8(_QWORD *a1, _DWORD *a2)
{
  uint64_t v2;
  _BOOL4 v3;

  *a1 = 0;
  *a2 = 0;
  v3 = ((uint64_t (*)(uint64_t, uint64_t))((char *)&_malloc_type_malloc - 3))(24, 4101018099) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((16 * (v3 & 0xFFFFFFFD | (2 * v3))) ^ 0x59A)))();
}

uint64_t sub_1000DEC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(v4 - 168) = v1;
  *(_QWORD *)(v4 - 160) = v3;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 1051258734;
  *(_DWORD *)(a1 + 16) = 0;
  v6 = v3(4096, 1358311088);
  *(_QWORD *)a1 = v6;
  return (*(uint64_t (**)(void))(v2 + 8 * ((89 * (((v6 == 0) ^ 0x93) & 1)) ^ 0x692)))();
}

uint64_t sub_1000DECB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v35 + 8) = v32 + 4096;
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((1674 * (((3 * (v31 ^ 0x8F)) ^ (*(_DWORD *)(v35 + 12) - 4093 < (((v31 ^ 0x532) - 272) | 0x10Fu) - 5024)) & 1)) ^ v31 ^ 0x532u));
  *(_QWORD *)(v36 - 224) = v34;
  return v37(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1000DED38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;

  *(_QWORD *)(v32 - 144) = 0;
  *(_QWORD *)(v32 - 176) = 0x9306C2D1D9A7B4E0;
  *(_QWORD *)(v32 - 152) = 0;
  v33 = *v31;
  v34 = ((a9 << ((v29 - 122) & 0xAF ^ 0x8C)) & 0x9F4FE1DE) + (a9 ^ 0x4FA7F0EF) - 1336406255;
  *(_BYTE *)(*v31 + v34) = 0;
  *(_BYTE *)(v33 + v34 + 1) = 0;
  *(_BYTE *)(v33 + v34 + 2) = 0;
  *(_BYTE *)(v33 + v34 + 3) = 1;
  *((_DWORD *)v31 + 3) += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (int)((v29 + 978983814) & 0xC5A5E5AF ^ 0x2B9)) - ((((v29 + 978983814) & 0xC5A5E5AF) - 2007353960) & 0x77A5CEDF) + 1533))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1000DEE1C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((63
                                * ((((v1 + 2 * v2) << (((v0 + 100) | 0x54) ^ 0x56)) & 0x7D55FEFE)
                                 + ((v1 + 2 * v2) ^ 0xBEAAFF7F)
                                 + 1096085628 > 0xFFFFEFFA)) ^ v0)))();
}

uint64_t sub_1000DEE8C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v17 = (*(uint64_t (**)(_QWORD, uint64_t))(v16 - 160))((a1 + 1096089729), 1120292948);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * ((209 * (v17 != 0)) ^ v14)) - 4))(v17, v18, v19, v20, v21, v22, v23, v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14);
}

void sub_1000DEEEC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  *(_QWORD *)(v5 - 152) = 0;
  *(_QWORD *)(v5 - 144) = 0;
  v6 = *v4;
  *(_QWORD *)(v5 - 176) = 0x9306C2D1D9A7B4E0;
  *(_QWORD *)(v5 - 232) = 0x33EE8B0970FCB5F4;
  *(_QWORD *)(v5 - 192) = v1;
  v7 = (((2 * (v2 ^ 0x188) - 210724645) & 0xC8F67DF) + 1396) | 0x40;
  __asm { BR              X11 }
}

uint64_t sub_1000E161C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 603) | 0x418) + 440) * (v0 != v2)) ^ v1)))();
}

uint64_t sub_1000E1644()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((*(unsigned __int8 *)(v2 + 3663) < 8u) ^ (v0 + 78)) & 1)
                                          * (v0 - 1152)) ^ v0))
                            - 8))();
}

uint64_t sub_1000E167C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((194 * (v0 + (unint64_t)(90 * (v1 ^ 0x660u)) - 630 > 0x1F)) ^ v1)))();
}

uint64_t sub_1000E16B4()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((21 * (v1 ^ 0x65F) - 508306593) & 0x1E4C2359) - 795) * (v0 < 0x20)) ^ v1 ^ 0x7F))
                            - 8))();
}

uint64_t sub_1000E1704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (v3 ^ (v4 - 343) ^ v7) + v2;
  *(_QWORD *)(a1 + v8 - 7) = *(_QWORD *)(a2 + v8 - 7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v2 & 0xFFFFFFF8) - 8 == v3) * v5) ^ v4)))();
}

void sub_1000E1748()
{
  JUMPOUT(0x1000E1710);
}

uint64_t sub_1000E1750()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v4 + ((v1 + 1122460830) & 0xBD189B37) - 818) ^ (v4 - 153)) * (v0 != v2)) ^ v1)))();
}

uint64_t sub_1000E1790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = v2 > 7 && a1 - a2 >= (unint64_t)(((v3 + 857735565) & 0xCCDFFF5D) - 213) - 808;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1853 * v6) ^ v3)))();
}

uint64_t sub_1000E17D8()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((v0 >= ((11 * (v1 ^ 0x30D)) ^ 0x2D7u)) * ((40 * (v1 ^ 0x359)) ^ 0x4B4)) ^ v1)))();
}

uint64_t sub_1000E1824@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  __int128 v6;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 & 0xFFFFFFE0) == 32) * ((8 * v3) ^ v5)) ^ v3)))();
}

void sub_1000E185C()
{
  JUMPOUT(0x1000E1834);
}

uint64_t sub_1000E186C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((98 * (v1 != v0)) ^ v2 ^ 0x13D8))
                            - (((v2 ^ 0x13D8) - 1640) | 0x302u)
                            + 810))();
}

uint64_t sub_1000E18A4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((122 * ((((351 * (v1 ^ 0x331)) ^ 0x405) & v0) != 0)) ^ v1)))();
}

uint64_t sub_1000E18E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(a1 + v3) = *(_QWORD *)(a2 + v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v4 - 916160512) & 0x369B7FFE ^ 0xFFFFFD0E) & v2)
                                          - (unint64_t)((v4 - 916160512) & 0x369B7FFE)
                                          + 750 != v3) ^ (v4 - 916160512) & 0x369B7FFEu))
                            - 8))();
}

uint64_t sub_1000E1938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + v2) = *(_QWORD *)(a2 + v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v4 != v2) ^ v3)) - 8))();
}

uint64_t sub_1000E195C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v4 + ((v2 + 1975908930) & 0xAEFBCEEB) - 52) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_1000E199C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  *(_BYTE *)(a1 + v3) = *(_BYTE *)(a2 + v3);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v3 + 1 != v2) * ((((v4 - 769) | 0x240) - 456930158) & 0x3FFDFC71 ^ (v6 - 319))) ^ ((v4 - 769) | 0x240))))();
}

uint64_t sub_1000E19EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v3) = *(_BYTE *)(a2 + v3);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 + 1 != v2) * v5) ^ v4)))();
}

uint64_t sub_1000E1A10()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1009 * ((((v4 + v2 + 1882864004) ^ (v1 == v0)) & 1) == 0)) ^ v2))
                            - 4))();
}

uint64_t sub_1000E1A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  __int128 v5;

  v5 = *(_OWORD *)(a2 + v2 - 16);
  *(_OWORD *)(a1 + v2 - 32) = *(_OWORD *)(a2 + v2 - 32);
  *(_OWORD *)(a1 + v2 - 16) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((651 * ((v2 & 0xFFFFFFE0) == 32)) ^ v3))
                            - (((v3 - 640) | 0x480u) ^ 0x69CLL)))();
}

void sub_1000E1AAC()
{
  JUMPOUT(0x1000E1A70);
}

uint64_t sub_1000E1ABC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 == v0) ^ (v2 + 1)) & 1 | (2
                                                                                         * (((v1 == v0) ^ (v2 + 1)) & 1)) | v2))
                            - ((v2 - 384) | 1u)
                            + 1297))();
}

uint64_t sub_1000E1AF0()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (823 * ((v0 & 0x18) != 0))))
                            - (v1 - 456)
                            + 841))();
}

uint64_t sub_1000E1B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v7 = v2 - 1;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v7 != 0) * v4) ^ (23 * (v3 ^ 0x260))))
                            - (((23 * (v3 ^ 0x260) + 545340934) | 0x4408C60u) ^ v6)))();
}

uint64_t sub_1000E1B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = v4 - 1;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v8 != 0) * v5) ^ v2)) - (v3 ^ v7)))();
}

uint64_t sub_1000E1BA8()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned __int8 v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = v2 + v1;
  v5 = v2 + v1 + 29;
  v6 = (v4 - 158) | 0x29;
  v7 = v4 + 488;
  v8 = (*(uint64_t (**)(_QWORD, uint64_t))(v3 - 160))(**(unsigned int **)(v3 - 200), 1490714378);
  v9 = *(_QWORD **)(v3 - 168);
  v10 = 32 * *(_QWORD *)(v3 - 208);
  *(_QWORD *)(*v9 + v10 + 24) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v7 ^ (((v5 ^ (*(_QWORD *)(*v9 + v10 + 24) == 0)) & 1) << 6)))
                            - v6
                            + 41))();
}

void sub_1000E1C2C()
{
  JUMPOUT(0x1000E15E8);
}

uint64_t sub_1000E1C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  int v37;

  return ((uint64_t (*)(void))(616680548
                            - ((v37 - 1477195353) & 0x7CCDFFF9)
                            + *(_QWORD *)(v36 + 8 * ((479 * (((v37 - 685) | 0x2C1) + a36 != 722)) ^ v37))
                            - 8))();
}

uint64_t sub_1000E1CFC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v1 + 8 * ((*(_QWORD *)(v2 + 16) != 0) ^ (v3 + v0 + 140))))();
}

uint64_t sub_1000E1D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((157 * (*(_QWORD *)(v2 + 32 * v0 + 24) == 0)) ^ (v3 - 124)))
                            - 8))();
}

uint64_t sub_1000E1D50()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);
  int v6;
  uint64_t v7;

  v7 = v5();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((112 * (v2 + (v0 ^ (v4 + 595)) - 722 != v1)) ^ (v6 + v0 + 541)))
                                          - 4))(v7);
}

uint64_t sub_1000E1D8C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v2 + 8 * ((*(_QWORD *)(v3 + 32 * v1 + 16) != 0) ^ (v4 + v0 + 140))))();
}

uint64_t sub_1000E1DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(void);

  v4();
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((157 * (*(_QWORD *)(v2 + 32 * v0 + 24) == 0)) ^ (v3 - 124)))
                            - 8))();
}

uint64_t sub_1000E1DE0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((112 * (v2 + (v0 ^ (v4 + 595)) - 722 != v1)) ^ (v5 + v0 + 541)))
                            - 4))();
}

uint64_t sub_1000E1E18@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t);
  int v6;
  uint64_t v7;

  v5 = v3;
  v6 = a1 - 326;
  v5(v2);
  **(_QWORD **)(v4 - 168) = 0;
  v7 = ((uint64_t (*)(_QWORD))v5)(*(_QWORD *)(v4 - 144));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((1188 * (*(_QWORD *)(v4 - 176) != 0x9306C2D1D9A7B4E0)) ^ v6))
                                          - ((383 * (v6 ^ 0x189) - 1388) | 6u)
                                          + 142))(v7);
}

uint64_t sub_1000E1E90@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v3 + a1 - 1532 + ((a1 + 12632644) | 0x24010420) - 1233360077)
                                          * (*(_QWORD *)(v1 + 0x6CF93D2E26584B20) == 0)) ^ a1))
                            - 4))();
}

uint64_t sub_1000E1EF0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void (*v5)(uint64_t);
  _QWORD *v6;
  int v7;

  v7 = 5 * (v0 ^ (v4 + 30));
  *(_QWORD *)v1 = 0;
  *(_DWORD *)(v1 + 8) = 2111990077;
  *(_DWORD *)(v1 + 12) = 1657608450;
  v5(v2 + 0x6CF93D2E26584B20);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*v6 != 0) * (v7 ^ (v4 + 150) ^ (v4 - 26))) ^ v7))
                            - ((v4 + v7 - 150) ^ 0x24C1CC64)))();
}

void sub_1000E1F80()
{
  void (*v0)(void);
  _QWORD *v1;

  v0();
  *v1 = 0;
  v1[1] = 1051258734;
  ((void (*)(_QWORD *))v0)(v1);
  JUMPOUT(0x1000E1F9CLL);
}

uint64_t sub_1000E1FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * (((a36 + 1 < *(_QWORD *)(v39 - 152)) * (((5 * (v37 ^ (v37 + 130))) ^ 0x59) + 1144)) ^ (v38 + v37 + 805))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1000E2030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29)
{
  uint64_t v29;

  (*(void (**)(_QWORD))(v29 - 224))(*(_QWORD *)(v29 - 144));
  *a29 = *(_QWORD *)(v29 - 152);
  JUMPOUT(0x1000E1E3CLL);
}

void sub_1000E2070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v8;

  if (a2)
    v5 = a3 == 0;
  else
    v5 = 1;
  v8 = !v5 && a4 != 0 && a5 != 0;
  __asm { BR              X8 }
}

uint64_t sub_1000E2128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_DWORD *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_QWORD *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,_DWORD *a40,uint64_t a41,_QWORD *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;

  *a29 = 0;
  *a40 = 0;
  *a42 = 0;
  *a21 = 0;
  LODWORD(a45) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, void *, void *, char *, void *, uint64_t, uint64_t, uint64_t, const char *, _DWORD *, char *, char *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, _DWORD *, char *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((354 * (a1 != 0)) | 0x89u)) - 4))(a1, a2, 2419529101, a4, a5, a6, a7, a8, a9, a10, a11, &unk_100306BE0, &unk_100306BDC, &unk_100306B80, (char *)&notify_check - 2, &unk_100306BD8, a17, a18, a19,
           "com.apple.adid",
           a21,
           (char *)&_free - 3,
           (char *)&_gettimeofday - 2,
           0,
           a25,
           a26,
           a1,
           a28,
           a29,
           &unk_100306BDC,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           &unk_100306B88,
           a39,
           a40,
           (char *)&_malloc_type_malloc - 3,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1000E2220(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 *a16)
{
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((1379 * *a16) ^ 0x135u))
                            - ((v16 + ((a3 - 213) ^ 0x135u) + 721) ^ 0x35ELL)))();
}

uint64_t sub_1000E29CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9 + 8 * (((((v8 + a6) & a7) - 517) * (v7 != 0)) ^ v8)))();
}

uint64_t sub_1000E2CCC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a1 + v1) = *(_QWORD *)(v7 + v1);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v4 ^ v6) + v1 == v3) * v5) ^ v2)))();
}

uint64_t sub_1000E2CF4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (202 * (v1 == v0))))
                            + 2419529093
                            - (v2 - v3 - 502)
                            + 4))();
}

uint64_t sub_1000E2E00(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + v4 - 8) = *(_QWORD *)(v5 + v4 - 8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v1 - v3 == -8) * (v2 ^ 0x2C4)) ^ v2)) - 8))();
}

uint64_t sub_1000E4030(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  int v39;
  uint64_t (*v40)(_QWORD, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v42 = v40((v38 ^ 0x90C82806) + a1, 1120292948);
  STACK[0x208] = v42;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (((v42 != 0) * (v39 + 1020)) ^ v39)))(v42, v43, 2419529101, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

void sub_1000E4080()
{
  JUMPOUT(0x1000E28F0);
}

uint64_t sub_1000E46D4@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v28 = v25 ^ a2;
  v29 = (v26 + a1 + (v25 ^ a2) - 338 + 940) | 0x140;
  STACK[0x230] = ((uint64_t (*)(void))((char *)*(&off_1002C89A0 + (v25 ^ a2) - 320) - 2))();
  ((void (*)(void))((char *)*(&off_1002C89A0 + (v28 ^ 0x158)) - 2))();
  v30 = ((uint64_t (*)(uint64_t, _QWORD))((char *)*(&off_1002C89A0 + v28 - 311) - 3))(a14, 0);
  STACK[0x238] = v30;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * (((v30 != 0) * (v29 ^ 0x6F6)) ^ v28)) - 8))(v30, v31, 2419529101, v32, v33, v34, v35, v36, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_1000E4C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49)
{
  *(_DWORD *)(a44 + 0x66958FC3068777F8) = (a49 ^ 0x6EF57FEF) + ((2 * a49) & 0xDDEAFFDE) - 235152162;
  *(_DWORD *)(a44 + 0x66958FC3068777FCLL) = 325704166;
  JUMPOUT(0x1000E4C68);
}

uint64_t sub_1000E4C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(void),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  _QWORD *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  a22();
  *v52 = 0;
  v52[1] = 0x1369D9E660F15CCDLL;
  v56 = ((uint64_t (*)(uint64_t))a22)(v54 + 0x66958FC3068777F0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v55 + 8 * ((243 * (a52 == 0)) ^ (v53 + 1875438563)))
                                          + 2419529093
                                          - ((v53 + 1166018642) & 0xBA7FF7AD)))(v56);
}

void sub_1000E4D48()
{
  uint64_t v0;
  int v1;

  *(_QWORD *)v0 = 0;
  *(_DWORD *)(v0 + 8) = v1;
  *(_DWORD *)(v0 + 12) = 0;
  JUMPOUT(0x1000E4D54);
}

void sub_1000E4D98()
{
  int v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD v5[29];
  uint64_t v6;

  v5[4] = 0x996A703CF9788810;
  v6 = ((uint64_t (*)(uint64_t, uint64_t, _QWORD *))((char *)*(&off_1002C89A0 + (int)(v1 ^ 0x903715AF)) - 2))(v2, v4, v5);
  __asm { BR              X8 }
}

uint64_t sub_1000E5028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(uint64_t, uint64_t))
{
  int v41;
  int v42;
  uint64_t v43;
  _BOOL4 v44;

  v44 = a41(24, 4101018099) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v43 + 8 * ((987 * v44) ^ v42))
                            - (v41
                             + ((v42 - 680044100) & 0xB8BFB5ED)
                             + 1007)
                            + 1140))();
}

uint64_t sub_1000E5090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(uint64_t, uint64_t))
{
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0x1369D9E660F15CCDLL;
  *(_DWORD *)(a1 + 16) = 0;
  v43 = a41(4096, 1358311088);
  *(_QWORD *)a1 = v43;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (((v43 == 0) * ((v41 ^ 0x58B) + ((v41 - 1000) | 0x12A) - 710)) ^ v41)) - 8))(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1000E511C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * ((103
                                                                          * (((v2 == 0) ^ (v3 - 45)) & 1)) ^ v3))
                                                            + 2419529093
                                                            - ((v3 + 271777358) | 0x80041585)))(a1, a2, 2419529101);
}

uint64_t sub_1000E5178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;

  a22(v37);
  v43 = (void (*)(uint64_t))((char *)*(&off_1002C89A0 + (int)(v39 ^ 0x90371581)) - 2);
  v43(v41);
  v44 = ((uint64_t (*)(uint64_t))v43)(a37);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42 + 8 * ((v38 + v39 + 1136) ^ (4 * (v40 != 0)))) - 8))(v44);
}

uint64_t sub_1000E5354()
{
  int v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1(v2);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v0 + 1081) ^ (2 * ((STACK[0x248] == 0) | (16 * (STACK[0x248] == 0)))))))();
}

uint64_t sub_1000E5384()
{
  int v0;
  int v1;
  uint64_t (*v2)(void);
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v2();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((15 * (v3 == ((v0 + v1 + 8) | 0x68) - 45253)) ^ (v0 + v1 + 985)))
                                          - ((v0 + v1 + 298) ^ 0x1B7)))(v5);
}

uint64_t sub_1000E53D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  if (!v53)
    JUMPOUT(0x1000A7E34);
  a50 = 0;
  a49 = 0;
  v56 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t *, int *))((char *)*(&off_1002C89A0 + v54 - 221) - 2))(*(unsigned int *)((char *)*(&off_1002C89A0 + (v54 ^ 0xFA)) - 3), *(_QWORD *)a53, *(unsigned int *)(a53 + 12), &a50, &a49);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((((v56 ^ 0xCCDBDEBE) + ((2 * (_DWORD)v56) & 0x99B7BD7C) == -589570367) * (v54 + 179)) ^ v54)) - 8))(v56, v57, v58, v59, v60, v61, v62, v63, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000E5490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL4 v24;

  v24 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8 * (v20 ^ 0xEC)) - 3))(*(unsigned int *)(*(_QWORD *)(v22 + 8 * (v20 ^ 0xDD)) - 2), a20, v21) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((v24 * (v20 + 1499)) ^ v20)) - 8))();
}

uint64_t sub_1000E54E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(uint64_t, uint64_t),uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,unint64_t a59)
{
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  unsigned int *v63;
  uint64_t (*v64)(_QWORD, _QWORD, _QWORD, uint64_t *, int *);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t (*v69)(void);
  int v71;
  int v72;

  v67 = v64(*v63, *(_QWORD *)v62, *(unsigned int *)(v62 + 12), &a50, &a49);
  v68 = (v67 ^ 0x7E73DEBE) + ((v60 - 51921789) & (2 * v67)) - 841121840;
  if (v68 == v61)
  {
    v71 = -45017;
  }
  else
  {
    if ((v67 ^ 0x7E73DEBE) + ((v60 - 51921789) & (2 * (_DWORD)v67)) == 2121522878)
    {
      v69 = (uint64_t (*)(void))(*(_QWORD *)(v65
                                          + 8
                                          * (v59 - 1875438195 + 18 * (((a41(24, 4101018099) == 0) ^ 0x6D) & 1) + 247))
                              - 8);
      return v69();
    }
    v72 = 882831569 * ((-1004377353 - ((v66 - 108) | 0xC4226AF7) + ((v66 - 108) | 0x3BDD9508)) ^ 0xA82B27C2);
    *(_DWORD *)(v66 - 108) = v59 + v72 - 1875437980;
    *(_DWORD *)(v66 - 104) = v68 - v72 - 110604966;
    v67 = sub_1000D0DF0((_DWORD *)(v66 - 108));
    if (*(_DWORD *)(v66 - 100) == 314902380)
      v71 = -45016;
    else
      v71 = 0;
  }
  a59 = 0x996A703CF9788810;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65
                                                                        + 8
                                                                        * ((1051
                                                                          * (v71 == ((v59 + 952977539) ^ 0x5769CD99)
                                                                                  + ((v59 + 952977539) & 0x5769CD9A))) ^ (v59 - 1875437897)))
                                                            - 8))(v67, 3969263130, 2419529101);
}

uint64_t sub_1000E5A74@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;

  return ((uint64_t (*)(void))(*(_QWORD *)(v53
                                        + 8
                                        * (((a52 != 0x996A703CF9788810) * (v52 + (a2 ^ (a1 - 246)) + 1722)) ^ a2))
                            - ((a2 + 455) | 2u)
                            + 735))();
}

uint64_t sub_1000E5AC4(uint64_t a1, uint64_t a2, char a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;
  BOOL v9;

  v6 = *(_DWORD *)(v4 + 0x66958FC3068777FCLL) + 813220973;
  v7 = *(_DWORD *)(v4 + 0x66958FC3068777F8) - 487505534;
  v8 = v6 < 0x43E29E4F;
  v9 = v6 > v7;
  if (v8 != v7 < 0x43E29E4F)
    v9 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1809 * (((a3 + v3 + 29) ^ v9) & 1)) ^ v3)) - 8))();
}

uint64_t sub_1000E5B4C@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;

  v6 = (v4 - 1986685284) & 0x766A679A;
  v7 = (*(unsigned __int8 *)(*(_QWORD *)a3 + (v3 + a1)) << 24) | (*(unsigned __int8 *)(*(_QWORD *)a3 + (v3 + a1 + 1)) << 16) | (*(unsigned __int8 *)(*(_QWORD *)a3 + ((v6 + 457) ^ (a2 + 481) ^ 0x7CA13391u) + v3) << 8) | *(unsigned __int8 *)(*(_QWORD *)a3 + (v3 + a1 + 3));
  *(_DWORD *)(a3 + 12) = v3 + 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1074 * (v7 == 0)) ^ v6)) - 4))();
}

uint64_t sub_1000E5BD8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((332 * (((v1 == 0x996A703CF9788810) ^ (v0 + 38)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_1000E5C2C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = v3 + 650116101 > (v4 - 650610410);
  if ((v3 + 650116101) < 0x3A29D5E3 != (v4 - 650610410) < 0x3A29D5E3)
    v7 = (v3 + 650116101) < 0x3A29D5E3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v5 ^ (467 * !v7)))
                            - (((v5 ^ (a3 + 481)) - a3 + 905) ^ 0x381)))();
}

uint64_t sub_1000E5CA8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *(unsigned __int8 *)(v38 + (_DWORD)a1 + v37 + ((v39 - 1094739338) ^ 0xBEBF9CE5) - 276);
  *(_DWORD *)(a8 + 12) = v37 + 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (v39 ^ (1352 * (v40 != 0x996A703CF9788810)))))(v42, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000E5D44(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v8 = v6 + v5 + ((v4 + 457) ^ (a2 - 289));
  v9 = v8 + 219058912;
  v10 = (v4 ^ v3 ^ 0x3C2A239E) + v2;
  v11 = v8 > 0xF2F16D1F;
  v12 = v9 > v10;
  if (v10 < 0xD0E92E0 == v11)
    v11 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((959 * !v11) ^ v4)) - 4))();
}

uint64_t sub_1000E5DC4@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(a2 + 12) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 ^ (1271 * (v4 != 0x996A703CF9788810))))
                            + 2419529093
                            - ((4 * v3) ^ 0x940 ^ (a1 + 436))))();
}

uint64_t sub_1000E5E18()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  _BOOL4 v6;

  v5 = ((v2 + 154) ^ 0xD0294B9A) + v0;
  v6 = v1 + 498125799 > v5;
  if ((v1 + 498125799) < 0x311AA5C9 != v5 < 0x311AA5C9)
    v6 = (v1 + 498125799) < 0x311AA5C9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((v6 * (v3 + ((v2 - 1224770303) & 0xD93795BF) - 90)) ^ v2))
                            - 8))();
}

uint64_t sub_1000E5E9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;

  *(_DWORD *)(a8 + 12) = v43 + 4;
  return (*(uint64_t (**)(BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * (v44 ^ (239 * (v45 == 0x996A703CF9788810)))))(v45 == 0x996A703CF9788810, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1000E5F28(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  _BOOL4 v10;
  int v11;
  _BOOL4 v12;

  v7 = v4 + v5 + a2;
  v8 = v7 + 843813432 + v3 - 883;
  v9 = ((v3 - 574637562) & 0xB27757FD ^ 0x416D200C) + v2;
  v10 = v7 > 0xCDB46DB1;
  v11 = v10 ^ (v9 < 0x324B924E);
  v12 = v8 > v9;
  if (v11)
    v12 = v10;
  return (*(uint64_t (**)(void))(v6 + 8 * ((2019 * !v12) ^ v3)))();
}

void sub_1000E5FB8(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, unsigned int a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_QWORD *a28)
{
  int v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);

  *(_DWORD *)(a7 + 12) = v28;
  *a28 = v30(v29, 925082483, a1, a2, a3, a4, a5, a6 & 0xFFF80000 | (a6 >> 8) & 0x7FFFF);
  JUMPOUT(0x1000E6034);
}

uint64_t sub_1000E60E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(_QWORD, uint64_t),uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v50 = a41(a3 + ((v48 + 1231215089) & 0xB69D2587) + 185500081, 1120292948);
  STACK[0x280] = v50;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((2002 * (v50 != 0)) ^ v48)))(v50, v51, 2419529101, v52, v53, v54, v55, v56, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

void sub_1000E614C()
{
  JUMPOUT(0x1000E28F0);
}

uint64_t sub_1000E61B4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;

  LODWORD(STACK[0x28C]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)(v5 ^ (1456 * (v3 != 0))))
                            - ((v5 ^ (a3 - 384))
                             + (v5 ^ 0xFFFFFFFF6FC8EBFBLL))))();
}

uint64_t sub_1000E6208@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((*v2 != 0) * (v1 + (a1 ^ 0x903716CE) + 51)) | a1)) - 8))();
}

void sub_1000E6240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v22;
  int v23;
  int v24;
  int v25;

  *(_DWORD *)(a3 + 151) = v25;
  a22(a1, a2, a3 + 151);
  *(_QWORD *)v22 = 0;
  *(_DWORD *)(v22 + 8) = v23;
  *(_DWORD *)(v22 + 12) = v24;
  ((void (*)(uint64_t))a22)(v22);
  JUMPOUT(0x1000E59BCLL);
}

uint64_t sub_1000E626C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((57 * (a1 == 0)) ^ (v1 + v2 + 778))))();
}

uint64_t sub_1000E62C8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  _QWORD *v52;
  int v53;
  int v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;

  v56 = v52;
  v57 = a15(a1);
  *v56 = 0;
  *a4 = 0;
  *(_DWORD *)(a31 + 40 * a12 + 36) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v55
                                                      + 8
                                                      * ((((((23 * (v54 ^ 0x9037159D)) ^ (a51 == 0x996A703CF9788810)) & 1) == 0)
                                                        * (v54 + 1875439310)) ^ (v53 + v54 + 298)))
                                          - 8))(v57);
}

uint64_t sub_1000E6304(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(_QWORD, uint64_t))
{
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v43 = a41((a2 - 2046131935), 1120292948);
  STACK[0x268] = v43;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (int)(((((40 * (v41 ^ 0x39E)) ^ 0xFFFFFEBD) + 29 * (v41 ^ 0x395)) * (v43 == 0)) ^ v41)))(v43, v44, 2419529101, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1000E6384()
{
  uint64_t v0;
  char v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1051 * (((v0 == 0) ^ (v2 - v1 + 33)) & 1)) ^ v2))
                            - (v2 + 646)
                            + 998))();
}

uint64_t sub_1000E63BC@<X0>(char a1@<W2>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((1993 * (((*v2 == 0) ^ (a2 ^ (a1 - 42))) & 1)) ^ a2))
                            - 8))();
}

void sub_1000E63F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(void),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  int v40;

  a22();
  *(_QWORD *)a39 = 0;
  *(_DWORD *)(a39 + 8) = v39;
  *(_DWORD *)(a39 + 12) = v40;
  ((void (*)(uint64_t))a22)(a39);
  JUMPOUT(0x1000E530CLL);
}

void sub_1000E6478()
{
  unint64_t v0;
  char *v1;
  _BYTE v2[24];

  v0 = (unint64_t)&v2[qword_1003059A0 ^ qword_1003059A8];
  qword_1003059A8 = 1137813707 * v0 + 0x5751864245CF6939;
  qword_1003059A0 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = (char *)*(&off_1002C50E0
               + ((29
                 * (((uint64_t (*)(uint64_t, uint64_t))((char *)*(&off_1002C89A0
                                                                        + ((-53
                                                                                           * ((qword_1003059A0
                                                                                             - qword_1003059A8) ^ 0x8B)) ^ byte_100254250[byte_100253E30[(-53 * ((qword_1003059A0 - qword_1003059A8) ^ 0x8B))] ^ 0xDC])
                                                                        - 21)
                                                              - 3))(24, 4101018099) == 0)) ^ 0x1EDu))- 4;
  __asm { BR              X8 }
}

uint64_t sub_1000E6580(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 1471034656;
  *(_DWORD *)(a1 + 16) = 0;
  v4 = v2(4096, 1358311088);
  *(_QWORD *)a1 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v4 == 0) ^ 0xA56C9F0) & 1) == 0) | (4
                                                                                 * ((((v4 == 0) ^ 0xA56C9F0) & 1) == 0)) | 0x440u))
                            - 8))();
}

uint64_t sub_1000E65E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v6 + 8) = v3 + 4096;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                           + 8
                                                           * ((1686
                                                             * ((*(_DWORD *)(v6 + 12) - 4093) < 0xFFFFEFFF)) ^ 0x3C3u));
  *(_QWORD *)(v8 - 184) = *(_QWORD *)(v4 + 248) - 13;
  *(_QWORD *)(v8 - 208) = v2;
  *(_QWORD *)(v8 - 176) = v7;
  return v9(a1, a2, 1352897984);
}

uint64_t sub_1000E6668(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((31
                                * (((2 * ((v5 << ((v4 ^ 0x82) + 57)) + a3)) & 0xBF7CEFF8)
                                 + (((v5 << ((v4 ^ 0x82) + 57)) + a3) ^ 0xDFBE77FC)
                                 + v3 > 0xFFFFEFFA)) ^ v4)))();
}

uint64_t sub_1000E7DD8@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((a1 + 37750392) ^ 0x816C070) + ((a1 + 37750392) | 0x816C070) - 346919841)
                                          * (*v1 == 0)) ^ a1))
                            - 8))();
}

uint64_t sub_1000E7E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  void (*v35)(_QWORD *);
  int v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;

  *v37 = 0;
  v37[1] = a16;
  v35(v37);
  v51 = *(_QWORD *)(v41 - 192);
  *(_DWORD *)(v41 - 200) = v36;
  v42 = (void (*)(_QWORD))((char *)*(&off_1002C89A0 + (v39 ^ 0xA56C9FC)) - 2);
  v42(*(_QWORD *)(v41 - 168));
  v42(*(_QWORD *)(v41 - 160));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((1117 * (a35 != 0)) ^ (v39 - 173459187))))(a35, v43, v44, v45, v46, v47, v48, v49, a9, a10, v40, a12, v51, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000E7FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t (*v32)(void);
  int v33;
  uint64_t v34;
  uint64_t v35;

  v35 = v32();
  return (*(uint64_t (**)(uint64_t))(v34 + 8 * ((v33 + 562) ^ (1938 * (a32 != 0)))))(v35);
}

uint64_t sub_1000E8C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = v8 + 32;
  v2 = (v11 ^ v13) + v7;
  v3 = *(_OWORD *)(a2 + v2 - 15);
  v4 = *(_OWORD *)(a2 + v2 - 31);
  v5 = a1 + v2;
  *(_OWORD *)(v5 - 15) = v3;
  *(_OWORD *)(v5 - 31) = v4;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v9 == v13) ^ (v10 + 1064))))();
}

uint64_t sub_1000E8CA0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v2 ^ 0x11C) * (v1 != v0)) ^ v2))
                            - ((v2 + v3) & 0x9F5EDDFA ^ 0xA56C9F4)))();
}

uint64_t sub_1000E8E18()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (63 * (v1 == v0)))) + 173459944 - ((v2 - 519) ^ 0xA56CBA5u)))();
}

uint64_t sub_1000E8F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v6 + v4 + (v3 + 173459874) + 28;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v7 != 0) * v2) ^ v3)) - 4))();
}

void sub_1000E9248(id a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  _BYTE v4[8];

  v2 = (unint64_t)&v4[qword_1003059A0 ^ qword_100305978];
  qword_100305978 = 1137813707 * v2 - 0x1796AD5631F71675;
  qword_1003059A0 = 1137813707 * (v2 ^ 0xE86952A9CE08E98BLL);
  v3 = ((uint64_t (*)(void *))((char *)*(&off_1002C89A0
                                                 + ((-53
                                                                                  * ((qword_1003059A0 - qword_100305978) ^ 0x8B)) ^ byte_100254450[byte_100254030[(-53 * ((qword_1003059A0 - qword_100305978) ^ 0x8B))] ^ 0x27])
                                                 + 10)
                                       - 2))(a2);
  ((void (*)(uint64_t))((char *)*(&off_1002C89A0
                                          + ((-53 * ((qword_1003059A0 - qword_100305978) ^ 0x8B)) ^ byte_100254150[byte_100253D30[(-53 * ((qword_1003059A0 - qword_100305978) ^ 0x8B))] ^ 0x2C])
                                          - 58)
                                - 3))(v3);
}

uint64_t sub_1000E9360()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void (*v5)(_QWORD);
  char v6;

  v0 = qword_1003059A0 - qword_1003059B0 - (_QWORD)&v6;
  v1 = (1137813707 * v0) ^ 0xE86952A9CE08E98BLL;
  v2 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  qword_1003059B0 = v1;
  LOBYTE(v1) = -53 * ((v2 - v1) ^ 0x8B);
  v3 = (uint64_t)*(&off_1002C89A0
                + (v1 ^ byte_100254450[byte_100254030[v1] ^ 0xBE])
                - 200);
  qword_1003059A0 = v2;
  v5 = (void (*)(_QWORD))((char *)*(&off_1002C89A0
                                             + (v1 ^ byte_100254250[byte_100253E30[v1] ^ 0x98])
                                             + 11)
                                   - 2);
  v5(*(unsigned int *)(v3 - 3));
  v5(*(unsigned int *)((char *)*(&off_1002C89A0
                               + ((-53 * (qword_1003059B0 ^ 0x8B ^ qword_1003059A0)) ^ byte_100254250[byte_100253E30[(-53 * (qword_1003059B0 ^ 0x8B ^ qword_1003059A0))] ^ 0xB0])
                               - 213)
                     - 3));
  return ((uint64_t (*)(_QWORD))v5)(*(unsigned int *)((char *)*(&off_1002C89A0
                                                                        + ((-53
                                                                                           * (qword_1003059B0 ^ 0x8B ^ qword_1003059A0)) ^ byte_100254150[byte_100253D30[(-53 * (qword_1003059B0 ^ 0x8B ^ qword_1003059A0))] ^ 0x94])
                                                                        - 219)
                                                              - 3));
}

uint64_t sub_1000E9500(__SecKey *a1, const UInt8 *a2, CFIndex length, UInt8 **a4, unsigned int *a5)
{
  const __CFData *v8;
  const __CFData *v9;
  const __CFData *v10;
  unsigned int v11;
  UInt8 *v12;
  UInt8 *v13;
  uint64_t v14;
  CFErrorRef error;
  CFRange v17;

  error = 0;
  v8 = CFDataCreate(0, a2, length);
  v9 = SecKeyCreateSignature(a1, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, v8, &error);
  if (!v9)
  {
    v14 = 4294925247;
    if (!v8)
      return v14;
    goto LABEL_8;
  }
  v10 = v9;
  v11 = CFDataGetLength(v9);
  v12 = (UInt8 *)malloc_type_malloc(v11, 0xF748375AuLL);
  if (v12)
  {
    v13 = v12;
    v17.length = CFDataGetLength(v10);
    v17.location = 0;
    CFDataGetBytes(v10, v17, v13);
    v14 = 0;
    *a4 = v13;
    *a5 = v11;
  }
  else
  {
    v14 = 4294925268;
  }
  CFRelease(v10);
  if (v8)
LABEL_8:
    CFRelease(v8);
  return v14;
}

uint64_t sub_1000E95F0()
{
  NSObject *v0;
  const __CFString **v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  dispatch_time_t v5;
  _QWORD v7[6];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t);
  uint64_t v13;
  const __CFString *v14;
  void *v15;
  _QWORD v16[3];
  _QWORD v17[3];

  v8 = 0;
  v9 = &v8;
  v10 = 0x3052000000;
  v11 = sub_1000E97C4;
  v12 = sub_1000E97D4;
  v13 = 0;
  v0 = dispatch_semaphore_create(0);
  if (v0)
  {
    if (getenv("RunningTestSUInfoRefetch"))
    {
      v16[0] = CFSTR("IgnoreExistingCollection");
      v17[0] = +[NSNumber numberWithUnsignedChar:](NSNumber, "numberWithUnsignedChar:", 1);
      v17[1] = &__kCFBooleanTrue;
      v16[1] = CFSTR("scheduleCollectionForCurrentBuild");
      v16[2] = CFSTR("NetworkTimeoutInterval");
      v17[2] = &off_1002D82D8;
      v1 = (const __CFString **)v16;
      v2 = (void **)v17;
      v3 = 3;
    }
    else
    {
      v14 = CFSTR("scheduleCollectionForCurrentBuild");
      v15 = &__kCFBooleanTrue;
      v1 = &v14;
      v2 = &v15;
      v3 = 1;
    }
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3254779904;
    v7[2] = sub_1000E97E0;
    v7[3] = &unk_1002C8B18;
    v7[4] = v0;
    v7[5] = &v8;
    MAEPerformCollectionWithCompletion(0, +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v2, v1, v3), v7);
    v5 = dispatch_time(0, 70000000000);
    v4 = 4294924355;
    if (!dispatch_semaphore_wait(v0, v5))
    {
      if (v9[5])
        v4 = 4294924355;
      else
        v4 = 0;
    }
  }
  else
  {
    v4 = 4294925268;
  }
  dispatch_release(v0);
  _Block_object_dispose(&v8, 8);
  return v4;
}

void sub_1000E97AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000E97C4(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_1000E97D4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

intptr_t sub_1000E97E0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000E97F4(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 3);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 8);
}

void sub_1000E9830(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  _Block_object_dispose(*(const void **)(a1 + 32), 3);
}

void sub_1000E9860(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1000E9904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  v10 = v9 + v6;
  if (a6)
    v11 = v8 == (v9 ^ 0x68D9B4BF) - 1818;
  else
    v11 = 1;
  v12 = !v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8 * ((2027 * v12) ^ v10))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

uint64_t sub_1000E9954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  v10 = v9 + v6;
  if (a6)
    v11 = v8 == 0;
  else
    v11 = 1;
  v12 = !v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (((((v9 + 1632529369) & 0x35D7E79B)
                                                                                             + 209)
                                                                                            * v12) ^ v10))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

uint64_t sub_1000E99AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  int v12;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (v12 | (32 * (a11 != 1)))))(a1, a2, a3, a4, a5);
}

uint64_t sub_1000E9A04()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v2 - 945) ^ (1906 * (v1 ^ 1))))
                            + v3
                            - ((v2 + 1776020643) & 0xFEFDBFE7)))();
}

void sub_1000E9A40(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;

  v12 = a1;
  v13 = 0;
  v4 = 562267567 * (((&v7 | 0xBF346368) - (&v7 & 0xBF346368)) ^ 0xACAE9F2B);
  v15 = v4 ^ 0x3C8333C8;
  v16 = (v2 + 868) ^ v4;
  v17 = 0x483CF90335B0B89FLL;
  v10 = 0;
  v11 = &v6;
  v8 = v1;
  v9 = &v5;
  v7 = (char *)&v5 + 4;
  sub_1000EA3AC((uint64_t)&v7);
  *(_DWORD *)(v3 + 28) = v14;
}

uint64_t sub_1000E9BBC(uint64_t a1)
{
  unint64_t v1;
  unsigned int v3;
  char *v4;
  uint64_t v5;
  int v6;

  v1 = 941074649
     * (((unint64_t)&v3 - 2 * ((unint64_t)&v3 & 0xBB02B8911101A284) - 0x44FD476EEEFE5D7CLL) ^ 0xBA845F7311C96DE0);
  v4 = (char *)&loc_100218588 + v1 - 4;
  v5 = a1;
  v6 = -804802556 - v1;
  sub_1002184C8((uint64_t)&v3);
  return v3;
}

void sub_1000E9C70(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  const UInt8 *v4;
  CFIndex v5;
  char *v6;
  UInt8 *v7;
  unsigned int v8;

  v1 = 755310587 * ((a1 + 704913948 - 2 * (a1 & 0x2A04221C)) ^ 0x6B0879D5);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(const UInt8 **)(a1 + 16);
  v5 = *(_DWORD *)(a1 + 48) ^ v1;
  v7 = 0;
  v8 = 0;
  v6 = (char *)*(&off_1002C8B50
               + (int)(v2 | (16
                           * (sub_1000E9500((__SecKey *)(*(_QWORD *)(v3 - 0x6262E0568D5240A8) - 0x30B75577B6EAB23ELL), v4, v5, &v7, &v8) != 0))))- ((v2 - 1342710291) & 0x50081DFE ^ 0x1F2);
  __asm { BR              X9 }
}

uint64_t sub_1000E9D60@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((a4 != 0) * (((a1 + 532) | 0x200) ^ 0x12A)) ^ a1))
                            - ((a1 - 1485734520) & 0x588E868B ^ 0x60ELL)))();
}

void sub_1000E9DB0(void *a1)
{
  uint64_t v1;
  int v2;

  free(a1);
  *(_DWORD *)(v1 + 24) = v2;
}

uint64_t sub_1000EA338(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;

  v1 = 516615401 * (result ^ 0x88BC887B73630632);
  v2 = *(_QWORD *)(result + 16) ^ v1;
  v3 = *(_DWORD *)(result + 24) ^ v1;
  v4 = *(_DWORD *)result - v1;
  v5 = *(_QWORD *)(result + 32) - v1;
  v6 = *(_DWORD *)(result + 4) + v1;
  v7 = *(_DWORD *)(result + 44) - v1;
  v8 = v5 == v2;
  v9 = v5 > v2;
  v10 = v8;
  if ((v4 & 1) == 0)
    v9 = v10;
  if (v9)
    v11 = v6;
  else
    v11 = v3;
  *(_DWORD *)(result + 8) = v11 ^ v7;
  return result;
}

void sub_1000EA3AC(uint64_t a1)
{
  int v1;
  unsigned int v2;

  v1 = 562267567 * ((~(_DWORD)a1 & 0xCACA2F0 | a1 & 0xF3535D0F) ^ 0x1F365EB3);
  v2 = ((*(_DWORD *)(a1 + 64) ^ v1) + 1104762671) & 0xBE26A337;
  __asm { BR              X13 }
}

uint64_t sub_1000EA5EC()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 >= ((v1 - 921658553) & 0x36EF65FB ^ 0x6A9584DB);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((4 * v3) | (16 * v3)) ^ v1)) - 8))();
}

uint64_t sub_1000EA634()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (25 * (v0 >= 1883888767))))
                            - (v1 - 254)
                            - (v1 ^ 0x102u)
                            + 392))();
}

uint64_t sub_1000EA674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (((v8 == a7 + v7) * ((39 * (a7 ^ 0xC3)) ^ 0x593)) ^ a7))
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 4294924373);
}

uint64_t sub_1000EA6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v7
                                                                                                 + 8
                                                                                                 * (((((*(_QWORD *)STACK[0x650] == 0) ^ (43 * (v6 ^ 0x5C))) & 1) * (((v6 + 1326) | 0x40) ^ 0x481)) ^ v6)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1000EA6FC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((188 * (a1 ^ 0x386) - 626) | 0x100) ^ 0x381)
                                          * (*(_QWORD *)(v1 + 48) == 0)) ^ a1))
                            - 4))();
}

uint64_t sub_1000EA73C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + 56) = -1279805853;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((*(_QWORD *)(v1 + 64) == 0x4E36C53A99817805)
                                               * (((v0 + 618318529) & 0xDB25357F) - 1361)) ^ v0))
                            - (v0 ^ 0x52CLL)))();
}

uint64_t sub_1000EDD94()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + 72) = 286036353;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_QWORD *)(v0 + 120) != 0x6262E0568D5240A8)
                                * (444 * (((v1 - 868) | 0x4CC) ^ 0x6CF) - 265)) ^ v1)))();
}

uint64_t sub_1000EE018@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a1 + 843) * (v2 != v1)) ^ a1)) - 138 * (a1 ^ 0x373u) + 1514))();
}

uint64_t sub_1000EE04C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((*(_QWORD *)(v1 - 0x6262E0568D5240A0) == 0) ^ v0))
                            - ((v0 + 223) ^ ((v0 - 941) | 0x48Cu) ^ 0xCLL)))();
}

uint64_t sub_1000EE090()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((*(_QWORD *)(v1 - 0x6262E0568D524090) == 0) | (8
                                                                                  * (*(_QWORD *)(v1
                                                                                               - 0x6262E0568D524090) == 0)) | (v0 - 935))))();
}

uint64_t sub_1000EE0C0(void *a1)
{
  free(a1);
  return sub_1000EE778();
}

uint64_t sub_1000EE0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((1954 * ((v7 & (v7 ^ a7) | (v7 - a7) & ~(v7 ^ a7)) >= 0)) ^ ((v7 ^ (v9 - 378)) + v7 + ((v7 - v8) ^ 0x48F04B67))))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, 4294925295);
}

uint64_t sub_1000EE124()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  STACK[0x688] = 0;
  v3 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                     + 8 * ((1946 * (v1 == v0 + 1097664314 + ((v0 - 1074594600) & 0xFE9FF6DF))) ^ v0))
                         - 8);
  LODWORD(STACK[0x680]) = 44010;
  STACK[0x678] = STACK[0x628];
  return v3();
}

uint64_t sub_1000EE184(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  char v4;
  uint64_t v5;

  STACK[0x820] = STACK[0x688];
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)((1141
                                               * (((((((a4 + 1097665145) | 0x60D) - 1390) ^ 0xBE92F718) - (v4 & 1) - a4) | (a4 - (((((a4 + 1097665145) | 0x60D) - 1390) ^ 0xBE92F718) - (v4 & 1)))) >> 31)) ^ (a4 + 1097665370)))
                            - 12))();
}

uint64_t sub_1000EE1F0()
{
  int v0;
  int v1;
  unsigned int v2;
  size_t v3;
  void *v4;

  v2 = ((v0 << ((v1 ^ 0x92) + 19 * (v1 ^ 0x79) + 98)) & 0x2D5F1BA0) + (v0 & 0xFFFFFFF0 ^ 0x96AF8DDE);
  STACK[0x960] = 0x5C13350084191667;
  LODWORD(STACK[0x8B4]) = 2046997083;
  LODWORD(STACK[0x660]) = v2;
  v3 = v2 + 1766879794;
  STACK[0x668] = v3;
  v4 = malloc_type_malloc(v3, 0x68517D9BuLL);
  STACK[0x670] = (unint64_t)v4;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((1933 * (v4 != 0)) ^ v1)))();
}

uint64_t sub_1000EE2A0()
{
  int v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))((char *)*(&off_1002C8B50
                                   + (((malloc_type_malloc(STACK[0x668], 0x2DFD1FE4uLL) != 0)
                                     * (((v0 - 1414597335) & 0x54510BFC) + 252)) ^ v0))
                         - 8);
  return v1();
}

uint64_t sub_1000EE2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v4 ^ (1305 * (v3 != 0))))
                            - ((167 * (v4 ^ 0x3FDu)) ^ 0x34FLL)))();
}

uint64_t sub_1000EE370@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  _BOOL4 v10;
  unint64_t v11;

  v10 = v8 > 0xB33E00DD;
  v11 = a3 + v4 + ((unint64_t)(v4 < v3) << 32);
  *(_BYTE *)(v9 + v11) = ((*(_BYTE *)(a2 + v11) << ((v6 - 55) ^ 0xAB)) & 0x72) + (*(_BYTE *)(a2 + v11) ^ 0x39);
  if (v10 == v4 - 249188345 < v5)
    v10 = v4 - 249188345 < v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((19 * !v10) ^ v6)) - 12))();
}

uint64_t sub_1000EE40C@<X0>(uint64_t a1@<X2>, unint64_t a2@<X4>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;

  v6 = (v4 + 1276985653) & 0xEAABBB63;
  STACK[0x608] = a2;
  *(_BYTE *)(a2 + ((unint64_t)(v5 < v3 + v6 - 835) << 32) + a3 + v5 - 0x353232397341B08CLL) = -71;
  v7 = LODWORD(STACK[0x660]) + 1830568236;
  v8 = v5 - 1473282081 < v7;
  if (v7 < 0x3CBCEFA != v5 - 1473282081 < 0x3CBCEFA)
    v8 = v7 < 0x3CBCEFA;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((11 * !v8) ^ v6)) - (v6 ^ 0x34BLL)))();
}

void sub_1000EE43C()
{
  JUMPOUT(0x1000EE798);
}

uint64_t sub_1000EE44C@<X0>(int a1@<W8>)
{
  int v1;
  char v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1759
                                          * (((((480185459 - (v2 & 2)) ^ 0x1C9E347B) << ((v3 + 36) & 0xFE ^ 0xF1)) | 0x9A36A368)
                                           - ((480185459 - (v2 & 2)) ^ 0x1C9E347B) != (a1 | v1) - 1707755614)) ^ (v3 - 909)))
                            - 4))();
}

uint64_t sub_1000EE4D4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (a1 ^ (2
                                               * (((*(_DWORD *)(v1 + 112) == 1494274718) ^ (a1 - 102) ^ 0x79) & 1u))))
                            - 4))();
}

uint64_t sub_1000EE50C()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  _BYTE *v4;

  STACK[0x748] = (unint64_t)&STACK[0x40AF9B25784C1C2D];
  STACK[0x990] = (unint64_t)&STACK[0xC28];
  STACK[0x8A0] = 224;
  STACK[0x6D8] = (unint64_t)&STACK[0xBE4];
  v3 = (v0 + 1885773067) & 0x8F996459;
  v4 = sub_100224C8C(&STACK[0xBE4], 0, 0x40uLL);
  STACK[0x878] = v2 + 104;
  STACK[0x770] = 0;
  LODWORD(STACK[0x8DC]) = v1;
  return ((uint64_t (*)(_BYTE *))((char *)*(&off_1002C8B50
                                                    + (int)((178
                                                           * ((int)(v3 ^ 0x45C01460) >= (int)((((v3 ^ 0x13B) - 640) ^ 0x320)
                                                                                            + 1170214517))) ^ v3 ^ 0x13B))
                                          - 12))(v4);
}

uint64_t sub_1000EE608()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v1 >= v2 + (v0 ^ 0x3C73702E) - 1014198538 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v4 | (8 * v4)) ^ v0)) - 12))();
}

uint64_t sub_1000EE640()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((966 * (v0 == ((5 * (v2 ^ 0x154)) ^ (v1 + 1109)))) ^ v2)) - 8))();
}

uint64_t sub_1000EE674()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 + 515) * (v0 >= v1 + 449)) ^ v2)) - 8))();
}

uint64_t sub_1000EE69C()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  char v5;

  v4 = v0 - 1014198538;
  v5 = arc4random();
  *((_BYTE *)&STACK[0xBB0] + v3) = (v5 + 61 - ((2 * v5) & 0x7A)) ^ 0xC8;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((v4 + 173) | 0x83) ^ ((v3 == 15) * v1)))
                            - ((((((v4 + 173) | 0x83) - 755) | 8u) + 1104) ^ v2)))();
}

void sub_1000EE72C()
{
  JUMPOUT(0x1000EE5C0);
}

uint64_t sub_1000EE738(void *a1)
{
  uint64_t v1;
  int v2;

  free(a1);
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + ((*(_QWORD *)(v1 - 0x6262E0568D524090) == 0) | (8
                                                                                 * (*(_QWORD *)(v1 - 0x6262E0568D524090) == 0)) | (v2 - 935))))();
}

uint64_t sub_1000EE778()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  free((void *)(v2 - 0x6262E0568D5240A8));
  *(_QWORD *)(v1 + 120) = 0x6262E0568D5240A8;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1287
                                        * (((*(_QWORD *)(v1 + 104) == 0) ^ (5
                                                                                             * (((v0 + 115) | 0x32) ^ 0x5D))) & 1)) ^ (v0 - 1506)))
                            - 4))();
}

uint64_t sub_1000EE7F4(void *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = (v1 + 85) | 0x32;
  free(a1);
  *(_QWORD *)(v2 + 104) = 0;
  *(_DWORD *)(v2 + 112) = 1494274718;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((*(_QWORD *)(v2 + 136) != 0)
                                               * (((v4 + 1937937245) & 0x8C7D6BFA) + 1656)) ^ v4))
                            - 8))();
}

void sub_1000EE854(void *a1)
{
  uint64_t v1;

  free(a1);
  *(_QWORD *)(v1 + 136) = 0;
  *(_DWORD *)(v1 + 144) = 495404763;
  *(_DWORD *)v1 = 2023518720;
  JUMPOUT(0x1000EE8BCLL);
}

void sub_1000EE8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  *(_DWORD *)(v7 + 56) = a7;
}

uint64_t sub_1000EE908()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v1 & 1 ^ 0x8E44B413) & ((v0 ^ 0x29C) - 2080103743))
                                          + (v0 ^ 0xCE4D2751 ^ v1 & 1 ^ 0x8E44B413)
                                          + 294666848
                                          - ((v0 ^ 0xCE4D2751 ^ v1 & 1 ^ 0x8E44B413) & 0x4009008D) != -1785399693) ^ v0))
                            - 4))();
}

uint64_t sub_1000EE990()
{
  int v0;
  unsigned int v1;
  _BOOL4 v2;

  v1 = ((LODWORD(STACK[0x9E4]) - 546355592 + ((v0 + 1188019835) & 0xB93046FF) - 1741) & 0xFFFFFFF0 ^ 0x6DE2FFFB)
     + ((v0 - 607781234) & (2 * (LODWORD(STACK[0x9E4]) - 546355592 + ((v0 + 1188019835) & 0xB93046FF) - 1741)));
  STACK[0x778] = 0x5C13350084191667;
  LODWORD(STACK[0xA8C]) = 2046997083;
  v2 = malloc_type_malloc(v1 - 1843593195, 0x68517D9BuLL) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((43 * v2) ^ v0)) - 4))();
}

uint64_t sub_1000EEA4C()
{
  int v0;
  size_t v1;
  _BOOL4 v2;

  v2 = malloc_type_malloc(v1, 0x2DFD1FE4uLL) != 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1332 * v2) ^ (v0 + 186)))
                            - ((v0 + 186) ^ 0x655 ^ (v0 + 450157947) & 0xE52B27FF ^ 0x290)))();
}

uint64_t sub_1000EEABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(a5 + 8 * ((692 * (((v6 == 546355592) ^ (v5 + 116)) & 1)) ^ v5)))();
}

uint64_t sub_1000EEB14@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  _BOOL4 v7;

  v6 = a2 + 1860990888 + ((unint64_t)(v2 > 0x6EEC77A8) << 32);
  *(_BYTE *)(v4 + v6) = (*(_BYTE *)(STACK[0x648] + v6) ^ 0x7D) + ((2 * *(_BYTE *)(STACK[0x648] + v6)) & 0xFB) - 68;
  v7 = (v5 + 174257720) > 0x2AF3AFC1;
  if ((v5 + 174257720) < 0x2AF3AFC0)
    v7 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((403 * !v7) ^ (v3 - 1498))) - 4))();
}

void sub_1000EEBC0()
{
  JUMPOUT(0x1000EEB50);
}

uint64_t sub_1000EEBC8()
{
  int v0;
  int v1;
  _BOOL4 v2;

  STACK[0x810] = 0x5C13350084191667;
  LODWORD(STACK[0x998]) = 2046997083;
  v2 = malloc_type_malloc(((v1 - 546355592 + ((v0 + 1761581363) & 0x970064C3) - 129) & 0xFFFFFFF0 ^ 0x2B75BAEE)+ ((2 * (v1 - 546355592 + ((v0 + 1761581363) & 0x970064C3) - 129)) & 0x56EB75C0)- 729135838, 0x68517D9BuLL) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1475 * ((((v0 - 122) ^ v2) & 1) == 0)) ^ v0)) - 12))();
}

uint64_t sub_1000EEC8C(unint64_t a1)
{
  int v1;
  int v2;
  size_t v3;
  uint64_t (*v4)(void);

  LODWORD(STACK[0x688]) = v2;
  STACK[0x690] = a1;
  STACK[0x680] = v3;
  v4 = (uint64_t (*)(void))((char *)*(&off_1002C8B50
                                   + ((1670
                                     * (((malloc_type_malloc(v3, 0x2DFD1FE4uLL) == 0) ^ ((((v1 | 0xA0) + 29) ^ 0x45) + 1)) & 1)) ^ (v1 | 0xA0)))
                         - 8);
  return v4();
}

uint64_t sub_1000EED00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (v4 ^ 0x2090BB5E ^ (1259
                                                            * ((((v4 - 546354594) ^ 0x52B ^ (((v5 - v4) | (v4 - v5)) >> 31)) & 1) == 0))))
                            - 4))();
}

uint64_t sub_1000EED78@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  unint64_t v8;
  _BOOL4 v9;

  v6 = v3 - 72;
  v7 = v3 - 496;
  v8 = a2 + 200571139 + ((unint64_t)(v2 > 0xBF47903) << 32);
  *(_BYTE *)(v4 + v8) = (v6 ^ *(_BYTE *)(STACK[0x648] + v8) ^ 0x78) + ((2 * *(_BYTE *)(STACK[0x648] + v8)) & 0xFB) + 60;
  v9 = (v5 + 1655910843) > 0x8343EB44;
  if ((v5 + 1655910843) < 0x8343EB43)
    v9 = 1;
  return (*(uint64_t (**)(void))(a1 + 8 * ((2 * !v9) | (32 * !v9) | v7)))();
}

void sub_1000EEE2C()
{
  JUMPOUT(0x1000EEDB8);
}

uint64_t sub_1000EEE34()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  _BOOL4 v7;

  v2 = v0 + 668;
  LOBYTE(STACK[0xBC0]) = LOBYTE(STACK[0xBB0]) ^ 0xF5;
  LOBYTE(STACK[0xBC1]) = LOBYTE(STACK[0xBB1]) ^ 0xF5;
  LOBYTE(STACK[0xBC2]) = LOBYTE(STACK[0xBB2]) ^ 0xF5;
  LOBYTE(STACK[0xBC3]) = LOBYTE(STACK[0xBB3]) ^ 0xF5;
  LOBYTE(STACK[0xBC4]) = LOBYTE(STACK[0xBB4]) ^ 0xF5;
  LOBYTE(STACK[0xBC5]) = (v0 - 100) ^ LOBYTE(STACK[0xBB5]) ^ 0x51;
  LOBYTE(STACK[0xBC6]) = LOBYTE(STACK[0xBB6]) ^ 0xF5;
  LOBYTE(STACK[0xBC7]) = LOBYTE(STACK[0xBB7]) ^ 0xF5;
  LOBYTE(STACK[0xBC8]) = LOBYTE(STACK[0xBB8]) ^ 0xF5;
  LOBYTE(STACK[0xBC9]) = LOBYTE(STACK[0xBB9]) ^ 0xF5;
  LOBYTE(STACK[0xBCA]) = LOBYTE(STACK[0xBBA]) ^ 0xF5;
  LOBYTE(STACK[0xBCB]) = LOBYTE(STACK[0xBBB]) ^ 0xF5;
  LOBYTE(STACK[0xBCC]) = LOBYTE(STACK[0xBBC]) ^ 0xF5;
  LOBYTE(STACK[0xBCD]) = LOBYTE(STACK[0xBBD]) ^ 0xF5;
  LOBYTE(STACK[0xBCE]) = LOBYTE(STACK[0xBBE]) ^ 0xF5;
  LOBYTE(STACK[0xBCF]) = LOBYTE(STACK[0xBBF]) ^ 0xF5;
  LODWORD(STACK[0xC88]) = -366034007;
  STACK[0xC68] = 0x6205527E24145F56;
  STACK[0xC70] = 0x6396BFB8EB1E3730;
  STACK[0xC78] = 0x9C69404714E1C8CFLL;
  LODWORD(STACK[0xC80]) = 1334441409;
  LODWORD(STACK[0xC84]) = 1279171888;
  v3 = STACK[0x990];
  v4 = STACK[0x9E4];
  v5 = *(_QWORD *)(v1 + 8 * v0) - 4;
  v6 = STACK[0x648];
  STACK[0x918] = v5;
  STACK[0xA98] = v3;
  LODWORD(STACK[0x914]) = v4;
  STACK[0x9A0] = v6;
  v7 = v4
     - 1064500308
     + ((2 * *(_DWORD *)(v3 + 68)) & 0x3A ^ 0x38)
     + (*(_DWORD *)(v3 + 68) & 0x3F ^ 0x5EFE4FE3)
     + ((v2 + 476) ^ 0x2Cu)
     - 1075581437 > 0xFFFFFFBF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((2 * v7) | (8 * v7)) ^ v2)) - 4))();
}

uint64_t sub_1000EEF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (((a7 == v8) * (((v7 - 1713) | 0x143) ^ 0x279)) ^ (v7 - 1539)))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1000EEFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v8
                                                                                                 + 8
                                                                                                 * ((799 * (((v6 - 349) & *(_DWORD *)(v7 + 96)) != 0)) ^ v6)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1000EEFE4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((v0 + 1390) ^ 0x6D4) * ((__int16)LODWORD(STACK[0x680]) < -21510)) ^ (v0 + 848)))
                            - 8))();
}

uint64_t sub_1000EF020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  unsigned __int16 v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (((v7 == ((unsigned __int16)a7 ^ 0xAA95)) * ((2 * a7) ^ 0x619)) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294924368);
}

uint64_t sub_1000EF054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  STACK[0xA08] = (unint64_t)&STACK[0x40AF9B25784C1C1D];
  STACK[0x8A0] = 208;
  v9 = *(_QWORD *)(v7 + 104);
  STACK[0x908] = v7 + 104;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((1181 * (v9 != 0)) ^ v6 ^ 0x274))
                                                                                                - ((((v6 ^ 0x274) - 197) | 0x120u) ^ ((v6 ^ 0x473u) - 1452))))(a1, a2, a3, a4, a5, a6, 4294924366);
}

uint64_t sub_1000EF0CC@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((((*(_DWORD *)(v1 + 112) < 1494274782) ^ ((a1 ^ 0xC3) - 41)) & 1)
                                        * ((a1 ^ 0x298) - 930)) ^ a1 ^ 0x3C3))
                            - 8))();
}

uint64_t sub_1000EF120()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((92 * (v0 == v1 + ((v2 + 1412615184) & 0xABCD36FF) - 1086 - 591)) ^ v2))
                            - 12))();
}

uint64_t sub_1000EF16C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v6;

  v6 = (v5 + 731383719) < 0x4C28C12F;
  *(_BYTE *)(v4 + a2 + 969041580 + ((unint64_t)(v2 > 0x39C266AC) << 32)) = (*(_BYTE *)(STACK[0x648]
                                                                                            + a2
                                                                                            + 969041580
                                                                                            + ((unint64_t)(v2 > 0x39C266AC) << 32)) ^ 0xFD)
                                                                                + ((2
                                                                                  * *(_BYTE *)(STACK[0x648]
                                                                                             + a2
                                                                                             + 969041580
                                                                                             + ((unint64_t)(v2 > 0x39C266AC) << 32))) & 0xFB)
                                                                                + 60;
  if ((v5 + 731383719) >= 0x4C28C12F)
    v6 = (v5 + 731383719) > 0x4C28C130;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((419 * !v6) ^ (v3 - 59))) - 12))();
}

void sub_1000EF210()
{
  JUMPOUT(0x1000EF1A4);
}

void sub_1000EF218()
{
  JUMPOUT(0x1000EF228);
}

uint64_t sub_1000EF2E8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t v11;

  v10 = v3 < v8;
  v11 = (v4 + 1);
  *(_BYTE *)(v9 + v11 + a2 + ((unint64_t)(v11 < v2) << 32)) = 57;
  if (v10 == (int)v11 + v5 < v6)
    v10 = (int)v11 + v5 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((!v10 * ((v7 + 265) ^ 0x265)) ^ v7)) - 8))();
}

uint64_t sub_1000EF350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_DWORD *)(v7 + 72);
  v12 = 1448877107 * ((2 * ((v9 - 192) & 0x6AB54B10) - (v9 - 192) + 357217515) ^ 0x6471A9C1);
  *(_DWORD *)(v9 - 128) = v8 - v12 + 22;
  *(_DWORD *)(v9 - 192) = v11 - v12 + (((v8 - 618) | 0x6C8) ^ (v8 + 657864034));
  *(_DWORD *)(v9 - 188) = v12 + 1940630650;
  *(_DWORD *)(v9 - 160) = v12 ^ 0x7B0FA0C7;
  *(_QWORD *)(v9 - 152) = v7 + 0x8ED1C57AC03BA9CLL;
  *(_QWORD *)(v9 - 144) = v7 + 0x511395B3EF1E7D5;
  *(_QWORD *)(v9 - 120) = v7 + 0xC2C3062343A3C9FLL;
  *(_DWORD *)(v9 - 112) = v12 + 2085568962;
  *(_QWORD *)(v9 - 176) = v6;
  *(_QWORD *)(v9 - 168) = v10;
  *(_QWORD *)(v9 - 136) = v5;
  sub_1001FA09C(v9 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((22 * (*(_DWORD *)(v9 - 184) == 0)) ^ v8)) - 8))();
}

uint64_t sub_1000EF478()
{
  uint64_t v0;
  int v1;
  size_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;

  v4 = STACK[0x690];
  bzero((void *)STACK[0x690], v2);
  v5 = STACK[0x7A8];
  v6 = STACK[0x6B0];
  v7 = STACK[0x688];
  v8 = 176504963 * ((((v3 - 192) | 0x5EA181C6) - (v3 - 192) + ((v3 - 192) & 0xA15E7E38)) ^ 0xD40768D9);
  *(_DWORD *)(v3 - 160) = v1 - v8 - 996;
  *(_QWORD *)(v3 - 152) = STACK[0x680];
  *(_QWORD *)(v3 - 136) = v4;
  *(_QWORD *)(v3 - 176) = &unk_10025DB94;
  *(_QWORD *)(v3 - 168) = v5;
  LOBYTE(STACK[0x16F4]) = -125 * ((((v3 + 64) | 0xC6) - (v3 + 64) + ((v3 + 64) & 0x38)) ^ 0xD9) + 52;
  *(_DWORD *)(v3 - 144) = v7 - v8 + ((v1 + 1548832628) & 0xA3AEAF67) - 390366531;
  *(_DWORD *)(v3 - 128) = v8 + 290818466;
  *(_DWORD *)(v3 - 188) = v8 + v7 - (((v7 << (((v1 - 8) | 0x40) ^ 0xC1)) + 1006670394) & 0x83001420) - 545238224;
  *(_DWORD *)(v3 - 184) = v6 - v8 - 1406209041;
  sub_100175E40(v3 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 | ((*(_DWORD *)(v3 - 192) == 0) << 6))) - 12))();
}

uint64_t sub_1000EF5D0()
{
  int v0;
  void *v1;
  int v2;
  unint64_t v3;
  int v4;
  int v5;

  STACK[0xA68] = v3;
  LODWORD(STACK[0x8FC]) = v2 - 416087949 + v4;
  free((void *)(STACK[0x7A8] - 0x5C13350084191667));
  free(v1);
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + (int)((v0 - 715342939) & 0xA0A217FE | (2
                                                                    * (((v5 == ((((v0 - 715342939) & 0xA0A217FE) + 873) ^ 0x6CD)) ^ (((v0 - 91) & 0xFE) - 99)) & 1)))))();
}

uint64_t sub_1000EF6EC()
{
  int v0;
  void *v1;

  v1 = malloc_type_malloc(0x10uLL, 0x87509263uLL);
  STACK[0x9D8] = (unint64_t)v1;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + (((v1 != 0) * (((v0 | 0x52) - 210) ^ 0x6FF)) ^ (v0 | 0x52))))();
}

uint64_t sub_1000EF734(_BYTE *a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BYTE *v6;
  void *v7;

  v5 = (v1 + 177) | 0x43;
  v6 = (_BYTE *)((v2 | ((unint64_t)(v2 < 0x4E7C351B) << 32)) + v3 + 0x24AC37F30D6E635BLL);
  *a1 = v6[((v5 ^ 0x2C6u) + 180) ^ 0xDB53C80CA41566BFLL];
  v6 -= 0x24AC37F35BEA9941uLL;
  a1[1] = v6[204];
  a1[2] = v6[205];
  a1[3] = v6[206];
  a1[4] = v6[207];
  a1[5] = v6[208];
  a1[6] = v6[209];
  a1[7] = v6[210];
  a1[8] = v6[211];
  a1[9] = v6[212];
  a1[10] = v6[213];
  a1[11] = v6[214];
  a1[12] = v6[215];
  a1[13] = v6[216];
  a1[14] = v6[217];
  a1[15] = v6[218];
  LOWORD(STACK[0x936]) = 14940;
  v7 = malloc_type_malloc(*(_DWORD *)(v4 + 56) ^ 0xB3B7B663, 0xCE56C7F9uLL);
  STACK[0x7A0] = (unint64_t)v7;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((v7 == 0) | (32 * (v7 == 0))) ^ v5)) - 12))();
}

uint64_t sub_1000EF868()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((92
                                * ((*(_DWORD *)(v2 + 56) ^ v1 ^ 0xCE62FFF57FE3FF99)
                                 + 0x319D000AB77F716BLL
                                 + ((((v0 + 111) | 0x203u) + 4291296139) & (2 * (*(_DWORD *)(v2 + 56) ^ v1))) != 929263876)) ^ v0)))();
}

uint64_t sub_1000EF910@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v4 < a2;
  *(_BYTE *)(v6 + a1 - 0xD419D851AD1D08) = *(_BYTE *)(v5 + v3 - 0x237A1252698E1FBBLL) - 60;
  if (v9 == v7 - 0x78D8BADE373AC89FLL < a2)
    v9 = v7 - 0x78D8BADE373AC89FLL < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((97 * v9) ^ v2)) - 8))();
}

uint64_t sub_1000EF9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  LOWORD(STACK[0x76E]) = (((unsigned __int16)*(_DWORD *)(v8 + 56) << (v6 + 52)) & 0xF36E ^ 0x6046)
                       + (*(_DWORD *)(v8 + 56) ^ 0xCFD4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (((v7 != 0) * ((v6 - 1612) ^ 0x266)) ^ (v6 - 1612)))
                                                                                               - 12))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1000EF9B4(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, unsigned __int16 a6)
{
  uint64_t v6;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1757 * (((a3 + 15925) & 0xC7CD ^ 0xAD33) == a6)) ^ a3)) - 4);
  LODWORD(STACK[0x680]) = a4;
  return v7();
}

uint64_t sub_1000EF9F8(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  __int16 v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v8 = (a1 + a2 + 660497543);
  v9 = (unsigned __int16)(v5 - ((2 * (a2 + 2183)) & 0x164E) + ((a2 + 2183) ^ (a5 + v6) ^ (v6 + 1664) ^ 0xF765) - 23806) < 0xFFFDu;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * ((v9 | (v9 << 7)) ^ (a5 - 440))) - 8))(v8);
}

uint64_t sub_1000EFA64(int a1, uint64_t a2, int a3)
{
  unsigned __int16 v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int16 v12;

  v10 = ((unsigned __int16)(a1 - 19449) ^ (v5 + 1)) + ((v7 + 1620) & (2 * (a1 + 46087)));
  v11 = (v10 | ((unint64_t)(v10 < v5) << 32)) + v4 + STACK[0x628] + 0x19A31ED8AB7D63A1;
  v12 = (((*(unsigned __int8 *)v11 - 2 * (*(_BYTE *)v11 & 0xF)) << 8) - 28928) ^ 0x8F00;
  LOWORD(v11) = (v12 - ((2 * v12) & 0xCC00) - 6405) ^ 0xE6FB | (*(unsigned __int8 *)(v11 + 1)
                                                              - ((2 * *(unsigned __int8 *)(v11 + 1)) & 0x174)
                                                              + 698) ^ 0x2BA;
  LODWORD(v11) = (unsigned __int16)((v11 - ((2 * v11) & 0x57D4) - 21526) ^ v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((1667
                                          * ((v3 | ((v3 < ((unsigned __int16)a3 ^ 0x6B9Eu)) << 16))
                                           - 880735259 >= ((v6 + 1275) & (2 * (_DWORD)v11))
                                                        + (v11 ^ 0xFCFDF77C)
                                                        - 830243697)) ^ a3))
                            - 12))();
}

uint64_t sub_1000EFB88(int a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((100
                                          * (*(char *)(STACK[0x628] + (a1 - 670167033)) < (char)(18 * (a3 ^ 0xA7) + 46))) ^ ((a3 ^ 0x570) - 956)))
                            - 4))();
}

uint64_t sub_1000EFBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((a7 == (((a8 ^ 0xDA) + 120) ^ 0x8E))
                                          * ((((a8 ^ 0xDA) - 914) | 0x448) - 1582)) ^ a8 ^ 0xDA))
                            - 4))();
}

uint64_t sub_1000EFC34(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int16 a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((a6 - 1642554256) & 0x61E767CD ^ 0x7B0) * (a4 == 44026)) ^ a6))
                            - 8))();
}

uint64_t sub_1000EFC78(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  v5 = a3 + 3;
  STACK[0x678] = v5;
  return sub_1000EF9F8(a1, a2, v5, a4, a5);
}

uint64_t sub_1000EFC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((((v8 + 291425579 + v7) | 0x2C0) - 329) ^ (v8 + 291425579) & (v7 + 703)) * (a7 == 2)) ^ v8)))();
}

uint64_t sub_1000EFCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;

  STACK[0x688] = a3 + 3;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a6 < (__int16)(a8 - 23247)) * ((a8 - 1539) ^ 0x99)) ^ (a8 - 1303))))();
}

uint64_t sub_1000EFCFC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t (*v9)(void);

  v9 = *(uint64_t (**)(void))(v8
                           + 8
                           * (int)(((((a8 - 1473375982) & 0x57D1EEED) + (a8 ^ 0xFFFFFF73)) * (a6 == -21554)) ^ (a8 - 1390)));
  LODWORD(STACK[0x680]) = a4;
  return v9();
}

uint64_t sub_1000EFD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((v7 != 0) * (v6 ^ 0x266)) ^ v6))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925268);
}

uint64_t sub_1000EFD7C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  *(_BYTE *)(a2 + 1860990888 + ((v2 - 647803102) & 0x269CAABC) + v4 - 0x353232397341B138) = -71;
  v5 = (v3 + 1675682312) > 0xD1C3E1F4;
  if ((v3 + 1675682312) < 0xD1C3E1F3)
    v5 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((4 * !v5) | (8 * !v5) | (v2 - 1194)))
                            - ((v2 - 1040245906) & 0x3E00DFE7 ^ 0x227)))();
}

uint64_t sub_1000EFE64@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  _BOOL4 v9;
  uint64_t v10;

  v9 = v4 < v5;
  v10 = (v3 + 1);
  *(_BYTE *)(v8 + v10 + a2 + ((unint64_t)(v10 < v2) << 32)) = 57;
  if (v9 == (int)v10 + v6 < v5)
    v9 = (int)v10 + v6 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((!v9 * ((2 * (v7 ^ 0x275)) ^ 0xA0)) | v7)) - 4))();
}

uint64_t sub_1000EFED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  v10 = STACK[0x698];
  v11 = *(_QWORD *)(STACK[0x698] + 64);
  v12 = *(_DWORD *)(STACK[0x698] + 72);
  v13 = 1448877107 * (((v9 - 192) & 0x8D583415 | ~((v9 - 192) | 0x8D583415)) ^ 0x39CD6C0);
  *(_DWORD *)(v9 - 160) = v13 ^ 0x7B0FA0C7;
  *(_DWORD *)(v9 - 112) = v13 + 2085568962;
  *(_QWORD *)(v9 - 152) = v10 + 0x8ED1C57AC03BA9CLL;
  *(_QWORD *)(v9 - 144) = v10 + 0x511395B3EF1E7D5;
  *(_QWORD *)(v9 - 136) = a8;
  *(_DWORD *)(v9 - 192) = v12 - v13 + 657862940;
  *(_DWORD *)(v9 - 188) = v13 + 1940630650;
  *(_DWORD *)(v9 - 128) = v8 - v13 + 473;
  *(_QWORD *)(v9 - 120) = v10 + 0xC2C3062343A3C9FLL;
  *(_QWORD *)(v9 - 176) = a7;
  *(_QWORD *)(v9 - 168) = v11;
  sub_1001FA09C(v9 - 192);
  return (*(uint64_t (**)(void))(a5 + 8 * (((*(_DWORD *)(v9 - 184) != 0) * (((v8 - 164) | 0x1D7) - 375)) ^ v8)))();
}

uint64_t sub_1000EFFEC()
{
  void *v0;
  void *v1;
  int v2;

  free(v1);
  free(v0);
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + (int)(((STACK[0xA68] != 0) * ((v2 + 1899831602) & 0x8EC2D9EF ^ 0x771)) ^ (v2 - 866))))();
}

uint64_t sub_1000EFFFC()
{
  int v0;
  void *v1;
  uint64_t v2;
  size_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;

  bzero(v1, v3);
  v8 = STACK[0x778];
  v9 = 176504963 * ((2 * ((v7 - 192) & 0x61636310) - (v7 - 192) + 513580264) ^ 0x943A75F7);
  v10 = LODWORD(STACK[0xA8C]) - v9 - 1406209041;
  *(_DWORD *)(v7 - 188) = v9 + v0 - (((v0 << (v4 ^ 0xCC)) + 607780906) & 0x83001420) - 744682968;
  *(_DWORD *)(v7 - 184) = v10;
  *(_QWORD *)(v7 - 152) = v2;
  LOBYTE(STACK[0x16F4]) = -125 * ((2 * ((v7 + 64) & 0x10) - (v7 + 64) - 24) ^ 0xF7) + 52;
  *(_DWORD *)(v7 - 128) = v9 + 290818466;
  *(_QWORD *)(v7 - 176) = &unk_10025DB94;
  *(_QWORD *)(v7 - 168) = v8;
  *(_DWORD *)(v7 - 160) = v5 - v9 - 315;
  *(_QWORD *)(v7 - 136) = v1;
  *(_DWORD *)(v7 - 144) = v0 - v9 - 589810407;
  sub_100175E40(v7 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((2022 * (*(_DWORD *)(v7 - 192) == 0)) ^ v5)) - 12))();
}

uint64_t sub_1000F0118()
{
  int v0;
  int v1;
  unint64_t v2;
  void *v3;
  int v4;
  int v5;

  v5 = v0;
  STACK[0xA68] = v2;
  LODWORD(STACK[0x8FC]) = v1 - 615530983;
  free((void *)(STACK[0x778] - 0x5C13350084191667));
  free(v3);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((194 * (v5 == 13 * (v4 ^ 0x6D0) - 377)) | (v4 - 1217))) - 4))();
}

uint64_t sub_1000F0134@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v4 = STACK[0x688];
  *(_BYTE *)(v3 + a2 + 200571139 - 0x353232397341B08CLL) = -71;
  if ((v4 - 2113406977) < 0xAD7DB2DD != (v2 - 1384272136) < 0xAD7DB2DD)
    v5 = (v4 - 2113406977) < 0xAD7DB2DD;
  else
    v5 = v2 - 1384272136 < (v4 - 2113406977);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2023 * v5) ^ v2)) - 4))();
}

uint64_t sub_1000F01E8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;

  v10 = v7 < v5;
  *(_BYTE *)(a2 + (v4 + 1) + (v3 ^ 0x47u) + ((unint64_t)(v4 + 1 < v2) << 32) + v9 - 929) = 57;
  v11 = v6 + v4 + 930;
  v12 = v10 ^ (v11 < v5);
  v13 = v11 < v7;
  if (!v12)
    v10 = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v10 * v8) ^ v3)) - 4))();
}

uint64_t sub_1000F0258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_DWORD *)(v6 + 72);
  v11 = 1448877107 * ((-15257655 - ((v8 - 192) | 0xFF172FC9) + ((v8 - 192) | 0xE8D036)) ^ 0x71D3CD1C);
  *(_DWORD *)(v8 - 160) = v11 ^ 0x7B0FA0C7;
  *(_QWORD *)(v8 - 120) = v6 + 0xC2C3062343A3C9FLL;
  *(_DWORD *)(v8 - 192) = v10 - v11 + 657862940;
  *(_DWORD *)(v8 - 188) = v11 + 1940630650;
  *(_QWORD *)(v8 - 136) = v5;
  *(_DWORD *)(v8 - 112) = v11 + 2085568962;
  *(_QWORD *)(v8 - 176) = v4;
  *(_QWORD *)(v8 - 168) = v9;
  *(_DWORD *)(v8 - 128) = v7 - v11 - 284;
  *(_QWORD *)(v8 - 152) = v6 + 0x8ED1C57AC03BA9CLL;
  *(_QWORD *)(v8 - 144) = v6 + 0x511395B3EF1E7D5;
  sub_1001FA09C(v8 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((102 * (*(_DWORD *)(v8 - 184) == ((v7 - 161973690) & 0x9A782FC) - 228)) ^ v7))
                            - 8))();
}

uint64_t sub_1000F038C()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  int v9;

  v6 = STACK[0x690];
  bzero((void *)STACK[0x690], STACK[0x680]);
  v7 = STACK[0x810];
  v8 = STACK[0x998];
  v9 = 176504963 * (((~(v5 - 192) | 0x4034B360) + ((v5 - 192) | 0xBFCB4C9F)) ^ 0x356DA581);
  *(_QWORD *)(v5 - 136) = v6;
  *(_DWORD *)(v5 - 160) = v2 - v9 - 64;
  *(_QWORD *)(v5 - 152) = v3;
  *(_QWORD *)(v5 - 176) = &unk_10025DB94;
  *(_QWORD *)(v5 - 168) = v7;
  LOBYTE(STACK[0x16F4]) = -125 * (((~(v5 + 64) | 0x60) + ((v5 + 64) | 0x9F)) ^ 0x81) + 52;
  *(_DWORD *)(v5 - 144) = v1 - v9 + 524646950;
  *(_DWORD *)(v5 - 128) = v9 + 290818466;
  *(_DWORD *)(v5 - 188) = v9 + v1 - ((v0 - 2097148589) & (2 * v1 - 1458271676)) + 369774389;
  *(_DWORD *)(v5 - 184) = (((v2 + 805) | 0x2C4) ^ 0xAC2EF522) - v9 + v8;
  sub_100175E40(v5 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((496 * (*(_DWORD *)(v5 - 192) != 0)) ^ v2)) - 12))();
}

uint64_t sub_1000F04B8()
{
  int v0;
  int v1;
  void *v2;

  free((void *)(STACK[0x810] - 0x5C13350084191667));
  free(v2);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1051 * (v1 == ((v0 + 1162892241) & 0x3AAFA76F) - 526)) ^ (v0 - 1053)))
                            - 8))();
}

uint64_t sub_1000F04C8()
{
  int v0;
  void *v1;

  free(v1);
  free((void *)STACK[0x690]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((((v0 - 1978300128) & 0x75EA725F ^ 0x2CC) + 70) ^ (v0 - 1978300128) & 0x75EA725F))
                            - 12))();
}

uint64_t sub_1000F04D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  unsigned __int16 v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((973 * (v7 == (unsigned __int16)((a7 ^ 0x1DC) - 22296 + 5 * (a7 ^ 0x1DC)))) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294924368);
}

uint64_t sub_1000F0514()
{
  int v0;
  int v1;
  void *v2;

  STACK[0x9B0] = 0x5C13350084191667;
  LODWORD(STACK[0x898]) = 2046997083;
  v2 = malloc_type_malloc((((v0 ^ 0x84) + 1218) ^ 0xC0220C58) + (v1 & 0xFFFFFFF0 ^ 0x3FDDF57B) + ((2 * v1) & 0x7FBBEAE0), 0x68517D9BuLL);
  STACK[0x690] = (unint64_t)v2;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1879 * (v2 != 0)) ^ v0)) - 8))();
}

uint64_t sub_1000F05B0()
{
  uint64_t v0;
  size_t v1;
  int v2;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(*(_QWORD *)(v0
                                     + 8
                                     * (((malloc_type_malloc(v1, 0x2DFD1FE4uLL) != 0) * (((v2 - 2) | 4) - 390)) ^ v2))
                         - 12);
  return v3();
}

uint64_t sub_1000F05F0(uint64_t a1)
{
  int v1;
  int v2;

  STACK[0x680] = a1 + 0x353232397341B08CLL;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1231 * (v2 == ((v1 - 424) | 0x190) - 501)) ^ v1)) - 4))();
}

uint64_t sub_1000F0674@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;

  *(_BYTE *)(STACK[0x680] + a1 + v1 - 0x353232397341B08CLL) = -71;
  v4 = ((v2 + 812414074) & 0xCF938BFE ^ 0x7F9EDA0A) + v3;
  v5 = v1 - 2008234524 < v4;
  if (v1 - 2008234524 < 0xBF7CCDCF != v4 < 0xBF7CCDCF)
    v5 = v4 < 0xBF7CCDCF;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((2 * !v5) | (4 * !v5) | (v2 - 141))) - 8))();
}

uint64_t sub_1000F07D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  _BOOL4 v9;
  unsigned int v10;
  int v11;
  _BOOL4 v12;

  v9 = v7 < v5;
  v10 = (v3 ^ 0x306 ^ (v6 + 423)) + v4;
  *(_BYTE *)(v8 + (v4 + 1) + a2 + ((unint64_t)(v4 + 1 < v2) << 32)) = 57;
  v11 = v9 ^ (v10 < v5);
  v12 = v10 < v7;
  if (!v11)
    v9 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2 * !v9) | (4 * !v9) | v3)) - 8))();
}

uint64_t sub_1000F0844(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  v7 = *(_QWORD *)(v2 + 64);
  v8 = *(_DWORD *)(v2 + 72);
  v9 = 1448877107 * ((((v6 - 192) | 0xC561C967) + (~(v6 - 192) | 0x3A9E3698)) ^ 0xB45AD44C);
  *(_QWORD *)(v6 - 120) = v2 + 0xC2C3062343A3C9FLL;
  *(_DWORD *)(v6 - 160) = v9 ^ 0x7B0FA0C7;
  *(_DWORD *)(v6 - 128) = v3 - v9 + 23;
  *(_QWORD *)(v6 - 136) = v5;
  *(_DWORD *)(v6 - 192) = v8 - v9 + 657862940;
  *(_DWORD *)(v6 - 188) = v9 + 1940630650;
  *(_QWORD *)(v6 - 176) = v4;
  *(_QWORD *)(v6 - 168) = v7;
  *(_QWORD *)(v6 - 152) = v2 + 0x8ED1C57AC03BA9CLL;
  *(_QWORD *)(v6 - 144) = v2 + 0x511395B3EF1E7D5;
  *(_DWORD *)(v6 - 112) = v9 + 2085568962;
  sub_1001FA09C(v6 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((251
                                          * (*(_DWORD *)(v6 - 184) == ((v3 - 352912115) & 0x778B47AF)
                                                                    + ((v3 - 604) | 0x80)
                                                                    - 1652705213)) ^ v3))
                            - 8))();
}

uint64_t sub_1000F0980()
{
  size_t v0;
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;

  v4 = STACK[0x690];
  bzero((void *)STACK[0x690], v0);
  v5 = STACK[0x9B0];
  v6 = STACK[0x898];
  v7 = 176504963 * ((((v3 - 192) | 0x7D73C2A0) - ((v3 - 192) | 0x828C3D5F) - 2104738465) ^ 0xF7D52BBF);
  *(_DWORD *)(v3 - 128) = v7 + 290818466;
  *(_QWORD *)(v3 - 152) = STACK[0x680];
  *(_DWORD *)(v3 - 188) = v7 + v1 - ((2 * v1 - 2143021782) & 0x83001420) + 27399336;
  *(_DWORD *)(v3 - 184) = v6 - v7 - 1406209041;
  *(_DWORD *)(v3 - 144) = v1 - v7 + 182271897;
  *(_QWORD *)(v3 - 176) = &unk_10025DB94;
  *(_QWORD *)(v3 - 168) = v5;
  *(_DWORD *)(v3 - 160) = v2 - v7 + 18;
  *(_QWORD *)(v3 - 136) = v4;
  LOBYTE(STACK[0x16F4]) = -125 * ((((v3 + 64) | 0xA0) - ((v3 + 64) | 0x5F) + 95) ^ 0xBF) + 52;
  sub_100175E40(v3 - 192);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (int)(((*(_DWORD *)(v3 - 192) == 0) * ((v2 + 248374761) & 0xF1321B8F ^ 0x7B6)) ^ v2))
                            - 12))();
}

uint64_t sub_1000F0AC8()
{
  int v0;
  void *v1;
  int v2;
  int v3;

  STACK[0x7C8] = STACK[0x690];
  LODWORD(STACK[0x8B0]) = v2 - 86721661;
  free((void *)(STACK[0x9B0] - 0x5C13350084191667));
  free(v1);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((((v3 - 250771931) & 0xEF279E8 ^ 0x4AF) * (v0 == 0)) ^ (v3 + 377)))
                            - 12))();
}

uint64_t sub_1000F0B88@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;

  v10 = v7 < v6;
  *(_BYTE *)(v9 + ((v3 + 998) ^ 0x728u) + v4 + a2 + ((unint64_t)(((v3 + 998) ^ 0x728u) + v4 < v2) << 32)) = 57;
  v11 = v5 + v4 + 1;
  v12 = v10 ^ (v11 < v6);
  v13 = v11 < v7;
  if (!v12)
    v10 = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((!v10 * v8) ^ v3)) - 8))();
}

uint64_t sub_1000F0BF4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_DWORD *)(v0 + 72);
  v7 = 1448877107 * ((v4 - 192) ^ 0x713B1D2A);
  *(_DWORD *)(v4 - 128) = v1 - v7 - 1188;
  LODWORD(STACK[0x640]) = 10 * (v1 ^ 0x772);
  *(_DWORD *)(v4 - 160) = v7 ^ 0x7B0FA0C7;
  *(_QWORD *)(v4 - 144) = v0 + 0x511395B3EF1E7D5;
  *(_QWORD *)(v4 - 136) = v3;
  *(_DWORD *)(v4 - 112) = v7 + 2085568962;
  *(_QWORD *)(v4 - 120) = v0 + 0xC2C3062343A3C9FLL;
  *(_QWORD *)(v4 - 176) = v2;
  *(_QWORD *)(v4 - 168) = v5;
  *(_QWORD *)(v4 - 152) = v0 + 0x8ED1C57AC03BA9CLL;
  *(_DWORD *)(v4 - 192) = v6 - v7 + ((v1 - 1380192298) & 0x52440FCD ^ 0x273637D1);
  *(_DWORD *)(v4 - 188) = v7 + 1940630650;
  sub_1001FA09C(v4 - 192);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((*(_DWORD *)(v4 - 184) != 0) * (LODWORD(STACK[0x640]) ^ 0x395)) ^ v1))
                            - 4))();
}

uint64_t sub_1000F0D20()
{
  void *v0;

  free(v0);
  free((void *)STACK[0x670]);
  return sub_1000F1C00();
}

uint64_t sub_1000F0D30()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v5;
  int v6;

  v1 = STACK[0x640];
  v2 = STACK[0x670];
  bzero((void *)STACK[0x670], STACK[0x668]);
  v3 = STACK[0x960];
  v4 = STACK[0x8B4];
  v5 = STACK[0x660];
  v6 = 176504963 * ((~(v0 - 192) & 0x4183DB2 | (v0 - 192) & 0xFBE7C24D) ^ 0x8EBED4AD);
  *(_QWORD *)(v0 - 136) = v2;
  *(_DWORD *)(v0 - 128) = v6 + 290818466;
  *(_QWORD *)(v0 - 152) = STACK[0x608];
  *(_DWORD *)(v0 - 160) = v1 - v6 - 746;
  *(_DWORD *)(v0 - 144) = v5 - v6 + (v1 ^ 0xB40BA4B8);
  *(_DWORD *)(v0 - 188) = v6 + v5 - ((2 * v5 - 761207708) & 0x83001420) + ((v1 + 178) | 0x28D) - 1429179016;
  *(_DWORD *)(v0 - 184) = v4 - v6 - 1406209041;
  *(_QWORD *)(v0 - 176) = &unk_10025DB94;
  *(_QWORD *)(v0 - 168) = v3;
  LOBYTE(STACK[0x16F4]) = -125 * ((~(v0 + 64) & 0xB2 | (v0 + 64) & 0x4D) ^ 0xAD) + 52;
  sub_100175E40(v0 - 192);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1801 * (*(_DWORD *)(v0 - 192) == 0)) ^ v1)) - 8))();
}

uint64_t sub_1000F0E74()
{
  int v0;
  void *v1;
  int v2;
  int v3;

  STACK[0x7C8] = STACK[0x670];
  LODWORD(STACK[0x8B0]) = v3 - 1543298272;
  free((void *)(STACK[0x960] - 0x5C13350084191667));
  free(v1);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (int)((104 * (((v0 - (v2 - 1741)) | (v2 - 1741 - v0)) >> 31)) ^ (v2 - 1043)))
                            - ((v2 - 1420) ^ 0x149)))();
}

uint64_t sub_1000F0EFC()
{
  int v0;
  void *v1;

  v1 = malloc_type_malloc(0x10uLL, 0xA3FE12B2uLL);
  STACK[0xA78] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((992 * (v1 != 0)) ^ v0)) - 4))();
}

uint64_t sub_1000F0F60(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((21
                                          * (a1
                                           - STACK[0xA68]
                                           - (LODWORD(STACK[0x8FC]) - 584873627)
                                           - ((unint64_t)((LODWORD(STACK[0x8FC]) - 584873627) < 0x26564779) << 32)
                                           + 643188601 > 0xF)) ^ v1))
                            - (v1
                             - 1137)
                            + 365))();
}

void sub_1000F1018(int8x16_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;

  v5 = *(int8x16_t *)(v2 + v3 + a2 + (v4 ^ 0x7B4u));
  v6.i64[0] = 0xD5D5D5D5D5D5D5D5;
  v6.i64[1] = 0xD5D5D5D5D5D5D5D5;
  v7 = veorq_s8(v5, v6);
  v8.i64[0] = 0xAAAAAAAAAAAAAAAALL;
  v8.i64[1] = 0xAAAAAAAAAAAAAAAALL;
  v9 = vandq_s8(vaddq_s8(v5, v5), v8);
  v8.i64[0] = 0x2C2C2C2C2C2C2C2CLL;
  v8.i64[1] = 0x2C2C2C2C2C2C2C2CLL;
  *a1 = vaddq_s8(vaddq_s8(v7, v8), v9);
  JUMPOUT(0x1000F1118);
}

uint64_t sub_1000F1064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  *(_BYTE *)(v5 + a1 - 0x3C44038ACD509433) = (*(_BYTE *)(a2 + v4 + v2 + 1741) ^ 0xD5)
                                             + ((2 * *(_BYTE *)(a2 + v4 + v2 + 1741)) & 0xAA)
                                             + 44;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((677 * (v6 + 1 == v3 + 16)) ^ v7)) - 12))();
}

uint64_t sub_1000F1164@<X0>(void *a1@<X0>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  int v4;

  v4 = 11 * (v3 ^ (a3 + 1698));
  free(a1);
  STACK[0xA68] = 0;
  LODWORD(STACK[0x8FC]) = 1228062212;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((((v4 - 485) | 0x280) + 274) * (a2 == 0)) ^ v4)) - 8))();
}

uint64_t sub_1000F11C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((((v7 - 485) | 0x280) + 274) * (a7 == 0)) ^ v7)) - 8))();
}

uint64_t sub_1000F11F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 + 8 * ((((STACK[0x938] | STACK[0x770] | STACK[0xA78]) != 0) * (a7 ^ 0x28D)) ^ a7))
                                                                                               - (a7 ^ 0x20Bu)
                                                                                               + 117))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1000F1240@<X0>(int a1@<W8>)
{
  uint64_t v1;

  LOWORD(STACK[0x936]) = 14927;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1199 * (LODWORD(STACK[0xA24]) != (a1 ^ 0x4A) + 369822296)) ^ a1 ^ 0x4A))
                            - 12))();
}

uint64_t sub_1000F128C@<X0>(int a1@<W8>)
{
  __int16 v1;
  int v2;
  uint64_t v3;
  int v4;

  v4 = a1 + 315674944;
  LOWORD(STACK[0x936]) = ((v1 - 3352) ^ 0x5F6F) - 9501 + (((v1 - 3352) << ((v4 ^ 1) & 0xCF)) & 0xBEDE);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((v4 | 0x210A30) ^ 0x12F1DCE8 ^ (1243
                                                                              * (((v2 - (v4 | 0x210A30)) | ((v4 | 0x210A30u) - v2)) >> 31))))
                            - 82 * ((v4 | 0x210A30) ^ 0x12F1DE38u)
                            + 648))();
}

uint64_t sub_1000F1334()
{
  int v0;
  __int16 v1;
  __int16 v2;
  uint64_t v3;
  int v4;

  v4 = (4 * v0) ^ 0x9F0;
  LOWORD(STACK[0x936]) = ((v2 + 8656) ^ 0xFFE2) + v1 + ((v4 + 32052) & (2 * (v2 + 8656))) + 33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1632 * (LODWORD(STACK[0x8DC]) != -510232870)) ^ v4)) - 8))();
}

uint64_t sub_1000F13A0@<X0>(int a1@<W8>)
{
  __int16 v1;
  __int16 v2;
  int v3;
  __int16 v4;
  void *v5;
  uint64_t v6;

  v3 = a1 - 6;
  v4 = v2 + (v1 ^ 0xB75);
  LOWORD(STACK[0x936]) = v4 + ((v3 ^ 0xF9D4) & (2 * v1) ^ 0xE914) - 32172;
  v5 = malloc_type_malloc((unsigned __int16)(v4 + ((v3 ^ 0xF9D4) & (2 * v1) ^ 0xE914) - 32172 - 14924), 0x21A57AD4uLL);
  v6 = (uint64_t)*(&off_1002C8B50 + (((v5 != 0) * (v3 + 1016)) ^ v3));
  STACK[0x9D8] = (unint64_t)v5;
  return ((uint64_t (*)(void))(v6 - ((v3 + 589986095) & 0xDCD584C7 ^ 0x8DLL)))();
}

uint64_t sub_1000F1488(_BYTE *a1)
{
  __int16 v1;
  int v2;
  uint64_t v3;

  *a1 = 1;
  a1[1] = (((((unsigned __int16)(v1 - 14927) >> 8)
           - (((unsigned __int16)(v1 - 14927) >> 8 << (((v2 + 67) ^ 0xEC) - 32)) & 0xE2)
           + 1) ^ 2)
         - 16) ^ 0xF3;
  a1[2] = (v1 + (~(2 * v1 + 98) | 0xF) - 86) ^ 0xF8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((LODWORD(STACK[0xA24]) != 369823000) << 8) | ((LODWORD(STACK[0xA24]) != 369823000) << 9)) ^ (v2 - 263)))
                            - 8))();
}

uint64_t sub_1000F1524@<X0>(_BYTE *a1@<X0>, int a2@<W8>)
{
  char v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v6;

  a1[3] = 4;
  v5 = LOWORD(STACK[0xA24]) - (((LOWORD(STACK[0xA24]) + 29416) & 0x460F ^ STACK[0xA24] & 5) << ((a2 ^ v2) + 52)) - 18190;
  a1[4] = BYTE1(v5) ^ 0xC6;
  a1[5] = v5 ^ 0xA;
  v6 = (LODWORD(STACK[0xA24]) | ((unint64_t)(LODWORD(STACK[0xA24]) < v3) << 32)) == 369823000;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v6 | (2 * v6)) ^ a2)) - 4))();
}

uint64_t sub_1000F15F4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 117) ^ (251 * (v1 ^ 1)))) - 173 * (v0 ^ 0x6CAu) + 1207))();
}

uint64_t sub_1000F16EC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  _BYTE *v6;

  *(_BYTE *)(a1 + (a2 + v2)) = 1;
  v6 = (_BYTE *)(((a2 - 380576369) | ((unint64_t)((a2 - 380576369) < 0x3EF18C4D) << 32))
               + a1
               - 1056017493
               + ((v3 - 1211) | 8u));
  *v6 = ((unsigned __int16)(v4 - 2 * ((v4 + 8656) & 0x330F ^ v4 & 8) + 21719) >> 8) ^ 0x33;
  v6[1] = (v4 - 2 * ((v4 - 48) & 0xF ^ v4 & 8) - 41) ^ 7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 ^ (446 * (v4 > 0x12F1DE30)))) - 8))();
}

uint64_t sub_1000F17C0(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  int v5;

  v5 = ((v3 - 317840944 - a2) & ~(v3 - 317840944)) >= 0;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                                                 + 8
                                                                                                 * (int)((((a2 + 103891030) & 0xF9CEBFB1) + 1400) ^ a2 ^ ((v5 << 7) | (v5 << 9))))
                                                                                     - 8))(a1, 0x5E15CF25B1259CECLL, (v2 + 3), 0x60DA7C9A38CA41A8, 0x591752146C914B2ALL, (a2 + 1341118952) & 0xF79B7FFF);
}

uint64_t sub_1000F18A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8
                                                     * (int)((226
                                                            * ((((a7 ^ (unint64_t)(a1 - v7 + a3)) & a7) >> (__clz(a7 ^ (unint64_t)(a1 - v7 + a3) | 1) ^ 0x3Fu)) & 1)) ^ (a7 | 0x667))))(a1, 0x5E15CF25B1259CECLL);
}

uint64_t sub_1000F1910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((1997 * (v7 >= (unint64_t)(a7 + 1725) - 1725)) ^ (a7 + 967)))
                            - (((a7 + 246) | 0x251u) ^ 0x35FLL)))();
}

uint64_t sub_1000F1954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int8x16_t *v5;
  uint64_t v6;
  int8x16_t *v7;
  uint64_t v8;
  int8x16_t v9;

  v9.i64[0] = -1;
  v9.i64[1] = -1;
  *v5 = vaddq_s8(*v7, v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((((v6 & 0xFFFFFFFFFFFFFFF0) == 16) * (((a5 - 428) | 0x200) - 116)) ^ (a5 - 1344)))
                            - 4))();
}

void sub_1000F19A0()
{
  JUMPOUT(0x1000F1978);
}

uint64_t sub_1000F19A8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v0 ^ 0x235) - 761) * (v2 != v1)) ^ v0 ^ 0x235)) - 12))();
}

void sub_1000F19D4()
{
  int v0;

  STACK[0xA68] = STACK[0x690];
  LODWORD(STACK[0x8FC]) = v0 + 498926374;
  JUMPOUT(0x1000F19F0);
}

uint64_t sub_1000F1A5C()
{
  int v0;
  void *v1;

  v1 = malloc_type_malloc(0x10uLL, 0x2FA76BCuLL);
  STACK[0x770] = (unint64_t)v1;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + (((((31 * (v0 ^ 0x21D) - 461) | 0x245) ^ 0x2FF) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1000F1AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((v7 == 0) * ((v6 ^ 0x2CC) + 70)) ^ v6))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925268);
}

uint64_t sub_1000F1B3C()
{
  void *v0;

  free(v0);
  STACK[0xA68] = 0;
  LODWORD(STACK[0x8FC]) = 1228062212;
  return sub_100167ED4();
}

void sub_1000F1B80()
{
  JUMPOUT(0x1000F1B8CLL);
}

void sub_1000F1C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  sub_1000EE8C4(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t sub_1000F1C08()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((5 * (v1 ^ 0x175)) ^ 0x45)) - 4))();
}

void sub_1000F1C88()
{
  JUMPOUT(0x1000F1C40);
}

uint64_t sub_1000F1C90@<X0>(void *a1@<X0>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;
  unsigned int v6;

  v3 = (a2 >> (((v2 - 98) ^ 0xF9) & 0xCF)) ^ 9 | a2 ^ 0xFFFFFF9D;
  v4 = ((v3 - ((2 * v3) & 0x78) + 60) >> 2) ^ 0xF | (v3 - ((2 * v3) & 0x78) + 60) ^ 0x3C;
  v5 = ((1 - (v4 | ~(((v4 - 2 * (v4 & 1) + 3) & 0xFE) >> 1))) & 1) == 0;
  v6 = -42022 * ((v5 ^ 0xB70BFCD7) + 2 * v5) - 641645590;
  free(a1);
  STACK[0x7C8] = 0;
  LODWORD(STACK[0x8B0]) = 984789230;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((1029 * (v6 == 0)) ^ v2)))();
}

uint64_t sub_1000F1D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (((*(_DWORD *)(v6 + 4) == v7) * ((((v8 & 0x760C7FCF) - 1713) | 0x143) ^ 0x279)) ^ ((v8 & 0x760C7FCF) - 1539)))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1000F1E08(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v2 + 1898111181 + ((v1 + 141034823) | 0x80022030);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((21
                                          * (a1
                                           - v3
                                           - v5
                                           - ((unint64_t)(v5 < 0x42BFC71D) << 32)
                                           + 1119864605 < 0x10)) ^ v1))
                            - 8))();
}

uint64_t sub_1000F1ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 + a1 - 0x5B62404DAF3DBB47) = *(_BYTE *)(v7 + v4 + v1)
                                             - ((*(unsigned __int8 *)(v7 + v4 + v1) << ((v3 ^ 0x1D) + 52)) & 0xEA)
                                             - 11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((37 * (v6 + 1 == v2 + 16)) ^ v3)) - 8))();
}

void sub_1000F1F40()
{
  int v0;

  LODWORD(STACK[0x8DC]) = v0 - 16;
  JUMPOUT(0x1000F1B40);
}

uint64_t sub_1000F1F84()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((92 * (v0 == (((v2 ^ 0x33E) + 1610) ^ (v1 + 1118) ^ (5 * (v2 ^ 0x33E))))) ^ v2))
                            - 12))();
}

uint64_t sub_1000F1FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  BOOL v8;
  int v9;

  if (STACK[0x648])
    v8 = STACK[0x688] == 0;
  else
    v8 = 1;
  v9 = !v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (a7 ^ (1713 * v9)))
                                                                                                - ((a7 - 629) ^ ((a7 - 14) | 0x44Cu) ^ 0x6DFLL)))(a1, a2, a3, a4, a5, a6, 4294925273);
}

void sub_1000F2014(int a1@<W8>)
{
  uint64_t v1;
  _BYTE *v2;

  STACK[0x980] = (unint64_t)&STACK[0xC18];
  STACK[0xAB8] = (unint64_t)&STACK[0xBD4];
  v2 = (_BYTE *)STACK[0x688];
  LOBYTE(STACK[0xBB0]) = *(_BYTE *)STACK[0x688];
  LOBYTE(STACK[0xBB1]) = v2[1];
  LOBYTE(STACK[0xBB2]) = v2[2];
  LOBYTE(STACK[0xBB3]) = v2[3];
  LOBYTE(STACK[0xBB4]) = v2[4];
  LOBYTE(STACK[0xBB5]) = v2[5];
  LOBYTE(STACK[0xBB6]) = v2[6];
  LOBYTE(STACK[0xBB7]) = v2[7];
  LOBYTE(STACK[0xBB8]) = v2[8];
  LOBYTE(STACK[0xBB9]) = v2[9];
  LOBYTE(STACK[0xBBA]) = v2[10];
  LOBYTE(STACK[0xBBB]) = v2[11];
  LOBYTE(STACK[0xBBC]) = v2[12];
  LOBYTE(STACK[0xBBD]) = v2[13];
  LOBYTE(STACK[0xBBE]) = v2[14];
  LOBYTE(STACK[0xBBF]) = v2[15];
  LODWORD(STACK[0xC78]) = -366034007;
  STACK[0xC58] = 0x6205527E24145F56;
  STACK[0xC60] = 0x6396BFB8EB1E3730;
  STACK[0xC68] = 0x9C69404714E1C8CFLL;
  LODWORD(STACK[0xC70]) = 1334441409;
  LODWORD(STACK[0xC74]) = 1279171888;
  STACK[0x918] = (a1 + 650) + *(_QWORD *)(v1 + 8 * a1) - 680;
  JUMPOUT(0x100155FD0);
}

uint64_t sub_1000F2158(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 + ((a2 - 1325770690) & 0x7FF7BBE5) + 3) * (v3 != a3)) ^ a2)))();
}

uint64_t sub_1000F2194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v6
                                                               + 8
                                                               * ((((v4 + 855) ^ 0x500) * ((v3 & 8) == 0)) ^ (v4 + 983)))
                                                   - 8))(a1, a3 + v5);
}

uint64_t sub_1000F21EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v12.n128_u64[0] = -1;
  v12.n128_u64[1] = -1;
  *(int8x8_t *)(v7 + a3) = vadd_s8(*(int8x8_t *)(v10 + a3), (int8x8_t)-1);
  return ((uint64_t (*)(uint64_t, unint64_t, __n128))(*(_QWORD *)(v11
                                                                                + 8
                                                                                * ((53
                                                                                  * (((173 * (a7 ^ 0x350u)) ^ 0x4B3)
                                                                                   + a3 == (v8 & 0xFFFFFFFFFFFFFFF8))) ^ a7))
                                                                    - 4))(a1, (v8 & 0xFFFFFFFFFFFFFFF8) + v9, v12);
}

uint64_t sub_1000F224C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v11
                                                                                                  + 8 * ((315 * (((v9 == a8) ^ (v10 - 10)) & 1)) ^ v10))
                                                                                      + v8
                                                                                      - ((v10 + 4324422) | 0x30B01A44u)))(a1, a2, a3, a4, a5, (v10 + 101319669) | 0x41815140u);
}

uint64_t sub_1000F22B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(a4 + v6 - 0x60DA7C9A38CA41A8) = *(_BYTE *)(a5 + v8 - 0x591752146C914B2ALL) - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((8 * (a2 == v7 + 0x5E15CF259E33BEBBLL)) | (32
                                                                                     * (a2 == v7 + 0x5E15CF259E33BEBBLL))) ^ a6 ^ 0x478B5EE5))
                            - 12))();
}

void sub_1000F2340()
{
  JUMPOUT(0x1000F2308);
}

uint64_t sub_1000F2358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((106 * (a7 ^ 0x30F21B49) - 761) * (v8 != v7)) ^ (106 * (a7 ^ 0x30F21B49))))
                            - 12))();
}

uint64_t sub_1000F2398@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  _BYTE *v7;

  *(_BYTE *)(a1 + (a2 + v2)) = 2;
  v7 = (_BYTE *)(((a2 + 446535665) | ((unint64_t)(a2 + 446535665 < 218 * (v3 ^ 0x4FEu) + 1883128211) << 32))
               + a1
               - 1883129519);
  *v7 = BYTE1(v5) ^ 0x76;
  v7[1] = v5 ^ 0xDA;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (v3 ^ (510
                                               * ((v5 ^ v4 ^ 0x5AE9D9BEE63E3EFFLL)
                                                - 0x5AE9D9BE45DF04ECLL
                                                + ((2 * (v5 ^ v4)) & 0x1CC7C7DFELL) != 2690595347))))
                            - 12))();
}

uint64_t sub_1000F24B8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v1 < v3;
  *(_BYTE *)(v5 + a1 - 0x3B94F1D0679FCA93) = *(_BYTE *)(v4 + v7 - 0x428925971CC71AF8) ^ 0xF5;
  if (v9 == v6 - 0x3E842CD1238108C4 < v3)
    v9 = v6 - 0x3E842CD1238108C4 < v1;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(v8 + 8 * ((510 * v9) ^ v2)) - 12))(v6 - 0x3E842CD1238108C4 < v1);
}

uint64_t sub_1000F255C()
{
  int v0;
  int v1;
  uint64_t v2;

  LOWORD(STACK[0x76E]) = 31162;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((LODWORD(STACK[0xA24]) != v1) * (((v0 + 1549065379) & 0xA3AB1FDB) - 213)) ^ v0))
                            - 8))();
}

uint64_t sub_1000F25A0()
{
  int v0;
  int v1;
  uint64_t v2;

  LOWORD(STACK[0x76E]) = ((LOWORD(STACK[0xAB4]) - 30064) ^ 0x3F3E)
                       + 14975
                       + (((v0 + 4287) & 0xEBBF ^ 0x7FE7) & (2 * (LOWORD(STACK[0xAB4]) - 30064)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 843050817) & 0x323FEBBF ^ (49 * v1)))
                            - ((((v0 - 843050817) & 0x323FEBBF) + 334) ^ ((((v0 - 843050817) & 0x323FEBBF) + 409675621) | 0x211400D0u) ^ 0x397F2B3DLL)))();
}

uint64_t sub_1000F262C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((65 * (v0 ^ 0x2E3) - 570) | 0x82) + 278) * (v2 == v1)) ^ v0))
                            - 12))();
}

uint64_t sub_1000F2664()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (49 * v1)))
                            - ((v0 + 334) ^ ((v0 + 409675621) | 0x211400D0u) ^ 0x397F2B3DLL)))();
}

uint64_t sub_1000F26AC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  __int16 v3;
  uint64_t v4;

  LOWORD(STACK[0x76E]) = v3
                       + (*(_WORD *)(STACK[0x698] + 56) ^ 0x5B9C)
                       + 4612
                       + ((a1 - 9959) ^ 0x4A2F ^ (2 * *(_WORD *)(STACK[0x698] + 56)) & 0xDBFE);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((65 * ((a1 - 964634343) ^ 0x2E3) - 570) | 0x82) + 278) * (v2 == v1)) ^ (a1 - 964634343)))
                            - 12))();
}

uint64_t sub_1000F2728@<X0>(int a1@<W8>)
{
  __int16 v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x698];
  LOWORD(STACK[0x76E]) = v1
                       + ((2 * *(_WORD *)(STACK[0x698] + 56)) & 0x779E ^ 0x6486)
                       + 17460
                       + ((10 * (a1 ^ 0x93) + 2850) ^ *(_WORD *)(STACK[0x698] + 56));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((699 * (*(_QWORD *)(v3 + 136) != 0)) ^ a1)) - 4))();
}

uint64_t sub_1000F2790@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((1431 * (*(_DWORD *)(v1 + 144) != ((a1 + 440) ^ 0x1D874451))) ^ a1))
                            - 4))();
}

uint64_t sub_1000F27C8()
{
  __int16 v0;
  __int16 v1;
  int v2;
  __int16 v3;
  void *v4;

  v3 = v1 + ((2 * (v0 - 18139)) & 0x7FD4) + ((v0 - 18139) ^ 0xBD60 ^ v2) + 16409;
  LOWORD(STACK[0x76E]) = v3;
  v4 = malloc_type_malloc((unsigned __int16)(v3 - 31159), 0xEF940A81uLL);
  STACK[0x7A0] = (unint64_t)v4;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((v4 != 0) * (((v2 - 672757387) & 0x28197481) + 1071)) ^ v2))
                            - 12))();
}

uint64_t sub_1000F2858(_BYTE *a1)
{
  __int16 v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = (v2 + 374) | 0x91;
  *a1 = 1;
  a1[1] = (unsigned __int16)((((v5 + 432) | 0x8C) ^ 0x808B) + v1) >> 8;
  a1[2] = (v1 - ((2 * v1 + 12) & 0x7A) - 125) ^ 0x3D;
  return (*(uint64_t (**)(void))(v4 + 8 * ((518 * (LODWORD(STACK[0xA24]) != v3)) | v5)))();
}

uint64_t sub_1000F28D0@<X0>(_BYTE *a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  __int16 v3;

  a1[3] = 4;
  v3 = LOWORD(STACK[0xAB4])
     - 2 * ((((((a2 - 788) ^ 0x7B0) - 649) ^ 0xED4) + LOWORD(STACK[0xAB4])) & 0x6DEE ^ STACK[0xAB4] & 4)
     - 1926;
  a1[4] = HIBYTE(v3) ^ 0x6D;
  a1[5] = v3 ^ 0xEA;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((596
                                          * ((LODWORD(STACK[0xAB4]) | ((unint64_t)(LODWORD(STACK[0xAB4]) < 0x33E27570uLL) << 32)) != 870479216)) ^ (a2 - 788)))
                            - 8))();
}

uint64_t sub_1000F29AC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  unint64_t v11;
  int v12;
  _BOOL8 v13;

  v10 = v5 < a2;
  *(_BYTE *)(v7 + v3 - 0x50CDA7F03CDBFF96) = *(_BYTE *)(v6 + v4 - 0x391FE43E0D85B0D1) ^ 0xAF;
  v11 = v8 - 0x4EA9755B7FB1D946 + (v2 ^ 0x289u);
  v12 = v10 ^ (v11 < a2);
  v13 = v11 < v5;
  if (!v12)
    v10 = v13;
  return (*(uint64_t (**)(uint64_t, _BOOL8))(v9 + 8 * ((v10 | (16 * v10)) ^ v2)))(a1, v13);
}

uint64_t sub_1000F2A44()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v0 - 1065750236) & 0x3F8609EF ^ 0x196) * (v1 ^ 1)) ^ (v0 - 432)))
                            - (v0 ^ 0x6C5)))();
}

uint64_t sub_1000F2AC0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;

  *(_BYTE *)(a1 + (v4 + v2)) = 1;
  v6 = ((v4 - 1428037066) | ((unint64_t)((v4 - 1428037066) < 0xB21D678) << 32))
     + 0x4B8550ABEE0D9DB5;
  v7 = STACK[0x698];
  v8 = *(_DWORD *)(STACK[0x698] + 56);
  *(_BYTE *)(v6 + (v3 ^ 0x5DAu) + a1 - 0x4B8550ABF92F7AF9 + 577) = BYTE1(v8) ^ 0xB6;
  *(_BYTE *)(v6 + (v3 + 1404) + a1 - 0x4B8550ABF92F7AF9) = v8 ^ 0x63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1469
                                          * ((*(_DWORD *)(v7 + 56) ^ a2 ^ 0x1DE6E36CEEFFEC5BLL)
                                           - 0x1DE6E36C1EF1C31DLL
                                           + ((2 * (*(_DWORD *)(v7 + 56) ^ a2)) & 0x1DDFFD8B6) != 3490588990)) ^ v3))
                            - 8))();
}

uint64_t sub_1000F2BF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = a3 < v7;
  *(_BYTE *)(a4 + v8 - 0x13A9A13F3DB8447FLL) = *(_BYTE *)(v6 + v9 - 0x13F56C0F97482529) - 60;
  if (v11 == a5 - 0x7F8319AAD8EAF347 < ((v5 + 578) ^ (v7 + 1717)))
    v11 = a5 - 0x7F8319AAD8EAF347 < a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((103 * v11) ^ v5)) - 8))();
}

uint64_t sub_1000F2C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unsigned int a6@<W8>)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10 + 8 * ((37 * (v7 ^ 0x6C0)) | (14 * (v9 == v8))))
                                                                                              - ((43
                                                                                                * ((37 * (v7 ^ 0x6C0)) ^ 0x1E2)
                                                                                                - 8803266) & 0x3ABED7F7 ^ 0x3A3884BFLL)))(a1, *(_DWORD *)(v6 + 56) ^ a6, a2, a3, a4, a5, 0);
}

uint64_t sub_1000F2D3C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  _BYTE *v8;
  unint64_t v9;

  *(_BYTE *)(a1 + (v3 + v2)) = 2;
  v6 = STACK[0x698];
  v7 = *(_DWORD *)(STACK[0x698] + 56);
  v8 = (_BYTE *)(((v3 - 121380428 + (v4 ^ 0x3A38827A)) | ((unint64_t)(v3
                                                                                         - 121380428
                                                                                         + (v4 ^ 0x3A38827A) < 0x5903DCC3) << 32))
               + a1
               - 1493425347);
  *v8 = (v4 + 58) ^ BYTE1(v7) ^ 0x47;
  v8[1] = v7 ^ 0x63;
  v9 = (*(_DWORD *)(v6 + 56) ^ a2 ^ 0xDCBEFBB365FDFFDFLL)
     + ((2 * (*(_DWORD *)(v6 + 56) ^ a2)) & 0xCBFBFFBE)
     + 0x2341044CD43A84D8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)((121 * (((v9 - v4) | (v4 - v9)) >> 63)) ^ (v4 - 976781871)))
                            - 4))();
}

uint64_t sub_1000F2E84(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = a2 < v4;
  *(_BYTE *)(a3 + v6 - 0x77A07387ACA3CC6) = *(_BYTE *)(v8 + v7 - 0x1DB2B44047C06B2FLL) - 60;
  if (v10 == a4 - 0x7ABCD7CAEFC29FB8 < v4)
    v10 = a4 - 0x7ABCD7CAEFC29FB8 < a2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * ((453 * !v10) ^ v5)) - 4))(a1);
}

uint64_t sub_1000F2F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 + 8 * ((370 * (*(_QWORD *)(v6 + 136) != 0)) ^ (v7 - 1515)))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1000F2F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (int)((((((*(_DWORD *)(v7 + 144) - (v8 - 1707)) | (v8 - 1707 - *(_DWORD *)(v7 + 144))) >> (((v8 + 85 + a7) ^ 0xA3) - 98)) & 1) * (((v8 - 1707 + a7) | 0x80) + 1386)) | (v8 - 1707) ^ 0x1D874639))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1000F2FF0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  char v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  _BYTE *v10;

  v8 = (((v6 + v3) << (v4 ^ 0x80)) & 0xFB5EBEFE) + ((v6 + v3) ^ 0x7DAF5F7F);
  *(_BYTE *)(a1 + v8 - 2108645376 + a2 - 33) = 5;
  v9 = *(_WORD *)(v2 + 144) - ((2 * *(_WORD *)(v2 + 144) + 29258) & 0x654C) + 27595;
  v10 = (_BYTE *)(((v8 - 1795885240) | ((unint64_t)(v8 - 1795885240 < 0x12A456C6) << 32)) + a1 - 312760006);
  *v10 = HIBYTE(v9) ^ 0xB2;
  v10[1] = v9 ^ 0xA6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (a2 ^ (((*(unsigned int *)(v2 + 144) | ((unint64_t)(*(_DWORD *)(v2 + 144) < v5) << 32)) == 495404763) << 6)))
                            - 4))();
}

uint64_t sub_1000F3138@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_BYTE *)(v3 + v7 + v4 - 0x65ED23AE14A34B90) = *(_BYTE *)(v6 + v1 - 0x1F43A200490039DALL) - 108;
  v10 = v5 < v2;
  if (v10 == v8 - 0x2C4122141F957E10 < v2)
    v10 = v8 - 0x2C4122141F957E10 < v5;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(v9 + 8 * (a1 ^ (!v10 << 6))) - 4))(v8 - 0x2C4122141F957E10 < v5);
}

void sub_1000F31D0()
{
  int v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  free(v1);
  free((void *)STACK[0x690]);
  sub_1000EE8C4(v2, v3, v4, v5, v6, v7, v0);
}

uint64_t sub_1000F3244()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x7C8];
  ++STACK[0x688];
  return ((uint64_t (*)(unint64_t))((char *)*(&off_1002C8B50 + ((30 * (v0 == 145)) | v0))
                                                   - 4))(v1);
}

void sub_1000F32B8()
{
  JUMPOUT(0x1000F3270);
}

void sub_1000F32D4(void *a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (v1 ^ 0xFFFFFFF5 | ((~v1 & 0xF0u) >> 4)) + 16;
  v4 = (v2 + 45) ^ ((v3 & 0xFC) >> 2) ^ 0xFFFFFFC9 | v3 ^ 0x10;
  v5 = -42022 * (v4 & 1 | (((v4 + 2) & 2) == 0));
  free(a1);
  sub_1000EE8C4(v6, v7, v8, v9, v10, v11, v5);
}

uint64_t sub_1000F3328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9
                                                                      + 8
                                                                      * ((88 * (v8 >= ((a8 - 1550) | 0x168u) - 492)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_1000F3358(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int8x16_t v17;
  int8x16_t v18;
  uint64_t v19;
  int8x16_t v20;
  int8x16x4_t v22;
  int8x16x4_t v23;

  v16 = (a8 - 1698) | 0x185;
  v22.val[1].i64[0] = ((_BYTE)a2 + 7) & 0xF;
  v22.val[1].i64[1] = ((_BYTE)a2 + 8) & 0xF;
  v22.val[2].i64[0] = ((_BYTE)a2 + 9) & 0xF;
  v22.val[2].i64[1] = ((_BYTE)a2 + 10) & 0xF;
  v22.val[3].i64[0] = ((_BYTE)a2 + 11) & 0xF;
  v22.val[3].i64[1] = ((_BYTE)a2 + 12) & 0xF;
  v23.val[0].i64[0] = ((_BYTE)a2 + 13) & 0xF;
  v23.val[0].i64[1] = ((_BYTE)a2 + 14) & 0xF;
  v23.val[1].i64[0] = ((_BYTE)a2 - 1) & 0xF;
  v23.val[1].i64[1] = a2 & 0xF;
  v23.val[2].i64[0] = (a2 + 1) & 0xF;
  v23.val[2].i64[1] = (a2 + 2) & 0xF;
  v23.val[3].i64[0] = ((_BYTE)a2 + 3) & 0xF;
  v23.val[3].i64[1] = ((_BYTE)a2 + 4) & 0xF;
  v17.i64[0] = 0x1919191919191919;
  v17.i64[1] = 0x1919191919191919;
  v18.i64[0] = 0xB1B1B1B1B1B1B1B1;
  v18.i64[1] = 0xB1B1B1B1B1B1B1B1;
  v19 = a2 + ((v16 + 2060805706) & 0x852A9F75 ^ (v9 + 1723));
  v22.val[0].i64[0] = ((_BYTE)a2 + ((((a8 + 94) | 0x85) + 74) & 0x75 ^ (v9 - 69))) & 0xF;
  v22.val[0].i64[1] = ((_BYTE)a2 + 6) & 0xF;
  v20.i64[0] = vqtbl4q_s8(v22, (int8x16_t)xmmword_1002547C0).u64[0];
  v20.i64[1] = vqtbl4q_s8(v23, (int8x16_t)xmmword_1002547C0).u64[0];
  *(int8x16_t *)(v14 + (v8 + v10)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v11 + v19), *(int8x16_t *)(v13 + (v19 & 0xF))), veorq_s8(*(int8x16_t *)((v19 & 0xF) + a1 + 3), *(int8x16_t *)((v19 & 0xF) + a3 + 2))), v18), vmulq_s8(v20, v17));
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((645 * ((v12 & 0xFFFFFFF0) == 16)) ^ v16)) - 8))();
}

void sub_1000F34D0()
{
  JUMPOUT(0x1000F345CLL);
}

uint64_t sub_1000F34E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)((((((a6 + 420137058) ^ 0x190AC9E8) + 111) ^ (a6 + 420137058) & 0xE6F536FA)
                                               * (v6 == a4)) ^ a6))
                            - 4))();
}

uint64_t sub_1000F3524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(v10
                                                                                               + 8
                                                                                               * ((22
                                                                                                 * ((v9 & 8) == ((a8 - 1206) | 0x10) - 508)) ^ a8)))(a1, a2, a3, a4, (a4 + v8), (a4 + a2), (a8 - 146));
}

uint64_t sub_1000F355C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int8x16x4_t v15;

  v12 = (v10 - 436) | 0x196;
  v13 = (v12 ^ 0xFFFFFE26) & v8;
  LODWORD(STACK[0x688]) = v13;
  v15.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)v5 + (_BYTE)a4) & 0xF;
  v15.val[0].i64[1] = ((_BYTE)a2 + (_BYTE)a4 + 6) & 0xF;
  v15.val[1].i64[0] = ((_BYTE)a2 + (_BYTE)a4 + 7) & 0xF;
  v15.val[1].i64[1] = ((_BYTE)a2 + (_BYTE)a4 + ((((v10 + 76) | 0x96) + 5) & 0xBD ^ 0xF9)) & 0xF;
  v15.val[2].i64[0] = ((_BYTE)a2 + (_BYTE)a4 + 9) & 0xF;
  v15.val[2].i64[1] = ((_BYTE)a2 + (_BYTE)a4 + 10) & 0xF;
  v15.val[3].i64[0] = ((_BYTE)a2 + (_BYTE)a4 + 11) & 0xF;
  v15.val[3].i64[1] = ((_BYTE)a2 + (_BYTE)a4 + 12) & 0xF;
  *(int8x8_t *)(v11 + (v4 + v6 + a4)) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v7 + (a2 + v5 + a4)), *(int8x8_t *)(v9 + v15.val[0].i64[0])), veor_s8(*(int8x8_t *)(v15.val[0].i64[0] + a1 + 3), *(int8x8_t *)(v15.val[0].i64[0] + a3 + 2))), (int8x8_t)0xB1B1B1B1B1B1B1B1), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v15, (int8x16_t)xmmword_100254790), (int8x8_t)0x1919191919191919));
  return ((uint64_t (*)(__n128))((char *)*(&off_1002C8B50
                                                   + (((2 * (v13 - 8 != a4)) | (32 * (v13 - 8 != a4))) ^ v12))
                                         - 4))((__n128)xmmword_100254790);
}

void sub_1000F368C()
{
  JUMPOUT(0x1000F35B4);
}

uint64_t sub_1000F3694()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((97 * (v0 ^ 0x2B1)) ^ (v0 - 548)) * (v1 == LODWORD(STACK[0x688]))) ^ v0))
                            - 12))();
}

uint64_t sub_1000F36E0@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  int v2;
  uint64_t v3;

  *v1 = v1[623];
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((11
                                * ((((a1 ^ 0x45) - 113) ^ (((v2 - 1 - (a1 ^ 0x7B451845)) | ((a1 ^ 0x7B451845) - (v2 - 1))) < 0)) & 1)) | ((a1 ^ 0x7B451845) - 2068125674))))();
}

uint64_t sub_1000F373C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;

  v5 = 4 * (v2 - 2053560048);
  v6 = *(_DWORD *)(v1 + 4 * (v2 - 2053560049));
  v7 = (*(_DWORD *)(v1 + v5) ^ 0x4EA00 ^ (1566083941 * (v6 ^ 0xBB91B304 ^ ((v6 >> 30) | 0xECF0ED38))
                                        - ((-1162799414 * (v6 ^ 0xBB91B304 ^ ((v6 >> 30) | 0xECF0ED38))) & 0xAECB687A)
                                        + 1466283069))
     - v2;
  *(_DWORD *)(v1 + v5) = v7 - ((2 * v7 - 187847200) & 0xAEC2BC7A) - 775408339;
  v8 = 1606104089 * ((v4 - 192) ^ 0xC2BEFB347517423ELL);
  *(_DWORD *)(v4 - 164) = -1231242123 - v8 + a1;
  *(_DWORD *)(v4 - 172) = ((a1 - 1340772326) ^ 0x5D) + v8;
  *(_DWORD *)(v4 - 168) = (a1 - 1340772326) ^ v8;
  *(_DWORD *)(v4 - 180) = v8;
  *(_DWORD *)(v4 - 176) = (a1 - 1340772322) ^ v8;
  *(_QWORD *)(v4 - 192) = (v2 - 1805776513) + v8;
  *(_QWORD *)(v4 - 160) = 247783534 - v8;
  v9 = sub_100175DA4(v4 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * *(int *)(v4 - 184)) - 4))(v9);
}

uint64_t sub_1000F389C()
{
  unsigned int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v0 < ((LODWORD(STACK[0x690]) - 850) ^ 0xEC4E315u))
                                * ((LODWORD(STACK[0x690]) + 2068124785) ^ 0x7B451D18)) ^ (LODWORD(STACK[0x690]) - 850))))();
}

uint64_t sub_1000F38E8()
{
  unsigned int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v0 > (LODWORD(STACK[0x690]) ^ 0xEC4E410u))
                                * (((LODWORD(STACK[0x690]) + 1782909257) | 0x11000B28) ^ 0x7B451D18)) ^ (LODWORD(STACK[0x690]) - 850))))();
}

uint64_t sub_1000F3948@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int8x16_t v3;
  uint64_t v4;
  int8x16_t v5;
  int32x4_t v6;
  int32x4_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int32x4_t v13;
  int8x16_t v14;

  v2 = ((a1 ^ 0x692) + 942) | 0x2C0;
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = -681484739;
  free((void *)STACK[0x678]);
  v3 = (int8x16_t)vld1q_dup_f32((const float *)&aHAwAwAwAwAwAwA[4]);
  v4 = (v2 - 968);
  v5.i64[0] = 0x8000000080000000;
  v5.i64[1] = 0x8000000080000000;
  v6 = vdupq_n_s32(0xCD31BD79);
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  v8.i32[0] = *(_DWORD *)&aHAwAwAwAwAwAwA[8];
  v8.i32[1] = *(_DWORD *)&aHAwAwAwAwAwAwA[4 * v4 - 3080];
  v8.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[16];
  v9 = vextq_s8(v3, v8, 0xCuLL);
  v10 = v8;
  v10.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[20];
  v11 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v9, v5), (int8x16_t)vdupq_n_s32(0xBFDDEF53)), vdupq_n_s32(0xEBFFFDFE));
  v12 = veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x592192A4u));
  v13 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v12, (int8x16_t)vdupq_n_s32(0x32CE4286u)), (int32x4_t)vorrq_s8(v12, (int8x16_t)v6)), v6), (int8x16_t)vdupq_n_s32(0x548F2AFu)), v7), (int8x16_t)vdupq_n_s32(0x39C67CB0u));
  v14.i32[0] = *((_DWORD *)&STACK[0x15C8] + ((aHAwAwAwAwAwAwA[8] & 1) == 0));
  v14.i32[1] = *((_DWORD *)&STACK[0x15C8] + ((*(_DWORD *)&aHAwAwAwAwAwAwA[4 * v4 - 3080] & 1) == 0));
  v14.i32[2] = *((_DWORD *)&STACK[0x15C8] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[16] & 1));
  v14.i32[3] = *((_DWORD *)&STACK[0x15C8] + ((aHAwAwAwAwAwAwA[20] & 1) == 0));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[4] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[1592], v14), (int8x16_t)vdupq_n_s32(0xDC79EF4u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v13, veorq_s8(v11, (int8x16_t)vdupq_n_s32(0xABDDED51))), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0x4C305472u))), vdupq_n_s32(0xA6182A39)), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 - 867) ^ 0x727)) - 12))();
}

uint64_t sub_1000F39B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unint64_t v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;

  v9 = LODWORD(STACK[0x37C]) ^ LODWORD(STACK[0x214]);
  v10 = (((v7 + 902781206) >> 8) ^ 0xDE9EF66F) + v7 + (((v7 + 902781206) >> 7) & 0x13DECDE);
  v11 = v10 + (((v10 + 1462788775) >> 5) ^ 0x4800908C) - (((v10 + 1462788775) >> 4) & 0xFFEDEE6) + 1;
  v12 = v11 - ((2 * v11 + 509584436) & 0xBC548298) + 1834619750;
  v13 = ((2 * ((v12 ^ 0x5E2A414C) - 1879573490)) & 0xDFBFF776) + (((v12 ^ 0x5E2A414C) - 1879573490) ^ 0x6FDFFBBB);
  v14 = (((v13 - 1876949947) >> 10) ^ 0x827DFADE) + v13 + (((v13 - 1876949947) >> 9) & 0x7BF5BC);
  v15 = ((v14 + 228723047) & 0xDB3EFDFE) + v14 + (((v14 + 228723047) >> 1) ^ 0x6D9F7EFF);
  v16 = v15 - ((2 * v15 + 1074074832) & 0xBCCB2E6C) - 26730082;
  v17 = ((2 * ((v16 ^ 0x5E659736) + 1287124013)) & 0xFB7B21E6) + (((v16 ^ 0x5E659736) + 1287124013) ^ 0x7DBD90F3);
  v18 = v17 + (((v17 - 2109575411) >> 13) ^ 0x1A004600) - ((2 * ((v17 - 2109575411) >> 13)) & 0xF73FE);
  v19 = v18 + (((v18 + 1749166349) >> 6) ^ 0xB10CA840) - (((v18 + 1749166349) >> 5) & 0x5E6AF7E) + 2;
  v20 = v19 - ((2 * v19 + 1852506518) & 0x8F4EB030) + 2128402659;
  v21 = ((2 * ((v20 ^ 0xC7A75818) - 1282870125)) & 0xFFBBDCFE) + (((v20 ^ 0xC7A75818) - 1282870125) ^ 0xFFDDEE7F);
  v22 = (((v21 + 2232705) >> 8) ^ 0x99F7B7BF) + v21 + (((v21 + 2232705) >> 7) & 0x1EF6F7E);
  v23 = (((v22 + 1714051522) >> 2) ^ 0xFFCFF8C9) + v22 + (((v22 + 1714051522) >> 1) & 0x7F9FF192);
  v24 = v23 - ((2 * v23 - 860569102) & 0xA7354E0E) + 972359680;
  v25 = ((2 * ((v24 ^ 0xD39AA707) + 707258702)) & 0xBEF8ED38) + (((v24 ^ 0xD39AA707) + 707258702) ^ 0xDF7C769C);
  v26 = (((v25 + 545491300) >> 13) ^ 0xE712DFFD) + v25 + (((v25 + 545491300) >> 12) & 0x5BFFA);
  v27 = (((v26 + 963684711) >> 3) ^ 0x7F907FEC) + v26 + (((v26 + 963684711) >> 2) & 0x3F20FFD8);
  v28 = v27 - ((2 * v27 + 62935798) & 0xD9AE4DC) - 1062364183;
  v29 = (v28 ^ 0x8D4224E4) + ((v28 >> 11) ^ 0xC010AD66) + ((v28 >> 10) & 0x3DF5BA ^ 0xFFDEAF77) + 1073674975;
  v30 = (((((2 * v29) & 0xBFFFFFBC) + (v29 ^ 0x5FFFFFDE) - 1610612702) >> 5) ^ 0xD7637DC9)
      + ((2 * v29) & 0xBFFFFFBC)
      + (v29 ^ 0x5FFFFFDE)
      + (((((2 * v29) & 0xBFFFFFBC) + (v29 ^ 0x5FFFFFDE) - 1610612702) >> 4) & 0xEC6FB92);
  v31 = v30 - ((2 * v30 - 1858534222) & 0xA2EB2CB2) - 1710090062;
  v32 = (v31 ^ 0xE52942A1) + ((v31 >> 12) ^ 0xE19CD216) + ((v31 >> 11) & 0x1AFEFA ^ 0xFFE75BD7) + 510492543;
  v33 = (((((2 * v32) & 0xBDFFF4FE) + (v32 ^ 0x5EFFFA7F) - 1593834111) >> 7) ^ 0x7FD57BFD)
      + ((2 * v32) & 0xBDFFF4FE)
      + (v32 ^ 0x5EFFFA7F)
      + (((((2 * v32) & 0xBDFFF4FE) + (v32 ^ 0x5EFFFA7F) - 1593834111) >> 6) & 0x3AAF7FA);
  v34 = v33 - ((2 * v33 + 1112871688) & 0xF548E5BA) + 466549857;
  v35 = ((2 * ((v34 ^ 0xFAA472DD) - 2045107421)) & 0xFDFDEDE6) + (((v34 ^ 0xFAA472DD) - 2045107421) ^ 0x7EFEF6F3);
  v36 = (((v35 - 2130638579) >> 11) ^ 0x7B6E3597) + v35 + ((2 * ((v35 - 2130638579) >> 11)) & 0x1C6B2E);
  v37 = v36 + (((v36 + 93508470) >> 8) ^ 0xA2080080) - (((v36 + 93508470) >> 7) & 0x1EFFEFE) + 1;
  v38 = v37 - ((2 * v37 + 1192601066) & 0x6104C42A) - 1811073782;
  v39 = v6 & ((v24 ^ v12 ^ v34) >> 1) ^ 0x7D8A5432;
  v40 = v39 - ((2 * v39) & 0xEE002070) + 1996757240;
  v41 = v6 & ((v28 ^ v16 ^ v38) >> 1) ^ 0xE329A11A;
  v42 = (((2 * v41) | 0x9E2468CC) - v41 - 1326593126) ^ 0x9A28A453;
  v43 = (v38 ^ 0xA12EC46) + ((v38 >> 8) ^ 0x80D14BC) + ((v38 >> 7) & 0x1F1F35E ^ 0xFFEFDEA7) - 134678095;
  v44 = (((((2 * v43) & 0xFEFEDFFE) + (v43 ^ 0xFF7F6FFF) + 8425473) >> 8) ^ 0x396FFE6F)
      + ((2 * v43) & 0xFEFEDFFE)
      + (v43 ^ 0xFF7F6FFF)
      + (((((2 * v43) & 0xFEFEDFFE) + (v43 ^ 0xFF7F6FFF) + 8425473) >> 7) & 0xDFFCDE);
  v45 = v44 - ((2 * v44 + 2171684) & 0x31F30A) + 1193904919;
  v46 = ((((v31 ^ v20 ^ v45) >> 1) & v6 ^ 0x2BA1A008)
       + (((v31 ^ v20 ^ v45) >> 1) & 0x57D88010 ^ 0x54581990)
       - ((((v31 ^ v20 ^ v45) >> 1) & v6 ^ 0x2BA1A008) & 0x57D88010)) ^ 0x77982992;
  v47 = (v46 | 0xAFEBF002) - (v46 | 0x50140FFD) + 1343492093;
  v48 = LODWORD(STACK[0x264]) ^ LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x4A0]) ^ 0xA2C14FC7 ^ ((((LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x4A0])) >> 1) & v6 ^ 0x42CB442C)
                                                                                            + (((LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x4A0])) >> 1) & 0x60F9A41A ^ 0xA030A8D2)
                                                                                            - ((((LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x4A0])) >> 1) & v6 ^ 0x42CB442C) & 0x60F9A41A));
  v49 = (v48 & 0xFF188309 ^ 0x3E080209) - ((2 * (v48 & 0xFF188309 ^ 0x3E080209)) & 0x84010400) - 1033770396;
  v50 = ((v48 & 0x450866 ^ 0x4511084B | v48 & 0xA27490) - 1) ^ 0x45523C7A;
  HIDWORD(v51) = LODWORD(STACK[0x608]) ^ 0x2D40;
  LODWORD(v51) = LODWORD(STACK[0x608]) ^ 0x2F2F4000;
  v52 = v12 ^ ((v49 & 0xFF3F8F09 ^ 0x84318900 | v50)
             - 2 * ((v49 & 0xFF3F8F09 ^ 0x84318900 | v50) & 0x3A1DB91F ^ v50 & 0x1C)
             + 975026443) ^ a6 ^ v24 ^ v34 ^ v40;
  v53 = (v51 >> 14) - ((2 * (v51 >> 14)) & 0xB3531918) + 1504283788;
  HIDWORD(v51) = v52 ^ 0x11C6;
  LODWORD(v51) = v52 ^ 0x370B8000;
  v54 = ((v51 >> 14) - ((2 * (v51 >> 14)) & 0xB2A46A72) - 648923847) ^ v53;
  v55 = (((2 * (v6 & (LODWORD(STACK[0x580]) >> 1) ^ 0x45986006)) | 0x375C63A)
       - (v6 & (LODWORD(STACK[0x580]) >> 1) ^ 0x45986006)
       + 2118458595) ^ 0x33B8AB0F;
  LODWORD(STACK[0x608]) = v55 - ((2 * v55) & 0x67CC1F4C) + 870715303;
  HIDWORD(v51) = v54 ^ 0x1FCC6;
  LODWORD(v51) = v54 ^ 0x1D800000;
  v56 = v51 >> 18;
  LODWORD(STACK[0x5D0]) = (2 * v56) & 0x81EB06F0;
  LODWORD(STACK[0x5A0]) = v56 + 1089831800;
  v57 = LODWORD(STACK[0x5B0]) ^ LODWORD(STACK[0x428]) ^ LODWORD(STACK[0x5C0]);
  v58 = ((v6 & (LODWORD(STACK[0x428]) >> 1) ^ 0x1DAB642A)
       - ((2 * (v6 & (LODWORD(STACK[0x428]) >> 1) ^ 0x1DAB642A)) & 0xA9738050)
       - 726019863) ^ 0xFC8DDAE1;
  v59 = STACK[0x640];
  v60 = ((LODWORD(STACK[0x540]) ^ LODWORD(STACK[0x590])) ^ LODWORD(STACK[0x640])) >> 1;
  v61 = ((v60 & v6 ^ 0x65E0A030) + (v60 & 0x15A8008 ^ 0x801E1B88) - ((v60 & v6 ^ 0x65E0A030) & 0x15A8008)) ^ 0x8D5F9B80;
  v62 = (((2 * (v6 & (LODWORD(STACK[0x590]) >> 1) ^ 0x34A10000)) | 0xB397B022)
       - (v6 & (LODWORD(STACK[0x590]) >> 1) ^ 0x34A10000)
       + 640952303) ^ 0xFBFA0891;
  LODWORD(STACK[0x380]) ^= LODWORD(STACK[0x428]) ^ LODWORD(STACK[0x3B0]) ^ LODWORD(STACK[0x5B0]) ^ LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x210]) ^ v57 ^ (((v57 >> 1) & 0x5AD2E022 ^ 0x5A56B3A3 | (v57 >> 1) & 0x2529041C) - 1) ^ LODWORD(STACK[0x268]) ^ (v58 - ((2 * v58) & 0xE53D4430) - 224484840) ^ v8 ^ v16 ^ v28 ^ v38 ^ ((v42 | 0xEFA03C10) - (v42 | 0x105FC3EF) + 274711535);
  v63 = (((2 * v62) & 0x969EF3D8) - v62 + 883983890) ^ LODWORD(STACK[0x3B4]) ^ v59 ^ (v61
                                                                                    - ((2 * v61) & 0xE2AAC9EC)
                                                                                    + 1901422071) ^ a3 ^ v20 ^ v31 ^ v45 ^ v47;
  LODWORD(STACK[0x264]) = v63;
  LODWORD(STACK[0x37C]) = v63 ^ 0x4A1A9754;
  v64 = LODWORD(STACK[0x498]) ^ 0xD;
  LODWORD(STACK[0x3B8]) = LODWORD(STACK[0x3D8]) ^ 0x1673F742;
  LODWORD(STACK[0x3B4]) = LODWORD(STACK[0x350]) ^ 0xE963221A;
  LODWORD(STACK[0x3B0]) = LODWORD(STACK[0x408]) ^ 0x5A7F88F8;
  v65 = STACK[0xB88];
  v66 = (LODWORD(STACK[0x680]) + 11632030) | 0x7C005284;
  LODWORD(STACK[0x640]) = v66;
  v67 = (((v66 - 728609101) ^ 0x51442178) - ((2 * ((v66 - 728609101) ^ 0x51442178)) & 0xFC1E613C) + 2114924702) ^ 0x284D2E0C;
  LOBYTE(v66) = ((v67 ^ 0xFFFFFF92) << v64) - ((2 * ((v67 ^ 0xFFFFFF92) << v64)) & 0xB4);
  v68 = ((((v67 ^ 0x92) & LOBYTE(STACK[0x3B8]))
                         - ((2 * ((v67 ^ 0x92) & LOBYTE(STACK[0x3B8]))) & 0x66)
                         + 51) ^ 0x33) >> STACK[0x668];
  v69 = 2 * ((STACK[0x3C4] & 0x48FF756B) - ((2 * (STACK[0x3C4] & 0x48FF756B)) & 0x3F4B794C));
  v70 = (((v69 - 1085572788) ^ 0xBF4B794C)
       + 1031620332
       - 2 * (((v69 - 1085572788) ^ 0xBF4B794C) & 0x3D7D46EE ^ ((_BYTE)v69 + 96) & 2)) ^ 0x75823387;
  v71 = (v70 & STACK[0x3B4]) + 1845085777 - ((2 * (v70 & STACK[0x3B4])) & 0xDBF38CA2);
  v72 = (((v70 & STACK[0x3B0]) + 1470285986 - ((2 * (v70 & STACK[0x3B0])) & 0xAF459144)) ^ 0x57A2C8A2) >> STACK[0x3C8];
  v73 = 4
      * ((LODWORD(STACK[0x670]) ^ (v66 - 38)) ^ 0xF4u ^ (v68 - ((2 * v68) & 0x8C) + 70));
  *(_DWORD *)(STACK[0xB78] + v73) = v9 ^ (((v71 ^ 0x6DF9C651) << LODWORD(STACK[0x3BC]))
                                        - 1799203340
                                        - ((2 * ((v71 ^ 0x6DF9C651) << LODWORD(STACK[0x3BC]))) & 0x2984ABE8)) ^ (v72 - ((2 * v72) & 0x98031038) + 1275168796) ^ 0xC8827751;
  *(_DWORD *)(v65 + v73) = v9 ^ 0xDC01E2E0 ^ ((unsigned __int16)(word_10027D338[0] - 17707)
                                            - ((2 * (word_10027D338[0] - 17707)) & 0xE518)
                                            + 156594828);
  return ((uint64_t (*)(void))*(&off_1002C8B50 + SLODWORD(STACK[0x680])))();
}

uint64_t sub_1000F4884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unint64_t v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  uint64_t v189;
  int v190;
  int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;

  v60 = LODWORD(STACK[0x608]) ^ LODWORD(STACK[0x580]) ^ (LODWORD(STACK[0x5A0]) - LODWORD(STACK[0x5D0]));
  LODWORD(STACK[0x540]) = v60;
  v61 = STACK[0x640];
  LODWORD(STACK[0x680]) = LODWORD(STACK[0x640]) - 2092027936;
  v62 = v61 + 669605090;
  v63 = LODWORD(STACK[0x2F8]);
  v64 = STACK[0x2F0];
  v65 = STACK[0x468];
  v66 = STACK[0x26C];
  v67 = STACK[0x5E0];
  v68 = STACK[0x480];
  v69 = STACK[0x4B0];
  LODWORD(STACK[0x268]) = LODWORD(STACK[0x398]) ^ 0xA32A0691;
  LODWORD(STACK[0x210]) = v60 ^ 0xE2B0E441;
  v70 = STACK[0x678];
  v71 = STACK[0x3C0];
  v72 = STACK[0x3B8];
  v73 = STACK[0x3B4];
  v74 = STACK[0x230];
  v75 = STACK[0x378];
  v76 = LODWORD(STACK[0x374]);
  v77 = STACK[0x470];
  v78 = STACK[0x3BC];
  LODWORD(STACK[0x214]) = v62 ^ LODWORD(STACK[0x380]);
  v79 = STACK[0x3C4];
  v80 = LODWORD(STACK[0x340]) ^ 0x4B898501;
  v81 = STACK[0x22C];
  v82 = STACK[0x3B0];
  v83 = STACK[0x3C8];
  v84 = (2 * (((v69 ^ 0xBE848B2D) & v79) - ((2 * ((v69 ^ 0xBE848B2D) & v79)) & 0x29E27378)) + 702706552) ^ 0x29E27378;
  v85 = v69 ^ 0xCF11B421 ^ (v84 - ((2 * v84) & 0xE32A7E18) + 1905606412);
  v86 = (((v85 & v73) - ((2 * (v85 & v73)) & 0x54AE3962) - 1437131599) ^ 0xAA571CB1) << LODWORD(STACK[0x22C]);
  v87 = (((v85 & v82) - ((2 * (v85 & v82)) & 0xCA1D7F4C) + 1695465382) ^ 0x650EBFA6) >> v74;
  v88 = (2
       * ((v71 & (LODWORD(STACK[0x274]) ^ 0xE782D80D))
        + (~(2 * (v71 & (LODWORD(STACK[0x274]) ^ 0xE782D80D))) | 0xF2F75469))
       + 218672024) ^ 0xD08AB96;
  v89 = ((LODWORD(STACK[0x660]) ^ 0xA86337AE) & v79) - ((2 * ((LODWORD(STACK[0x660]) ^ 0xA86337AE) & v79)) & 0x6DAA7C0A);
  v90 = LODWORD(STACK[0x274]) ^ 0x49DD82BF ^ (v88 - ((2 * v88) & 0x5CBEB564) - 1369482574);
  LODWORD(STACK[0x670]) = (v86 - ((2 * v86) & 0x15A61FB4) + 181604314) ^ (v87 - ((2 * v87) & 0x8AE6B71E) + 1165187983);
  v91 = (((v80 & v90) - ((2 * (v80 & v90)) & 0x7D9C9A40) - 1093776096) ^ 0xBECE4D20) << v78;
  v92 = v70 ^ 0xE3A34169 ^ (((2 * v89 - 307594230) ^ 0xEDAA7C0A)
                          - ((2 * ((2 * v89 - 307594230) ^ 0xEDAA7C0A)) & 0xCE7D0CF4)
                          - 415332741);
  v93 = (((v92 & v73) - ((2 * (v92 & v73)) & 0x3A0DB12A) - 1660495723) ^ 0x9D06D895) << v78;
  v94 = STACK[0x270];
  v95 = (((v72 & v90) - ((2 * (v72 & v90)) & 0x46B14660) + 593011504) ^ 0x2358A330u) >> v83;
  v96 = (((v92 & v72) - ((2 * (v92 & v72)) & 0xDD02611A) + 1853960333) ^ 0x6E81308D) >> v83;
  v97 = (2
       * ((v71 & (LODWORD(STACK[0x270]) ^ 0xE782D80D))
        - ((2 * (v71 & (LODWORD(STACK[0x270]) ^ 0xE782D80D))) & 0x651DF018))
       - 451022824) ^ 0xE51DF018;
  LODWORD(STACK[0x4B0]) = (v95 - ((2 * v95) & 0xCA56EF6) - 2041399429) ^ (v91 - ((2 * v91) & 0xF8DB9276) - 59913925) ^ 0xAF9288BC;
  v98 = v94 ^ 0x87222F88 ^ (v97 - ((2 * v97) & 0xC141EF08) + 1621161861);
  v99 = (v80 & v98) - ((2 * (v80 & v98)) & 0xBB05DD50);
  LODWORD(STACK[0x678]) = (v96 - ((2 * v96) & 0x3062F0CC) - 1741588378) ^ (v93 - ((2 * v93) & 0x184360BC) + 203534430) ^ 0xDBB09C6D;
  v100 = (((v82 & v98) - ((2 * (v82 & v98)) & 0xE1178434) - 259276262) ^ 0xF08BC21A) >> v74;
  v101 = 2
       * (((LODWORD(STACK[0x510]) ^ 0x442B2A4C) & v79)
        - ((2 * ((LODWORD(STACK[0x510]) ^ 0x442B2A4C) & v79)) & 0x4C5A466C))
       - 866498964;
  v102 = v67 ^ 0xDD092F60 ^ ((v101 ^ 0xCC5A466C) - 2 * ((v101 ^ 0xCC5A466C) & 0x6966B536 ^ v101 & 0x10) + 1768338727);
  v103 = (v102 & v72) - ((2 * (v102 & v72)) & 0x626825B2);
  v104 = ((((v99 + 1568861864) ^ 0x5D82EEA8) << v81)
        - ((2 * (((v99 + 1568861864) ^ 0x5D82EEA8) << v81)) & 0x24F73334)
        + 310090138) ^ 0x127B999A | (v100 - ((2 * v100) & 0xAD25911A) - 695023475) ^ 0xD692C88D;
  LODWORD(STACK[0x274]) = v104 - ((2 * v104) & 0xAB5BEDF8);
  v105 = (2
        * ((v71 & (LODWORD(STACK[0x280]) ^ 0xE782D80D))
         - ((2 * (v71 & (LODWORD(STACK[0x280]) ^ 0xE782D80D))) & 0x59D0CD0A))
        + 1506856202) ^ 0x59D0CD0A;
  v106 = (((v103 + 825496281) ^ 0x313412D9u) >> v83)
       - ((2 * (((v103 + 825496281) ^ 0x313412D9u) >> v83)) & 0xC1C5B18E)
       - 522004281;
  v107 = (((v102 & v73) - ((2 * (v102 & v73)) & 0xC6F45DC0) - 478531872) ^ 0xE37A2EE0) << v81;
  v108 = v107 - ((2 * v107) & 0xB431C67A) - 635903171;
  v109 = LODWORD(STACK[0x280]) ^ 0x9DDA2F9B ^ (v105 - ((2 * v105) & 0xF4B1EF2C) + 2052650902);
  v110 = (v80 & v109) - ((2 * (v80 & v109)) & 0xE495745E);
  v111 = (((v82 & v109) - ((2 * (v82 & v109)) & 0xDD67CBDA) - 290200083) ^ 0xEEB3E5ED) >> v74;
  v112 = 2 * ((v71 & (v75 ^ 0xE6CCB905)) + 70828242 - ((2 * (v71 & (v75 ^ 0xE6CCB905))) & 0x87194C0)) + 4892;
  v113 = v75 ^ 0xD36DF6F5 ^ ((v112 ^ 0x87194C0) - 2 * ((v112 ^ 0x87194C0) & 0x35A14FF8 ^ v112 & 8) + 899764208);
  v114 = (v80 & v113) - ((2 * (v80 & v113)) & 0x230CB67C);
  LODWORD(STACK[0x4A0]) = (v111 - ((2 * v111) & 0x6875EDDE) + 876279535) ^ ((((v110 + 1917499951) ^ 0x724ABA2F) << v78)
                                                                          - ((2
                                                                            * (((v110 + 1917499951) ^ 0x724ABA2F) << v78)) & 0xD5297924)
                                                                          - 359351150) ^ 0xB03BC81;
  v115 = STACK[0x27C];
  v116 = (v79 & (LODWORD(STACK[0x27C]) ^ 0xE782D80D))
       - ((2 * (v79 & (LODWORD(STACK[0x27C]) ^ 0xE782D80D))) & 0x5DB1F51E);
  LODWORD(STACK[0x668]) = v106 ^ v108 ^ 0x755A6FAF;
  v117 = (((v82 & v113) - ((2 * (v82 & v113)) & 0x82F0C0FE) + 1098408063) ^ 0x4178607F) >> v74;
  v118 = v117 - ((2 * v117) & 0xF7E4D3C4) + 2079484386;
  v119 = v115 ^ 0x2FCF1538 ^ (((2 * v116 + 1571943710) ^ 0x5DB1F51E)
                            - ((2 * ((2 * v116 + 1571943710) ^ 0x5DB1F51E)) & 0x909B9A68)
                            - 934425291);
  v120 = (2 * ((v79 & (v65 ^ 0xDDA0F3E4)) - ((2 * (v79 & (v65 ^ 0xDDA0F3E4))) & 0x186031CE)) - 1738526258) ^ 0x986031CE;
  v121 = v65 ^ 0xFCD764B ^ (v120 - ((2 * v120) & 0xA4DB0B5C) - 764574289);
  v122 = (((v121 & v73) - ((2 * (v121 & v73)) & 0x1CD70E9C) - 1905555634) ^ 0x8E6B874E) << v81;
  v123 = (v82 & v121) - ((2 * (v82 & v121)) & 0x845DFD16);
  LODWORD(STACK[0x660]) = v118 ^ ((((v114 - 1853465794) ^ 0x91865B3E) << v81)
                                - ((2 * (((v114 - 1853465794) ^ 0x91865B3E) << v81)) & 0xA209711A)
                                - 788219763) ^ 0xE556853A;
  v124 = STACK[0x478];
  v125 = (v71 & (LODWORD(STACK[0x478]) ^ 0x9DE1F504))
       + 1453616286
       - ((2 * (v71 & (LODWORD(STACK[0x478]) ^ 0x9DE1F504))) & 0x2D48F0C2);
  v126 = (((v119 & v73) - ((2 * (v119 & v73)) & 0x2B914C92) - 1782012343) ^ 0x95C8A649) << v78;
  v127 = (((v119 & v72) - ((2 * (v119 & v72)) & 0x6FA10E26) + 936412947) ^ 0x37D08713) >> v83;
  LODWORD(STACK[0x640]) = ((((v123 + 1110376075) ^ 0x422EFE8B) >> v83)
                         - ((2 * (((v123 + 1110376075) ^ 0x422EFE8B) >> v83)) & 0x92C61EBC)
                         + 1231228766) ^ (v122 - ((2 * v122) & 0xC8DE18EE) + 1684999287);
  LODWORD(STACK[0x498]) = (v126 - ((2 * v126) & 0xB562C076) - 625909701) ^ (v127 - ((2 * v127) & 0x958115F0) + 1254132472) ^ 0x45DC1C3F;
  v128 = v124 ^ 0xB5456667 ^ (((2 * v125 + 6022) ^ 0xAD48F0C2)
                            - 2 * (((2 * v125 + 6022) ^ 0xAD48F0C2) & 0x28A49372 ^ (2 * v125 + 6022) & 0x10)
                            + 681874275);
  v129 = (v80 & v128) - ((2 * (v80 & v128)) & 0x35441840);
  v130 = (((v72 & v128) - ((2 * (v72 & v128)) & 0x6ED1C268) + 929620276) ^ 0x3768E134) >> v74;
  v131 = (2 * (((v68 ^ 0x9A316B6B) & v71) - ((2 * ((v68 ^ 0x9A316B6B) & v71)) & 0x4C508FB8)) + 1280348088) ^ 0x4C508FB8;
  v132 = ((((v129 - 1700656096) ^ 0x9AA20C20) << v78)
        - ((2 * (((v129 - 1700656096) ^ 0x9AA20C20) << v78)) & 0x92EDA276)
        + 1232523579) ^ 0x4976D13B | (v130 - ((2 * v130) & 0x463F0FB0) - 1558214696) ^ 0xA31F87D8;
  v133 = v132 - ((2 * v132) & 0x8EBCF0B0);
  v134 = v68 ^ 0x779CEBA6 ^ (v131 - ((2 * v131) & 0xDB5B0198) - 307396403);
  v135 = (v134 & v72) - ((2 * (v134 & v72)) & 0x6089B68E);
  v136 = (((v134 & v73) - ((2 * (v134 & v73)) & 0x445E94BA) + 573524573) ^ 0x222F4A5D) << v81;
  v137 = (2
        * ((v79 & (LODWORD(STACK[0x440]) ^ 0x9DE1F504))
         - ((2 * (v79 & (LODWORD(STACK[0x440]) ^ 0x9DE1F504))) & 0x61F7DEC6))
        + 1643634374) ^ 0x61F7DEC6;
  v138 = STACK[0x450];
  v139 = (v71 & (LODWORD(STACK[0x450]) ^ 0x9DE1F504))
       - ((2 * (v71 & (LODWORD(STACK[0x450]) ^ 0x9DE1F504))) & 0x1AFDBC36);
  v140 = LODWORD(STACK[0x440]) ^ 0xA5B6025D ^ (v137 - ((2 * v137) & 0x70AFEEB0) + 945289049);
  v141 = (((v80 & v140) - ((2 * (v80 & v140)) & 0xCA1CC66A) - 452041931) ^ 0xE50E6335) << v78;
  v142 = ((((v135 + 809818951) ^ 0x3044DB47u) >> v83) ^ 0xF67A6FA7)
       + (v136 ^ 0x5EB3FFF7)
       + ((2 * v136) & 0xBD67FFEE)
       + ((2 * (((v135 + 809818951) ^ 0x3044DB47u) >> v83)) & 0xECF4DF4E);
  LODWORD(STACK[0x608]) = v142 - ((2 * v142 + 1436754116) & 0x5A180652) - 673344629;
  v143 = (2 * ((v79 & (v77 ^ 0x7F18E092)) - ((2 * (v79 & (v77 ^ 0x7F18E092))) & 0x6A793082)) - 361156478) ^ 0xEA793082;
  v144 = (((v82 & v140) - ((2 * (v82 & v140)) & 0x81B0F676) - 1059554501) ^ 0xC0D87B3B) >> v74;
  v145 = v77 ^ 0xEF57006A ^ (v143 - ((2 * v143) & 0x209FC1F0) - 1873813256);
  v146 = (v80 & v145) - ((2 * (v80 & v145)) & 0x2F4734A2);
  v147 = (2 * (((v66 ^ 0xBB4BD16C) & v71) - ((2 * ((v66 ^ 0xBB4BD16C) & v71)) & 0x22FDB964)) - 1560430236) ^ 0xA2FDB964;
  v148 = (v141 - ((2 * v141) & 0x32CDBBD0) - 1721311768) ^ 0x9966DDE8 | (v144 - ((2 * v144) & 0xD2496A7E) + 1764013375) ^ 0x6924B53F;
  v149 = v148 - ((2 * v148) & 0x8EBCF0B0);
  v150 = (((v145 & v72) - ((2 * (v145 & v72)) & 0xA5B2EA7A) - 757500611) ^ 0xD2D9753D) >> v74;
  v151 = v138 ^ 0x82634AD6 ^ (((2 * v139 - 1694647242) ^ 0x9AFDBC36)
                            - ((2 * ((2 * v139 - 1694647242) ^ 0x9AFDBC36)) & 0x3F057FA4)
                            + 528662482);
  v152 = (v82 & v151) - ((2 * (v82 & v151)) & 0xAA932850);
  v153 = ((2 * v150) & 0x57FFA37E)
       + (v150 ^ 0xABFFD1BF)
       + ((((v146 - 1750885807) ^ 0x97A39A51) << v81) ^ 0x6F7FA7FD)
       + ((2 * (((v146 - 1750885807) ^ 0x97A39A51) << v81)) & 0xDEFF4FFA);
  LODWORD(STACK[0x5F0]) = v153 - ((2 * v153 + 1224805512) & 0x5A180652) + 294422893;
  v154 = v66 ^ 0xCA1574FD ^ (v147 - ((2 * v147) & 0xE2BD4B20) + 1902028177);
  v155 = (((v82 & v154) - ((2 * (v82 & v154)) & 0xB1C07A38) - 656392932) ^ 0xD8E03D1C) >> v74;
  v156 = (((v73 & v151) - ((2 * (v73 & v151)) & 0x96AB8B0E) - 883571321) ^ 0xCB55C587) << v78;
  v157 = ((((v152 - 716598232) ^ 0xD5499428) >> v83)
        - ((2 * (((v152 - 716598232) ^ 0xD5499428) >> v83)) & 0x9B299C98)
        - 845885876) ^ 0xCD94CE4C | (v156 - ((2 * v156) & 0x4E0A1F6A) - 1492840523) ^ 0xA7050FB5;
  v158 = v157 - ((2 * v157) & 0x8EBCF0B0);
  v159 = STACK[0x288];
  v160 = (2
        * ((v79 & (LODWORD(STACK[0x288]) ^ 0x9DE1F504))
         - ((2 * (v79 & (LODWORD(STACK[0x288]) ^ 0x9DE1F504))) & 0x444B3054))
        + 1145778260) ^ 0x444B3054;
  v161 = (((v73 & v154) - ((2 * (v73 & v154)) & 0x8CD62172) + 1181421753) ^ 0x466B10B9) << v78;
  v162 = (v155 - ((2 * v155) & 0xB8A6256C) - 598535498) ^ 0xDC5312B6 | (v161 - ((2 * v161) & 0x5EBBDC1A) + 794684941) ^ 0x2F5DEE0D;
  LODWORD(STACK[0x5E0]) = v162 - ((2 * v162) & 0x5A180652) + 755761961;
  v163 = v159 ^ 0x1CB6D12F ^ (v160 - ((2 * v160) & 0x2AE4854) - 2124995541);
  v164 = (v80 & v163) - ((2 * (v80 & v163)) & 0xA2CD1948);
  v165 = 2 * ((v71 & (v64 ^ 0x9FE9C7A9)) - ((2 * (v71 & (v64 ^ 0x9FE9C7A9))) & 0x4ECB3364)) + 1321939812;
  v166 = (((v163 & v72) - ((2 * (v163 & v72)) & 0xBAA5E0B8) - 581767076) ^ 0xDD52F05C) >> v83;
  v167 = ((((v164 - 781808476) ^ 0xD1668CA4) << v81)
        - ((2 * (((v164 - 781808476) ^ 0xD1668CA4) << v81)) & 0x763501F6)
        - 1155890949) ^ 0xBB1A80FB | (v166 - ((2 * v166) & 0x48A0E0EC) + 609251446) ^ 0x24507076;
  LODWORD(STACK[0x478]) = v133 - 950110120;
  LODWORD(STACK[0x468]) = v149 - 950110120;
  LODWORD(STACK[0x480]) = v158 - 950110120;
  LODWORD(STACK[0x470]) = v167 - ((2 * v167) & 0x8EBCF0B0) - 950110120;
  v168 = v64 ^ 0x48C9ED4E ^ ((v165 ^ 0x4ECB3364) - 2 * ((v165 ^ 0x4ECB3364) & 0x57202AFE ^ v165 & 0x18) - 685757721);
  v169 = (v73 & v168) - ((2 * (v73 & v168)) & 0x32D06256);
  v170 = STACK[0x458];
  v171 = 2
       * ((v79 & (LODWORD(STACK[0x458]) ^ 0xB002B167))
        - ((2 * (v79 & (LODWORD(STACK[0x458]) ^ 0xB002B167))) & 0x2A7B29B0))
       + 712714672;
  v172 = (((v82 & v168) - ((2 * (v82 & v168)) & 0x3EC969AA) - 1620790059) ^ 0x9F64B4D5) >> v74;
  v173 = ((2 * (((v169 - 1721224917) ^ 0x9968312B) << v78)) & 0xDE5BB5B8)
       + ((((v169 - 1721224917) ^ 0x9968312B) << v78) ^ 0x6F2DDADC)
       + (v172 ^ 0x77EDFEF5)
       + ((2 * v172) & 0xEFDBFDEA);
  LODWORD(STACK[0x5D0]) = v173 - ((2 * v173 + 835210334) & 0x8DE1A1EE) + 1607792422;
  v174 = v170 ^ 0x8B1DD50E ^ ((v171 ^ 0x2A7B29B0) - 2 * ((v171 ^ 0x2A7B29B0) & 0x3B1F646A ^ v171 & 2) + 991913065);
  v175 = (((v80 & v174) - ((2 * (v80 & v174)) & 0x2D446E0) - 2123750544) ^ 0x816A2370) << v81;
  v176 = (((v174 & v72) - ((2 * (v174 & v72)) & 0xDB6B1418) - 306869748) ^ 0xEDB58A0C) >> v83;
  v177 = (v175 + 1212220454 - ((2 * v175) & 0x9082084C)) ^ 0x48410426 | (v176
                                                                       - 1901957912
                                                                       + (~(2 * v176) | 0xE2BB262F)
                                                                       + 1) ^ 0x8EA26CE8;
  LODWORD(STACK[0x2F0]) = v177 - ((2 * v177) & 0xCBEE1CD2);
  v178 = (2 * ((v71 & (v63 ^ 0x9FE9C7A9)) - ((2 * (v71 & (v63 ^ 0x9FE9C7A9))) & 0x56414B0A)) - 700364022) ^ 0xD6414B0A;
  v179 = (2
        * ((v79 & (LODWORD(STACK[0x464]) ^ 0xB002B167))
         + 528943615
         - ((2 * (v79 & (LODWORD(STACK[0x464]) ^ 0xB002B167))) & 0x3F0E1926))
        + 1320) ^ 0x3F0E1926;
  v180 = v63 ^ 0xDEE7E10C ^ (v178 - ((2 * v178) & 0x821C4D48) + 1091446437);
  v181 = (v80 & v180) - ((2 * (v80 & v180)) & 0xDD81364A);
  v182 = LODWORD(STACK[0x464]) ^ 0xA7B67668 ^ (v179 - ((2 * v179) & 0x2F698E1C) + 397723407);
  v183 = (v82 & v182) - 1645354414 + (~(2 * (v82 & v182)) | 0xC4243B5B);
  v184 = (((v72 & v180) - ((2 * (v72 & v180)) & 0xC3CBE6A8) + 1642459988) ^ 0x61E5F354) >> v83;
  v185 = v79 & (v76 ^ 0x9FE9C7A9);
  v186 = ((2 * v184) & 0x35FE7FF8)
       + (v184 ^ 0x9AFF3FFC)
       + ((((v181 - 289367259) ^ 0xEEC09B25) << v81) ^ 0x7F5E7EDB)
       + ((2 * (((v181 - 289367259) ^ 0xEEC09B25) << v81)) & 0xFEBCFDB6);
  LODWORD(STACK[0x5C0]) = v186 - ((2 * v186 - 884702638) & 0x8DE1A1EE) + 747835936;
  v187 = (((v182 & v73) - ((2 * (v182 & v73)) & 0xDAED3F2C) + 1836490646) ^ 0x6D769F96) << v78;
  v188 = ((2 * v187) & 0xBD7D5A9E)
       + (v187 ^ 0x5EBEAD4F)
       + ((((v183 + 1) ^ 0x9DEDE252) >> v74) ^ 0x597F9CFE)
       + ((2 * (((v183 + 1) ^ 0x9DEDE252) >> v74)) & 0xB2FF39FC);
  LODWORD(STACK[0x464]) = v188 - ((2 * v188 - 1887212698) & 0xCBEE1CD2) - 1380400100;
  v189 = LODWORD(STACK[0x290]);
  v190 = (2 * ((v71 & (v189 ^ 0xB002B167)) - ((2 * (v71 & (v189 ^ 0xB002B167))) & 0x6B3230FE)) - 349032194) ^ 0xEB3230FE;
  v191 = v76 ^ 0xE372C22F ^ (((2 * (v185 - ((2 * v185) & 0x789E5E86)) + 2023644806) ^ 0x789E5E86)
                           - 2
                           * (((2 * (v185 - ((2 * v185) & 0x789E5E86)) + 2023644806) ^ 0x789E5E86) & 0x7C9B058E ^ (2 * (v185 - ((2 * v185) & 0x789E5E86)) + 2023644806) & 8)
                           + 2090534278);
  v192 = v189 ^ 0x7830D2E0 ^ (v190 - ((2 * v190) & 0x9064C70C) - 936221817);
  v193 = (v73 & v192) - ((2 * (v73 & v192)) & 0xEB969E0E);
  v194 = (((v80 & v191) - ((2 * (v80 & v191)) & 0x17EDCC80) - 1946753472) ^ 0x8BF6E640) << v81;
  v195 = STACK[0x570];
  v196 = (((v191 & v72) - ((2 * (v191 & v72)) & 0x5FE5B098) - 1343039412) ^ 0xAFF2D84C) >> v83;
  v197 = (2
        * ((v71 & (LODWORD(STACK[0x570]) ^ 0x9FE9C7A9))
         - ((2 * (v71 & (LODWORD(STACK[0x570]) ^ 0x9FE9C7A9))) & 0x53AD7168))
        - 743607960) ^ 0xD3AD7168;
  v198 = ((2 * v196) & 0xF895AEBE) + (v196 ^ 0x7C4AD75F) + (v194 ^ 0x3F7F0DFF) + ((2 * v194) & 0x7EFE1BFE);
  LODWORD(STACK[0x5B0]) = v198 - ((2 * v198 - 2006174396) & 0x8DE1A1EE) - 1960383591;
  v199 = (((v82 & v192) - ((2 * (v82 & v192)) & 0x5F38A2B0) + 798773592) ^ 0x2F9C5158u) >> v74;
  v200 = v195 ^ 0x2109BE6F ^ (v197 - ((2 * v197) & 0x7DC0F38C) - 1092585018);
  v201 = (v72 & v200) - ((2 * (v72 & v200)) & 0x5AE12C8E);
  v202 = (((v80 & v200) - ((2 * (v80 & v200)) & 0x3A484DC8) + 488908516) ^ 0x1D2426E4) << v81;
  v203 = (2
        * ((v79 & (LODWORD(STACK[0x278]) ^ 0xB002B167))
         - ((2 * (v79 & (LODWORD(STACK[0x278]) ^ 0xB002B167))) & 0x35DD6382))
        + 903701378) ^ 0x35DD6382;
  v204 = LODWORD(STACK[0x278]) ^ 0x52A183F5 ^ (v203 - ((2 * v203) & 0xC5466524) - 492621166);
  v205 = (v199 - ((2 * v199) & 0x1FD0D0E4) - 1880594318) ^ 0x8FE86872 | ((((v193 + 1976258311) ^ 0x75CB4F07) << v78)
                                                                       - ((2
                                                                         * (((v193 + 1976258311) ^ 0x75CB4F07) << v78)) & 0xD638B5D8)
                                                                       - 350463252) ^ 0xEB1C5AEC;
  LODWORD(STACK[0x2F8]) = v205 - ((2 * v205) & 0xCBEE1CD2);
  v206 = (((v204 & v73) - ((2 * (v204 & v73)) & 0x4DC198DE) - 1495217041) ^ 0xA6E0CC6F) << v78;
  v207 = ((2 * (((v201 + 762353223) ^ 0x2D709647u) >> v74)) & 0xFFEF7AF6)
       + ((((v201 + 762353223) ^ 0x2D709647u) >> v74) ^ 0x7FF7BD7B)
       + (v202 ^ 0xADFBFA7E)
       + ((2 * v202) & 0x5BF7F4FC);
  LODWORD(STACK[0x5A0]) = v207 - ((2 * v207 - 1541894130) & 0x8DE1A1EE) + 419240190;
  v208 = (((v82 & v204) - ((2 * (v82 & v204)) & 0x72C71578) + 962824892) ^ 0x39638ABC) >> v83;
  LODWORD(STACK[0x458]) = (v206 - ((2 * v206) & 0x27A0A534) + 332419738) ^ (v208 - ((2 * v208) & 0x5F4CF2A6) - 1348044461) ^ 0xD98125A0;
  v209 = (2
        * ((v71 & (LODWORD(STACK[0x590]) ^ 0x8D29D62F))
         - ((2 * (v71 & (LODWORD(STACK[0x590]) ^ 0x8D29D62F))) & 0x16C72084))
        - 1765334908) ^ 0x96C72084;
  v210 = LODWORD(STACK[0x590]) ^ 0xE40FD80D ^ (v209 - ((2 * v209) & 0xD24C1C44) + 1764101666);
  v211 = STACK[0x29C];
  v212 = (2
        * ((v79 & (LODWORD(STACK[0x29C]) ^ 0xD056A669))
         - ((2 * (v79 & (LODWORD(STACK[0x29C]) ^ 0xD056A669))) & 0x46617812))
        - 966690798) ^ 0xC6617812;
  v213 = (((v80 & v210) - ((2 * (v80 & v210)) & 0x30BDB460) - 1738614224) ^ 0x985EDA30) << v78;
  v214 = STACK[0x44C];
  v215 = STACK[0x550];
  v216 = (v71 & (LODWORD(STACK[0x550]) ^ 0x8D29D62F))
       - ((2 * (v71 & (LODWORD(STACK[0x550]) ^ 0x8D29D62F))) & 0x7FD36E72);
  v217 = (((v72 & v210) - ((2 * (v72 & v210)) & 0x4BE344A) + 39787045) ^ 0x25F1A25) >> v74;
  LODWORD(STACK[0x590]) = (v217 - ((2 * v217) & 0x2B65736A) - 1783449163) ^ (v213
                                                                           - ((2 * v213) & 0x5AE63752)
                                                                           - 1384965207) ^ 0x25150CC2;
  v218 = v211 ^ 0x3F57CAFE ^ (v212 - ((2 * v212) & 0xDE02D92C) - 285119337);
  v219 = v215 ^ 0xFCB2FE57 ^ (((2 * v216 + 2144562802) ^ 0x7FD36E72)
                            - ((2 * ((2 * v216 + 2144562802) ^ 0x7FD36E72)) & 0xE33650F0)
                            + 1905993848);
  v220 = (v80 & v219) - ((2 * (v80 & v219)) & 0xE97239BA);
  v221 = (2 * ((v79 & (v214 ^ 0xD056A669)) - ((2 * (v79 & (v214 ^ 0xD056A669))) & 0xBBF25C)) + 12317276) ^ 0xBBF25C;
  v222 = (((v218 & v73) - ((2 * (v218 & v73)) & 0xDE89116E) + 1866762423) ^ 0x6F4488B7) << v81;
  v223 = (((v82 & v218) - ((2 * (v82 & v218)) & 0x5FAC0830) + 802554904) ^ 0x2FD60418) >> v83;
  LODWORD(STACK[0x450]) = (v222 - ((2 * v222) & 0x477DD01C) - 1547769842) ^ (v223
                                                                           - ((2 * v223) & 0x7A825684)
                                                                           + 1027681090) ^ 0xC65A3E6E;
  v224 = v214 ^ 0xDC18FD4C ^ (v221 - ((2 * v221) & 0x189CB648) + 206461733);
  v225 = (v224 & v73) - ((2 * (v224 & v73)) & 0xA85E4718);
  v226 = (((v72 & v219) - ((2 * (v72 & v219)) & 0x5D2A231E) + 781521295) ^ 0x2E95118F) >> v83;
  v227 = ((((v220 - 189195043) ^ 0xF4B91CDD) << v78)
        - ((2 * (((v220 - 189195043) ^ 0xF4B91CDD) << v78)) & 0x6C547A04)
        + 908737794) ^ 0x362A3D02 | (v226 - ((2 * v226) & 0xD81B2AB2) - 334654119) ^ 0xEC0D9559;
  v228 = v227 - ((2 * v227) & 0x3BA95DBC);
  v229 = (2
        * (((LODWORD(STACK[0x580]) ^ 0xF77D6E2B) & v79)
         - ((2 * ((LODWORD(STACK[0x580]) ^ 0xF77D6E2B) & v79)) & 0x78F1F8CC))
        - 118359860) ^ 0xF8F1F8CC;
  v230 = LODWORD(STACK[0x580]) ^ 0x115C445C ^ (v229 - ((2 * v229) & 0xCC4254EC) - 434034057);
  v231 = (v230 & v73) - ((2 * (v230 & v73)) & 0x73FA48E8);
  v232 = STACK[0x438];
  v233 = (v71 & (LODWORD(STACK[0x438]) ^ 0xD056A669))
       + 1239439733
       - ((2 * (v71 & (LODWORD(STACK[0x438]) ^ 0xD056A669))) & 0x13C0B2B4);
  v234 = (((v82 & v224) - ((2 * (v82 & v224)) & 0x57604B86) + 732964291) ^ 0x2BB025C3) >> v74;
  v235 = (v234 + 235008313 - ((2 * v234) & 0x1C03E272)) ^ 0xE01F139 | ((((v225 - 735108212) ^ 0xD42F238C) << v81)
                                                                     - ((2 * (((v225 - 735108212) ^ 0xD42F238C) << v81)) & 0xC2CF2252)
                                                                     + 1634177321) ^ 0x61679129;
  LODWORD(STACK[0x44C]) = v235 - ((2 * v235) & 0xB14BFA44) + 1487273250;
  v236 = (((v230 & v82) - ((2 * (v230 & v82)) & 0xC6AF36EE) + 1666685815) ^ 0x63579B77) >> v83;
  v237 = v232 ^ 0xE839F99A ^ (((2 * v233 - 54) ^ 0x93C0B2B4)
                            - ((2 * ((2 * v233 - 54) ^ 0x93C0B2B4)) & 0x70DEBFE4)
                            + 946823155);
  v238 = (v80 & v237) - ((2 * (v80 & v237)) & 0x25835BDA);
  v239 = (((v72 & v237) - 1915664659 + (~(2 * (v72 & v237)) | 0xE45D7225) + 1) ^ 0x8DD146ED) >> v74;
  v240 = (v236 - ((2 * v236) & 0xBABF38EC) + 1566547062) ^ 0x5D5F9C76 | ((((v231 - 1174592396) ^ 0xB9FD2474) << v81)
                                                                       - ((2
                                                                         * (((v231 - 1174592396) ^ 0xB9FD2474) << v81)) & 0xA8DCE9DA)
                                                                       + 1416525037) ^ 0x546E74ED;
  LODWORD(STACK[0x570]) = v228 + 500477662;
  LODWORD(STACK[0x580]) = v240 - ((2 * v240) & 0x3BA95DBC) + 500477662;
  v241 = STACK[0x560];
  v242 = (2
        * ((v79 & (LODWORD(STACK[0x560]) ^ 0x8D29D62F))
         - ((2 * (v79 & (LODWORD(STACK[0x560]) ^ 0x8D29D62F))) & 0x6D35B80A))
        + 1832237066) ^ 0x6D35B80A;
  LODWORD(STACK[0x440]) = (v239 - 1479345996 - ((2 * v239) & 0x4FA6092C) + 3042) ^ ((((v238 + 314682861) ^ 0x12C1ADED) << v78)
                                                                                  - ((2
                                                                                    * (((v238 + 314682861) ^ 0x12C1ADED) << v78)) & 0x6D4C2998)
                                                                                  - 1230629684) ^ 0x49D0ED78;
  v243 = v241 ^ 0x954ECCDA ^ (v242 - ((2 * v242) & 0x30CE35E8) + 409410293);
  v244 = (((v243 & v73) - ((2 * (v243 & v73)) & 0x8BF2736E) + 1173961143) ^ 0x45F939B7) << v81;
  v245 = 2
       * ((v71 & (LODWORD(STACK[0x2A0]) ^ 0xD056A669))
        - ((2 * (v71 & (LODWORD(STACK[0x2A0]) ^ 0xD056A669))) & 0x4AA75152));
  v246 = STACK[0x4C0];
  v247 = LODWORD(STACK[0x2A0]) ^ 0x51DE7A92 ^ (((v245 - 895004334) ^ 0xCAA75152)
                                             - 2
                                             * (((v245 - 895004334) ^ 0xCAA75152) & 0x188DCFE ^ ((_BYTE)v245 - 118) & 4)
                                             - 2121736965);
  v248 = (v72 & v247) - ((2 * (v72 & v247)) & 0xC6416438);
  v249 = (((v82 & v243) - ((2 * (v82 & v243)) & 0x56485F4C) - 1423691866) ^ 0xAB242FA6) >> v83;
  LODWORD(STACK[0x560]) = (v249 - ((2 * v249) & 0x9BE8DE3C) - 839618786) ^ (v244 - ((2 * v244) & 0xA0418380) - 803159616);
  v250 = (((v80 & v247) - ((2 * (v80 & v247)) & 0x1E72A5CA) + 255415013) ^ 0xF3952E5) << v78;
  v251 = ((2 * (((v248 + 1663087132) ^ 0x6320B21C) >> v74)) & 0x2CFF7FF6)
       + ((((v248 + 1663087132) ^ 0x6320B21C) >> v74) ^ 0x967FBFFB)
       + (v250 ^ 0xE3AFFEBF)
       + ((2 * v250) & 0xC75FFD7E);
  LODWORD(STACK[0x438]) = v251 - ((2 * v251 + 195068556) & 0xB14BFA44) - 562676120;
  v252 = (2 * (((v246 ^ 0x48BEC4A0) & v71) - ((2 * ((v246 ^ 0x48BEC4A0) & v71)) & 0x1BB0B5E6)) + 464565734) ^ 0x1BB0B5E6;
  v253 = v246 ^ 0x9BA27D5E ^ (v252 - ((2 * v252) & 0xA63973FC) - 753092098);
  v254 = (((v253 & v73) - ((2 * (v253 & v73)) & 0x3A1BD9CE) - 1660031769) ^ 0x9D0DECE7) << v81;
  v255 = (2
        * (((LODWORD(STACK[0x530]) ^ 0x98DB6A22) & v71)
         - ((2 * ((LODWORD(STACK[0x530]) ^ 0x98DB6A22) & v71)) & 0x28961E4A))
        - 1466556854) ^ 0xA8961E4A;
  v256 = (((v253 & v82) - ((2 * (v253 & v82)) & 0x1A4D5400) - 1926845952) ^ 0x8D26AA00) >> v74;
  v257 = LODWORD(STACK[0x530]) ^ 0x31478517 ^ (v255 - ((2 * v255) & 0x5339DE68) - 1449332939);
  v258 = (v257 & v72) - ((2 * (v257 & v72)) & 0x8863FE64);
  v259 = (v256 ^ 0xDF7AFF7F) + (v254 ^ 0xD77FBAEB);
  v260 = v259 + ((2 * v254) & 0xAEFF75D6) + ((2 * v256) & 0xBEF5FEFE);
  LODWORD(STACK[0x550]) = v260 - 2 * ((v260 + 151340438) & 0x26455BA1 ^ v259 & 1) - 280321738;
  v261 = ((LODWORD(STACK[0x540]) ^ 0x8E2C600B) & v71)
       - ((2 * ((LODWORD(STACK[0x540]) ^ 0x8E2C600B) & v71)) & 0x20C96462);
  v262 = (((v257 & v73) + 1110749508 + (~(2 * (v257 & v73)) | 0x7B969D77) + 1) ^ 0x4234B144) << v81;
  v263 = ((((v258 - 1003356366) ^ 0xC431FF32) >> v74) ^ 0xC77EEEEF)
       + (v262 ^ 0xCFE2D3FB)
       + ((2 * v262) & 0x9FC5A7F6)
       + ((2 * (((v258 - 1003356366) ^ 0xC431FF32) >> v74)) & 0x8EFDDDDE);
  LODWORD(STACK[0x540]) = v263 - ((2 * v263 + 1362917932) & 0x4C8AB740) + 249796790;
  v264 = LODWORD(STACK[0x210]) ^ 0x7A77BE26 ^ (((2 * v261 - 1597414302) ^ 0xA0C96462)
                                             - ((2 * ((2 * v261 - 1597414302) ^ 0xA0C96462)) & 0x2DD674D8)
                                             + 384514668);
  v265 = (((v264 & v73) - ((2 * (v264 & v73)) & 0x7219D782) + 957148097) ^ 0x390CEBC1) << v78;
  v266 = (((v264 & v72) - ((2 * (v264 & v72)) & 0xD04C2D6E) - 400157001) ^ 0xE82616B7) >> v83;
  v267 = (v71 & STACK[0x2A4]) - ((2 * (v71 & STACK[0x2A4])) & 0x4E79F1CC);
  LODWORD(STACK[0x530]) = (v265 - ((2 * v265) & 0x2D37A55C) + 379310766) ^ (v266 - ((2 * v266) & 0xEF858020) - 138231792) ^ 0x471C491E;
  v268 = LODWORD(STACK[0x520]) ^ 0x257A2BF5 ^ (((2 * v267 - 830869044) ^ 0xCE79F1CC)
                                             - ((2 * ((2 * v267 - 830869044) ^ 0xCE79F1CC)) & 0x26C880F0)
                                             + 325337208);
  v269 = (v80 & v268) - ((2 * (v80 & v268)) & 0xA1B44CDA);
  v270 = (((v72 & v268) - ((2 * (v72 & v268)) & 0x5878AC24) - 1405331950) ^ 0xAC3C5612) >> v83;
  v271 = ((2 * v270) & 0x7FFEFDFE)
       + (v270 ^ 0xBFFF7EFF)
       + ((((v269 + 1356473965) ^ 0x50DA266D) << v81) ^ 0x5A7FBEBC)
       + ((2 * (((v269 + 1356473965) ^ 0x50DA266D) << v81)) & 0xB4FF7D78);
  LODWORD(STACK[0x520]) = v271 - ((2 * v271 + 1258390666) & 0x4C8AB740) - 1949950491;
  v272 = (2
        * (((LODWORD(STACK[0x3AC]) ^ 0xAB624C3B) & v71)
         - ((2 * ((LODWORD(STACK[0x3AC]) ^ 0xAB624C3B) & v71)) & 0x4EC6CB2E))
        + 1321650990) ^ 0x4EC6CB2E;
  v273 = LODWORD(STACK[0x3AC]) ^ 0x7ADEEF8A ^ (v272 - ((2 * v272) & 0xA3794760) - 776166479);
  v274 = (((v273 & v73) - ((2 * (v273 & v73)) & 0x16B9B48E) + 190634567) ^ 0xB5CDA47) << v81;
  v275 = ((LODWORD(STACK[0x218]) ^ 0x68D2679A) & v79)
       - ((2 * ((LODWORD(STACK[0x218]) ^ 0x68D2679A) & v79)) & 0x601F6D66);
  v276 = (((v273 & v72) - ((2 * (v273 & v72)) & 0xDC2E8476) + 1847018043) ^ 0x6E17423B) >> v74;
  LODWORD(STACK[0x510]) = (v276 - 405385207 + (~(2 * v276) | 0x30535FEF)) ^ 0xB202AD92 ^ (v274
                                                                                        - ((2 * v274) & 0x2FC56CDC)
                                                                                        + 400733806);
  v277 = ((LODWORD(STACK[0x500]) ^ 0x85EAE49D) & v79)
       - ((2 * ((LODWORD(STACK[0x500]) ^ 0x85EAE49D) & v79)) & 0x10495BA4);
  v278 = LODWORD(STACK[0x384]) ^ 0xA57F82C6 ^ (((2 * v275 + 1612672358) ^ 0x601F6D66)
                                             - ((2 * ((2 * v275 + 1612672358) ^ 0x601F6D66)) & 0x1F471274)
                                             - 1885107910);
  v279 = (((v278 & v73) - ((2 * (v278 & v73)) & 0xB0C6D54C) + 1482910374) ^ 0x58636AA6) << v81;
  v280 = (((v278 & v72) - ((2 * (v278 & v72)) & 0xBF7A1952) - 541258583) ^ 0xDFBD0CA9) >> v74;
  LODWORD(STACK[0x500]) = (v279 - ((2 * v279) & 0x98B5ACF8) + 1281021564) ^ (v280 - ((2 * v280) & 0x16B63C10) + 190520840) ^ 0x5378380;
  v281 = LODWORD(STACK[0x4E0]) ^ 0x2F70B95B ^ (((2 * v277 + 273243044) ^ 0x10495BA4)
                                             - 2
                                             * (((2 * v277 + 273243044) ^ 0x10495BA4) & 0x5CDDE93A ^ (2 * v277 + 273243044) & 0x10)
                                             + 1558047018);
  v282 = (v281 & v73) - ((2 * (v281 & v73)) & 0x37EA15C2);
  v283 = (((v82 & v281) - ((2 * (v82 & v281)) & 0x3D3978A) - 2115384379) ^ 0x81E9CBC5) >> v83;
  v284 = ((2 * (((v282 - 1678439711) ^ 0x9BF50AE1) << v78)) & 0xE47BFFBE)
       + ((((v282 - 1678439711) ^ 0x9BF50AE1) << v78) ^ 0xF23DFFDF)
       + (v283 ^ 0x7D9F77FF)
       + ((2 * v283) & 0xFB3EEFFE);
  LODWORD(STACK[0x384]) = v284 - 765931246 - ((2 * v284 + 541397060) & 0x846C97E8);
  v285 = 2
       * (((LODWORD(STACK[0x4F0]) ^ 0xDD24B34D) & v71)
        - ((2 * ((LODWORD(STACK[0x4F0]) ^ 0xDD24B34D) & v71)) & 0x219AA686))
       - 1583700346;
  v286 = LODWORD(STACK[0x4F0]) ^ 0xA646FA4E ^ ((v285 ^ 0xA19AA686)
                                             - 2 * ((v285 ^ 0xA19AA686) & 0x7B624912 ^ v285 & 0x10)
                                             + 2070038787);
  v287 = (((v286 & v73) - ((2 * (v286 & v73)) & 0x25EE1472) - 1829303751) ^ 0x92F70A39) << v78;
  v288 = (((v286 & v72) - ((2 * (v286 & v72)) & 0xC7556AAC) + 1672131926) ^ 0x63AAB556) >> v83;
  v289 = (v288 ^ 0xE758FFD7) + (v287 ^ 0x9F5FFF7D) + ((2 * v287) & 0x3EBFFEFA) + ((2 * v288) & 0xCEB1FFAE);
  LODWORD(STACK[0x4F0]) = v289 - ((2 * v289 - 225574568) & 0x846C97E8) - 1149416288;
  return sub_1000F74F0(v189, 2221709288, v63, v76, 1110749508, 754941942, 1416525037, 2815621300, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

#error "1000F74F0: too big function (funcsize=0)"

void sub_1001094B4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  int v6;
  int v7;
  int v8;

  v0 = STACK[0x260];
  LODWORD(STACK[0x36C]) = LODWORD(STACK[0x688]) - 526657;
  LODWORD(STACK[0x3E0]) = LODWORD(STACK[0x3D4]) - 805306432;
  LODWORD(STACK[0x368]) = LODWORD(STACK[0x254]) ^ 0x5BB61277;
  LODWORD(STACK[0x680]) = v0 + 30;
  LODWORD(STACK[0x360]) = LODWORD(STACK[0x25C]) ^ (v0 + 30) ^ 0xDAFBA0;
  LODWORD(STACK[0x35C]) = LODWORD(STACK[0x258]) ^ 0x4E3DC60B;
  LODWORD(STACK[0x364]) = LODWORD(STACK[0x250]) ^ 0x3A769662;
  v1 = STACK[0x26C];
  v2 = STACK[0x3DC];
  if ((STACK[0x24C] & 1) != 0)
    v3 = STACK[0x3DC];
  else
    v3 = STACK[0x26C];
  if ((STACK[0x24C] & 1) != 0)
    v4 = STACK[0x264];
  else
    v4 = STACK[0x268];
  if ((STACK[0x24C] & 1) != 0)
    v2 = STACK[0x268];
  else
    v1 = STACK[0x264];
  v5 = (STACK[0x3D8] & 2) == 0;
  if ((STACK[0x3D8] & 2) != 0)
    v6 = v3;
  else
    v6 = v4;
  LODWORD(STACK[0x26C]) = v6;
  if (!v5)
    v3 = v4;
  LODWORD(STACK[0x268]) = v3;
  if (v5)
    v7 = v2;
  else
    v7 = v1;
  LODWORD(STACK[0x264]) = v7;
  if (v5)
    v8 = v1;
  else
    v8 = v2;
  LODWORD(STACK[0x3DC]) = v8;
  JUMPOUT(0x1000FD528);
}

uint64_t sub_100109590()
{
  free((void *)STACK[0xB88]);
  free((void *)STACK[0xB78]);
  return sub_1001682C8();
}

uint64_t sub_1001095E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 + v1 - 0xA798352C87C9315) = (*(_BYTE *)(v0 + v2 - 0xD99DA20C2B2A323) ^ 0xFC)
                                            + ((*(unsigned __int8 *)(v0 + v2 - 0xD99DA20C2B2A323) << (((v5 + 67) ^ 0x15) & 0x77)) & 0xF8)
                                            + 44;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1194 * (v6 + 1 != v4 + 16)) ^ v5)) - 12))();
}

uint64_t sub_10010966C(int a1)
{
  int v1;
  int v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;

  LODWORD(STACK[0x72C]) = v2 + 64;
  v5 = (_BYTE *)STACK[0x950];
  *v5 = v3[16];
  v5[1] = v3[17];
  v5[2] = v3[18];
  v5[3] = v3[19];
  v5[4] = v3[20];
  v5[5] = v3[21];
  v5[6] = v3[22];
  v5[7] = v3[23];
  v5[8] = v3[24];
  v5[9] = v3[25];
  v5[10] = v3[26];
  v5[11] = v3[27];
  v5[12] = v3[28];
  v5[13] = v3[29];
  v5[14] = v3[30];
  v5[15] = v3[31];
  LODWORD(STACK[0x82C]) = v1 + 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((972
                                          * (((STACK[0x7B8] == 0) ^ (((((a1 | 0x88) - 15) | 0x40) ^ 0x19)
                                                                                    + 1)) & 1)) ^ (((a1 | 0x88) - 15) | 0x640) ^ 0x73A))
                            - 12))();
}

uint64_t sub_100109678@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  char v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unint64_t v21;

  v19 = (v8 - (v9 & v11));
  v20 = *(_DWORD *)(v13 + 4 * (v17 ^ v16 ^ v18 ^ v12 ^ v19));
  HIDWORD(v21) = v20 ^ a7;
  LODWORD(v21) = v20 ^ a1;
  *(_DWORD *)(v7 + 4 * (v19 ^ a5)) = a4 ^ ((v21 >> 20) - (a2 & (2 * (v21 >> 20))) + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((v10 == 0) * a6) ^ v14)) - 8))();
}

uint64_t sub_1001096D8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  return sub_100109678(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1001096E8()
{
  unsigned int v0;
  void *v1;

  v1 = malloc(0x404uLL);
  STACK[0xB20] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((23 * (((v1 == 0) ^ (v0 + 94 + v0 - 59)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_100109730(uint64_t a1)
{
  int v1;
  char v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  char v11;
  char v12;
  unsigned int v13;
  char v14;
  int v15;
  int v16;

  v4 = v1 | 0x204;
  v5 = ((LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x620]) ^ 0x548D5268)
      - ((2 * (LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x620]) ^ 0x548D5268) + 363524808) & 0xC1FC930E)
      + 1809040107) ^ 0x548D5268;
  v6 = ((v5 - ((2 * v5 + 363524808) & 0xC1FC930E) + 1809040107) ^ 0x60FE4987) + LODWORD(STACK[0x5B0]);
  v7 = (v6 ^ 0xFB5FAEBB) + 77615429 + ((2 * v6) & 0xF6BF5D76);
  v8 = (v7 & 0xFFFFFFFE) - ((2 * v7) & 0xF6B1BE4C) - 78061786;
  v9 = v2 & 8 ^ 0xFF3F967D;
  v10 = v9 + 12609931;
  v11 = -22 - v9;
  v13 = ((-448883050 * (v8 ^ 0x5ED1B3F1)) & 0x77F77AF6) + ((1923042123 * (v8 ^ 0x5ED1B3F1)) ^ 0xBBFBBD7B);
  if (((v13 + ((v4 + 34) ^ 0xFFFFFFFD)) & v10) - 1361342896 - 2 * ((v13 + ((v4 + 34) ^ 0xFFFFFFFD)) & v10) == -1361342896)
    v14 = v2 & 8 ^ 0x7D;
  else
    v14 = v11;
  v12 = ((v2 & 0xF7 ^ 0x4F) + 72 + ((2 * (v2 & 0xF7)) | 0x72)) ^ 0x2C;
  v15 = (((v12 | 0xD7) - (v12 | 0x28) + 40) ^ LOBYTE(STACK[0x4A0]) ^ LOBYTE(STACK[0x498]) ^ (v14 + v13 - ((2 * (v14 + v13) + 32) & 0xFC) - 114));
  v16 = ((2 * (v15 ^ 0x18A94BA)) & 0x20129DA) - (v15 ^ 0x18A94BA) - 760607982;
  LOWORD(v15) = ((2 * (v15 ^ 0xDB)) & 0xF6) - (v15 ^ 0xDB) + 6020;
  *(_DWORD *)(a1 + 4 * (v13 - 123)) = LODWORD(STACK[0x540]) ^ LODWORD(STACK[0x530]) ^ v3 ^ v16 ^ ((v16 ^ 0xD3209F98) - ((2 * (v16 ^ 0xD3209F98) + 963012762) & 0x35A066C0) - 1736218707) ^ 0xC95C9ABF ^ dword_10027B120[((v15 & 0x88F ^ 0x7B1C000B) + (v15 & 0x1770 ^ 0x1701) - 1) ^ 0x7B1C00F9];
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + v4) - 4))();
}

void sub_100109A30()
{
  JUMPOUT(0x100109908);
}

uint64_t sub_100109A40()
{
  int v0;
  void *v1;

  v1 = malloc(0x408uLL);
  STACK[0xAD8] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((5 * (v0 ^ 0x2D7) - 263) * (v1 != 0)) ^ v0))
                            - 233 * (v0 ^ 0x2BAu)
                            + 458))();
}

uint64_t sub_100109A94(uint64_t a1)
{
  int v1;
  unsigned int v2;
  char v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;
  int v16;

  v2 = ((LODWORD(STACK[0x590]) ^ LODWORD(STACK[0x470]) ^ 0x6472FDD4)
      - ((2 * (LODWORD(STACK[0x590]) ^ LODWORD(STACK[0x470]) ^ 0x6472FDD4) + 1383897270) & 0xF1859088)
      - 1576987489) ^ 0x854F6868;
  v3 = (((LOBYTE(STACK[0x590]) ^ LOBYTE(STACK[0x470]) ^ 0xD4)
       - ((2 * (LOBYTE(STACK[0x590]) ^ LOBYTE(STACK[0x470]) ^ 0xD4) - 74) & 0x88)
       - 97) ^ 0x68)
     - 73;
  v4 = ((v2 - 1576987465 - ((2 * v2 + 1383897270) & 0xF1859088) - 24) ^ 0xF8C2C844) + LODWORD(STACK[0x5B0]);
  v5 = (v4 - ((2 * v4) & 0xDC9B0E6E) - 296909001) ^ 0x9A04E060 | (((-(v3 & 1) - 1368328761) & 0x4A ^ 0x8004810B)
                                                                + ((-(v3 & 1) - 1368328761) & 0x35)
                                                                - 1) ^ 0x8004814D;
  v6 = (v5 - ((2 * v5) & 0xEBF82244) + 1979453730) ^ 0x75FC1122;
  v7 = LODWORD(STACK[0x5F0]) ^ 0x68E4;
  v8 = (v1 + 411919656) & 0xE7729BBD;
  LODWORD(STACK[0x668]) = v8;
  v9 = ((1648467110 * v6) & 0xBEAED7FE) + ((-1323250093 * v6) ^ 0xDF576BFF);
  v10 = 2 * (((v9 + 37889) & v7) - ((((v9 + 37889) & v7) << (v8 ^ 0xB9)) & 0x165F2)) - 1783011854;
  v11 = ((2 * (v7 + 547918849 + v9)) & 0xEFFFEDFE)
      + ((v7 + 547918849 + v9) ^ 0xF7FFF6FF)
      + (v10 ^ 0xB41965F3)
      + ((2 * v10) & 0xBCBFFFFC ^ 0xD7CD341B);
  v12 = LODWORD(STACK[0x610]) ^ LODWORD(STACK[0x670]) ^ (v11 - ((2 * v11 - 859827710) & 0xA940D1BA) - 1157598754);
  v13 = (((v12 >> 2) | 0xE1) - (v12 >> 3) - 113) ^ 0x62 | (((32 * v12) ^ 0xE772B2A0)
                                                                                           + 248545684) ^ 0xED08194;
  v14 = v13 - 2 * (v13 & 0x1F);
  HIDWORD(v15) = (v14 + 63) ^ 0x1B;
  LODWORD(v15) = (v14 << 24) - 1627389952;
  v16 = dword_1002591B0[((v15 >> 29) - ((2 * (v15 >> 29)) & 0xB2) - 39) ^ 0x27];
  HIDWORD(v15) = v16 ^ 0xBB3DBE9;
  LODWORD(v15) = v16 ^ 0xC0000000;
  *(_DWORD *)(a1 + 4 * (-90 * v6 + ~(83 * v6) + 1)) = LODWORD(STACK[0x520]) ^ LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x618]) ^ 0x22C2B395 ^ ((v15 >> 29) - ((2 * (v15 >> 29)) & 0x17559DC8) + 195743460);
  return ((uint64_t (*)(void))*(&off_1002C8B50 + v1))();
}

void sub_100109DD4()
{
  JUMPOUT(0x100109C6CLL);
}

uint64_t sub_100109DE4()
{
  int v0;
  void *v1;

  v0 = STACK[0x668];
  v1 = malloc(0x404uLL);
  STACK[0xB10] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((v1 != 0) * (((v0 ^ 0x6B2) - 479) ^ 0x785)) ^ v0)) - 8))();
}

uint64_t sub_100109E2C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  v3 = (((LODWORD(STACK[0x424]) ^ 0x7735FF4A)
       - ((2 * (LODWORD(STACK[0x424]) ^ 0x7735FF4A) + 1225213828) & 0x757198A6)
       - 549687275) ^ 0x3AB8CC53)
     + LODWORD(STACK[0x690]);
  v4 = (((((2 * v3) & 0xDFB37FBC) + (v3 ^ 0xEFD9BFDE)) & 0xFFFFFFFE)
      - ((2 * (((2 * v3) & 0xDFB37FBC) + (v3 ^ 0xEFD9BFDE)) + 541884484) & 0xB033B924)
      - 398451531) ^ 0x1F443B2E;
  v5 = (302203643 * v4 + 148 - ((-10 * (_BYTE)v4) & 0x28)) & ((v1 - 338) ^ 0x247);
  v6 = (1573064880 - (v5 ^ 0x3F) + ((2 * (v5 ^ 0x3F)) & 0x1AE) + 3192) ^ 0x59CB1700;
  v7 = dword_100267A30[LODWORD(STACK[0x5E0]) ^ LODWORD(STACK[0x608]) ^ LODWORD(STACK[0x630]) ^ 0x78E476D3 ^ (v6 - ((2 * v6) & 0x81009E0) - 9603856)];
  v8 = LODWORD(STACK[0x5A0]) ^ LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x458]) ^ LODWORD(STACK[0x688]) ^ LODWORD(STACK[0x680]) ^ LODWORD(STACK[0x500]) ^ LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x440]) ^ LODWORD(STACK[0x464]) ^ v7 ^ (v7 >> 2) ^ (v7 >> 6);
  *(_DWORD *)(a1 + 4 * (v5 ^ 0x94u)) = LODWORD(STACK[0x678]) ^ LODWORD(STACK[0x510]) ^ 0xA58DD7A7 ^ ((v8 ^ 0x51D274C9) + 755752175 - 2 * ((v8 ^ 0x51D274C9) & 0x2D0BDCFF ^ v8 & 0x10));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v1) - 8))();
}

void sub_10010A050()
{
  JUMPOUT(0x100109FA4);
}

uint64_t sub_10010A060()
{
  int v0;
  void *v1;

  v1 = malloc(0x404uLL);
  STACK[0xB18] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((284 * (v1 != 0)) ^ v0)) - ((v0 - 141) ^ 0x2D3u) + 240))();
}

uint64_t sub_10010A0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  char v11;
  int v12;

  v9 = ((LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x470]) ^ 0xE939CF0)
      - ((2 * (LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x470]) ^ 0xE939CF0) + 654657334) & 0x3A9DCC6E)
      - 1865315886) ^ 0xE939CF0;
  v10 = ((v9 - ((2 * v9 + 654657334) & 0x3A9DCC6E) - 1865315886) ^ 0x1D4EE637) + LODWORD(STACK[0x5B0]);
  LOBYTE(v10) = (v10 ^ 0xAB) + 85 + ((2 * v10) & 0x56);
  LOBYTE(v10) = ((v10 & 0xFE) - ((2 * v10) & 0xDC) + 110) ^ 0xFB;
  v11 = -111 * v10 - 125;
  v12 = (LOBYTE(STACK[0x610]) ^ LOBYTE(STACK[0x670]) ^ LOBYTE(STACK[0x5F0]) ^ (v11
                                                                                              - ((34 * v10) & ((v8 - 64) ^ 0xBE))));
  *(_DWORD *)(a1 + 4 * ((v11 - ((34 * v10) & ((v8 - 64) ^ 0xBE))) ^ 0x83u)) = LODWORD(STACK[0x4C0]) ^ LODWORD(STACK[0x510]) ^ LODWORD(STACK[0x464]) ^ v12 ^ 0x808E4DF9 ^ dword_10025BD40[v12 ^ 0x92];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * v8) - 8))();
}

void sub_10010A228()
{
  JUMPOUT(0x10010A1D4);
}

uint64_t sub_10010A238()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  unint64_t v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  char v41;
  char v42;
  unsigned int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  char v82;
  unint64_t v83;
  unint64_t v84;
  unsigned int v85;
  unint64_t v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unint64_t v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unint64_t v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  char v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  char v129;
  char v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unint64_t v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unint64_t v240;
  int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  uint64_t v252;
  unsigned int v253;
  char v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  uint64_t v264;
  unsigned int v265;
  int v266;
  char v267;
  char v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  int v273;
  unint64_t v274;
  int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  char v279;
  int v280;
  char v281;
  char v282;
  int v283;
  int v284;
  unint64_t v285;

  v1 = byte_10025C240[(LOBYTE(STACK[0xBBD]) - (((v0 ^ 0x7C) + 2 * LOBYTE(STACK[0xBBD])) & 0x58) - 114) ^ 0x1DLL];
  v2 = (v1 - ((2 * (_BYTE)v1 + 30) & 0x1E) + 78) ^ 0xBB;
  v3 = (((v2 - ((2 * v2) & 0x7C)) << 16) - 1690435584) ^ 0x9B3E0000;
  v4 = byte_1002663C0[(LOBYTE(STACK[0xBBF]) + ((54 - 2 * LOBYTE(STACK[0xBBF])) | 9) + 96) ^ 0xC1] ^ 0x3D;
  v5 = (v4 - ((2 * v4) & 0xFFFFFFCF) - 1903880473) ^ 0x8E8516E7 | (v3 - ((2 * v3) & 0x28160000) - 1811180413) ^ 0x940B9483;
  v6 = byte_10027AE00[(LOBYTE(STACK[0xBBC]) - ((2 * LOBYTE(STACK[0xBBC]) + 66) & 0x68) - 43) ^ 0x4ALL] ^ (LOBYTE(STACK[0xBBC]) - ((2 * LOBYTE(STACK[0xBBC]) + 66) & 0x68) - 43) ^ 0x81;
  v7 = (((v6 - 2 * (v6 & 7)) << 24) - 2030043136) ^ 0x87000000;
  v8 = (v7 - ((2 * v7) & 0x12000000) + 167455886) ^ 0x9FB2C8E | (v5 - ((2 * v5) & 0xFDFF60A) + 133167877) ^ 0x7EFFB05;
  v9 = byte_10027DCC0[(LOBYTE(STACK[0xBBE]) + (~(2 * LOBYTE(STACK[0xBBE]) + 70) | 0x43) - 126) ^ 0xA4];
  v10 = v9 ^ 0xE6 ^ (((16 * v9) ^ 0x70) - ((2 * ((16 * v9) ^ 0x70)) & 0xA0) - 37);
  v11 = (((v10 - ((2 * v10) & 0x14A)) << 8) + 1873126656) ^ 0x6FA5A500;
  v12 = (v11 - ((2 * v11) & 0x74EC8600) - 1166654665) ^ 0xBA764337 | (v8 - ((2 * v8) & 0xAC196168) + 1443672244) ^ 0x560CB0B4;
  v13 = (v12 - ((2 * v12) & 0x271EA0C4) - 1819324318) ^ LODWORD(STACK[0x590]);
  v14 = ((7 - LODWORD(STACK[0x438])) & 0x40000 ^ 0x77ADEBFF) + 2 * ((7 - LODWORD(STACK[0x438])) & 0x40000);
  v15 = byte_10027DCC0[(LOBYTE(STACK[0xBB6]) - 101) ^ 0xF0];
  v16 = ((v13 ^ 0x24840000) & (v14 - 2007886847)) == ((2 * ((v13 ^ 0x24840000) & (v14 - 2007886847))) & 0x14700000);
  v17 = byte_10025C240[(LOBYTE(STACK[0xBB5]) - ((2 * LOBYTE(STACK[0xBB5]) + 52) & 0x48) - 2) ^ 0xEALL];
  v18 = v15 ^ (((16 * v15) ^ 0x70) - ((2 * ((16 * v15) ^ 0x70)) & 0x40) + 43) ^ 0x1F;
  v19 = (((v18 - ((2 * v18) & 0x1B6)) << 8) - 1102652672) ^ 0xBE46DB00;
  v20 = (((((v17 - ((2 * v17 + 126) & 0xDA) + 44) ^ 0x7E)
         - ((2 * ((v17 - ((2 * v17 + 126) & 0xDA) + 44) ^ 0x7E)) & 0x4E)) << 16)
       + 489095168) ^ 0x1D270000;
  v21 = (v20 - ((2 * v20) & 0x6160000) + 1124856247) ^ 0x430BF1B7 | (v19 - ((2 * v19) & 0x1C92F200) + 1313438049) ^ 0x4E497961;
  v22 = byte_10027AE00[(LOBYTE(STACK[0xBB4]) - ((2 * LOBYTE(STACK[0xBB4]) + 50) & 0xDA) - 122) ^ 0xB3] ^ (LOBYTE(STACK[0xBB4]) - ((2 * LOBYTE(STACK[0xBB4]) + 50) & 0xFFFFFFDA) - 122) ^ 0xBF;
  v23 = (((v22 - ((2 * v22) & 0xA8)) << 24) + 1409286144) ^ 0x54000000;
  v24 = byte_1002663C0[(LOBYTE(STACK[0xBB7]) - ((2 * LOBYTE(STACK[0xBB7]) - 72) & 0x96) + 39) ^ 0x12];
  HIDWORD(v25) = v24 ^ 0x1D;
  LODWORD(v25) = (v24 ^ 0x20) << 24;
  v26 = (v23 - ((2 * v23) & 0xA000000) + 89995601) ^ 0x55D3951 | (v21 - ((2 * v21) & 0x876FD6A) - 2076475723) ^ 0x843B7EB5;
  v27 = (v25 >> 29) + (~(2 * (v25 >> 29)) | 0x53) - 41;
  HIDWORD(v25) = v27 ^ 4;
  LODWORD(v25) = (v27 ^ 0x68) << 24;
  v28 = ((((v25 >> 27) - ((2 * (v25 >> 27)) & 0x4E) - 89) ^ 0xA7)
       - ((2 * (((v25 >> 27) - ((2 * (v25 >> 27)) & 0x4E) - 89) ^ 0xA7)) & 0x15E)
       + 2046299823) ^ 0x79F80EAF | (v26 - ((2 * v26) & 0x4604100A) - 1560147963) ^ 0xA3020805;
  v29 = STACK[0x640];
  v30 = LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x4F0]) ^ (v28 - ((2 * v28) & 0x22870B20) - 1857845872);
  v31 = v14 - 42493960;
  v32 = -321687562 - v14;
  if (!v16)
    v31 = v32;
  v33 = STACK[0x678];
  v34 = (LODWORD(STACK[0x678]) ^ 0xB66C2AB4 ^ v30) + 1;
  v35 = v30 ^ 0x4A1F9A55;
  v36 = v35 + (v34 ^ 0x6DE5E5FE) + ((2 * v34) & 0xDBCBCBFC) - 1843783166;
  v37 = (LODWORD(STACK[0x678]) ^ ((LODWORD(STACK[0x4B0]) ^ 0xD31C3AF9)
                                - 2
                                * (((LODWORD(STACK[0x4B0]) ^ 0xD31C3AF9) + 259348080) & 0x56FB687B ^ (LODWORD(STACK[0x4B0]) ^ 0xD31C3AF9) & 1)
                                - 428818710) ^ 0x154DA7E3 ^ (v36 - ((2 * v36) & 0x8075010E) + 1077575815))
      + v35;
  v38 = STACK[0x430];
  v39 = (v37 - ((2 * v37) & 0x60BF475C) - 1335909458) ^ LODWORD(STACK[0x430]);
  v40 = (v39 ^ 0xD87528A3) % 0x3A5E0577;
  LOBYTE(v35) = LOBYTE(STACK[0xBBB]) - ((2 * LOBYTE(STACK[0xBBB]) + 22) & 0x2A) + 96;
  v41 = (((2 * v35) ^ 0x2A) - ((2 * ((2 * v35) ^ 0x2A)) & 0x18) + 45) & 0x2A;
  LOBYTE(v35) = v35 + (v41 ^ 0xD6) + ((2 * v41) ^ 0x50) + 2;
  v42 = v35 + (~(2 * v35) | 0xAD);
  v43 = LOBYTE(STACK[0xBB1]) - ((2 * LOBYTE(STACK[0xBB1]) - 84) & 0xFFFFFFD2) + 63;
  v44 = (v43 ^ 0x69) - ((2 * (v43 ^ 0x69)) & 0xBE) - 686001313;
  v45 = ((2 * (v43 ^ 0x95)) & 0x1C6) + (v43 ^ 0x7BF5F976);
  LODWORD(STACK[0x690]) = v0;
  v46 = v44 ^ (-1783342500 - v45 - ((938210750 - 2 * v45) & 0x337CBEFA)) ^ 0x36DFBBDF ^ ((v44 ^ 0x28E38CA0)
                                                                                       - ((2 * (v44 ^ 0x28E38CA0) + 2) & 0xF0FB2FFA)
                                                                                       - 125986818);
  v47 = v46 + 1500547863 - ((2 * v46 + 504) & 0xB2E11618) + 241;
  v48 = ((v47 ^ 0xFC | 0x4351FA7B) - (v47 ^ 0xFC | 0xBCAE0584) - 1129446012) ^ 0x23106AEB;
  v49 = v47 ^ 0x59708B17;
  v50 = ((v48 | 0xC204EEC8) - (v48 | 0x3DFB1137) + 1039864119) ^ v47;
  v51 = ((2 * (v50 & 0x53 ^ 0x50)) | 0x91C0789A) - (v50 & 0x53 ^ 0x50) + 924828595;
  v52 = ((v51 & 0x4E307632 ^ 0x4A005432) + (v51 ^ 0xA4F9AB4D) - ((v51 ^ 0xA4F9AB4D) & 0x4E307632)) ^ 0x2229E163 | (((v50 ^ 0x764FA80C) & 8 | (v50 ^ 0x764FA80C) & 0xA4 ^ 0x21) + 335) ^ 0x1D0;
  v53 = ((v52 - ((2 * v52) & 0x98) - 52) ^ 0x33)
      + byte_10025C240[v49]
      + ((2 * (v52 - ((2 * v52) & 0x98) - 52)) ^ 0xFFFFFF98);
  v54 = ((v53 - ((2 * v53 + 110) & 0xFFFFFF92) + 2) ^ 1) - 2;
  LODWORD(STACK[0x688]) = v54;
  v55 = ((((v54 ^ 0x9C) - ((2 * (v54 ^ 0x9C)) & 0xC)) << 16) - 100270080) ^ 0xFA060000;
  v56 = v55 - ((2 * v55) & 0xD0E0000);
  v57 = LOBYTE(STACK[0xBB0]) + (~(2 * LOBYTE(STACK[0xBB0]) + 42) | 0x33) - 4;
  v58 = byte_10027AE00[(LOBYTE(STACK[0xBB0]) + (~(2 * LOBYTE(STACK[0xBB0]) + 42) | 0x33) - 4) ^ 0xEALL] ^ v57 ^ 0x9B;
  v59 = (((v58 - ((2 * v58) & 0xD6)) << 24) - 352321536) ^ 0xEB000000;
  v60 = byte_10025C240[(LOBYTE(STACK[0xBB9]) - ((2 * LOBYTE(STACK[0xBB9]) + 28) & 0x12) - 25) ^ 0xEALL];
  v61 = (v60 - ((2 * (_BYTE)v60 + 6) & 4) + 65) ^ 0xE9;
  v62 = (((v61 - ((2 * v61) & 0xEE)) << 16) + 2071396352) ^ 0x7B770000;
  v63 = byte_1002663C0[(v42 - 86) ^ 0x16] ^ 0x3D;
  v64 = (v62 - ((2 * v62) & 0x26200000) - 1827640003) ^ 0x93106D3D | (v63 - 2 * (v63 & 0x7F) + 1694937215) ^ 0x6506B07F;
  v65 = byte_10027DCC0[(LOBYTE(STACK[0xBBA]) - ((2 * LOBYTE(STACK[0xBBA]) + 62) & 0xB0) + 119) ^ 0x17];
  v66 = v65 ^ 0x4A ^ (((16 * v65) ^ 0x70) - 126);
  v67 = (((v66 - ((2 * v66) & 0x136)) << 8) - 825582848) ^ 0xCECA9B00;
  v68 = (v64 - ((2 * v64) & 0x34B9E29A) - 1705184947) ^ 0x9A5CF14D | (v67 - ((2 * v67) & 0x6C9AFC00) + 1984790045) ^ 0x764D7E1D;
  v69 = byte_10027AE00[(LOBYTE(STACK[0xBB8]) - ((2 * LOBYTE(STACK[0xBB8]) + 58) & 0x8A) + 98) ^ 0x9ALL] ^ (LOBYTE(STACK[0xBB8]) - ((2 * LOBYTE(STACK[0xBB8]) + 58) & 0xFFFFFF8A) + 98) ^ 0xDD;
  v70 = (((v69 + (~(2 * v69) | 0x99999999)) << 24) - 1275068416) ^ 0xB3000000;
  v71 = (v68 - ((2 * v68) & 0xA0619156) - 802109269) ^ 0xD030C8AB | (v70 - ((2 * v70) & 0xEC000000) + 1981010410) ^ 0x7613D1EA;
  v72 = byte_10027DCC0[(LOBYTE(STACK[0xBB2]) - ((2 * LOBYTE(STACK[0xBB2]) + 6) & 6) + 26) ^ 0x79];
  v73 = v72 ^ 0xB3 ^ (((16 * v72) ^ 0xFFFFFFA0) - ((2 * ((16 * v72) ^ 0xFFFFFFA0)) & 0xC0) + 109);
  v74 = (((v73 + 13243025 - ((2 * v73) & 0x190)) << 8) + 407296) ^ 0xCA18C800;
  v75 = (v74 - ((2 * v74) & 0x6A1A5800) + 1963797554) ^ 0x750D2C32 | (v59 - ((2 * v59) & 0x64000000) - 1295638857) ^ 0xB2C61EB7;
  v76 = byte_1002663C0[(LOBYTE(STACK[0xBB3]) - ((2 * LOBYTE(STACK[0xBB3]) + 48) & 0x2A) - 19) ^ 0x4BLL] ^ 0x3D;
  v77 = (v75 - ((2 * v75) & 0xD33E370C) - 375448698) ^ 0xE99F1B86 | (v76 - ((2 * v76) & 0x55555555) + 695041194) ^ 0x296D7CAA;
  v78 = (v56 + 109570760) ^ 0x687EAC8 | (v77 - ((2 * v77) & 0x9C5CBF34) + 1311661978) ^ 0x4E2E5F9A;
  v79 = v38 ^ LODWORD(STACK[0x550]) ^ v33 ^ v29 ^ (v71 - ((2 * v71) & 0xE628DAE) + 120669911);
  v80 = v38 ^ LODWORD(STACK[0x480]) ^ v33 ^ v29 ^ (v78 - ((2 * v78) & 0x9B1ABEEC) - 846373002);
  v81 = v33 ^ v38 ^ v29 & 0xFFFBFFFF ^ ((v13 ^ 0x2486C8C6)
                                      - 1965392887
                                      + v31
                                      - ((2 * ((v13 ^ 0x2486C8C6) - 1965392887 + v31)) & 0xB436E6DE)
                                      - 635735185);
  v82 = (v40 ^ 0x93) + 109 + ((2 * v40) & 0x26);
  if (((2 * v40) & 0x7A7FFB7A) + (v40 ^ 0xFD3FFDBD) != -46137923)
    v82 = 0;
  v83 = STACK[0xB18];
  v84 = STACK[0xB10];
  v85 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v39) ^ 0x75u)) ^ 0xD89FD9A6 ^ *(_DWORD *)(STACK[0xB10]
                                                                                        + 4 * (HIBYTE(v80) ^ 0xD7));
  v86 = STACK[0xB00];
  v87 = *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v79) ^ 0xDu)) ^ 0xEFD5817D;
  v88 = (v87 & v85) - ((2 * (v87 & v85)) & 0x3B817694);
  v89 = ((v87 + v85) ^ 0x7DDD9DEF)
      + ((2 * (v87 + v85)) & 0xFBBB3BDE)
      + ((2 * v88 - 1149143404) ^ 0x71C6A585)
      + ((2 * (2 * v88 - 1149143404)) & 0x6B7059DC ^ 0x9CFFB6F7);
  v90 = (BYTE2(v80) ^ 0x11) - ((2 * (BYTE2(v80) ^ 0x11)) & 0x1F4) + 1943770874;
  v91 = BYTE1(v80) ^ 0xFA;
  v92 = STACK[0xB08];
  v93 = *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v81) ^ 0x52u)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v79) ^ 0x39u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v39) ^ 0xD8)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v80 ^ 0x55u));
  v94 = (v89 + 1 - 2 * ((v89 + 937070337) & 0x2DD1D71F ^ (v89 + 1) & 8) - 441686505) ^ *(_DWORD *)(STACK[0xB08]
                                                                                                 + 4
                                                                                                 * (v81 ^ 0x74u));
  v95 = HIBYTE(v81) ^ 0x51;
  v96 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v79) ^ 0x37)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v81) ^ 0xCBu)) ^ *(_DWORD *)(STACK[0xB00] + 4 * v91) ^ *(_DWORD *)(STACK[0xB08] + 4 * ((((v39 ^ 0xA3) - v82) ^ 0xEF) + ((2 * ((v39 ^ 0xA3) - v82)) & 0xDF) + 17));
  v97 = *(_DWORD *)(STACK[0xB18]
                  + 4
                  * (((v90 & 0x509B862A) + (v90 ^ 0x70DB876A) - ((v90 ^ 0x70DB876A) & 0x100122A) + 134498304) ^ 0x5A9FCF79u)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v39) ^ 0x28u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * v95) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v79 ^ 0x9Au));
  v98 = ((BYTE1(v97) ^ 0xB3) - ((2 * (BYTE1(v97) ^ 0xB3)) & 0x46) - 1384337629) ^ 0x6C74BF2B;
  v99 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v93) ^ 0xC6u)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v96) ^ 0x42u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v97 ^ 0xBFu)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v94) ^ 0x68));
  v100 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v96) ^ 0x7Bu)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v93) ^ 0xC)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v94 ^ 0x84u)) ^ *(_DWORD *)(STACK[0xB00] + 4 * ((((2 * v98) & 0x8210476E) - v98 + 149986376) ^ 0xC9F88C57));
  v101 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v97) ^ 0x24u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v96) ^ 0x94)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v93 ^ 0xEAu)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v94) ^ 0xCBu));
  v102 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v94) ^ 0x12u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v97) ^ 0xB5)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v93) ^ 0x2Cu)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v96 ^ 0xA4u));
  v103 = v101 ^ 0x39;
  v104 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v100) ^ 9)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v101) ^ 0x2Cu)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v102) ^ 0x99u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v99 ^ 0x77u));
  v105 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v99) ^ 0xAA)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v101) ^ 0x97u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v102 ^ 0x6Cu)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v100) ^ 0x48u));
  v106 = (v105 ^ 0xC838AACB) + 61136;
  v107 = v106 ^ 0x3FDBAF75;
  v108 = (2 * v106) & 0x7FB75EEA;
  v109 = ((2 * v105) ^ 0x5E3F55D4) - ((2 * ((2 * v105) ^ 0x5E3F55D4)) & 0x1D598) + 256716;
  v110 = HIBYTE(v101) ^ 0x32;
  v111 = HIBYTE(v102) ^ 0x28;
  v112 = *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v99) ^ 0xF9u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * v110) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v102) ^ 0x17u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v100 ^ 0x77u));
  v113 = v107 + v108 + (v109 & 0x1DDA0 ^ 0xC10089C1) + ((2 * v109) & 0x13940 ^ 0xFFFEEEFF) - 14479541;
  v114 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v99) ^ 0x91u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * v103) ^ *(_DWORD *)(STACK[0xB10] + 4 * v111) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v100) ^ 0x7Fu));
  v115 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v112) ^ 0x5Cu)) ^ *(_DWORD *)(STACK[0xB00] + 4
                                                                                            * (BYTE1(v114) ^ 0x71u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v104) ^ 0x6E)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v105 ^ 0xCBu));
  v116 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v104) ^ 0x6Fu)) ^ *(_DWORD *)(STACK[0xB08]
                                                                             + 4 * (v114 ^ 3u)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v112) ^ 0x42u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v105) ^ 0xC8));
  v117 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v114) ^ 0x54u)) ^ *(_DWORD *)(STACK[0xB10] + 4
                                                                                            * (HIBYTE(v112) ^ 0xF3)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v105) ^ 0xAAu)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v104 ^ 0x56u));
  v118 = *(_DWORD *)(STACK[0xB18] + 4 * ((BYTE2(v113) - ((v113 >> 15) & 0x88) - 60) ^ 0xC4u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v114) ^ 0x74)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v104) ^ 0x7Fu)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v112 ^ 0x85u));
  v119 = STACK[0xB10];
  v120 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v115) ^ 0x7Fu)) ^ *(_DWORD *)(STACK[0xB10] + 4
                                                                                            * (HIBYTE(v116) ^ 0x85)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v117) ^ 9u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v118 ^ 0x3Au));
  v121 = ((2 * v120) & 0xFDBFFBBE ^ 0x24199B34) + (v120 ^ 0x6DD33265);
  v122 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v117) ^ 0x3Cu)) ^ *(_DWORD *)(STACK[0xB10] + 4
                                                                                            * (HIBYTE(v115) ^ 0x44)) ^ *(_DWORD *)(STACK[0xB08] + 4 * v116) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v118) ^ 0xD2u));
  v123 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v117) ^ 0x18)) ^ *(_DWORD *)(STACK[0xB00] + 4
                                                                                            * (BYTE1(v116) ^ 0x34u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v115 ^ 0xBCu)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v118) ^ 0x77u));
  v124 = v121 - 2128608735;
  if (v121 - 511484153 >= 0x9F9CA31A)
    v125 = 70;
  else
    v125 = 96;
  v126 = *(_DWORD *)(v92 + 4 * (v117 ^ 0xD3u)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v116) ^ 0xFu)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v115) ^ 0xE1u)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v118) ^ 0xC3));
  v127 = ((v123 ^ 0x4F4F27D5) >> (BYTE2(v118) & 0x10 ^ 0x10))
       - ((2 * ((v123 ^ 0x4F4F27D5) >> (BYTE2(v118) & 0x10 ^ 0x10))) & 0x8DB71696);
  v128 = ((((v127 - 958690485) ^ 0xC6DB8B4B) >> (BYTE2(v118) & 0x10))
                         - ((2 * (((v127 - 958690485) ^ 0xC6DB8B4B) >> (BYTE2(v118) & 0x10))) & 0xD6)
                         - 21) ^ 0xEB;
  if (v124 >= 0x9F9CA31A)
    v129 = 36;
  else
    v129 = 10;
  v130 = v121 + v129;
  if (v124 < 0x9F9CA31A)
    v125 = 122;
  v131 = *(_DWORD *)(v86 + 4 * (BYTE1(v126) ^ 0x5Fu)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v122) ^ 0xF8)) ^ *(_DWORD *)(v92 + 4 * (v130 + v125 - 99)) ^ *(_DWORD *)(v83 + 4 * v128);
  v132 = *(_DWORD *)(v83 + 4 * (BYTE2(v122) ^ 0x6Cu)) ^ *(_DWORD *)(v92 + 4 * (v126 ^ 5u)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v123) ^ 0x27u)) ^ *(_DWORD *)(v84 + 4 * HIBYTE(v124));
  v133 = v123 ^ 0xD5;
  v134 = *(_DWORD *)(v83 + 4 * (BYTE2(v126) ^ 0x27u)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v123) ^ 0x4F)) ^ *(_DWORD *)(v92 + 4 * (v122 ^ 0xECu)) ^ *(_DWORD *)(v86 + 4 * ((BYTE1(v124) - ((v124 >> 7) & 0x5A) + 45) ^ 0x2Du));
  v135 = (v131 & 0x20 ^ 0xDE46A3B4) - 1144360908;
  v136 = ((v131 & 0xFFFFFFDF ^ 0x5746C18B) - ((2 * (v131 & 0xFFFFFFDF ^ 0x5746C18B)) & 0x345DC61A) + 439280397) ^ 0xDA7F834D;
  v137 = (((2 * v136) & 0x83B2C9B6) - v136 + 1042717476) ^ v135;
  v138 = *(_DWORD *)(v83 + 4 * ((BYTE2(v124) - ((v124 >> 15) & 0x24) - 110) ^ 0x92u)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v126) ^ 0x23)) ^ *(_DWORD *)(v92 + 4 * v133) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v122) ^ 0x84u));
  LOBYTE(v136) = ((v57 & 8 | 0x52) - (v57 & 0x10 | 0x2D) + 45) & 0x78;
  v139 = ((((v134 ^ 0x91098441) >> (v136 ^ 0x50))
         - ((2 * ((v134 ^ 0x91098441) >> (v136 ^ 0x50))) & 0x3D519150)
         - 1633105752) ^ 0x9EA8C8A8) >> (v136 ^ 0x48);
  v140 = *(_DWORD *)(v86 + 4 * (BYTE1(v134) ^ 0x84u)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v132) ^ 0x26)) ^ *(_DWORD *)(v92 + 4 * ((*(_BYTE *)(v83 + 4 * ((BYTE2(v124) - ((v124 >> 15) & 0x24) - 110) ^ 0x92u)) ^ *(_BYTE *)(v119 + 4 * (HIBYTE(v126) ^ 0x23)) ^ *(_BYTE *)(v92 + 4 * v133) ^ *(_BYTE *)(v86 + 4 * (BYTE1(v122) ^ 0x84u))) ^ 0xAEu)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v137) ^ 0x79u));
  v141 = STACK[0xB10];
  v142 = *(_DWORD *)(v83 + 4 * (BYTE2(v134) ^ 9u)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v138) ^ 0x71u)) ^ *(_DWORD *)(v92 + 4 * (v132 ^ 0x78u)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v137) ^ 0x42));
  v143 = *(_DWORD *)(v92 + 4 * (v137 ^ 0x79u)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v138) ^ 0x31u)) ^ *(_DWORD *)(v119 + 4 * ((v139 - ((2 * v139) & 0xB4) + 90) ^ 0x5Au)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v132) ^ 0x27u));
  v144 = *(_DWORD *)(v119 + 4 * (HIBYTE(v138) ^ 0x1D)) ^ *(_DWORD *)(v92 + 4 * (v134 ^ 0x41u)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v132) ^ 0x2Au)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v137) ^ 0x20u));
  v145 = (v142 ^ 0xAF1FAAEA)
       + 67072
       + (((v142 ^ 0x33A42FD9) + 1) ^ 0xFFFEF6BF)
       + ((2 * ((v142 ^ 0x33A42FD9) + 1)) & 0xFFFDED7E)
       + 833;
  v146 = ((v145 - ((2 * v145) & 0xBFDC5FCA) + 1609445349) ^ 0xA011D01D) + (v142 ^ 0xAF1FAAEA);
  v147 = v146 - ((2 * v146) & 0xCDB0678E) + 1725445063;
  v148 = *(_DWORD *)(v86 + 4 * (BYTE1(v140) ^ 0x73u));
  v149 = *(_DWORD *)(v83 + 4 * (BYTE2(v144) ^ 0x63u));
  v150 = *(_DWORD *)(v119 + 4 * (HIBYTE(v143) ^ 0xF2)) ^ v149 ^ v148 ^ *(_DWORD *)(v92
                                                                                   + 4
                                                                                   * ((v146 - ((2 * v146) & 0x8E) - 57) ^ 0xC7u));
  v16 = ((2 * (v150 & 0x40000 ^ 0x8004428C)) & 0xFFFFFC0F) - (v150 & 0x40000 ^ 0x8004428C) == -2147466884;
  v151 = (((2 * (v143 & 0x9A958C13 ^ 0x18858C10)) & 0x352A1820) - (v143 & 0x9A958C13 ^ 0x18858C10) - 1056382077) ^ 0xA300F382;
  v152 = ((2 * v143) & 0x152A1806 ^ 0x4CDEFCD2)
       + (v143 & 0x9A958C13 ^ 0xD9908186)
       + (((v143 ^ 0x68D8729E) + 1) ^ 0x17EF4F38)
       + ((2 * ((v143 ^ 0x68D8729E) + 1)) & 0x2FDE9E70);
  v153 = (v152 - ((2 * v152 + 1914856634) & 0x66185C30) + 1813864565) ^ (((2 * v151) & 0x6BC57184) - v151 - 904051651);
  v154 = BYTE1(v142) ^ 0xD0;
  v155 = *(_DWORD *)(v119 + 4 * (HIBYTE(v140) ^ 0x12));
  v156 = *(_DWORD *)(v119 + 4 * (HIBYTE(v142) ^ 0xCC));
  v157 = *(_DWORD *)(v92 + 4 * (v144 ^ 0xC9u));
  v158 = *(_DWORD *)(v86 + 4 * (BYTE1(v144) ^ 0x25u));
  v159 = *(_DWORD *)(v83 + 4 * (BYTE2(v142) ^ 0x5Bu)) ^ v155 ^ v157 ^ *(_DWORD *)(v86
                                                                                  + 4
                                                                                  * (((unsigned __int16)((v152 - ((2 * v152 + 25786) & 0x5C30) + 24693) ^ (((2 * v151) & 0x7184) - v151 + 17469)) >> 8) ^ 0x7Au));
  v160 = *(_DWORD *)(v92 + 4 * (v140 ^ 0xB2u));
  v161 = v156 ^ v158 ^ v160 ^ *(_DWORD *)(v83 + 4 * (BYTE2(v153) ^ 0x99u));
  v162 = v148 ^ *(_DWORD *)(v92 + 4 * (v142 ^ 0x26u)) ^ v149 ^ *(_DWORD *)(STACK[0xB10]
                                                                                            + 4
                                                                                            * (HIBYTE(v153) ^ 0x91));
  v163 = ((v162 & 0x91B46B49 ^ 0x11A40149)
        + (v162 & 0x90304B00 ^ 0xE851CE22)
        - ((v162 & 0x91B46B49 ^ 0x11A40149) & 0x90304B00)) ^ 0x7071F7B7;
  v164 = (v163 - ((2 * v163) & 0xF8301C30) - 65532358) ^ 0xE4A81DAE | ((v162 & 0x484A94B0 ^ 0x49F841C1)
                                                                     + (v162 & 0x26010006 ^ 0x26010003)
                                                                     + 2147483646) & 0x6E4B95F6 ^ 0x40428160;
  v165 = v164 - ((2 * v164) & 0x62D04D1E) + 828909199;
  v166 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v144) ^ 0x40)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v140) ^ 0x1Du));
  v167 = v166 ^ *(_DWORD *)(v86 + 4 * v154) ^ *(_DWORD *)(v92 + 4 * (v153 ^ 0x35u));
  v168 = v155 ^ v157 ^ *(_DWORD *)(v86 + 4 * (BYTE1(v143) ^ 0xFEu)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v147) ^ 0xD8u));
  v169 = v143 ^ 0x8D;
  v170 = *(_DWORD *)(v83 + 4 * (BYTE2(v143) ^ 0x4Du)) ^ v158 ^ v160 ^ *(_DWORD *)(STACK[0xB10]
                                                                                  + 4 * (HIBYTE(v147) ^ 0x66));
  v171 = v166 ^ *(_DWORD *)(v92 + 4 * v169) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v147) ^ 0x33u));
  v172 = v150 ^ 0xAF1FAAEA;
  if (v16)
    v173 = 0x40000;
  else
    v173 = -262144;
  v174 = v173 + v172 - 1811180413 - 2 * ((v173 + v172) & 0x140B88FE ^ v172 & 0xC) - 2961;
  v175 = *(_DWORD *)(v83 + 4 * (BYTE2(v161) ^ 0x31u));
  LODWORD(STACK[0x670]) = *(_DWORD *)(v83 + 4 * (BYTE2(v165) ^ 0x14u));
  LODWORD(STACK[0x680]) = *(_DWORD *)(v83 + 4 * (BYTE2(v167) ^ 0x1Fu));
  LODWORD(STACK[0x678]) = *(_DWORD *)(v83 + 4 * (BYTE2(v159) ^ 0x75u));
  v176 = *(_DWORD *)(v83 + 4 * (BYTE2(v168) ^ 0x75u));
  v177 = *(_DWORD *)(v92 + 4 * (v171 ^ 0xF4u)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v170) ^ 0x31u)) ^ *(_DWORD *)(v141 + 4 * (HIBYTE(v168) ^ 8)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v174) ^ 0xB5u));
  v178 = *(_DWORD *)(v86 + 4 * (BYTE1(v167) ^ 0x18u));
  v179 = v165;
  v180 = *(_DWORD *)(v86 + 4 * (BYTE1(v165) ^ 0x1Bu));
  v181 = *(_DWORD *)(v86 + 4 * (BYTE1(v159) ^ 0xB9u));
  v182 = *(_DWORD *)(v86 + 4 * (BYTE1(v161) ^ 0xC3u));
  v183 = *(_DWORD *)(v86 + 4 * (BYTE1(v171) ^ 0x18u));
  v184 = *(_DWORD *)(v86 + 4 * (BYTE1(v168) ^ 0xB9u));
  v185 = *(_DWORD *)(v86 + 4 * (BYTE1(v170) ^ 0xC3u));
  v186 = *(_DWORD *)(v141 + 4 * (HIBYTE(v170) ^ 0x6B)) ^ v183;
  v187 = *(_DWORD *)(v141 + 4 * (HIBYTE(v159) ^ 8)) ^ v175 ^ *(_DWORD *)(v92 + 4 * (v167 ^ 0xF4u));
  v188 = ((2 * ((v187 ^ 0x3B05010C ^ v180) - 1202274211)) & 0x46F9F6FE)
       + (((v187 ^ 0x3B05010C ^ v180) - 1202274211) ^ 0x237CFB7F);
  v189 = v184 ^ *(_DWORD *)(v83 + 4 * (BYTE2(v171) ^ 0x1Fu)) ^ *(_DWORD *)(v92 + 4 * (v170 ^ 0xB0u)) ^ *(_DWORD *)(v141 + 4 * (HIBYTE(v174) ^ 0xD));
  v190 = v186 ^ *(_DWORD *)(v92 + 4 * (v168 ^ 0x7Cu)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v174) ^ 0x73u));
  v191 = v179;
  v192 = *(_DWORD *)(v92 + 4 * (v174 ^ 0xCFu));
  v193 = v177;
  v194 = v188 + (v177 ^ 0xC4FAFEF3) - ((2 * (v188 + (v177 ^ 0xC4FAFEF3)) + 956696836) & 0x7EE3CC62) - 1678447949;
  v195 = (*(_DWORD *)(v141 + 4 * (HIBYTE(v161) ^ 0x6B)) ^ v178 ^ *(_DWORD *)(v92
                                                                             + 4 * (v159 ^ 0x7Cu)) ^ 0xFF2B6856 ^ LODWORD(STACK[0x670]))
       + 758658806;
  v196 = ((2 * v195) & 0xFEFADE36) + (v195 ^ 0xFF7D6F1B);
  v197 = v185 ^ v176 ^ *(_DWORD *)(v141 + 4 * (HIBYTE(v171) ^ 0xD9)) ^ v192;
  v198 = (*(_DWORD *)(v141 + 4 * (HIBYTE(v167) ^ 0xD9)) ^ LODWORD(STACK[0x678]) ^ v182 ^ 0x1057E775 ^ *(_DWORD *)(v92 + 4 * (v179 ^ 0xB2u)))
       - 907041214;
  v199 = ((2 * v198) & 0xBDFE77A6) + (v198 ^ 0xDEFF3BD3) + (v197 ^ 0xEFA8188A);
  v200 = (*(_DWORD *)(v92 + 4 * (v161 ^ 0xB0u)) ^ LODWORD(STACK[0x680]) ^ v181 ^ 0x6657556B ^ *(_DWORD *)(v141 + 4 * (HIBYTE(v179) ^ 0xA8)))
       + 1794750297;
  v201 = ((2 * v200) & 0xBFFA3EBE) + (v200 ^ 0xDFFD1F5F) + (v189 ^ 0x99A8AA94);
  v202 = (v201 - 2 * ((v201 + 188578) & 0xDD3C6DF ^ v201 & 1) - 1378441344) ^ 0x3AAA8A55;
  v203 = ((-1397497827 * v202) ^ 0x674FDE53) + ((1499971642 * v202) & 0xCE9FBCA6);
  v204 = (v196 + (v190 ^ 0xD497A9) - ((2 * (v196 + (v190 ^ 0xD497A9)) + 17113548) & 0x61E14172) - 1317850721) ^ 0x8C0180E8;
  v205 = ((1339632071 * v204) ^ 0x49CDCFBD) + ((-1615703154 * v204) & 0x939B9F7A);
  v206 = (v199 - ((2 * v199 + 33654876) & 0x16B34960) + 744122590) ^ 0x9D085E27;
  v207 = ((-193647233 * v206) ^ 0xEA799EAF) + ((-387294466 * v206) & 0xD4F33D5E);
  v208 = ((-619630751 * (v194 ^ 0x799E9A03)) ^ 0x7FD27693) + ((-1239261502 * (v194 ^ 0x799E9A03)) & 0xFFA4ED26) + v205;
  v209 = v207 - v208 - ((2 * (v207 - v208) - 1102229694) & 0xB0D91196) - 1215090580;
  v210 = v205
       + ((v203 - 1733287507 + (v209 ^ 0xD86C88CB)) ^ 0x84506902)
       - ((2 * (v203 - 1733287507 + (v209 ^ 0xD86C88CB))) & 0xF75F2DFA);
  v211 = v207 + v203 + 554822865 + (~(2 * (v207 + v203) + 1550648828) | 0x1A492C5B);
  v212 = (v211 ^ 0x8D24962D) + v208 - ((2 * ((v211 ^ 0x8D24962D) + v208) + 213873506) & 0x1BC15FB2) + 1145072010;
  v213 = (v210 + 1 - 2 * ((v210 + 836880193) & 0x31EFA4DB ^ (v210 + 1) & 2) + 1674669081) ^ v209;
  v214 = (v193 ^ 0x3B05010C) + (v212 ^ 0x1B9C7C34 ^ v213) + 1;
  v215 = (v212 ^ v209 ^ 0xD58C2712) + (v211 ^ 0x7F3BC60B ^ v212);
  v216 = ((2 * v214) & 0xF6FFFB9E)
       + (v214 ^ 0x7B7FFDCF)
       - ((2 * (((2 * v214) & 0xF6FFFB9E) + (v214 ^ 0x7B7FFDCF)) + 411399066) & 0x364C45B2)
       - 412558170;
  v217 = (v190 ^ 0xFF2B6856) + (v212 ^ v209 ^ 0x2A73D8ED) + 1;
  v218 = ((2 * v217) & 0xFF6FE0CA)
       + (v217 ^ 0xFFB7F065)
       - ((2 * (((2 * v217) & 0xFF6FE0CA) + (v217 ^ 0xFFB7F065)) + 1072832630) & 0x5782433E)
       + 196751834;
  v219 = v215 - ((2 * v215) & 0xE32FA072) - 241708999;
  v220 = ((2 * ((v189 ^ 0x6657556B) + (v219 ^ 0xE682FC6) + 1)) & 0xFCBA5F6A)
       + (((v189 ^ 0x6657556B) + (v219 ^ 0xE682FC6) + 1) ^ 0x7E5D2FB5);
  v221 = v213 ^ 0xE9832C12;
  v222 = ((v213 ^ 0xE9832C12) & (v219 ^ 0xF197D039)) - ((2 * ((v213 ^ 0xE9832C12) & (v219 ^ 0xF197D039))) & 0x4D84B03A);
  v223 = (v213 ^ 0xE9832C12) + (v219 ^ v213 ^ 0xE7EB03D4) + 1;
  v224 = v220 - ((2 * v220 + 1826018322) & 0x656BA3BA) + 1763785702;
  v225 = (v219 ^ ((v219 ^ 0xE682FC6) - ((2 * (v219 ^ 0xE682FC6) + 2) & 0x55BC4B38) + 719201693) ^ (v223
                                                                                                 - ((2 * v223) & 0xADC3C9F0)
                                                                                                 - 689838856) ^ 0xDA8115D)
       + v221;
  v226 = (v197 ^ 0x1057E775)
       + ((2 * v222 - 846942150) ^ 0x8DA27093)
       + ((2 * (2 * v222 - 846942150)) & 0x7FB27EAC ^ 0xE4FF9FDB)
       + (v225 ^ 0x820115A1)
       - ((2 * v225) & 0xFBFDD4BC)
       + 1037576631;
  v227 = ((2 * v226) & 0xD7C9BDDE)
       + (v226 ^ 0xEBE4DEEF)
       - ((2 * (((2 * v226) & 0xD7C9BDDE) + (v226 ^ 0xEBE4DEEF)) - 1171567220) & 0xF28B2130)
       + 1448818526;
  v228 = (((2 * v226) & 0xDE)
                         + (v226 ^ 0xEF)
                         - ((2 * (((2 * v226) & 0xDE) + (v226 ^ 0xEF)) - 116) & 0x30)
                         + 94) ^ 0x98;
  v229 = *(_DWORD *)(STACK[0xAE0] + 4 * (HIBYTE(v224) ^ 0xB2));
  v230 = *(_DWORD *)(STACK[0xAD8] + 4 * (BYTE2(v227) ^ 0x45u));
  v231 = (v230 ^ ((v230 ^ 0xF8D7059D) - ((2 * (v230 ^ 0xF8D7059D) + 2) & 0x86F727B6) + 1132172252) ^ ((v229 ^ 0x7D93C5C3) + (v229 ^ 0x8544C05E ^ v230) + 1 - ((2 * ((v229 ^ 0x7D93C5C3) + (v229 ^ 0x8544C05E ^ v230) + 1)) & 0xDF425312) + 1872832905) ^ 0x2BF24030)
       + (v229 ^ 0x7D93C5C3);
  v232 = *(_DWORD *)(STACK[0xAD8] + 4 * (BYTE2(v216) ^ 0x26u));
  v233 = *(_DWORD *)(STACK[0xAF0] + 4 * (v216 ^ 0xD9u));
  v234 = *(_DWORD *)(STACK[0xB20] + 4 * (BYTE1(v216) ^ 0x22u));
  v235 = LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x4D0]);
  v236 = v235 ^ LODWORD(STACK[0x4E0]) ^ *(_DWORD *)(STACK[0xAD8] + 4 * (BYTE2(v218) ^ 0xC1u)) ^ *(_DWORD *)(STACK[0xAE0] + 4 * (HIBYTE(v216) ^ 0x1B)) ^ *(_DWORD *)(STACK[0xB20] + 4 * (BYTE1(v224) ^ 0xD1u)) ^ *(_DWORD *)(STACK[0xAF0] + 4 * v228);
  v237 = v235 ^ *(_DWORD *)(STACK[0xAD8] + 4 * (BYTE2(v224) ^ 0xB5u)) ^ v233 ^ *(_DWORD *)(STACK[0xAE0]
                                                                                           + 4 * (HIBYTE(v218) ^ 0x2B)) ^ *(_DWORD *)(STACK[0xB20] + 4 * (BYTE1(v227) ^ 0x90u));
  v238 = v235 ^ LODWORD(STACK[0x4E0]) ^ *(_DWORD *)(STACK[0xAF0] + 4 * (v218 ^ 0x9Fu)) ^ v234 ^ (v231 - ((2 * v231) & 0x69324F5C) + 882452398);
  v239 = v235 ^ LODWORD(STACK[0x4E0]) ^ *(_DWORD *)(STACK[0xAF0] + 4 * (v224 ^ 0xDDu)) ^ v232 ^ *(_DWORD *)(STACK[0xB20] + 4 * (BYTE1(v218) ^ 0x21u)) ^ *(_DWORD *)(STACK[0xAE0] + 4 * (HIBYTE(v227) ^ 0x79));
  HIDWORD(v240) = LODWORD(STACK[0x4E0]) ^ 0xD4E5BB;
  LODWORD(v240) = LODWORD(STACK[0x4E0]) ^ 0x62000000;
  v241 = (v240 >> 24) - ((2 * (v240 >> 24)) & 0x8553A4F0) + 1118425720;
  HIDWORD(v240) = v237 ^ 0xB3CFD8;
  LODWORD(v240) = v237 ^ 0xE3FFFFFF;
  v242 = ((v240 >> 24) - ((2 * (v240 >> 24)) & 0xB4F35100) + 1517922432) ^ v241;
  HIDWORD(v240) = v242 ^ 7;
  LODWORD(v240) = v242 ^ 0x486D1E00;
  v243 = (v240 >> 8) - ((2 * (v240 >> 8)) & 0xF0712146) + 2016972963;
  if (LODWORD(STACK[0x688]) == 156)
    v244 = -1388463546;
  else
    v244 = -1385353630;
  v245 = v243 ^ v244;
  v246 = (((2 * ((v243 ^ v244) & 0xFF0E6B48 ^ 0x310C1509)) | 0xEE418740)
        - ((v243 ^ v244) & 0xFF0E6B48 ^ 0x310C1509)
        + 148847712) ^ 0xEC28D5A9 | ((v243 & 0xF194B7 ^ 0xC0648503 | 0xD79029F8)
                                   - (v243 & 0xF194B7 ^ 0xC0648503 | 0x286FD607)
                                   + 678417927) ^ 0x1794A87C;
  v247 = v246 - ((2 * v246) & 0x889F516) - 2075854197;
  v248 = ((2 * (BYTE1(v239) ^ 0x27)) | 0xF965F344) - (BYTE1(v239) ^ 0x27) - 2092104098;
  v249 = byte_10027B680[((v248 & 0x482259B8 ^ 0x1000011) + (v248 & 0x3490A247) - 1) ^ 0x7DB2F9C4];
  v250 = v249 - ((2 * v249 + 46) & 0x6E) + 14;
  LOBYTE(STACK[0xBBE]) = ((v250 & 0x41 ^ 0xBF) + ((2 * (v250 & 0x41)) ^ 0x9D) + 114) ^ (((2 * (v250 & 0xBE ^ 0xF6)) & 0x24)
                                                                                      - (v250 & 0xBE ^ 0xF6)
                                                                                      + 109) ^ 0x93 ^ (((((v250 >> 2) & 0x1D ^ 0xE7) + ((2 * ((v250 >> 2) & 0x1D)) | 0xB0) + 1) ^ 2) + 40);
  v251 = (((2 * (v239 ^ 0xF55B2CDE)) & 0x28B6415E) - (v239 ^ 0xF55B2CDE) + 1636044624) ^ 0xCD7F43E7;
  LOBYTE(STACK[0xBBF]) = byte_100255B40[(((2 * v251) | 0x75A2904C) - v251 + 1160689626) ^ 0xE3712832] ^ 0xB0;
  v252 = HIBYTE(v238);
  v253 = ((((v252 ^ 0x32) - ((2 * (v252 ^ 0x32)) & 0x96)) << 24) + 1258291200) ^ 0x4B000000;
  v254 = byte_100256A60[HIBYTE(v239) ^ 0x3ALL];
  LOBYTE(STACK[0xBBC]) = (v254 - ((2 * v254 - 38) & 0xD2) + 86) ^ 0x58;
  v255 = (((v252 ^ 0x32) - ((v238 >> 23) & 2)) << 24) + 0x1000000;
  v256 = ((v255 ^ 0x1000000) - ((2 * v255) & 0xAC000000) + 1444541527) ^ 0x6A833C8E;
  v257 = (v253 - ((2 * v253) & 0x46000000) - 1548354262) ^ 0x423A36EB;
  v258 = (v257 & v256) - ((2 * (v257 & v256)) & 0x5854502E);
  v259 = ((v257 + v256) ^ 0x7E9F766E)
       + ((2 * (v257 + v256)) & 0xFD3EECDC)
       + ((2 * v258 - 665563090) ^ 0x9C54712F)
       + 1029728402
       + ((2 * (2 * v258 - 665563090)) & 0x77FFBDFC ^ 0xCF575FA3);
  v260 = ((v259 >> 22) - ((v259 >> 21) & 0x4CE) - 149024153) ^ 0xF71E1294;
  v261 = (((v260 >> 2) - ((v260 >> 1) & 0xDC) - 18) ^ 0xB) + 1;
  LOBYTE(v252) = (v261 ^ 0xBB) + byte_100256A60[v252 ^ 0x17] + ((2 * v261) & 0x76);
  v262 = (HIWORD(v238) ^ 0xEF63) + (HIWORD(v238) ^ 0xEF7C);
  LOBYTE(STACK[0xBB8]) = (v252 + (~(2 * v252 + 90) | 0x35) + 19) ^ 0xA8;
  v263 = (BYTE2(v238) ^ 0xB6) - ((2 * (BYTE2(v238) ^ 0xB6)) & 0x146) + 137027235;
  v264 = ((v263 & 0x2A96EE ^ 0x6285002E) + (v263 ^ 0x102AFED0) - ((v263 ^ 0x102AFED0) & 0x100022EEu)) ^ 0x6AAF96E3;
  LOBYTE(v263) = ((2 * v262) & 0xEC) + (v262 ^ 0xF6) + 10;
  LOBYTE(STACK[0xBB9]) = ((v263 ^ 0xE7)
                        + ((2 * v263) & 0xCF)
                        + byte_100278F40[v264]
                        - ((2 * ((v263 ^ 0xE7) + ((2 * v263) & 0xCF) + byte_100278F40[v264]) + 30) & 0x87)
                        + 82) ^ 0xF2;
  LOBYTE(v245) = byte_100256A60[HIBYTE(v245) ^ 0xE3];
  LOBYTE(v264) = v245 - ((2 * v245 + 90) & 0x4A) - 110;
  LOBYTE(v245) = ((88 - v245 - ((38 - 2 * v245) & 0x8A)) ^ v264 ^ 0x69 ^ ((v264 ^ 0x38)
                                                                        - ((2 * (v264 ^ 0x38) + 6) & 0x12)
                                                                        - 20))
               + 98;
  LOBYTE(STACK[0xBB4]) = (v245 ^ 0x5F) + ((2 * v245) & 0xBF) - 95;
  v265 = (((2 * (BYTE2(v239) ^ 0xF1)) & 0xF0) - (BYTE2(v239) ^ 0xF1) - 1282317945) ^ 0x9026CEDF;
  v266 = (HIWORD(v239) ^ 0x8183) + (HIWORD(v239) ^ 0x819C);
  LOBYTE(v252) = ((2 * v266) & 0xF6) + (v266 ^ 0x7B) - 123;
  LOBYTE(v252) = byte_100278F40[(((2 * v265) & 0x422F01FA) - v265 - 895467774) ^ 0xE9179083]
               + (v252 ^ 0x1F)
               + 2 * (v252 & 0x1F);
  LOBYTE(STACK[0xBBD]) = (v252 - ((2 * v252 - 82) & 0xDA) - 60) ^ 0x40;
  LODWORD(v252) = ((v247 ^ 0xD8)
                 + (v247 & 0x55 ^ 0xAD969705)
                 - ((v247 ^ 0xD8) & 0x55555555)) ^ 0xBD560D05;
  LOBYTE(STACK[0xBB7]) = byte_100255B40[((v252 | 0x1FB616E3)
                                       - (v252 | 0xE049E91C)
                                       - 532027108) ^ 0xF768C21] ^ 0xE7;
  LODWORD(v252) = (v236 ^ 0xEC34D2BE)
                - ((2 * (v236 ^ 0xEC34D2BE)) & 0x186181E6)
                + 514966771;
  LOBYTE(STACK[0xBB3]) = byte_100255B40[((v252 & 0xB00003FE ^ 0x26588187) - (v252 | 0xB77ADBFE) - 2) ^ 0x9E58A3BELL] ^ 0xB8;
  LOBYTE(v252) = byte_10027B680[((BYTE1(v238) ^ 0xBD | 0xFE265739) - (BYTE1(v238) ^ 0xBD | 0x1D9A8C6) + 31041734) ^ 0xFE265721];
  v267 = v252 - ((2 * v252 + 46) & 0x76) - 110;
  v268 = v267 ^ 0xB3;
  if (!((v191 ^ 0xA8000000) >> 24))
    v268 = 116;
  LOBYTE(STACK[0xBBA]) = v267 ^ ((((v268 & (v267 ^ 0x3B)) - ((2 * (v268 & (v267 ^ 0x3B))) & 0xC3) + 97) & 0xFC) >> 2) ^ 0xF2;
  LOBYTE(STACK[0xBBB]) = byte_100255B40[v238 ^ 0x80] ^ 0x16;
  v269 = (HIWORD(v236) ^ 0xE8C4) + (HIWORD(v236) ^ 0xE8DB);
  v270 = (HIWORD(v236) & 0x95) - 2070797313 + (HIWORD(v236) & 0x6A ^ 0x30051103);
  v271 = ((2 * v269) & 0xF2) + (v269 ^ 0x79) - 121;
  v272 = (v271 ^ 0xFFFFFFEF)
       + ((2 * v271) & 0xFFFFFFDF)
       + byte_100278F40[((v270 & 0x2080071A ^ 0x4248081A) + (v270 ^ 0xB9B43700) - ((v270 ^ 0xB9B43700) & 0xD02071A)) ^ 0x62E90D68];
  HIDWORD(v274) = v272 - 1;
  LODWORD(v274) = (v272 << 24) + 117440512;
  v273 = v274 >> 27;
  v275 = (2 * v273) & 0x60;
  v273 += 48;
  HIDWORD(v274) = v273 ^ 0x1B;
  LODWORD(v274) = ((v273 - v275) ^ 0xFFFFFFBF) << 24;
  LOBYTE(STACK[0xBB1]) = ((v274 >> 29) - ((2 * (v274 >> 29)) & 0xA0) + 80) ^ 0x5A;
  v276 = (((2 * (BYTE1(v236) ^ 0xAF)) & 0x2E) - (BYTE1(v236) ^ 0xAF) - 854789144) ^ 0xC94DF969;
  v277 = byte_10027B680[(((2 * v276) & 0x8001F80) - v276 + 686133311) ^ 0x2CA49A64];
  v278 = v277 - ((2 * v277 - 82) & 0xFFFFFF8F) + 30;
  LOBYTE(STACK[0xBB2]) = v278 ^ (v278 >> 2) & 0x1D ^ 0x30;
  LOBYTE(v278) = byte_10027B680[((BYTE1(v247) ^ 0x44014B8) - ((2 * (BYTE1(v247) ^ 0x44014B8)) & 0x80021E8u) + 2089021940) ^ 0x78C3E543];
  LOBYTE(v278) = v278 - ((2 * v278 - 82) & 0xDA) - 60;
  v279 = ((2 * ~((v278 & 0xFC) >> 2)) & 0x20) - (~((v278 & 0xFC) >> 2) & 0x1D) + 109;
  v280 = (HIWORD(v247) ^ 0x8497) + (HIWORD(v247) ^ 0x8488);
  LOBYTE(STACK[0xBB6]) = v278 ^ 0xA4 ^ ((v279 & 0x64 ^ 0x45) + (v279 & 0x99) - 1);
  LOWORD(v278) = (BYTE2(v247) ^ 0x9A) - ((2 * (BYTE2(v247) ^ 0x9A)) & 0xB2) + 25433;
  v281 = 2 * (v280 & 0x3F) + (v280 ^ 0xBF) + 65;
  LOBYTE(v278) = ((2 * v281) & 0x7A)
               + (v281 ^ 0xBD)
               + byte_100278F40[((v278 & 0x8AE ^ 0x7086882B) + (v278 & 0x3751) - 1) ^ 0x7086ABCALL];
  LOBYTE(STACK[0xBB5]) = (v278 - ((2 * v278 + 50) & 0x34) + 83) ^ 0x45;
  v282 = byte_100256A60[HIBYTE(v236) ^ 0xABLL];
  LOBYTE(STACK[0xBB0]) = (v282 - ((2 * v282 + 90) & 0x77) + 40) ^ 0x38;
  v283 = LODWORD(STACK[0x690]) ^ 0x93;
  LODWORD(STACK[0xAFC]) = 0;
  free((void *)STACK[0xAE0]);
  free((void *)STACK[0xB08]);
  free((void *)STACK[0xAD8]);
  free((void *)STACK[0xB20]);
  free((void *)STACK[0xAF0]);
  free((void *)STACK[0xB00]);
  free((void *)STACK[0xB10]);
  free((void *)STACK[0xB18]);
  if (LODWORD(STACK[0xAFC]) == v283 - 555)
    v284 = 0;
  else
    v284 = -42885;
  v285 = STACK[0xA58];
  STACK[0xAD0] -= 32;
  return ((uint64_t (*)(unint64_t))((char *)*(&off_1002C8B50
                                                             + ((2046 * (v284 == ((v283 + 25) | 0x489) - 1741)) ^ (v283 - 210)))
                                                   - 13 * ((v283 - 210) ^ 0x142u)
                                                   + 343))(v285);
}

uint64_t sub_10010D5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, __int16 a8)
{
  int v8;
  unsigned int v9;
  int v10;
  __int16 v11;
  int v12;
  __int16 v13;
  unsigned __int8 *v14;
  __int16 v15;
  unsigned int v16;
  _BOOL4 v17;
  _BOOL4 v18;

  v14 = (unsigned __int8 *)(((v8 + 1414261415) | ((unint64_t)((v8 + 1414261415) < 0x73591987) << 32))
                          + a4);
  v15 = (a6 + ((*v14 - (((unsigned __int16)v12 ^ 0xEB) & (unsigned __int16)(2 * *v14))) << 8)) ^ a6;
  LOWORD(v14) = (v15 - ((2 * v15) & 0xAC00) + a8) ^ a8 | (v14[1] - ((2 * v14[1]) & 0x42) + v11) ^ v11;
  LODWORD(v14) = (unsigned __int16)(((_WORD)v14 - ((2 * (_WORD)v14) & 0xA5AE) + v13) ^ v13);
  v16 = v8 + (v14 ^ 0x7D9FD2CA) + (v10 & (2 * (_DWORD)v14)) - 2041966662;
  v17 = v16 < 0x22F71162;
  v18 = v16 > v9;
  if (v9 < 0x22F71162 == v17)
    v17 = v18;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((25 * v17) ^ (v12 - 1510))) - 12))();
}

uint64_t sub_10010D6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v8 = v5 + a5 + a2 + 0x3749BB5A36714EC3;
  v9 = (((*(unsigned __int8 *)v8 - ((*(unsigned __int8 *)v8 << ((((v7 ^ 0xAC) - 86) ^ 0xA) & 0x4B)) & 0xFC)) << 8)
      + 32256) ^ 0x7E00;
  LODWORD(v8) = (v9 - (v9 >> 10 << 11) - 993) ^ 0xFFFFFC1F | (*(unsigned __int8 *)(v8 + 1)
                                                            - ((2 * *(unsigned __int8 *)(v8 + 1)) & 0xFFEF)
                                                            + v6) ^ v6;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((116
                                        * (((7 * ((((v7 ^ 0xAC) - 86) | 0xB4) ^ 0x9C)) ^ ((__int16)(v8 - ((2 * v8) & 0x3AAC) - 25242) < (__int16)((7 * ((((v7 ^ 0xAC) - 1110) | 0xB4) ^ 0x29C)) ^ 0x9D99))) & 1)) ^ (((v7 ^ 0xAC) - 1110) | 0xB4)))
                            - 8))();
}

uint64_t sub_10010D7D4()
{
  uint64_t v0;
  unsigned int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)(((((v1 - 187) | 0xC4) + 300) * (v2 == -25236)) ^ v1))
                            - (v1 ^ 0xF9)))();
}

uint64_t sub_10010D814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  __int16 v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a5 ^ (1166 * (v5 == 21206))))
                            - ((35 * ((a5 + 1111971329) & 0xBDB8AFCD ^ 0x6CA)) ^ 0xF9)))();
}

uint64_t sub_10010D86C@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  _BOOL4 v12;

  v5 = v1 + 44;
  v6 = *(unsigned __int8 *)(STACK[0x648] + (v2 - 520957662));
  v7 = v2 + 5;
  LODWORD(STACK[0x670]) = v6 + 1985812931 - ((v6 << (v5 ^ 0x20)) & 0x186);
  v8 = v3 < a1;
  v9 = v5 ^ 0x7ECu;
  v10 = v7 + 1174004454 + ((unint64_t)(v7 < (int)v9 + 520955925) << 32);
  v11 = v8 ^ (v10 < a1 + v9 - 1741);
  v12 = v10 <= v3;
  if (!v11)
    v8 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1570 * !v8) ^ v5)) - 12))();
}

uint64_t sub_10010DAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, __int16 a8)
{
  return sub_10010D5E0(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_10010DAB0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0x890]) = STACK[0x670];
  free((void *)(STACK[0x678] - 0x4E36C53A99817805));
  sub_1000EE8C4(v1, v2, v3, v4, v5, v6, v0);
}

uint64_t sub_10010DABC()
{
  int v0;
  void *v1;

  LODWORD(STACK[0x890]) = STACK[0x670];
  v1 = malloc_type_malloc(LODWORD(STACK[0x9E8]) ^ 0xB3B7B663, 0x8139508FuLL);
  STACK[0x8D0] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((v1 != 0) * (v0 - 798)) ^ (v0 - 439))) - 4))();
}

uint64_t sub_10010DACC()
{
  int v0;
  void *v1;
  unint64_t v2;

  v1 = malloc_type_malloc(STACK[0x850], 0xA6908726uLL);
  v2 = STACK[0x958];
  STACK[0x688] = STACK[0x958];
  *(_QWORD *)(v2 + 104) = v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((v1 == 0) * ((v0 - 429811226) & 0x199E647F ^ 0x471)) ^ v0))
                            - 4))();
}

void sub_10010DB2C()
{
  int v0;
  _DWORD *v1;
  int v2;
  void *v3;

  v1 = (_DWORD *)STACK[0x688];
  v2 = STACK[0x690];
  *v1 = v0;
  v1[1] = v2;
  v3 = (void *)STACK[0x8D0];
  STACK[0x678] = STACK[0xA80];
  free(v3);
  STACK[0x8D0] = 0;
  JUMPOUT(0x100144D58);
}

uint64_t sub_10010DB34()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((56 * (STACK[0x850] == 0)) ^ v0)) - v0 + 1027))();
}

void sub_10010DBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;

  v8 = (v6 - 1225398002) & 0xEDBBFBBF;
  *(_DWORD *)(STACK[0x688] + 112) = 1494274718;
  STACK[0x678] = STACK[0xA80];
  v9 = LOWORD(STACK[0x872]);
  v10 = STACK[0x8D0];
  LODWORD(STACK[0x670]) = STACK[0x9E8];
  LODWORD(STACK[0x680]) = 2 * (v9 ^ 0xF90A);
  v11 = STACK[0x688];
  *(_QWORD *)(v11 + 64) = STACK[0x678];
  *(_DWORD *)(v11 + 72) = (STACK[0x680] & 0x1B356) + (v8 ^ v9 ^ 0xD54CCB3A) - 1626425386;
  *(_QWORD *)(v11 + 48) = v10;
  *(_DWORD *)(v11 + 56) = STACK[0x670];
  v12 = STACK[0x690];
  *(_DWORD *)v11 = v7;
  *(_DWORD *)(v11 + 4) = v12;
  sub_1000EE8C4(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10010DCF8()
{
  int v0;
  char v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v0 = STACK[0x3F8];
  if (LODWORD(STACK[0x668]) != -961433487)
    v0 = STACK[0x3C4];
  LODWORD(STACK[0x28C]) = v0;
  LODWORD(STACK[0x4B0]) -= 1092274346;
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x670]) ^ 0x69C08E65;
  v1 = *(_BYTE *)(STACK[0x688]
                + (*(_BYTE *)(STACK[0x688]
                            + ((*(_BYTE *)(STACK[0x688] + ((*(_BYTE *)(STACK[0x688] + 5) + 12) & 0xF)) + 6) & 0xF)) & 0xF))
     + 14;
  v2 = ((v1 & 0xF) - 2 * (v1 & 3) + 19) ^ 0x13;
  v3 = ((2 * v2) & 0x1FC) + (v2 ^ 0x7DFDEBFE);
  v4 = v3 < 0x7DFDEBFE || v3 + 229082880 > 0x8BA572FF;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (int)((53 * !v4) ^ STACK[0x678])) - 12))();
}

uint64_t sub_10010EE18()
{
  int v0;
  int v1;

  LODWORD(STACK[0x284]) = LODWORD(STACK[0x3AC]) - LODWORD(STACK[0x3BC]);
  LODWORD(STACK[0x350]) = LODWORD(STACK[0x500]) ^ LODWORD(STACK[0x4F0]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((527 * ((v1 + 1) > 0xF)) ^ v0)) - 8))();
}

#error "100112088: call analysis failed (funcsize=2138)"

void sub_10011208C()
{
  JUMPOUT(0x1001116A8);
}

uint64_t sub_1001120A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a69;
  int a70;
  int a71;
  int v71;
  _BOOL4 v72;

  STACK[0x668] = LODWORD(STACK[0x25C]) ^ 0x34u;
  LODWORD(STACK[0x3A0]) = a71 - LODWORD(STACK[0x204]);
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x20C]);
  LODWORD(STACK[0x204]) = a69 - 2 * a70;
  LODWORD(STACK[0x530]) = LODWORD(STACK[0x660]) ^ LODWORD(STACK[0x4E0]) ^ a63 ^ LODWORD(STACK[0x4A0]) ^ (LODWORD(STACK[0x37C]) - 2 * LODWORD(STACK[0x3E8]));
  LODWORD(STACK[0x20C]) = LODWORD(STACK[0x470]) - LODWORD(STACK[0x340]);
  LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x3EC]) ^ 0x2764CD19;
  LODWORD(STACK[0x470]) = a62 - LODWORD(STACK[0x580]);
  LODWORD(STACK[0x580]) = a58 - a59;
  LODWORD(STACK[0x25C]) = a61 - a60;
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x480]) ^ 0x500D359B;
  LODWORD(STACK[0x678]) = a3 ^ 0x52C;
  v72 = STACK[0x680] <= v71 - 38938702;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((v72 | (8 * v72)) ^ a3)))();
}

void sub_100112BEC()
{
  JUMPOUT(0x1001121E8);
}

uint64_t sub_100112C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a68;
  int a71;
  int a72;
  int a73;
  int a74;
  int v74;
  uint64_t v75;
  int v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  int v83;
  int v84;
  unsigned int v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  int v98;
  unsigned int v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  uint64_t v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  uint64_t v130;
  _BOOL4 v131;

  LODWORD(STACK[0x340]) = LODWORD(STACK[0x4C0]) ^ LODWORD(STACK[0x4F0]);
  LODWORD(STACK[0x480]) = LODWORD(STACK[0x268]) - a64;
  LODWORD(STACK[0x39C]) = LODWORD(STACK[0x258]) - 2 * LODWORD(STACK[0x264]);
  LODWORD(STACK[0x264]) = a74 - LODWORD(STACK[0x214]);
  LODWORD(STACK[0x268]) = a71 - a72;
  LODWORD(STACK[0x4F0]) = a73 ^ LODWORD(STACK[0x394]) ^ a68;
  LODWORD(STACK[0x4C0]) = a61 - a62;
  v76 = STACK[0x250];
  LODWORD(STACK[0x258]) = a65 - a66;
  LODWORD(STACK[0x214]) = v76 ^ 0x9C59701F;
  v77 = v75
      + (((unint64_t)(v75 - 0x6975AE8E8E223E0BLL) >> 24) ^ 0x890003C414111880)
      - (((unint64_t)(v75 - 0x6975AE8E8E223E0BLL) >> 23) & 0x77D7DDCEFELL);
  v78 = v77
      + (((v77 + 0xD8A4DAD5DCCA975) >> 14) ^ 0x78FDC87AFBEFCEFALL)
      + (((v77 + 0xD8A4DAD5DCCA975) >> 13) & 0x390F5F7DF9DF4);
  v79 = v78
      + (((v78 - 0x6B737ACD9E232585) >> 7) ^ 0x12280402026CE000)
      - (((v78 - 0x6B737ACD9E232585) >> 6) & 0x3AFF7FBFB263FFELL);
  v80 = (((v79 - 0x5F393259E8BDB120) >> 28) ^ 0x4FFD6F1EB72EFFD5)
      + v79
      + 2
      + (((v79 - 0x5F393259E8BDB120) >> 27) & 0x1D6E5DFFAALL);
  v81 = (((v80 + 0x50C95E8760134F09) >> 8) ^ 0xAFFBDBFBD7B5FEBELL)
      + v80
      + (((v80 + 0x50C95E8760134F09) >> 7) & 0x1F7B7F7AF6BFD7CLL);
  v82 = v81
      + (((v81 - 0x5F327D7477A2AFB5) >> 2) ^ 0x2A860A4842304202)
      - (((v81 - 0x5F327D7477A2AFB5) >> 1) & 0x2AF3EB6F7B9F7BFALL);
  v83 = v82 + 1 - 2 * ((v82 + 103616073) & 0x1139C807 ^ (v82 + 1) & 4) + 1466357323;
  v84 = 2 * (v82 + 1 - ((2 * (v82 + 1) + 207232144) & 0x437C524A) + 669726598) - 50;
  v85 = ((v84 ^ 0xC37C524A) - 2 * ((v84 ^ 0xC37C524A) & 0x1A293022 ^ v84 & 0x20) + 1512648707) & 0x7F199778 ^ 0x24090218;
  v86 = (((v82 - 0x1032FAC88D643CEELL) >> 27) ^ 0x736DEB9FBDFFDE35)
      + v82
      + 1
      + (((v82 - 0x1032FAC88D643CEELL) >> 26) & 0x3F7BFFBC6ALL);
  v87 = v86
      + (((v86 + 0x7C5F1997B49BE4DCLL) >> 14) ^ 0x2C02230A1054400)
      - (((v86 + 0x7C5F1997B49BE4DCLL) >> 13) & 0x7BB9EBDF577FELL);
  v88 = v87
      + (((v87 + 0x799EF7671396A0DCLL) >> 6) ^ 0xB2020064C0380811)
      - (((v87 + 0x799EF7671396A0DCLL) >> 5) & 0x3FBFF367F8FEFDCLL);
  v89 = v88
      + 2
      + (((v88 - 0x1007A85D317E68C6) >> 27) ^ 0x8008054820185244)
      - (((v88 - 0x1007A85D317E68C6) >> 26) & 0x2FBFCF5B76);
  v90 = v89
      + (((v89 + 0x6FF0525AAE6944F4) >> 11) ^ 0x4089241091140003)
      - (((v89 + 0x6FF0525AAE6944F4) >> 10) & 0x2DB7DEDDD7FFF8);
  v91 = v90
      + (((v90 + 0x2F672E4A1D5544F1) >> 7) ^ 0x2BFDFBBBF66F75F6)
      + (((v90 + 0x2F672E4A1D5544F1) >> 6) & 0x3FBF777ECDEEBECLL)
      + 2;
  v92 = v91 - ((2 * v91 + 0x6D2651C4DCB9DF2) & 0xEF6B77B529BBB71CLL) - 0x4E11197443C5579;
  v93 = ((2 * ((v92 ^ 0xF7B5BBDA94DDDB8ELL) + 0x2CA9E7BAB642E976)) & 0xD53D8ACEEE635F7ELL)
      + (((v92 ^ 0xF7B5BBDA94DDDB8ELL) + 0x2CA9E7BAB642E976) ^ 0x6A9EC5677731AFBFLL);
  v94 = (((v93 - 0x6A9EC5677731AFBFLL) >> 27) ^ 0xBFFEDDDCFFE7F7FFLL)
      + v93
      + (((v93 - 0x6A9EC5677731AFBFLL) >> 26) & 0x39FFCFEFFELL);
  v95 = v94
      + (((v94 - 0x2A9DA3447719A7BELL) >> 8) ^ 0x10CA45002840A834)
      - (((v94 - 0x2A9DA3447719A7BELL) >> 7) & 0x6B75FFAF7EAF96);
  v96 = v95
      + (((v95 - 0x3B67E8449F5A4FF2) >> 6) ^ 0x7CFB759F7FBFFEFDLL)
      + (((v95 - 0x3B67E8449F5A4FF2) >> 5) & 0x1F6EB3EFF7FFDFALL)
      + 1;
  v97 = v96 - ((2 * v96 + 0xF394437C1CB6220) & 0x6F845E24F7F91852) - 0xA12ED1A31DC2C7;
  v98 = (((2 * v97) ^ 0xF7F91852) - ((2 * ((2 * v97) ^ 0xF7F91852)) & 0x3318845C) + 1502364207) & 0x7F199778 ^ 0x61081520;
  v99 = ((2 * v98) & 0xAC120410) - v98 + 688971255;
  v100 = (v97 ^ 0x8D37346EEB644AEDLL)
       + ((v97 >> 24) ^ 0x228928C353567CFLL)
       + ((v97 >> 23) & 0x1FDFBFDEDB6 ^ 0xFFFFFEE795973269)
       - 0x228920102010923;
  v101 = (((((2 * v100) & 0xFF6DFFEFF777DAFCLL) + (v100 ^ 0xFFB6FFF7FBBBED7ELL) + 0x49000804441282) >> 10) ^ 0x3F77CE7E7EFEB97FLL)
       + ((2 * v100) & 0xFF6DFFEFF777DAFCLL)
       + (v100 ^ 0xFFB6FFF7FBBBED7ELL)
       + (((((2 * v100) & 0xFF6DFFEFF777DAFCLL) + (v100 ^ 0xFFB6FFF7FBBBED7ELL) + 0x49000804441282) >> 9) & 0x6F9CFCFDFD72FELL);
  v102 = v101
       + (((v101 - 0x3F2ECE767ABAA6FDLL) >> 5) ^ 0x403A4A005058875)
       - (((v101 - 0x3F2ECE767ABAA6FDLL) >> 4) & 0x7F8B6BFF5F4EF14)
       + 1;
  v103 = v102 - ((2 * v102 + 0x799B19D3007FA11ALL) & 0x43E535205A3F0560) - 0x213FD88652A0ACC3;
  v104 = ((2 * ((v103 ^ 0x21F29A902D1F82B0) - 0x5F6C9CB288BB47ADLL)) & 0xED9FB7BBA7BF77F6)
       + (((v103 ^ 0x21F29A902D1F82B0) - 0x5F6C9CB288BB47ADLL) ^ 0xF6CFDBDDD3DFBBFBLL);
  v105 = v104
       + (((v104 + 0x93024222C204405) >> 29) ^ 0x96502CB202989062)
       - (((v104 + 0x93024222C204405) >> 28) & 0xBFACEDF3ALL);
  v106 = v105
       + (((v105 + 0x72DFF7702987B3A3) >> 11) ^ 0x4EF7EDDED7FDFFEFLL)
       + (((v105 + 0x72DFF7702987B3A3) >> 10) & 0x2FDBBDAFFBFFDELL);
  v107 = v106
       + (((v106 + 0x23E809915189B3B4) >> 8) ^ 0x20204000088C000ELL)
       - (((v106 + 0x23E809915189B3B4) >> 7) & 0x1BF7FFFEEE7FFE2)
       + 2;
  v108 = v107 - ((2 * v107 + 0x78F932291FB6748) & 0x73463CA994B0E14ALL) + 0x3D6AE7E613562449;
  v109 = (v108 ^ 0x8C8F525E37AEC3ACLL)
       + ((v108 >> 31) ^ 0x73FF5BEE7445BA43)
       + ((v108 >> 30) & 0x2DAB63DFELL ^ 0x212340978)
       - 0x73FF5BEF6D5B1EFFLL;
  v110 = ((2 * v109) & 0xFBA498C1FD2DEB1ELL)
       + (v109 ^ 0xFDD24C60FE96F58FLL)
       + (((((2 * v109) & 0xFBA498C1FD2DEB1ELL) + (v109 ^ 0xFDD24C60FE96F58FLL) + 0x22DB39F01690A71) >> 13) ^ 0x56980882112A060FLL)
       - (((((2 * v109) & 0xFBA498C1FD2DEB1ELL) + (v109 ^ 0xFDD24C60FE96F58FLL) + 0x22DB39F01690A71) >> 12) & 0xFEEFBDDABF3E0);
  v111 = v110 - 0x546A54E30FC0FB9ELL;
  v112 = v110 + (((v110 - 0x546A54E30FC0FB9ELL) >> 6) ^ 0x377BC9DB7FFF1FF9) + 1;
  v113 = v112
       + ((v111 >> 5) & 0x6F793B6FFFE3FF2)
       - 2 * ((v112 + ((v111 >> 5) & 0x6F793B6FFFE3FF2) + 0x1E141703FE468) & 0x4D29C22CE13CFLL ^ v112 & 1)
       + 0x741EB3DD930DF836;
  LODWORD(v111) = ((2 * v113) ^ 0x459C279C) - 2 * (((2 * v113) ^ 0x459C279C) & 0x26EA239E ^ (2 * v113) & 2) - 1494604900;
  LODWORD(v111) = ((v111 & 0x67198770 ^ 0xE72F6A27 | v111 & 0x18001008) - 1) ^ 0xCBAF637E;
  v114 = v74 ^ v83 ^ (((2 * v85) & 0x26010630) - v85 + 1822375013) ^ v97 ^ v99 & 0xFFFFFFF9 ^ 0x7C72955B ^ (((2 * v111) | 0x5A60A39A) - v111 + 1389342259) ^ v113;
  LODWORD(STACK[0x4E0]) = LODWORD(STACK[0x500]) ^ 0xF647B4EC;
  LOBYTE(v111) = *(_BYTE *)(STACK[0x688]
                          + ((*(_BYTE *)(STACK[0x688]
                                       + ((*(_BYTE *)(STACK[0x688] + ((*(_BYTE *)(STACK[0x688] + 13) + 10) & 0xF)) + 9) & 0xF))
                            + 3) & 0xF));
  v115 = ((((v111 + 11) & 0xF) - ((2 * (v111 + 11)) & 0x1A) - 3) ^ 0x79FEFD02)
       + 2 * ((((v111 + 11) & 0xF) - ((2 * (v111 + 11)) & 0x1A) - 3) ^ 0xFDu);
  v116 = (LODWORD(STACK[0x678]) + 33554136) | 0xE422A144;
  v117 = (v115 + 1261038279);
  LODWORD(STACK[0x394]) = LODWORD(STACK[0x640]) >> 3;
  LODWORD(v87) = ((*(unsigned __int8 *)STACK[0x688] << (v116 ^ 0xC4)) & 0xB2)
               + (*(unsigned __int8 *)STACK[0x688] ^ 0xFE6D7559);
  v118 = 1364176807 * v87 - ((-1566613682 * v87 - 1479329822) & 0xF97AAF72) + 1353118634;
  LODWORD(v87) = ((2 * (v118 ^ 0x94BDA38D)) & 0x3FFD7EFC) + (v118 ^ 0x8B431CF3);
  LODWORD(v87) = (((v87 - 536788862) >> 16) ^ 0x73EBEFD7)
               + v87
               + ((2 * ((v87 - 536788862) >> 16)) & 0x1DFAE);
  v119 = (v87 + 1813336235) >> 8;
  LODWORD(v87) = (v119 ^ 0xB9BBED73) + v87;
  v120 = v87 + ((2 * v119) & 0x177DAE6);
  v121 = v120 - ((2 * v120 + 1966408530) & 0xC938C8CA) - 1623792114;
  v122 = ((2 * v121) ^ 0xC938C8CA) - 2 * (((2 * v121) ^ 0xC938C8CA) & 0x1C4DFCB6 ^ (2 * v121) & 0x10) - 1672610650;
  v123 = (v122 & 0x7F199778 ^ 0x21119478)
       + (v122 & 0x7C098200 ^ 0x5C4E6285)
       - ((v122 & 0x7F199778 ^ 0x21119478) & 0x7C098200);
  LODWORD(v102) = v120 - 2 * ((v120 + 47947802) & 0x1B2AFE5D ^ v87 & 1) + 1577492086;
  LODWORD(v87) = (((2 * v102) ^ 0x3655FCB8) - ((2 * ((2 * v102) ^ 0x3655FCB8)) & 0x5AE91DDC) + 762613487) & 0x7F199778 ^ 0x59119300;
  LODWORD(v87) = (((2 * v87) | 0xE96FC3D0) - v87 + 189275672) ^ 0x90B7E400;
  v124 = ((2 * (_DWORD)v87) | 0x502A2E74) - v87;
  LODWORD(v87) = ((2 * (v118 ^ 0xE797A9E5 ^ v102)) & 0xFBB36F2E) + (v118 ^ 0xE797A9E5 ^ v102 ^ 0x7DD9B797);
  LODWORD(v87) = (((v87 - 2111420311) >> 16) ^ 0xEAFFFFB7)
               + v87
               + ((2 * ((v87 - 2111420311) >> 16)) & 0x1FF6E);
  LODWORD(v87) = (((v87 - 1759098702) >> 8) ^ 0x7FBCFE3E)
               + v87
               + (((v87 - 1759098702) >> 7) & 0x179FC7C);
  v125 = v87 - ((2 * v87 + 1062523338) & 0x8EC5516C) + 1728909723;
  v126 = (((2 * v125) ^ 0x8EC5516C) - 2 * (((2 * v125) ^ 0x8EC5516C) & 0x32EF096E ^ (2 * v125) & 2) + 1928268140) & 0x7F199778 ^ 0x4F110028;
  v127 = (167560514 - v126 + ((2 * v126) | 0xEC06757C)) ^ 0x7F0332BE;
  v128 = v87 - ((2 * v87 + 265752236) & 0x2F2C1FE0) + 1065457478;
  LODWORD(v113) = ((2 * (v118 ^ 0x6B2B5849 ^ v128)) & 0xF7BBEFB6) + (v118 ^ 0x6B2B5849 ^ v128 ^ 0xFBDDF7DB);
  LODWORD(v113) = (((v113 + 69339173) >> 16) ^ 0xE7FD797B)
                + v113
                + (((v113 + 69339173) >> 15) & 0xF2F6);
  LODWORD(v113) = (((v113 + 472157866) >> 8) ^ 0xE9EF77DF)
                + v113
                + (((v113 + 472157866) >> 7) & 0x1DEEFBE);
  LODWORD(v113) = v113 - ((2 * v113 + 74067350) & 0x12366FBA) + 995118760;
  v129 = (v113 ^ 0x91B37DD) - ((2 * (v113 ^ 0x91B37DD) + 276970722) & 0x84D15C7E) + 1252641968;
  LODWORD(v113) = (((2 * v129) ^ 0x84D15C7E) - ((2 * ((2 * v129) ^ 0x84D15C7E)) & 0x7839DA7C) + 2082270527) & 0x7F199778 ^ 0x3080428;
  v130 = v114 ^ v121 ^ v123 & 0xFF7FFF78 ^ v125 ^ (-1325927548 - (v127 | 0xB0F7F384) + (v127 | 0x4F080C7B)) ^ v129 ^ 0xA366C157 ^ (-128439306 - (_DWORD)v113 + ((2 * (_DWORD)v113) | 0xF4F8B90) + 3650);
  v131 = v117 > 0xC528E8C7;
  if (v115 < 0x79FEFDFF)
    v131 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((1491 * !v131) ^ LODWORD(STACK[0x678]))) - 12))(v116, v115, v117, 815300168, 1024203611, v130, 791420896, v124, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_100114594(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a71;
  int a72;
  int a73;
  int v73;

  LODWORD(STACK[0x3DC]) ^= LODWORD(STACK[0x3AC]);
  LODWORD(STACK[0x254]) -= LODWORD(STACK[0x26C]);
  LODWORD(STACK[0x210]) = LODWORD(STACK[0x208]) - LODWORD(STACK[0x210]);
  LODWORD(STACK[0x26C]) = a71 - a72;
  LODWORD(STACK[0x3AC]) = a73 - LODWORD(STACK[0x200]);
  LODWORD(STACK[0x678]) = 23 * (a1 ^ 0xE622A1EE);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50
                                                    + (int)((4 * ((v73 + 1) > 0xF)) | (8 * ((v73 + 1) > 0xF)) | a1 ^ 0xE622A556))
                                          - 8))(235930672);
}

uint64_t sub_100114DF4()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  _BOOL4 v71;

  LODWORD(STACK[0x3A8]) ^= LODWORD(STACK[0x660]) ^ LODWORD(STACK[0x4A0]) ^ LODWORD(STACK[0x204]);
  LODWORD(STACK[0x4B0]) = LODWORD(STACK[0x24C]) - LODWORD(STACK[0x388]);
  v2 = (((v0 + 936178000) >> 8) ^ 0x256E77C7) + v0 + (((v0 + 936178000) >> 7) & 0xDCEF8E);
  v3 = v2 + (((v2 + 308181385) >> 5) ^ 0xA00054B2) - (((v2 + 308181385) >> 4) & 0xFFF569A) + 1;
  v4 = v3 - ((2 * v3 + 79448492) & 0x726705E) + 1978752261;
  v5 = ((2 * ((v4 ^ 0x393382F) - 1879573490)) & 0xDCFAFFF6) + (((v4 ^ 0x393382F) - 1879573490) ^ 0xEE7D7FFB);
  v6 = (((v5 + 293765125) >> 10) ^ 0xFFAEE3FB) + v5 + (((v5 + 293765125) >> 9) & 0x5DC7F6);
  v7 = ((v6 + 299080714) & 0xF3DD9BE6) + v6 + (((v6 + 299080714) >> 1) ^ 0xF9EECDF3);
  v8 = v7 - ((2 * v7 + 801741870) & 0x4D186A3A) + 1047593780;
  v9 = ((2 * ((v8 ^ 0x268C351D) + 1287124013)) & 0xD5CAFDBE) + (((v8 ^ 0x268C351D) + 1287124013) ^ 0x6AE57EDF);
  v10 = v9 + (((v9 - 1793425119) >> 13) ^ 0x18043448) - (((v9 - 1793425119) >> 12) & 0x7976E);
  v11 = (((v10 + 2098613465) >> 5) & 0x4DE9994) + (((v10 + 2098613465) >> 6) ^ 0xFE6F4CCA);
  v12 = v10 + v11 + 1;
  v13 = v12 + ((2 * v11 + 52520556) ^ 0x14019405) - ((2 * (2 * v11 + 52520556)) & 0xD7FCD7F4);
  v14 = v13 - 2 * ((v13 + 178613257) & 0x1194A65F ^ v12 & 1) + 2084180583;
  v15 = ((2 * ((v14 ^ 0x1194A65E) - 1282870125)) & 0xCDFDDDFA) + (((v14 ^ 0x1194A65E) - 1282870125) ^ 0xE6FEEEFD);
  v16 = (((v15 + 419500291) >> 8) ^ 0xFB7D7EF1) + v15 + (((v15 + 419500291) >> 7) & 0xFAFDE2);
  v17 = (((v16 + 495161874) >> 2) ^ 0x77F9FDDE) + v16 + (((v16 + 495161874) >> 1) & 0x6FF3FBBC);
  v18 = v17 - ((2 * v17 + 1259546728) & 0xB3EE8AE8) + 2139150760;
  v19 = ((2 * ((v18 ^ 0xD9F74574) + 707258702)) & 0xCFB2FFF0) + (((v18 ^ 0xD9F74574) + 707258702) ^ 0xE7D97FF8);
  v20 = (((v19 + 405176328) >> 13) ^ 0x3657BF0E) + v19 + (((v19 + 405176328) >> 12) & 0xF7E1C);
  v21 = (((v20 - 506543878) >> 3) ^ 0xDDCFCFBF) + v20 + (((v20 - 506543878) >> 2) & 0x3B9F9F7E);
  v22 = v21 - ((2 * v21 + 134079094) & 0x459882D4) + 650850981;
  LODWORD(STACK[0x208]) = v8;
  v23 = v22 ^ v8;
  LODWORD(STACK[0x200]) = v22;
  v24 = (v22 ^ 0xA94317E0) + ((v22 >> 11) ^ 0x9095016A) + ((v22 >> 10) & 0x3FADEE ^ 0xFFD5FF3B) + 1870649081;
  v25 = (((((2 * v24) & 0xBFFFDFCC) + (v24 ^ 0x5FFFEFE6) - 1610608614) >> 5) ^ 0x6DFCDF5F)
      + ((2 * v24) & 0xBFFFDFCC)
      + (v24 ^ 0x5FFFEFE6)
      + (((((2 * v24) & 0xBFFFDFCC) + (v24 ^ 0x5FFFEFE6) - 1610608614) >> 4) & 0xBF9BEBE);
  v26 = v25 - ((2 * v25 + 1678139766) & 0xC1D0B2CE) + 317426210;
  v27 = (v26 ^ 0xD4B48D9F) + ((v26 >> 12) ^ 0xCA5DCA0C) + 900693693 + ((2 * (v26 >> 12)) & 0x1EFD76 ^ 0xFFE56BEF);
  v28 = (((((2 * v27) & 0xFEF8FFEE) + (v27 ^ 0x7F7C7FF7) - 2138865655) >> 7) ^ 0xF06BFBFD)
      + ((2 * v27) & 0xFEF8FFEE)
      + (v27 ^ 0x7F7C7FF7)
      + (((((2 * v27) & 0xFEF8FFEE) + (v27 ^ 0x7F7C7FF7) - 2138865655) >> 6) & 0xD7F7FA);
  v29 = v28 - ((2 * v28 + 539953176) & 0x9A3F8426) + 1563903519;
  v30 = ((2 * ((v29 ^ 0xCD1FC213) - 2045107421)) & 0x378D6C96) + (((v29 ^ 0xCD1FC213) - 2045107421) ^ 0x9BC6B64B);
  v31 = (((v30 + 1681476021) >> 11) ^ 0x6BFFD7FF) + v30 + (((v30 + 1681476021) >> 10) & 0x3FAFFE);
  v32 = v31 + (((v31 - 130453066) >> 8) ^ 0x5004DCC0) - (((v31 - 130453066) >> 7) & 0x1F6467E) + 1;
  v33 = v32 + 2033713749 + (~(2 * v32 + 1349069290) | 0x5DF92541);
  v34 = ((2 * (v23 ^ v33)) ^ 0xAA863250) - ((2 * ((2 * (v23 ^ v33)) ^ 0xAA863250)) & 0x49C55DC) - 2108806417;
  v35 = ((v34 & 0x80450 ^ 0x2648C7) + (v34 & 0x7F119328) - 1) ^ 0x9B0F9886;
  v36 = STACK[0x608];
  v37 = LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x608]);
  v38 = STACK[0x480];
  LODWORD(STACK[0x4A0]) = v37;
  v39 = ((((2 * (v38 ^ v37)) ^ 0xD1338870)
        - 2 * (((2 * (v38 ^ v37)) ^ 0xD1338870) & 0xD7580BE ^ (2 * (v38 ^ v37)) & 2)
        + 225804477) & v1 ^ 0xA69BA67B)
      - 1;
  v40 = STACK[0x430];
  v41 = STACK[0xB70];
  v42 = *(_QWORD *)(STACK[0xB70] + 8 * (0x8EA31169 % STACK[0x680]));
  v43 = (2 * v38) ^ 0x3462D6D6;
  v44 = STACK[0x5A0];
  v45 = (*(_QWORD *)(STACK[0xB70]
                   + 8
                   * (((((v42 ^ 0xC9C9C9C9C9C9C9C9) + 1547586649) ^ 0xFDB157BC8FFFDD3BLL)
                     + 0x24EA843700022C5
                     + ((2 * ((v42 ^ 0xC9C9C9C9C9C9C9C9) + 1547586649)) & 0xFB62AF791FFFBA76))
                    % STACK[0x5A0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 2207661067u;
  v46 = (*(_QWORD *)(STACK[0xB70]
                   + 8
                   * (((v45 ^ 0xCFFFBF67EB671B32) + 0x300040981498E4CELL + ((2 * v45) & 0x9FFF7ECFD6CE3664))
                    % STACK[0x5A0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 1300402492;
  v47 = ((v46 ^ 0x7EF7A94FFFFEFDDFLL) - 0x7EF7A94FFFFEFDDFLL + ((2 * v46) & 0xFDEF529FFFFDFBBELL)) % STACK[0x5A0];
  STACK[0x660] = STACK[0xB70];
  v48 = (*(_QWORD *)(v41 + 8 * v47) ^ 0xC9C9C9C9C9C9C9C9) + 214590498;
  LODWORD(STACK[0x5A0]) = (((v43 - ((2 * v43) & 0x362A8980) - 1693104960) & 0xD111538 ^ 0xD4771AB)
                         + ((v43 - ((2 * v43) & 0x362A8980) - 1693104960) & 0x72088240 ^ 0x20000201)
                         + 2147483646) & 0x7F1B9778;
  LODWORD(STACK[0x24C]) = v40 ^ 0x1C30839F;
  LODWORD(STACK[0x204]) = v14;
  LODWORD(v48) = ((v48 ^ 0xE79DD77BFDEFFF5FLL) + 0x18622884021000A1 + ((2 * v48) & 0xCF3BAEF7FBDFFEBELL)) % v44;
  v49 = ((v48 - ((2 * v48) & 0x131C4CA2) - 1987172783) ^ 0x6871FDE9)
      + 1604957643
      + ((2 * (v48 - ((2 * v48) & 0x131C4CA2) - 1987172783)) & 0xC3FFB770 ^ 0x31C0420);
  LODWORD(STACK[0x5E0]) = LODWORD(STACK[0x510]) ^ 0xF044B00B;
  LODWORD(STACK[0x3B8]) = v35;
  LODWORD(STACK[0x5D0]) = (v39 & 0x7081778 ^ 0x56C145B | v39 & 0x78118000) - 1;
  v50 = (LODWORD(STACK[0x678]) - 6459973) - 4288508312;
  v51 = *(_QWORD *)(STACK[0x660] + 8 * v50) ^ 0xC9C9C9C9C9C9C9C9;
  v52 = 0xC76BB339E9ED63B1 * v51 - ((0xED76673D3DAC762 * v51) & 0x2B2B6343A0A2CD30) + 0x1595B1A1D0516698;
  v53 = ((2 * ((v52 ^ 0xD0E8AC51DC95D622) + v50)) & 0xF6BFCE795BFF6FFELL)
      + (((v52 ^ 0xD0E8AC51DC95D622) + v50) ^ 0x7B5FE73CADFFB7FFLL);
  v54 = v53
      + (((v53 - 0x7B5FE73CADFFB7FFLL) >> 32) ^ 0x1582248065440A08)
      - (((v53 - 0x7B5FE73CADFFB7FFLL) >> 31) & 0x13577EBEELL);
  v55 = v54
      + (((v54 + 0x6F1DF442ECBC3DF9) >> 16) ^ 0xD6B7EFFBFFFEEE7ELL)
      + (((v54 + 0x6F1DF442ECBC3DF9) >> 15) & 0x1DFF7FFFDDCFCLL);
  v56 = v55
      + (((v55 - 0x6799FBB91342B085) >> 8) ^ 0xE3DF7AFF9BE92FE7)
      + (((v55 - 0x6799FBB91342B085) >> 7) & 0x1BEF5FF37D25FCELL)
      + 1;
  v57 = v56 - ((2 * v56 + 0x690D128EA1A83F26) & 0xDF87C0151023E418) - 0x5BB596AE2719EE61;
  LODWORD(v56) = ((v56 - ((2 * (_DWORD)v56 - 1582809306) & 0x1023E418) - 656010849) >> 1) & 0x7FFBE43E ^ 0x4C63D106;
  v58 = (v57 ^ 0xEFC3E00A8811F20CLL)
      - ((2 * (v57 ^ 0xEFC3E00A8811F20CLL) + 0x45D043FB4117B934) & 0x7FFF4E1498E50982)
      - 0x1D1836F813019EA5;
  v59 = ((2 * ((v52 ^ 0x2A6A16AB9C23E259 ^ v58) + v50)) & 0xBAF7F6BECB6CA98CLL)
      + (((v52 ^ 0x2A6A16AB9C23E259 ^ v58) + v50) ^ 0xDD7BFB5F65B654C6);
  v60 = v59
      + (((v59 + 0x228404A09A49AB3ALL) >> 32) ^ 0xC90820221148430)
      - (((v59 + 0x228404A09A49AB3ALL) >> 31) & 0x1BDD6F79ELL);
  v61 = v60
      + (((v60 + 0x15F3829E7935270ALL) >> 16) ^ 0xF3F07DFB7EEE6F7BLL)
      + (((v60 + 0x15F3829E7935270ALL) >> 15) & 0xFBF6FDDCDEF6);
  v62 = v61
      + (((v61 + 0x220304A2FA46B78FLL) >> 8) ^ 0xAAFF7BA7BFFBF77ELL)
      + (((v61 + 0x220304A2FA46B78FLL) >> 7) & 0x1FEF74F7FF7EEFCLL);
  v63 = v62 + 1 - 2 * ((v62 + 0x170388FB3A4AC011) & 0x11582A01D61061A5 ^ (v62 + 1) & 4) + 0x85BB2FD105B21B1;
  LODWORD(v59) = ((v63 >> 1) & 0x7FFBE43E ^ 0x2CCB2420)
               - ((2 * ((v63 >> 1) & 0x7FFBE43E ^ 0x2CCB2420)) & 0xEB724034)
               - 172414182;
  LODWORD(v59) = ((v59 & 0xD8008080 ^ 0xC8009081 | v59 & 0x27FF657E) - 1) ^ v63;
  v64 = (v63 ^ 0x91582A01D61061A1)
      - ((2 * (v63 ^ 0x91582A01D61061A1) + 0x5D043FB4117B934) & 0x2454B4C2D55DDC82)
      + 0x35127C5F0B3ACADBLL;
  v65 = ((2 * ((v52 ^ 0x87BFEBC0BAFF88D9 ^ v64) + v50)) & 0x57F6DDCEDB53FDD8)
      + (((v52 ^ 0x87BFEBC0BAFF88D9 ^ v64) + v50) ^ 0x2BFB6EE76DA9FEECLL);
  v66 = v65
      + (((v65 - 0x2BFB6EE76DA9FEECLL) >> 32) ^ 0x8430520420102094)
      - (((v65 - 0x2BFB6EE76DA9FEECLL) >> 31) & 0x1BFDFBED6);
  v67 = v66
      + (((v66 + 0x4FD43F147245E080) >> 16) ^ 0xFAEFFD69CFF3623DLL)
      + (((v66 + 0x4FD43F147245E080) >> 15) & 0x1FAD39FE6C47ALL);
  v68 = v67
      + (((v67 + 0x54E441AAA2527E43) >> 8) ^ 0xFFFD7EBBDF6F7434)
      + (((v67 + 0x54E441AAA2527E43) >> 7) & 0x1FAFD77BEDEE868)
      + 1;
  LODWORD(v52) = (((v68 - 1025308146) >> 1) - ((v68 - 1025308146) & 0x73711906) + 968395907) & 0x7FFBE43E ^ 0x31FBC414;
  v69 = (v68 - 1025308146) ^ 0x7EF8C7DA ^ (v52 - ((2 * v52) & 0xED770818) + 1992001484);
  v70 = v36 ^ 0x27DDD98B ^ v57 ^ (((2 * (_DWORD)v56) & 0x47A2AA5C) - (_DWORD)v56 - 600921519) ^ v59 ^ 0x62269185 ^ (v69 - ((2 * v69) & 0x243059A6) - 1843909421);
  v71 = v49 > 0x41A99184;
  if (v49 < 0x41A99183)
    v71 = 1;
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)*(&off_1002C8B50
                                                                      + ((1294 * !v71) ^ LODWORD(STACK[0x678])))
                                                            - 12))(v70, 0xA2E821FDA08BDC9ALL);
}

uint64_t sub_100116504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a64;
  int a66;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int v77;
  int v78;
  int v79;
  int v80;

  LODWORD(STACK[0x250]) = LODWORD(STACK[0x410]) ^ 0x9BE2957A;
  LODWORD(STACK[0x388]) = LODWORD(STACK[0x218]) - LODWORD(STACK[0x220]);
  v79 = LODWORD(STACK[0x3B8]) - a64 + 1209439824;
  LODWORD(STACK[0x3B8]) = a72 - a74;
  v80 = a68 ^ LODWORD(STACK[0x5B0]) ^ a69 ^ a71 ^ a70 ^ LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x394]) ^ a73 ^ LODWORD(STACK[0x20C]) ^ a6 ^ LODWORD(STACK[0x208]) ^ LODWORD(STACK[0x200]) ^ a76 ^ v79;
  LODWORD(STACK[0x398]) ^= LODWORD(STACK[0x640]) ^ v77 ^ LODWORD(STACK[0x204]) ^ a77 ^ a75 ^ (a66 - 1);
  LODWORD(STACK[0x660]) = v80;
  LODWORD(STACK[0x678]) = v80 ^ 0xACFEF0BC;
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + ((44 * (STACK[0x680] <= v78 - 1089807004)) ^ ((a8 + 6458996) | 0x483))))();
}

void sub_100116E84()
{
  JUMPOUT(0x10011663CLL);
}

uint64_t sub_100116EB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  _BOOL4 v9;

  LODWORD(STACK[0x394]) = LODWORD(STACK[0x228]) - LODWORD(STACK[0x384]);
  v4 = LODWORD(STACK[0x5A0]) ^ LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x5D0]) ^ LODWORD(STACK[0x3B8]);
  LODWORD(STACK[0x218]) = v4;
  LODWORD(STACK[0x384]) = v4 ^ 0x420E6C66;
  v5 = *(unsigned __int8 *)(STACK[0x688]
                          + ((*(_BYTE *)(STACK[0x688]
                                       + ((*(_BYTE *)(STACK[0x688] + ((*(_BYTE *)(STACK[0x688] + 8) + 9) & 0xF)) + 9) & 0xF))
                            + 5) & 0xF)) ^ 0xFFFFFFBF;
  v6 = v5 & 0xFFFFFF97 ^ 0x7B ^ ((v5 & 0x18 | 0xFFFFFFE3) - (v5 & 0xFFFFFF80 | 0x1C) + 28);
  v7 = ((v6 | 0x4B) - (v6 | 0xB4) - 76) ^ 0xDC;
  v8 = (v7 ^ 0xF7B7FCC5) + ((2 * v7) & 0x18A) + 1425125060;
  v9 = v8 > 0x4CA9AB8A;
  if (v8 < 0x4CA9AB89)
    v9 = 1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1043 * !v9) ^ a4)) - 12))();
}

uint64_t sub_1001184A4()
{
  int v0;
  int v1;

  LODWORD(STACK[0x220]) = LODWORD(STACK[0x3F0]) ^ 0x84102664;
  LODWORD(STACK[0x680]) = v0 ^ 0x46E;
  return ((uint64_t (*)(uint64_t))*(&off_1002C8B50 + ((733 * ((v1 + 1) > 0xF)) ^ (v0 - 487))))(1536300254);
}

void sub_100118DA8()
{
  JUMPOUT(0x100118DC8);
}

uint64_t sub_100118E14(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(void);

  v7 = (v3 - 429);
  v8 = ((unint64_t)&STACK[0x728] ^ 0x6DFFFDBBEB56AFDELL)
     - 0x6DFFFDBBEB56AFDELL
     + ((2 * (_QWORD)&STACK[0x728]) & 0xDBFFFB77D6AD5FB8);
  STACK[0x5E0] = ((2 * (v8 % 0x25)) & 0x36)
               + ((v8 % 0x25) ^ v7 ^ 0xF9E8FFF6EFE7F1DCLL)
               + 0x617000910180A75;
  v9 = STACK[0x8A0];
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)v7) - (((((_DWORD)v7 - 707) | 0x470u) + 217) ^ 0x6C5));
  STACK[0x5C0] = STACK[0x8A0];
  STACK[0x678] = STACK[0xA48];
  STACK[0x688] = (unint64_t)&STACK[0xBB0] + v9;
  STACK[0x5D0] = (unint64_t)&STACK[0xBB0] + v9 + 16;
  LODWORD(STACK[0x660]) = v5;
  STACK[0x680] = v4;
  STACK[0x608] = a3;
  return v10();
}

uint64_t sub_100118F68()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  LODWORD(STACK[0x640]) = v1;
  STACK[0x15C8] = 0xC7C33B375ECB8BE8;
  LODWORD(STACK[0x728]) = dword_1003059C0 + v4;
  v6 = ((((v5 - 192) | 0x4E4EC8390FF411A2) - (v5 - 192) + ((v5 - 192) & 0xB1B137C6F00BEE58)) ^ 0xA35A5FA2419DC75CLL)
     * v2;
  v7 = *(unsigned int *)aHAwAwAwAwAwAwA;
  *(_DWORD *)(v5 - 188) = v6 ^ (v0 + 624098254) ^ 0x74;
  *(_DWORD *)(v5 - 184) = v6 ^ (v0 + 624098254) ^ 0x2B;
  *(_DWORD *)(v5 - 180) = v0 + 624098254 + v6;
  *(_QWORD *)(v5 - 176) = v3 - v6;
  *(_QWORD *)(v5 - 168) = v7 ^ v6;
  *(_DWORD *)(v5 - 160) = v6 + v0 + 1123495836;
  *(_DWORD *)(v5 - 156) = v6;
  v8 = sub_100218378(v5 - 192);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50 + *(int *)(v5 - 192)) - 8))(v8);
}

uint64_t sub_100119050()
{
  int v0;
  uint32_t v1;

  STACK[0x678] = (unint64_t)malloc_type_malloc(STACK[0x5E0], 0xC5732911uLL);
  v1 = arc4random();
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = v1 + 1465998909 - ((2 * v1) & 0xAEC2BC7A);
  *(_DWORD *)&aHAwAwAwAwAwAwA[8] = ((1812433253
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) ^ 0xBDFED639)
                                 + ((1477382858
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) & (v0 ^ 0x7BFDAABF))
                                 - 1721595899
                                 - ((2
                                   * (((1812433253
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) ^ 0xBDFED639)
                                    + ((1477382858
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) & (v0 ^ 0x7BFDAABF)))
                                   - 2080222320) & 0xAEC2BC7A);
  return ((uint64_t (*)(void))*(&off_1002C8B50 + (v0 ^ 0x4DE)))();
}

void sub_100119178()
{
  JUMPOUT(0x100119110);
}

void sub_100119198()
{
  JUMPOUT(0x1001191A4);
}

uint64_t sub_10011937C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;

  v9 = v6 & 0x80000000;
  v10 = *(_DWORD *)(a2 + 4 * (a3 + v5 + (a5 + 92)));
  v11 = (((v8 - (v10 & 0x7FFFFFFE ^ 0x592192A4 | v8) + (v10 & 0x7FFFFFFE ^ 0x592192A4 | 0x32CE4286)) ^ 0x548F2AF) - 1) ^ 0x39C67CB0;
  *(_DWORD *)(a2 + 4 * (a3 + v5) + 3456) = *(_DWORD *)(a2 + 4 * (a3 + v5) + 5044) ^ *((_DWORD *)&STACK[0x15C8]
                                                                                    + ((v10 & 1) == 0)) ^ (((v11 | (v7 + (v9 ^ 0xBFDDEF53) - 514) ^ 0xABDDED51) - ((2 * v11) & 0x4C305472) - 1508365767) >> 1) ^ 0xDC79EF4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((111 * (v5 + 1 != a4 + 3)) ^ a5)) - 12))();
}

uint64_t sub_100119470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  int8x16_t v7;
  const float *v8;
  int8x16_t v9;
  int8x16_t v10;
  int32x4_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int32x4_t v14;
  int8x16_t v15;

  v8 = (const float *)&aHAwAwAwAwAwAwA[912];
  v9 = (int8x16_t)vld1q_dup_f32(v8);
  v10.i64[0] = 0x8000000080000000;
  v10.i64[1] = 0x8000000080000000;
  v11.i64[0] = -1;
  v11.i64[1] = -1;
  v7.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[916];
  v7.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[924];
  v12 = vextq_s8(v9, v7, 0xCuLL);
  v13 = v7;
  v13.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[928];
  v14 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(vorrq_s8(veorq_s8(vandq_s8(v13, (int8x16_t)vdupq_n_s32(0x1BD31FACu)), (int8x16_t)vdupq_n_s32(0x9C20081u)), vandq_s8(v13, (int8x16_t)vdupq_n_s32(0x642CE052u))), vandq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vorrq_s8(vandq_s8(v12, v10), (int8x16_t)vdupq_n_s32(0x3F7C12F8u)), (int8x16_t)vdupq_n_s32(0xC0A4CD98)), vdupq_n_s32(0x435F0D18u)), v10)), v11), (int8x16_t)vdupq_n_s32(0x5EA35EBCu));
  v15.i32[0] = *(_DWORD *)(v6 + 4 * ((aHAwAwAwAwAwAwA[916] & 1) == 0));
  v15.i32[1] = *(_DWORD *)(v6 + 4 * ((aHAwAwAwAwAwAwA[920] & 1) == 0));
  v15.i32[2] = *(_DWORD *)(v6 + 4 * (*(unsigned int *)&aHAwAwAwAwAwAwA[924] & ((v5 + 184) ^ 0x418) ^ 1));
  v15.i32[3] = *(_DWORD *)(v6 + 4 * ((aHAwAwAwAwAwAwA[928] & 1) == 0));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[912] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[4], v15), (int8x16_t)vdupq_n_s32(0x41F5D8ACu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v14, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x7CF94D10u))), vdupq_n_s32(0x3E7CA688u)), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * v5) - 4))();
}

void sub_1001195EC()
{
  JUMPOUT(0x10011950CLL);
}

uint64_t sub_1001195F8@<X0>(uint64_t a1@<X4>, _DWORD *a2@<X5>, int a3@<W8>)
{
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v3 = (a2[623] & 0x80000000) + ((a3 + 1689414326) & 0x9B4D97FD) - 1290167109;
  v4 = ((*a2 & 0x477AE7AA ^ 0x457847A9 | *a2 & 0x38851854) - 1) ^ 0xEA8B6B81;
  v5 = (-651567013 - (v4 | 0xD929E05B) + (v4 | 0x26D61FA4)) ^ 0xDE446DB1 | ((v3 & 0x8110A088 ^ 0x80E45460)
                                                                          + (v3 ^ 0x318A298)
                                                                          - ((v3 ^ 0x318A298) & 0x80010110)) ^ 0x31F4F4E8;
  a2[623] = a2[396] ^ *((_DWORD *)&STACK[0x15C8] + ((*a2 & 1) == 0)) ^ ((v5 - ((2 * v5) & 0xADF6EA2) - 2056276143) >> 1) ^ 0x1C7C5040;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((58 * (LODWORD(STACK[0x728]) > 0x26F)) ^ a3)) - 8))();
}

uint64_t sub_100119748@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0x728]) = 0;
  v3 = LODWORD(STACK[0x728])++;
  *(_DWORD *)(v1 + 2496) = v3 + 73583858;
  v4 = (*(_DWORD *)aHAwAwAwAwAwAwA - 1809948821);
  v5 = 516615401 * (((~(v2 - 192) | 0x967625B7CF70BE42) + ((v2 - 192) | 0x6989DA48308F41BDLL)) ^ 0xE135523343EC478ELL);
  *(_QWORD *)(v2 - 160) = v5 + 3179136936u;
  *(_DWORD *)(v2 - 152) = (a1 - 185256850) ^ v5;
  *(_DWORD *)(v2 - 148) = v5 + a1 + 1249268378 + 66;
  *(_DWORD *)(v2 - 192) = v5 + 1;
  *(_DWORD *)(v2 - 188) = a1 + 1249268378 - v5;
  *(_DWORD *)(v2 - 168) = v5 ^ (a1 + 1249268378) ^ 0x28;
  *(_QWORD *)(v2 - 176) = v4 ^ v5;
  v6 = sub_1000EA338(v2 - 192);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50 + *(int *)(v2 - 184)) - 12))(v6);
}

uint64_t sub_100119DFC()
{
  unsigned int v0;
  unsigned int v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  _BYTE *v16;
  unint64_t v17;

  v7 = STACK[0x608];
  if (v1 >= v2)
    v8 = *(_DWORD *)aHAwAwAwAwAwAwA + 1;
  else
    v8 = v4;
  *(_DWORD *)aHAwAwAwAwAwAwA = v8;
  v9 = v0 ^ (v0 >> 11);
  v10 = (v5 ^ (v9 << 7)) - ((2 * (v5 ^ (v9 << 7))) & 0x59A72E00) + ((v3 - 217) ^ 0xACD392B3);
  v11 = ((v10 & 0x9D2C5680 ^ 0xDE003740)
       + (v10 & 0x992C5200 ^ 0x1FCC025)
       - ((v10 & 0x9D2C5680 ^ 0xDE003740) & 0x992C5200)) ^ v9;
  v12 = ((v11 << 15) ^ 0xA0B98000) - ((2 * ((v11 << 15) ^ 0xA0B98000)) & 0x2AB10000) + 358136438;
  v13 = ((((v12 & 0xEFC60000 ^ 0x82800000)
         + (v12 & 0x6E800000 ^ 0x6C0812E2)
         - ((v12 & 0xEFC60000 ^ 0x82800000) & 0x6E800000)) ^ 0xA7051BD9)
       - 1) ^ v11;
  v14 = v13 ^ (v13 >> 18) ^ 0xB341BA7C;
  v15 = STACK[0x640];
  v16 = (_BYTE *)(v7 + LODWORD(STACK[0x640]) - 1921022209 + ((v3 - 1741) | 0x254u));
  *v16 = (((v3 + 39) ^ 0xB3) + (v14 ^ 0x83) - ((2 * (v14 ^ 0x83)) & 0x26) + 76) ^ 0x1F;
  LODWORD(v16) = 1755343967
               * ((*(_DWORD *)(qword_100306950 + (int)(dword_100306B58 & 0xC7090E2C)) ^ v16) & 0x7FFFFFFF);
  v17 = 1755343967 * (v16 ^ (v16 >> 16));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((13
                                          * (v15
                                           - ((byte_100256BA0[v17 >> 24] ^ byte_1002634B0[v17 >> 24] ^ byte_100257640[(v17 >> 24) + 5] ^ v17 ^ (79 * BYTE3(v17))) != ((((v3 + 39) ^ 0xB3) + (v14 ^ 0x83) - ((2 * (v14 ^ 0x83)) & 0x26) + 76) ^ 0x1F)) == 1921021612)) ^ (v3 - 217)))
                            - 8))();
}

uint64_t sub_100119F50()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((((v0 + 108) | 0x481) - 920) * (STACK[0x848] != 0)) ^ v0)) - 8))();
}

uint64_t sub_100119F84@<X0>(unint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void);

  v5 = 3 * (a2 ^ 0x204u);
  v6 = ((unint64_t)&STACK[0xA44] ^ 0x7FBBFFFE7FEFFFFCLL)
     - 0x7FBBFFFE7FEFFFFCLL
     + ((2 * (_QWORD)&STACK[0xA44]) & 0xFF77FFFCFFDFFFF8);
  STACK[0x608] = ((v6 % 0x25) ^ 0xBDFFCEAF9FBFFFFFLL) + 2 * (v6 % 0x25) + v5 + 0x42003150603FFF96;
  v7 = STACK[0x8A0];
  STACK[0x678] = STACK[0x8F0];
  STACK[0x5D0] = v7;
  STACK[0x688] = (unint64_t)&STACK[0xBB0] + v7;
  STACK[0x5E0] = (unint64_t)&STACK[0xBB0] + v7 + 16;
  v8 = *(uint64_t (**)(void))(v4
                           + 8
                           * (int)((208
                                  * ((((_DWORD)v5 - 1487276188) & 0x58A60EED ^ ((_DWORD)v5 + 1672702539)) != 1672702987)) ^ v5));
  LODWORD(STACK[0x660]) = v3;
  STACK[0x680] = v2;
  STACK[0x640] = a1;
  return v8();
}

uint64_t sub_10011A0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  LODWORD(STACK[0x668]) = a6;
  STACK[0x15D0] = 0x190E3877800688A8;
  LODWORD(STACK[0xA44]) = dword_1003059C0 + v9;
  v11 = *(unsigned int *)aHAwAwAwAwAwAwA;
  v12 = ((v10 - 192) ^ 0xED14979B4E69D6FELL) * v7;
  *(_DWORD *)(v10 - 180) = v6 - 2107019248 + v12;
  *(_DWORD *)(v10 - 188) = v12 ^ (v6 - 2107019248) ^ 0x1F;
  *(_DWORD *)(v10 - 184) = (v6 - 2107019306) ^ v12;
  *(_DWORD *)(v10 - 160) = v12 + v6 + 1123495836;
  *(_DWORD *)(v10 - 156) = v12;
  *(_QWORD *)(v10 - 176) = v11 - v12;
  *(_QWORD *)(v10 - 168) = v12 ^ v8;
  v13 = sub_100218378(v10 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002C8B50 + *(int *)(v10 - 192)))(v13);
}

uint64_t sub_10011A17C()
{
  int v0;
  int v1;
  uint32_t v2;

  v1 = (v0 - 649) | 0xA0;
  STACK[0x678] = (unint64_t)malloc_type_malloc(STACK[0x608], 0xC5732911uLL);
  v2 = arc4random();
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = v2 + 1465998909 - ((v2 << (((v0 + 119) | 0xA0) ^ 0xE5)) & 0xAEC2BC7A);
  *(_DWORD *)&aHAwAwAwAwAwAwA[8] = ((1812433253
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) ^ 0xBD73FDBF)
                                 + (((*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))
                                   * (v1 ^ 0x580F162E)) & 0x7AE7FB7E)
                                 - 1712496513
                                 - ((2
                                   * (((1812433253
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) ^ 0xBD73FDBF)
                                    + (((*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))
                                      * (v1 ^ 0x580F162E)) & 0x7AE7FB7E))
                                   - 2062023548) & 0xAEC2BC7A);
  return ((uint64_t (*)(void))*(&off_1002C8B50 + v1))();
}

void sub_10011A2A4()
{
  JUMPOUT(0x10011A240);
}

uint64_t sub_10011A2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int32x4_t v16;
  int32x4_t v17;
  int8x16_t v18;

  v8 = (int8x16_t)vld1q_dup_f32((const float *)&aHAwAwAwAwAwAwA[4]);
  v9.i64[0] = 0x8000000080000000;
  v9.i64[1] = 0x8000000080000000;
  v10.i64[0] = 0x1000000010;
  v10.i64[1] = 0x1000000010;
  v7.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[8];
  v7.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[16];
  v11 = vextq_s8(v8, v7, 0xCuLL);
  v12 = v7;
  v12.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[20];
  v13 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v11, v9), vdupq_n_s32(0xB3EA3995)), (int8x16_t)vdupq_n_s32(0x4C45C348u)), vdupq_n_s32(0x1FB0B5D9u));
  v14 = veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xD3615D60));
  v15 = (int8x16_t)vsubq_s32((int32x4_t)vandq_s8(v14, (int8x16_t)vdupq_n_s32(0x3B2870EEu)), (int32x4_t)vorrq_s8(v14, (int8x16_t)vdupq_n_s32(0xBB2870EF)));
  v16 = (int32x4_t)veorq_s8(vorrq_s8(vandq_s8(v13, v9), v15), (int8x16_t)vdupq_n_s32(0x40D78C4Du));
  v17 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v16, (int8x16_t)vdupq_n_s32(0x42618E98u)), vandq_s8(v15, v10));
  v18.i32[0] = *((_DWORD *)&STACK[0x15D0] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[8] & 1));
  v18.i32[1] = *((_DWORD *)&STACK[0x15D0] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[12] & 1));
  v18.i32[2] = *((_DWORD *)&STACK[0x15D0] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[16] & 1));
  v18.i32[3] = *((_DWORD *)&STACK[0x15D0] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[20] & 1));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[4] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[4 * (v6 - 925) - 1672], v18), (int8x16_t)vdupq_n_s32(0xE1364FEC)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v16, vaddq_s32(v17, v17)), vdupq_n_s32(0xC2618E89)), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * (v6 - 1074)) - 4))();
}

void sub_10011AD70()
{
  JUMPOUT(0x10011AC64);
}

uint64_t sub_10011AD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;

  v12 = (unsigned int *)(a7 + 4 * (v9 + a8));
  v13 = (((v10 & 0x80000000) - 1276495467) ^ 0x4C45C348) + ((166 * (v8 ^ 0x335)) ^ 0x1FB0B6E7);
  v14 = v9 + 1;
  v15 = *(_DWORD *)(a7 + 4 * (v14 + a8));
  v16 = ((v15 & 0x7FFFFFFE ^ 0xD3615D60) & 0x3B2870EE) - (v15 & 0x7FFFFFFE ^ 0xD3615D60 | 0xBB2870EF);
  *v12 = v12[397] ^ *((_DWORD *)&STACK[0x15D0] + ((v15 & 1) == 0)) ^ ((((v16 | v13 & 0x80000000) ^ 0x40D78C4D)
                                                                     - 2
                                                                     * (((v16 | v13 & 0x80000000) ^ 0x40D78C4D) & 0x42618E98 ^ v16 & 0x10)
                                                                     - 1033793911) >> 1) ^ 0xE1364FEC;
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * ((v14 == v11 + 3) | v8)) - 4))();
}

uint64_t sub_10011AE78@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  uint64_t v2;
  int8x16_t v3;
  int8x16_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int32x4_t v10;
  int8x16_t v11;
  int32x4_t v12;
  int32x4_t v13;
  int8x16_t v14;

  v4 = (int8x16_t)vld1q_dup_f32((const float *)&aHAwAwAwAwAwAwA[912]);
  v5.i64[0] = 0x8000000080000000;
  v5.i64[1] = 0x8000000080000000;
  v6.i64[0] = 0x1200000012;
  v6.i64[1] = 0x1200000012;
  v3.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[916];
  v3.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[924];
  v7 = vextq_s8(v4, v3, 0xCuLL);
  v8 = v3;
  v8.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[928];
  v9 = vandq_s8(v7, v5);
  v10 = (int32x4_t)veorq_s8(vandq_s8(v8, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x5765487Au));
  v11 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v10, v10), (int8x16_t)vdupq_n_s32(0x285684A0u)), v10), vdupq_n_s32(0x6BD4BDAFu));
  v12 = (int32x4_t)veorq_s8(vorrq_s8(v11, v9), (int8x16_t)vdupq_n_s32(0x6BD0ABE9u));
  v13 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v12, (int8x16_t)vdupq_n_s32(0x50A3B87Au)), vandq_s8(v11, v6));
  v14.i32[0] = *(_DWORD *)(v2 + 4 * ((aHAwAwAwAwAwAwA[916] & 1) == 0));
  v14.i32[1] = *(_DWORD *)(v2 + 4 * ((aHAwAwAwAwAwAwA[920] & 1) == 0));
  v14.i32[2] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)&aHAwAwAwAwAwAwA[924] & (7 * (a2 ^ 0x3CCu) - 1693) ^ 1));
  v14.i32[3] = *(_DWORD *)(v2 + 4 * (~*(_DWORD *)&aHAwAwAwAwAwAwA[928] & 1));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[912] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[4], v14), (int8x16_t)vdupq_n_s32(0xA857549C)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v12, vaddq_s32(v13, v13)), vdupq_n_s32(0x50A3B868u)), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a2) - 4))();
}

void sub_10011AFDC()
{
  JUMPOUT(0x10011AF08);
}

uint64_t sub_10011AFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  int v7;
  unsigned int v8;

  v8 = ((((((v7 - 658) | 0x2C1) ^ 0x279A7AE3) & *a7 ^ 0xA51A2003) - 1) | *a7 & 0x586583D0) ^ 0xF27B7E3E | (((a7[623] & 0x80000000 | 0x25264C0A) ^ 0xB4D138F5) + 1804349572) ^ 0xFD83A583;
  a7[623] = a7[396] ^ *((_DWORD *)&STACK[0x15D0] + ((*a7 & 1) == 0)) ^ ((v8 - ((2 * v8) & 0x27C2A2A8) - 1813950124) >> 1) ^ 0xC9F62002;
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * ((397 * (LODWORD(STACK[0xA44]) > 0x26F)) ^ v7)) - 4))();
}

uint64_t sub_10011B0E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  LODWORD(STACK[0xA44]) = 0;
  v4 = LODWORD(STACK[0xA44])++;
  *(_DWORD *)(v2 + 2496) = v4 + 73583858;
  v5 = (*(_DWORD *)(v1 + 2504) - 1240827427);
  v6 = 1606104089
     * ((((v3 - 192) ^ 0x374E2F97FAEFA969)
       + 0x5A6D22DEDA18CAA1
       - 2 * (((v3 - 192) ^ 0x374E2F97FAEFA969) & 0x5A6D22DEDA18CAA1)) ^ 0xAF9DF67D55E021F6);
  *(_DWORD *)(v3 - 164) = -1231242123
                        - 1606104089
                        * ((((v3 - 192) ^ 0xFAEFA969) - 635909471 - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6)
                        + v0
                        + 47;
  *(_QWORD *)(v3 - 192) = v5 + v6;
  *(_DWORD *)(v3 - 180) = 1606104089
                        * ((((v3 - 192) ^ 0xFAEFA969) - 635909471 - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6);
  *(_DWORD *)(v3 - 176) = (v0 - 1982105645) ^ (1606104089
                                             * ((((v3 - 192) ^ 0xFAEFA969)
                                               - 635909471
                                               - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6));
  *(_DWORD *)(v3 - 172) = ((v0 - 1982105739) ^ 0x53)
                        + 1606104089
                        * ((((v3 - 192) ^ 0xFAEFA969) - 635909471 - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6);
  *(_DWORD *)(v3 - 168) = (v0 - 1982105739) ^ (1606104089
                                             * ((((v3 - 192) ^ 0xFAEFA969)
                                               - 635909471
                                               - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6));
  *(_QWORD *)(v3 - 160) = 3748258330u - v6;
  v7 = sub_100175DA4(v3 - 192);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50 + *(int *)(v3 - 184)) - 8))(v7);
}

uint64_t sub_10011B1F4()
{
  unsigned int v0;
  unsigned int v1;
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;

  v8 = STACK[0x640];
  v9 = STACK[0x668];
  v10 = (v3 - 1740) | 0x22C;
  if (v1 >= v2)
    v11 = *(_DWORD *)(v4 + 2504) + 1;
  else
    v11 = v5;
  *(_DWORD *)(v4 + 2504) = v11;
  v12 = v0 ^ (v0 >> 11);
  v13 = ((v6 ^ (v12 << 7)) - ((2 * (v6 ^ (v12 << 7))) & 0x7F6FD500) + v10 - 1078466407) & 0x9D2C5680 ^ 0x6520CE20;
  v14 = (((2 * v13) & 0x8A409100) - v13 - 1159882887) ^ v12;
  v15 = ((v14 << 15) ^ 0x54E78000) - ((2 * ((v14 << 15) ^ 0x54E78000)) & 0x64650000) - 1305282673;
  v16 = (((v15 & 0xA0020000 ^ 0x30184657) - 1) & 0xB0024406 | v15 & 0x4FC40000) ^ v14;
  v17 = (v16 ^ (v16 >> 18) ^ 0x87B0CC25) >> (((((v3 + 52) | 0x2C) + 78) ^ 0x6E) - 21);
  LOBYTE(v17) = (v17 - ((2 * v17) & 0xFA) - 3) ^ 0x7E;
  *(_BYTE *)(v8 + (v9 - 296018228)) = v17;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((1159
                                * (v9
                                 - ((byte_100254830[(v9 - 296018228) & 0xFLL] ^ (105 * ((v9 - 52) & 0xF)) ^ byte_100256DC0[(v9 - 296018228) & 0xFLL] ^ byte_10025A0D0[(v9 - 296018228) & 0xFLL]) != v17) == 296018227)) ^ v10)))();
}

uint64_t sub_10011B328()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v1 ^ ((8 * (v0 == 7926303938817490798)) | (16
                                                                                      * (v0 == 7926303938817490798)))))
                            - 4))();
}

uint64_t sub_10011B3C8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unsigned int v7;
  unint64_t v8;

  v6 = (_BYTE *)(a1 + v4 + v5);
  v7 = ((*(_DWORD *)(qword_100306950 + (dword_100306B58 & v2)) ^ v6) & ((v3 - 2114222555) ^ 0x7FFFFFEB))
     * a2;
  v8 = (v7 ^ HIWORD(v7)) * a2;
  *v6 = byte_100256CB0[(v8 >> 24) + 3] ^ byte_10027AAC0[v8 >> 24] ^ byte_100268450[(v8 >> 24) + 2] ^ v8 ^ (13 * BYTE3(v8));
  LODWORD(STACK[0x6E0]) = 0;
  return sub_1001713F4(0);
}

uint64_t sub_10011B470@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  int v16;

  v12 = v4 < v5;
  v13 = v7 + a1 - 0x6D91757148A74809;
  v14 = ((*(_DWORD *)(qword_100306950 + (dword_100306B58 & v2)) ^ v13) & 0x7FFFFFFF)
      * (((v10 + 335826396) | 0x6A002888) ^ 0x16A415B0);
  v15 = (v14 ^ HIWORD(v14)) * a2;
  v16 = byte_10027AAC0[v15 >> 24] ^ *(unsigned __int8 *)(v6 + v9 - 0x9B3D38648DC957FLL) ^ byte_100256CB0[(v15 >> 24) + 3] ^ byte_100268450[(v15 >> 24) + 2] ^ v15 ^ (13 * (v15 >> 24));
  if (v12 == v8 - 0x5461A04BE8E9D19CLL < v3)
    v12 = v8 - 0x5461A04BE8E9D19CLL < v4;
  *(_BYTE *)v13 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((8 * !v12) | (16 * !v12)) ^ v10)) - 4))();
}

uint64_t sub_10011B5A0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (982
                                     * ((v1 | ((unint64_t)(v1 < 0x1D8746DB) << 32)) != 495404763)))))();
}

uint64_t sub_10011B5F0@<X0>(_BYTE *a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  _BOOL4 v9;

  v6 = v3 ^ 0x747u;
  v7 = v6 + a2 + v4 - 2426;
  v8 = v6 - 1359;
  v9 = v2 < v7;
  *a1 = (((v3 ^ 0x47) - 14) & 0xED) + (*(_BYTE *)STACK[0x9C0] ^ 0x6E) + ((2 * *(_BYTE *)STACK[0x9C0]) & 0xDD) + 81;
  if (v9 == a2 > 0x139B7C89)
    v9 = v2 > 0x139B7C89;
  return (*(uint64_t (**)(void))(v5 + 8 * ((244 * !v9) ^ v8)))();
}

void sub_10011B6F4()
{
  JUMPOUT(0x10011B688);
}

uint64_t sub_10011B704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((966 * (*(_DWORD *)(v6 + 2004) - v9 == v8)) ^ v7))
                                                                                                - (v7 ^ 0x721u)
                                                                                                + 1737))(a1, a2, a3, a4, a5, a6, 4294925247);
}

uint64_t sub_10011B73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (v8 ^ (2018 * (v7 != 0x68C974A61C1FE532))))
                                                                                               - v6
                                                                                               + 1737))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10011B7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X8>)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _BOOL4 v15;

  v15 = v7 < a7;
  *(_BYTE *)(v9 + v11 - 0x6B0AC8D09425B381) = *(_BYTE *)(v8 + v12 - 0x4470EF01A777939CLL);
  if (v15 == v10 - 0x68ABFDBACAD21090 < a7)
    v15 = v10 - 0x68ABFDBACAD21090 < v7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v14 + 8 * ((v15 * ((v13 + 1249) ^ 0x12F)) ^ v13))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10011B848@<X0>(unsigned int a1@<W8>)
{
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1178 * (v1 <= (char)(((a1 - 89) & 0xEF) + 50))) ^ a1))
                            - (a1 ^ 0x23ELL)))();
}

uint64_t sub_10011B8A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (a4 ^ (1983 * ((unint64_t)&STACK[0xBB0] + v4 - 7 < 0x10))))
                            - 4))();
}

uint64_t sub_10011B948(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + ((a3 + 865) ^ 0x8D0F8C49FED7E70ALL) + a5) = (*(_BYTE *)(a4 + v6 - 0x753E1B265931C3E3) ^ 0xAA)
                                                            + ((2 * *(_BYTE *)(a4 + v6 - 0x753E1B265931C3E3)) & 0x55)
                                                            + 126;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1865 * (a6 + 1 != a2 + 48)) ^ a3)) - 4))();
}

uint64_t sub_10011B9C8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;

  v6 = *(int8x16_t *)(v1 + v3);
  v7.i64[0] = 0xAAAAAAAAAAAAAAAALL;
  v7.i64[1] = 0xAAAAAAAAAAAAAAAALL;
  v8 = veorq_s8(v6, v7);
  v9.i64[0] = 0x5454545454545454;
  v9.i64[1] = 0x5454545454545454;
  v10 = vandq_s8(vaddq_s8(v6, v6), v9);
  v9.i64[0] = 0x7E7E7E7E7E7E7E7ELL;
  v9.i64[1] = 0x7E7E7E7E7E7E7E7ELL;
  *(int8x16_t *)(v2 + v3) = vaddq_s8(vaddq_s8(v8, v9), v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((v4 + 865) ^ 0x6DDLL) + v3 != 48) * a1) ^ v4))
                            - 4))();
}

uint64_t sub_10011BA1C()
{
  int v0;
  int v1;
  unint64_t v2;
  char v3;
  char v4;

  v2 = STACK[0x680] + (v0 - 469583105);
  v3 = ((*(_BYTE *)(STACK[0xA30] + 8) ^ 0x33 ^ *(_BYTE *)v2)
      - ((((((v1 + 14) & 0xEF) + 54) | 0x4A) - 87) & (2 * (*(_BYTE *)(STACK[0xA30] + 8) ^ 0x33 ^ *(_BYTE *)v2)))
      - 6) ^ 0xFA | *(_BYTE *)(STACK[0xA30] + 9) ^ 0x33 ^ *(_BYTE *)(v2 + 1);
  v4 = (v3 - ((2 * v3) & 0xF4) - 6) ^ 0xFA | *(_BYTE *)(STACK[0xA30] + 10) ^ 0x33 ^ *(_BYTE *)(v2 + 2);
  LOBYTE(v2) = (v4 - ((2 * v4) & 0xF4) - 6) ^ 0xFA | *(_BYTE *)(STACK[0xA30] + 11) ^ 0x33 ^ *(_BYTE *)(v2 + 3);
  LODWORD(v2) = (v2 - ((2 * v2) & 0xF4)) != 0;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)*(&off_1002C8B50
                                                             + (int)((v2 | (32 * v2)) ^ (v1 - 442823410) & 0x1A64EFEF))
                                                   - 12))(3825384143, 18);
}

uint64_t sub_10011BB8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  char v8;
  char v9;
  int v10;
  uint64_t v11;
  int v12;
  _BOOL4 v13;
  unsigned int v14;
  int v15;
  _BOOL4 v16;

  v12 = a5 - 653;
  v13 = v5 > v7;
  v14 = (a2 + 29);
  v15 = v13 ^ (v14 < ((v12 + v8) ^ v9));
  v16 = v14 < v6;
  if (!v15)
    v13 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v13 * v10) ^ v12)) - 4))();
}

void sub_10011BBE0()
{
  JUMPOUT(0x10011BAECLL);
}

uint64_t sub_10011BC00()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = ((((v0 - 1099) | 0x16) - 406) & STACK[0x890]) == 14 * (v0 ^ 0x678) - 714;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 | (4 * v2)) ^ v0)) - 8))();
}

uint64_t sub_10011BC48()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 == ((v1 ^ 0x8B) - 64);
  return (*(uint64_t (**)(unint64_t))(v2 + 8 * (((2 * v3) | (4 * v3)) ^ v1)))(STACK[0x680] + LODWORD(STACK[0x660]) - 546355592 + (v1 ^ 0x1F6u) - 828);
}

uint64_t sub_10011BCB8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v6 = ((16 * v3) ^ 0x67EF7507) + 1807443953 + ((v3 << (v2 ^ 0x39)) & 0x33DEAE40 ^ 0x30000440u);
  v7 = 0xFFFFFFFF00000000;
  if (v6 >= 0x69AABF08)
    v7 = 0;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1510 * (v1 + v0 + v4 + v6 - v7 - 1772797704 > 0xF)) ^ v2)))(0x7D488786B62193C1);
}

void sub_10011BD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int8x16_t *a5)
{
  int v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t v8;

  v7.i64[0] = 0xB8B8B8B8B8B8B8B8;
  v7.i64[1] = 0xB8B8B8B8B8B8B8B8;
  v8.i64[0] = 0x7070707070707070;
  v8.i64[1] = 0x7070707070707070;
  a5[3] = vaddq_s8(vaddq_s8(veorq_s8(*v6, v7), v8), vandq_s8(vaddq_s8(*v6, *v6), v8));
  LODWORD(STACK[0x72C]) = v5 + 64;
  JUMPOUT(0x10011C0D4);
}

uint64_t sub_10011BDD0()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x72C]) = 1164808565;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_BYTE *)STACK[0x680] != 1) * (((v0 - 1097523000) & 0x416ADDBD) - 71)) ^ v0))
                            - (v0 - 378)
                            + 148))();
}

void sub_10011BE30()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE *v8;

  v4 = (_BYTE *)STACK[0x950];
  v5 = v3 + (v2 - 546355592);
  v6 = ((32 * v1) & 0x5AFAFA0 ^ 0x4000400) + ((16 * v1) ^ 0xFCD7F5FF) + (((v0 + 1520) | 0x41) ^ 0xDCB88A50);
  v7 = 0xFFFFFFFF00000000;
  if (v6 >= 0x4390646C)
    v7 = 0;
  v8 = (_BYTE *)(v7 - v6 + v5 + 1133536364);
  *v4 = *v8;
  v4[1] = v8[1];
  v4[2] = v8[2];
  v4[3] = v8[3];
  v4[4] = v8[4];
  v4[5] = v8[5];
  v4[6] = v8[6];
  v4[7] = v8[7];
  v4[8] = v8[8];
  v4[9] = v8[9];
  v4[10] = v8[10];
  v4[11] = v8[11];
  v4[12] = v8[12];
  v4[13] = v8[13];
  v4[14] = v8[14];
  JUMPOUT(0x10011C0CCLL);
}

uint64_t sub_10011BF2C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v7 = ((v4 << 6) & 0x67F05D80 ^ 0x60000880) + ((32 * v4) ^ 0xCFF86A8F) + (a2 ^ 0x320F7B51);
  v8 = 0xFFFFFFFF00000000;
  if (v7 >= 0x2E07ABBF)
    v8 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((58 * (v3 + v2 + v7 + v5 - v8 - 772254655 < 0x10)) | a2)) - 12))();
}

void sub_10011C008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int8x16_t *a5)
{
  int8x16_t *v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;

  v6.i64[0] = 0xFCFCFCFCFCFCFCFCLL;
  v6.i64[1] = 0xFCFCFCFCFCFCFCFCLL;
  v7.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v7.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v8 = vandq_s8(vaddq_s8(*v5, *v5), v7);
  v7.i64[0] = 0x2C2C2C2C2C2C2C2CLL;
  v7.i64[1] = 0x2C2C2C2C2C2C2C2CLL;
  a5[3] = vaddq_s8(vaddq_s8(veorq_s8(*v5, v6), v7), v8);
  JUMPOUT(0x10011C038);
}

uint64_t sub_10011C0E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + v2 - 0x2C045ADCA4E38B52) = (*(_BYTE *)(v1 + v4 - 0x4587AED426D85F9BLL) ^ (v3 + 124))
                                             + ((2 * *(_BYTE *)(v1 + v4 - 0x4587AED426D85F9BLL)) & 0x70)
                                             + 112;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 + 1 == v6 + 16) * v5) ^ v3)))();
}

void sub_10011C158()
{
  JUMPOUT(0x10011BDC4);
}

uint64_t sub_10011C160()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((978
                                * ((LODWORD(STACK[0x82C]) | ((unint64_t)(LODWORD(STACK[0x82C]) < v0 + (v1 ^ 0x651) - 1741) << 32)) != 458470030)) ^ v1)))();
}

uint64_t sub_10011C1B0()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v2 < v1;
  *(_BYTE *)STACK[0x950] = 0;
  if (v4 == v1 > 0x46D468E7)
    v4 = v2 > 0x46D468E7;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1618 * v4) ^ (v0 - 1585))))();
}

void sub_10011C22C()
{
  JUMPOUT(0x10011C1ECLL);
}

uint64_t sub_10011C234@<X0>(int a1@<W6>, unsigned int a2@<W8>)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  BOOL v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unint64_t v44;

  v3 = LODWORD(STACK[0x380]) ^ LODWORD(STACK[0x680]);
  v4 = LODWORD(STACK[0x37C]) ^ LODWORD(STACK[0x3C4]);
  v5 = STACK[0x5C0];
  if ((STACK[0x5C0] & 1) != 0)
    v6 = STACK[0x540];
  else
    v6 = STACK[0x44C];
  if ((v5 & 1) != 0)
    v7 = STACK[0x510];
  else
    v7 = STACK[0x420];
  if ((v5 & 1) != 0)
    v8 = STACK[0x408];
  else
    v8 = STACK[0x418];
  if ((v5 & 1) != 0)
    v9 = STACK[0x410];
  else
    v9 = STACK[0x404];
  v10 = STACK[0x338];
  if ((v5 & 1) != 0)
    v10 = STACK[0x328];
  v11 = STACK[0x340];
  if ((v5 & 1) == 0)
    v11 = STACK[0x300];
  v12 = STACK[0x36C];
  v13 = STACK[0x2E8];
  if ((v5 & 1) != 0)
  {
    v12 = STACK[0x2E8];
    v13 = STACK[0x330];
  }
  v14 = (STACK[0x5C0] & 2) == 0;
  v15 = STACK[0x3F0];
  if ((STACK[0x5C0] & 2) == 0)
    v15 = STACK[0x3EC];
  LODWORD(STACK[0x2E8]) = v15;
  v16 = STACK[0x3E8];
  if (!v14)
    v16 = STACK[0x3E4];
  LODWORD(STACK[0x418]) = v16;
  v17 = STACK[0x3A8];
  if (!v14)
    v17 = STACK[0x39C];
  LODWORD(STACK[0x540]) = v17;
  v18 = STACK[0x3DC];
  if (!v14)
    v18 = STACK[0x3D8];
  LODWORD(STACK[0x410]) = v18;
  v19 = STACK[0x3D4];
  if (v14)
    v19 = STACK[0x3C8];
  LODWORD(STACK[0x3D8]) = v19;
  v20 = STACK[0x374];
  if (v14)
    v21 = STACK[0x374];
  else
    v21 = v12;
  LODWORD(STACK[0x298]) = v21;
  if (!v14)
    v12 = v20;
  LODWORD(STACK[0x338]) = v12;
  if (v14)
    v22 = v10;
  else
    v22 = v11;
  LODWORD(STACK[0x3D4]) = v22;
  if (v14)
    v10 = v11;
  LODWORD(STACK[0x408]) = v10;
  v23 = v3 ^ 0x61627385;
  LODWORD(STACK[0x36C]) = v6;
  LODWORD(STACK[0x330]) = v7;
  if (v14)
    v24 = v7;
  else
    v24 = v6;
  LODWORD(STACK[0x39C]) = v24;
  v25 = STACK[0x640];
  if (!v14)
    v25 = STACK[0x608];
  LODWORD(STACK[0x420]) = v25;
  LODWORD(STACK[0x404]) = v8;
  LODWORD(STACK[0x3F0]) = v9;
  if (v14)
    v26 = v9;
  else
    v26 = v8;
  LODWORD(STACK[0x3A8]) = v26;
  v27 = STACK[0x3C0];
  LODWORD(STACK[0x3E8]) = v13;
  if (!v14)
    v27 = v13;
  LODWORD(STACK[0x3C8]) = v27;
  v28 = STACK[0x580];
  if ((STACK[0x580] & 1) != 0)
    v23 = STACK[0x254];
  LODWORD(STACK[0x44C]) = v23;
  v29 = v4 ^ 0xA5798682;
  if ((v28 & 1) == 0)
    v29 = STACK[0x258];
  v30 = STACK[0x284];
  if ((v28 & 1) != 0)
    v30 = STACK[0x288];
  v31 = STACK[0x260];
  if ((v28 & 1) != 0)
    v32 = STACK[0x27C];
  else
    v32 = STACK[0x260];
  v33 = STACK[0x25C];
  if ((v28 & 1) == 0)
  {
    v31 = STACK[0x25C];
    v33 = STACK[0x268];
  }
  v34 = STACK[0x3AC];
  if ((v28 & 1) == 0)
    v34 = STACK[0x28C];
  v35 = (v28 & 2) == 0;
  if ((v28 & 2) != 0)
    v29 = STACK[0x2F0];
  LODWORD(STACK[0x28C]) = v29;
  v36 = STACK[0x264];
  if (v35)
    v37 = STACK[0x264];
  else
    v37 = v34;
  LODWORD(STACK[0x284]) = v37;
  if (v35)
    v38 = v34;
  else
    v38 = v36;
  LODWORD(STACK[0x288]) = v38;
  v39 = STACK[0x394];
  if (v35)
    v39 = STACK[0x280];
  LODWORD(STACK[0x280]) = v39;
  v40 = STACK[0x278];
  if (v35)
    v40 = STACK[0x274];
  LODWORD(STACK[0x340]) = v40;
  v41 = STACK[0x5B0];
  LODWORD(STACK[0x300]) = v30;
  if (v35)
    v41 = v30;
  LODWORD(STACK[0x27C]) = v41;
  LODWORD(STACK[0x3DC]) = v32;
  LODWORD(STACK[0x380]) = v33;
  if (v35)
    v42 = v32;
  else
    v42 = v33;
  LODWORD(STACK[0x274]) = v42;
  v43 = STACK[0x398];
  LODWORD(STACK[0x3C4]) = v31;
  if (v35)
    v43 = v31;
  LODWORD(STACK[0x278]) = v43;
  v44 = a2 - 1072447216 + ((unint64_t)(a2 < v2) << 32) + 1300;
  *(_QWORD *)(STACK[0xB50] + 8 * v44) = *(_QWORD *)(STACK[0xB38] + 8 * v44) ^ 0x9696969696969696;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((63 * (a2 - 1072445915 > 1)) ^ a1)) - 12))();
}

void sub_10011CB64()
{
  JUMPOUT(0x10011C4B4);
}

uint64_t sub_10011CB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unint64_t v39;
  unsigned int v40;
  unsigned int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  char v59;
  char v60;
  BOOL v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  BOOL v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  char v77;
  char v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unint64_t v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  int v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  _BOOL4 v109;
  unint64_t v110;
  int v111;

  v8 = (a4 & 0x1B ^ 0x98 | 0x4C) - (a4 & 0x1B ^ 0x98 | 0xB3) - 77;
  v9 = ((((a4 ^ 0xE1A5DB7216E45892) >> (v8 ^ 0xCCu))
       - ((2 * ((a4 ^ 0xE1A5DB7216E45892) >> (v8 ^ 0xCCu))) & 0x53CD490A0C583730)
       + 0x29E6A485062C1B98) ^ 0x29E6A485062C1B98) >> (v8 ^ 0xD7u);
  v10 = (a4 ^ 0xE1A5DB7216E45892)
      + (v9 ^ 0xE48AB0201010888ELL)
      - ((2 * v9) & 0x36EA9FBFDFDEEEE2)
      + 0x1B754FDFEFEF7772;
  v11 = ((2 * v10) & 0xF9FFFFBFABF5F9BELL)
      + (v10 ^ 0x7CFFFFDFD5FAFCDFLL)
      + (((((2 * v10) & 0xF9FFFFBFABF5F9BELL) + (v10 ^ 0x7CFFFFDFD5FAFCDFLL) - 0x7CFFFFDFD5FAFCDFLL) >> 14) ^ 0x44240A0A44540208)
      - (((((2 * v10) & 0xF9FFFFBFABF5F9BELL) + (v10 ^ 0x7CFFFFDFD5FAFCDFLL) - 0x7CFFFFDFD5FAFCDFLL) >> 13) & 0x7EBEB7757FBEELL);
  v12 = v11
      + (((v11 + 0x3EDBF615E5B10119) >> 6) ^ 0x4A0006800D283808)
      - (((v11 + 0x3EDBF615E5B10119) >> 5) & 0x3FFF2FFE5AF8FEELL)
      + 2;
  v13 = v12 - ((2 * v12 + 0x29B7DF2BB111921ELL) & 0x217DE5309423B2DCLL) - 0x7A651DD1DD655D83;
  v14 = ((2 * ((v13 ^ 0x90BEF2984A11D96ELL) + 0x301F1AB817992D55)) & 0x5EF6298FFB6EF9F6)
      + (((v13 ^ 0x90BEF2984A11D96ELL) + 0x301F1AB817992D55) ^ 0x2F7B14C7FDB77CFBLL);
  v15 = v14
      + (((v14 - 0x2F7B14C7FDB77CFBLL) >> 24) ^ 0x11404104E1048D00)
      - (((v14 - 0x2F7B14C7FDB77CFBLL) >> 23) & 0x1F63DF6E5FELL);
  v16 = v15
      + (((v15 - 0x40BB55CCDEBC09FBLL) >> 14) ^ 0x4002200800440112)
      - (((v15 - 0x40BB55CCDEBC09FBLL) >> 13) & 0x3BFEFFF77FDDALL);
  v17 = v16
      + (((v16 + 0x7F428A2B20FFF4F3) >> 6) ^ 0xAFF92D7FFFEFFFBFLL)
      + (((v16 + 0x7F428A2B20FFF4F3) >> 5) & 0x7F25AFFFFDFFF7ELL)
      + 2;
  v18 = v17 - ((2 * v17 - 0x616D46A9BDE0159CLL) & 0xEAE86454B4804144) + 0x44BD8ED57B5015D4;
  v19 = ((2 * ((v18 ^ 0x7574322A5A4020A2) - 0x5C4C23E8A21DDE13)) & 0xEF1FADDFBC76EDEALL)
      + (((v18 ^ 0x7574322A5A4020A2) - 0x5C4C23E8A21DDE13) ^ 0xF78FD6EFDE3B76F5);
  v20 = (((v19 + 0x870291021C4890BLL) >> 27) ^ 0x5EF9EDF7DED21F3ELL)
      + v19
      + (((v19 + 0x870291021C4890BLL) >> 26) & 0x2FBDA43E7CLL);
  v21 = (((v20 - 0x5689C4E7BD0D9633) >> 12) ^ 0xDB7FBD9FFFF7FADBLL)
      + v20
      + (((v20 - 0x5689C4E7BD0D9633) >> 11) & 0x1F7B3FFFEFF5B6);
  v22 = v21
      + (((v21 - 0x32098287BD05910ELL) >> 2) ^ 0xE262022332402342)
      - (((v21 - 0x32098287BD05910ELL) >> 1) & 0x3B3BFBB99B7FB97ALL);
  v23 = v22 + 1 - ((2 * (v22 + 1) + 561289054) & 0x79EDDF64) - 844022943;
  v24 = v22
      + 1
      + (((v22 - 0xE6FFD72F198802) >> 30) ^ 0xC6008210021B2203)
      - (((v22 - 0xE6FFD72F198802) >> 29) & 0x7FBC9BBF8);
  v25 = v24
      + (((v24 + 0x39187E18CECB55FALL) >> 12) ^ 0x2824807404040908)
      - (((v24 + 0x39187E18CECB55FALL) >> 11) & 0x16FF17F7F7EDEELL);
  v26 = v25
      + (((v25 + 0x10F3FDA4CAC74CF2) >> 7) ^ 0x2B4406B408010240)
      - (((v25 + 0x10F3FDA4CAC74CF2) >> 6) & 0x177F297EFFDFB7ELL)
      + 3;
  v27 = v26 - ((2 * v26 + 0x4B5FEDE1858C955ELL) & 0x7A50F41BFA2E2E8CLL) + 0x22D870FEBFDD61F5;
  v28 = ((2 * ((v27 ^ 0x3D287A0DFD171746) + 0x3DEAA251E4C860FCLL)) & 0x92FEF7FEB5FBD7FCLL)
      + (((v27 ^ 0x3D287A0DFD171746) + 0x3DEAA251E4C860FCLL) ^ 0xC97F7BFF5AFDEBFELL);
  v29 = (((v28 + 0x36808400A5021402) >> 31) ^ 0xD4FDFFDFFE7FFFDELL)
      + v28
      + (((v28 + 0x36808400A5021402) >> 30) & 0x3FCFFFFBCLL);
  v30 = (((v29 + 0x61828420A6821424) >> 8) ^ 0xBF361FF3E766FFFFLL)
      + v29
      + (((v29 + 0x61828420A6821424) >> 7) & 0x6C3FE7CECDFFFELL);
  v31 = (((v30 - 0x5DB39BD340E4EBDBLL) >> 7) ^ 0x37FF7FBDA9FFEFBFLL)
      + v30
      + (((v30 - 0x5DB39BD340E4EBDBLL) >> 6) & 0x3FEFF7B53FFDF7ELL);
  v32 = v31 - ((2 * v31 + 0x5499C8DE2A3648CCLL) & 0x68F62DF03D80F4D6) + 0x1EC7FB6733DB9ED1;
  v33 = (v32 ^ 0x8A37D526F36D0EA4)
      + ((v32 >> 30) ^ 0x41010C0A28E715F9)
      + ((v32 >> 29) & 0x7FF8F7D3ALL ^ 0xFFFFFFFBAE71D6CDLL)
      - 0x41010C0800384161;
  v34 = (((((2 * v33) & 0xF17EE7DBBFF5E5E2) + (v33 ^ 0xF8BF73EDDFFAF2F1) + 0x7408C1220050D0FLL) >> 13) ^ 0x7DFDFBF75FDF7DFFLL)
      + ((2 * v33) & 0xF17EE7DBBFF5E5E2)
      + (v33 ^ 0xF8BF73EDDFFAF2F1)
      + (((((2 * v33) & 0xF17EE7DBBFF5E5E2) + (v33 ^ 0xF8BF73EDDFFAF2F1) + 0x7408C1220050D0FLL) >> 12) & 0xBF7EEBFBEFBFELL);
  v35 = v34
      + (((v34 - 0x76BD6FE53FDA70F0) >> 2) ^ 0x14D802180450303)
      - (((v34 - 0x76BD6FE53FDA70F0) >> 1) & 0x7D64FFBCFF75F9F8);
  v36 = v23 ^ v6 ^ (v35 + 1 - ((2 * (v35 + 1) + 2143361048) & 0xAEE80918) - 1756065640);
  v37 = (v36 & 0x34EEE5CD ^ 0x12C98188 | 0x40B36182) - (v36 & 0x34EEE5CD ^ 0x12C98188 | 0xBF4C9E7D) - 1085497731;
  v38 = (v36 & 0xCB111A32 ^ 0xC2001A02 | 0x8BACFEF) - (v36 & 0xCB111A32 ^ 0xC2001A02 | 0xF7453010) - 146460656;
  v39 = v35
      + 1
      + (((v35 + 0x5673104953D780C9) >> 25) ^ 0x8915000008711404)
      - (((v35 + 0x5673104953D780C9) >> 24) & 0xFFEF1DD7F6);
  v40 = ((v38 & 0x99B0FE19 ^ 0x90403010) + (v38 & 0x660F01E6 ^ 0x62080127) - 1) ^ 0x31F3ECEB | v37 ^ 0x42B66182;
  v41 = v40 - ((2 * v40) & 0xD2A2039E) + 1766916559;
  v42 = v39
      + (((v39 - 0x32A1EFB6B499933CLL) >> 9) ^ 0xD37FDF6B7FF4E6FDLL)
      + (((v39 - 0x32A1EFB6B499933CLL) >> 8) & 0xFFBED6FFE9CDFALL);
  v43 = v42
      + ((v42 - 0x621CF22348E7A39) & 0xFF73B5EFDFB7E7EELL)
      + (((v42 - 0x621CF22348E7A39) >> 1) ^ 0x7FB9DAF7EFDBF3F7)
      + 1;
  v44 = v43 - ((2 * v43 - 0xBB7543448D4DC62) & 0xE899B830513D3928) - 0x118ECE01FBCBD19DLL;
  v45 = ((2 * ((v44 ^ 0x744CDC18289E9C94) + 0x38FC44A9709D19CALL)) & 0xFEBEFFF5BE5FFFAELL)
      + (((v44 ^ 0x744CDC18289E9C94) + 0x38FC44A9709D19CALL) ^ 0xFF5F7FFADF2FFFD7);
  v46 = v45
      + (((v45 + 0xA0800520D00029) >> 24) ^ 0x400529D3302A00A0)
      - (((v45 + 0xA0800520D00029) >> 23) & 0x599FABFEBELL);
  v47 = v46
      + (((v46 - 0x3F64A9CE0F5A0077) >> 15) ^ 0x1CC302840010906CLL)
      - (((v46 - 0x3F64A9CE0F5A0077) >> 14) & 0x1FAF7FFDEDF26);
  v48 = v47
      + (((v47 - 0x5C27AC520F6A90E3) >> 8) ^ 0x6D65EEDF1FBE72B7)
      + (((v47 - 0x5C27AC520F6A90E3) >> 7) & 0xCBDDBE3F7CE56ELL)
      + 2;
  v49 = v48 - ((2 * v48 + 0x2CE4C99DA1ADF8C8) & 0x2A6CFD59271E04C0) + 0x4BA8E37B6465FEC4;
  v50 = ((2 * ((v49 ^ 0x15367EAC938F0260) + 0x627FE9C2823FDEE7)) & 0xFFFFF2FD3ECA6F8ELL)
      + (((v49 ^ 0x15367EAC938F0260) + 0x627FE9C2823FDEE7) ^ 0xFFFFF97E9F6537C7);
  v51 = (((v50 + 0x681609AC839) >> 29) ^ 0x67F5BB6CF7BDDB7FLL)
      + v50
      + (((v50 + 0x681609AC839) >> 28) & 0x9EF7BB6FELL);
  v52 = v51
      + (((v51 - 0x67F5B4EB97231346) >> 9) ^ 0x4200050200202540)
      - (((v51 - 0x67F5B4EB97231346) >> 8) & 0xFFF5FBFFBFB57ELL);
  v53 = ((v52 + 0x560A461268BCC77ALL) >> 5) - (((v52 + 0x560A461268BCC77ALL) >> 4) & 0x46AE0032) - 1554579431;
  LODWORD(v52) = ((2 * (v52 + 1757202298)) & 0xD7F7FFCC) + ((v52 + 1757202298) ^ 0x6BFBFFE6) + (v53 ^ 0xB8A9AFF3);
  v54 = (((2 * v53) & 0x37FD5FD4 ^ 0x6AC0010)
       + v52
       - 2 * ((((2 * v53) & 0x37FD5FD4 ^ 0x6AC0010) + v52 + 939872304) & 0x32BB9ECF ^ v52 & 2)
       + 717287165) ^ v41;
  v55 = ((v54 ^ 0xFD) + 1) & 7;
  LODWORD(STACK[0x510]) = v54;
  v56 = v54 & 7;
  if (v56 == 2)
    v57 = 0;
  else
    v57 = 255;
  LODWORD(STACK[0x680]) = v55;
  v58 = ((v57 << v55) - ((2 * (v57 << v55)) & 0x30) - 104);
  v59 = (((2 * (v58 ^ 0xAF)) & 0x4C) - (v58 ^ 0xAF) - 39) ^ 0x2F;
  v60 = ((v59 | 0x8C) - (v59 | 0x73) + 115) ^ 0xA0;
  LODWORD(STACK[0x374]) = v56;
  if (v56 == 2)
    v60 = 18;
  v61 = (STACK[0x5C0] & 2) == 0;
  v62 = STACK[0x5E0];
  if ((STACK[0x5C0] & 2) != 0)
    v62 = STACK[0x5A0];
  LODWORD(STACK[0x2F0]) = v62;
  v63 = STACK[0x590];
  if (v61)
    v63 = STACK[0x550];
  LODWORD(STACK[0x3E4]) = v63;
  v64 = STACK[0x530];
  if (v61)
    v64 = STACK[0x4C0];
  LODWORD(STACK[0x394]) = v64;
  v65 = STACK[0x404];
  if (!v61)
    v65 = STACK[0x3F0];
  LODWORD(STACK[0x3EC]) = v65;
  v66 = STACK[0x3C0];
  if (v61)
    v66 = STACK[0x3E8];
  LODWORD(STACK[0x3E8]) = v66;
  v67 = STACK[0x3BC];
  if (v61)
    v67 = STACK[0x3B8];
  LODWORD(STACK[0x3F0]) = v67;
  v68 = STACK[0x3F8];
  if (!v61)
    v68 = STACK[0x3E0];
  LODWORD(STACK[0x254]) = v68;
  LODWORD(STACK[0x2A0]) = LODWORD(STACK[0x26C]) - LODWORD(STACK[0x2A0]);
  if ((STACK[0x580] & 1) != 0)
    v69 = STACK[0x290];
  else
    v69 = STACK[0x3AC];
  v70 = (STACK[0x580] & 2) == 0;
  v71 = STACK[0x398];
  if ((STACK[0x580] & 2) != 0)
    v71 = STACK[0x3C4];
  LODWORD(STACK[0x25C]) = v71;
  v72 = STACK[0x3DC];
  if (v70)
    v72 = STACK[0x380];
  LODWORD(STACK[0x258]) = v72;
  v73 = v27 ^ v13 ^ v4 ^ v44;
  v74 = v32 ^ v18 ^ v7 ^ v49;
  v75 = v73 & 0x7F ^ 0x61;
  LODWORD(STACK[0x4C0]) = (v73 & 0xFFFFFF80 ^ 0xEA5C900)
                        + (v73 & 0x2E3A6300 ^ 0x201A2261)
                        - ((v73 & 0xFFFFFF80 ^ 0xEA5C900) & 0x2E3A6300);
  LODWORD(STACK[0x404]) = (33686018 * (v58 ^ 0x98)) & 0xE82A3B56;
  LODWORD(STACK[0x3BC]) = 16843009 * (v58 ^ 0x98) - 199942741;
  v76 = ((452984832 * (v58 ^ 0x98) - ((905969664 * (v58 ^ 0x98)) & 0x6C000000) + 913300291) ^ 0x366FDB43) & (v74 ^ 0x556FEF5A);
  LODWORD(STACK[0x398]) = v76 - ((2 * v76) & 0x88888888) + 1141031471;
  LOBYTE(v76) = v60 ^ 0x12 | v73 ^ 0x91;
  v77 = (v73 ^ 0x7C ^ v60) + 1;
  v78 = (v76 ^ 0xEF) + (v77 ^ 0x9D);
  LOBYTE(v76) = ((2 * v77) & 0x3A) + v78 + ((2 * v76) & 0xDE) + 116;
  LODWORD(STACK[0x3C0]) = v76 - 2 * (v76 & 0xE9 ^ v78 & 1) - 964655128;
  LODWORD(STACK[0x5E0]) = v73;
  v79 = ((v73 ^ 0xA3) + (v73 & 7 ^ 0x1D2E304) - ((v73 ^ 0xA3) & 7)) & 0x1407FFF ^ HIBYTE(v73) ^ (((2 * (BYTE1(v73) ^ 6)) | 0xF522E9E4) - (BYTE1(v73) ^ 6) + 91130638) ^ ((BYTE2(v73) ^ 0x3B603D82 | 0x2EDAF85E) - (BYTE2(v73) ^ 0x3B603D82 | 0xD12507A1) - 786102367) ^ 0xEE6BD266;
  v80 = 16843009 * v79 - ((33686018 * v79) & 0x3D981BC4) + 516689378;
  LODWORD(STACK[0x3B8]) = v74;
  v81 = (((v74 ^ BYTE1(v74) ^ BYTE2(v74)) ^ 0x409A24C | 0x71B32EEC)
       - ((v74 ^ BYTE1(v74) ^ BYTE2(v74)) ^ 0x409A24C | 0x8E4CD113)
       - 1907568365) ^ HIBYTE(v74) ^ 0x75BA8C81;
  v82 = 16843009 * v81 - ((33686018 * v81) & 0x80B202FA) + 1079574909;
  v83 = STACK[0xB50];
  v84 = *(_QWORD *)(STACK[0xB50]
                  + 8
                  * ((*(_QWORD *)(STACK[0xB50]
                                + 8
                                * ((*(_QWORD *)(STACK[0xB50] + 8 * ((*(_DWORD *)STACK[0xB50] & 1) == 0)) & 1) == 0)) & 1) == 0)) & 1;
  v85 = (v84 ^ 0xFFEDCFD7) + 2 * v84 + 578415466;
  LODWORD(STACK[0x5A0]) = 33686018 * v75;
  LODWORD(STACK[0x590]) = (33686018 * v75) & 0xA5959B8E;
  v86 = LODWORD(STACK[0x560]) ^ 0x34396550;
  v87 = LODWORD(STACK[0x4B0]) ^ 0x93A7C14C;
  v88 = STACK[0x570];
  LODWORD(STACK[0x3C4]) = v69;
  if (!v70)
    v88 = v69;
  LODWORD(STACK[0x26C]) = v88;
  v89 = STACK[0x3B4];
  if (v70)
    v89 = STACK[0x3B0];
  LODWORD(STACK[0x268]) = v89;
  LODWORD(STACK[0x3F8]) = v75;
  LODWORD(STACK[0x530]) = 16843009 * v75 + 1389022663;
  LODWORD(STACK[0x380]) = v80;
  LODWORD(STACK[0x37C]) = v82;
  LODWORD(STACK[0x3DC]) = v82 ^ v80;
  v90 = ((v5 - 183115494) & 0xFFFBDC6A) - 4111582282;
  v91 = 0xB3D5C9433319E527 * (*(_QWORD *)(v83 + 8 * v90) ^ 0x9696969696969696)
      - ((0x67AB92866633CA4ELL * (*(_QWORD *)(v83 + 8 * v90) ^ 0x9696969696969696)) & 0x8D9D18B941EB4630)
      + 0x46CE8C5CA0F5A318;
  v92 = ((2 * ((v91 ^ 0xF59ABD0D0586E4DLL) + v90)) & 0xEDBBCFF7E767DC5ELL)
      + (((v91 ^ 0xF59ABD0D0586E4DLL) + v90) ^ 0x76DDE7FBF3B3EE2FLL);
  v93 = (((v92 - 0x76DDE7FBF3B3EE2FLL) >> 32) ^ 0x93FBF5A9FF3CFFCDLL)
      + v92
      + (((v92 - 0x76DDE7FBF3B3EE2FLL) >> 31) & 0x1FE79FF9ALL);
  v94 = (((v93 - 0xAD9DDA5F2F0EDFCLL) >> 16) ^ 0xFFBBFF75669DDFCCLL)
      + v93
      + (((v93 - 0xAD9DDA5F2F0EDFCLL) >> 15) & 0x1FEEACD3BBF98);
  v95 = (((v94 - 0xA95DD1B598ECDC8) >> 8) ^ 0x53F7FD9773FFBDFELL)
      + v94
      + (((v94 - 0xA95DD1B598ECDC8) >> 7) & 0x1EFFB2EE7FF7BFCLL);
  v96 = ((2 * (v95 + 846296122)) & 0xFDDFDCFA) + ((v95 + 846296122) ^ 0x7EEFEE7D);
  v97 = v96 - ((2 * v96 - 998286960) & 0xC2A857CA);
  v98 = v95 - ((2 * v95 + 0x76D06BF9E9A15588) & 0x7BE32A482608E744) - 0x6A634DEF82AE19ALL;
  v99 = ((2 * ((v91 ^ 0x7B3F1978B3F1D0BALL ^ v98) + v90)) & 0x9F73E7DB5FFE6F9ELL)
      + (((v91 ^ 0x7B3F1978B3F1D0BALL ^ v98) + v90) ^ 0x4FB9F3EDAFFF37CFLL);
  v100 = (((v99 - 0x4FB9F3EDAFFF37CFLL) >> 32) ^ 0xFBFF9ECBF7FFDFFDLL)
       + v99
       + (((v99 - 0x4FB9F3EDAFFF37CFLL) >> 31) & 0x1EFFFBFFALL);
  v101 = (((v100 - 0x4BB992B9A7FF17CCLL) >> 16) ^ 0x6FD7B4FCE71FB12FLL)
       + v100
       + (((v100 - 0x4BB992B9A7FF17CCLL) >> 15) & 0x169F9CE3F625ELL);
  v102 = (((v101 + 0x446EB84970E13705) >> 8) ^ 0x7B1BEDE4FEFE4F2FLL)
       + v101
       + (((v101 + 0x446EB84970E13705) >> 7) & 0x37DBC9FDFC9E5ELL);
  v103 = ((2 * (v102 + 1910695894)) & 0xA7FC5BEE) + ((v102 + 1910695894) ^ 0xD3FE2DF7);
  v104 = v103 - ((2 * v103 + 442686108) & 0x37F81416);
  v105 = v102 - 2 * ((v102 + 0x6348DB1434421E60) & 0x4E57BE98F89C116FLL ^ v102 & 0xD) + 0x31A099AD2CDE2FC2;
  v106 = ((2 * ((v91 ^ 0x89932C45869B27ALL ^ v105) + v90)) & 0x2FE9778F23F7F7FELL)
       + (((v91 ^ 0x89932C45869B27ALL ^ v105) + v90) ^ 0x17F4BBC791FBFBFFLL);
  v107 = (((unint64_t)(v106 - 0x17F4BBC791FBFBFFLL) >> 32) ^ 0x2FDBFFBFFFC7B97FLL)
       + v106
       + (((unint64_t)(v106 - 0x17F4BBC791FBFBFFLL) >> 31) & 0x1FF8F72FELL);
  v108 = (((v107 - 0x47D0BB8791C3B57ELL) >> 16) ^ 0xFBFBEDFF5FFCD4FDLL)
       + v107
       + (((v107 - 0x47D0BB8791C3B57ELL) >> 15) & 0x1DBFEBFF9A9FALL);
  v109 = v85 > 0x2267BB42;
  if (v85 < 0x2267BB41)
    v109 = 1;
  v110 = (((v108 - 0x43CCA986F1C08A7BLL) >> 8) ^ 0xFFD693B6EF7FD7AFLL)
       + v108
       + (((v108 - 0x43CCA986F1C08A7BLL) >> 7) & 0x1AD276DDEFFAF5ELL);
  v111 = ((2 * (v110 + 515874262)) & 0xA9BDF326) + ((v110 + 515874262) ^ 0x54DEF993);
  return ((uint64_t (*)(unint64_t, _QWORD))*(&off_1002C8B50 + ((508 * !v109) ^ v5)))(v87 ^ v98 ^ v105 ^ 0xEA4662A5 ^ ((_DWORD)v110- 2* (((_DWORD)v110 - 518073248) & 0x1DE0075 ^ v110 & 0x10)- 486746939), v86 ^ (v97 - 1013720915) ^ (v104 - 1456638119) ^ 0x82F9AB1A ^ (v111- ((2 * v111 + 413221732) & 0xF0A315E8)+ 77737126));
}

uint64_t sub_10011E454@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, unsigned int a5@<W8>)
{
  unsigned int v5;
  int v6;
  BOOL v7;
  int v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;

  v6 = (a3 + 183385099) | 0x12A;
  v7 = (STACK[0x5C0] & 2) == 0;
  v8 = STACK[0x678];
  if ((STACK[0x5C0] & 2) == 0)
    v8 = STACK[0x670];
  LODWORD(STACK[0x3E0]) = v8;
  v9 = STACK[0x640];
  if (v7)
    v9 = STACK[0x608];
  LODWORD(STACK[0x290]) = v9;
  v10 = STACK[0x5F0];
  if (!v7)
    v10 = STACK[0x5D0];
  LODWORD(STACK[0x3AC]) = v10;
  v11 = STACK[0x4A0];
  if (v7)
    v11 = STACK[0x498];
  LODWORD(STACK[0x328]) = v11;
  v12 = (STACK[0x580] & 2) == 0;
  v13 = STACK[0x294];
  if ((STACK[0x580] & 2) != 0)
    v13 = STACK[0x44C];
  LODWORD(STACK[0x264]) = v13;
  v14 = STACK[0x3B4];
  if (!v12)
    v14 = STACK[0x3B0];
  LODWORD(STACK[0x24C]) = v14;
  v15 = STACK[0x688];
  if (!v12)
    v15 = STACK[0x270];
  LODWORD(STACK[0x22C]) = v15;
  v16 = STACK[0x5E0];
  LODWORD(STACK[0x550]) = LODWORD(STACK[0x5E0]) ^ 0x43A8700A;
  LODWORD(STACK[0x5D0]) = STACK[0x4C0] & 0xFFFFFF80;
  v17 = LODWORD(STACK[0x3BC]) - LODWORD(STACK[0x404]);
  LODWORD(STACK[0x4A0]) = v17;
  LODWORD(STACK[0x44C]) = LODWORD(STACK[0x398]) ^ v17;
  LODWORD(STACK[0x3BC]) = LODWORD(STACK[0x3DC]) ^ 0x8DB65C66;
  LODWORD(STACK[0x3B4]) = v16 ^ 0xE585D750;
  v18 = STACK[0xB50];
  STACK[0x688] = (v6 + 276832913) | 0xE90340C8;
  v19 = STACK[0x688] + a5 + ((unint64_t)(a5 < v5) << 32) - 4286669719u;
  v20 = 0xB3D5C9433319E527 * (*(_QWORD *)(v18 + 8 * v19) ^ 0x9696969696969696)
      - ((0x67AB92866633CA4ELL * (*(_QWORD *)(v18 + 8 * v19) ^ 0x9696969696969696)) & 0x72185C3632598C32)
      + 0x390C2E1B192CC619;
  v21 = ((2 * ((a4 ^ 0x993F631A18F2C67CLL ^ v20) + v19)) & 0xB7F7ED957EF6FAE8)
      + (((a4 ^ 0x993F631A18F2C67CLL ^ v20) + v19) ^ 0xDBFBF6CABF7B7D74);
  v22 = (((v21 + 0x240409354084828CLL) >> 32) ^ 0x6F7FF7FFA2CB3CBALL)
      + v21
      + (((v21 + 0x240409354084828CLL) >> 31) & 0x145967974);
  v23 = (((v22 - 0x4B7BEECA6246BA2ELL) >> 16) ^ 0x5F7E4EE75745F87FLL)
      + v22
      + (((v22 - 0x4B7BEECA6246BA2ELL) >> 15) & 0x9DCEAE8BF0FELL);
  v24 = (((v23 + 0x5505C24E46734D53) >> 8) ^ 0xDFBFFEFFEB3FFFC7)
      + v23
      + (((v23 + 0x5505C24E46734D53) >> 7) & 0x17FFDFFD67FFF8ELL);
  v25 = ((2 * (v24 + 1530088844)) & 0x5DFAFF7E) + ((v24 + 1530088844) ^ 0xAEFD7FBF);
  v26 = v24 - ((2 * v24 + 0x1E77A7FC3B25082CLL) & 0xFFF37839D519554ALL) + 0xF35901B081F2EBBLL;
  v27 = ((2 * ((v20 ^ 0x46F59207F3A06CBCLL ^ v26) + v19)) & 0x9DBDBFFDE7FFFF48)
      + (((v20 ^ 0x46F59207F3A06CBCLL ^ v26) + v19) ^ 0xCEDEDFFEF3FFFFA4);
  v28 = (((v27 + 0x312120010C00005CLL) >> 32) ^ 0xFFEE7CFF77FBDF6DLL)
      + v27
      + (((v27 + 0x312120010C00005CLL) >> 31) & 0xEFF7BEDA);
  v29 = (((v28 + 0x3132A301940420EFLL) >> 16) ^ 0xAFBAEDBADFFF7BDDLL)
      + v28
      + (((v28 + 0x3132A301940420EFLL) >> 15) & 0x1DB75BFFEF7BALL);
  v30 = (((v29 - 0x7E884AB94BFB5AEELL) >> 8) ^ 0x76EFE7EDEF777EF9)
      + v29
      + (((v29 - 0x7E884AB94BFB5AEELL) >> 7) & 0x1DFCFDBDEEEFDF2);
  v31 = ((2 * (v30 - 997382631)) & 0xFFEFF7D4) + ((v30 - 997382631) ^ 0xFFF7FBEA);
  v32 = v31 - ((2 * v31 - 1032896842) & 0xB2B18B50);
  v33 = v30 - ((2 * v30 + 0x48FBBC110DD8B946) & 0x54ACBAA0C4378886) + 0x4ED43B58E90820E6;
  v34 = ((2 * ((v20 ^ 0x135A734B7B37025ALL ^ v33) + v19)) & 0xD765FDF2FD9ED6BELL)
      + (((v20 ^ 0x135A734B7B37025ALL ^ v33) + v19) ^ 0x6BB2FEF97ECF6B5FLL);
  v35 = (((v34 - 0x6BB2FEF97ECF6B5FLL) >> 32) ^ 0xD3FFE7FECB31FF7FLL)
      + v34
      + (((v34 - 0x6BB2FEF97ECF6B5FLL) >> 31) & 0x19663FEFELL);
  v36 = (((v35 - 0x3FB2E6F84A016ADELL) >> 16) ^ 0x8CECFCFBE6EB7FC9)
      + v35
      + (((v35 - 0x3FB2E6F84A016ADELL) >> 15) & 0x1F9F7CDD6FF92);
  v37 = (((v36 + 0x33601C0BCF131559) >> 8) ^ 0x1D7CAFEFFDDFF7FDLL)
      + v36
      + (((v36 + 0x33601C0BCF131559) >> 7) & 0xF95FDFFBBFEFFALL);
  LODWORD(v20) = ((2 * (v37 - 785179300)) & 0xDFE4FFFE) + ((v37 - 785179300) ^ 0x6FF27FFF);
  return ((uint64_t (*)(_QWORD, _QWORD))((char *)*(&off_1002C8B50
                                                           + ((185 * ((a5 & 0xFFFFFFFE) != v5 - 1)) ^ v6))
                                                 - 12))(a1 ^ v26 ^ v33 ^ 0x89496E83 ^ ((_DWORD)v37- ((2 * (_DWORD)v37 + 656713676) & 0x3BC00CA)- 1787800501), a2 ^ (v25 - ((2 * v25 + 610547468) & 0x34586B1A) - 866234093) ^ (v32 + 982541571) ^ 0x910BB527 ^ ((_DWORD)v20 - ((2 * (_DWORD)v20 - 495307124) & 0xA4FE8A04) - 1011064760));
}

void sub_10011EC94()
{
  JUMPOUT(0x10011E5E4);
}

#error "100121B68: call analysis failed (funcsize=1962)"

void sub_100121B6C()
{
  JUMPOUT(0x100121048);
}

uint64_t sub_100121B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a66;
  int a67;
  int a68;
  int a69;
  int a71;
  int v71;
  uint64_t v72;
  unsigned int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  int v100;
  unsigned int v101;

  LODWORD(STACK[0x570]) = LODWORD(STACK[0x3C0]) ^ LODWORD(STACK[0x4A0]);
  v73 = LODWORD(STACK[0x678]) | 0x92D8C8F0;
  LODWORD(STACK[0x3C4]) = (LODWORD(STACK[0x20C]) - LODWORD(STACK[0x230])) ^ LODWORD(STACK[0x3C8]) ^ (LODWORD(STACK[0x204]) - LODWORD(STACK[0x210]));
  LODWORD(STACK[0x3C8]) = LODWORD(STACK[0x368]) ^ LODWORD(STACK[0x310]) ^ v73;
  LODWORD(STACK[0x670]) = a71 - LODWORD(STACK[0x200]);
  LODWORD(STACK[0x230]) = a68 - a69;
  LODWORD(STACK[0x660]) = a66 - a67;
  LODWORD(STACK[0x4A0]) = LODWORD(STACK[0x498]) ^ 0x6FB3F18C;
  LODWORD(STACK[0x3C0]) = LODWORD(STACK[0x300]) ^ 0xDE94D241;
  LODWORD(STACK[0x200]) = LODWORD(STACK[0x378]) ^ 0x246D821D;
  v74 = a4
      - 319735164
      + ((unint64_t)(a4 < (a1 ^ 0x7E6) + 319734378) << 32);
  v75 = 0xB3D5C9433319E527 * (*(_QWORD *)(STACK[0xB50] + 8 * v74) ^ 0x9696969696969696)
      - 0x171AC590B41C3E09
      - ((0x67AB92866633CA4ELL * (*(_QWORD *)(STACK[0xB50] + 8 * v74) ^ 0x9696969696969696)) & 0xD1CA74DE97C783EELL);
  v76 = ((2 * ((v72 ^ 0x5E2FE7BAF2925B87 ^ v75) + v74)) & 0xEF5BFB5FBFDD3FFELL)
      + (((v72 ^ 0x5E2FE7BAF2925B87 ^ v75) + v74) ^ 0x77ADFDAFDFEE9FFFLL);
  v77 = (((v76 - 0x77ADFDAFDFEE9FFFLL) >> 32) ^ 0x50DF556D67627FFFLL)
      + v76
      + (((v76 - 0x77ADFDAFDFEE9FFFLL) >> 31) & 0xCEC4FFFE);
  v78 = (((v77 + 0x3772ACE2B8AEE002) >> 16) ^ 0xD9B595F6AEF791BBLL)
      + v77
      + (((v77 + 0x3772ACE2B8AEE002) >> 15) & 0x12BED5DEF2376);
  v79 = v78 - ((2 * v78 - 0x4485D227EC916372) & 0x86E5B50450A5688ELL) + 0x212FF16E320A028ELL;
  v80 = 2
      * ((((v79 >> 8) ^ 0xC372DA822852B4) & (v79 ^ 0xC372DA822852B447))
       - ((2 * (((v79 >> 8) ^ 0xC372DA822852B4) & (v79 ^ 0xC372DA822852B447))) & 0x6A54BFAC633542))
      + 0x6A6A54BFAC633542;
  v81 = (v79 ^ 0xC3B1A858AA7AE6F3 ^ (v79 >> 8))
      + (v80 ^ 0xD5A7A74CC0BB5ADDLL)
      + 0x40320C0C93279061
      + ((2 * v80) & 0x7F9BE7E6D9B0DF3CLL ^ 0x5490A16658804A04);
  v82 = ((2 * v81) & 0xFEB17D1FBFFF77DELL) + (v81 ^ 0x7F58BE8FDFFFBBEFLL);
  LODWORD(v81) = v82 - ((2 * v82 + 39829164) & 0xE120D81C) + 1908427620;
  LODWORD(v80) = (((2 * v81) ^ 0xE120D81C) - ((2 * ((2 * v81) ^ 0xE120D81C)) & 0xEAC0DA94) - 178229942) & v71 ^ 0x5D002018;
  v83 = v80 - ((2 * (_DWORD)v80) & 0xA05E158);
  v84 = v82 - ((2 * v82 + 0x153AA43FC4BEF536) & 0x15A46F7EF76B4A80) + 0x256F89DF5E151FDBLL;
  v85 = ((2 * ((v75 ^ 0x62370DD0305664B7 ^ v84) + v74)) & 0x11FFBB6E79BB77FELL)
      + (((v75 ^ 0x62370DD0305664B7 ^ v84) + v74) ^ 0x88FFDDB73CDDBBFFLL);
  v86 = (((v85 + 0x77002248C3224401) >> 32) ^ 0xF2FEAFF0E3FF17ECLL)
      + v85
      + (((v85 + 0x77002248C3224401) >> 31) & 0x1C7FE2FD8);
  v87 = (((v86 - 0x7BFE8DA820DCD3EBLL) >> 16) ^ 0x37F7BBBEFBDB7CEBLL)
      + v86
      + (((v86 - 0x7BFE8DA820DCD3EBLL) >> 15) & 0x1777DF7B6F9D6);
  v88 = (((v87 + 0x4C09B698E347AF2ALL) >> 8) ^ 0x7E7E5DFE6D6DFDD7)
      + v87
      + (((v87 + 0x4C09B698E347AF2ALL) >> 7) & 0xFCBBFCDADBFBAELL);
  v89 = v88 - ((2 * v88 - 1374512848) & 0xA6D22886) - 1435344677;
  v90 = (((2 * v89) ^ 0xA6D22886) - ((2 * ((2 * v89) ^ 0xA6D22886)) & 0xDCBF57C4) - 295719965) & v71 ^ v89;
  v91 = v88 - ((2 * v88 - 0x30FD2D6B8F8E3046) & 0x9A12917A9B1C6096) + 0x348AB20785C71828;
  v92 = v75 ^ 0xE8E53A6F4BE3C1F7;
  v93 = (v75 ^ 0xE8E53A6F4BE3C1F7) + (v75 ^ 0x5A138D2DF9920E43 ^ v91) + 1;
  v94 = ((0x3EE9D3CB2213F095 - v88 - ((0x30FD2D6B8F8E3046 - 2 * v88) & 0x4CD67A2AB499B0E4)) ^ v91 ^ 0x2CA44C054EFCD525 ^ (v93 - ((2 * v93) & 0x8F8C735AB27C7A38) + 0x47C639AD593E3D1CLL))
      + v74;
  v95 = v92 + (v94 ^ 0x5DA93FBF6ED3BFBFLL) + ((2 * v94) & 0xBB527F7EDDA77F7ELL) - 0x5DA93FBF6ED3BFBFLL;
  v96 = (((((2 * v95) & 0xEFD3B73FFDDD3AF6) + (v95 ^ 0xF7E9DB9FFEEE9D7BLL) + 0x816246001116285) >> 32) ^ 0xFFBF37733F5DEE9BLL)
      + ((2 * v95) & 0xEFD3B73FFDDD3AF6)
      + (v95 ^ 0xF7E9DB9FFEEE9D7BLL)
      + (((((2 * v95) & 0xEFD3B73FFDDD3AF6) + (v95 ^ 0xF7E9DB9FFEEE9D7BLL) + 0x816246001116285) >> 31) & 0x7EBBDD36);
  v97 = (((v96 + 0x856ECECC1B373EALL) >> 16) ^ 0xFF3FFDBBFF71F776)
      + v96
      + (((v96 + 0x856ECECC1B373EALL) >> 15) & 0x1FB77FEE3EEECLL);
  v98 = (((v97 + 0x916EF30C2417C74) >> 8) ^ 0xBE3EFAAB7FFA7FAFLL)
      + v97
      + (((v97 + 0x916EF30C2417C74) >> 7) & 0x7DF556FFF4FF5ELL);
  v99 = (v98 - ((2 * v98 - 0x6A5016F57B720676) & 0xD3D37689F9A651ECLL) - 0x4B3E5035C0E5DA45) ^ 0x69E9BB44FCD328F6;
  v100 = v99 - ((2 * v99 - 1033947510) & 0xB327EDB8) + 985895457;
  v101 = (((2 * v100) ^ 0xB327EDB8) - ((2 * ((2 * v100) ^ 0xB327EDB8)) & 0x828933D4) - 1052468757) & v71 ^ 0xC30247EC;
  LODWORD(STACK[0x688]) ^= v81 ^ (v83 + 622261423) ^ v90 ^ 0x5E2EA1C6 ^ (((2 * v101) | 0x8AA7DC18) - v101 - 1163128332) ^ v100;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + (int)((577 * ((a4 - 319735163) > 1)) ^ a1)) - 4))(a1, v90, 0xD0C0EE857BD0D0FALL, a4, 0x15A46F7EF76B4A80, 2 * v99, v83, 319735164, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_1001227C0()
{
  JUMPOUT(0x100121CB4);
}

#error "1001246A8: call analysis failed (funcsize=1218)"

void sub_1001246AC()
{
  JUMPOUT(0x100123C6CLL);
}

uint64_t sub_1001246B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int a65;
  int a67;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  int v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;

  v79 = STACK[0x3A4];
  if ((STACK[0x5C0] & 2) != 0)
    v79 = STACK[0x3A0];
  LODWORD(STACK[0x39C]) = v79;
  LODWORD(STACK[0x3A0]) = a74 ^ LODWORD(STACK[0x4C0]);
  LODWORD(STACK[0x3A4]) = a72 - a73;
  LODWORD(STACK[0x670]) = a75 - LODWORD(STACK[0x398]);
  LODWORD(STACK[0x364]) ^= LODWORD(STACK[0x550]) ^ HIDWORD(a59) ^ a60 ^ v75 ^ a71 ^ a70 ^ a65 ^ (a64 + a63 - 1);
  v80 = HIDWORD(a57) ^ LODWORD(STACK[0x510]) ^ a58 ^ v76 ^ LODWORD(STACK[0x310]) ^ a69 ^ a67 ^ HIDWORD(a60) ^ (a59 + HIDWORD(a58) - 2);
  LODWORD(STACK[0x310]) = v80;
  LODWORD(STACK[0x398]) = v80 ^ 0xEEC584DB;
  v81 = a5 - 721574501 + ((unint64_t)(a5 < 0x2B025452) << 32) + 1555;
  v82 = ((v78 - 1295) | 0x4C0) ^ 0x9696969696969352 ^ *(_QWORD *)(STACK[0xB50] + 8 * v81);
  v83 = 0xB3D5C9433319E527 * v82 - ((0x67AB92866633CA4ELL * v82) & 0x8F630D5FD182B440) + 0x47B186AFE8C15A20;
  v84 = ((2 * ((v77 ^ 0x3ED91CA827D2F9E2 ^ v83) + v81)) & 0xBFEEE93CCFFFC85ELL)
      + (((v77 ^ 0x3ED91CA827D2F9E2 ^ v83) + v81) ^ 0x5FF7749E67FFE42FLL);
  v85 = (((v84 - 0x5FF7749E67FFE42FLL) >> 32) ^ 0x4FAFFBFF36F7DFABLL)
      + v84
      + (((v84 - 0x5FF7749E67FFE42FLL) >> 31) & 0x6DEFBF56);
  v86 = (((v85 + 0x50588F6261083C26) >> 16) ^ 0x7ED7B5FEE7F5CBD7)
      + v85
      + (((v85 + 0x50588F6261083C26) >> 15) & 0x16BFDCFEB97AELL);
  v87 = (((v86 - 0x2E7F269C86ED8FB1) >> 8) ^ 0xFFDFCCAF78BFDF2FLL)
      + v86
      + (((v86 - 0x2E7F269C86ED8FB1) >> 7) & 0x1BF995EF17FBE5ELL);
  v88 = v87 - 2 * ((v87 + 0x11A10CB400529120) & 0x3C390CEA348FE9BFLL ^ v87 & 0xC) - 0x7225E661CB1D852DLL;
  v89 = (v88 ^ 0xBC390CEA348FE9B3)
      - ((2 * (v88 ^ 0xBC390CEA348FE9B3) + 0x13EC215F84BE6D14) & 0x16AAEAD79949FF22)
      - 0x5AB479E470FBC9E5;
  LODWORD(v87) = ((4 * v89) ^ 0x3293FE44) - 2 * (((4 * v89) ^ 0x3293FE44) & 0x51FD91E8 ^ (4 * v89) & 8) + 1375572451;
  v90 = ((2 * ((v83 ^ 0xCCE4F3C42465A5B1 ^ v89) + v81)) & 0x9FFBCCCADFB95AF6)
      + (((v83 ^ 0xCCE4F3C42465A5B1 ^ v89) + v81) ^ 0xCFFDE6656FDCAD7BLL);
  v91 = (((v90 + 0x3002199A90235285) >> 32) ^ 0x6FFFFFAF577BDDDDLL)
      + v90
      + (((v90 + 0x3002199A90235285) >> 31) & 0xAEF7BBBA);
  v92 = (((v91 - 0x3FFDE614C7588B58) >> 16) ^ 0xBFFEBAFD9FFF76EFLL)
      + v91
      + (((v91 - 0x3FFDE614C7588B58) >> 15) & 0x175FB3FFEEDDELL);
  v93 = (((v92 + 0x35EED98A7FDB9) >> 8) ^ 0x7FFFFE61B3DFDBBFLL)
      + v92
      + (((v92 + 0x35EED98A7FDB9) >> 7) & 0x1FFFCC367BFB77ELL);
  v94 = (v93 - ((2 * v93 + 0x6C117C99043F4) & 0x32ED558B5582B78ELL) + 0x197A0B518F897DC1) ^ 0x9976AAC5AAC15BC7;
  v95 = v94 - ((2 * v94 + a2) & 0x57608B7892E7FA94) + 0x45A6566C0BD333D4;
  v96 = ((2 * ((v83 ^ 0x6C01C313A1B2A76ALL ^ v95) + v81)) & 0x7F7FDFFEDF77FB78)
      + (((v83 ^ 0x6C01C313A1B2A76ALL ^ v95) + v81) ^ 0xBFBFEFFF6FBBFDBCLL);
  v97 = (((v96 + 0x4040100090440244) >> 32) ^ 0x5585DEFFFDBEEEDALL)
      + v96
      + (((v96 + 0x4040100090440244) >> 31) & 0x1FB7DDDB4);
  v98 = (((v97 - 0x1545CEFF6D7AEC96) >> 16) ^ 0x73DFF5EFEF7DEE7ELL)
      + v97
      + (((v97 - 0x1545CEFF6D7AEC96) >> 15) & 0x1EBDFDEFBDCFCLL);
  v99 = (((v98 + 0x76DA3B10A30724ECLL) >> 8) ^ 0x9FFFDBFA537D7E7ALL)
      + v98
      + (((v98 + 0x76DA3B10A30724ECLL) >> 7) & 0x1FFB7F4A6FAFCF4);
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((118 * (a5 - 721572945 > 1)) ^ v78)) - 4))(((4 * ((_DWORD)v99 - ((2 * (_DWORD)v99 + 600947192) & 0x9E274784) - 520322882)) ^ 0x3C4E8F08) & 0x60EDE23C, a2, 721572946, 2348420007, a5 - 721572945, 118, v87 & 0x8A662110 ^ 0x82102201 | v87 & 0x100998C0, v89, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_10012524C()
{
  JUMPOUT(0x1001247F0);
}

uint64_t sub_10012525C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  int v69;
  int v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  int v84;
  int v85;
  int v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  int v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  int v111;
  int v112;
  int v113;
  BOOL v114;
  int v115;
  int v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  unint64_t v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  uint64_t v146;

  v72 = LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x260]);
  LODWORD(STACK[0x218]) -= LODWORD(STACK[0x240]);
  v73 = (v71 ^ 0xC4B876F2AEE1A5ECLL)
      + ((v71 >> 27) ^ 0x8C1C05001F0EBE11)
      + ((v71 >> 26) & 0xEEFFF3F76 ^ 0xFFFFFFFFD1E2C3DDLL)
      + 0x73E3FAE777FF9FBDLL;
  v74 = ((2 * v73) & 0xFBCFF357FBF9FCF2)
      + (v73 ^ 0xFDE7F9ABFDFCFE79)
      + (((((2 * v73) & 0xFBCFF357FBF9FCF2) + (v73 ^ 0xFDE7F9ABFDFCFE79) + 0x218065402030187) >> 14) ^ 0x948B208203420400)
      - (((((2 * v73) & 0xFBCFF357FBF9FCF2) + (v73 ^ 0xFDE7F9ABFDFCFE79) + 0x218065402030187) >> 13) & 0x1BEFBF97BF7FELL);
  v75 = v74
      + (((v74 + 0x6D8CE5D1FEC0FD87) >> 6) ^ 0xAC89292C4C4F300)
      - (((v74 + 0x6D8CE5D1FEC0FD87) >> 5) & 0x26EDADA767619FELL)
      + 2;
  v76 = v75 - ((2 * v75 - 0x3A7759818C07EAF6) & 0xD8948ED13E220BD8) + 0x4F0E9AA7D90D1071;
  v77 = ((2 * ((v76 ^ 0xEC4A47689F1105ECLL) + 0x301F1AB817992D55)) & 0x7EDEFFFFE717FFFELL)
      + (((v76 ^ 0xEC4A47689F1105ECLL) + 0x301F1AB817992D55) ^ 0xBF6F7FFFF38BFFFFLL);
  v78 = v77
      + (((v77 + 0x409080000C740001) >> 24) ^ 0x818182191644A8ACLL)
      - (((v77 + 0x409080000C740001) >> 23) & 0x1CDD376AEA6);
  v79 = v78
      + (((v78 - 0x40F1021909D0A8ABLL) >> 14) ^ 0x31C2C00104221121)
      - (((v78 - 0x40F1021909D0A8ABLL) >> 13) & 0x27FFDF7BBDDBCLL);
  v80 = v79
      + (((v79 - 0x72B3C21A0DF2B9CCLL) >> 6) ^ 0x6EEBFFFFCFF4FFBFLL)
      + (((v79 - 0x72B3C21A0DF2B9CCLL) >> 5) & 0x5D7FFFF9FE9FF7ELL);
  v81 = (((v80 - 0x3DEBE6028005979ELL) >> 27) ^ 0xE2F675CDFEFDFF9ELL)
      + v80
      + 2
      + (((v80 - 0x3DEBE6028005979ELL) >> 26) & 0x1BFDFBFF3CLL);
  v82 = (((v81 - 0x20E25BD07F03973ELL) >> 12) ^ 0x53B7BD727AF5E3FBLL)
      + v81
      + (((v81 - 0x20E25BD07F03973ELL) >> 11) & 0xF7AE4F5EBC7F6);
  v83 = v82
      + (((v82 - 0x749A1942F9F97B39) >> 2) ^ 0x9880008100202070)
      - (((v82 - 0x749A1942F9F97B39) >> 1) & 0x4EFFFEFDFFBFBF1ELL);
  v84 = 2 * (v83 + 1) + 197970092;
  LODWORD(v82) = (4 * (v83 + 1 - (v84 & 0x3906A286)) - 1985554844) ^ 0x720D450C;
  v85 = (((v82 - ((2 * v82) & 0x89F10C60) - 990345678) & 0x102409D0 ^ 0x643008CF) - 1) & 0x742409D6 | (v82 - ((2 * v82) & 0x89F10C60) - 990345678) & 0x8A4BB000;
  v86 = v83 + 1 - (v84 & 0x9AF3E780) + 1398822934;
  v87 = v83
      + 1
      + (((v83 + 0x66A6B0FC61290A5) >> 30) ^ 0xF419401214185816)
      - (((v83 + 0x66A6B0FC61290A5) >> 29) & 0x3D7CF4FD2);
  v88 = v87
      + (((v87 + 0x12512AFDB1FA388ELL) >> 12) ^ 0x1204000019B18008)
      - (((v87 + 0x12512AFDB1FA388ELL) >> 11) & 0x17FFFFCC9CFFEELL);
  v89 = v88
      + (((v88 + 0x4D2AFD9848B886) >> 7) ^ 0x200140C823404440)
      - (((v88 + 0x4D2AFD9848B886) >> 6) & 0x3FD7E6FB97F777ELL)
      + 3;
  v90 = v89 - ((2 * v89 + 0x4097D46AEA10E886) & 0x5F5BE97619D64C8CLL) - 0x7006210F7E0C6577;
  v91 = ((2 * ((v90 ^ 0xAFADF4BB0CEB2646) + 0x3DEAA251E4C860FCLL)) & 0xFF9FECFFFEF677EELL)
      + (((v90 ^ 0xAFADF4BB0CEB2646) + 0x3DEAA251E4C860FCLL) ^ 0xFFCFF67FFF7B3BF7);
  v92 = (((v91 + 0x3009800084C409) >> 31) ^ 0x7FF7F7FBFF39FFAALL)
      + v91
      + (((v91 + 0x3009800084C409) >> 30) & 0x3FE73FF54);
  v93 = (((v92 - 0x7FC7EE7BFEB53BA1) >> 8) ^ 0x5FB7F7E3FD79FCDFLL)
      + v92
      + (((v92 - 0x7FC7EE7BFEB53BA1) >> 7) & 0x16FEFC7FAF3F9BELL);
  v94 = (((v93 + 0x208019A003D0C780) >> 7) ^ 0x57DFD7F5FFFCB7FBLL)
      + v93
      + (((v93 + 0x208019A003D0C780) >> 6) & 0x3BFAFEBFFF96FF6);
  v95 = v94 - ((2 * v94 + 0x1140835407A81F0ALL) & 0x5FFA12EBB67D3378) - 0x762B4E020ED56BFLL;
  v96 = (v95 ^ 0x11B1CAAB3693ED73)
      + ((v95 >> 30) ^ 0xB130A50846233AECLL)
      + ((v95 >> 29) & 0x7FE37DF7ELL ^ 0xFFFFFFFF73F9AAA7)
      + 0x4ECF5AF7FF1BEFC1;
  v97 = (((((2 * v96) & 0x97B4F4EDBF2FF7BALL) + (v96 ^ 0x4BDA7A76DF97FBDDLL) - 0x4BDA7A76DF97FBDDLL) >> 13) ^ 0xF0F677ABDBFFBFDFLL)
      + ((2 * v96) & 0x97B4F4EDBF2FF7BALL)
      + (v96 ^ 0x4BDA7A76DF97FBDDLL)
      + (((((2 * v96) & 0x97B4F4EDBF2FF7BALL) + (v96 ^ 0x4BDA7A76DF97FBDDLL) - 0x4BDA7A76DF97FBDDLL) >> 12) & 0xCEF57B7FF7FBELL);
  v98 = v97
      + (((v97 - 0x3CD0F222BB97BBBCLL) >> 2) ^ 0xAA904A024088411)
      - (((v97 - 0x3CD0F222BB97BBBCLL) >> 1) & 0x6AADF6BFB7EEF7DCLL)
      + 1;
  v99 = v98 - ((2 * v98 + 0x710C127A40BF8064) & 0x532F0CEC3CB27762) - 0x1DE2704CC147041DLL;
  v100 = (((4 * v99) ^ 0x7964EEC4) - ((2 * ((4 * v99) ^ 0x7964EEC4)) & 0x5DF4F30) + 49260440) & v70 ^ v99;
  v101 = ((2 * ((v99 ^ 0x299786761E593BB1) - 0x3181FFAFEC090B44)) & 0x5F19FD7D37FBFAFCLL)
       + (((v99 ^ 0x299786761E593BB1) - 0x3181FFAFEC090B44) ^ 0xAF8CFEBE9BFDFD7ELL);
  v102 = v101
       + (((v101 + 0x5073014164020282) >> 25) ^ 0x8032B3140C1)
       - (((v101 + 0x5073014164020282) >> 24) & 0xF9A99D7E7CLL);
  v103 = v102
       + (((v102 + 0x5072F93E38D0C1C1) >> 9) ^ 0x775FF9FD3EFDC7F7)
       + (((v102 + 0x5072F93E38D0C1C1) >> 8) & 0xBFF3FA7DFB8FEELL);
  v104 = v103
       + ((v103 - 0x26ED00BF062D0636) & 0xFF37B59E6FBBD386)
       + (((v103 - 0x26ED00BF062D0636) >> 1) ^ 0x7F9BDACF37DDE9C3)
       + 1;
  v105 = v104 - ((2 * v104 - 0x4D11B71C7C15DFF4) & 0xD73D8A47418A5C3CLL) - 0x3AEA166A9D45C1DCLL;
  v106 = ((2 * v105) ^ 0xD73D8A47418A5C3CLL)
       - ((2 * ((2 * v105) ^ 0xD73D8A47418A5C3CLL)) & 0x4C268AF1CE9FC8E8)
       - 0x19ECBA8718B01B8BLL;
  v107 = (v105 ^ 0x5362818AD05837D4)
       + (v106 & 0x71F88952E13A3394 ^ 0x5EAAB68E57D55FFALL)
       + ((2 * v106) & 0x617102A540346708 ^ 0x402002A140144008)
       - 0x3EBAB7DEB6DF7FEELL;
  v108 = ((2 * v107) & 0x7FFD3EEB23AFF7FELL)
       + (v107 ^ 0xBFFE9F7591D7FBFFLL)
       + (((((2 * v107) & 0x7FFD3EEB23AFF7FELL) + (v107 ^ 0xBFFE9F7591D7FBFFLL) + 0x4001608A6E280401) >> 24) ^ 0x80B24010CF3000BDLL)
       - (((((2 * v107) & 0x7FFD3EEB23AFF7FELL) + (v107 ^ 0xBFFE9F7591D7FBFFLL) + 0x4001608A6E280401) >> 23) & 0x1DE619FFE84);
  v109 = v108
       + (((v108 - 0x40B0DF866107FCBCLL) >> 15) ^ 0x9A02190101218403)
       - (((v108 - 0x40B0DF866107FCBCLL) >> 14) & 0x3CDFDFDBCF7F8);
  v110 = v109
       + (((v109 + 0x254D07789DD67F41) >> 8) ^ 0xB9AFBEBDBBEF5FBELL)
       + (((v109 + 0x254D07789DD67F41) >> 7) & 0x15F7D7B77DEBF7CLL);
  v111 = STACK[0x4A0];
  LODWORD(v76) = LODWORD(STACK[0x510]) ^ a68 ^ LODWORD(STACK[0x4A0]);
  v112 = ((v76 & 0x95B91442 ^ 0x1080440) - ((2 * (v76 & 0x95B91442 ^ 0x1080440)) & 0xA320000) - 1927601391) ^ 0x8753E219;
  LODWORD(v109) = (v112 - ((2 * v112) & 0xA4268000) + 1376993317) ^ 0x5C62816D | ((v76 & 0x6A46EBBD ^ 0x22060108)
                                                                                - ((2 * (v76 & 0x6A46EBBD ^ 0x22060108)) & 0x80844470)
                                                                                - 999149000) ^ 0xAE709BAD;
  LODWORD(v109) = v109 - ((2 * v109) & 0xC890CBF4) - 465017350;
  v113 = ((4 * v109) ^ 0x912197E8) + 630090224 - ((2 * ((4 * v109) ^ 0x912197E8)) & 0x4B1CD3F0) + 11;
  LODWORD(v76) = (v76 & 0x10 | (32 * (((v76 & 0x10) >> 4) & 1)) | 0x7EF8DFC7) ^ 0x20;
  v114 = ((v113 ^ 0x258E69F0) & ((_DWORD)v76 - 2130239447)) == ((2 * ((v113 ^ 0x258E69F0) & ((_DWORD)v76 - 2130239447))) & 0x80590FB0);
  v115 = v110 + 2;
  v116 = 2 * (v110 + 2);
  v117 = (((v110 - 0x31E2CD829BD90196) >> 29) ^ 0xFB77BBBEEFD06FEDLL)
       + v110
       + 2
       + (((v110 - 0x31E2CD829BD90196) >> 28) & 0xDDFA0DFDALL);
  v118 = v117
       + (((v117 - 0x2D5A89418BA97185) >> 9) ^ 0x306104CCE0487C1DLL)
       - (((v117 - 0x2D5A89418BA97185) >> 8) & 0x3DF6663F6F07C4);
  LODWORD(v110) = v118
                + (((v118 - 0x5DBB8E0E6BF1EDA2) >> 5) ^ 0xFBF751DF)
                + (((v118 - 0x5DBB8E0E6BF1EDA2) >> 4) & 0xF7EEA3BE)
                + 1;
  v119 = 2 * v110 + 271417596;
  v120 = v110 - (v119 & 0x14829DF8) + 576196474;
  v121 = (4 * (v115 - ((v116 + 63848194) & 0x791D214)) + 381690412) ^ 0x8F23A428;
  v122 = v121 - ((2 * v121) & 0x8E20DD28) + 1192259221;
  LODWORD(STACK[0x260]) = v122;
  v123 = v122 & 0x2289850 ^ 0x1808047;
  LODWORD(v110) = (4 * (v110 - (v119 & 0x19166042)) + 310887036) ^ 0xB22CC084;
  LODWORD(v110) = (v110 - ((2 * v110) & 0x573395A8) - 1415984428) & 0x9A6FB9D0 ^ 0x8A6BB900;
  v124 = ((2 * v110) & 0x24585220) - v110 + 742643400;
  v125 = ((2 * v113) & 0x20DC63A0 ^ 0x1C43A0) + (v113 & 0x9A6FB9D0 ^ 0x75F05E09);
  v126 = (v109 & 0xFFFFFFEF ^ 0x5134D043)
       + (v109 & 0x1323CBC9 ^ 0x2030B98)
       - ((v109 & 0xFFFFFFEF ^ 0x5134D043) & 0x1323CBC9);
  v127 = v76 - 1614284486;
  v128 = -1648772888 - v76;
  if (v114)
    v128 = v127;
  v129 = (((4 * LODWORD(STACK[0x498])) ^ 0x7EB18DB8)
        - 950114692
        - ((2 * ((4 * LODWORD(STACK[0x498])) ^ 0x7EB18DB8)) & 0x8EBCEC80)
        + 4038) & 0x9A6FB9D0 ^ 0xB65E3311;
  v130 = v111 ^ a68 ^ (((2 * v129) & 0x74CA3480) - v129 + 94037393) ^ v126 ^ LODWORD(STACK[0x670]) ^ (v125 + v128 - ((2 * (v125 + v128) + 1451318828) & 0x6063545A) + 460478787);
  LODWORD(STACK[0x510]) = LODWORD(STACK[0x360]) ^ 0x9FE55ECF;
  LODWORD(STACK[0x520]) = LODWORD(STACK[0x364]) ^ 0xB8B43950;
  LODWORD(STACK[0x250]) = v123 - 1;
  v131 = v130 ^ v69 ^ v86 ^ v85 ^ v100 ^ v120 ^ v124 & 0xFFFFFFF0;
  LODWORD(STACK[0x240]) = v131;
  LODWORD(STACK[0x394]) = v131 ^ 0x15E7AEC6;
  v132 = LODWORD(STACK[0x244]) ^ 0x28;
  LODWORD(STACK[0x668]) = LODWORD(STACK[0x530]) ^ 0x90C31DE9;
  v133 = LODWORD(STACK[0x374]) ^ 2;
  LODWORD(STACK[0x670]) = LODWORD(STACK[0x570]) ^ 0x32959A43;
  v134 = LODWORD(STACK[0x298]) ^ LODWORD(STACK[0x36C]) ^ 0x8D6C5169;
  LODWORD(STACK[0x4B0]) = v72;
  LODWORD(STACK[0x660]) = v72 ^ 0xF727DBA8;
  v135 = STACK[0xB58];
  LODWORD(STACK[0x5C0]) = v68 - 1036;
  v136 = (v68 - 1515228593) ^ 0xA5AF7813;
  v137 = 2 * ((v136 & STACK[0x5F0]) - ((2 * (v136 & STACK[0x5F0])) & 0x56406AD8)) + 1447062232;
  v138 = ((v137 ^ 0x56406AD8) + 188199512 - 2 * ((v137 ^ 0x56406AD8) & 0xB37B25C ^ v137 & 4)) ^ 0xA5AF7813;
  v139 = (v138 ^ 0xAE98CA4B) & STACK[0x668];
  v140 = (((((v139 - ((2 * v139) & 0x60) + 48) & 0xF5 ^ 0x37C969D5) & 0x1A1)
         - 844003329
         + ((((v139 - ((2 * v139) & 0x60) + 48) & 0xF5 ^ 0x37C969D5) & 0x5E | v139 & 0xA) ^ 0x82045)) ^ 0xCDB9A9A1) >> LODWORD(STACK[0x678]);
  v141 = (v140 - ((2 * v140) & 0xC) - 122) ^ 0xFFFFFF86 | (((v138 ^ 0x4B) << v133)
                                                         - 8 * ((v138 ^ 0x4B) << v133 >> 2)
                                                         + 124) ^ 0x7C;
  v142 = (2 * ((STACK[0x608] & 0x1AB4AEAE) - ((2 * (STACK[0x608] & 0x1AB4AEAE)) & 0x4EC178E4)) - 826181404) ^ 0xCEC178E4;
  v143 = (v142 - ((2 * v142) & 0xCDD10898) + 1726514252) ^ 0x7C5C2AE2;
  v144 = (((v143 & STACK[0x670]) + 370888427 - ((2 * (v143 & STACK[0x670])) & 0x2C369DD6)) ^ 0x161B4EEB) >> LODWORD(STACK[0x680]);
  v145 = (((v143 & STACK[0x660]) + 1568415224 - ((2 * (v143 & STACK[0x660])) & 0xBAF83BF0)) ^ 0x5D7C1DF8) << LODWORD(STACK[0x640]);
  v146 = 4 * (v132 ^ (v141 - ((2 * v141) & 0x20) - 112));
  *(_DWORD *)(STACK[0xB30] + v146) = LODWORD(STACK[0x5E0]) ^ LODWORD(STACK[0x5D0]) ^ (v145
                                                                                    - ((2 * v145) & 0x1D314FD8)
                                                                                    - 1902598164) ^ (v144 - ((2 * v144) & 0x7A2C08D0) + 1024853096) ^ 0x4045C015;
  *(_DWORD *)(v135 + v146) = v134 ^ 0xA1F699C6;
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50
                                                    + ((31
                                                      * (((v136 - 1515227557 - ((2 * v136 + 2) & 0x4B5EF026) + 441) ^ 0xA5AF7800) > 0xFF)) ^ v68))
                                          - 8))(3468785892);
}

#error "100126B8C: too big function (funcsize=0)"

uint64_t sub_10013ADAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((dword_1003059C4 == 1197784504) * ((292 * (v7 ^ 0x92) - 1096) ^ (v7 - 29))) ^ v7))
                            - 4))();
}

uint64_t sub_10013AE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  kern_return_t v9;

  v9 = IOMainPort(0, (mach_port_t *)&STACK[0x99C]);
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((223
                                          * ((((v7 + 45) ^ ((((v7 - 1540196730) & 0x5BCD8FCD ^ 0xFE736112) & (2 * v9))
                                                          + (v9 ^ 0x7F39B3EF) == 2134488047)) & 1) == 0)) ^ v7))
                            - 8))();
}

uint64_t sub_10013AE7C()
{
  uint64_t v0;
  int v1;
  _BOOL4 v2;

  v2 = IOServiceMatching((const char *)&STACK[0x15E1]) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v2 * (v1 + 1086)) ^ v1)) - 8))();
}

uint64_t sub_10013AEAC(const __CFDictionary *a1)
{
  uint64_t v1;
  int v2;
  kern_return_t MatchingServices;

  MatchingServices = IOServiceGetMatchingServices(STACK[0x99C], a1, (io_iterator_t *)&STACK[0xA2C]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1570
                                          * (((2 * MatchingServices) & 0xEEEEEFF2) + (MatchingServices ^ 0x777777F9) == 2004318201)) ^ v2))
                            - ((77 * (v2 ^ 0xA4) + 451745605) & 0xE512EEED)
                            + 1733))();
}

uint64_t sub_10013AF24()
{
  uint64_t v0;
  int v1;
  io_object_t v2;

  v2 = IOIteratorNext(STACK[0xA2C]);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((930
                                * (((v1 ^ (((2 * v2) & 0xEFF9BEDC) + (v2 ^ ((v1 ^ 0x657) + 2013059233)) == 2013060974)) & 1) == 0)) ^ v1)))();
}

uint64_t sub_10013AF88@<X0>(int a1@<W8>)
{
  int v1;
  kern_return_t v2;

  v2 = IOServiceOpen(a1 + (((v1 ^ 0x438) - 1058) | 0x64D) - 2013062715, mach_task_self_, 0, (io_connect_t *)&STACK[0x9FC]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((108 * (((2 * v2) & 0x7DFFFEFE) + (v2 ^ 0x3EFFFF7F) == 1056964479)) ^ v1 ^ 0x438))
                            - 12))();
}

uint64_t sub_10013B00C()
{
  io_object_t v0;
  int v1;
  uint64_t v2;

  dword_1003059C4 = (v1 ^ 0x26F ^ LODWORD(STACK[0x9FC]) ^ 0x47F7FB70)
                  + ((2 * LODWORD(STACK[0x9FC])) & 0x8FEFFB7A)
                  - 9650181;
  IOObjectRelease(v0);
  v2 = IOObjectRelease(STACK[0xA2C]);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50
                                                    + (((dword_1003059C4 == 1197784504) * ((146 * (v1 ^ 0x4AA)) ^ 0x2F9)) ^ ((v1 ^ 0x26F) - 1591)))
                                          - 4))(v2);
}

void sub_10013B0B4()
{
  unint64_t v0;

  STACK[0x8A0] = v0;
  JUMPOUT(0x10013B61CLL);
}

uint64_t sub_10013B0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  __int16 v8;
  uint64_t v9;
  int v10;
  _OWORD *v11;
  char *v12;

  v11 = (_OWORD *)(STACK[0x648] + 17);
  v12 = (char *)&STACK[0xBB0] + v9;
  *(_DWORD *)v12 = v10 ^ 0x765D19C3;
  *((_WORD *)v12 + 2) = v8 - 13854;
  *(_OWORD *)((char *)&STACK[0xBB0] + v9 + 6) = *v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((543 * (((v7 + 136739231) & 0xF7D983FE ^ 0x21ELL) == 16)) ^ v7))
                            - 8))();
}

uint64_t sub_10013B14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * (((v7 - 133) * (v8 != 1164808565)) ^ v7)))();
}

uint64_t sub_10013B174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((v9 ^ 0x2A9)
                                * ((v10 | ((unint64_t)(v10 < v8) << 32)) != 1164808565)) | v7)))();
}

uint64_t sub_10013B1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;

  v14 = v10 < v8;
  *(_BYTE *)(v12 + v9 - 0x3FC4A616BA58A379) = *((_BYTE *)&STACK[0xBB0] + v11 - 0x5B21EAA23382D7BFLL) - 40;
  if (v14 == v13 - 0x6B477BDC80FE3E06 < v8)
    v14 = v13 - 0x6B477BDC80FE3E06 < v10;
  return (*(uint64_t (**)(void))(a7 + 8 * (v7 | (16 * v14))))();
}

uint64_t sub_10013B284@<X0>(_DWORD *a1@<X2>, void *a2@<X4>, uint64_t a3@<X6>, int a4@<W8>)
{
  int v4;
  unint64_t v5;
  int v6;
  kern_return_t v8;
  unint64_t v9;
  _BOOL4 v10;

  a1[30] = v6 - 1164808565;
  STACK[0x750] = 16;
  v8 = IOConnectCallStructMethod(a4 - 1197784504, 0x20u, a1, 0x7CuLL, a2, &STACK[0x750]);
  v9 = STACK[0x750];
  STACK[0x8A0] = v5;
  v10 = v9 == ((v4 + 972) | 0x48u) - 1725 && v8 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((1622 * v10) ^ v4)) - 12))();
}

uint64_t sub_10013B310()
{
  int v0;
  _BOOL4 v2;

  v2 = (*(_DWORD *)(STACK[0x688] + 96) & 2) == ((((v0 - 1610570414) | 0x4B14390) + 1531845054) ^ 0x559)
    || LODWORD(STACK[0x82C]) != 458470046;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((466 * v2) ^ (v0 + 581))) - 4))();
}

uint64_t sub_10013B3F8()
{
  int v0;
  _BYTE *v1;
  _BOOL4 v2;

  STACK[0x850] = 256;
  v1 = (_BYTE *)STACK[0x688];
  LOBYTE(STACK[0xC00]) = *(_BYTE *)(STACK[0x688] + 12) ^ 0x35;
  LOBYTE(STACK[0xC01]) = v1[13] ^ 0x35;
  LOBYTE(STACK[0xC02]) = v1[14] ^ 0x35;
  LOBYTE(STACK[0xC03]) = v1[15] ^ 0x35;
  LOBYTE(STACK[0xC04]) = v1[16] ^ 0x35;
  LOBYTE(STACK[0xC05]) = v1[17] ^ 0x35;
  LOBYTE(STACK[0xC06]) = v1[18] ^ (((v0 + 72) | 4) - 112);
  LOBYTE(STACK[0xC07]) = v1[19] ^ 0x35;
  LOBYTE(STACK[0xC08]) = v1[20] ^ 0x35;
  LOBYTE(STACK[0xC09]) = v1[21] ^ 0x35;
  LOBYTE(STACK[0xC0A]) = v1[22] ^ 0x35;
  LOBYTE(STACK[0xC0B]) = v1[23] ^ 0x35;
  LOBYTE(STACK[0xC0C]) = v1[24] ^ 0x35;
  LOBYTE(STACK[0xC0D]) = v1[25] ^ 0x35;
  LOBYTE(STACK[0xC0E]) = v1[26] ^ 0x35;
  LOBYTE(STACK[0xC0F]) = v1[27] ^ 0x35;
  LOBYTE(STACK[0xC10]) = v1[28] ^ 0x35;
  LOBYTE(STACK[0xC11]) = v1[29] ^ 0x35;
  LOBYTE(STACK[0xC12]) = v1[30] ^ 0x35;
  LOBYTE(STACK[0xC13]) = v1[31] ^ 0x35;
  LOBYTE(STACK[0xC14]) = v1[32] ^ 0x35;
  LOBYTE(STACK[0xC15]) = v1[33] ^ 0x35;
  LOBYTE(STACK[0xC16]) = v1[34] ^ 0x35;
  LOBYTE(STACK[0xC17]) = v1[35] ^ 0x35;
  LOBYTE(STACK[0xC18]) = v1[36] ^ 0x35;
  LOBYTE(STACK[0xC19]) = v1[37] ^ 0x35;
  LOBYTE(STACK[0xC1A]) = v1[38] ^ 0x35;
  LOBYTE(STACK[0xC1B]) = v1[39] ^ 0x35;
  LOBYTE(STACK[0xC1C]) = v1[40] ^ 0x35;
  LOBYTE(STACK[0xC1D]) = v1[41] ^ 0x35;
  LOBYTE(STACK[0xC1E]) = v1[42] ^ 0x35;
  LOBYTE(STACK[0xC1F]) = v1[43] ^ 0x35;
  v2 = sub_100224F60(1u, STACK[0xAC0], (LODWORD(STACK[0x82C]) - 458470030), (uint64_t)&STACK[0xC00], 32, (void *)STACK[0x900], &STACK[0x850]) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((171 * v2) ^ v0)) - 4))();
}

void sub_10013B5F8()
{
  STACK[0x688] = STACK[0x958];
  JUMPOUT(0x10013B604);
}

uint64_t sub_10013B62C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  __int16 v3;
  unsigned int v4;
  int v5;

  *(_DWORD *)a1 = 2023518720;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1279805853;
  *(_QWORD *)(a1 + 64) = 0x4E36C53A99817805;
  *(_DWORD *)(a1 + 72) = 286036353;
  *(_BYTE *)(a1 + 8) = (v4 >> (((v5 ^ 0x89) - 82) ^ 0xD5)) ^ 0x9E;
  *(_BYTE *)(a1 + 9) = (23 * (v5 ^ 0x89) - 78) ^ BYTE2(v4);
  *(_BYTE *)(a1 + 10) = BYTE1(v4) ^ 0xCD;
  *(_BYTE *)(a1 + 11) = v4 ^ 0xCD;
  *(_WORD *)(a1 + 92) = v3;
  *(_DWORD *)(a1 + 96) = v2;
  *(_QWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 1494274718;
  *(_QWORD *)(a1 + 120) = 0x6262E0568D5240A8;
  *(_QWORD *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 495404763;
  *(_DWORD *)(a1 + 128) = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (v5 ^ (400 * ((v2 - 2038988233) > 6)))))();
}

uint64_t sub_10013B72C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1680 * (STACK[0xA58] != 0)) ^ (a1 - 1582))) - 12))();
}

uint64_t sub_10013B758()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v3 + 4) = dword_10027CA00[v1];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((74 * (v0 ^ 0x2DA)) ^ 0x88)) - (74 * (v0 ^ 0x2DAu) - 693) + 709))();
}

uint64_t sub_10013B7D0()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((v1 < v0 - 1741) * ((v0 - 1500) ^ 0x392)) ^ (v0 - 290))) - 8))();
}

uint64_t sub_10013B80C@<X0>(int a1@<W1>, char a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((a3 & ~((((v5 - a5) | (a5 - v5)) >> ((a5 ^ (a2 + 41)) + 82)) ^ (a1 + a5 - 1)))
                                               * a4) ^ (a1 + a5 + 267)))
                            - 12))();
}

uint64_t sub_10013B850(unsigned int a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  char v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  int v16;

  v16 = (v10 + 108) | 0x462;
  *(_BYTE *)(v11 + (v13 - 885716705)) = (v16
                                                     - a2
                                                     + 50
                                                     + ((v9 ^ a1) >> (v8 + a2))
                                                     + ((v16 - 101) ^ a7)
                                                     - (a8 & (2 * ((v9 ^ a1) >> (v8 + a2))))
                                                     + 112) ^ v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((509
                                          * (v13
                                           - ((v16
                                                              - a2
                                                              + 50
                                                              + ((v9 ^ a1) >> (v8 + a2))
                                                              + ((v16 - 101) ^ a7)
                                                              - (a8 & (2 * ((v9 ^ a1) >> (v8 + a2))))
                                                              + 112) != v15) == v12)) ^ v16))
                            - 12))();
}

uint64_t sub_10013C8E0@<X0>(int a1@<W1>, char a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  return sub_10013B80C(a1, a2, a3, a4, a5);
}

uint64_t sub_10013C8E8()
{
  unint64_t v0;

  STACK[0x9F0] = v0;
  STACK[0xAA8] = STACK[0x678];
  return ((uint64_t (*)(unint64_t))STACK[0x428])(STACK[0x430]);
}

uint64_t sub_10013C904()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((((((v0 - 1255) | 0x85) ^ 0xFFFFFA24) + 349 * (v0 ^ 0x505))
                                               * (*(_DWORD *)(v2 + 4) == -1223708077)) ^ v0))
                            - 12))();
}

uint64_t sub_10013C954()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;

  v4 = v0;
  STACK[0xA90] = v2;
  STACK[0x6F8] = v3;
  v5 = STACK[0x8A0];
  STACK[0x708] = (unint64_t)&STACK[0xBB0] + STACK[0x8A0];
  STACK[0x8A0] = v5 + 16;
  STACK[0x7F8] = 0;
  STACK[0x9B8] = 0;
  LODWORD(STACK[0x8EC]) = 495404763;
  STACK[0x6E8] = 1;
  v6 = container_system_group_path_for_identifier(0, "systemgroup.com.apple.pisco.suinfo", &STACK[0x6E8]) == 0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 ^ 0xEF ^ v6) & 1) * ((v1 - 1577170293) & 0x5E01B6CD ^ 0x616)) ^ v1)))();
}

uint64_t sub_10013C9F4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((51 * (STACK[0x6E8] == 1)) ^ v0))
                            - (v0 + 562)
                            + 1737))();
}

uint64_t sub_10013CA24()
{
  const char *v0;
  int v1;
  size_t v2;
  BOOL v3;

  v2 = strlen(v0);
  v3 = malloc_type_malloc(((2 * v2) & 0xFE9D6DFFF8F9FBACLL) + (v2 ^ 0xFF4EB6FFFC7CFDD6) + 0xB1490003830247, 0xAE21939FuLL) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((760 * ((v3 ^ (v1 + 98)) & 1)) ^ v1)) - 4))();
}

uint64_t sub_10013CAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(a3 + 8 * ((v4 + 419) ^ (107 * (v3 == 0xFF4EB6FFFC7CFDD6)))))();
}

uint64_t sub_10013CB40@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = v3 < v4;
  *(_BYTE *)(v7 + v10 - 0x4D3A09D04695911ALL) = *(_BYTE *)(v6 + v9 - 0x6B822E0319913C21);
  if (v11 == v8 - 0x1C74F948877CCC94 < v2)
    v11 = v8 - 0x1C74F948877CCC94 < v3;
  return (*(uint64_t (**)(void))(a1 + 8 * ((!v11 * v5) ^ a2)))();
}

uint64_t sub_10013CBD8()
{
  void *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int v4;
  FILE *v5;

  strcpy(&v2[v3 + v1], "/Library/ProvenanceV2/psc.id");
  free(v0);
  v5 = fopen(v2, "rb");
  free(v2);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((16 * (((v4 - 25) ^ (v5 == 0)) & 1)) & 0xBF | ((((v4 - 25) ^ (v5 == 0)) & 1) << 6)) ^ v4))
                            - (v4 + 1110)
                            + 1392))();
}

uint64_t sub_10013CC94()
{
  int v0;
  FILE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;

  fseek(v1, 0, 2);
  v2 = ftell(v1);
  v3 = v2 - ((2 * (_DWORD)v2) & 0x7FB63C92) + 0x1BFDB1E49;
  v4 = ((v3 & ((v0 - 1214) ^ 0xFFFFFF49) ^ 0x15B7BF99)
      + ((v0 + 1479754377) & 0xA7CCBECF ^ 0x3C995984820806EFLL ^ v3 & 0x93390523)
      - ((v3 & ((v0 - 1214) ^ 0xFFFFFF49) ^ 0x15B7BF99) & 0x93390523)) ^ 0x4D34924317585A3;
  v5 = (v4 | 0x348BAD5A8E7DAE95) - (v4 | 0xCB7452A57182516ALL) - 0x348BAD5A8E7DAE96;
  fseek(v1, 0, 0);
  v6 = malloc_type_malloc(v5 ^ 0xCC1BDFA865D8FC5, 0xFAA3BBA4uLL);
  STACK[0x7F8] = (unint64_t)v6;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((((v6 != 0) << 8) | ((v6 != 0) << 9)) ^ v0)))();
}

uint64_t sub_10013CDD8(void *a1)
{
  FILE *v1;
  size_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  LODWORD(STACK[0x688]) = 546355592;
  LODWORD(STACK[0x680]) = 50950829;
  v5 = fread(a1, 1uLL, v2, v1);
  v6 = v4 ^ 0x41D ^ (v5 - 1440368279 - ((2 * v5) & 0x544B72D2u)) ^ 0x208806082AF35BC1;
  v7 = ((2 * v6) & 0x1100410C6C82F9ALL) - v6 + 0x37603D039C9BE832;
  STACK[0x678] = v7 ^ 0xFB78FB1BC823E46BLL;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((915 * ((v7 ^ 0xFB78FB1BC823E46BLL ^ v3) == 0xE0517DEA5233659FLL)) ^ v4)))();
}

uint64_t sub_10013CECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  int v7;

  return (*(uint64_t (**)(void))(a6 + 8 * (((*v6 == 1) * (((v7 + 843) | 0xAA) ^ 0x535)) ^ v7)))();
}

uint64_t sub_10013CF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;

  return (*(uint64_t (**)(uint64_t))(a6
                                            + 8
                                            * (int)((((v7 + 91556117) & 0xFA8AF6BE ^ ((v7 - 45) | 0x422) ^ 0x136)
                                                   * ((v6 ^ 0x17E83B0B1C4D0E31uLL) > 1)) ^ v7)))(0xFE18453BD02C913);
}

uint64_t sub_10013CFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(_QWORD, unint64_t))(a6
                                                             + 8
                                                             * ((23
                                                               * (*(unsigned __int8 *)(v9 + a1 + v7) != (((((2 * v8) ^ 0xA2) - 4) & 0xFA | 4) ^ 0xB4))) ^ v8)))((v6 - 1259088347), (unint64_t)((v6 - 1259088347) < 0x1491AAC4) << 32);
}

uint64_t sub_10013D020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  v14 = a2 + a1 + v7 + v13 + 0xE11204C9075D11BLL;
  v15 = (((v12 - 44 + *(unsigned __int8 *)v14 - ((*(unsigned __int8 *)v14 << (v12 + 75)) & 0x9C)) << 8) + 17408) ^ 0xFFFFCE00;
  LOWORD(v14) = (v15 - ((2 * v15) & 0xD200) + 27001) ^ 0x6979 | (*(unsigned __int8 *)(v14 + 1)
                                                               - ((2 * *(unsigned __int8 *)(v14 + 1)) & 0x1E4)
                                                               + 24050) ^ 0x5DF2;
  LODWORD(v14) = (unsigned __int16)(v14 - ((2 * v14) & 0x9FB0) + 20440) ^ 0x4FD8;
  v16 = v6 + (v14 ^ 0x7BDBFEFB) + ((v10 + 512) & (2 * (_DWORD)v14)) - 2078015224;
  return (*(uint64_t (**)(void))(a6
                              + 8
                              * ((1303
                                * (v11 > (v16 | ((unint64_t)(v16 < v9) << 32))
                                       + 0xFE184535D64F472
                                       + v8)) ^ v12)))();
}

uint64_t sub_10013D140()
{
  int v0;
  void *v1;

  STACK[0x978] = 0x19F0AA8D777D8E1DLL;
  v1 = malloc_type_malloc(0x15uLL, 0x1EF50C9BuLL);
  STACK[0xA58] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((341 * ((((v0 ^ 0xB9) + 1) ^ (v1 == 0)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_10013D68C(_BYTE *a1)
{
  int v1;
  _BYTE *v2;
  unint64_t v4;

  sub_100224ACC(byte_100254890, (char *)&STACK[0xBC0], 0x10uLL);
  *a1 = ((v2[4] & 0x7F ^ 0xD7) - ((2 * (v2[4] & 0x7F ^ 0xD7)) & 0x72) - 71) ^ 0xB9;
  a1[1] = v2[12] ^ 0x35;
  a1[2] = (69 * (v1 ^ 0x23)) ^ v2[13] ^ 0x6C;
  a1[3] = v2[14] ^ 0x35;
  a1[4] = v2[15] ^ 0x35;
  a1[5] = v2[16] ^ 0x35;
  a1[6] = v2[17] ^ 0x35;
  a1[7] = v2[18] ^ 0x35;
  a1[8] = v2[19] ^ 0x35;
  a1[9] = v2[20] ^ 0x35;
  a1[10] = v2[21] ^ 0x35;
  a1[11] = v2[22] ^ 0x35;
  a1[12] = v2[23] ^ 0x35;
  a1[13] = v2[24] ^ 0x35;
  a1[14] = v2[25] ^ 0x35;
  a1[15] = v2[26] ^ 0x35;
  a1[16] = v2[27] ^ 0x35;
  a1[17] = v2[8] ^ 0x33;
  a1[18] = v2[9] ^ 0x33;
  a1[19] = v2[10] ^ 0x33;
  a1[20] = v2[11] ^ 0x33;
  v4 = STACK[0xA58] + 1;
  STACK[0xAD0] += 32;
  LODWORD(STACK[0xAFC]) = 0;
  STACK[0xAE8] = v4;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((13 * (v4 == 0)) ^ v1)) - 4))();
}

void sub_10013D824()
{
  JUMPOUT(0x100144C38);
}

uint64_t sub_10013D82C()
{
  int v0;
  unint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  unint64_t v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;

  STACK[0x690] = v1;
  STACK[0xAE0] = 0;
  STACK[0xB10] = 0;
  STACK[0xB08] = 0;
  STACK[0xAD8] = 0;
  STACK[0xB00] = 0;
  STACK[0xB18] = 0;
  v2 = LOBYTE(STACK[0xBC4]);
  STACK[0xB20] = 0;
  v3 = (v2 ^ 0x3D) - ((2 * (v2 ^ 0x3D)) & 0x12) + 854290441;
  v4 = (v3 ^ 0xCD148F9B) + 1;
  v3 ^= 0x32EB7009u;
  v5 = v3 + (v4 ^ 0x7F99F573) + ((2 * v4) & 0xFF33EAE6) - 2140796275;
  LOBYTE(v2) = ((v2 ^ 0xD8) - ((2 * (v2 ^ 0xD8) + 54) & 0xEF) + 18) ^ v2 ^ ((v2 ^ 0xC2)
                                                                          - ((2 * (v2 ^ 0xC2) + 2) & 0xF4)
                                                                          - 5);
  LODWORD(STACK[0xAFC]) = -1879803947;
  v6 = byte_10027AE00[((v5 + 1332117162 - ((2 * v5) & 0x9ECD1A1C) + 3684) ^ 0xB09972F0) + v3];
  v7 = byte_10025C240[LOBYTE(STACK[0xBCD]) ^ 0x9CLL];
  v8 = ((v2 ^ 0x30) + (~(2 * v2 + 4) | 0xF9) + 30);
  v9 = (v7 - ((2 * v7 + 126) & 0xDC) - 83) ^ 0xA2;
  v10 = ((v9 - ((2 * v9) & 0xD0)) << 16) + 90701824;
  v11 = byte_10027DCC0[LOBYTE(STACK[0xBC2]) ^ 0x46];
  v12 = byte_1002663C0[LOBYTE(STACK[0xBCF]) ^ 0x32] ^ 0x3D;
  v13 = ((v10 ^ 0x5680000) - ((2 * v10) & 0x15240000) - 896378602) ^ 0xCA925916 | (v12 - ((2 * v12) & 0x15C) - 404084050) ^ 0xE7EA2AAE;
  v14 = ((((v6 ^ v8 ^ 0x41) - ((2 * (v6 ^ v8)) & 0x34)) << 24) - 1711276032) ^ 0x9A000000;
  v15 = byte_10025C240[LOBYTE(STACK[0xBC5]) ^ 0x73];
  v16 = v11 ^ 0xCE ^ (((16 * v11) ^ 0x79) - 6);
  v17 = (((v16 - ((2 * v16) & 0x1A0) + 12728301) << 8) - 7424) ^ 0xC237D000;
  v18 = byte_1002663C0[LOBYTE(STACK[0xBC3]) ^ 0x95] ^ 0x3D;
  v19 = (v17 - ((2 * v17) & 0x115B9800) - 928134120) ^ 0xC8ADCC18 | (v18 - ((2 * v18) & 0x1E8) - 94012940) ^ 0xFA6579F4;
  HIDWORD(v21) = v15 + 1;
  LODWORD(v21) = (v15 << 24) - 1090519040;
  v20 = v21 >> 25;
  v22 = v20 - 101;
  v23 = (2 * v20) & 0x34;
  HIDWORD(v21) = (~v23 + v22) ^ 0x1A;
  LODWORD(v21) = (v23 - v22) << 24;
  v24 = ((((((v21 >> 31) - ((2 * (v21 >> 31)) & 0x30) + 24) ^ 0x10)
         - ((2 * (((v21 >> 31) - ((2 * (v21 >> 31)) & 0x30) + 24) ^ 0x10)) & 0x70)) << 16)
       - 1539833856) ^ 0xA4380000;
  v25 = (v24 - ((2 * v24) & 0x72220000) + 957470611) ^ 0x3911D793 | (v14 - ((2 * v14) & 0x16000000) - 1946429871) ^ 0x8BFBD651;
  v26 = v25 - ((2 * v25) & 0xE3686C18);
  v27 = byte_10025C240[LOBYTE(STACK[0xBC1]) ^ 0x99];
  v28 = v27 + (~(2 * v27 + 126) | 0x6B) + 10;
  v29 = LOBYTE(STACK[0xBC8]) ^ 0x83 ^ byte_10027AE00[LOBYTE(STACK[0xBC8]) ^ 9];
  v30 = (((v29 - ((2 * v29) & 0x46)) << 24) + 587202560) ^ 0x23000000;
  v31 = (((v28 ^ 0x44) - ((2 * v28) & 0x10)) << 16) + 1745354752;
  v32 = byte_1002663C0[LOBYTE(STACK[0xBC7]) ^ 0xD0];
  v33 = ((v31 ^ 0x68080000) - ((2 * v31) & 0x27680000) + 1404356581) ^ 0x53B4C7E5 | (v19
                                                                                   - ((2 * v19) & 0x595848E6)
                                                                                   - 1398004621) ^ 0xACAC2473;
  v34 = v33 - ((2 * v33) & 0x2054AD6E);
  v35 = (v32 ^ 0x3D) - 78;
  v36 = byte_1002663C0[LOBYTE(STACK[0xBCB]) ^ 0xDLL] ^ 0x3D;
  v37 = (v30 - ((2 * v30) & 0x72000000) - 1175254943) ^ 0xB9F30861 | (v36 - ((2 * v36) & 0x138) - 1603867236) ^ 0xA066ED9C;
  v38 = (((2 * v32) ^ 0x7A) + 65) & 0x64;
  v39 = v34 + 271210167;
  v40 = (v35 ^ 0xC7) + ((2 * v35) & 0x8E) + (v38 ^ 0x53) + ((2 * v38) ^ 0x7F) + 39;
  v41 = byte_10027DCC0[LOBYTE(STACK[0xBC6]) ^ 0x72];
  v42 = (v26 - 239847924) ^ 0xF1B4360C | (v40 - ((2 * v40) & 0xE6) + 591043187) ^ 0x233A9A73;
  v43 = v41 ^ 0xB6 ^ (((16 * v41) ^ 0x70) - ((2 * ((16 * v41) ^ 0x70)) & 0x40) + 32);
  v44 = (((v43 - ((2 * v43) & 0x48)) << 8) - 1967447040) ^ 0x8ABB2400;
  v45 = byte_10025C240[LOBYTE(STACK[0xBC9]) ^ 0x73];
  v46 = (v42 - ((2 * v42) & 0x3AB8A740) - 1654893664) ^ 0x9D5C53A0 | (v44 - ((2 * v44) & 0x889E200) + 1145368902) ^ 0x4444F146;
  v47 = byte_10027DCC0[LOBYTE(STACK[0xBCE]) ^ 0x46];
  v48 = ((16 * v47) ^ 0xFFFFFFA0) - 32 * (v47 & 1) - 112;
  v49 = (((((((2 * v45 + 126) & 0xE8) - v45 - 52) ^ 0x83)
         - ((2 * ((((2 * v45 + 126) & 0xE8) - v45 - 52) ^ 0x83)) & 0x186)) << 16)
       + 113442816) ^ 0x6C30000;
  v50 = (v49 - ((2 * v49) & 0x5BA60000) - 304911902) ^ 0xEDD369E2 | (v37 - ((2 * v37) & 0xD3977900) + 1774959744) ^ 0x69CBBC80;
  v47 ^= 0xFFFFFFCD;
  v51 = 2 * (((v48 ^ 0x40) & v47) - ((2 * ((v48 ^ 0x40) & v47)) & 0x12)) + 18;
  v52 = (((v48 ^ 0x40) + v47) ^ 0x65)
      + ((2 * ((v48 ^ 0x40) + v47)) & 0xCA)
      + (v51 ^ 0x9F)
      + ((2 * v51) & 0xE4 ^ 0xDB)
      + 15;
  v53 = (((v52 - ((2 * v52) & 0x112)) << 8) - 1331590912) ^ 0xB0A18900;
  v54 = LOBYTE(STACK[0xBC0]);
  v55 = byte_10027DCC0[LOBYTE(STACK[0xBCA]) ^ 0x50];
  v56 = (v53 - ((2 * v53) & 0x5B77EE00) + 1841035104) ^ 0x6DBBF760 | (v13 - ((2 * v13) & 0x4CDE7292) + 644823369) ^ 0x266F3949;
  v57 = LOBYTE(STACK[0xBCC]) ^ 0x13 ^ byte_10027AE00[LOBYTE(STACK[0xBCC]) ^ 0xELL];
  v58 = (((v57 - ((2 * v57) & 0x9A)) << 24) - 855638016) ^ 0xCD000000;
  v59 = (v56 - ((2 * v56) & 0xDDDE610) - 957418744) ^ 0xC6EEF308 | (v58 - ((2 * v58) & 0x9FFFFFFF) - 812239916) ^ 0xCF9633D4;
  LODWORD(STACK[0x590]) = v59 - ((2 * v59) & 0x6E133012) - 1224108023;
  v60 = byte_10027AE00[v54 ^ 0xB0];
  v61 = ((((v55 ^ 0xCB ^ (((16 * v55) ^ 0x70) - ((2 * ((16 * v55) ^ 0x70)) & 0xA0) + 83))
         - ((2 * (v55 ^ 0xCB ^ (((16 * v55) ^ 0x70) - ((2 * ((16 * v55) ^ 0x70)) & 0xA0) + 83))) & 0x180)) << 8)
       + 793362432) ^ 0x2F49C000;
  v62 = (v61 - ((2 * v61) & 0x9FA1400) - 2063791602) ^ 0x84FD0A0E | (v50 - ((2 * v50) & 0xE35629BC) + 1907037406) ^ 0x71AB14DE;
  LODWORD(STACK[0x678]) = (2 * v62) & 0x9009B4F6;
  LODWORD(STACK[0x670]) = v62 - 939206021;
  v63 = ((((v54 ^ 0xEA ^ v60) - ((2 * (v54 ^ 0xEA ^ v60)) & 0x62)) << 24) - 1325400064) ^ 0xB1000000;
  v64 = v63 - ((2 * v63) & 0x44444444) + 576259460;
  LODWORD(STACK[0x5D0]) = v64;
  LODWORD(STACK[0x5B0]) = v64 ^ 0x22590584;
  v65 = v64 ^ 0x22590584 | v39 ^ 0x102A56B7;
  LODWORD(STACK[0x688]) = (2 * v65) & 0xD61878FE;
  LODWORD(STACK[0x680]) = v65 - 351519617;
  LODWORD(STACK[0x4F0]) = (v46 - ((2 * v46) & 0xB3791440) - 641955296) ^ 0x6A04A9C2;
  v66 = *(unsigned __int8 *)STACK[0xAE8];
  LOBYTE(STACK[0xBB0]) = v66
                       + ((-2 * (((v0 ^ 0xDD) - 21) ^ 0xE6)) & 0x7C)
                       + ((-65 * (((v0 ^ 0xDD) - 21) ^ 0xE6)) ^ 0xBE)
                       - 83;
  v67 = (-1950399707 * ((v66 ^ 0xE7FEFEFF) + 2 * v66)
       - 93799706
       - 2
       * ((-1950399707 * ((v66 ^ 0xE7FEFEFF) + 2 * v66) + 153161604) & 0x596665F7 ^ (-1950399707
                                                                                   * ((v66 ^ 0xE7FEFEFF) + 2 * v66)
                                                                                   - 93799706) & 1)
       - 400639340) ^ 0xC726516C;
  v68 = ((v67 + 1363901570) ^ 0x86F5081)
      + ((v67 % 0x101) ^ 0x8EFFF55F)
      + ((2 * (v67 % 0x101)) & 0x2BE)
      - ((2 * (v67 + 1363901570)) & 0xEF215EFC)
      + 1;
  v69 = v68 - ((2 * v68 - 786336706) & 0x9F67AC14) - 1203466199;
  v70 = (v69 ^ ((v69 ^ 0xB04C29F5) - ((2 * (v69 ^ 0xB04C29F5) + 2) & 0x7BCF7DD0) + 1038597865) ^ ((v69 ^ 0x612CE48)
                                                                                                - 1235294274
                                                                                                - ((2
                                                                                                  * ((v69 ^ 0x612CE48) - 1235294274)) & 0x3B7A90EC)
                                                                                                - 1648539530) ^ 0xEFE92094)
      - 1235294275;
  v71 = (v70 - ((2 * v70) & 0xD914D8A4) + 1821011026) ^ 0x84AF9580;
  v72 = v71 - ((2 * v71 + 247228098) & 0xEEF6B272) + 2128186522;
  v73 = (v72 ^ 0x8884A6C6) - 400164397 - ((2 * ((v72 ^ 0x8884A6C6) - 400164397)) & 0xA5235046);
  HIDWORD(v21) = v72 ^ 0x777B5939;
  LODWORD(v21) = v72;
  v74 = (((v21 >> 31) ^ 0xFF7B6FFA)
       + 1724881600
       + ((2 * (v21 >> 31)) & 0xFEF6DFF4)
       + 1
       - ((2 * (((v21 >> 31) ^ 0xFF7B6FFA) + 1724881600 + ((2 * (v21 >> 31)) & 0xFEF6DFF4) + 1) - 1064895006) & 0xC1D9281C)
       + 1093669631) ^ v72 ^ 0xCCE96C80;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002C8B50 + (v0 ^ 0x67)))(v74 ^ 0xCC7FE076, 1602222075, (v73 - 762206173) ^ 0xF5D68839 ^ v74, 2399139167, 4157600684, 1844307839, 3688615678, 3195797173);
}

void sub_10013E5BC()
{
  JUMPOUT(0x10013E234);
}

uint64_t sub_10013E5C4(int a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;

  v5 = LODWORD(STACK[0x670]) - LODWORD(STACK[0x678]);
  LODWORD(STACK[0x5C0]) = v5;
  LODWORD(STACK[0x550]) = v5 ^ 0x8B8A9857 ^ (v4 + 1929141655);
  v6 = a1 ^ 0x9F27C539 ^ ((LOBYTE(STACK[0xBB0]) - 107)
                        - ((2 * (LOBYTE(STACK[0xBB0]) - 107)) & 0xFA)
                        + 1150607229);
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((60 * ((((v3 ^ 0x7AB78B3D) + 2058849085 - ((((v3 ^ 0x7AB78B3D) << (v4 + 6)) + 2) & 0xF56F167A) + 1) & 3) == 1)) ^ (v4 + 1929141655)))
                                                                                               - 4))(v6 - ((2 * v6 + 864704412) & 0xB7663488) + 1970816530, 250, a3, 1150607229, 2670183737, 864704412, 1970816530);
}

void sub_10013E6F4()
{
  JUMPOUT(0x10013E640);
}

uint64_t sub_10013E6FC()
{
  int v0;

  LODWORD(STACK[0x630]) = LODWORD(STACK[0x680]) - LODWORD(STACK[0x688]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v0 + 31) ^ 0x7E)) - 8))();
}

void sub_10013EA64()
{
  JUMPOUT(0x10013E7ACLL);
}

uint64_t sub_10013EA6C(int a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v4 = ((v3 + (a1 ^ v3) - ((2 * (a1 ^ v3) + 2) & v1) + 1) ^ v3) % 3;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((957 * ((v4 ^ 0x7CFDEFFF) + 2 * v4 != 2097016831)) ^ (v2 - 221)))
                            - 8))();
}

void sub_10013EB8C()
{
  JUMPOUT(0x10013EAD8);
}

uint64_t sub_10013EB9C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  char v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  unint64_t v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  void *v326;

  v6 = (v5 - 173) | 0x20u;
  STACK[0x670] = v6;
  v7 = 844964643 * (v2 ^ v4) - (((v6 + 616186907) * (v2 ^ v4)) & 0x2A67DFDA) - 1791758355;
  LODWORD(v6) = -1570454587 * v1 - ((1154058122 * v1 + 1914578826) & 0xAA1FD2DC) + 236911923;
  v8 = -134217728 * ((3 * (v2 ^ v4)) & 3) - 1946157056 * (v2 ^ v4) - 1928720963;
  v9 = -913864192 * v1 - ((51319808 * v1 + 72291328) & 0x63EA400) - 1589191224;
  v10 = ((2 * ((v8 ^ 0x8D0A0DBD) & 0xFC000000 | (v7 >> 6))) & 0xBFFFF9FE ^ 0x4A9997E)
      + (((v8 ^ 0x8D0A0DBD) & 0xFC000000 | (v7 >> 6)) ^ 0x5DAB3340);
  v11 = ((192114608 * (v0 ^ 0x6B249523) - ((384229216 * (v0 ^ 0x6B249523)) & 0x481347E0) - 1542872078) ^ 0xA409A3F2) & 0xFFFFFFF0 | ((-524863749 * (v0 ^ 0x6B249523) - ((24014326 * (v0 ^ 0x6B249523)) & 0xCE14E1Cu) - 2039437554) >> 28);
  v12 = ((2 * v11) & 0xAF27FBB6 ^ 0x10) + (v11 ^ 0xD793FDD3);
  v13 = ((-1365622360 * v3 - ((1563722576 * v3) & 0x894D4430) - 995712482) ^ 0xC4A6A21E) & 0xFFFFFFF8 | ((-170702795 * v3 - ((732336234 * v3) & 0x282627E0u) + 336794608) >> 29);
  v14 = v13 ^ 0x7FFBBAD5;
  v15 = (2 * v13) & 0xFFF775AA;
  v16 = ((2 * ((v9 ^ 0x831F53C8) & 0xFFFFFE00 | (v6 >> 23))) & 0x3F7BFFF8 ^ 0x350)
      + (((v9 ^ 0x831F53C8) & 0xFFFFFE00 | (v6 >> 23)) ^ 0x9FBDFE56);
  v17 = v12 + v14 + v15 - v16 + v10 - 668681334;
  v18 = ((-2123366400 * v17 - ((48234496 * v17 + 1889533952) & 0x8EA00000) + 2142135932) ^ 0xC75E667C) & 0xFFF00000 | ((741165079 * v17 - ((408588334 * v17 + 445863690) & 0x12665B70u) + 1182587197) >> 12);
  HIDWORD(v19) = v12 + 5;
  LODWORD(v19) = (-1279558367 * v12 - ((1735850562 * v12 - 973164662) & 0xF700DDC2) + 1585432230) ^ 0xFB806EE0;
  v20 = ((2 * v18) & 0x6FDE3DAC ^ 0x102424) + (v18 ^ 0x37E78DE4);
  LODWORD(v6) = (v19 >> 5) - ((2 * (v19 >> 5)) & 0x6C4BCECE) - 1239029913;
  v21 = ((377029380 * v10 - ((754058760 * v10 + 50601480) & 0x31D8C930) - 1704037473) ^ 0x98EC649B) & 0xFFFFFFFC | ((((-1958968958 * v10 - 2134833278) & 0x8C55A8B2) + 979484479 * v10 - 109795355) >> 30);
  v22 = ((2 * v21) & 0xFFFF7FFF) + (v21 ^ 0xFFFFBFFF);
  v23 = 1337753485 * (v6 ^ 0xB625E767) - ((528023322 * (v6 ^ 0xB625E767)) & 0x35ABBDFE) - 1697259777;
  v24 = 71091677 * v22 - ((142183354 * v22 + 728239034) & 0x2DAF54DC) - 863260597;
  v25 = ((-2019103020 * v16 - ((256761256 * v16 + 1653044896) & 0x75963F90) - 334570726) ^ 0xBACB1FCA) & 0xFFFFFFFC | ((1642707893 * v16 - ((1137932138 * v16 + 413261224) & 0x5CADAF6C) + 2057815690) >> 30);
  v26 = ((2 * v25) & 0xEE67EBF6 ^ 4) + (v25 ^ 0x7733F5F9) + v20;
  v27 = (v6 ^ 0x882B3B79 ^ (v26 - ((2 * v26 + 565827166) & 0x7C1DB83C) - 1897150643)) - v22 - 16385;
  v28 = v27 ^ 0x7FDF682F;
  v29 = -1146936625 * (((2 * v27) & 0xFFBED05E) + (v27 ^ 0x7FDF682F))
      - ((2001094046 * (((2 * v27) & 0xFFBED05E) + (v27 ^ 0x7FDF682F)) + 120522750) & 0x734AB212)
      - 46342904;
  v30 = -141561440 * (v6 ^ 0xB625E767) - ((-283122880 * (v6 ^ 0xB625E767)) & 0x9846E580) + 1277391561;
  v31 = 2112093288 * (v6 ^ 0xB625E767) - ((-70780720 * (v6 ^ 0xB625E767)) & 0xB0C0B580) + 1482709696;
  v32 = (-774594648 * v20 - ((-1549189296 * v20 + 258585376) & 0x9274EE50) + 1357861052) ^ 0xC93A772C;
  v33 = ((v32 & 0xFFFFFFF8 | ((1513788405 * v20 - ((-1267390486 * v20 - 504547740) & 0xD19BE982) + 1506054131) >> 29)) ^ 3)
      - ((2 * v32) & 0x1EBE0D0)
      + 16117864;
  LODWORD(v6) = ((-1610612736 * v22 - 1610612736) & 0x80000000) - 805306368 * v22 - 1712537214;
  v34 = (((v23 >> 27) & 0x1C) - 32 * (v23 >> 31) - 671544048) ^ 0xDF2839F1;
  HIDWORD(v19) = v28 + 1;
  LODWORD(v19) = v29 ^ 0xB9A55908;
  v35 = (v19 >> 1) - ((2 * (v19 >> 1)) & 0xB50B67EE) + 1518711799;
  v36 = (((2 * v34) & 0x29D0) - v34 - 908891371) ^ 0xC1025FE4 | ((((v30 ^ 0x4C2372C9) & 0xFFFFFFFC | (v31 >> 30)) ^ 1)
                                                               - ((2 * ((v30 ^ 0x4C2372C9) & 0xFFFFFFFC | (v31 >> 30))) & 0xFCCC84)
                                                               - 2139199918) ^ 0x807E6652;
  HIDWORD(v19) = v36 ^ 1;
  LODWORD(v19) = (v36 - ((2 * v36) & 0x17B4618) + 12428044) ^ 0x679F3C38;
  v37 = -721323363 * (v35 ^ 0x5A85B3F7) - ((-1442646726 * (v35 ^ 0x5A85B3F7)) & 0xE0A8F9C0) - 262898464;
  v38 = 2107421365 * (v33 ^ 0xF5F068) - ((2067359082 * (v33 ^ 0xF5F068)) & 0x57C8670C) - 1411107962;
  v39 = 973078528 * (v35 ^ 0x5A85B3F7) - ((1946157056 * (v35 ^ 0x5A85B3F7)) & 0x50000000) - 1452590526;
  v40 = ((v6 ^ 0xC9ECC182) & 0xF0000000 | (v24 >> 4)) ^ 0x96D7AA6;
  v41 = v40 - ((2 * v40) & 0xB69B59C0) - 615666464;
  v42 = -886353920 * (v33 ^ 0xF5F068) - ((374775808 * (v33 ^ 0xF5F068)) & 0x7BBC2000) - 1109518346;
  v43 = v41 ^ 0xDB4DACE0;
  v44 = -1761270391 * (v41 ^ 0xDB4DACE0) - ((772426514 * (v41 ^ 0xDB4DACE0)) & 0xB122D242) - 661559007;
  v45 = ((v19 >> 2) - 244528850 + (~(2 * (v19 >> 2)) | 0x1D266DA5)) ^ v41 ^ v33 ^ 0x2999819F ^ v35;
  v46 = ((v39 ^ 0xA96B3A42) & 0xFE000000 | (v37 >> 7)) ^ 0x1E0A8F9;
  v47 = v46 - ((2 * v46) & 0xB4B27BA4) + 1515797970;
  v48 = ((v42 ^ 0xBDDE17F6) & 0xFFFFF000 | (v38 >> 20)) ^ 0xABE;
  v49 = v48 - ((2 * v48) & 0x11F6A210) + 150688008;
  v50 = ((1259470848 * v43 - ((-1776025600 * v43) & 0x9A400000) - 853472509) ^ 0xCD210B03) & 0xFFFE0000 | (v44 >> 15);
  v51 = (v50 ^ 0xBB7E43FE) + ((2 * v50) & 0x76FFE5B8 ^ 0x36000) + 1149242660 + (v49 ^ 0x8FB5108);
  v52 = v47 ^ (v51 - ((2 * v51) & 0xF893572E) + 2085202839);
  v53 = (((-945815552 * v45 - ((-1891631104 * v45) & 0xFB800000) + 2110705686) ^ 0x7DCED016) & 0xFFE00000 | ((1719619133 * v45 - ((218012794 * v45) & 0xDA90344u) + 114590114) >> 11)) ^ 0xDA90;
  v54 = v53 - ((2 * v53) & 0xE4F4D906) + 1920625795;
  v55 = 2 * (((v52 ^ 0x26109645) & (v54 ^ 0x727A6C83)) - ((2 * ((v52 ^ 0x26109645) & (v54 ^ 0x727A6C83))) & 0x4031AB64))
      - 1070486684;
  v56 = -152148793 * (v49 ^ v47 ^ v54 ^ 0x4E2FEEAA)
      - ((1843186062 * (v49 ^ v47 ^ v54 ^ 0x4E2FEEAA)) & 0x5F187E10)
      + 797720328;
  v57 = (v54 ^ 0x546AFAC6 ^ v52) + (v55 ^ 0x9404149E) - 1412808698 + ((2 * v55) & 0xA86B7FF4 ^ 0x806356C0);
  v58 = v57 - ((2 * v57) & 0xC2DB2F3E) + 1634572191;
  LODWORD(STACK[0x610]) = v58 ^ 0x616D979F;
  v59 = 2 * (((v58 ^ 0x616D979F) & (v56 ^ 0x2F8C3F08)) - ((2 * ((v58 ^ 0x616D979F) & (v56 ^ 0x2F8C3F08))) & 0x7F49278A))
      + 2135500682;
  v60 = (v56 ^ 0x4EE1A897 ^ v58) + (v59 ^ 0x2B65B75) - 2113895679 + ((2 * v59) & 0xFBFEF9FC ^ 0xFA924914);
  v61 = ((2 * v60) & 0x33E8DFEE) + (v60 ^ 0x19F46FF7);
  LODWORD(STACK[0x618]) = 2 * v61;
  LODWORD(STACK[0x620]) = v61;
  v62 = v61 - ((2 * v61 - 1697733612) & 0xC24B9E38) - 1366482650;
  v63 = v62 ^ 0x6125CF1C;
  LODWORD(STACK[0x4C0]) = v62 ^ v58;
  v64 = v62 ^ v58 ^ 0x485883;
  v65 = v63 + (v47 ^ 0x5A593DD2) - ((2 * (v63 + (v47 ^ 0x5A593DD2))) & 0x6BFE3126) + 905910419;
  v66 = -1909726993 * v63 - 1422458309 - ((475513310 * v63) & 0x566E05E6) + 184;
  LODWORD(STACK[0x5A0]) = v65;
  LODWORD(v6) = 1847209695 * (v65 ^ 0x35FF1893) - ((204758462 * (v65 ^ 0x35FF1893)) & 0xEAADEAC) - 2024444074;
  v67 = 2 * ((v63 & (v54 ^ 0x727A6C83)) + 1843186062 - ((2 * (v63 & (v54 ^ 0x727A6C83))) & 0x5BB9947E)) + 354;
  LODWORD(STACK[0x628]) = v62;
  v68 = (v54 ^ 0x135FA39F ^ v62) + (v67 ^ 0x845C6AB3) - 1608908493 + ((2 * v67) & 0xBFCBFD98 ^ 0xB7432898);
  v69 = v68 - ((2 * v68) & 0x218FEF00) - 1865943168;
  LODWORD(STACK[0x688]) = v69;
  v70 = 786366464 * (v65 ^ 0x35FF1893) - ((1572732928 * (v65 ^ 0x35FF1893)) & 0x532E0000) + 697798724;
  v71 = ((1571042304 * (v69 ^ 0x90C7F780) - ((-1152882688 * (v69 ^ 0x90C7F780)) & 0xA5B16800) + 1389934150) ^ 0x52D8B646) & 0xFFFFFC00 | ((198666509 * (v69 ^ 0x90C7F780) - ((397333018 * (v69 ^ 0x90C7F780)) & 0x96A5AA04) + 1263719682) >> 22);
  v72 = ((2 * v71) & 0xDD7EBF76 ^ 0x252) + (v71 ^ 0xEEBF5E96);
  LODWORD(STACK[0x608]) = v64;
  v73 = ((2 * ((v70 ^ 0x29979044) & 0xFFFF0000 | WORD1(v6))) & 0xE5BFF7EE ^ 0x106AA)
      + (((v70 ^ 0x29979044) & 0xFFFF0000 | WORD1(v6)) ^ 0xF2DF7CA2);
  LODWORD(v6) = ((1002438656 * v63 - ((2004877312 * v63) & 0x74000000) - 1171417457) ^ 0xBA2D968F) & 0xFFC00000 | (v66 >> 10);
  v74 = (((260087808 * v64 - ((520175616 * v64) & 0x879DC000) - 1009847888) ^ 0xC3CEF1B0) & 0xFFFFE000 | ((-2048885755 * v64 - ((197195786 * v64) & 0x647BD706u) - 1304564861) >> 19)) ^ 0x1647;
  v75 = v74 - ((2 * v74) & 0xE9521842) - 190247903;
  v76 = ((2 * v6) & 0xF977FDFC ^ 0x559980) + (v6 ^ 0xFC91333E) - v73 + v72;
  v77 = v75 ^ 0x44CE7440 ^ (v76 - ((2 * v76 + 248068732) & 0x60CEF0C2) - 1211361889);
  v78 = ((-40894464 * v77 - ((-81788928 * v77) & 0xFE400000) + 2133237479) ^ 0x7F269EE7) & 0xFFF00000 | ((435343321 * v77 - ((870686642 * v77) & 0xE8639DC6) + 1949421283) >> 12);
  v79 = ((2 * v78) & 0x7AF4A758 ^ 0x48618) + (v78 ^ 0xBD7D10B0);
  v80 = (((-1316814848 * v72 - ((587595776 * v72 + 815661056) & 0x31F80000) - 783551787) ^ 0x18FCF2D5) & 0xFFFF0000 | ((182563203 * v72 - ((365126406 * v72 + 588083358) & 0xC6BDFE40) - 186271889) >> 16)) ^ 0xE35E;
  v81 = v80 - ((2 * v80) & 0x1F7C4ED8) + 264120172;
  HIDWORD(v19) = ~v73;
  LODWORD(v19) = 943187215 * v73 - ((275761694 * v73 + 483824398) & 0x116C1456) - 954117198;
  v82 = ((2 * (v19 >> 3)) & 0xDAFF5FFE ^ 0x22D028A) + ((v19 >> 3) ^ 0xFC696EBA) + v79;
  LODWORD(v6) = v82 - ((2 * v82 - 1442056022) & 0x9A1ACD2E) - 1575787796;
  v83 = ((2019670016 * (v75 ^ 0xF4A90C21) - ((1891856384 * (v75 ^ 0xF4A90C21)) & 0x79C18000) + 1021363592) ^ 0x3CE0C588) & 0xFFFFF800 | ((1257180215 * (v75 ^ 0xF4A90C21) - ((-1780606866 * (v75 ^ 0xF4A90C21)) & 0xBCB67B6A) - 564445771) >> 21);
  v84 = ((2 * v83) & 0xBBFD75FC ^ 0x5E4) + (v83 ^ 0x5DFEBC0C);
  v85 = -1045817253 * v79 - ((-2091634506 * v79 - 488094792) & 0xC5C522B4) + 1414968118;
  v86 = v81 ^ 0xFBE276C;
  v87 = 289091809 * (v81 ^ 0xFBE276C) - ((578183618 * (v81 ^ 0xFBE276C)) & 0xD5C45E8A) + 1793208133;
  v79 *= 204308480;
  v88 = v85 >> 17;
  v89 = (((v79 + 284033024) & 0xFFFF8000 | (v85 >> 17)) ^ 0x8803125)
      + v79
      + ((2 * ((v79 + 284033024) & 0xFFFF8000 | (v85 >> 17))) & 0xEEFFFF56 ^ 0xFFFF9DBD);
  v90 = ((v88 ^ 0xFFFFCE8E) - ((2 * (v88 ^ 0xFFFFCE8E) + 2) & 0xD85D8392) + 1815003594) ^ v88 ^ (v89
                                                                                               - ((2 * v89 + 282853210) & 0xAABB6968)
                                                                                               - 573852575);
  LODWORD(v6) = ((2 * ((v81 ^ 0x42B341FB ^ v6) - v84 + 1576975102)) & 0xFF7CA734)
              + (((v81 ^ 0x42B341FB ^ v6) - v84 + 1576975102) ^ 0x7FBE539A);
  v91 = (v90 ^ 0xB973440C)
      + v79
      + 284033024
      - 2 * (((v90 ^ 0xB973440C) + v79 + 284033024) & 0x6684C653 ^ v90 & 0x11)
      + 1719977538;
  v92 = 1986118144 * v86 - ((1824752640 * v86) & 0x4D563400) + 648747709;
  v93 = ((-2145703632 * v6 - ((3560032 * v6 + 1063080512) & 0x2FA10620) + 1467952186) ^ 0x97D0831A) & 0xFFFFFFF0 | ((-1207848301 * (_DWORD)v6 - ((1879270694 * (_DWORD)v6 - 1745496796) & 0xD0B471C0) - 1269488782) >> 28);
  v94 = ((2 * v93) & 0xC37CFD7A ^ 8) + (v93 ^ 0xE1BE7EBB);
  LODWORD(v6) = v91 ^ 0x6684C642;
  v95 = (984171782 * (v91 ^ 0x6684C642)) & 0x93019440;
  v96 = ((v92 ^ 0x26AB1ABD) & 0xFFFFFE00 | (v87 >> 23)) ^ 0xD5;
  v97 = v96 - ((2 * v96) & 0xA43A4DD0) - 769841432;
  v98 = -1483399605 * v94 - 269721608 - ((1328168086 * v94 - 156536510) & 0xE92D6A0C) + 3503;
  v99 = -1799663310 * v84 - ((695640676 * v84 + 924203208) & 0x5450E610) - 978088084;
  v100 = v94 + 507609411 + (v97 ^ 0xB499E0AA ^ v91);
  v101 = v100 ^ 0xBEBFFF37;
  v102 = (2 * v100) & 0x7D7FFE6E;
  v103 = ((v99 & 0xFFFFFFFE | ((((-1799663310 * v84 - 1685382044) & 0xA585CF7C) - 1247651993 * v84 - 545814001) >> 31)) ^ 0x179496D6)
       + ((2 * v99) & 0x7B79CBBC ^ 0x5050C210);
  v104 = (1968343564 * v6 - ((-358280168 * v6) & 0x8259E7B8)) & 0xFFFFFFFC | ((v95 - 492085891 * (_DWORD)v6 + 914306527) >> 30);
  v105 = v101 - v103 + v102;
  v106 = -162153024 * v105 - ((-324306048 * v105 + 114462848) & 0xB3A62680) - 583246929;
  v107 = -224147104 * v94 - ((1699189440 * v94 + 1433282624) & 0x498E3C00) - 1887555037;
  v108 = (v106 ^ 0xD9D3136F) & 0xFFFFFFC0 | ((735663863 * v105
                                            - ((1471327726 * v105 + 404441666) & 0x579B84B8)
                                            + 937125757) >> 26);
  v109 = (v108 ^ 0xA) + 1231580582 - ((2 * v108) & 0x92D0E36A) + 1039;
  v110 = ((v107 ^ 0x24C71E03) & 0xFFFFFFE0 | (v98 >> 27)) ^ 0xE;
  LODWORD(v6) = v110 - ((2 * v110) & 0xE25818B4) - 248771494;
  v111 = ((1507413208 * v103 - ((-1280140880 * v103 - 1704703648) & 0xEAB526E0) - 1030965215) ^ 0xF55A9371) & 0xFFFFFFF8 | ((-348444261 * v103 - ((1450595126 * v103 + 860653868) & 0x615662A4) + 1246852584) >> 29);
  v112 = ((2 * (v104 - 1054018596)) & 0xBEF7BFDA ^ 0x8251A798) + ((v104 - 1054018596) ^ 0x1E572C31) + (v6 ^ 0xF12C0C5A);
  v113 = v112 + (v111 ^ 0xBFCEEFD1) + ((2 * v111) & 0x7F9DDFA8 ^ 8) + 1622487103;
  v114 = ((2 * (v112 + 545529875)) & 0xDFFEFB94) + ((v112 + 545529875) ^ 0xEFFF7DCA);
  v115 = (v113 - ((2 * v113) & 0x3B857AE2) + 499301745) ^ v109;
  HIDWORD(v19) = v109 ^ 0x1B5;
  LODWORD(v19) = v106 ^ 0xD9D31000;
  v116 = (((-1438646272 * v114 - ((1417674752 * v114 + 1392508928) & 0x69800000) + 510616054) ^ 0xB4EF61F6) & 0xFFC00000 | ((600736425 * v114 - ((1201472850 * v114 - 137182388) & 0xCF81A5BA) + 1672098947) >> 10)) ^ 0x19F034;
  v117 = (v116 - ((2 * v116) & 0xEE90FE0A) - 146243835) ^ ((v19 >> 10) - ((2 * (v19 >> 10)) & 0xB2338BD2) - 652622359);
  HIDWORD(v19) = v117 ^ 0x2991BC;
  LODWORD(v19) = v117 ^ 0x8A400000;
  v118 = ((v19 >> 22) - ((2 * (v19 >> 22)) & 0x21855ABE) - 1866289825) ^ 0x706FEFCF;
  v119 = (-921885487 * v118 - ((-1843770974 * v118) & 0xFB041B8C) - 41808442) ^ v115;
  v120 = ((2 * v119) ^ 0x52518204) - 2 * (((2 * v119) ^ 0x52518204) & 0x146CD0EE ^ (2 * v119) & 2) + 1953288429;
  v121 = (v119 ^ 0xB549C831) + (v120 & 0x38C21266 ^ 0x4FB7EF38) + ((2 * v120) & 0x71842488 ^ 0x60802088) - 2146959196;
  v122 = v121 - ((2 * v121) & 0xC5A9CB76) + 1658119611;
  v123 = v122 ^ v109 ^ 0x2BBC940E;
  v124 = -407839463 * v123 - ((1331804722 * v123) & 0x6C69C8BA) - 1238047651;
  v125 = (v115 ^ 0x54AACCC4)
       + (v122 ^ 0x9D2B1A44)
       + 1
       - ((2 * ((v115 ^ 0x54AACCC4) + (v122 ^ 0x9D2B1A44) + 1)) & 0x168653C0)
       - 1958532640;
  LODWORD(STACK[0x540]) = v122 ^ v109;
  v126 = -939524096 * v123 - ((((v122 ^ v109) << 31) + (v123 << 28)) & 0xAAAAAAAA);
  v127 = ((-1019281408 * (v122 ^ v6 ^ 0x93F8E9E1) - ((108920832 * (v122 ^ v6 ^ 0x93F8E9E1)) & 0x38DE0000) + 477062487) ^ 0x1C6F6557) & 0xFFFF0000 | ((-932265153 * (v122 ^ v6 ^ 0x93F8E9E1) - ((-1864530306 * (v122 ^ v6 ^ 0x93F8E9E1)) & 0xB3B1CEE0) - 640096400) >> 16);
  v128 = ((2 * v127) & 0xDB95FDEC ^ 0x1B1A0) + (v127 ^ 0x6DCA272E);
  LODWORD(STACK[0x4E0]) = v122;
  v129 = ((2 * ((v126 - 770061125) ^ 0xD219CCBB | (v124 >> 5))) & 0xE76E6DBE ^ 0x3624C04)
       + (((v126 - 770061125) ^ 0xD219CCBB | (v124 >> 5)) ^ 0xF60691FD);
  v130 = ((876609536 * (v125 ^ 0x8B4329E0) - ((1753219072 * (v125 ^ 0x8B4329E0)) & 0xEC800000) - 162739603) ^ 0xF64CCA6D) & 0xFFC00000 | ((-1957866287 * (v125 ^ 0x8B4329E0) - ((379234722 * (v125 ^ 0x8B4329E0)) & 0xF6D74BD6) - 76831253) >> 10);
  v131 = ((2 * v130) & 0xF553AFF6 ^ 0x51A5D2) + (v130 ^ 0xFA970D12);
  v132 = ((714735616 * (v122 ^ 0x62D4E5BB) - ((1429471232 * (v122 ^ 0x62D4E5BB)) & 0x8B240000) - 980277237) ^ 0xC592280B) & 0xFFFE0000 | ((1818858829 * (v122 ^ 0x62D4E5BB) - ((-657249638 * (v122 ^ 0x62D4E5BB)) & 0xED39E02C) - 157487082) >> 15);
  v133 = (v132 ^ 0x5F9486D7) + ((2 * v132) & 0xBF2AD7DC ^ 0x2D250) + v128 + v129 - v131 + 787996461;
  v134 = -1007545717 * v128 - ((132392214 * v128 + 77367516) & 0x6CE5384) + 968191536;
  v135 = -116832896 * v128 - ((303205120 * v128 + 239365632) & 0x142AAE00) + 825724467;
  v136 = ((-1918894080 * v133 - ((457179136 * v133 - 339738624) & 0xDD000000) + 1685942249) ^ 0xEE9D6FE9) & 0xFFE00000 | ((-742505363 * v133 - ((-1485010726 * v133 + 1543501662) & 0xF03AD43E) + 639460814) >> 11);
  v137 = ((2 * v136) & 0xCEDFF7F2 ^ 0x1E0752) + (v136 ^ 0x6770F854);
  v138 = (v135 ^ 0xA155733) & 0xFFFFFF80 | (v134 >> 25);
  v139 = v138 ^ 0xCFDFBFD6;
  v140 = (2 * v138) & 0x9FBF7F2E;
  v141 = ((1107296256 * v129 - (((v129 << 26) + 0x4000000) & 0x38000000) - 1626957152) ^ 0x1D069AA0) & 0xFE000000 | ((-1985904479 * v129 - ((323158338 * v129 + 170916738) & 0x40FAF090) - 443189751) >> 7);
  v142 = ((2 * v141) & 0xAE9CFFEE ^ 0x280F5E0) + (v141 ^ 0x560E8507);
  v143 = ((553648128 * v131 - ((1107296256 * v131 + 1241513984) & 0xA4000000) + 1998967821) ^ 0xD225D40D) & 0xFF000000 | ((1254474017 * v131 - ((-1786019262 * v131 - 1002448054) & 0xE4A56B58) - 730684591) >> 8);
  v144 = ((2 * v143) & 0xCF5DE6FE ^ 0x144A46A) + (v143 ^ 0xE75CA1CA);
  LOBYTE(v66) = ((v66 & 8 | 0x45) - (v66 & 1 | 0xBA) - 70) ^ 0x64;
  LOBYTE(v66) = ((2 * v66) | 0xBE) - v66 + 33;
  v145 = ((-80322113 * v137 - ((-160644226 * v137 + 921129074) & 0x829F5F10) + 1556305857) ^ 0x414FAF88) >> ~(_BYTE)v66;
  v146 = ((v145 - ((2 * v145) & 0x3AC1AA8) - 2116678316) ^ 0x81D60D54) >> (v66 ^ 0xF6);
  v147 = ((2 * v146) & 0xBEFF5ADE) + (v146 ^ 0xDF7FAD6F);
  v148 = v139 + (v140 ^ 2) + v142 - v144 - v137 + 858522223;
  v149 = -351613019 * v144 - ((-703226038 * v144 + 986102858) & 0xD4577E86) - 2020663960;
  v150 = (1239945263 * v148 - ((-1815076770 * v148 + 181867306) & 0xC998AEE6) - 365436664) >> 16;
  v151 = 271515648 * v148 - ((543031296 * v148 + 321519616) & 0xCEB40000) - 252750602;
  v152 = ((v151 & 0x20000000) + (v151 & 0xF66A0000 ^ 0x3997FFFF) + (v151 & 0x20000000 | 0xDFEB2456) + 1) ^ 0x7ECF24DE;
  v153 = v147 - 545259520 * v137 + 0x8000000;
  v154 = 671088640 * v144 + 1354991617 - ((1342177280 * v144 + 1342177280) & 0x55555555);
  LOBYTE(v34) = ~(((2 * (v150 & 0xBD ^ 0xBC)) & 0x60) - (v150 & 0xBD ^ 0xBC) - 49);
  v155 = (((2 * (v150 & 0x1ABD ^ 0x100862BC)) & 0x20001060) - (v150 & 0x1ABD ^ 0x100862BC) + 662304463) ^ 0x377194FF | v151 & 0x9950000;
  v156 = (((2 * (((v150 & 0xE542 ^ 0x5C99380B) - 1) ^ 0xE0BBDC7B)) & 0x8454880)
        - (((v150 & 0xE542 ^ 0x5C99380B) - 1) ^ 0xE0BBDC7B)
        + 2035306815) ^ 0xC572D10E;
  LODWORD(STACK[0x5F0]) = v122 ^ v6;
  LODWORD(STACK[0x520]) = v125;
  v157 = v122 ^ v6 ^ v109 ^ v125;
  v158 = (((((2 * v152) & 0x26A80110) - v152 + 1823144710) ^ 0x6DACFB8E | v156)
        - ((2 * ((((2 * v152) & 0x26A80110) - v152 + 1823144710) ^ 0x6DACFB8E | v156)) & 0xBB8754D6)
        + 1573104235) ^ 0x5DC3AA6B | ((v155 ^ 0x1100000) - 2 * ((v155 ^ 0x1100000) & 0x610660BD ^ v34 & 9) - 414818122) ^ 0xE74660B6;
  v159 = ((2 * v158) & 0xFF3FDF98) + (v158 ^ 0x7F9FEFCC);
  v160 = ((1409286144 * v142 - ((671088640 * v142 + 1744830464) & 0x40000000) + 347887621) ^ 0x20BC5805) & 0xFC000000 | ((-597694891 * v142 - ((952093866 * v142 + 1990013434) & 0x44EC8BD2) - 574300442) >> 6);
  v161 = -309554688 * v147 - 1822248448;
  v162 = v160 ^ 0x7EE626B0;
  v163 = (2 * v160) & 0xFCDFFF4E ^ 0x13B20E;
  v164 = (-1745435063 * v153 - ((804097170 * v153 + 915628722) & 0x23073C94u) - 858959965) >> 24;
  v165 = -154777344 * v153 - (v161 & 0xB8B47A00) + 638293549;
  v166 = v164 ^ 0x4F;
  LODWORD(STACK[0x570]) = v157;
  if (v157 == 1372828084)
    v166 = 33;
  v167 = (v166 & (v164 ^ 0x91)) - 2 * (v166 & (v164 ^ 0x91) & 3);
  v168 = ((2 * ((v154 + 2300) ^ 0x28C390FD | (v149 >> 5))) & 0x7E19FF5E ^ 0x600BB54)
       + (((v154 + 2300) ^ 0x28C390FD | (v149 >> 5)) ^ 0xBC5DA255);
  v169 = (v165 & 0x22E12100 ^ 0x4CDF396D | 0x111D4533) - (v165 & 0x22E12100 ^ 0x4CDF396D | 0xEEE2BACC) - 287130932;
  v170 = (v167 + 586574339) ^ 0x22F66A03 | (((v165 & 0x99024A00 ^ 0xAA40028B) - 1) & 0xFF3FFFFF | v165 & 0x441C9400) ^ 0x761A1E8A;
  v171 = v162 + v163 + v168 - v153 - v159 - 973731805;
  v172 = ((2 * (v169 ^ 0x5D825D5E | v164 & 0xDE)) & 0x4BFDA3E2 ^ 0x120)
       + ((v169 ^ 0x5D825D5E | v164 & 0xDE) ^ 0xE5FED161)
       + (v170 ^ 0x31BFDCAF)
       + ((2 * v170) & 0x637FB95E);
  v173 = v172 - 2 * ((v172 + 1749111136) & 0x40FF4BCF ^ v172 & 8) - 1455383257;
  v174 = ((-585842332 * v159 - ((-1171684664 * v159 + 1939542176) & 0x98F09898)) & 0xFFFFFFFC | ((-146460583 * v159
                                                                                                - ((1854562482 * v159
                                                                                                  + 1558627368) & 0x4FA62B0E)
                                                                                                - 700024933) >> 30))
       - 2042243940;
  v175 = ((2 * v174) & 0xFD1BFBFA ^ 0x98109898) + (v174 ^ 0x32F5B1B3);
  v176 = (((260308992 * v168 - ((520617984 * v168 + 294125568) & 0x2A780000) + 2114097928) ^ 0x953E9308) & 0xFFFC0000 | ((356336609 * v168 - ((712673218 * v168 + 1307243618) & 0x6C69C8C8) + 489315989) >> 14)) ^ 0x2D8D3;
  v177 = ((-1175453696 * v171 - ((1944059904 * v171 + 801112064) & 0xAF400000) - 276187608) ^ 0x57A9B628) & 0xFFF00000 | ((687160223 * v171 - ((1374320446 * v171 + 1002271484) & 0x80654EB2) + 1578197207) >> 12);
  v178 = ((2 * v177) & 0xCEDBFB9E ^ 0x80214) + (v177 ^ 0x6769FEE5);
  v179 = (((v173 ^ 0xC0FF4BC7) - v175 - ((2 * ((v173 ^ 0xC0FF4BC7) - v175) - 48497670) & 0xCBABF120) - 463210867) ^ 0x4F342F48)
       - v178
       + 1735261647;
  v180 = ((v176 - ((2 * v176) & 0x84899E9A) - 1035677875) ^ 0x2BB848A ^ v173) - (v178 + v175) + 1711012812;
  v181 = v180 - ((2 * v180) & 0x1C51EA4A) - 1909918427;
  v182 = (1298035837 * (((2 * v179) & 0xF5DF7F7E) + (v179 ^ 0x7AEFBFBF))
        - ((448588026 * (((2 * v179) & 0xF5DF7F7E) + (v179 ^ 0x7AEFBFBF)) + 1976936314) & 0x45966046)
        + 498467808) ^ v181;
  LODWORD(STACK[0x4B0]) = v182;
  v183 = (v182 ^ 0x2CE3C506) - ((2 * (v182 ^ 0x2CE3C506) + 18174754) & 0x7189E3C) + 1947662511;
  LODWORD(STACK[0x678]) = v183;
  v184 = v183 ^ 0x38C4F1E;
  v185 = (v184 & (v181 ^ 0x8E28F525)) - ((2 * (v184 & (v181 ^ 0x8E28F525))) & 0x662CE152);
  v186 = v178 - 1735261647 + v184 + 567841531 - ((2 * (v178 - 1735261647 + v184)) & 0x43B125F6);
  v187 = ((2 * (v175 + 24248835 + v184)) & 0xFFBFEF6E) + ((v175 + 24248835 + v184) ^ 0x7FDFF7B7);
  v188 = ((v184 + (v181 ^ 0x8E28F525)) ^ 0x7D1FF7BD)
       + ((2 * (v184 + (v181 ^ 0x8E28F525))) & 0xFA3FEF7A)
       + ((2 * v185 + 1714217298) ^ 0xA40E2955)
       + ((2 * (2 * v185 + 1714217298)) & 0x7BBA6FF0 ^ 0xB7E7BD5F)
       + 1;
  v189 = v188 - ((2 * v188 + 24805496) & 0x18B1CAA0) - 854186612;
  LODWORD(STACK[0x510]) = v189;
  v190 = v189 ^ 0xC58E550;
  v191 = -835817011 * v184 - ((-1671634022 * v184) & 0xF822F0E2) - 65963919;
  LODWORD(STACK[0x680]) = v186;
  v192 = v186 ^ 0x21D892FB;
  v193 = 1019416519 * v192 - ((2038833038 * v192) & 0x6FE85074);
  LODWORD(STACK[0x500]) = v187 - 2145384375;
  if (v187 - 2145384375 >= 0xF510DE7C)
    v194 = -261890701;
  else
    v194 = -445334545;
  LODWORD(STACK[0x5E0]) = v194;
  v195 = ((-(((v187 << 28) + 0x10000000) & 0x30000000) - 2013265920 * v187 - 459708269) ^ 0x1C996893) & 0xF8000000 | ((-1679190127 * v187 - ((936587042 * v187 + 1760657586) & 0x59C71618) - 514045083) >> 5);
  v196 = 1558419968 * v184 - ((969356288 * v184) & 0x608B6000);
  v197 = 1643700224 * v192 - ((-1007566848 * v192) & 0xA47E0000);
  v198 = (v195 ^ 0x3AD8C7E7)
       + (v195 ^ 0x56610C5)
       + ((2 * v195) & 0x7FFDE6C4 ^ 0x7533DF7F)
       + ((2 * v195) & 0x7F7FB77E ^ 0xA4E3030);
  v199 = ((v197 - 767621827) ^ 0xD23F053D) & 0xFFFFE000 | ((v193 - 1208735686) >> 19);
  v200 = ((2 * v199) & 0x3973FDFE ^ 0x2DFC) + (v199 ^ 0x9CB9E801);
  v201 = ((2 * v195) & 0xE7F5FD9E ^ 0x2C43890)
       + (v195 ^ 0xF69DE297)
       + ((2 * v198 - 2139214006) ^ 0xF5FAFC60)
       + ((2 * (2 * v198 - 2139214006)) & 0xEBF5F8C0);
  v202 = v201 - ((2 * v201 + 739510690) & 0xD78AF44A) - 2117107978;
  v203 = (((v196 + 809873523) ^ 0x3045B073) & 0xFFFFFE00 | (v191 >> 23)) ^ 0x1F8;
  v204 = v203 - ((2 * v203) & 0xAD6E7B5A) + 1454849453;
  v205 = ((581304320 * v190 - ((1162608640 * v190) & 0xDD140000) - 292844490) ^ 0xEE8B8C36) & 0xFFFE0000 | ((-1653501613 * v190 - ((987964070 * v190) & 0xA455E93C) - 768936802) >> 15);
  v206 = ((2 * v205) & 0xBFFCFFFE ^ 0x48AA) + (v205 ^ 0x5FFFDBAA);
  v207 = ((v200 + 1665532161 + (v204 ^ 0x3D724788 ^ v202)) ^ 0xD7F6FFA9)
       - v206
       + ((2 * (v200 + 1665532161 + (v204 ^ 0x3D724788 ^ v202))) & 0xAFEDFF52);
  v208 = v202 ^ 0x6BC57A25;
  v209 = -2019870771 * (v202 ^ 0x6BC57A25) - ((255225754 * (v202 ^ 0x6BC57A25)) & 0x173F1D8C) + 195006150;
  v210 = -1067558529 * v200 - ((-2135117058 * v200 + 1759752446) & 0xB334F586) - 1911794878;
  v211 = (335544320 * v207 - ((671088640 * v207 + 1879048192) & 0x9FFFFFFF) + 93238609) ^ 0x4D8EB551;
  v212 = (-1797732091 * v207 - ((699503114 * v207 + 418516828) & 0x7A9900CC) - 909801452) >> 6;
  v213 = ((v212 | v211) ^ 0xF53201) - 2 * (((v212 | v211) ^ 0xF53201) & 0x6BFC327C ^ v212 & 8);
  v214 = 1501495296 * v200 - ((16646144 * v200 + 16646144) & 0x1780000) + 1497043837;
  v215 = 1020903016 * v208 - ((2041806032 * v208) & 0x8B72FAC0);
  v216 = ((2 * ((v214 ^ 0x80BC137D) & 0xFFFF0000 | HIWORD(v210))) & 0xEFFE9CEA ^ 0x9020)
       + (((v214 ^ 0x80BC137D) & 0xFFFF0000 | HIWORD(v210)) ^ 0x77FF97EF);
  v217 = ((v215 - 977699482) ^ 0xC5B97D66) & 0xFFFFFFF8 | (v209 >> 29);
  v218 = v217 - ((2 * v217) & 0xF6934CF8) + 2068424316;
  v219 = 2 * v216 + 268526358;
  v220 = v219 ^ 0x285205;
  v221 = (2 * v219) & 0xFFAF5BF4;
  v222 = ((-2124698916 * v206 - ((45569464 * v206 + 55268792) & 0x9BC32810) - 813220121) ^ 0x4DE1940B) & 0xFFFFFFFC | ((542567095 * v206 - ((1085134190 * v206 - 1059924626) & 0xE3372F6C) + 1376060013) >> 30);
  v223 = ((2 * v222) & 0xEB7CD3BE ^ 2) + (v222 ^ 0xF5BE69DE);
  v224 = (v213 - 335793548) ^ 0xEBFC3274;
  v225 = 1896977585 * v224 - ((-501012126 * v224) & 0xA81E26BA) - 737209507;
  v226 = v218 ^ 0x90B59408 ^ (v213 - 335793548);
  v227 = (~(1480728888 * v216 + 1692385640) | 0x75A9B587) + 740364444 * v216;
  v228 = ((-1777301426 * v216 + 1496838234) & 0xFE31A168) + 888650713 * v216;
  v229 = v220
       - v221
       - v223
       + ((v216 - 2013222662 + v226 + 2193) ^ 0x53EFFBCF)
       + ((2 * (v216 - 2013222662 + v226 + 2193)) & 0xA7DFF79E)
       + 1158497794;
  v230 = (((573740576 * v224 - ((73739328 * v224) & 0x2ADE82C0) + 359612797) ^ 0x156F417D) & 0xFFFFFFE0 | (v225 >> 27)) ^ 0x1A;
  v231 = v230 - ((2 * v230) & 0x4F34E7EA);
  v232 = ((v227 + 2006648308) ^ 0xC52B253F) & 0xFFFFFFFC | ((v228 + 1414215454) >> 30);
  v233 = v232 - 2 * (v232 & 0x1BB6B95F ^ ((v228 + 1414215454) >> 30) & 2) + 464959837;
  v234 = ((1634190592 * v229 - ((47155712 * v229 + 111663616) & 0x27909C00) - 1222886581) ^ 0x93C84E4B) & 0xFFFFFF00 | ((123824069 * v229 - ((247648138 * v229 + 809936858) & 0x96F65B64) - 476151393) >> 24);
  v235 = ((2 * v234) & 0xDCDF76F6 ^ 0x96) + (v234 ^ 0xEE6FBBB0);
  v236 = 44593339 * v235 - ((89186678 * v235 + 122190414) & 0x13EE88A6) + 2107343226;
  v237 = (((457703424 * v223 - ((915406848 * v223 + 1754267648) & 0x79100000) + 1892775222) ^ 0xBC897536) & 0xFFF80000 | ((1752761193 * v223 - ((-789444910 * v223 - 1367085806) & 0xFA33DE1E) - 732174952) >> 13)) ^ 0x3E8CF;
  LOBYTE(v225) = ((v225 >> 27) & 4 ^ 0xE5) - ((v225 >> 27) & 4) + ((v225 >> 27) & 0x1E ^ 8);
  v238 = (v233 ^ 0x3C2CCAA8 ^ (v231 + 664433653)) + 294666848 + v235 + 549;
  v239 = v237 - ((2 * v237) & 0xC696A4AA) + 1665880661;
  v240 = v239 ^ 0x634B5255;
  v241 = (~(428203022 * (v239 ^ 0x634B5255)) | 0xAAB2CA1B) + 1287843335 * (v239 ^ 0x634B5255) - 1431921933;
  v242 = v239 ^ 0xA27ACFF6 ^ (v238 - ((2 * v238) & 0x82633B46) - 1053712989);
  v243 = (v225 & 0x66 ^ 1 | v225 & 0x98) - 1;
  v244 = ((-54826807 * v242 - ((964088210 * v242) & 0x27F3FB52) - 1812333143) ^ 0x93F9FDA9) >> (v243 ^ 0xF6);
  v245 = v244 - ((2 * v244) & 0x27C0CB70);
  v246 = 1356953088 * v235 - ((-1581061120 * v235 - 1863017472) & 0xA5C94000) - 1688277490;
  v247 = ((-536870912 * (((v231 + 664433653) ^ 0x279A73F5) & 1)
         - 805306368 * ((v231 + 664433653) ^ 0x279A73F5)
         - 1780633389) ^ 0x95DDB0D3) & 0xF0000000 | ((-1510210467 * ((v231 + 664433653) ^ 0x279A73F5)
                                                    - ((1274546362 * ((v231 + 664433653) ^ 0x279A73F5)) & 0x6E0F0504)
                                                    - 1224244606) >> 4);
  v248 = ((2 * v247) & 0xE7EF4DEC ^ 0x6E04040) + (v247 ^ 0xF887DEDE);
  v249 = (-219307228 * v242) ^ 0xFBEFF9DB;
  v250 = (-438614456 * v242) & 0xF7DFF3B0;
  v251 = ((-869343120 * v240 - ((408797408 * v240) & 0x25E57980) - 1829585726) ^ 0x92F2BCC2) & 0xFFFFFFF0 | (v241 >> 28);
  v252 = ((v246 ^ 0x52E4A00E) & 0xFFFFFE00 | (v236 >> 23)) ^ 0x113;
  v253 = ((2 * v251) & 0xEFF3FFF6 ^ 0x14) + (v251 ^ 0x77F9FFF1) - v248;
  v254 = v253 - ((2 * v253 + 2012958198) & 0x5FBE295A) - 1411597400;
  v255 = v252 - ((2 * v252) & 0x8CAE8D7A) + 1180124861;
  v256 = 2
       * (((v254 ^ 0x2FDF14AD) & (v255 ^ 0x465746BD)) - ((2 * ((v254 ^ 0x2FDF14AD) & (v255 ^ 0x465746BD))) & 0x673A7310))
       - 415599856;
  v257 = (((v245 + 333473208) ^ 0x13E065B8) >> (v243 ^ 0xE8))
       - 2 * ((((v245 + 333473208) ^ 0x13E065B8) >> (v243 ^ 0xE8)) & 0x3F)
       + 319;
  v258 = v249
       + v250
       + (v257 ^ 0xF9ECFF44)
       + ((2 * v257) & 0xF6 ^ 0x76)
       - 2
       * ((v249 + v250 + (v257 ^ 0xF9ECFF44) + ((2 * v257) & 0xF6 ^ 0x76) + 170067626) & 0xFFF933B ^ (v249 + v250 + (v257 ^ 0xF9ECFF44)) & 1)
       + 438475236;
  v259 = (v254 ^ v255 ^ 0x69885210) + (v256 ^ 0x1BCB88AF) + 51250241 + ((2 * v256) & 0xF9E3F77C ^ 0xC860E620);
  v260 = (v259 ^ 0xCF7BB7F3) + ((2 * v259) & 0x9EF76FE6) + 813975565 + (v258 ^ 0xFFF933A);
  v261 = v260 - ((2 * v260) & 0x263A550E);
  v262 = (v258 ^ 0xFFF933A)
       + 1391156377
       * (((2 * (v248 + 201873674 + (v255 ^ 0x465746BD))) & 0xF1EDF7FE)
        + ((v248 + 201873674 + (v255 ^ 0x465746BD)) ^ 0x78F6FBFF))
       - 255934311;
  v263 = v262 - ((2 * v262) & 0x3BE87886) - 1644938173;
  v261 += 320678535;
  v264 = (v263 ^ v261 ^ 0x42A11380) + 1;
  v265 = v263 ^ v261 ^ 0x6C691E6;
  LODWORD(STACK[0x4D0]) = v265;
  LODWORD(STACK[0x560]) = v258;
  v266 = v264 + (v261 ^ 0x131D2A87) - ((2 * (v264 + (v261 ^ 0x131D2A87))) & 0xE54FD19E) - 223876913;
  LODWORD(STACK[0x580]) = v266;
  v267 = v264 + (v255 ^ 0x465746BD) - ((2 * (v264 + (v255 ^ 0x465746BD))) & 0x953BFFAC) - 895615018;
  HIDWORD(v268) = v263 ^ ~v261;
  LODWORD(v268) = (1810100545 * (v263 ^ v261 ^ 0xBD5EEC7F)
                 - 105477048
                 - ((-674766206 * (v263 ^ v261 ^ 0xBD5EEC7F)) & 0xF36D1894)
                 + 2) ^ 0xF9B68C48;
  v269 = (v268 >> 2) - ((2 * (v268 >> 2)) & 0xF7B24A22) + 2077828369;
  LODWORD(STACK[0x660]) = v267;
  v270 = (((v267 << 29) ^ 0x20000000) - 326405743 + ((2 * ((v267 << 29) ^ 0x20000000) + 0x40000000) & 0x80000000)) ^ 0xCC8B7191 | ((1570816535 * (v267 ^ 0xCA9DFFD6) - ((-1153334226 * (v267 ^ 0xCA9DFFD6)) & 0x8B991106) + 1171032195) >> 3) ^ 0x8B99110;
  v271 = v270 - ((2 * v270) & 0xC0DC4BCA);
  LODWORD(STACK[0x530]) = v265 ^ v258;
  HIDWORD(v268) = v265 ^ v258 ^ 3;
  LODWORD(v268) = (-2094532911 * (v265 ^ v258 ^ 0xB467EEA3)
                 + 1940768080
                 - ((105901474 * (v265 ^ v258 ^ 0xB467EEA3)) & 0xE75B8AAE)
                 + 7) ^ 0x73ADC550;
  v272 = (v268 >> 3) - ((2 * (v268 >> 3)) & 0x5E74E3E4) + 792359410;
  v273 = v272 ^ 0x2F3A71F2;
  v274 = -826717667 * (v272 ^ 0x2F3A71F2) - ((-1653435334 * (v272 ^ 0x2F3A71F2)) & 0xD3A7EA2E) + 1775498519;
  v275 = ((1992468288 * (v266 ^ 0xF2A7E8CF) - ((-310030720 * (v266 ^ 0xF2A7E8CF)) & 0x84390600) + 1109164855) ^ 0x421C8337) & 0xFFFFFFC0 | ((1037765277 * (v266 ^ 0xF2A7E8CF) - ((2075530554 * (v266 ^ 0xF2A7E8CF)) & 0x4067B6CE) - 1607214233) >> 26);
  v276 = ((2 * v275) & 0xC4DFBFFE ^ 0x50) + (v275 ^ 0x626FDFD7);
  v277 = v269 ^ v272 ^ 0x348D7106;
  v278 = (v271 + 1617831397) ^ 0x606E25E5;
  v279 = ((2 * (((v271 + 1617831397) ^ v277) - v276 + 1651499007)) & 0xDFF6D7A6)
       + ((((v271 + 1617831397) ^ v277) - v276 + 1651499007) ^ 0xEFFB6BD3);
  v280 = -652470813 * v279 - ((-1304941626 * v279 - 599381554) & 0xE0D64BF2) - 561104160;
  v281 = ((59574554 * v278) & 0x351CBADC) - 29787277 * v278;
  v282 = 59574554 * v278 - ((119149108 * v278) & 0x74EB8BC8) + 980796900;
  v283 = (v282 & 0xFFFFFFFE | ((v281 + 1701946001) >> 31)) ^ 0x3A75C5E4;
  v284 = v283 - 2 * (v283 & 0x221A48CB ^ v282 & 0xA) + 572147905;
  v285 = -2110409303 * v276 - ((74148690 * v276 + 435530578) & 0xF044EB22) + 85805882;
  v286 = (((1468792832 * v279 - ((-1357381632 * v279 - 1489502208) & 0xA2700000) - 1529460171) ^ 0x513A4A35) & 0xFFFC0000 | (v280 >> 14)) ^ 0x3C1AC;
  v287 = 1800536064 * v276 - ((-693895168 * v276 + 1453588480) & 0xE3C00000) + 489907431;
  v288 = v286 - 2 * (v286 & 0x708E065F ^ (v280 >> 14) & 1) - 259127714;
  v289 = ((-1525776384 * v273 - ((1243414528 * v273) & 0xB2000000) - 654297474) ^ 0xD900367E) & 0xFFFF8000 | (v274 >> 17);
  v290 = ((2 * v289) & 0x6F5D7FF6 ^ 0x69D2) + (v289 ^ 0xB7AE8B12);
  v291 = ((2 * ((v287 ^ 0x71E164E7) & 0xFFFE0000 | (v285 >> 15))) & 0xDFDBF596 ^ 0x3E080)
       + (((v287 ^ 0x71E164E7) & 0xFFFE0000 | (v285 >> 15)) ^ 0x6FEC0A8F);
  v292 = 1843957469 * v291 - ((-607052358 * v291 + 1324599682) & 0xBA4AE53C) + 77551455;
  v293 = (v284 ^ 0xD2944E9F ^ v288) - (v291 + v290) + 664582854;
  v294 = ((2 * v293) & 0xBDBEDBF2) + (v293 ^ 0x5EDF6DF9);
  HIDWORD(v268) = (v280 >> 14) ^ 4;
  LODWORD(v268) = (-1879532367 * (v288 ^ 0xF08E065E) - 400305712 - ((535902562 * (v288 ^ 0xF08E065E)) & 0xD047A3A6) + 3) ^ 0xE823D1D0;
  v295 = -1975125367 * v294 - ((344716562 * v294 + 1440216958) & 0x58D116DA) + 1465157420;
  v296 = ((1327401336 * v290 - ((-1640164624 * v290 - 639803728) & 0x9EA8DC60) - 1136452211) ^ 0x4F546E35) & 0xFFFFFFF8 | ((-1981558481 * v290 - ((331850334 * v290 + 456895446) & 0x7261DA84) + 1187955501) >> 29);
  v297 = (v296 ^ 1) - ((2 * v296) & 0x29A7097C);
  v298 = (v268 >> 3) - ((2 * (v268 >> 3)) & 0xA735A0E0) - 744828816;
  v299 = v298 ^ 0xD39AD070;
  v300 = -2097495347 * (v298 ^ 0xD39AD070) - ((99976602 * (v298 ^ 0xD39AD070)) & 0x2A046120) - 1795018608;
  v297 += 349406398;
  v301 = -1085202432 * v294 - ((245514240 * v294 + 250593280) & 0xD5A8000) + 103097067;
  v302 = 498728960 * v291 - ((997457920 * v291 + 319029248) & 0x46FC0000) + 1828730350;
  v303 = ((v301 ^ 0x86AD42EB) & 0xFFFFE000 | (v295 >> 19)) ^ 0x58D;
  v304 = v303 - 2 * (v303 & 0x7977C85F ^ (v295 >> 19) & 0x10);
  v305 = 2
       * (((v298 ^ 0xD39AD070) & (v297 ^ 0x14D384BE))
        - ((2 * ((v298 ^ 0xD39AD070) & (v297 ^ 0x14D384BE))) & 0x53EDA0B6)
        + 1777782883)
       - 16;
  v306 = ((v302 ^ 0xA37E35EE) & 0xFFFE0000 | (v292 >> 15)) ^ 0xBA4A;
  v307 = (v297 ^ 0xC74954CE ^ v298) + (v305 ^ 0xACF65F19) - 2132541359 + ((2 * v305) & 0xFE37FF5C ^ 0xA613414C);
  v308 = v306 - ((2 * v306) & 0x1EAA3F18) + 257236876;
  v309 = v308 ^ 0xF551F8C;
  v310 = 901433759 * (v308 ^ 0xF551F8C) - ((1802867518 * (v308 ^ 0xF551F8C)) & 0xCB8F7A8C) - 439894714;
  v311 = v308 ^ (v304 - 109590449) ^ 0x1C5C2424 ^ (v307 - ((2 * v307) & 0xD4FDE7CE) - 360778777);
  v312 = -1895857437 * v311 - ((503252422 * v311) & 0x189BE4E6) + 206434931;
  v313 = -1049526272 * v311 - ((48431104 * v311) & 0x17BD0000);
  v314 = ((-1757413376 * ((v304 - 109590449) ^ 0xF977C84F)
         - ((780140544 * ((v304 - 109590449) ^ 0xF977C84F)) & 0x53800000)
         + 701171724) ^ 0x29CB080C) & 0xFFC00000 | ((-1046001059 * ((v304 - 109590449) ^ 0xF977C84F)
                                                   - ((-2092002118 * ((v304 - 109590449) ^ 0xF977C84F)) & 0xE6297032)
                                                   + 1930737689) >> 10);
  v315 = ((2 * v314) & 0xF3DF8FFC ^ 0x198A5C) + (v314 ^ 0xF9F302D0);
  v316 = (((v313 + 199141004) ^ 0xBDEA68C) & 0xFFFF8000 | (v312 >> 17)) ^ 0x626;
  v317 = (((-1218890784 * v309 - ((1857185728 * v309) & 0x943FCE40) - 903878866) ^ 0xCA1FE72E) & 0xFFFFFFE0 | (v310 >> 27)) ^ 0x1C;
  v318 = (((-175793664 * v299 - ((1795896320 * v299) & 0x611DB000) + 814667859) ^ 0x308ED853) & 0xFFFFFE00 | (v300 >> 23)) ^ 0x12A;
  v319 = v318 - ((2 * v318) & 0x634D064A) + 832996133;
  v320 = v315 + 101726210 + (v319 ^ 0x31A68325);
  v321 = v315 + 101726210 + ((v317 - ((2 * v317) & 0x1B6D4520) - 1917410672) ^ 0xBC1021B5 ^ v319);
  v322 = v316 - ((2 * v316) & 0x69789306) + 884754819;
  v323 = (v320 ^ 0xB5E99CB7) + ((2 * v320) & 0x6BD3396E) + 1242981193 + (v322 ^ 0x34BC4983);
  v324 = v322 ^ (v321 - ((2 * v321) & 0x1DD07F20) - 1897382000) ^ 0x72D02F99 ^ (((2 * v323) & 0xEEFB6FAE)
                                                                              + (v323 ^ 0x777DB7D7)
                                                                              - 2
                                                                              * ((((2 * v323) & 0xEEFB6FAE)
                                                                                + (v323 ^ 0x777DB7D7)
                                                                                + 1469379776) & 0x4884599A ^ (((2 * v323) & 0xEEFB6FAE) + (v323 ^ 0x777DB7D7)) & 0x10)
                                                                              + 538529354);
  v325 = v324 - ((2 * v324 - 1701039570) & 0xD1C879F2);
  LODWORD(STACK[0x640]) = v325 - 1238215152;
  LODWORD(STACK[0x690]) = ((v325 - 1238215152) ^ 0x68E43CF9)
                        + (v322 ^ 0x34BC4983)
                        - ((2 * (((v325 - 1238215152) ^ 0x68E43CF9) + (v322 ^ 0x34BC4983))) & 0x8183DB0E)
                        - 1061032569;
  LODWORD(STACK[0x668]) = ((v325 - 1238215152) ^ 0x971BC306)
                        + v315
                        - ((2 * (((v325 - 1238215152) ^ 0x971BC306) + v315) + 203452422) & 0xB9C26B22)
                        - 487494252;
  v326 = malloc(0x408uLL);
  STACK[0xAF0] = (unint64_t)v326;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((480 * (v326 != 0)) ^ v5)) - 8))();
}

uint64_t sub_100142FE4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unint64_t v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  char v78;
  char v79;
  char v80;
  int v81;
  unsigned int v82;

  v11 = v6 - 364;
  v12 = STACK[0x630];
  LODWORD(STACK[0x480]) = LODWORD(STACK[0x630]) ^ 0x4A8412A9;
  LODWORD(STACK[0x458]) = (STACK[0x608] & v7) - ((2 * (STACK[0x608] & v7)) & 0x135D5128) + 162441364;
  LODWORD(STACK[0x450]) = (v7 | LODWORD(STACK[0x610])) - ((2 * (v7 | LODWORD(STACK[0x610]))) & 0xF12CEBE) + 126445407;
  v13 = STACK[0x628];
  LODWORD(STACK[0x4A0]) = LODWORD(STACK[0x628]) >> 8;
  LODWORD(STACK[0x608]) = HIBYTE(v13) ^ 0xEF9384C4;
  LODWORD(STACK[0x478]) = v9
                        + LODWORD(STACK[0x5E0])
                        + v5
                        - 1700049830
                        - ((2 * (v9 + LODWORD(STACK[0x5E0]) + v5 - 1700049830)) & 0xA40D85E2)
                        + 1376174833;
  LODWORD(STACK[0x438]) = v10 - 1238215144;
  v14 = STACK[0x640];
  v15 = LODWORD(STACK[0x640]) ^ v1;
  v16 = (v15 & 0x684CEC41 ^ 0x65014960)
      + (v15 & 0x200CE841 ^ 0x903CB01D)
      - ((v15 & 0x684CEC41 ^ 0x65014960) & 0x240CE961);
  v17 = LODWORD(STACK[0x690]) ^ v3;
  v18 = ((STACK[0x690] & 0xFFFFFDFF ^ 0x82EA3D4A)
       + (STACK[0x690] & 0x4D4B7045 ^ 0x4D014005)
       - ((STACK[0x690] & 0xFFFFFDFF ^ 0x82EA3D4A) & 0x4D4B7045)) ^ 0xD4030C9;
  LODWORD(STACK[0x44C]) = (v18 | 0xB800E353) - (v18 | 0x47FF1CAC) + 1207901356;
  v19 = ((v15 & 0x9212020E ^ 0x1800E20F | v15 & 0x5A111B0) - 1) ^ 0xBF12E266;
  v20 = LODWORD(STACK[0x668]) ^ 0xDCE13591;
  LODWORD(STACK[0x440]) = v20 - 449817616 + v2 - ((2 * (v20 - 449817616 + v2)) & 0xA24107DE) - 786398225;
  v21 = (v19 - ((2 * v19) & 0x3640718) + 32695180) ^ 0x3450E14E | v16 ^ 0x913DF85D;
  v22 = v21 - ((2 * v21) & 0xE2182546) - 250867037;
  LODWORD(STACK[0x464]) = v22;
  v23 = (((-1933756032 * v17 - ((427455232 * v17) & 0xB26BEA00) + 1496708475) ^ 0x5935F57B) & 0xFFFFFF80 | ((119110259 * v17 - ((238220518 * v17) & 0x88A5442C) + 1146266134) >> 25)) ^ 0x22;
  v24 = v23 - ((2 * v23) & 0xB9732648) + 1555665700;
  v25 = (1811939328 * v4 - ((-671088640 * v4) & 0xDFFFFFFF) + 1824568893) ^ 0x6CC0B63D | ((-292073701 * v4
                                                                                         - ((-584147402 * v4) & 0xB071846C)
                                                                                         + 1480114742) >> 6);
  v26 = ((2 * v25) & 0xBFBF77CE ^ 0x2814600) + (v25 ^ 0xDEBF58EF);
  v27 = ((-899678208 * (v22 ^ 0xF10C12A3) - ((348127232 * (v22 ^ 0xF10C12A3)) & 0x4C800000) - 1505034311) ^ 0xA64AFFB9) & 0xFFE00000 | ((1892111955 * (v22 ^ 0xF10C12A3) - ((562998438 * (v22 ^ 0xF10C12A3)) & 0x2BA06130) - 1781518184) >> 11);
  v28 = ((2 * v27) & 0xD6F0AC6E ^ 0x20240C) + (v27 ^ 0xEB6AEC31);
  v29 = ((-228342528 * v20 - ((617056768 * v20) & 0x25B33A00) + 316251456) ^ 0x12D99D40) & 0xFFFFFF00 | ((-1259183163 * v20 - ((1776600970 * v20) & 0x86A040BE) + 1129324639) >> 24);
  v30 = ((2 * v29) & 0xFCFDDDD2 ^ 0x82) + (v29 ^ 0xFE7EEEAA);
  v31 = v26 - v30 - ((2 * (v26 - v30) + 1027499524) & 0xAB102DAE) - 198751783;
  v32 = 2 * (((v31 ^ 0xD58816D7) & (v24 ^ 0x5CB99324)) - ((2 * ((v31 ^ 0xD58816D7) & (v24 ^ 0x5CB99324))) & 0x30E7E7E4))
      + 820504548;
  v33 = (v24 ^ 0x893185F3 ^ v31) + (v32 ^ 0x4F99230F) - 2139014379 + ((2 * v32) & 0xFEFD89D4 ^ 0x60CD89C0);
  HIDWORD(v34) = (v33 ^ 0xDAFFFDF7) + v28;
  LODWORD(v34) = (1772274431 * (((2 * v33) & 0xB5FFFBEE) + HIDWORD(v34) - 1359450201)
                - ((1397065214 * (((2 * v33) & 0xB5FFFBEE) + HIDWORD(v34) - 1359450201) + 217516458) & 0x4E84B098)
                + 1841159457) ^ 0x2742584C;
  v35 = (v34 >> 1) - ((2 * (v34 >> 1)) & 0xA13414E8) + 1352272500;
  v36 = 1225264699 * (v35 ^ 0x509A0A74) - ((303045750 * (v35 ^ 0x509A0A74)) & 0x6EB873E8) + 928791028;
  v37 = ((-448640624 * v28 - ((1250202400 * v28 + 488088608) & 0x53A83560) - 127931195) ^ 0x29D41AB5) & 0xFFFFFFF0 | ((-296475495 * v28 - ((-592950990 * v28 - 640583102) & 0x90A4A51A) + 893063086) >> 28);
  v38 = ((2 * v37) & 0xFBED5FFE ^ 8) + (v37 ^ 0xFDF6AFFB);
  v39 = ((151893760 * (v24 ^ 0x5CB99324) - ((303787520 * (v24 ^ 0x5CB99324)) & 0xF2C6BA00) - 110928598) ^ 0xF9635D2A) & 0xFFFFFF00 | ((990449079 * (v24 ^ 0x5CB99324) - ((1980898158 * (v24 ^ 0x5CB99324)) & 0x83B9267E) + 1104974655) >> 24);
  v40 = ((2 * v39) & 0x7FF7BEF8 ^ 0x80) + (v39 ^ 0xBFFBDF3D);
  v41 = ((508559360 * v30 - ((480247808 * v30 + 308281344) & 0x17000000) - 1799668710) ^ 0x8B8B3C1A) & 0xFFF00000 | ((1757266405 * v30 - ((-780434486 * v30 + 950223142) & 0x8BA2A7AC) - 501025687) >> 12);
  v42 = (v41 ^ 0x45D15) - 1063075560 - ((2 * (v41 ^ 0x45D15)) & 0x81459774) + 2722;
  v43 = 513021603 * v38 - ((220736838 * v38 + 247729478) & 0x99C7566) - 63946410;
  v44 = 189890560 * v38 - ((379781120 * v38 + 111345664) & 0x7F6D0000) + 1124613543;
  v45 = v40 + 1074008254 + (v42 ^ 0x9038C1CE ^ v35);
  v46 = 238747648 * (v35 ^ 0x509A0A74) - ((209059840 * (v35 ^ 0x509A0A74)) & 0xF920000);
  v47 = -1293815639 * v40 - 2 * ((-1293815639 * v40 + 2100901668) & 0x71105D5F ^ (-1293815639 * v40) & 3) + 1850315904;
  LODWORD(STACK[0x670]) = HIWORD(v13) ^ 0xF3640A8A;
  v48 = 1895322752 * v40 - ((-504321792 * v40 + 959915008) & 0xDF251B00) - 1943134313;
  v49 = ((v45 + 4038) ^ 0xBFFFFFC) - v38 + ((2 * (v45 + 4038)) & 0x17FFFFF8);
  v50 = -1183072685 * v49 - ((1928821926 * v49 - 1944283662) & 0xB753FA42) - 1581758438;
  v51 = 1275068416 * v49 - ((-1744830464 * v49 - 939524096) & 0xE0000000) + 1473182561;
  v52 = (((v46 + 130614907) ^ 0x7C9067B) & 0xFFFF0000 | HIWORD(v36)) ^ 0x375C;
  v53 = v52 - ((2 * v52) & 0x94CAB38C) - 899327546;
  v54 = ((2 * ((v51 ^ 0x73CEFB61) & 0xFC000000 | (v50 >> 6))) & 0xCFCF79BE ^ 0x2CD49A8)
      + (((v51 ^ 0x73CEFB61) & 0xFC000000 | (v50 >> 6)) ^ 0x66891B2B);
  v55 = ((v44 ^ 0x3FB6BDA7) & 0xFFFF8000 | (v43 >> 17)) ^ 0x4267;
  v56 = v55 - ((2 * v55) & 0x9A51F3D2) - 852952599;
  v57 = ((v48 ^ 0xEF928D97) & 0xFFFFFF80 | (v47 >> 25)) ^ 0x78;
  v58 = ((v57 - ((2 * v57) & 0x793E58C) - 2083917114) ^ 0x49ACAB00 ^ v53) - 1743240415 + v54;
  v59 = v58 - ((2 * v58) & 0x79E92D4C) + 1022662310;
  v60 = v56 ^ 0xCD28F9E9;
  v61 = 2 * (((v59 ^ 0x3CF496A6) & (v56 ^ 0xCD28F9E9)) - ((2 * ((v59 ^ 0x3CF496A6) & (v56 ^ 0xCD28F9E9))) & 0x2EB79E20))
      - 1363698144;
  v62 = (v56 ^ 0xF1DC6F4F ^ v59) + (v61 ^ 0xD3D820CE) - 2104475374 + ((2 * v61) & 0xFADF7DDC ^ 0x584F3C40);
  v63 = STACK[0x678];
  LODWORD(STACK[0x5E0]) = HIBYTE(LODWORD(STACK[0x678])) ^ 0x68BFC8D0;
  LODWORD(STACK[0x610]) = HIWORD(v63) ^ 0x98FF956B;
  v64 = (((824180736 * (v53 ^ 0xCA6559C6) - ((1648361472 * (v53 ^ 0xCA6559C6)) & 0x69400000) - 1262964430) ^ 0xB4B8B132) & 0xFFE00000 | ((-1225981559 * (v53 ^ 0xCA6559C6) - ((1843004178 * (v53 ^ 0xCA6559C6)) & 0x45430A04) + 581010690) >> 11)) ^ 0x45430;
  v65 = v64 - ((2 * v64) & 0xAF64FFBE) + 1471315935;
  v66 = (((-1978697760 * v60 - ((337571776 * v60) & 0xE27E4B00) + 1899963807) ^ 0x713F259F) & 0xFFFFFFE0 | ((877689791 * v60 - ((1755379582 * v60) & 0xD6857820) + 1799535632) >> 27)) ^ 0xD;
  v67 = (((1896947712 * (((2 * v62) & 0x93F7D8F4) + (v62 ^ 0xC9FBEC7A))
         - ((1646411776 * (((2 * v62) & 0x93F7D8F4) + (v62 ^ 0xC9FBEC7A)) + 1756200960) & 0x630FC000)
         + 635347271) ^ 0x3187E147) & 0xFFFFE000 | ((1312000137 * (((2 * v62) & 0x93F7D8F4) + (v62 ^ 0xC9FBEC7A))
                                                   - ((-1670967022 * (((2 * v62) & 0x93F7D8F4) + (v62 ^ 0xC9FBEC7A))
                                                     - 1803598484) & 0x918A08A2)
                                                   + 319072007) >> 19)) ^ 0x918;
  v68 = (((-1369833472 * v54 - ((481558528 * v54 + 255066112) & 0x332C0000) + 556884721) ^ 0x199762F1) & 0xFFFE0000 | ((-551430355 * v54 - ((1044622938 * v54 + 97191834) & 0x215B8050) + 328418293) >> 15)) ^ 0x1215B;
  v69 = v68 - ((2 * v68) & 0xABB98FA) - 2057450371;
  v70 = ((2 * ((v65 ^ 0x57B27FDF) + (v69 ^ 0x7AA23382) + 1)) & 0xFC3FBE8E)
      + (((v65 ^ 0x57B27FDF) + (v69 ^ 0x7AA23382) + 1) ^ 0x7E1FDF47);
  v71 = v67 - ((2 * v67) & 0x3A4F87EA) - 1658338315;
  v72 = (v69 ^ 0x855DCC7D) + ((v66 - ((2 * v66) & 0xC3B47818) - 505791476) ^ 0xB66843D3 ^ v65);
  v73 = ((2 * v72) & 0xAD6C437E) + (v72 ^ 0x56B621BF) + (v71 ^ 0x62D83C0A);
  v74 = v73 - 2 * ((v73 + 692706882) & 0x2097FEFF ^ v73 & 1) - 907944640;
  LODWORD(STACK[0x498]) = (v14 >> 8) ^ 0x21DEC382;
  v75 = v71 ^ (v70 - ((2 * v70 + 45601304) & 0x2330F8EA) - 1829476991) ^ v74;
  LODWORD(STACK[0x470]) = v75 ^ 0x80539606;
  v76 = (v75 ^ 0x2EA553E8)
      + (v74 ^ 0x2097FEFE)
      - ((2 * ((v75 ^ 0x2EA553E8) + (v74 ^ 0x2097FEFE))) & 0xFA70B282)
      - 46638783;
  LODWORD(STACK[0x468]) = v69;
  v77 = v69 ^ 0x888891BE ^ v75;
  LODWORD(STACK[0x430]) = LODWORD(STACK[0x620]) - ((LODWORD(STACK[0x618]) + 181314580) & 0x9D4CF16) - 766396011;
  LODWORD(STACK[0x618]) = v76;
  v78 = (((v76 ^ 0x40) + 101 + ~((2 * (v76 ^ 0x40) + 70) & 0x82)) ^ 0x41) + (v12 ^ 0xB);
  v79 = ((v78 & 0xFE) - ((2 * v78) & 0x14) + 11) ^ 0x66;
  v80 = 98 - -31 * v79;
  LOBYTE(v74) = 62 * v79;
  v81 = LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x660]);
  LODWORD(STACK[0x620]) = v77;
  LOBYTE(v76) = v11 + 5;
  LODWORD(STACK[0x5F0]) = HIWORD(v14);
  v82 = ((((v80 - (v74 & v76)) ^ v63 ^ v13 ^ v14) ^ 0xDA)
       - ((2 * (((v80 - (v74 & v76)) ^ v63 ^ v13 ^ v14) ^ 0xDA)) & 0x126)
       + 1630282643) ^ 0x856CA590;
  *(_DWORD *)(a1 + 4 * ((v80 - (v74 & v76)) ^ 0x62u)) = v81 ^ v77 ^ 0x73A409A2 ^ dword_100278B20[(v82 - ((2 * v82) & 0x40011A72) - 1550611143) ^ 0x47D30BD1];
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * v11) - 8))();
}

void sub_100144110()
{
  JUMPOUT(0x1001440ACLL);
}

uint64_t sub_100144120@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  void *v4;

  LODWORD(STACK[0x630]) = v1;
  v2 = a1 + 488;
  v3 = (a1 - 2053462276) & 0x7A655ADC;
  v4 = malloc(0x404uLL);
  STACK[0xB00] = (unint64_t)v4;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((v4 == 0) * (v3 - 633)) ^ v2))
                            - ((15 * (v2 ^ 0x282u)) ^ 0x223)))();
}

uint64_t sub_100144190(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  __int16 v17;
  unsigned int v18;

  v5 = STACK[0x5D0];
  LODWORD(STACK[0x428]) = v4;
  LODWORD(STACK[0x424]) = v4 ^ v5;
  v6 = ((v4 ^ v5 ^ 0x2B348DEA) - ((2 * (v4 ^ v5 ^ 0x2B348DEA) + 1827475886) & 0x757198A6) - 1322298070) ^ 0x8A294BF1;
  v7 = ((v6 - ((2 * v6 + 1827475886) & 0x757198A6) - 1322298070) ^ 0x3AB8CC53) + (LODWORD(STACK[0x5C0]) ^ 0xC804DA69);
  v8 = ((LODWORD(STACK[0x4A0]) << 7) ^ 0x3092E780) - 615150768;
  LODWORD(STACK[0x5C0]) = v3;
  v9 = ((unsigned __int16)LODWORD(STACK[0x678]) >> 9) ^ 0x8D000A2F;
  v10 = ((((unsigned __int16)v1 >> 9) ^ 0x32478227)
       + ((v1 >> 9) & 0x1B ^ 0xCC986018)
       - ((((unsigned __int16)v1 >> 9) ^ 0x32478227) & 0x3242021B)) ^ 0xCC9DE05B | v8 ^ 0xDB558B50;
  v11 = v10 - ((2 * v10) & 0xA6) + 211;
  v12 = ((v9 | 0xD4250312) - (v9 | 0x2BDAFCED) + 735771885) ^ 0x5925091A | (((v3 << 7) ^ 0x1C62780) - 909767656) ^ 0xC9C60C18;
  v13 = v12 - ((2 * v12) & 0x56) + 171;
  LOBYTE(v7) = (((((2 * v7) & 0xDC) + (v7 ^ 0x6E)) & 0xFE) - ((2 * (((2 * v7) & 0xDC) + (v7 ^ 0x6E)) + 36) & 0x18) + 30) ^ 0xCF;
  HIDWORD(v14) = v13 ^ v11 ^ 0x5C;
  LODWORD(v14) = (v13 ^ ~v11) << 24;
  v15 = LODWORD(STACK[0x498]) ^ (((((v14 >> 31) - ((2 * (v14 >> 31)) & 4) + 6) ^ 2) - 4)
                               - ((2 * ((((v14 >> 31) - ((2 * (v14 >> 31)) & 4) + 6) ^ 2) - 4)) & 0xD6)
                               + 235);
  LOBYTE(v13) = -117 * v7 - 19;
  LODWORD(STACK[0x628]) = v2 ^ 0x255;
  v16 = (v15 ^ (v13 - ((22 * v7) & 0xDA)));
  v17 = (v16 ^ 0x51) - ((2 * (v16 ^ 0x51)) & 0xF2) + 31609;
  v18 = (((v16 ^ 0x4038) - ((2 * (v16 ^ 0x4038)) & 0x12C) + 268646550) ^ 0x10037835)
      + (((v16 ^ 0x262004A4) - (((v2 ^ 0x255) + 201328485) & (2 * (v16 ^ 0x262004A4))) + 513384217) ^ 0xEC5DFDEF);
  *(_DWORD *)(a1 + 4 * ((v13 - ((22 * v7) & 0xDA)) ^ 0xEDu)) = LODWORD(STACK[0x688]) ^ LODWORD(STACK[0x680]) ^ LODWORD(STACK[0x690]) ^ (v18 - ((2 * v18) & 0x2BEB38B8) + 368417884) ^ 0x5E82BB5 ^ dword_100257750[((v17 & 0x7A3 ^ 0x225D3482) + (v17 & 0x85C ^ 0x9A20859) - 1) ^ 0x2BFF3787];
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + v2) - 8))();
}

void sub_100144540()
{
  JUMPOUT(0x100144440);
}

uint64_t sub_100144550()
{
  unsigned int v0;
  void *v1;

  v0 = STACK[0x628];
  v1 = malloc(0x408uLL);
  STACK[0xB08] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((338 * (v1 != 0)) ^ v0)) - (((v0 - 169) | 0x181) ^ 0x1A9)))();
}

uint64_t sub_1001445A0(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v4 = LODWORD(STACK[0x480]) ^ LODWORD(STACK[0x620]) ^ 0x3165A916;
  v5 = (2 * v4 + 111957800) & 0x5F04112;
  v4 -= 1102164963;
  v6 = ((((v4 - v5) ^ 0x3165A916) - ((2 * ((v4 - v5) ^ 0x3165A916) + 111957800) & 0x5F04112) - 1102164963) ^ 0x82F82089)
     + LODWORD(STACK[0x5B0]);
  v7 = ((v6 - ((2 * v6) & 0x531BF81E) - 1450312689) | v4 & 1) ^ 0xD833D85A;
  v8 = (v7 - 1989991019 + (~(2 * v7) | 0xED39B4D5) + 1) ^ 0x89632595;
  v9 = ((STACK[0x5A0] & 0x6F406499 ^ 0x62002090)
      - ((2 * (STACK[0x5A0] & 0x6F406499 ^ 0x62002090)) & 0x9E00C810)
      + 1597992232) ^ 0xA7F7C2C;
  v10 = (((v2 - 405) | 0x2A8) - 333472139) * v8
      - ((2 * (((v2 - 405) | 0x2A8) - 333472139) * v8) & 0xF930114)
      - 2016837494;
  v11 = ((v10 ^ v1) & 0x39 ^ 0xAE302B18) + ((v10 ^ v1) & 0xC6 ^ 0x45) - 1;
  v12 = dword_100258DA0[((v11 & 0x240007AB ^ 0x104CC482) + (v11 ^ 0xACB0332D) - ((v11 ^ 0xACB0332D) & 0x801FAB)) ^ 0x364CC728];
  *(_DWORD *)(a1
            + 4
            * (((((v2 + 107) | 0xA8) + 117) * v8 - ((2 * (((v2 + 107) | 0xA8) + 117) * v8) & 0x14) - 118) ^ 0x8Au)) = STACK[0x5A0] & 0x90BF9B66 ^ ((v9 | 0xAE8FCE75) - (v9 | 0x5170318A) + 1366307210) ^ LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x668]) ^ 0x666518F5 ^ (v12 - ((2 * v12 + 575539174) & 0xEBCB76D4) + 118275933);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v2) - 12))();
}

void sub_100144810()
{
  JUMPOUT(0x100144780);
}

uint64_t sub_100144818()
{
  int v0;
  void *v1;

  v1 = malloc(0x404uLL);
  STACK[0xAE0] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1968 * (v1 != 0)) ^ v0))
                            - (((v0 - 174) | 0x21) ^ (v0 + 1743436805) & 0x9815457F ^ 0x61ELL)))();
}

uint64_t sub_100144884()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;

  LODWORD(STACK[0x690]) = LODWORD(STACK[0x590]) ^ 0xB7099816;
  v1 = LODWORD(STACK[0x570]) ^ 0x51D3B1B4;
  v2 = v1
     + (((LODWORD(STACK[0x570]) ^ 0xB745A94) + 1) ^ 0xFDDFFFFF)
     + ((2 * ((LODWORD(STACK[0x570]) ^ 0xB745A94) + 1)) & 0xFBBFFFFE)
     + 35651585;
  v3 = ((v2 - ((2 * v2) & 0xFFB68E24) - 2406638) ^ 0x24B8EC) + v1;
  return sub_100109678(1307574272, 446097052, 223048526, (v3 - ((2 * v3) & 0x538FB3CE) + 700963303) ^ LODWORD(STACK[0x660]) ^ LODWORD(STACK[0x560]) ^ LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x468]) ^ LODWORD(STACK[0x618]) ^ v0 ^ 0xAF4371B9, 0x23u, 650, 752438);
}

void sub_100144C88(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  _QWORD *v7;
  int *v8;
  _DWORD *v9;

  a1[17] ^= v6 ^ LOBYTE(STACK[0xBB0]) ^ 0xE2;
  a1[18] ^= LOBYTE(STACK[0xBB1]) ^ 0x7D;
  a1[19] ^= LOBYTE(STACK[0xBB2]) ^ 0x1A;
  a1[20] ^= LOBYTE(STACK[0xBB3]) ^ 0x25;
  v9 = (_DWORD *)STACK[0xA10];
  *v9 = 2023518721;
  *v7 = a1;
  *v8 = LODWORD(STACK[0x978]) ^ 0x777D8E08;
  *(_QWORD *)STACK[0x650] = v9;
  sub_1000EE8C4((uint64_t)a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_100144D28(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1680 * (a1 != 0)) ^ (v1 - 1582))) - 12))();
}

void sub_100144D50(void *a1)
{
  free(a1);
  JUMPOUT(0x100144D58);
}

uint64_t sub_100144D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v9 = STACK[0x888];
  LODWORD(STACK[0x888]) = v6 + 1086 + LODWORD(STACK[0x888]) - 1740;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((((v9 + 1973728165) < 0x80000001) * (v6 ^ 0x5FE)) ^ v6))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, v7);
}

uint64_t sub_100144DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int8x16_t *v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int8x16_t v9;
  int8x16_t v10;

  v9.i64[0] = 0x6262626262626262;
  v9.i64[1] = 0x6262626262626262;
  v10.i64[0] = 0xB1B1B1B1B1B1B1B1;
  v10.i64[1] = 0xB1B1B1B1B1B1B1B1;
  *(int8x16_t *)(v1 + (((v5 - 1020) ^ v3) & (a1 + v4))) = vaddq_s8(vsubq_s8(*v2, vandq_s8(vaddq_s8(*v2, *v2), v9)), v10);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v8
                                                               + 8
                                                               * ((209 * ((((v7 ^ 0x22D) + v6) & 0x1FFFFFFF0) == 16)) | v5))
                                                   - 8))(((v7 ^ 0x22D) + v6) & 0x1FFFFFFF0, (((v7 ^ 0x22D) + v6) & 0x1FFFFFFF0) - 16);
}

void sub_100144E24()
{
  JUMPOUT(0x100144DECLL);
}

uint64_t sub_100144E30@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 ^ 0x215) + ((a2 - 31) | 0x60) - 568) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_100144E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  LODWORD(STACK[0x6F4]) = v9;
  STACK[0x840] = *(_QWORD *)(v11 + 8 * v10);
  LODWORD(STACK[0x668]) = a8 ^ 0x556;
  LODWORD(STACK[0x670]) = (a8 ^ 0x556) + 1790221395;
  LODWORD(STACK[0x688]) = -514044794;
  LODWORD(STACK[0x680]) = 2042623983;
  LODWORD(STACK[0x678]) = -1076953617;
  v12 = 80 * ((14 * ((v10 + 1510) ^ 0x644)) ^ 0x4FEu);
  STACK[0x8A0] += v12;
  LODWORD(STACK[0x7EC]) = *(_DWORD *)(v8 + 72);
  LODWORD(STACK[0x7B4]) = *(_DWORD *)(v8 + 76);
  LODWORD(STACK[0x700]) = *(_DWORD *)(v8 + 80);
  LODWORD(STACK[0x804]) = *(_DWORD *)(v8 + 84);
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)((((char)(*(_BYTE *)(v8 + 96) ^ 0x5F) < (char)(((80
                                                                                    * ((14 * ((v10 - 26) ^ 0x44)) ^ 0xFE)
                                                                                    - 32) | 0x88)
                                                                                  + 78))
                                     * ((v12 + 617) ^ 0x3B7)) | v12)))();
}

uint64_t sub_100144E78@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W5>, int a5@<W8>)
{
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  _BOOL4 v28;

  v12 = *(unsigned __int8 *)(STACK[0x688] + v6);
  v13 = 1364176807 * (((2 * v12) & 0x1FC) + (v12 ^ 0xFD6EFBFE))
      - ((-1566613682 * (((2 * v12) & 0x1FC) + (v12 ^ 0xFD6EFBFE)) + 1508505244) & v10)
      - 57790411;
  v14 = ((2 * (v6 + (a4 ^ 0x174E9896 ^ v13))) & 0x97FD3DD6) + ((v6 + (a4 ^ 0x174E9896 ^ v13)) ^ 0x4BFE9EEB);
  v15 = (((v14 - 1274978027) >> 16) ^ 0x75FDFDFB) + v14 + ((2 * ((v14 - 1274978027) >> 16)) & 0x1FBF6);
  v16 = (((v15 + 1040409370) >> 8) ^ a2) + v15 + ((2 * ((v15 + 1040409370) >> 8)) & 0x1FFF752);
  v17 = ((v16 - 1090295951) ^ a1 ^ v5)
      + a5
      - 2 * (((v16 - 1090295951) ^ a1 ^ v5) & 0x14C4ACF ^ ((v16 - 1090295951) ^ a1) & v7);
  v18 = v16 - ((2 * v16 + 520833190) & 0x5A2B8CBA) - 56923472;
  v19 = ((2 * (v6 + (v13 ^ 0x628CF2BA ^ v18))) & 0xBFAFFE7E) + ((v6 + (v13 ^ 0x628CF2BA ^ v18)) ^ 0x5FD7FF3F);
  v20 = v19 + 2 * ((v19 - 1607991103) >> 16) + (((v19 - 1607991103) >> 16) ^ 0xBE77FFFF);
  v21 = (((v20 - 508559166) >> 8) ^ 0x57BF6FCF) + v20 + (((v20 - 508559166) >> 7) & 0x17EDF9E);
  v22 = ((v21 - 1980722957) ^ v17 ^ a5)
      + a3
      - 2 * (((v21 - 1980722957) ^ v17 ^ a5) & (a3 + 5) ^ ((v21 - 1980722957) ^ v17) & v7);
  v23 = v21 - ((2 * v21 + 887462826) & 0x7055E4B6) + 1386070064;
  v24 = ((2 * (v6 + (v13 ^ 0xF7B3C6BC ^ v23))) & 0xAFBCECF6) + ((v6 + (v13 ^ 0xF7B3C6BC ^ v23)) ^ 0xD7DE767B);
  v25 = (((v24 + 673286533) >> 16) ^ 0x9FEBBC9A) + v24 + ((2 * ((v24 + 673286533) >> 16)) & 0x17934);
  v26 = (((v25 - 2009740053) >> 8) ^ 0x7EFBD5DB) + v25 + (((v25 - 2009740053) >> 7) & 0x1F7ABB6);
  v27 = ((v26 + 154793744) ^ v22 ^ a3)
      + v5
      - 2 * (((v26 + 154793744) ^ v22 ^ a3) & (v5 + 4) ^ ((v26 + 154793744) ^ v22) & 4);
  if (v8 < 0x6FBFF4B7 != v6 - 1555404989 < 0xA34A6742)
    v28 = v8 < 0x6FBFF4B7;
  else
    v28 = v6 - 1555404989 < v9;
  return ((uint64_t (*)(uint64_t))*(&off_1002C8B50 + ((!v28 * v11) ^ STACK[0x678])))(v27);
}

uint64_t sub_100145240(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unsigned int v7;
  int v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;

  v8 = STACK[0x678] + 391;
  v9 = LODWORD(STACK[0x660]) == -768964959;
  v10 = STACK[0x510];
  if (LODWORD(STACK[0x660]) != -768964959)
    v10 = STACK[0x438];
  LODWORD(STACK[0x2A8]) = v10;
  v11 = STACK[0x4F0];
  if (v9)
    v11 = STACK[0x428];
  LODWORD(STACK[0x498]) = v11;
  v12 = STACK[0x5C0];
  if (v9)
    v12 = STACK[0x530];
  LODWORD(STACK[0x428]) = v12;
  v13 = STACK[0x500];
  if (v9)
    v13 = STACK[0x37C];
  LODWORD(STACK[0x510]) = v13;
  v14 = LODWORD(STACK[0x668]) == -961433487;
  v15 = STACK[0x3DC];
  if (LODWORD(STACK[0x668]) == -961433487)
    v15 = STACK[0x3D8];
  LODWORD(STACK[0x478]) = v15;
  v16 = STACK[0x410];
  if (!v14)
    v16 = STACK[0x3F0];
  LODWORD(STACK[0x438]) = v16;
  v17 = *(unsigned __int8 *)(STACK[0x688] + v7);
  v18 = 1364176807 * (((2 * v17) & 0xFFFFFFE3) + (v17 ^ 0x7FC6F6F1))
      - ((-1566613682 * (((2 * v17) & 0xFFFFFFE3) + (v17 ^ 0x7FC6F6F1)) + 1510888338) & ((5 * (v8 ^ 0x353)) ^ 0x94BF47FF))
      - 144258374;
  v19 = ((2 * (v7 + (a6 ^ 0x92880C80 ^ v18))) & 0x77FEBFCE) + ((v7 + (a6 ^ 0x92880C80 ^ v18)) ^ 0xBBFF5FE7);
  v20 = (((v19 + 1140891673) >> 16) ^ 0x3F3F6FFF) + v19 + (((v19 + 1140891673) >> 15) & 0xDFFE);
  v21 = (((v20 + 79769626) >> 8) ^ 0xF7F33CF9) + v20 + (((v20 + 79769626) >> 7) & 0x1E679F2);
  v22 = (a1 ^ v6 ^ (v21 + 214823713)) - 608310368 - ((2 * (a1 ^ v6 ^ (v21 + 214823713))) & 0xB77BD740);
  v23 = v21 - ((2 * v21 + 983588870) & 0x501BBFAA) - 983691304;
  v24 = ((2 * (v7 + (v18 ^ 0x62527F24 ^ v23))) & 0xCE76BDCE) + ((v7 + (v18 ^ 0x62527F24 ^ v23)) ^ 0x673B5EE7);
  v25 = (((v24 - 1731944167) >> 16) ^ 0x97FFF5FA) + v24 + ((2 * ((v24 - 1731944167) >> 16)) & 0x1EBF4);
  v26 = (((v25 + 12888863) >> 8) ^ 0x59FF3EEF) + v25 + (((v25 + 12888863) >> 7) & 0x1FE7DDE);
  v27 = ((v26 - 1497011152) ^ v22 ^ 0xDBBDEBA0)
      - 1580791855
      - 2 * (((v26 - 1497011152) ^ v22 ^ 0xDBBDEBA0) & 0x21C707DF ^ ((v26 - 1497011152) ^ v22) & 0xE);
  v28 = v26 - ((2 * v26 + 244273700) & 0x18D84144) + 1135856052;
  v29 = ((2 * (v7 + (v18 ^ 0x46338053 ^ v28))) & 0x5772FFE6) + ((v7 + (v18 ^ 0x46338053 ^ v28)) ^ 0x2BB97FF3);
  v30 = (((v29 - 733577203) >> 16) ^ 0xA36DCBFD)
      + v29
      + ((2 * ((v29 - 733577203) >> 16)) & 0x197FA);
  v31 = (((v30 + 819508240) >> 8) ^ 0xBF7FAC77) + v30 + (((v30 + 819508240) >> 7) & 0xFF58EE);
  return ((uint64_t (*)(_QWORD))((char *)*(&off_1002C8B50 + ((1148 * (v7 + 1 > 0xF)) ^ v8)) - 4))(((v31 + 1901660057) ^ v27 ^ 0xA1C707D1)+ v6- 2 * (((v31 + 1901660057) ^ v27 ^ 0xA1C707D1) & (v6 + 8) ^ ((v31 + 1901660057) ^ v27) & 8));
}

uint64_t sub_1001456C8(int a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  char v44;
  BOOL v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unsigned int v71;
  _BOOL4 v72;

  v6 = (((a3 + 1003346128) >> 8) ^ 0x7AADD7B) + a3 + (((a3 + 1003346128) >> 7) & 0x155BAF6);
  v7 = v6 + (((v6 + 874707797) >> 5) ^ 0x71084186) - (((v6 + 874707797) >> 4) & 0xDEF7CF2) + 1;
  v8 = v7 - ((2 * v7 - 2043317348) & 0xEB224994) + 950787736;
  v9 = ((2 * ((v8 ^ 0x759124CA) - 1879573490)) & 0xD9F279DC) + (((v8 ^ 0x759124CA) - 1879573490) ^ 0x6CF93CEE);
  v10 = (((v9 - 1828273390) >> 10) ^ 0xDDF42E9C) + v9 + (((v9 - 1828273390) >> 9) & 0x685D38);
  v11 = ((v10 - 1257073546) & 0xFBFEFBFC) + v10 + (((v10 - 1257073546) >> 1) ^ 0x7DFF7DFE);
  v12 = v11 - ((2 * v11 + 1847995632) & 0xEE877044) + 777440922;
  v13 = ((2 * ((v12 ^ 0xF743B822) + 1287124013)) & 0xCFDAFFEC) + (((v12 ^ 0xF743B822) + 1287124013) ^ 0x67ED7FF6);
  v14 = v13 + (((v13 - 1743618038) >> 13) ^ 0x3886001) - (((v13 - 1743618038) >> 12) & 0xF3FFC);
  v15 = v14 + (((v14 - 1802887159) >> 6) ^ 0x80584210) - (((v14 - 1802887159) >> 5) & 0x74F7BDE) + 2;
  v16 = v15 - ((2 * v15 + 677624814) & 0x768DABAE) - 814173234;
  v17 = ((2 * ((v16 ^ 0xBB46D5D7) - 1282870125)) & 0xFDC4FBDE) + (((v16 ^ 0xBB46D5D7) - 1282870125) ^ 0x7EE27DEF);
  v18 = (((v17 - 2128772591) >> 8) ^ 0x75FBF6EB) + v17 + (((v17 - 2128772591) >> 7) & 0x1F7EDD6);
  v19 = (((v18 + 186747686) >> 2) ^ 0x75EEFF1F) + v18 + (((v18 + 186747686) >> 1) & 0x6BDDFE3E);
  v20 = v19 - ((2 * v19 + 711268366) & 0x5D4C5246) - 1009208022;
  v21 = ((2 * ((v20 ^ 0x2EA62923) + 707258702)) & 0x7FFFFBBE) + (((v20 ^ 0x2EA62923) + 707258702) ^ 0x3FFFFDDF);
  v22 = (((v21 - 1073741279) >> 13) ^ 0x7EADB95F)
      + v21
      + (((v21 - 1073741279) >> 12) & 0xB72BE);
  v23 = (((v22 + 1095911618) >> 3) ^ 0x7BE6DF19) + v22 + (((v22 + 1095911618) >> 2) & 0x37CDBE32);
  v24 = v23 - ((2 * v23 + 181850962) & 0x3093C26A) + 1572162270;
  v25 = (v24 ^ 0x13C6B7BF) + ((v24 >> 11) ^ 0xE278D6) + ((2 * (v24 >> 11)) ^ 0xFFFB0E53) - 14680063;
  v26 = (((((2 * v25) & 0x6FEDF7A6) + (v25 ^ 0x37F6FBD3) - 938933203) >> 5) ^ 0xDD57BDFB)
      + ((2 * v25) & 0x6FEDF7A6)
      + (v25 ^ 0x37F6FBD3)
      + (((((2 * v25) & 0x6FEDF7A6) + (v25 ^ 0x37F6FBD3) - 938933203) >> 4) & 0xAAF7BF6);
  v27 = v26 - ((2 * v26 - 714961820) & 0xDD1F4AEC) - 650056792;
  v28 = (v27 ^ 0xDAD3718E) + ((v27 >> 12) ^ 0xE81BB137) + 401204225 + ((2 * (v27 >> 12)) & 0x13C7FE ^ 0xFFECBD91);
  v29 = (((((2 * v28) & 0xF7CFADEE) + (v28 ^ 0xFBE7D6F7) + 68692233) >> 7) ^ 0x6FB7FFFD)
      + ((2 * v28) & 0xF7CFADEE)
      + (v28 ^ 0xFBE7D6F7)
      + (((((2 * v28) & 0xF7CFADEE) + (v28 ^ 0xFBE7D6F7) + 68692233) >> 6) & 0x36FFFFA);
  v30 = v29 - ((2 * v29 + 683692568) & 0x2A034790) + 694275284;
  v31 = ((2 * ((v30 ^ 0x9501A3C8) - 2045107421)) & 0x76F7FDBA) + (((v30 ^ 0x9501A3C8) - 2045107421) ^ 0x3B7BFEDD);
  v32 = (((v31 - 997981917) >> 11) ^ 0xEF7D7B9A) + v31 + (((v31 - 997981917) >> 10) & 0x3AF734);
  v33 = v32 + (((v32 - 720992887) >> 8) ^ 0x100C00) - (((v32 - 720992887) >> 7) & 0x1DFE7FE);
  v34 = v33 + 1 - 2 * ((v33 + 1425439113) & 0x546F761E ^ (v33 + 1) & 4) - 1452937310;
  v35 = (v34 ^ 0xEEFFF849) + ((v34 >> 8) ^ 0xA47F7FC) + ((v34 >> 7) & 0xADEFF6 ^ 0xFF72100F) - 178849795;
  v36 = (((((2 * v35) & 0x3F77F26C) + (v35 ^ 0x9FBBF936) + 1615070922) >> 8) ^ 0x5FFFE1FA)
      + ((2 * v35) & 0x3F77F26C)
      + (v35 ^ 0x9FBBF936)
      + (((((2 * v35) & 0x3F77F26C) + (v35 ^ 0x9FBBF936) + 1615070922) >> 7) & 0x1FFC3F4);
  v37 = v16 ^ v4 ^ v27 ^ (v36 - ((2 * v36 + 8931744) & 0xBAEC945A) + 1572499197);
  v38 = (((2 * (v37 & 7 ^ 1)) | 0x89C334EC) - (v37 & 7 ^ 1) + 991847818) ^ 0xC2739235;
  v39 = ((2 * v38) | 0xAE88A7DA) - v38 + 683387923;
  v40 = (-v37 & 7) - ((-2 * v37) & 4) - 137147974;
  LODWORD(STACK[0x37C]) = v39;
  v41 = v39 ^ 0x819CAA2D;
  if ((v39 ^ 0x819CAA2D) == 0x504AF182)
    v42 = 0;
  else
    v42 = 255;
  LODWORD(STACK[0x3A0]) = v40;
  STACK[0x3C8] = v40 ^ 0xF7D349BA;
  LODWORD(STACK[0x3DC]) = v41;
  v43 = (v42 << (v40 ^ 0xBA)) - ((2 * (v42 << (v40 ^ 0xBA))) & 0xDC70D3C4) + 1849190882;
  v44 = (((_BYTE)v42 << (v40 ^ 0xBA)) - ((2 * ((_BYTE)v42 << (v40 ^ 0xBA))) & 0xC4) - 30) ^ 0x1D;
  if (v41 == 1347088770)
    v44 = 0;
  v45 = LODWORD(STACK[0x660]) == -768964959;
  v46 = STACK[0x670];
  if (LODWORD(STACK[0x660]) == -768964959)
    v46 = STACK[0x464];
  LODWORD(STACK[0x480]) = v46;
  v47 = STACK[0x640];
  if (!v45)
    v47 = STACK[0x350];
  LODWORD(STACK[0x470]) = v47;
  v48 = STACK[0x5F0];
  if (LODWORD(STACK[0x668]) != -961433487)
    v48 = STACK[0x4B0];
  LODWORD(STACK[0x464]) = v48;
  v49 = v12 ^ v3 ^ v24;
  v50 = v8 ^ a1 ^ v20 ^ v30;
  v51 = v49 ^ v34;
  LODWORD(STACK[0x3EC]) = (v50 & 0xFFFFFF80 ^ 0xC3991600)
                        + (v50 & 0x5A10B800 ^ 0x1800A823)
                        - ((v50 & 0xFFFFFF80 ^ 0xC3991600) & 0x5A10B800);
  v52 = ((v50 & 0x7B ^ 0x1716AC5E) - (v50 & 4)) ^ 0x8B3DD38D;
  v53 = ((v52 | 0xC86BD1C5) - (v52 | 0x37942E3A) + 932458042) ^ 0x5440AE0F;
  LODWORD(STACK[0x640]) = v37;
  v54 = ((v37 & 0xFFFFFFF8 ^ 0xE6C89096) + (v37 & 0x86837C48 ^ 0x36C49) - ((v37 & 0xFFFFFFF8 ^ 0xE6C89096) & 0x86837C4A)) ^ 0xC5C0487C;
  LODWORD(STACK[0x4B0]) = ((2 * v54) | 0x82359154) - v54;
  v55 = (v43 & 0xBC ^ 0xCD8D439C) + (v43 ^ 0x2B062) - ((v43 ^ 0x2B062) & 0x290BC);
  LODWORD(STACK[0x678]) = (33686018 * (v55 ^ 0xCD8D633C)) & 0x7553D8E2;
  LODWORD(STACK[0x4F0]) = 16843009 * (v55 ^ 0xCD8D633C) + 984214641;
  v56 = ((1593835520 * (v55 ^ 0xCD8D633C) - (((v55 << 30) - ((v55 ^ 0xCD8D633C) << 25)) & 0x4E000000) + 661633956) ^ 0x276FBBA4) & (v49 ^ v34 ^ 0x6E9D6C30);
  LODWORD(STACK[0x500]) = v56 - ((2 * v56) & 0x58000000) + 741683604;
  LODWORD(STACK[0x530]) = v50 ^ 0xDD87C213;
  v57 = ((v44 & (v50 ^ 0x13)) - ((2 * (v44 & (v50 ^ 0x13))) & 0xB0) + 88) ^ 0x23;
  LODWORD(STACK[0x4A0]) = ((2 * v57) | 0x59B43690) - v57 - 752491336;
  v58 = v50 ^ (v50 >> 8) ^ HIWORD(v50) ^ 0xEA12148D;
  v59 = ((v58 & 0x25 ^ 0xDAD1A224) + (v58 & 0xDA ^ 0x99) - 1) ^ 0xD9EBB6B5;
  LODWORD(STACK[0x5F0]) = v50;
  v60 = (v59 - ((2 * v59) & 0x4028FC) - 2002684802) ^ HIBYTE(v50) ^ 0x8B9B60E1;
  v61 = 16843009 * v60 - ((33686018 * v60) & 0x22A7445A) - 1856789971;
  v62 = 0xE668D621 % STACK[0x680];
  v63 = v51 ^ (v51 >> 8) ^ HIWORD(v51) ^ 0x43A9FC43;
  LODWORD(STACK[0x5C0]) = v51;
  v64 = (((v63 & 0xFD ^ 0xB7FCEEA8) & 0xADD ^ 0x31820A45)
       + (((v63 & 0xFD ^ 0xB7FCEEA8) & 0x422 | v63 & 2) ^ 0x4D4521)
       - 1) ^ HIBYTE(v51) ^ 0x31CF41B6;
  v65 = (*(_QWORD *)(STACK[0xB70] + 8 * v62) ^ 0xC9C9C9C9C9C9C9C9) + 2103980986;
  v66 = 16843009 * v64 - ((33686018 * v64) & 0x2BE3F53A) - 1779303779;
  v67 = (*(_QWORD *)(STACK[0xB70]
                   + 8
                   * (((v65 ^ 0x7FFBFEDBBAF7B7BFLL) - 0x7FFBFEDBBAF7B7BFLL + ((2 * v65) & 0xFFF7FDB775EF6F7ELL))
                    % STACK[0x5A0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 815561086;
  v68 = (*(_QWORD *)(STACK[0xB70]
                   + 8
                   * (((v67 ^ 0xC5FDFFE2B53ACDFFLL) + 0x3A02001D4AC53201 + ((2 * v67) & 0x8BFBFFC56A759BFELL))
                    % STACK[0x5A0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 925802721;
  v69 = *(_QWORD *)(STACK[0xB70]
                  + 8
                  * (((v68 ^ 0xA5EDB77DC587BFBCLL) + 0x5A1248823A784044 + ((2 * v68) & 0x4BDB6EFB8B0F7F78))
                   % STACK[0x5A0]));
  v70 = 2 * v69 - ((4 * v69) & 0x82A3FA21813DA9DCLL) + 0x4151FD10C09ED4EFLL;
  LODWORD(v69) = (v69
                + (v70 & 0x9393939393939392 ^ 0x2362B51A901298C7)
                + ((2 * v70) & 0x2301272306272724 ^ 0xFDFEDDDEFFDADEFBLL)
                - 0x58A95A40189C30FFLL)
               % STACK[0x5A0];
  v71 = ((v69 - ((2 * v69) & 0xA71E7054) - 745588694) ^ 0xAC70639E)
      + 1348416194
      + ((2 * (v69 - ((2 * v69) & 0xA71E7054) - 745588694)) & 0xFFFEB768 ^ 0xA71E3040);
  LODWORD(STACK[0x2E8]) = 33686018 * v53;
  LODWORD(STACK[0x3D8]) = (33686018 * v53) & 0xC6C3E736;
  LODWORD(STACK[0x2E0]) = v53;
  LODWORD(STACK[0x3C0]) = 16843009 * v53 + 1667363739;
  LODWORD(STACK[0x410]) = v61;
  LODWORD(STACK[0x3F0]) = v66;
  LODWORD(STACK[0x670]) = v66 ^ v61;
  v72 = v71 < 0xD05E8E76;
  if (v71 >= 0xD05E8E76)
    v72 = v71 > 0xD05E8E77;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((343 * !v72) ^ v5)) - 4))(3495857782, 0xF4DAB4D8B0D3CEELL);
}

void sub_100146B00()
{
  JUMPOUT(0x1001464C0);
}

uint64_t sub_100146B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;

  v8 = STACK[0x5B0];
  if (LODWORD(STACK[0x660]) != -768964959)
    v8 = STACK[0x580];
  LODWORD(STACK[0x580]) = v8;
  LODWORD(STACK[0x5B0]) = LODWORD(STACK[0x5E0]) ^ 0x495762DF;
  LODWORD(STACK[0x340]) = LODWORD(STACK[0x3C0]) - LODWORD(STACK[0x3D8]);
  v9 = LODWORD(STACK[0x4F0]) - LODWORD(STACK[0x678]);
  LODWORD(STACK[0x4F0]) = v9;
  LODWORD(STACK[0x3D8]) = LODWORD(STACK[0x4A0]) ^ v9;
  LODWORD(STACK[0x298]) = LODWORD(STACK[0x3F0]) ^ 0xE5C66371;
  STACK[0x678] = (a7 + 1110836179) & 0xBDC9FBFF;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1685 * (v7 - 1487072877 >= STACK[0x680])) ^ a7))
                            - 8))();
}

void sub_100147294()
{
  JUMPOUT(0x100146C18);
}

uint64_t sub_1001472B0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * a1) - 12))(4294967189, 42);
}

void sub_100147374()
{
  JUMPOUT(0x100147328);
}

void sub_100147380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v8 = (((v7 & 0xF0) >> 4) ^ 9 | v7 ^ 0xFFFFFF95)
     - ((2 * (((v7 & 0xF0) >> 4) ^ 9 | v7 ^ 0xFFFFFF95)) & 0x6A)
     - 75;
  v9 = (v8 >> (((v6 + 7) ^ 0xCF) & 0xF6)) ^ 0x2D | v8 ^ 0xFFFFFFB5;
  v10 = ((v9 & 1 | (((v9 - 2 * (v9 & 1) + 3) & 2) == 0)) == 0) | 0xFFFFFFC0;
  sub_1000EE8C4(a1, a2, a3, a4, a5, a6, -42022* (((2 * ((((2 * v10) | 0xFFFFFFD8) - v10 - 108) ^ 0x25)) & 0xEE)+ ((((2 * v10) | 0xFFFFFFD8) - v10 - 108) ^ 0x2261695A))+ 2118165674);
}

uint64_t sub_100147434()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v3 = IOObjectRelease(STACK[0x734]);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50
                                                    + (((*(_DWORD *)(v1 + 2500) != v0) * (((v2 - 1037) | 0x100) ^ 0x3C2)) | (v2 - 1037) | 0x100))
                                          - ((((v2 - 1037) | 0x100) + 112) | 0x208u)
                                          + 1588))(v3);
}

uint64_t sub_100147490(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;

  *(_BYTE *)(v11 + ((int)a2 + v8) % a1) ^= *(_BYTE *)(a2 + v12 + a6) ^ v13;
  v14 = (((a2 + 1 - v7) | (unint64_t)(v7 - (a2 + 1))) >> (v10 ^ a7)) & 1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v14 | (4 * v14)) ^ (v8 + (int)v7 + 265))))();
}

uint64_t sub_1001474F4(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + ((int)a5 - 1544884126) % a1) ^= *(_BYTE *)(a5 + v8 - 1544884126) ^ 0xE6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1912 * (a5 + 1 == a4 + 64)) ^ v6)))();
}

uint64_t sub_10014755C(unsigned int a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v6 + ((int)v5 - 2139391791) % a1) ^= *(_BYTE *)(v5 + v7 + (v3 - 4) - 2139392764) ^ 0x2C;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1504 * (v5 + 1 != a3 + 319)) ^ v3)))();
}

uint64_t sub_1001475C0@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t (*v17)(void);

  v8 = (v4 - 1339267178) % a1;
  v9 = (v4 - 1339267185) % a1;
  v10 = (v4 - 1339267215) % a1;
  v11 = *(unsigned __int8 *)(v7 + v10);
  HIDWORD(v13) = -(int)v10 ^ v11 ^ *(unsigned __int8 *)(a2 + (v10 & 0xF)) ^ *(unsigned __int8 *)(v5 + (v10 & 0xF) + 2) ^ *(unsigned __int8 *)(v6 + (v10 & 0xF) + 2);
  LODWORD(v13) = ((105 * (v10 & 0xF)) ^ v11 ^ byte_100254830[v10 & 0xF] ^ byte_100256DC0[v10 & 0xF] ^ byte_10025A0D0[v10 & 0xF]) << 24;
  v12 = v13 >> 26;
  v14 = (v4 - 1339267355) % a1;
  HIDWORD(v13) = *(unsigned __int8 *)(a2 + (v9 & 0xF)) ^ *(unsigned __int8 *)(v7 + v9) ^ *(unsigned __int8 *)(v5 + (v9 & 0xF) + 2) ^ *(unsigned __int8 *)(v6 + (v9 & 0xF) + 2) ^ (87 * (v9 & 0xF));
  LODWORD(v13) = HIDWORD(v13) << 24;
  v15 = v13 >> 31;
  LODWORD(v10) = byte_100254830[v14 & 0xF] ^ *(unsigned __int8 *)(v7 + v14) ^ byte_100256DC0[v14 & 0xF];
  v16 = byte_10025A0D0[v14 & 0xF];
  HIDWORD(v13) = v10 ^ v14 ^ v16;
  LODWORD(v13) = (v10 ^ (105 * (((v4 - 1339267355) % a1) & 0xF)) ^ v16) << 24;
  v17 = (uint64_t (*)(void))*(&off_1002C8B50 + ((28 * (v4 + 1 != v3 + 256)) ^ v2));
  *(_BYTE *)(v7 + v8) ^= (105 * (v8 & 0xF)) ^ (87 * (v8 & 0xF)) ^ *(_BYTE *)(a2 + (v8 & 0xF)) ^ *(_BYTE *)(v5 + (v8 & 0xF) + 2) ^ *(_BYTE *)(v6 + (v8 & 0xF) + 2) ^ (v15 + (((v2 + 68) | 0xC0) ^ 0xD8) - ((2 * v15) & 0x12)) ^ (v12 - ((2 * v12) & 0x48) - 92) ^ byte_100254830[v8 & 0xF] ^ byte_100256DC0[v8 & 0xF] ^ byte_10025A0D0[v8 & 0xF] ^ ((v13 >> 27) - ((2 * (v13 >> 27)) & 0x90) - 56) ^ 0x65;
  return v17();
}

uint64_t sub_1001477B0()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  v3 = STACK[0x940];
  v4 = STACK[0x788];
  v5 = ((v0 ^ 0x4E4) + 202138569) & 0xF3F39FEF;
  STACK[0x8A0] -= 448;
  *(_QWORD *)(v3 + 64) = 0x6205527E24145F56;
  *(_QWORD *)(v3 + 72) = 0x6396BFB8EB1E3730;
  *(_QWORD *)(v3 + 80) = 0x9C69404714E1C8CFLL;
  *(_QWORD *)(v3 + 92) = 0xEA2EC3AA4C3E9D2CLL;
  STACK[0x9A8] = v5 + *(_QWORD *)(v2 + 8 * (v0 ^ 0x4E4)) - 1010;
  STACK[0xAA0] = v3;
  LODWORD(STACK[0x894]) = v4;
  STACK[0x710] = v1;
  v6 = ((2 * ((v5 - 1811858719) & 0x6BFEC7FD ^ 0x69A) - 52) & (2 * *(_DWORD *)(v3 + 68)) ^ 0x78)
     + (*(_DWORD *)(v3 + 68) & 0x3F ^ 0xD936EBC3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((1310
                                               * ((((v4 ^ 0xEEC1CB6E) + 650712067 + v6) ^ 0xBBDF6D6A)
                                                + 1142985302
                                                + ((2 * ((v4 ^ 0xEEC1CB6E) + 650712067 + v6)) & 0x77BEDAD4) < 0xFFFFFFC0)) ^ v5))
                            - 8))();
}

uint64_t sub_1001477C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  STACK[0x8A0] = v4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * (((((v3 - 1233406449) & 0x49844EDD)
                                                                                    + 293)
                                                                                   * ((v5 - 546355592) < 0x7D1)) ^ v3))
                                                                     - 8))(a1, a2, a3, 4294924389);
}

uint64_t sub_100147818()
{
  return sub_100172948();
}

uint64_t sub_100147838()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v3 < v4;
  *(_BYTE *)(v6 + v8 - 0x72D381F2486801FELL) = 15 * (v1 ^ 0x3F) + *(_BYTE *)(v5 + v2 - 0x29F27ED6AE2D377BLL) - 85;
  if (v10 == v7 - 0x4FB80415D6DBB925 < v0)
    v10 = v7 - 0x4FB80415D6DBB925 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((111 * !v10) ^ v1)) - 4))();
}

void sub_1001478E0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  LODWORD(STACK[0x9EC]) = a2 + v5;
  STACK[0x840] = (a5 + 1508) + *(_QWORD *)(a1 + 8 * a5) - 1571;
  JUMPOUT(0x100147914);
}

void sub_10014799C()
{
  JUMPOUT(0x1001479D4);
}

uint64_t sub_1001479E0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned __int8 *v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;

  v13 = (unsigned __int8 *)(v7 + a1 + a4);
  v14 = ((((v13[1] ^ v11) - ((2 * (v13[1] ^ v11)) & 0xE6)) << 8) + 1552577280) ^ 0x5C8A7300;
  v15 = (v14 - 697038554 - ((2 * v14) & 0x2CE81200)) ^ 0xD6740926 | ((*v13 ^ v11)
                                                                   + ((4 * v10) ^ 0xD4F04B4)
                                                                   - ((2 * (*v13 ^ v11)) & 0x1F0)) ^ 0xD4F0EF8;
  v16 = ((((v13[2] ^ v11) - (v12 & (2 * (v13[2] ^ v11)))) << 16) + 1446051840) ^ 0x56310000;
  v17 = (v15 - 1288618852 - ((2 * v15) & 0x66627938)) ^ 0xB3313C9C | (v16 - 1102261865 - ((2 * v16) & 0x7C980000)) ^ 0xBE4CD197;
  LODWORD(v13) = ((((v13[3] ^ v11) - ((2 * (v13[3] ^ v11)) & 0x6C)) << 24) + 905969664) ^ 0x36000000;
  LODWORD(v13) = (v17 + 770999828 - ((2 * v17) & 0x5BE90C28)) ^ 0x2DF48614 | ((_DWORD)v13
                                                                            - 1164756354
                                                                            - ((2 * (_DWORD)v13) & 0x74000000)) ^ 0xBA933A7E;
  *(_DWORD *)(a2 + ((a4 + v9) & 0xFFFFFFFC)) = (_DWORD)v13 + v8 - ((2 * (_DWORD)v13) & 0xDC1928E2);
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((1626 * (a4 + 4 + v9 < 0x40)) ^ v10)) - 4))();
}

uint64_t sub_100147B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((615 * ((v9 + 1 + v7) < 0x10)) ^ v8)) - 4))();
}

uint64_t sub_100147DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((8 * ((v8 + 1 + v7) < 0x20)) | (((v8 + 1 + v7) < 0x20) << 6)) ^ v9))
                            - 4))();
}

uint64_t sub_100147FB8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((111 * ((v3 + 1 + v2) < 0x30)) ^ a2)) - 8))();
}

uint64_t sub_100148144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((2 * ((v8 + 1 + v7) < 0x40)) | (32
                                                                                        * ((v8 + 1 + v7) < 0x40))) ^ a5))
                            - 12))();
}

uint64_t sub_1001482FC@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X6>, int a4@<W8>)
{
  _DWORD *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  LODWORD(STACK[0x7EC]) = a1;
  LODWORD(STACK[0x700]) = a2;
  LODWORD(STACK[0x7B4]) = v6;
  LODWORD(STACK[0x804]) = a4;
  v8 = v4[19];
  v4[18] = (v4[18] ^ v5) + (a1 ^ v5) + v5 - (v7 & (2 * ((v4[18] ^ v5) + (a1 ^ v5))));
  v4[19] = (v8 ^ v5) + (v6 ^ v5) + v5 - (v7 & (2 * ((v8 ^ v5) + (v6 ^ v5))));
  v9 = v4[21];
  v10 = (v4[20] ^ v5) + (LODWORD(STACK[0x700]) ^ v5);
  v4[20] = v10 + v5 - (v7 & (2 * v10));
  v4[21] = (v9 ^ v5) + (LODWORD(STACK[0x804]) ^ v5) + v5 - (v7 & (2 * ((v9 ^ v5) + (LODWORD(STACK[0x804]) ^ v5))));
  STACK[0x8A0] -= 320;
  return ((uint64_t (*)(uint64_t, uint64_t))STACK[0x840])(a3, 413486843);
}

uint64_t sub_100148CA8()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((53
                                          * (((LODWORD(STACK[0x690]) + 72) ^ (LODWORD(STACK[0x9EC])
                                                                                             - 526565115 > (LODWORD(STACK[0x894]) ^ 0xEEC1CB6E))) & 1)) ^ (LODWORD(STACK[0x690]) - 132)))
                            - 12))();
}

uint64_t sub_100148EEC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v10 = ((_BYTE)a2 + (_BYTE)a5) & 0xF;
  *(_BYTE *)(STACK[0xAA0] + 2087596544 + (((v7 - 516) | 0x2Au) ^ 0xFFFFFFFF8391CE3BLL)) = *(_BYTE *)(STACK[0x710] + (a2 + a5)) ^ *(_BYTE *)(a7 + v10) ^ *(_BYTE *)(v10 + v9 + 3) ^ byte_10027D7A0[v10 + 2] ^ (25 * v10) ^ v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * v7) - 8))();
}

uint64_t sub_100148F9C(uint64_t a1, int8x16_t a2, int8x16_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  int8x16_t *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;

  *v9 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v11 + (a5 + a9)), vandq_s8(vaddq_s8(*(int8x16_t *)(v11 + (a5 + a9)), *(int8x16_t *)(v11 + (a5 + a9))), a2)), a3);
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v14
                                                              + 8
                                                              * (((((v10 - 1687) ^ v12) == 16) * v13) ^ (v10 - 820)))
                                                  - 12))(a1, (a5 + 64));
}

uint64_t sub_100148FFC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = a3 - 7203682 < (a2 + 49639498);
  if (a2 + 49639498 < (v3 - 420441109) != (a3 - 7203682) < 0x238629D2)
    v5 = a2 + 49639498 < (v3 - 420441109);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((957 * v5) ^ (v3 - 1016435003)))
                            - ((v3 - 1016434458) ^ 0x6C5)))();
}

uint64_t sub_10014901C(uint64_t a1, int a2, int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((491
                                          * (((LODWORD(STACK[0x690]) - 706) | 0x244u) + a2 - 526565179 - 1615 < (LODWORD(STACK[0x690]) ^ 0x46C ^ a3 ^ 0xEEC1C9CF))) ^ (LODWORD(STACK[0x690]) - 513)))
                            - 12))();
}

uint64_t sub_100149034()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((74
                                          * ((char)((LOBYTE(STACK[0x690]) - 17) ^ *(_DWORD *)(STACK[0x720] + 96) ^ 0xBD) < (char)(((LOBYTE(STACK[0x690]) + 85) | 0x48) ^ (LOBYTE(STACK[0x690]) - 12)))) ^ (LODWORD(STACK[0x690]) - 17)))
                            - 8))();
}

uint64_t sub_10014908C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (int)((((v0 + 2001053315) & 0x88BA5EDF ^ 0x3A4) * (v1 == 168)) ^ v0))
                            - 4))();
}

uint64_t sub_1001490C8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_DWORD *)(a1 + 92) != (((v1 - 297) | 0x68C) ^ 0x4C3E9BD1))
                                          * (((v1 + 286) | 0x445) ^ 0x377)) ^ v1))
                            - 4))();
}

uint64_t sub_100149118@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _BYTE *v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v2 = (_BYTE *)STACK[0x920];
  v3 = v1 - 1379;
  v4 = *(_DWORD *)(a1 + 72);
  *v2 = HIBYTE(v4) ^ 0x15;
  v2[1] = unk_100254831 ^ BYTE2(v4) ^ unk_100256DC1 ^ 0x69 ^ unk_10025A0D1 ^ 0x5B;
  v2[2] = BYTE1(v4) ^ 0xD2 ^ unk_100254832 ^ unk_100256DC2 ^ unk_10025A0D2 ^ 0x14;
  v2[3] = v4 ^ 0x3B ^ unk_100254833 ^ unk_100256DC3 ^ unk_10025A0D3 ^ 0x31;
  v5 = *(_DWORD *)(a1 + 92) + 643329409;
  v6 = v5 < 0x72970A9D;
  v7 = v5 > 0x72970AA1;
  if (v6)
    v7 = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((564 * v7) ^ v3)) - 4))(105, 140, 0x594994671AE9EDF7, 91, 0x594994671AE9EDF8, 20, 0x594994671AE9EDF9, 49);
}

void sub_100149300()
{
  JUMPOUT(0x1001491C0);
}

uint64_t sub_100149308()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v1 - 1719) | 0x6C8) ^ 0x668) * (v0 == 171)) ^ (v1 - 1362)))
                            - 4))();
}

uint64_t sub_10014933C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((*(_DWORD *)(a1 + 92) == 1279171868) ^ (v1 + 1)) & 1)
                                          * (((v1 + 313524382) | 0x21400505) ^ 0x33F00428)) ^ v1))
                            - 4))();
}

uint64_t sub_100149398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  _BYTE *v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v4 = 2 * (v3 ^ (v2 + 912));
  v5 = (_BYTE *)STACK[0x920];
  v6 = *(_DWORD *)(a2 + 72);
  *v5 = v6 ^ 0xA8;
  v5[1] = unk_100254821 ^ BYTE1(v6) ^ unk_100279C74 ^ 0x1F ^ 0x14;
  v5[2] = BYTE2(v6) ^ 0x32 ^ unk_100254822 ^ unk_100279C75 ^ 0x4B;
  v5[3] = HIBYTE(v6) ^ 0x4B ^ unk_100254823 ^ unk_100279C76 ^ 0xAF;
  v7 = *(_DWORD *)(a2 + 92) + 1049204722;
  v8 = v7 < 0x8AC8350E;
  if (v8)
    v9 = v8;
  else
    v9 = v7 > 0x8AC83512;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1405 * v9) ^ v4)) - 4))();
}

void sub_100149588()
{
  JUMPOUT(0x100149410);
}

uint64_t sub_100149590()
{
  return ((uint64_t (*)(void))STACK[0xA38])();
}

uint64_t sub_1001495A0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((49
                                * (((9 * (v0 ^ 0xCE)) ^ ((((v0 - 1052) ^ 0xFFFFFD4E)
                                                                                          + (unint64_t)(v0 - 1725)) >> 32)) & 1)) ^ (v0 - 568))))();
}

void sub_100149610(uint64_t a1, char a2)
{
  char v2;
  char v3;
  uint64_t v4;

  *(_BYTE *)(STACK[0x718] + a1) ^= *(_BYTE *)(v4 + a1) ^ a2 ^ v2 ^ v3;
  JUMPOUT(0x1001495D0);
}

uint64_t sub_100149638()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((78
                                * ((*(unsigned int *)(STACK[0x758] + 92) | ((unint64_t)(*(_DWORD *)(STACK[0x758] + 92) < 0x4C3E9D1Cu) << 32))
                                 + 396797075 == ((v0 - 409) ^ 0x63E5449BLL))) ^ (v0 - 550))))();
}

uint64_t sub_1001496A8()
{
  STACK[0x8A0] -= 32;
  return ((uint64_t (*)(void))STACK[0x780])();
}

uint64_t sub_1001496BC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  int v5;

  v2 = STACK[0x848];
  v3 = STACK[0xA70] - 0x40AF9B25784C106DLL;
  STACK[0xB40] = v3;
  STACK[0xB48] = v2;
  STACK[0xB38] = v3;
  STACK[0xB50] = v3;
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  v5 = !v4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1394 * v5) ^ (v0 - 1143))))();
}

uint64_t sub_10014970C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  void *v4;
  void *v5;
  BOOL v6;
  int v7;

  v2 = 2 * (v0 ^ 0x611);
  v3 = v2 ^ 0x3EE;
  STACK[0xB30] = 0;
  v4 = malloc(0x408uLL);
  STACK[0xB58] = (unint64_t)v4;
  v5 = malloc(0x404uLL);
  STACK[0xB30] = (unint64_t)v5;
  if (v4)
    v6 = v5 == 0;
  else
    v6 = 1;
  v7 = !v6;
  LODWORD(STACK[0x688]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v7 * (v3 - 591)) ^ v2)) - 8))();
}

uint64_t sub_10014976C()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned __int8 *v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unint64_t v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unint64_t v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  int v46;
  int v47;
  unint64_t v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unint64_t v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unint64_t v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  unint64_t v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  unsigned int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  unsigned int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  int v300;
  unint64_t v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  int v319;
  unsigned int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  char v338;
  uint64_t v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  uint64_t v346;
  int v347;
  unsigned int v348;
  int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  int v362;
  int v363;
  unsigned int v364;
  int v365;
  unsigned int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  int v379;
  int v380;
  int v381;
  unsigned int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  unsigned int v402;
  unsigned int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unint64_t v409;
  int v410;
  unsigned int v411;
  int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  int v418;
  int v419;
  int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  int v424;
  int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  unsigned int v441;
  unsigned int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  BOOL v460;
  int v461;
  int v462;
  int v463;
  int v464;
  unsigned int v465;
  int v466;
  __int16 v467;
  int v468;
  unint64_t v469;
  int v470;
  int v471;
  int v472;
  int v473;
  unsigned int v474;
  int v475;
  unsigned int v476;
  int v477;
  int v478;
  unsigned int v479;
  int v480;
  int v481;
  unsigned int v482;
  int v483;
  int v484;
  int v485;
  unsigned int v486;
  unsigned int v487;
  int v488;
  int v489;
  int v490;
  unsigned int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  unsigned int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  unsigned int v508;
  unsigned int v509;
  int v510;
  int v511;
  unsigned int v512;
  unsigned int v513;
  int v514;
  unsigned int v515;
  int v516;
  int v517;
  int v518;
  unsigned int v519;
  int v520;
  int v521;
  int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  int v526;
  int v527;
  unsigned int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  unsigned int v533;
  int v534;
  int v535;
  int v536;
  unsigned int v537;
  unsigned int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  unsigned int v544;
  unsigned int v545;
  unsigned int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  unsigned int v554;
  int v555;
  unsigned int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  unsigned int v574;
  int v575;
  unsigned int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  int v580;
  unsigned int v581;
  unsigned int v582;
  int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  int v588;
  int v589;
  unsigned int v590;
  int v591;
  unsigned int v592;
  int v593;
  unsigned int v594;
  unsigned int v595;
  int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  int v605;
  unsigned int v606;
  unsigned int v607;
  int v608;
  unsigned int v609;
  unsigned int v610;
  unsigned int v611;
  unint64_t v612;
  unsigned int v613;
  int v614;
  unsigned int v615;
  int v616;
  int v617;
  unsigned int v618;
  unsigned int v619;
  unsigned int v620;
  _BOOL4 v621;

  v1 = byte_100263CF0[v0[14] ^ 0xDELL];
  HIDWORD(v2) = ~v1;
  LODWORD(v2) = (v1 ^ 0x52) << 24;
  v3 = (v2 >> 25) - ((2 * (v2 >> 25)) & 0xFFFFFFF4) + 122;
  v4 = ((((v3 ^ 0x74) - ((2 * (v3 ^ 0x74)) & 0x14A)) << 8) - 1501780736) ^ 0xA67CA500;
  v5 = byte_100263CF0[v0[10] ^ 0x9CLL];
  HIDWORD(v2) = ~v5;
  LODWORD(v2) = (v5 ^ 0x52) << 24;
  v6 = v0[13] ^ 0xC8;
  v7 = ((((((v2 >> 25) + (~(2 * (v2 >> 25)) | 0x5F) + 81) ^ 0xF8)
        - ((2 * (((v2 >> 25) + (~(2 * (v2 >> 25)) | 0x5F) + 81) ^ 0xF8)) & 0xAC)) << 8)
      - 1074768384) ^ 0xBFF05600;
  v8 = v7 - ((2 * v7) & 0x6C402800) + 1981813828;
  v9 = byte_100259ED0[v6] - 2 * ((byte_100259ED0[v6] + 104) & 0x4F ^ byte_100259ED0[v6] & 7) + 48;
  v10 = ((v9 >> 4) & 4 | 0xFFFFFFD8) ^ v9;
  LOBYTE(v6) = v6
             - 11
             * ((((unsigned __int16)(117 * v6) >> 8)
                                + (((v6 - ((unsigned __int16)(117 * v6) >> 8)) & 0xFE) >> 1)) >> 3);
  v11 = ((((v10 ^ 0x95) - ((2 * (v10 ^ 0x95)) & 0x102)) << 16) + 1904279552) ^ 0x71810000;
  v12 = byte_100263CF0[v0[5] ^ 0x50];
  v13 = (v11 + 1073504318 + (~(2 * v11) | 0x8007FFFF) + 1) ^ 0x3FFC603E | (v4 - ((2 * v4) & 0x5F19FE00) + 1871511403) ^ 0x6F8CFF6B;
  HIDWORD(v2) = ~v12;
  LODWORD(v2) = (v12 ^ 0x52) << 24;
  v14 = (unsigned __int8 *)STACK[0xB48];
  v15 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0xEA) - 11) ^ 0xB5)
         - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0xEA) - 11) ^ 0xB5)) & 0x8E)) << 16)
       - 1689845760) ^ 0x9B470000;
  v16 = byte_100279040[*v0 ^ 0x3DLL];
  v17 = ((((v16 ^ 4) - ((2 * v16) & 0x46)) << 24) - 1560281088) ^ 0xA3000000;
  LODWORD(v6) = byte_100259ED0[*(unsigned __int8 *)(STACK[0xB48]
                                                  + (-10 - (((2 * v6) & 0x16) + (v6 ^ 0xEB)))
                                                  + (((2 * v6) & 0x16) + (v6 ^ 0xEB) + 21)) ^ 0x12];
  v18 = (~(2 * v6 + 16) | 0xFFFFFFD1) + v6 - 128;
  v19 = *(unsigned __int8 *)(STACK[0xB48] + 6);
  STACK[0x560] = v19;
  v20 = byte_100259ED0[v19 ^ 0x22] - 2 * (byte_100259ED0[v19 ^ 0x22] & 7) + 111;
  v21 = v18 ^ 0x65 ^ ((v18 >> 4) & 4 | 0x98);
  v22 = (v21 - ((2 * v21) & 0x142) + 703156897) ^ 0x29E952A1 | v8 ^ 0x76201444;
  v23 = v22 - ((2 * v22) & 0x32BCE2C0);
  v24 = (((((v20 >> 4) & 4 ^ v20 ^ 0x13) - ((2 * ((v20 >> 4) & 4 ^ v20 ^ 0x13)) & 0x1D4)) << 8)
       - 989926912) ^ 0xC4FEEA00;
  v25 = v14[4];
  STACK[0x570] = v25;
  v26 = (v24 - ((2 * v24) & 0x17C9A600) + 1273287639) ^ 0x4BE4D3D7 | (v15 - ((2 * v15) & 0x73900000) - 104323414) ^ 0xF9C826AA;
  v27 = byte_100259ED0[v25 ^ 0xB8]
      - 2 * ((byte_100259ED0[v25 ^ 0xB8] + 104) & 0x4F ^ byte_100259ED0[v25 ^ 0xB8] & 2)
      - 75;
  v28 = v27 ^ 0x53 ^ ((v27 >> 4) & 4 | 0x78);
  v29 = ((((~(2 * v28) | 0x25) + v28) << 24) - 301989888) ^ 0xED000000;
  v30 = v14[1];
  STACK[0x4E0] = v30;
  v31 = (v26 - ((2 * v26) & 0xA57EACC8) - 759212444) ^ 0xD2BF5664 | (v29 - ((2 * v29) & 0xAAAAAAAA) + 1434816703) ^ 0x558590BF;
  v32 = byte_100263CF0[v30 ^ 2];
  HIDWORD(v2) = ~v32;
  LODWORD(v2) = (v32 ^ 0x52) << 24;
  v33 = v31 - ((2 * v31) & 0x4C61545E);
  v34 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x42) - 95) ^ 0xB0)
         - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x42) - 95) ^ 0xB0)) & 0x68)) << 16)
       + 1681129472) ^ 0x64340000;
  v35 = v14[15];
  STACK[0x580] = v35;
  v36 = (v34 - ((2 * v34) & 0x12580000) - 919802156) ^ 0xC92CEED4 | (v17 - ((2 * v17) & 0x77777777) + 995186751) ^ 0x3B51583F;
  v37 = v36 - 936298741 + (~(2 * v36) | 0x6F9D91E9);
  v38 = byte_100259ED0[v35 ^ 0x3A]
      - 2 * ((byte_100259ED0[v35 ^ 0x3A] + 104) & 0x7D ^ byte_100259ED0[v35 ^ 0x3A] & 1)
      - 28;
  v39 = (v38 >> 4) & 4 ^ v38;
  v40 = v14[9];
  STACK[0x4A0] = v40;
  v41 = byte_100263CF0[v40 ^ 0x2B];
  HIDWORD(v2) = ~v41;
  LODWORD(v2) = (v41 ^ 0x52) << 24;
  v42 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x44) + 34) ^ 0xDC)
         - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x44) + 34) ^ 0xDC)) & 0x126)) << 16)
       + 1586692096) ^ 0x5E930000;
  v43 = (v42 - ((2 * v42) & 0x4D700000) - 424115308) ^ 0xE6B88394 | (v23 + 1499361632) ^ 0x595E7160;
  v44 = v43 - ((2 * v43) & 0x7D9F8392);
  v45 = v14[3];
  STACK[0x4D0] = v45;
  v46 = byte_100263CF0[v45 ^ 0x5B];
  HIDWORD(v2) = ~v46;
  LODWORD(v2) = (v46 ^ 0x52) << 24;
  v47 = (v37 + 1) ^ 0xC831370B | ((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x84) - 62) ^ 0xDF)
                                - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x84) - 62) ^ 0xDF)) & 0x1C6)
                                - 1228194333) ^ 0xB6CB3DE3;
  v48 = v14[7];
  STACK[0x4B0] = v48;
  v49 = byte_100259ED0[v48 ^ 0xFB]
      - 2 * ((byte_100259ED0[v48 ^ 0xFB] + 40) & 0x3D ^ byte_100259ED0[v48 ^ 0xFB] & 4)
      - 95;
  v50 = (v33 - 1506760145) ^ 0xA630AA2F | (((v49 ^ (v49 >> 4) & 4) ^ 0xFC)
                                         - ((2 * (v49 ^ (v49 >> 4) & 4 ^ 0xFC)) & 0x18)
                                         - 1080043764) ^ 0xBF9FD70C;
  v51 = v50 - ((2 * v50) & 0xB0CDC1CE) - 664346393;
  LODWORD(STACK[0x5D0]) = v51;
  v52 = v14[8];
  STACK[0x498] = v52;
  v53 = byte_100263CF0[v52 ^ 5];
  HIDWORD(v2) = ~v53;
  LODWORD(v2) = (v53 ^ 0x52) << 24;
  v54 = ((v2 >> 25) - ((2 * (v2 >> 25)) & 0xE2) - 15) ^ 0x95;
  v55 = (((v54 + (~(2 * (_BYTE)v54) | 0xFFFFFF9F)) << 24) + 822083584) ^ 0x30000000;
  v56 = (v55 - ((2 * v55) & 0xD2000000) + 1769885423) ^ 0x697E4EEF | (v44 - 19938871) ^ 0xFECFC1C9;
  v57 = v56 - ((2 * v56) & 0x7A5BDF9E) - 1121062961;
  LODWORD(STACK[0x660]) = v57;
  STACK[0x5C0] = (unint64_t)v14;
  v58 = v14[2];
  STACK[0x520] = v58;
  v59 = byte_100279040[v58 ^ 0x7D] ^ 0x19;
  v60 = (((v59 - ((2 * v59) & 0x90)) << 8) - 459520000) ^ 0xE49C4800;
  v61 = byte_10027E1C0[v14[12] ^ 0x5ALL];
  v62 = ((((v61 ^ 0xCF) - ((2 * (v61 ^ 0xCF)) & 0xFFFFFFCF)) << 24) + 1728053248) ^ 0x67000000;
  v63 = (v62 - ((2 * v62) & 0x3E000000) + 530532491) ^ 0x1F9F488B | ((v39 ^ 0x7C)
                                                                   - ((2 * (v39 ^ 0x7C)) & 0x122)
                                                                   - 1140502383) ^ 0xBC055091;
  v64 = (v63 - ((2 * v63) & 0xF9182BE6) - 57928205) ^ 0xFC8C15F3 | (v13 - ((2 * v13) & 0x9086E886) + 1212380227) ^ 0x48437443;
  LODWORD(v58) = (v64 - ((2 * v64) & 0x7D93FEEA) + 1053425525) ^ 0x17749192;
  LODWORD(STACK[0x670]) = v58;
  v65 = (v47 - ((2 * v47) & 0x87F416BC) + 1140460382) ^ 0x43FA0B5E | (v60 - ((2 * v60) & 0x55FA1200) - 352515667) ^ 0xEAFD09AD;
  v66 = v65 - ((2 * v65) & 0x8D9B9DAC) + 1187892950;
  LODWORD(STACK[0x678]) = v66;
  v67 = dword_100256DF0[v10 ^ 0xD0];
  HIDWORD(v2) = v67 ^ 0x37C6;
  LODWORD(v2) = v67 ^ 0xA1F60000;
  v68 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xE3184DC4) - 242473246;
  v69 = dword_100256DF0[v61 ^ 0x6A];
  HIDWORD(v2) = v69 ^ 0xC6;
  LODWORD(v2) = v69 ^ 0xA1F63700;
  v70 = dword_10025A4F0[v39 ^ 0x18] ^ ((v2 >> 8) - 536390203 - ((2 * (v2 >> 8)) & 0xC00EB880) + 1659);
  v71 = dword_100256DF0[v3 ^ 0xFB];
  HIDWORD(v2) = v71 ^ 0xF637C6;
  LODWORD(v2) = v71 ^ 0xA1000000;
  v72 = v68 ^ v70 ^ ((v2 >> 24) - ((2 * (v2 >> 24)) & 0x48C17030) + 610318360) ^ v66;
  LODWORD(STACK[0x640]) = v72;
  v73 = v72 ^ v51 ^ v57;
  LODWORD(STACK[0x5E0]) = v73;
  v74 = v72 ^ v51;
  v75 = v58 ^ v73 ^ 0x5F5B1B52;
  LODWORD(v58) = v73 ^ 0x5F5B1B52;
  LODWORD(STACK[0x608]) = v73 ^ 0x5F5B1B52;
  v76 = dword_100256DF0[((BYTE2(v75) ^ 0x276AEC10 | 0xCDE94229) - (BYTE2(v75) ^ 0x276AEC10 | 0x3216BDD6) + 840351190) ^ 0xEA83AEF8];
  HIDWORD(v2) = v76 ^ 0x37C6;
  LODWORD(v2) = v76 ^ 0xA1F60000;
  v77 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xBB862160) + 1573064880;
  v78 = dword_1002666E0[HIBYTE(v75) ^ 0x89];
  HIDWORD(v2) = v78 ^ 0x164;
  LODWORD(v2) = v78 ^ 0x94CC7A00;
  v79 = (v2 >> 9) + 49098405 + (~(2 * (v2 >> 9)) | 0xFA25A2B7);
  v80 = (((2 * v79) ^ 0x5DA5D48) - 2 * (((2 * v79) ^ 0x5DA5D48) & 0x10F4D41E ^ (2 * v79) & 4) + 284480539) & 0x32119686 ^ 0x119086;
  v81 = ((v80 | 0x2CF28000) - (v80 | 0xD30D7FFF) - 754089985) ^ v79;
  HIDWORD(v2) = v81 ^ 0xA2;
  LODWORD(v2) = v81 ^ 0x3F9A3D00;
  v82 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0x43D11516) + 568887947;
  v83 = (((2 * (BYTE1(v75) ^ 0xF7)) & 0x120) - (BYTE1(v75) ^ 0xF7) - 1448727697) ^ 0x60241E49;
  v84 = ((v75 ^ 0x54) - 2 * ((v75 ^ 0x54) & 0x7F) + 2943) ^ 0xB82;
  v85 = dword_100256DF0[(((2 * v83) & 0x8004602C) - v83 - 1079996439) ^ 0x7622BA7C];
  HIDWORD(v2) = v85 ^ 0xF637C6;
  LODWORD(v2) = v85 ^ 0xA1000000;
  v86 = ((v2 >> 24) - ((2 * (v2 >> 24)) & 0xE18B3B0C) + 1891999110) ^ v77 ^ v72 ^ v82;
  v87 = (v84 - ((2 * v84 + 822565292) & 0x25478A3C) + 1260876276) ^ dword_100264D80[(((2 * (v75 ^ 0x73)) | 0x1635A35E)
                                                                                   - (v75 ^ 0x73)
                                                                                   - 186306991) ^ 0xB1AD192];
  v88 = ((2 * v86) & 0x7DDFB9FC ^ 0x3C5118A4) + (v86 ^ 0x20D751AD);
  v89 = (((v86 ^ v87 ^ 0x929DAACF) + 1) ^ 0x1F7E37F9) + v88 + ((2 * ((v86 ^ v87 ^ 0x929DAACF) + 1)) & 0x3EFC6FF2);
  v90 = v88
      + 1091576578
      + (v87 ^ ((v87 ^ 0xCA5279C) - ((2 * (v87 ^ 0xCA5279C) + 2) & 0xD4E3FA7A) + 1785855294) ^ 0xD3A40E1D ^ (v89 - ((2 * v89 + 1126422034) & 0x951E5686) + 1814107724));
  LODWORD(v52) = v90 - ((2 * v90) & 0x8FA1AD26) + 1204868755;
  LODWORD(STACK[0x5F0]) = v75 ^ 0x5D24E9AB;
  LODWORD(STACK[0x510]) = v72 ^ v51;
  LODWORD(STACK[0x5A0]) = v52 ^ v72 ^ v51;
  LODWORD(STACK[0x500]) = v52;
  v91 = v52 ^ v72 ^ v51 ^ v58;
  LODWORD(v58) = v91 ^ v75 ^ 0x5D24E9AB;
  v92 = v91;
  LODWORD(STACK[0x680]) = v91;
  LOBYTE(v72) = v91 ^ v75 ^ 0xAB;
  LODWORD(STACK[0x540]) = v58;
  v93 = dword_10025A4F0[((unsigned __int16)(v58 ^ 0x93FE) >> 8) ^ 0xD7];
  HIDWORD(v2) = v93 ^ 0xB5E83C;
  LODWORD(v2) = v93 ^ 0x79000000;
  v94 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xAF7BEF38) - 675416164;
  v95 = (v58 ^ 0x847E93FE) >> 1;
  v96 = ((((v58 ^ 0x847E93FE) >> 24) ^ 0x51)
       - 1425187015
       + ((2 * (((v58 ^ 0x847E93FE) >> 24) ^ 0x51) + 172) & 0xC4 ^ 0x9EFCBFFF)) ^ dword_100264D80[((v58 ^ 0x847E93FE) >> 24) ^ 0xB6];
  v97 = (((v95 & 0x5B ^ 0xE6649709) & 0x86201118 ^ 0x10000190)
       + ((v95 & 0x5B ^ 0xE6649709 | v95 & 0x24) ^ 0xAFB7F668)
       - (((v95 & 0x5B ^ 0xE6649709 | v95 & 0x24) ^ 0xAFB7F668) & 0x48912118)) ^ 0x97625098 | (((((_BYTE)v72 << 7) - 114) & 0x80 ^ 0x26040380)
                                                                                             + 2
                                                                                             * ((((_BYTE)v72 << 7) - 114) & 0x80)
                                                                                             - 853203062) ^ 0xF3292B8A;
  v98 = v97 - ((2 * v97) & 0x5BC99A38) - 1377514212;
  HIDWORD(v2) = v96 ^ 0xFFFFFFFB;
  LODWORD(v2) = v96 ^ 0xF0D73000;
  v99 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0xED18EB58) + 1988916652;
  LOWORD(v84) = (((2 * v98) ^ 0xD6) - ((2 * ((2 * v98) ^ 0xD6)) & 0xAA) - 43) & 0xFE ^ 0x2C;
  v100 = ((_WORD)v84 - ((2 * (_WORD)v84) & 0xD8) + 1389) & 0x7FE ^ 0x594 | (v98 >> 7) ^ 0x15BC99B;
  v101 = (((2 * (BYTE2(v58) ^ 0xEB)) | 0x7ECF80E0) - (BYTE2(v58) ^ 0xEB) + 1083719568) ^ 0xBB678098;
  v102 = dword_1002666E0[(-803735391 - v101 + ((2 * v101) | 0x5FC7AEBE) + 274432) ^ 0x2BE39710];
  HIDWORD(v2) = v102 ^ 0x164;
  LODWORD(v2) = v102 ^ 0x94CC7A00;
  v103 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xCD12AA14) - 427207414;
  v104 = (((2 * v103) ^ 0xCD12AA14) - ((2 * ((2 * v103) ^ 0xCD12AA14)) & 0x3605BA04) + 453172482) & 0x32119686 ^ 0x22118404;
  v105 = (((2 * v104) | 0x1212F462) - v104 - 151616049) ^ v103;
  HIDWORD(v2) = v105 ^ 0xA8BF;
  LODWORD(v2) = v105 ^ 0xDE150000;
  v106 = v94 ^ dword_10025A4F0[(v100 - ((2 * v100) & 0x1065202) - 930928383) ^ 0xC88329AC] ^ v99 ^ ((v2 >> 16)
                                                                                                  - ((2 * (v2 >> 16)) & 0x1C1E85E0)
                                                                                                  + 235881200);
  v107 = v74 ^ 0xE4690A35 ^ v106;
  v108 = v92 ^ 0xBCBC787B ^ v107;
  v109 = v107;
  LODWORD(STACK[0x550]) = v107;
  v110 = v108 ^ v58 ^ 0x847E93FE;
  LODWORD(STACK[0x590]) = v108;
  v111 = dword_10025A4F0[HIBYTE(v110) ^ 0xAB];
  HIDWORD(v2) = v111 ^ 0x3C;
  LODWORD(v2) = v111 ^ 0x79B5E800;
  v112 = ((v2 >> 8) - ((2 * (v2 >> 8)) & 0xAEF895B6) - 679720229) ^ dword_10025A4F0[(((v108 ^ v58 ^ 0xFE) ^ 0x4A)
                                                                                   + (v110 & 0xE3 ^ 0xBA1)
                                                                                   - (((v108 ^ v58 ^ 0xFE) ^ 0x4A) & 0xFFFFFFE3)) ^ 0xB91];
  v113 = v110 ^ 0x8B0C92F;
  LODWORD(STACK[0x530]) = v110 ^ 0x8B0C92F;
  v114 = dword_10025A4F0[((BYTE2(v110) ^ 0x1E) + (HIWORD(v110) & 0x19 ^ 0x501) - ((BYTE2(v110) ^ 0x1E) & 0x19)) ^ 0x5DE];
  HIDWORD(v2) = v114 ^ 0xE83C;
  LODWORD(v2) = v114 ^ 0x79B50000;
  v115 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x9FE091B4) + 1341147354;
  v116 = dword_100256DF0[(((v110 >> 8) & 0x16 ^ 0x29C7B903) + ((v110 >> 8) & 0xE9) - 1) ^ 0x29C7B9DF];
  HIDWORD(v2) = v116 ^ 0xF637C6;
  LODWORD(v2) = v116 ^ 0xA1000000;
  LODWORD(STACK[0x4C0]) = v106 ^ v52;
  v117 = v112 ^ ((v2 >> 24) - 1958725055 + (~(2 * (v2 >> 24)) | 0xE97F8B7F)) ^ v115 ^ v106 ^ v52;
  LODWORD(STACK[0x464]) = v117 ^ v109;
  LODWORD(STACK[0x668]) = v117;
  v118 = v117 ^ v109 ^ 0x4E92F357;
  v119 = v118 ^ v108 ^ v113;
  v120 = dword_1002666E0[(((2 * ((v118 ^ v108 ^ v113) ^ 0xB)) | 0xB9909DA)
                        - ((v118 ^ v108 ^ v113) ^ 0xB)
                        + 1513323283) & 0x3FFFFFFF ^ 0x25CC8410];
  HIDWORD(v2) = v120 ^ 0x164;
  LODWORD(v2) = v120 ^ 0x94CC7A00;
  v121 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xEDC5D6D4) - 152900758;
  v122 = (((2 * v121) ^ 0xEDC5D6D4) - ((2 * ((2 * v121) ^ 0xEDC5D6D4)) & 0x684A740) + 591549345) & 0x32119686 ^ 0x32011480;
  LODWORD(v61) = dword_100256DF0[((HIWORD(v119) & 0x6E ^ 0x823) + (HIWORD(v119) & 0x91) - 1) ^ 0x8B2];
  HIDWORD(v2) = v61 ^ 0x37C6;
  LODWORD(v2) = v61 ^ 0xA1F60000;
  LODWORD(v61) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x78F192A0) + 1014548816;
  LODWORD(v19) = ((2 * (BYTE1(v119) ^ 0x5B)) | 0x62956E58) - (BYTE1(v119) ^ 0x5B) - 826980140;
  LODWORD(v19) = dword_1002666E0[((v19 & 0x314A8896 ^ 0x44008813) + (v19 & 0x3769 ^ 0x80117729) - 1) ^ 0xF55B48C9];
  HIDWORD(v2) = v19 ^ 0x164;
  LODWORD(v2) = v19 ^ 0x94CC7A00;
  LODWORD(v19) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xA33AEF54) + 1369274282;
  LODWORD(v19) = (((2 * v19) ^ 0xA33AEF54) - ((2 * ((2 * v19) ^ 0xA33AEF54)) & 0x305DDEAC) + 942600022) & 0x32119686 ^ v19;
  LODWORD(v52) = v119 ^ 0x9231D2B;
  LODWORD(STACK[0x3F8]) = v119 ^ 0x9231D2B;
  HIDWORD(v2) = v19 ^ 0x19662E;
  LODWORD(v2) = v19 ^ 0x60000000;
  LODWORD(v19) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0x3CBDEA34);
  v123 = ((HIBYTE(v119) ^ 0x1E) - ((2 * (HIBYTE(v119) ^ 0x1E) + 481708) & 0x74152) + 2094239615) ^ dword_100264D80[HIBYTE(v119) ^ 0xF9];
  HIDWORD(v2) = v123 ^ 0x30;
  LODWORD(v2) = v123 ^ 0xC6116000;
  LODWORD(v58) = v61 ^ v121 ^ ((((v122 | 0x21DB42AD) - (v122 | 0xDE24BD52) - 568017582) & 0xAAC69237 ^ 0x82269252)
                             + (((v122 | 0x21DB42AD) - (v122 | 0xDE24BD52) - 568017582) & 0x55196D88 ^ 0x114C89)
                             - 1) ^ v117 ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0xC6C209EC) - 480181002) ^ (v19 - 1637944038);
  v124 = v118 ^ v108 ^ 0x9B19AA4;
  LODWORD(STACK[0x424]) = v124;
  v125 = v58 ^ 0xA157852C;
  v126 = v58;
  LODWORD(v58) = v58 ^ 0xA157852C ^ v118;
  LODWORD(STACK[0x430]) = v58;
  LODWORD(v58) = v58 ^ 0x45ABA2A8;
  v127 = v58 ^ v124;
  v128 = v58;
  LODWORD(STACK[0x4F0]) = v58;
  BYTE2(v118) = BYTE2(v127) ^ BYTE2(v52);
  v129 = ((((v127 ^ v52) >> 24) ^ 0x26)
        + 810854433
        + ((2 * (((v127 ^ v52) >> 24) ^ 0x26) + 428) & 0x294 ^ 0x9EFEAFFF)) ^ dword_100264D80[((v127 ^ v52) >> 24) ^ 0xC1];
  v130 = ((unsigned __int16)(v127 ^ v52) >> 8);
  v131 = (v130 ^ 0x39) - ((2 * (v130 ^ 0x39)) & 0xFA) + 993204093;
  HIDWORD(v2) = v129 ^ 0xD3;
  LODWORD(v2) = v129 ^ 0x758E7900;
  v132 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0x2A5394) - 2146096694;
  v133 = (((2 * (v130 ^ 0xBF)) | 0x1512602) - (v130 ^ 0xBF) + 2069327103) & 0x7FFFFFF ^ 0x4A893D8;
  v134 = (v133 - ((2 * v133 + 17258924) & 0x1179C52) + 961510143) ^ dword_100264D80[((v131 & 0x3810073E ^ 0x400E416)
                                                                                   + (v131 ^ 0x7A350369)
                                                                                   - ((v131 ^ 0x7A350369) & 0x4004073E)) ^ 0x3D12F392];
  HIDWORD(v2) = v134 ^ 0x954CB0;
  LODWORD(v2) = v134 ^ 0x82000000;
  v135 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xC18635D8) - 524084500;
  LODWORD(v58) = (((v127 ^ v52) & 0x65 ^ 0x4B5A4D01) + ((v127 ^ v52) & 0x9A ^ 0x83) - 1) ^ 0x8A68D564;
  LODWORD(v52) = v127 ^ v52 ^ 0xAC8794A;
  LODWORD(STACK[0x410]) = v52;
  v136 = (((2 * (BYTE2(v118) ^ 0xB0)) | 0x3AE5EF5C) - (BYTE2(v118) ^ 0xB0) + 1653409874) ^ 0x8B0ACC8F;
  LODWORD(STACK[0x418]) = v127;
  v137 = (v75 ^ 0xDB6DE861)
       + (((v75 ^ 0xDD79179E) + 1) ^ 0xFAA76FDF)
       + ((2 * ((v75 ^ 0xDD79179E) + 1)) & 0xF54EDFBE)
       + 89690145;
  v138 = dword_10025A4F0[((v136 | 0xEB61211C) - (v136 | 0x149EDEE3) + 345956067) ^ 0xFD191AC4];
  v139 = ((v137 ^ 0x7BD93B3F) - 2077834047 + ((2 * v137) & 0xF7B2767E)) | v138 ^ 0x79B5E83C;
  HIDWORD(v2) = (v139 - ((2 * v139) & 0x3C3E) + 40479) ^ 0x9E1F;
  LODWORD(v2) = v138 ^ 0x79B50000;
  LODWORD(v61) = dword_10025A4F0[((_DWORD)v58 - ((2 * (_DWORD)v58) & 0x8064237A) + 1790318013) ^ 0xAB848D07] ^ v125 ^ v132 ^ v135 ^ 0xBE179ABE ^ ((v2 >> 16) - ((2 * (v2 >> 16)) & 0xED0300F6) - 159285125);
  LODWORD(STACK[0x3F0]) = v61;
  v140 = v61 ^ v128;
  HIDWORD(v2) = v61 ^ v128 ^ 0x2E83E;
  LODWORD(v2) = v61 ^ v128 ^ 0xB4B00000;
  v141 = ((v2 >> 18) - ((2 * (v2 >> 18)) & 0x35C1245E) + 450925103) ^ (((v127 << 14) ^ 0x428B8000)
                                                                     - ((v127 << 15) & 0xA080000)
                                                                     + 84159885);
  HIDWORD(v2) = v141 ^ (v127 >> 18) ^ 0x29DD;
  LODWORD(v2) = v141 ^ 0xE8C14000;
  v142 = (v2 >> 14) - ((2 * (v2 >> 14)) & 0x309DFBB4) + 407829978;
  LODWORD(STACK[0x3E0]) = v142;
  LODWORD(v35) = v52 ^ 0x6C3571D1 ^ v142;
  v143 = ((WORD1(v35) & 0xBB ^ 0xFFD8A713) + (WORD1(v35) & 0x44 ^ 0x41) - 1) ^ 0xCF586547;
  v144 = dword_1002666E0[(((2 * v143) & 0x8B48) - v143 + 2139327067) ^ 0x4F03484F];
  HIDWORD(v2) = v144 ^ 0x164;
  LODWORD(v2) = v144 ^ 0x94CC7A00;
  v145 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x30275AE4) - 1743540878;
  LODWORD(v58) = (((2 * v145) ^ 0x30275AE4) - ((2 * ((2 * v145) ^ 0x30275AE4)) & 0x7F48AF4) + 66733434) & 0x32119686 ^ 0x30008602;
  LODWORD(v58) = ((v58 | 0xDDBD4A84) - (v58 | 0x2242B57B) + 574797179) ^ 0xD3BF22B5;
  v146 = (v58 - ((2 * v58) & 0x7655D828) - 1154814956) ^ v145;
  HIDWORD(v2) = v146 ^ 0x3CD5;
  LODWORD(v2) = v146 ^ 0x1EAF0000;
  v147 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x6ABE0ACA) - 1252063899;
  v148 = ((BYTE1(v35) ^ 0xC0C5096 | 0x9B742079) - (BYTE1(v35) ^ 0xC0C5096 | 0x648BDF86) + 1686888326) ^ 0x977870CE;
  v149 = (v148 - ((2 * v148 + 1896307116) & 0x43C6FC90) + 1516710686) ^ dword_100264D80[(((v35 >> 8) & 0xC3 ^ 0x49248140)
                                                                                       + ((v35 >> 8) & 0x3C ^ 0x100205)
                                                                                       - 1) ^ 0x49348382];
  v150 = (v149 ^ ((v149 ^ 0x5C42032E) - ((2 * (v149 ^ 0x5C42032E) - 951107638) & 0xE67AFE9C) + 1457856307) ^ ((v149 ^ 0x3FE59CCA) - ((2 * (v149 ^ 0x3FE59CCA) + 2) & 0xE764F454) - 206407125) ^ 0xC0956651)
       + 1671929828;
  v151 = ((2 * v150) & 0x417492EE) + (v150 ^ 0xA0BA4977);
  HIDWORD(v2) = v151 + 4568713;
  LODWORD(v2) = v151 + 1598404233;
  v152 = dword_100256DF0[(((2 * (v52 ^ 0xD1 ^ v142 ^ 0xBA4A335E)) | 0x7EBCF1A8)
                        - (v52 ^ 0xD1 ^ v142 ^ 0xBA4A335E)
                        - 1063155924) & 0x81044FFF ^ 0x81044B51] ^ v61 ^ ((v2 >> 24)
                                                                        - ((2 * (v2 >> 24)) & 0xE71CE00C)
                                                                        - 208769018) ^ 0xD4B1F1B4 ^ v147;
  LODWORD(v58) = (v152 & 0x2387EEED ^ 0x80A73FA5) - ((2 * (v152 & 0x2387EEED ^ 0x80A73FA5)) & 0x464B40D8) + 2070782078;
  v153 = ((v152 & 0xCC001110 ^ 0xE9816B31) + (v152 & 0x10780002 ^ 0x10600003) - 2) ^ 0xC5B1FB2A;
  v154 = (v153 - ((2 * v153) & 0x70802260) - 1203609740) ^ 0x1802CF7C | v58 ^ 0xFB4F337E;
  LODWORD(STACK[0x3D4]) = v35;
  LODWORD(STACK[0x438]) = BYTE3(v35);
  LODWORD(v58) = dword_100256DF0[BYTE3(v35) ^ 0xBA];
  HIDWORD(v2) = v58 ^ 0xC6;
  LODWORD(v2) = v58 ^ 0xA1F63700;
  LODWORD(v58) = (v154 - ((2 * v154) & 0x8A4A773C) + 1160067998) ^ ((v2 >> 8)
                                                                  - ((2 * (v2 >> 8)) & 0x8188E708)
                                                                  + 1086616452);
  LODWORD(STACK[0x408]) = v61 ^ v128;
  v155 = v61 ^ v128 ^ 0xAFA3E26B ^ v58;
  LODWORD(v61) = v58;
  LODWORD(STACK[0x440]) = v155;
  LODWORD(v58) = v155 ^ v142;
  v156 = v155 ^ v142 ^ 0xEC2D6AB6;
  LODWORD(v52) = v156 ^ v35;
  LODWORD(v35) = v156;
  LODWORD(STACK[0x3C0]) = v156;
  v157 = ((v52 ^ 0x1A) + 263172 - ((2 * v52) & 0x1C8) + 3040) ^ 0x40F14;
  v158 = (((2 * (v52 ^ 0x800A14D6)) | 0xC29C2272) - (v52 ^ 0x800A14D6) - 1632506169) ^ 0xE14405E2;
  v159 = dword_1002666E0[((BYTE2(v52) ^ 0x95 | 0x9B6351F9) - (BYTE2(v52) ^ 0x95 | 0x649CAE06) + 1687989766) ^ 0x9B635116];
  HIDWORD(v2) = v159 ^ 0x164;
  LODWORD(v2) = v159 ^ 0x94CC7A00;
  v160 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x53449698) + 698501964;
  v161 = ((2 * v160) ^ 0x53449698) - ((2 * ((2 * v160) ^ 0x53449698)) & 0x35FE2B04) + 2063537538;
  v162 = ((v161 & 0x32118600 ^ 0xC0024219 | v161 & 0x1086) - 1) ^ v160;
  HIDWORD(v2) = v162 ^ 0x8A54;
  LODWORD(v2) = v162 ^ 0xDA350000;
  v163 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x41B40BBA) - 1596324387;
  v164 = v52;
  LODWORD(v52) = dword_100256DF0[BYTE1(v52) ^ 0x44];
  HIDWORD(v2) = v52 ^ 0xF637C6;
  LODWORD(v2) = v52 ^ 0xA1000000;
  LODWORD(v52) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xD38102BA) - 373259939;
  LODWORD(STACK[0x3C8]) = v164;
  v165 = dword_10025A4F0[HIBYTE(v164) ^ 0x31];
  HIDWORD(v2) = v165 ^ 0x3C;
  LODWORD(v2) = v165 ^ 0x79B5E800;
  v166 = v52 ^ dword_100264D80[v158] ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x46F1A73A) - 1552362595) ^ (v157
                                                                                                  - ((2 * v157 + 822565292) & 0x38B638DE)
                                                                                                  + 350144837) ^ v163;
  LODWORD(v52) = v140 ^ 0x90621B27 ^ v166;
  v167 = v58 ^ 0x52F29CEC ^ v52;
  v168 = v52;
  LODWORD(STACK[0x394]) = v52;
  LODWORD(v58) = v167 ^ v164;
  v169 = v167;
  LODWORD(STACK[0x3A8]) = v167;
  LODWORD(v52) = ((v167 ^ v164) >> 16);
  v170 = ((v52 ^ 0x26) - ((2 * (v52 ^ 0x26)) & 0xF4) + 2042471034) ^ 0x7BEDE26E;
  LODWORD(v52) = (v52 ^ 0xFFFFFF2D) - 820035806 + ((2 * v52) | 0x61C181BE);
  LODWORD(v52) = ((v52 & 0x30202764 ^ 0x8102740) + (v52 ^ 0x3325C03F) - ((v52 ^ 0x3325C03F) & 0xC12764)) ^ 0x3B3427A4;
  LODWORD(v52) = (v52 - ((2 * v52 + 1896307116) & 0x78F8FA30) + 889203182) ^ dword_100264D80[((v170 | 0x8C94A101)
                                                                                            - (v170 | 0x736B5EFE)
                                                                                            + 1936416510) ^ 0x8EC4E126];
  HIDWORD(v2) = v52 ^ 0xFFFFFF81;
  LODWORD(v2) = v52 ^ 0x7E220000;
  LODWORD(v52) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xB187F2FE) + 1489238399;
  v171 = dword_10025A4F0[(((2 * (BYTE1(v58) ^ 0x20018473)) | 0xBCD484FE) - (BYTE1(v58) ^ 0x20018473) + 563461505) ^ 0xFE6BC66B];
  HIDWORD(v2) = v171 ^ 0xB5E83C;
  LODWORD(v2) = v171 ^ 0x79000000;
  v172 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xC8731CD0) - 465990040;
  v173 = (v58 & 0x51) + (v58 ^ 0xFFFFFFDF) + (v58 | 0x26685AE) + 1;
  v174 = (((2 * (v58 ^ 0x8411004)) & 0x2016C) - (v58 ^ 0x8411004) - 329723063) ^ 0xE419C3BD;
  v175 = ((v173 & 0x3D0055A7 ^ 0x3D0050A4) + (v173 & 0xC2FFAA58 ^ 0x648009) - 1) ^ 0x3F025535;
  v176 = v58 ^ 0x34E61783;
  LODWORD(STACK[0x3EC]) = v58 ^ 0x34E61783;
  LODWORD(v58) = dword_1002666E0[BYTE3(v58) ^ 0x59];
  HIDWORD(v2) = v58 ^ 0x164;
  LODWORD(v2) = v58 ^ 0x94CC7A00;
  LODWORD(v58) = (v2 >> 9) - 1037548371 + (~(2 * (v2 >> 9)) | 0x7BAF76A7);
  v177 = (((2 * v58) ^ 0x84508958) - ((2 * ((2 * v58) ^ 0x84508958)) & 0x156167C8) + 179352549) & 0x32119686 ^ 0x10110602;
  LODWORD(v58) = ((v177 | 0x4CF3F86F) - (v177 | 0xB30C0790) - 1291057264) ^ v58;
  HIDWORD(v2) = v58 ^ 0xFFFFFFC7;
  LODWORD(v2) = v58 ^ 0x9D5EBF00;
  v178 = v166 ^ v61;
  v179 = v172 ^ dword_100264D80[v174] ^ v166 ^ v61 ^ (v175 - ((2 * v175 + 1896307116) & 0x673EB480) - 333248746) ^ v52 ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0xDDF6CE72) - 285513927);
  v180 = v179 ^ v35 ^ v176;
  v181 = dword_1002666E0[HIBYTE(v180) ^ 0x4A];
  v182 = *(unsigned __int8 *)(STACK[0x5C0] + 13);
  STACK[0x388] = v182;
  LODWORD(STACK[0x380]) = (v182 ^ 0x3F) - 12 * ((171 * (v182 ^ 0x3F)) >> 11);
  HIDWORD(v2) = v181 ^ 0x164;
  LODWORD(v2) = v181 ^ 0x94CC7A00;
  v183 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xC5E19B6) + 103746779;
  v184 = (((2 * v183) ^ 0xC5E19B6) - ((2 * ((2 * v183) ^ 0xC5E19B6)) & 0x20B46034) + 811216923) & 0x32119686 ^ v183;
  HIDWORD(v2) = v184 ^ 0x5B;
  LODWORD(v2) = v184 ^ 0x37BB8B00;
  v185 = v2 >> 8;
  LODWORD(v182) = dword_1002666E0[BYTE1(v180) ^ 0x4E];
  HIDWORD(v2) = v182 ^ 0x164;
  LODWORD(v2) = v182 ^ 0x94CC7A00;
  LODWORD(v182) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xDC134838) + 1846125596;
  LODWORD(v58) = ((2 * v182) ^ 0xDC134838) - ((2 * ((2 * v182) ^ 0xDC134838)) & 0xC920210) + 1179189512;
  LODWORD(v182) = ((v58 & 0x32119686 ^ 0x8684)
                 + (v58 & 0x22009482 ^ 0xAE2C505B)
                 - ((v58 & 0x32119686 ^ 0x8684) & 0x22009482)) & 0xFE1FFFFE ^ v182;
  HIDWORD(v2) = v182 ^ 0x8061C0;
  LODWORD(v2) = v182 ^ 0xC3FFFFFF;
  LODWORD(v182) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xC7222974) + 1670452410;
  LODWORD(v58) = dword_1002666E0[((BYTE2(v180) ^ 0xA4 | 0x2D69B186) - (BYTE2(v180) ^ 0xA4 | 0xD2964E79) - 761901447) ^ 0x2D69B193];
  HIDWORD(v2) = v58 ^ 0x164;
  LODWORD(v2) = v58 ^ 0x94CC7A00;
  LODWORD(v58) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x5CDDD016) + 779020299;
  v186 = ((2 * v58) ^ 0x5CDDD016) - ((2 * ((2 * v58) ^ 0x5CDDD016)) & 0x3AD65894) + 1567304778;
  v187 = (v186 & 0x32108406 ^ 0x8E2C697D) + (v186 & 0x11280 ^ 0x10201) - 2;
  LODWORD(v58) = ((v187 & 0x22034BF8 ^ 0x410102D1) + (v187 ^ 0x3E4A6D2E) - ((v187 ^ 0x3E4A6D2E) & 0xA2634BF8)) ^ v58;
  HIDWORD(v2) = v58 ^ 0x3620;
  LODWORD(v2) = v58 ^ 0x6CEF0000;
  LODWORD(v58) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xEA5E16E0) + 1966017392;
  LODWORD(STACK[0x378]) = v180;
  LOWORD(v187) = (v180 & 0xB6 ^ 0xF1A7) + (v180 & 0x49) - 1;
  v188 = dword_1002666E0[((v187 & 0x1F5 ^ 0x9418AEC0) + (v187 & 0xA ^ 0x20014003) - 1) ^ 0xB419EF66];
  HIDWORD(v2) = v188 ^ 0x164;
  LODWORD(v2) = v188 ^ 0x94CC7A00;
  v189 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x1CC9F41A) + 241498637;
  v190 = v189 ^ (((2 * v189) ^ 0x1CC9F41A) - ((2 * ((2 * v189) ^ 0x1CC9F41A)) & 0x3130F534) + 949516955) & 0x32119686 ^ (v185 - 444569665 + (~(2 * v185) | 0x34FF3083)) ^ v182 ^ v179 ^ 0xB8147BC0 ^ 0x21B39616 ^ v58;
  LODWORD(STACK[0x37C]) = v190;
  v191 = v179 ^ v35 ^ 0x2C51AF9B;
  LODWORD(STACK[0x404]) = v191;
  LODWORD(v35) = STACK[0x680];
  LODWORD(STACK[0x458]) = (LODWORD(STACK[0x680]) ^ 0x24B15DED ^ v169)
                        - ((2 * (LODWORD(STACK[0x680]) ^ 0x24B15DED ^ v169) + 132102218) & 0x4F8DE94)
                        - 227783825;
  v192 = v179 ^ v168;
  LODWORD(v52) = v190 ^ v179 ^ v168;
  LODWORD(v14) = v52 ^ v191 ^ 0x6099139C;
  v193 = STACK[0x510];
  LODWORD(v58) = LODWORD(STACK[0x510]) ^ 0xD79DE9B8;
  LODWORD(v182) = ((2 * ((v52 ^ v191 ^ 0x99532C3) + v58)) & 0x43FEFD5C)
                + (((v52 ^ v191 ^ 0x99532C3) + v58) ^ 0xA1FF7EAE);
  LODWORD(STACK[0x478]) = v182 - ((2 * v182 + 589812622) & 0x3951FB5E) + 1312614262;
  v194 = STACK[0x464];
  v195 = LODWORD(STACK[0x464]) ^ 0xDAB597A7;
  v196 = STACK[0x540];
  v197 = (LODWORD(STACK[0x540]) ^ 0x8BAF0A15)
       + v195
       + 1
       - ((2 * ((LODWORD(STACK[0x540]) ^ 0x8BAF0A15) + v195 + 1)) & 0xD76C9784)
       - 340374590;
  v198 = STACK[0x5D0];
  LODWORD(v182) = (LODWORD(STACK[0x5D0]) ^ 0xB0643DB7) + 1299289891;
  v199 = v182 ^ 0xBDF2BFDF;
  v200 = (2 * v182) & 0x7BE57FBE;
  LODWORD(v19) = v126;
  v201 = v126 ^ 0xC41F6F1C;
  LODWORD(v182) = ((2 * ((v35 ^ 0xDE60BDF) + (v126 ^ 0xC41F6F1C) + 1)) & 0x8E6DBF7A)
                + (((v35 ^ 0xDE60BDF) + (v126 ^ 0xC41F6F1C) + 1) ^ 0x4736DFBD);
  v202 = STACK[0x500];
  v203 = (LODWORD(STACK[0x500]) ^ 0x5C2D1783) + (v61 ^ 0xF050DED) + 1;
  v204 = v182 - ((2 * v182 + 1168422830) & 0x7203CD0C) - 606846371;
  v205 = v178 ^ 0xE0258B25;
  LODWORD(STACK[0x450]) = (LODWORD(STACK[0x668]) ^ 0x48BF0429 ^ v178 ^ 0xE0258B25)
                        - ((2 * (LODWORD(STACK[0x668]) ^ 0x48BF0429 ^ v178 ^ 0xE0258B25) - 772342212) & 0xDB363C32)
                        - 694772425;
  LODWORD(STACK[0x5B0]) = v199 + v200 + 1108164641 + v195;
  LODWORD(STACK[0x374]) = v52 ^ 0xBBA76913;
  v206 = ((2 * v203) & 0x73FCF7FC)
       + (v203 ^ 0x39FE7BFE)
       - ((2 * (((2 * v203) & 0x73FCF7FC) + (v203 ^ 0x39FE7BFE)) + 1952407130) & 0x5E369638)
       + 1766521417;
  LODWORD(STACK[0x470]) = (LODWORD(STACK[0x5E0]) ^ 0x605134F1 ^ v52 ^ 0xBBA76913)
                        - ((2 * (LODWORD(STACK[0x5E0]) ^ 0x605134F1 ^ v52 ^ 0xBBA76913) + 148052344) & 0x578A98E0)
                        - 265365204;
  LODWORD(v35) = v196;
  LODWORD(STACK[0x4F0]) = (v196 ^ 0x135F363B ^ LODWORD(STACK[0x4F0]))
                        - ((2 * (v196 ^ 0x135F363B ^ LODWORD(STACK[0x4F0])) + 843590444) & 0xCA6C1024)
                        - 27648600;
  LODWORD(v52) = v180 ^ 0xE1445727 ^ v14;
  v207 = (v192 ^ 0x188E48DA ^ v52) - ((2 * (v192 ^ 0x188E48DA ^ v52) - 1181361762) & 0x87BFA258) + 548060667;
  v208 = ((2 * ((v179 ^ 0xD46DE7FF) + (v192 ^ 0x882522F2) + 1)) & 0xB7BFFDD6)
       + (((v179 ^ 0xD46DE7FF) + (v192 ^ 0x882522F2) + 1) ^ 0x5BDFFEEB);
  v209 = ((2 * ((v61 ^ 0xF050DED) + v201)) & 0x7BFFDF76)
       + (((v61 ^ 0xF050DED) + v201) ^ 0xBDFFEFBB)
       - 2
       * ((((2 * ((v61 ^ 0xF050DED) + v201)) & 0x7BFFDF76) + (((v61 ^ 0xF050DED) + v201) ^ 0xBDFFEFBB) + 1191752630) & 0x7E31C8BB ^ (((v61 ^ 0xF050DED) + v201) ^ 0xBDFFEFBB) & 1)
       - 986022800;
  LODWORD(STACK[0x468]) = v208 - ((2 * v208 + 1662954196) & 0x5BB32B74) - 546772188;
  v210 = ((2 * ((v178 ^ 0xDAC07C61) + (LODWORD(STACK[0x5A0]) ^ 0x9205180))) & 0xFDBA7C30)
       + (((v178 ^ 0xDAC07C61) + (LODWORD(STACK[0x5A0]) ^ 0x9205180)) ^ 0x7EDD3E18);
  v211 = -2003259451 - v210 - ((1207580852 - 2 * v210) & 0xC93726D6);
  v212 = v193;
  v213 = STACK[0x3F8];
  v214 = (v193 ^ 0x24B63371 ^ v213) - ((2 * (v193 ^ 0x24B63371 ^ v213) + 692771284) & 0x4E6B5C38) + 2077956870;
  v215 = STACK[0x430];
  v216 = ((v58 + 813040745) ^ 0xFFFD7BFE)
       + ((2 * (v58 + 813040745)) & 0xFFFAF7FC)
       + 164401
       + (LODWORD(STACK[0x430]) ^ 0x22A46179)
       + 465;
  LODWORD(v182) = v179 ^ 0xB8147BC0 ^ v198;
  LODWORD(v58) = v198 ^ v214 ^ v211 ^ 0x87D6679D;
  v217 = v212 ^ 0x7E2E181D;
  v218 = LODWORD(STACK[0x680]) ^ 0x40D6534E;
  v219 = LODWORD(STACK[0x5A0]) ^ 0xBBEFF6EE;
  LODWORD(STACK[0x2B8]) = v209;
  LODWORD(STACK[0x2B4]) = v207;
  v220 = v207 ^ v209;
  LODWORD(STACK[0x540]) = v35 ^ 0xC69F5284 ^ v220;
  LODWORD(STACK[0x44C]) = v218 ^ v220;
  LODWORD(STACK[0x510]) = v219 ^ v220;
  LODWORD(STACK[0x420]) = v202 ^ 0x111D4F12 ^ v220;
  v221 = v194 ^ 0xB591EE6F;
  v222 = v19 ^ 0x4633D902;
  LODWORD(STACK[0x3BC]) = v61 ^ 0x8C1E4CBD;
  v223 = LODWORD(STACK[0x5B0]) - ((2 * LODWORD(STACK[0x5B0])) & 0x26379758) - 1826894932;
  v224 = v216 - ((2 * v216) & 0x88F9105A) + 1149012013;
  LODWORD(STACK[0x464]) = v224;
  v225 = v224 ^ v223;
  v226 = v224 ^ v223 ^ 0x20B7B25C ^ v205;
  LODWORD(STACK[0x3B8]) = v179 ^ 0xC801A12F;
  LODWORD(STACK[0x3B0]) = v192 ^ 0x6BB69BDD;
  LODWORD(STACK[0x500]) = v223;
  LODWORD(STACK[0x398]) = v223 ^ v211;
  v227 = v223 ^ v211 ^ 0x1E8C7998 ^ v14;
  LODWORD(STACK[0x428]) = v197 ^ 0x2A20DF55;
  v228 = v227 + (v197 ^ 0x2A20DF55);
  v229 = 2 * ((v227 & (v197 ^ 0x2A20DF55)) - ((2 * (v227 & (v197 ^ 0x2A20DF55))) & 0x5BDECB14)) - 606156012;
  LODWORD(v61) = 2 * &unk_10027E3C0;
  LODWORD(STACK[0x430]) = v61;
  v230 = (&unk_10027E3C0 ^ 0x7DFFC7FD) - 2113914877 + (v61 & 0xFBFF8FE0);
  v231 = ((2 * v228) & 0xDF7AEFDE) + (v228 ^ 0x6FBD77EF) + (v229 ^ 0xEFC68A1D) + ((2 * v229) & 0x97CF7DEC ^ 0x6872EBD7);
  LODWORD(STACK[0x39C]) = v231 - ((2 * v231 - 1202418158) & 0xD4B0F326) - 964509540;
  v232 = LODWORD(STACK[0x408]) ^ v225;
  LODWORD(STACK[0x2CC]) = v197 ^ 0x30FA0595;
  v233 = v223 ^ v211 ^ v197 ^ 0x30FA0595;
  LODWORD(v52) = v52 ^ v233;
  v234 = ((v230 ^ 0x37EDFFFF) + ((2 * v230) & 0x6FDBFFFE) - 938344447 + (v232 ^ 0xA6276776 ^ v52)) ^ 0x57D7FEBA;
  v235 = LODWORD(STACK[0x640]) ^ 0x13E179D2;
  v236 = LODWORD(STACK[0x410]) ^ 0xE52335F;
  LODWORD(STACK[0x3AC]) = LODWORD(STACK[0x404]) ^ 0x812A0FE1;
  LODWORD(STACK[0x3A0]) = v52 ^ 0x97A991BC;
  LODWORD(v52) = LODWORD(STACK[0x418]) ^ 0xDB85809A;
  LODWORD(STACK[0x2C8]) = v206;
  LODWORD(STACK[0x418]) = v222 ^ v206 ^ v204;
  LODWORD(STACK[0x408]) = v215 ^ 0xA088D767 ^ v206 ^ v204;
  LODWORD(STACK[0x410]) = v236 ^ v206 ^ v204;
  LODWORD(STACK[0x404]) = v52 ^ v206 ^ v204;
  LODWORD(v52) = LODWORD(STACK[0x3F0]) ^ v225;
  v237 = (v234 + 982110410) ^ v52;
  v238 = v52 ^ 0xCECD9E8;
  v239 = v225 ^ 0x74CBEC8B ^ LODWORD(STACK[0x3EC]);
  v240 = LODWORD(STACK[0x660]) ^ v211 ^ 0xC5E76D7E;
  v241 = LODWORD(STACK[0x424]) ^ 0x82496324;
  v242 = LODWORD(STACK[0x678]) ^ v211 ^ 0x411498C5;
  LODWORD(STACK[0x480]) = v211;
  v243 = LODWORD(STACK[0x670]) ^ v211 ^ 0xEB2327B1;
  v244 = v182 ^ 0x216E6C22;
  LODWORD(STACK[0x2AC]) = v214;
  v245 = v182 ^ 0x216E6C22 ^ v214;
  v246 = v240 ^ v245;
  v247 = v242 ^ v245;
  v248 = v243 ^ v245;
  LODWORD(STACK[0x2BC]) = v182;
  v249 = v58 ^ v182;
  if ((v237 & 1) != 0)
    v250 = v246;
  else
    v250 = v249;
  LODWORD(STACK[0x3F0]) = v250;
  if ((v237 & 1) != 0)
    v251 = v249;
  else
    v251 = v247;
  LODWORD(STACK[0x678]) = v251;
  if ((v237 & 1) != 0)
    v252 = v248;
  else
    v252 = v246;
  LODWORD(STACK[0x670]) = v252;
  if ((v237 & 1) != 0)
    v253 = v247;
  else
    v253 = v248;
  LODWORD(STACK[0x3EC]) = v253;
  v254 = LODWORD(STACK[0x608]) ^ 0x2FE50441;
  v255 = LODWORD(STACK[0x5F0]) ^ 0x5295A02B;
  LODWORD(STACK[0x2C0]) = v204;
  v256 = LODWORD(STACK[0x458]) ^ v204;
  LODWORD(STACK[0x680]) = v256;
  v257 = v235 ^ v256;
  v258 = v254 ^ v256;
  if ((v237 & 1) != 0)
    v259 = v217 ^ v256;
  else
    v259 = v257;
  LODWORD(STACK[0x5E0]) = v259;
  if ((v237 & 1) != 0)
    v260 = v258;
  else
    v260 = v217 ^ v256;
  LODWORD(STACK[0x3E8]) = v260;
  v261 = v255 ^ v256;
  if ((v237 & 1) != 0)
    v262 = v257;
  else
    v262 = v261;
  LODWORD(STACK[0x3E4]) = v262;
  if ((v237 & 1) != 0)
    v263 = v261;
  else
    v263 = v258;
  LODWORD(STACK[0x5A0]) = v263;
  v264 = LODWORD(STACK[0x590]) ^ 0xB29E4D2F;
  v265 = LODWORD(STACK[0x550]) ^ 0x957532A2;
  v266 = LODWORD(STACK[0x4C0]) ^ 0x11729AC1;
  v267 = LODWORD(STACK[0x530]) ^ 0x234E11C2;
  LODWORD(STACK[0x2B0]) = v244;
  v268 = v244 ^ LODWORD(STACK[0x4F0]);
  LODWORD(STACK[0x3C4]) = v268;
  v269 = v264 ^ v268;
  v270 = v265 ^ v268;
  v271 = v266 ^ v268;
  if ((v237 & 1) != 0)
    v272 = v269;
  else
    v272 = v270;
  LODWORD(STACK[0x590]) = v272;
  if ((v237 & 1) != 0)
    v273 = v270;
  else
    v273 = v271;
  LODWORD(STACK[0x640]) = v273;
  if ((v237 & 1) != 0)
    v274 = v271;
  else
    v274 = v267 ^ v268;
  LODWORD(STACK[0x550]) = v274;
  if ((v237 & 1) != 0)
    v275 = v267 ^ v268;
  else
    v275 = v269;
  LODWORD(STACK[0x608]) = v275;
  v276 = LODWORD(STACK[0x450]) ^ v223;
  v277 = v241 ^ v276;
  v278 = LODWORD(STACK[0x668]) ^ 0xE281755A ^ v276;
  if ((v237 & 1) != 0)
    v279 = v213 ^ 0x63F05CFE ^ v276;
  else
    v279 = v277;
  LODWORD(STACK[0x530]) = v279;
  if ((v237 & 1) != 0)
    v280 = v278;
  else
    v280 = v213 ^ 0x63F05CFE ^ v276;
  LODWORD(STACK[0x3DC]) = v280;
  if ((v237 & 1) != 0)
    v281 = v221 ^ v276;
  else
    v281 = v278;
  LODWORD(STACK[0x4C0]) = v281;
  if ((v237 & 1) != 0)
    v282 = v277;
  else
    v282 = v221 ^ v276;
  LODWORD(STACK[0x3D8]) = v282;
  v283 = v232 ^ 0x35E482D;
  LODWORD(STACK[0x3B4]) = v225;
  v284 = v225 ^ 0x4FBE4964 ^ LODWORD(STACK[0x3D4]);
  v285 = v225 ^ 0xC748EFE0 ^ LODWORD(STACK[0x3E0]);
  LODWORD(STACK[0x3A4]) = LODWORD(STACK[0x3C8]) ^ 0x1DD48ADA;
  if ((v237 & 1) != 0)
    v286 = v283;
  else
    v286 = v238;
  LODWORD(STACK[0x3D4]) = v286;
  if ((v237 & 1) == 0)
    v238 = v284;
  LODWORD(STACK[0x5F0]) = v238;
  if ((v237 & 1) != 0)
    v287 = v284;
  else
    v287 = v285;
  LODWORD(STACK[0x3C8]) = v287;
  if ((v237 & 1) != 0)
    v288 = v285;
  else
    v288 = v283;
  LODWORD(STACK[0x5D0]) = v288;
  LODWORD(STACK[0x3C0]) ^= 0xB8663ADu;
  v289 = v225 ^ 0x3305132A ^ LODWORD(STACK[0x3A8]);
  v290 = v225 ^ 0xE8A0E425 ^ LODWORD(STACK[0x394]);
  if ((v237 & 1) != 0)
    v291 = v226;
  else
    v291 = v239;
  LODWORD(STACK[0x424]) = v291;
  if ((v237 & 1) != 0)
    v292 = v239;
  else
    v292 = v289;
  LODWORD(STACK[0x668]) = v292;
  if ((v237 & 1) == 0)
    v289 = v290;
  LODWORD(STACK[0x394]) = v289;
  if ((v237 & 1) != 0)
    v293 = v290;
  else
    v293 = v226;
  LODWORD(STACK[0x660]) = v293;
  LODWORD(STACK[0x3A8]) = LODWORD(STACK[0x378]) ^ 0x92A79226;
  LODWORD(STACK[0x384]) = v233;
  v294 = v233 ^ 0xBE5E21D3 ^ LODWORD(STACK[0x374]);
  v295 = v233 ^ 0xE40B5D6B ^ LODWORD(STACK[0x37C]);
  v296 = byte_100259ED0[STACK[0x498] ^ 0x1D];
  v297 = v296 - ((2 * v296 - 48) & 0xFFFFFFB6) - 61;
  v298 = ((((v297 >> 4) & 4 ^ v297 ^ 0x27) - ((2 * ((v297 >> 4) & 4 ^ v297 ^ 0x27)) & 0x9A)) << 24) - 855638016;
  v299 = (v298 ^ 0xCD000000) - ((2 * v298) & 0x24000000) + 304603734;
  v300 = byte_100263CF0[STACK[0x4A0] ^ 0x15];
  HIDWORD(v301) = ~v300;
  LODWORD(v301) = (v300 ^ 0x52) << 24;
  v302 = ((((((v301 >> 25) - ((2 * (v301 >> 25)) & 0x56) + 43) ^ 0xB8)
          - ((2 * (((v301 >> 25) - ((2 * (v301 >> 25)) & 0x56) + 43) ^ 0xB8)) & 0xC4)) << 16)
        - 1654521856) ^ 0x9D620000;
  v303 = v302 - ((2 * v302) & 0xC120000) + 1175050791;
  v304 = (v303 & 0x100000 | 0xB9EDBFFB) - (v303 & 0xB50000 | 0x3940B97B) + (v303 & 0x100000 | 0x9008158);
  v305 = (((v303 & 0x4A0000 ^ 0x3FFFFC) + 6967676) & 0x4A0000 | v299 & 0xE9000000) ^ 0x20000;
  v306 = ((v304 & 0x6AC40000 ^ 0x2A461AA3 | v304 & 0x95310000) - 1) ^ 0xA3E21AA2 | (((v299 & 0x16000000 ^ 0x82875DA7) & 0x14034020 ^ 0x5C188243 | (v299 & 0x16000000 ^ 0x82875DA7) & 0x2841D80)
                                                                                  - 1) ^ 0x4C9FDFE2;
  v307 = (v306 - ((2 * v306) & 0xC58D8566) - 490290509) ^ 0xE2C6C2B3 | (v305 - ((2 * v305) & 0xC2140000) - 408180612) ^ 0xE7ABA87C;
  v308 = byte_100279040[STACK[0x4E0] ^ 0xD8] ^ 3;
  v309 = (((v308 - ((2 * v308) & 0x10A)) << 16) - 1736114176) ^ 0x98850000;
  v310 = byte_10027E1C0[STACK[0x4D0] ^ 0x79] ^ 0x7C;
  v311 = (v309 - ((2 * v309) & 0x47680000) + 1672740882) ^ 0x63B40012 | (v310 - ((2 * v310) & 0x32) - 1391414247) ^ 0xAD10B419;
  v312 = byte_100259ED0[STACK[0x4B0] ^ 0x68];
  v313 = v312 - ((2 * v312 + 80) & 0x56);
  v314 = byte_100259ED0[*(unsigned __int8 *)(STACK[0x5C0] + 11) ^ 0x88];
  v315 = v314 - 2 * ((v314 + 8) & 0x1D ^ v314 & 1) - 124;
  v316 = (v307 - ((2 * v307) & 0x757400E4) - 1162215310) ^ 0xBABA0072 | (((v315 ^ (v315 >> 4) & 4) ^ 0x1C)
                                                                       - ((2 * (v315 ^ (v315 >> 4) & 4 ^ 0x1C)) & 0x34)
                                                                       - 1652147430) ^ 0x9D863B1A;
  v317 = v316 - ((2 * v316) & 0xF7D7AC04);
  v318 = byte_100263CF0[STACK[0x388] ^ 0xBE];
  HIDWORD(v301) = ~v318;
  LODWORD(v301) = (v318 ^ 0x52) << 24;
  v319 = ((v301 >> 25) - ((2 * (v301 >> 25)) & 0x60) - 80) ^ 0xAA;
  v320 = ((((~(2 * v319) | 0xFEB9) + v319) << 16) - 1734082560) ^ 0x98A30000;
  v321 = v320 - ((2 * v320) & 0x1C7A0000);
  v322 = byte_100279040[STACK[0x560] ^ 0x16] ^ 0x50;
  v323 = (((v322 - ((2 * v322) & 0x178)) << 8) - 753288192) ^ 0xD319BC00;
  v324 = (v313 - 109) ^ 0x76 ^ (93 - (((v313 - 109) >> 4) & 4));
  v325 = (v323 - ((2 * v323) & 0x55D6DC00) - 1427411299) ^ 0xAAEB6E9D | (v324
                                                                       - ((2 * v324) & 0x88)
                                                                       + 548141892) ^ 0x20ABFB44;
  v326 = byte_100259ED0[*(unsigned __int8 *)STACK[0x5C0] ^ 0x13];
  v327 = v326 - 2 * ((v326 + 8) & 0xB ^ v326 & 1) - 14;
  v328 = v327 ^ 0xA7 ^ (-((v327 >> 4) & 4) - 58);
  v329 = (((v328 - 2 * (v328 & 0x3F)) << 24) + 1056964608) ^ 0x3F000000;
  v330 = (v329 - ((2 * v329) & 0x34000000) + 447706200) ^ 0x1AAF7458 | (v311 - ((2 * v311) & 0x67E44AF2) + 871507321) ^ 0x33F22579;
  v331 = v330 - ((2 * v330) & 0xF3C18E0);
  v332 = byte_100279040[STACK[0x570] ^ 0x3F] ^ 0xBF;
  v333 = (((v332 - ((2 * v332) & 0x72)) << 24) + 956301312) ^ 0x39000000;
  v334 = (v325 - ((2 * v325) & 0x4186F0CE) - 524060569) ^ 0xE0C37867 | (v333 - ((2 * v333) & 0x9C000000) + 1316771753) ^ 0x4E7C57A9;
  v335 = byte_100279040[*(unsigned __int8 *)(STACK[0x5C0] + 10) ^ 0x7BLL] ^ 0x6D;
  v336 = (((v335 - ((2 * v335) & 0x108)) << 8) - 1718582272) ^ 0x99908400;
  v337 = (v317 - 68430334) ^ 0xFBEBD602 | (v336 - ((2 * v336) & 0x350ECA00) + 445080869) ^ 0x1A876525;
  v338 = (LODWORD(STACK[0x380]) ^ 0x7F) + 2 * LOBYTE(STACK[0x380]);
  v339 = byte_10027E1C0[*(unsigned __int8 *)(STACK[0x5C0] + 14) ^ 0x57];
  v340 = ((((v339 ^ 0xE6) - ((2 * (v339 ^ 0xE6)) & 0x1A0)) << 8) - 1090138112) ^ 0xBF05D000;
  v341 = byte_100279040[*(unsigned __int8 *)(STACK[0x5C0] + 5) ^ 0x6BLL] ^ 0x9A;
  v342 = (((v341 - ((2 * v341) & 0xE6)) << 16) - 1955397632) ^ 0x8B730000;
  v343 = (v342 - ((2 * v342) & 0x737E0000) - 1178625739) ^ 0xB9BF9935 | (v334 - ((2 * v334) & 0xF97EC458) - 54566356) ^ 0xFCBF622C;
  v344 = v343 - ((2 * v343) & 0x47405B0A) - 1549783675;
  v345 = (v340 - ((2 * v340) & 0x4355D200) + 1638590891) ^ 0x61AAE9AB | (v321 + 2117927029) ^ 0x7E3D0075;
  v346 = byte_100279040[*(unsigned __int8 *)(STACK[0x5C0]
                                           + (-117 - v338)
                                           + (v338 - 127)) ^ 0xA4];
  v347 = (((v346 ^ 0xC8) - 2 * (v346 & 3)) << 24) - 2097152000;
  v348 = (v347 ^ 0x83000000) - ((2 * v347) & 0xA0000000);
  v349 = byte_100263CF0[STACK[0x580] ^ 0xF1];
  HIDWORD(v301) = ~v349;
  LODWORD(v301) = (v349 ^ 0x52) << 24;
  v350 = (v301 >> 25) - ((2 * (v301 >> 25)) & 0xFFFFFFE3) + 113;
  v351 = (v345 - ((2 * v345) & 0x452307F2) - 1567521799) ^ 0xA29183F9 | (v348 + 1349925364) ^ 0x507639F4;
  v352 = (v351 - ((2 * v351) & 0x10145B9E) + 134884815) ^ 0x80A2DCF | ((v350 ^ 0xE4)
                                                                     - ((2 * (v350 ^ 0xE4)) & 0x170)
                                                                     - 951140680) ^ 0xC74EBEB8;
  v353 = v352 - ((2 * v352) & 0x11F4DDE8) - 1996853516;
  v354 = byte_10027E1C0[STACK[0x520] ^ 0x5B] ^ 0xCE;
  v355 = (((v354 - ((2 * v354) & 0xFFFFFFEF)) << 8) + 360969984) ^ 0x1583F700;
  v356 = (v355 - ((2 * v355) & 0x7F981400) - 3405159) ^ 0xFFCC0A99 | (v331 - 2019685264) ^ 0x879E0C70;
  v357 = ((((v353 ^ 0x81134DD2) >> (STACK[0x438] & 0x10 ^ 0x10))
         - ((2 * ((v353 ^ 0x81134DD2) >> (STACK[0x438] & 0x10 ^ 0x10))) & 0x6A8CE376)
         - 1253674565) ^ 0xB54671BB) >> (STACK[0x438] & 0x10);
  v358 = (v357 - ((2 * v357) & 0x8C) + 70);
  v359 = (v358 ^ 0x82486946) + (v358 & 0xBB ^ 0x15B014B9) - ((v358 ^ 0x82486946) & 0x24808BB);
  v360 = ((v359 ^ 0x95B07573)
        - 2 * (((v359 ^ 0x95B07573) + 948153558) & 0x28801D3F ^ (v359 ^ 0x95B07573) & 1)
        + 1695812116) ^ dword_100264D80[((v358 ^ 0x75FF8C95 | 0x5F41F0B1) - (v358 ^ 0x75FF8C95 | 0xA0BE0F4E) - 1598156978) ^ 0x2ABE7C4D];
  HIDWORD(v301) = v360 ^ 0xDFA7;
  LODWORD(v301) = v360 ^ 0xAECE0000;
  v361 = (v301 >> 16) - ((2 * (v301 >> 16)) & 0xEFAE390A) - 136897403;
  v362 = dword_100256DF0[v346 ^ 0x6D];
  HIDWORD(v301) = v362 ^ 0xC6;
  LODWORD(v301) = v362 ^ 0xA1F63700;
  LODWORD(v346) = (v301 >> 8) + 1238622422 + ~((2 * (v301 >> 8)) & 0x93A7C1AA);
  LODWORD(v339) = dword_10025A4F0[v339 ^ 0x87];
  HIDWORD(v301) = v339 ^ 0xB5E83C;
  LODWORD(v301) = v339 ^ 0x79000000;
  v363 = v346 ^ dword_100264D80[v350 ^ 0xED] ^ ((v301 >> 24)
                                                               - ((2 * (v301 >> 24)) & 0xD93D0B02)
                                                               - 325155455) ^ (((2 * (v350 ^ 0xA)) & 0x7C)
                                                                             + (v350 ^ 0x6FEF7E34)
                                                                             + 490432070
                                                                             + ((2
                                                                               * ((((2 * (v350 ^ 0xA)) & 0x7C)
                                                                                 + (v350 ^ 0x6FEF7E34)
                                                                                 + 664) & 0x3AF ^ (v350 ^ 0x6FEF7E34 | 0xFFFFFFFD))) ^ 0x21064805)) ^ (v356 - ((2 * v356) & 0x3735B9F6) - 1684349701) ^ v361;
  LODWORD(v339) = v344 ^ 0x53130CF1 ^ v363;
  LODWORD(STACK[0x580]) = v339;
  LODWORD(v339) = (v337 - ((2 * v337) & 0xC59CFB02) - 489783935) ^ 0x2E44399E ^ v339;
  v364 = v339 ^ v353;
  v365 = v339;
  LODWORD(STACK[0x570]) = v339;
  LODWORD(v339) = dword_1002666E0[(((2 * ((v339 ^ v353) ^ 0x55)) | 0x5A52CAE4)
                                 - ((v339 ^ v353) ^ 0x55)
                                 + 1389795982) ^ 0xAD296591];
  HIDWORD(v301) = v339 ^ 0x164;
  LODWORD(v301) = v339 ^ 0x94CC7A00;
  LODWORD(v339) = (v301 >> 9) - ((2 * (v301 >> 9)) & 0x37F7AA86) - 1677994685;
  v366 = ((BYTE1(v364) ^ 0xE | 0xB89E4E64) - (BYTE1(v364) ^ 0xE | 0x4761B19B) + 1197584795) ^ 0x98944864;
  v367 = dword_10025A4F0[(((2 * v366) | 0xE7B7CC6E) - v366 + 203692489) ^ 0xD3D1E016];
  HIDWORD(v301) = v367 ^ 0xB5E83C;
  LODWORD(v301) = v367 ^ 0x79000000;
  v368 = (v301 >> 24) - ((2 * (v301 >> 24)) & 0x38D8869A) - 1670626483;
  v369 = dword_1002666E0[((HIWORD(v364) & 0x8B ^ 0x188) + (HIWORD(v364) & 0x74 ^ 0x31) - 1) ^ 0x183];
  HIDWORD(v301) = v369 ^ 0x164;
  LODWORD(v301) = v369 ^ 0x94CC7A00;
  v370 = (v301 >> 9) - ((2 * (v301 >> 9)) & 0x961711D8) + 1259047148;
  LODWORD(v346) = ((2 * v370) ^ 0x961711D8) - ((2 * ((2 * v370) ^ 0x961711D8)) & 0x1E0C8EFC) + 1862682495;
  LODWORD(v346) = (v346 & 0x32119686 ^ 0x22108686)
                + (v346 & 0x10600 ^ 0x44CB6851)
                - ((v346 & 0x32119686 ^ 0x22108686) & 0x10600);
  v371 = ((v346 & 0x21D3800 ^ 0x4A843121 | v346 & 0x3002C686) - 1) ^ v370;
  HIDWORD(v301) = v371 ^ 0xC0CE;
  LODWORD(v301) = v371 ^ 0x100000;
  LODWORD(v346) = (v301 >> 16) - ((2 * (v301 >> 16)) & 0x4F5C5B8A) - 1481757243;
  v372 = v364 ^ 0x71C9DB05;
  v373 = dword_10025A4F0[HIBYTE(v364) ^ 0x2B];
  HIDWORD(v301) = v373 ^ 0x3C;
  LODWORD(v301) = v373 ^ 0x79B5E800;
  LODWORD(v339) = v339 ^ ((v301 >> 8) - ((2 * (v301 >> 8)) & 0x8F853ADA) - 943547027) ^ v368 ^ (((2 * v339) ^ 0x37F7AA86)
                                                                                              - ((2
                                                                                                * ((2 * v339) ^ 0x37F7AA86)) & 0x180ECBBC)
                                                                                              + 201811423) & 0x32119686 ^ 0xE33AF76D ^ v346;
  v374 = v339 ^ v344;
  LODWORD(v346) = v365 ^ v339 ^ v344;
  LODWORD(STACK[0x520]) = v372;
  v375 = v372 ^ v346 ^ 0x1DA1A8B4;
  v376 = (((2 * (BYTE2(v375) ^ 0xAA)) & 0x1D0) - (BYTE2(v375) ^ 0xAA) - 13540585) ^ 0xDF5BE63F;
  v377 = (((2 * v376) | 0x6E30AC9C) - v376 - 924341838) ^ 0x1772D332;
  v378 = ((BYTE2(v375) ^ 0x3D) + (HIWORD(v375) & 0xF4 ^ 0xB4B76AC0) - ((BYTE2(v375) ^ 0x3D) & 0xF4)) ^ 0xB4B77AF4;
  v379 = (v377 - ((2 * v377 + 17258924) & 0x3BCDE0E) + 2053250013) ^ dword_100264D80[(((2 * v378) | 0x22F1F880)
                                                                                    - v378
                                                                                    - 293141568) ^ 0x1178EC64];
  HIDWORD(v301) = v379 ^ 0xED9E;
  LODWORD(v301) = v379 ^ 0xC3800000;
  v380 = (v301 >> 16) - ((2 * (v301 >> 16)) & 0xD93DCB9E) + 1822352847;
  v381 = ((2 * (BYTE1(v375) ^ 0xE8)) & 0x174) - (BYTE1(v375) ^ 0xE8) - 1473103291;
  v382 = ((v381 & 0x21873 ^ 0x50C08072) + (v381 ^ 0x20233A85) - ((v381 ^ 0x20233A85) & 0x88010073)) ^ 0x50D29843;
  v383 = dword_10025A4F0[((v372 ^ v346) >> 24) ^ 0x9A];
  HIDWORD(v301) = v383 ^ 0x3C;
  LODWORD(v301) = v383 ^ 0x79B5E800;
  v384 = (v301 >> 8) - ((2 * (v301 >> 8)) & 0x28D974AE) + 342669911;
  v385 = (v382 - ((2 * v382 + 285694380) & 0x128A2368) - 2117550454) ^ dword_100264D80[((BYTE1(v375) ^ 0x124C0106 | 0xDBBD1697)
                                                                                      - (BYTE1(v375) ^ 0x124C0106 | 0x2442E968)
                                                                                      + 608364904) ^ 0xC9F1176E];
  HIDWORD(v301) = v385 ^ 0x1B932D;
  LODWORD(v301) = v385 ^ 0xCB000000;
  LODWORD(v339) = dword_100256DF0[(v372 ^ v346) ^ 0x4C] ^ v339;
  LODWORD(STACK[0x380]) = v363;
  v386 = v384 ^ v339 ^ v363 ^ ((v301 >> 24) - ((2 * (v301 >> 24)) & 0x7BE70440) - 1108114912) ^ v380;
  v387 = v386 ^ v374;
  LODWORD(STACK[0x4D0]) = v386 ^ 0xC458DA69;
  v388 = v386 ^ v374 ^ 0x76850118 ^ v372;
  v389 = (((v388 >> 8) & 0xE1) + ((v388 >> 8) & 0x1E ^ 0x86561605) - 1) ^ 0x8296159A;
  v390 = ((2 * (v388 >> 8)) ^ 0x319BA) - ((2 * ((2 * (v388 >> 8)) ^ 0x319BA)) & 0x1B0) + 728;
  v391 = (((v390 & 0x1AC ^ 0x3200EAC) + (v390 & 0x1A0 ^ 0x844CB103) - ((v390 & 0x1AC ^ 0x3200EAC) & 0x5A0)) ^ 0x876CBA07)
       + (((v389 | 0x237AEBC3) - (v389 | 0xDC85143C) - 595258308) ^ 0x1F39449E);
  v392 = (v391 - ((2 * v391) & 0x528122) - 1071038319) ^ dword_100264D80[BYTE1(v388) ^ 0xF2];
  HIDWORD(v301) = v392 ^ 0x77C208;
  LODWORD(v301) = v392 ^ 0x42000000;
  LODWORD(v339) = dword_1002666E0[HIBYTE(v388) ^ 0x53];
  v393 = (v301 >> 24) - ((2 * (v301 >> 24)) & 0xC5631E66) + 1655803699;
  HIDWORD(v301) = v339 ^ 0x164;
  LODWORD(v301) = v339 ^ 0x94CC7A00;
  LODWORD(v339) = (v301 >> 9) - ((2 * (v301 >> 9)) & 0xC1AEA250) + 1624723752;
  v394 = ((2 * v339) ^ 0xC1AEA250) + 2115632990 - 2 * (((2 * v339) ^ 0xC1AEA250) & 0x1E1A079C ^ (2 * v339) & 0xC) + 2098;
  v395 = ((v394 & 0x30000686 ^ 0x348A0933 | v394 & 0x2119000) - 1) ^ 0x36B82FB6;
  LODWORD(v339) = (v395 - ((2 * v395) & 0x40616D08) - 315572332) ^ v339;
  HIDWORD(v301) = v339 ^ 0x3A;
  LODWORD(v301) = v339 ^ 0xBC415900;
  LODWORD(v339) = (v301 >> 8) - ((2 * (v301 >> 8)) & 0x358DC0E4) + 449241202;
  v396 = ((v387 ^ 0x18 ^ v372 ^ 0x39)
        + (v388 & 0xD4 ^ 0xE9AF2FC4)
        - ((v387 ^ 0x18 ^ v372 ^ 0x39) & 0xD4)) ^ 0xC9BB2C87;
  v397 = v388 ^ 0xFB477B1A;
  v398 = dword_100256DF0[BYTE2(v388) ^ 0x20];
  HIDWORD(v301) = v398 ^ 0x37C6;
  LODWORD(v301) = v398 ^ 0xA1F60000;
  v399 = dword_10025A4F0[((v396 | 0xFB230DB5) - (v396 | 0x4DCF24A) + 81588810) ^ 0xDB370E9F] ^ ((v301 >> 16)
                                                                                              - ((2 * (v301 >> 16)) & 0xDA65BB12)
                                                                                              - 315433591) ^ v386 ^ 0xC458DA69 ^ v393 ^ 0xAD1B3303 ^ v339;
  v400 = v346 ^ 0x246EE62C ^ v387 ^ 0x76850118;
  LODWORD(STACK[0x378]) = v400;
  LODWORD(STACK[0x4B0]) = v387 ^ 0x18ACDBF0;
  v401 = v400 ^ v387 ^ 0x18ACDBF0 ^ v399;
  v402 = v401 ^ v397;
  LODWORD(v339) = ((2 * (v401 ^ v397)) & 0xB8) + ((v401 ^ v397) ^ 0xFFFFFFDC) - 2671708;
  v403 = ((v339 & 0x60901620 ^ 0x28C621) + (v339 & 0x30509DF) + 0x7FFFFFFF) ^ 0xE3BDDD7D;
  v404 = STACK[0x39C];
  if ((v237 & 1) != 0)
    v405 = STACK[0x39C];
  else
    v405 = v294;
  LODWORD(STACK[0x3F8]) = v405;
  if ((v237 & 1) != 0)
    v406 = v294;
  else
    v406 = v295;
  LODWORD(STACK[0x4A0]) = v406;
  v407 = STACK[0x3A0];
  if ((v237 & 1) != 0)
    v404 = STACK[0x3A0];
  LODWORD(STACK[0x498]) = v404;
  v408 = dword_1002666E0[v403];
  if ((v237 & 1) != 0)
    v407 = v295;
  LODWORD(STACK[0x3E0]) = v407;
  HIDWORD(v409) = v408 ^ 0x164;
  LODWORD(v409) = v408 ^ 0x94CC7A00;
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x440]) ^ 0x790F46E8;
  v410 = (v409 >> 9) - ((2 * (v409 >> 9)) & 0xADD60F58) + 1458243500;
  v411 = (((2 * v410) ^ 0xADD60F58) - 2 * (((2 * v410) ^ 0xADD60F58) & 0x9DA8FBE ^ (2 * v410) & 2) + 702189501) & 0x32119686 ^ 0x22008406;
  v412 = dword_1002666E0[((BYTE1(v402) ^ 0x60A388C0) - ((2 * (BYTE1(v402) ^ 0x60A388C0)) & 0x40000046) + 542114339) ^ 0x40F38AD2];
  HIDWORD(v409) = v412 ^ 0x164;
  LODWORD(v409) = v412 ^ 0x94CC7A00;
  v413 = (v409 >> 9) - ((2 * (v409 >> 9)) & 0xA8255094) + 1410508874;
  v414 = ((2 * v413) ^ 0xA8255094) - 2 * (((2 * v413) ^ 0xA8255094) & 0x5C5549E ^ (2 * v413) & 2) + 1170560156;
  v415 = ((v414 & 0x10101282 ^ 0x102010DB) + (v414 & 0x22018404 ^ 0x81810005) - 2) ^ v413;
  HIDWORD(v409) = v415 ^ 0x363B92;
  LODWORD(v409) = v415 ^ 0xC4000000;
  v416 = (v409 >> 24) - ((2 * (v409 >> 24)) & 0x8DB23B96) - 958849589;
  v417 = ((BYTE2(v402) ^ 0x24) + 84203153 + ((2 * (BYTE2(v402) ^ 0x24) + 428) & 0x374 ^ 0xEEFDAFFF)) ^ dword_100264D80[BYTE2(v402) ^ 0xC3];
  HIDWORD(v409) = v417 ^ 0xAB23;
  LODWORD(v409) = v417 ^ 0x4EDF0000;
  v418 = (v409 >> 16) - ((2 * (v409 >> 16)) & 0xD0D69AD8) - 395621012;
  v419 = dword_100256DF0[HIBYTE(v402) ^ 0xF9];
  HIDWORD(v409) = v419 ^ 0xC6;
  LODWORD(v409) = v419 ^ 0xA1F63700;
  v420 = v410 ^ ((v409 >> 8) - ((2 * (v409 >> 8)) & 0xDD090B48) + 1854178724) ^ (((2 * v411) | 0x94B75FCC)
                                                                               - v411
                                                                               - 1247522790) ^ v418 ^ 0x31FC595D ^ v416;
  LODWORD(STACK[0x37C]) = v397;
  v421 = v387 ^ 0x2CC49952 ^ v420 ^ v397;
  v422 = v387 ^ 0x2CC49952 ^ v420;
  v423 = v421 ^ 0xD0E25E58;
  v424 = (BYTE1(v423) ^ 0x87) + ((v423 >> 8) & 0x6F ^ 0x55FC1A68) - ((BYTE1(v423) ^ 0x87) & 0x6F);
  v425 = dword_100256DF0[((v424 & 0x115C0B8E ^ 0x2A00A188) + (v424 ^ 0xD1FD1A26) - ((v424 ^ 0xD1FD1A26) & 0x8000038E)) ^ 0x3F5DAB56];
  HIDWORD(v409) = v425 ^ 0xF637C6;
  LODWORD(v409) = v425 ^ 0xA1000000;
  v426 = (v409 >> 24) - ((2 * (v409 >> 24)) & 0x12DAD50) - 2137598296;
  v427 = ((2 * (BYTE2(v423) ^ 0x8F6EF4C6)) & 0x600093E) - (BYTE2(v423) ^ 0x8F6EF4C6) - 588254368;
  v428 = ((v427 & 0x130101C7 ^ 0xAA2650C0) + (v427 ^ 0x5109070F) - ((v427 ^ 0x5109070F) & 0x1A8951C7)) ^ 0xB927510C;
  v429 = (HIWORD(v423) & 0x79 ^ 0x3E479740) + (HIWORD(v423) & 0x86 ^ 0x85) - 1;
  v430 = (v428 - ((2 * v428 + 17258924) & 0x3893860) - 95926010) ^ dword_100264D80[((v429 & 0xB0B ^ 0x86130902)
                                                                                  + (v429 & 0x4F4 ^ 0x20202465)
                                                                                  - 1) ^ 0xA6332A27];
  v431 = v421 ^ 0x4325780C;
  HIDWORD(v409) = v430 ^ 0x1EA9;
  LODWORD(v409) = v430 ^ 0x439A0000;
  v432 = dword_10025A4F0[HIBYTE(v421) ^ 0x62];
  v433 = (v409 >> 16) - ((2 * (v409 >> 16)) & 0x7E273F48) - 1089232988;
  HIDWORD(v409) = v432 ^ 0x3C;
  LODWORD(v409) = v432 ^ 0x79B5E800;
  v434 = (v409 >> 8) - ((2 * (v409 >> 8)) & 0x8345BEB8) - 1046290596;
  v435 = ((v423 ^ 0x40) - ((2 * v423) & 0x16A) + 166681013) ^ 0x9EF5D15;
  v436 = dword_1002666E0[((v435 | 0x8493D83B) - (v435 | 0x7B6C27C4) + 2070685636) ^ 0x8493DC74];
  HIDWORD(v409) = v436 ^ 0x164;
  LODWORD(v409) = v436 ^ 0x94CC7A00;
  v437 = (v409 >> 9) - ((2 * (v409 >> 9)) & 0x11C804B8) + 149160540;
  v438 = (((2 * v437) ^ 0x11C804B8) - 2 * (((2 * v437) ^ 0x11C804B8) & 0xA9F2F3E ^ (2 * v437) & 6) + 178204472) & 0x32119686 ^ 0x1209362A;
  v439 = v426 ^ v434 ^ v437 ^ v399 ^ v420 ^ v433 ^ 0x61A3064B ^ (((2 * v438) & 0x1201C) - v438 - 1090703631);
  v440 = v439 ^ v401;
  LODWORD(STACK[0x440]) = v439 ^ v401 ^ 0xE056B400;
  v441 = v439 ^ v401 ^ 0xE056B400 ^ v431;
  v442 = ((HIBYTE(v441) ^ 0x69) - 666800576 + ((2 * (HIBYTE(v441) ^ 0x69) + 428) & 0x2D2 ^ 0xCEFCFFFF)) ^ dword_100264D80[HIBYTE(v441) ^ 0x8E];
  HIDWORD(v409) = v442 ^ 0xF0;
  LODWORD(v409) = v442 ^ 0x1DE34300;
  v443 = v409 >> 8;
  v444 = LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x468]);
  v445 = LODWORD(STACK[0x3BC]) ^ v444;
  v446 = STACK[0x4F0];
  v447 = STACK[0x470];
  v448 = LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x4F0]);
  LODWORD(STACK[0x35C]) = v448;
  v449 = LODWORD(STACK[0x3B8]) ^ v448;
  v450 = LODWORD(STACK[0x3B0]) ^ v448;
  v451 = LODWORD(STACK[0x3AC]) ^ v448;
  v452 = LODWORD(STACK[0x3A4]) ^ v444;
  v453 = LODWORD(STACK[0x3C0]) ^ v444;
  LODWORD(STACK[0x36C]) = v445;
  if ((v237 & 1) == 0)
    v445 = v452;
  LODWORD(STACK[0x3C0]) = v445;
  LODWORD(STACK[0x330]) = v453;
  if ((v237 & 1) != 0)
    v454 = v452;
  else
    v454 = v453;
  LODWORD(STACK[0x374]) = v454;
  v455 = LODWORD(STACK[0x3A8]) ^ v448;
  v456 = STACK[0x540];
  if ((v237 & 1) != 0)
    v456 = STACK[0x420];
  LODWORD(STACK[0x3A8]) = v456;
  v457 = STACK[0x44C];
  if ((v237 & 1) == 0)
    v457 = STACK[0x510];
  LODWORD(STACK[0x39C]) = v457;
  v458 = STACK[0x408];
  if ((v237 & 1) != 0)
    v458 = STACK[0x404];
  LODWORD(STACK[0x3A4]) = v458;
  v459 = STACK[0x418];
  if ((v237 & 1) == 0)
    v459 = STACK[0x410];
  LODWORD(STACK[0x3A0]) = v459;
  LODWORD(STACK[0x340]) = v449;
  LODWORD(STACK[0x338]) = v450;
  if ((v237 & 1) != 0)
    v449 = v450;
  LODWORD(STACK[0x3BC]) = v449;
  LODWORD(STACK[0x328]) = v451;
  LODWORD(STACK[0x300]) = v455;
  if ((v237 & 1) == 0)
    v455 = v451;
  LODWORD(STACK[0x3B8]) = v455;
  LODWORD(STACK[0x5C0]) = v237;
  v460 = (v237 & 2) == 0;
  v461 = STACK[0x424];
  v462 = STACK[0x394];
  if ((v237 & 2) != 0)
    v463 = STACK[0x394];
  else
    v463 = STACK[0x424];
  LODWORD(STACK[0x4E0]) = v463;
  if ((v237 & 2) == 0)
    v461 = v462;
  LODWORD(STACK[0x368]) = v461;
  v464 = v443 - ((2 * v443) & 0x47FFCC32) + 603973145;
  v465 = (BYTE2(v441) ^ 0x7D | 0x1F811491) - (BYTE2(v441) ^ 0x7D | 0xE07EEB6E) - 528553106;
  v466 = ((v441 & 0xEC ^ 0x380C4FFB) - (v441 & 0x13)) ^ 0x380C4F55;
  v467 = ((2 * (v441 ^ 0x1E)) & 0x26) - (v441 ^ 0x1E) + 15340;
  v468 = dword_10025A4F0[((v465 & 0xA810143 ^ 0x600D2843) + (v465 ^ 0x1F901718) - ((v465 ^ 0x1F901718) & 0x110143)) ^ 0x6A8C2A51];
  HIDWORD(v469) = v468 ^ 0xE83C;
  LODWORD(v469) = v468 ^ 0x79B50000;
  v470 = dword_100256DF0[(((2 * (BYTE1(v441) ^ 0x40010EC4)) & 0x5E4) - (BYTE1(v441) ^ 0x40010EC4) + 1960668429) ^ 0x34DC6315];
  v471 = (v469 >> 16) - ((2 * (v469 >> 16)) & 0xA651C0A8);
  HIDWORD(v469) = v470 ^ 0xF637C6;
  LODWORD(v469) = v470 ^ 0xA1000000;
  v472 = (v471 - 752295852) ^ dword_100264D80[((v467 & 0x703 ^ 0x2CDA603) + (v467 & 0x8FC ^ 0x8CD) - 1) ^ 0x2CDA574] ^ ((v469 >> 24) - ((2 * (v469 >> 24)) & 0xFAA454E8) - 44946828) ^ (v466 - ((2 * v466 + 1896307116) & 0x51050BDE) + 639517893) ^ v464;
  v473 = v472 ^ v422;
  v474 = v472 ^ v422 ^ 0xEA910A24 ^ v431;
  v475 = dword_1002666E0[HIBYTE(v474) ^ 0x7E];
  HIDWORD(v469) = v475 ^ 0x164;
  LODWORD(v469) = v475 ^ 0x94CC7A00;
  v476 = v472 ^ v422 ^ 0xEA910A24 ^ v440;
  LODWORD(STACK[0x394]) = v476;
  v477 = (v469 >> 9) - ((2 * (v469 >> 9)) & 0x2E1FA1FC) - 1760571138;
  v478 = (((2 * v477) ^ 0x2E1FA1FC) - 2 * (((2 * v477) ^ 0x2E1FA1FC) & 0x183AFF7E ^ (2 * v477) & 2) + 943390589) & 0x32119686 ^ 0x2009402;
  v479 = (((2 * v478) & 0x232008) - v478 - 1295767622) ^ 0xA2CC2CA2;
  v480 = (v479 - ((2 * v479) & 0x20489EF4) + 472141691) ^ v477;
  v481 = (v474 ^ 0xB7)
       + 856067665
       + ((2 * (((v474 ^ 0xB7) + 214) & 0x17B ^ (v474 ^ 0xB7 | 0x7FFFFFFE))) ^ 0x71054003);
  v482 = (((2 * (v474 ^ 0xF3)) | 0x81BC0F38) - (v474 ^ 0xF3) - 1088292764) ^ 0x4A4A1708;
  HIDWORD(v469) = v480 ^ 0x19;
  LODWORD(v469) = v480 ^ 0xA8B70100;
  v483 = (v469 >> 8) - ((2 * (v469 >> 8)) & 0x6E220ED2) + 923862889;
  v484 = dword_1002666E0[((BYTE2(v474) ^ 0x880C026E | 0xCDFA9533) - (BYTE2(v474) ^ 0x880C026E | 0x32056ACC) + 839215820) ^ 0x45F69731];
  HIDWORD(v469) = v484 ^ 0x164;
  LODWORD(v469) = v484 ^ 0x94CC7A00;
  v485 = (v469 >> 9) - ((2 * (v469 >> 9)) & 0xAF34DD9C) + 1469738702;
  v486 = (((2 * v485) ^ 0xAF34DD9C) - ((2 * ((2 * v485) ^ 0xAF34DD9C)) & 0x1FAEFE80) + 802651969) & 0x32119686 ^ v485;
  v487 = v474 ^ 0xD7C240A3;
  LODWORD(STACK[0x350]) = v474 ^ 0xD7C240A3;
  v488 = BYTE1(v474);
  v489 = ((v488 ^ 0x2A) - ((2 * (v488 ^ 0x2A)) & 0x1FC) + 766) ^ 0x2F1;
  HIDWORD(v469) = v486 ^ 0xEF4C;
  LODWORD(v469) = v486 ^ 0x740F0000;
  v490 = (v469 >> 16) - ((2 * (v469 >> 16)) & 0x43F4F276) - 1577420485;
  v491 = (((2 * (v488 ^ 0x7F)) & 0xFFFFFFE3) - (v488 ^ 0x7F) + 1825867278) ^ 0xBEBCE032;
  v492 = (v489 - ((2 * v489 + 1896307116) & 0x48736DC8) + 1555915706) ^ dword_100264D80[((v491 | 0xB33D4374)
                                                                                       - (v491 | 0x4CC2BC8B)
                                                                                       + 1287830667) ^ 0x615525F5];
  HIDWORD(v469) = v492 ^ 0x67347D;
  LODWORD(v469) = v492 ^ 0xA6000000;
  v493 = v490 ^ dword_100264D80[(v482 - ((2 * v482) & 0x97915C2) + 79465185) ^ 0xE289AD6];
  v494 = v472 ^ v439;
  v495 = v493 ^ v472 ^ v439 ^ v481 ^ ((v469 >> 24) - ((2 * (v469 >> 24)) & 0xE883936C) - 197015114) ^ v483;
  v496 = v472 ^ v422 ^ 0x442369EF ^ v495;
  LODWORD(STACK[0x3B0]) = v496;
  v497 = v496 ^ v476;
  v498 = v496 ^ v476 ^ 0x2550FE62;
  v499 = (((v496 ^ v476) ^ 0x62 ^ v487 ^ 0xD1 | 0x79605CDE)
        - ((v496 ^ v476) ^ 0x62 ^ v487 ^ 0xD1 | 0x869FA321)
        - 2036358367) ^ 0xBB6818DC;
  v500 = dword_10025A4F0[((((unsigned __int16)(v496 ^ v476 ^ 0xFE62 ^ v487) >> 8) ^ 0x3C)
                        + (((v498 ^ v487) >> 8) & 0x55 ^ 0x941)
                        - ((((unsigned __int16)(v496 ^ v476 ^ 0xFE62 ^ v487) >> 8) ^ 0x3C) & 0x55555555)) ^ 0x933];
  HIDWORD(v469) = v500 ^ 0xB5E83C;
  LODWORD(v469) = v500 ^ 0x79000000;
  v501 = (v469 >> 24) - ((2 * (v469 >> 24)) & 0xFDF3E32C) + 2130309526;
  v502 = v498 ^ v487 ^ 0x2B1A80F6;
  v503 = ((v498 ^ v487) >> 16) ^ 0xBB;
  v504 = dword_10025A4F0[((v498 ^ v487) >> 24) ^ 0x25];
  HIDWORD(v469) = v504 ^ 0x3C;
  LODWORD(v469) = v504 ^ 0x79B5E800;
  v505 = dword_10025A4F0[(((2 * v499) & 0x8C793438) - v499 - 1178376733) ^ 0x7BCB21D8] ^ ((v469 >> 8)
                                                                                        - ((2 * (v469 >> 8)) & 0xD23B5E9E)
                                                                                        - 383930545);
  v506 = dword_1002666E0[(((2 * v503) & 0xFFFFFFDF) - v503 + 821021968) ^ 0x30EFCDF7];
  HIDWORD(v469) = v506 ^ 0x164;
  LODWORD(v469) = v506 ^ 0x94CC7A00;
  v507 = (v469 >> 9) - ((2 * (v469 >> 9)) & 0xB0912DFC) - 666331394;
  v508 = ((2 * v507) ^ 0xB0912DFC) - ((2 * ((2 * v507) ^ 0xB0912DFC)) & 0x268D6C94) + 1397143114;
  v509 = ((v508 & 0x32119686 ^ 0x2019680)
        + (v508 & 0x20119604 ^ 0x2D94005C)
        - ((v508 & 0x32119686 ^ 0x2019680) & 0x20119604)) ^ 0xBC9D9ED6;
  v510 = (((2 * v509) & 0x208FC554) - v509 + 1673010260) ^ v507;
  HIDWORD(v469) = v510 ^ 0x1520;
  LODWORD(v469) = v510 ^ 0x3B7D0000;
  v511 = v501 ^ v505 ^ ((v469 >> 16) - ((2 * (v469 >> 16)) & 0xC8E40970) + 1685193912);
  v512 = v511 ^ v495 ^ 0xFE941E97;
  v513 = v511 ^ v473 ^ 0x816D895F;
  v514 = v513 ^ v497 ^ 0x2B990279;
  LODWORD(STACK[0x320]) = v513;
  LODWORD(STACK[0x348]) = v514;
  v515 = v502 ^ v514;
  v516 = dword_1002666E0[(((2 * ((v498 ^ v487) ^ 0xF6 ^ v514 ^ 0x1028523F)) & 0x5020AA)
                        - ((v498 ^ v487) ^ 0xF6 ^ v514 ^ 0x1028523F)
                        - 1210921046) ^ 0xA7FA9D06];
  HIDWORD(v469) = v516 ^ 0x164;
  LODWORD(v469) = v516 ^ 0x94CC7A00;
  v517 = (v469 >> 9) - ((2 * (v469 >> 9)) & 0xE74E72AA) + 1940339029;
  v518 = dword_10025A4F0[((v502 ^ v514) >> 24) ^ 0x98];
  v519 = (((2 * v517) ^ 0xE74E72AA) - ((2 * ((2 * v517) ^ 0xE74E72AA)) & 0x1E1E9360) + 789531057) & 0x32119686 ^ 0x32019604;
  HIDWORD(v469) = v518 ^ 0x3C;
  LODWORD(v469) = v518 ^ 0x79B5E800;
  v520 = dword_100256DF0[((((v502 ^ v514) >> 8) & 0x2B)
                        - 1004395777
                        + (((v502 ^ v514) >> 8) & 0xD4 ^ 0x8000011)) ^ 0xCC22232D];
  v521 = (v469 >> 8) - ((2 * (v469 >> 8)) & 0xAA2002FE);
  HIDWORD(v469) = v520 ^ 0xF637C6;
  LODWORD(v469) = v520 ^ 0xA1000000;
  v522 = (v469 >> 24) - ((2 * (v469 >> 24)) & 0x3B0B2348) + 495292836;
  v523 = ((BYTE2(v515) ^ 0xA5 | 0x205332F8) - (BYTE2(v515) ^ 0xA5 | 0xDFACCD07) - 542323449) ^ 0xE8F178A5;
  v524 = v515 ^ 0xD83756C7;
  LODWORD(STACK[0x310]) = v515 ^ 0xD83756C7;
  v525 = ((BYTE2(v515) ^ 0x810106A3) + (HIWORD(v515) & 0x3E ^ 0x3AEA291C) - ((BYTE2(v515) ^ 0x810106A3) & 0x8000003E)) ^ 0x3BEB2FF6;
  v526 = (v525 - ((2 * v525 + 17258924) & 0xBF2F642) - 1099094025) ^ dword_100264D80[(((2 * v523) & 0xB7869506)
                                                                                    - v523
                                                                                    + 607958396) ^ 0xEC9EFF08];
  HIDWORD(v469) = v526 ^ 0xF9B8;
  LODWORD(v469) = v526 ^ 0x7A70000;
  v527 = v517 ^ (v521 - 720371329) ^ v522 ^ v512 ^ ((v469 >> 16) - ((2 * (v469 >> 16)) & 0xA0317160) + 1343797424) ^ 0xCFE79535 ^ ((((v519 | 0x635E5CD8) - (v519 | 0x9CA1A327) - 1667128537) & 0xE228F80E ^ 0xC8286102) + (((v519 | 0x635E5CD8) - (v519 | 0x9CA1A327) - 1667128537) ^ 0x22D6989C) - ((((v519 | 0x635E5CD8) - (v519 | 0x9CA1A327) - 1667128537) ^ 0x22D6989C) & 0xE2A8F806));
  v528 = LODWORD(STACK[0x500]) ^ 0x931BCBAC;
  LODWORD(STACK[0x2A4]) = v528;
  HIDWORD(v469) = STACK[0x5B0];
  LODWORD(v469) = v528;
  v529 = v469 >> 1;
  HIDWORD(v469) = v495 ^ ~LODWORD(STACK[0x464]);
  LODWORD(v469) = v495 ^ LODWORD(STACK[0x464]) ^ 0x4FF3F83C;
  v530 = ((v469 >> 1) - ((2 * (v469 >> 1)) & 0x961F9B00) - 888156800) ^ (v529 - 1621661199 + (~(2 * v529) | 0xC1512C1F));
  HIDWORD(v469) = v530 ^ 0x5458A470;
  LODWORD(v469) = v530;
  v531 = (v469 >> 31) - ((2 * (v469 >> 31)) & 0xF82D0F68) - 65632332;
  HIDWORD(v469) = v447 ^ 0x70;
  LODWORD(v469) = v447 ^ 0x2BC54C00;
  v532 = (v469 >> 8) - ((2 * (v469 >> 8)) & 0xC509958A) + 1652869829;
  v533 = v513 ^ 0xFBDD246D ^ v527;
  LODWORD(STACK[0x318]) = v527;
  v534 = STACK[0x428];
  v535 = 2 * ((v533 & STACK[0x428]) - ((2 * (v533 & STACK[0x428])) & 0xB8954D6)) - 1953934122;
  HIDWORD(v469) = v512 ^ v446 ^ 0x76;
  LODWORD(v469) = v512 ^ v446 ^ 0x24BBA00;
  v536 = ((v469 >> 8) - ((2 * (v469 >> 8)) & 0xCE2C94B8) + 1729514076) ^ v532;
  HIDWORD(v469) = v536 ^ 0xBE4C5;
  LODWORD(v469) = v536 ^ 0x88000000;
  LODWORD(STACK[0x2A0]) = (v469 >> 24) - ((2 * (v469 >> 24)) & 0x2206E8D4) + 285439082;
  v537 = ((2 * (v533 + v534)) & 0xE7BF1DAE)
       + ((v533 + v534) ^ 0xF3DF8ED7)
       + (v535 ^ 0x13998CD5)
       + ((2 * v535) & 0xCFDE4FF8 ^ 0xF8EDF657);
  LODWORD(STACK[0x5B0]) = v537 - ((2 * v537 + 1746874958) & 0x413ABF3C) + 346880197;
  v538 = (&unk_10027E3C0 ^ 0x5F959FFF) - 1603641343 + (STACK[0x430] & 0xBF2B3FE0);
  v539 = STACK[0x384];
  v540 = v497 ^ LODWORD(STACK[0x384]) ^ v527;
  v541 = STACK[0x3B4];
  v542 = LODWORD(STACK[0x3B4]) ^ v422 ^ v439;
  v543 = v540 ^ v524;
  v544 = (v538 ^ 0x60E8F7FF) + ((2 * v538) & 0xC1D1EFFE) - 1625880575 + (v540 ^ v524 ^ v542 ^ 0x147B103);
  v545 = ((2 * v544) & 0xDAFF7776)
       + (v544 ^ 0xED7FBBBB)
       - ((2 * (((2 * v544) & 0xDAFF7776) + (v544 ^ 0xED7FBBBB)) - 1072771634) & 0xDBB4850A)
       - 840849044;
  v546 = (&unk_10027E3C0 ^ 0xFF96CFC7) + 6893625 + (STACK[0x430] & 0xFF2D9F80);
  v547 = ((2 * (v543 ^ v542 ^ 0x45548C90)) & 0xEFEFD938 ^ 0x88265920) + (v543 ^ v542 ^ 0xF6B05D9F);
  v548 = (&unk_10027E3C0 ^ 0xDD6BF5F0) + 580127248 + (STACK[0x430] & 0xBAD7EBE0);
  v549 = ((2 * v546) & 0xDFDD777A) + (v546 ^ 0x6FEEBBBD) + v547;
  v550 = v549 - ((2 * v549 + 1262548114) & 0x41339DA0) - 2043000551;
  v551 = v439 ^ v541;
  v552 = v550 ^ 0x2099CED0;
  v553 = (v439 ^ LODWORD(STACK[0x3B4]) ^ 0x53BACB10 ^ v550) + (v550 ^ 0x2099CED0) + 1;
  v554 = ((2 * v548) & 0xFFD9BCDE) + (v548 ^ 0x7FECDE6F) + v547;
  LODWORD(STACK[0x2F8]) = (2 * v554 + 189050670) & 0x18AE1F0A;
  LODWORD(STACK[0x29C]) = v554 + 1643734812;
  LODWORD(STACK[0x298]) = (v439 ^ v541 ^ ((v439 ^ v541 ^ 0x732305C0)
                                        - ((2 * (v439 ^ v541 ^ 0x732305C0) + 2) & 0x7CAC1C36)
                                        + 1045827100) ^ 0x8927C6FE ^ (v553 - ((2 * v553) & 0x775A65B4) + 1001206490))
                        + v552;
  LODWORD(STACK[0x2D8]) = LODWORD(STACK[0x580]) ^ 0x2478D38C;
  v555 = v545 ^ v439 ^ v541;
  v556 = LODWORD(STACK[0x520]) ^ 0xAB95E919 ^ LODWORD(STACK[0x680]);
  v557 = LODWORD(STACK[0x570]) ^ 0x5B4F7FCE ^ LODWORD(STACK[0x680]);
  v558 = STACK[0x670];
  if (v460)
    v558 = STACK[0x678];
  LODWORD(STACK[0x428]) = v558;
  v559 = STACK[0x3EC];
  if (v460)
    v559 = STACK[0x3F0];
  LODWORD(STACK[0x430]) = v559;
  v560 = STACK[0x5E0];
  if (v460)
    v560 = STACK[0x5A0];
  LODWORD(STACK[0x364]) = v560;
  v561 = STACK[0x3E8];
  if (v460)
    v561 = STACK[0x3E4];
  LODWORD(STACK[0x360]) = v561;
  if (v460)
    v562 = STACK[0x39C];
  else
    v562 = STACK[0x3A8];
  v563 = STACK[0x550];
  if (v460)
    v563 = STACK[0x590];
  LODWORD(STACK[0x438]) = v563;
  v564 = STACK[0x3DC];
  if (v460)
    v564 = STACK[0x3D8];
  LODWORD(STACK[0x308]) = v564;
  if (v460)
    v565 = STACK[0x530];
  else
    v565 = STACK[0x4C0];
  if (v460)
    v566 = STACK[0x3A0];
  else
    v566 = STACK[0x3A4];
  if (v460)
    v567 = STACK[0x3D4];
  else
    v567 = STACK[0x3C8];
  if (v460)
    v568 = STACK[0x5D0];
  else
    v568 = STACK[0x5F0];
  if (v460)
    v569 = STACK[0x668];
  else
    v569 = STACK[0x660];
  v570 = STACK[0x3BC];
  if (!v460)
    v570 = STACK[0x3B8];
  LODWORD(STACK[0x370]) = v570;
  if (v460)
    v571 = STACK[0x3E0];
  else
    v571 = STACK[0x3F8];
  v572 = STACK[0x4A0];
  if (!v460)
    v572 = STACK[0x498];
  LODWORD(STACK[0x388]) = v572;
  if ((v555 & 1) == 0)
    v556 = v557;
  LODWORD(STACK[0x294]) = v556;
  LODWORD(STACK[0x520]) = LODWORD(STACK[0x378]) ^ 0xA2C76354;
  v573 = STACK[0x3C4];
  v574 = LODWORD(STACK[0x4B0]) ^ 0x28B79191 ^ LODWORD(STACK[0x3C4]);
  if ((v555 & 1) == 0)
    v574 = LODWORD(STACK[0x4D0]) ^ 0xDC0E7E3F ^ LODWORD(STACK[0x3C4]);
  LODWORD(STACK[0x2F0]) = v574;
  LODWORD(STACK[0x3AC]) = v541 ^ 0x6D436511 ^ v441;
  v575 = v541 ^ 0xE2EF9B8 ^ LODWORD(STACK[0x440]);
  v576 = v542 ^ 0x9BDCCA92;
  v577 = v444 ^ 0xB25D66B0 ^ v494;
  v578 = v444 ^ 0xBB586F7B ^ LODWORD(STACK[0x350]);
  v579 = v444 ^ 0xE566B955 ^ v473;
  LODWORD(STACK[0x2E8]) = LODWORD(STACK[0x560]) ^ v444;
  v580 = v444 ^ 0x2D68EBBE ^ LODWORD(STACK[0x394]);
  v581 = v541 ^ 0xB790973E ^ v502;
  v582 = v531 ^ 0xEEF5CB57;
  v583 = v541 ^ 0x6776BA14 ^ v498;
  v584 = v541 ^ 0x2FEA6D6F ^ LODWORD(STACK[0x3B0]);
  if ((v555 & 1) != 0)
    v585 = v577;
  else
    v585 = v578;
  LODWORD(STACK[0x394]) = v585;
  if ((v555 & 1) != 0)
    v577 = v579;
  LODWORD(STACK[0x3B4]) = v577;
  if ((v555 & 1) != 0)
    v586 = v580;
  else
    v586 = v579;
  if ((v555 & 1) != 0)
    v587 = v578;
  else
    v587 = v580;
  LODWORD(STACK[0x3B0]) = v587;
  v588 = LODWORD(STACK[0x35C]) ^ 0x43C5C663 ^ LODWORD(STACK[0x348]);
  v589 = STACK[0x35C];
  v590 = LODWORD(STACK[0x35C]) ^ 0xD7E608F8 ^ LODWORD(STACK[0x310]);
  v591 = v543 ^ 0x196E19D8;
  if ((v555 & 1) != 0)
    v592 = v540 ^ 0x1BFADEDE;
  else
    v592 = LODWORD(STACK[0x398]) ^ 0xE74E7409 ^ LODWORD(STACK[0x5B0]);
  if ((v555 & 1) != 0)
    v593 = v591;
  else
    v593 = v540 ^ 0x1BFADEDE;
  if ((v555 & 1) != 0)
    v594 = LODWORD(STACK[0x398]) ^ 0xE74E7409 ^ LODWORD(STACK[0x5B0]);
  else
    v594 = v539 ^ 0xA25895CA ^ LODWORD(STACK[0x318]);
  if ((v555 & 1) != 0)
    v595 = v539 ^ 0xA25895CA ^ LODWORD(STACK[0x318]);
  else
    v595 = v591;
  LODWORD(STACK[0x2A8]) = v551;
  v596 = v551 ^ 0x415F882F;
  LODWORD(STACK[0x28C]) = v575;
  if ((v555 & 1) != 0)
    v597 = v575;
  else
    v597 = v576;
  LODWORD(STACK[0x570]) = v597;
  LODWORD(STACK[0x290]) = v596;
  if ((v555 & 1) != 0)
    v598 = v576;
  else
    v598 = v596;
  LODWORD(STACK[0x264]) = v598;
  if ((v555 & 1) != 0)
    v599 = v582;
  else
    v599 = v581;
  LODWORD(STACK[0x5B0]) = v599;
  LODWORD(STACK[0x284]) = v584;
  if ((v555 & 1) != 0)
    v600 = v584;
  else
    v600 = v582;
  LODWORD(STACK[0x288]) = v583;
  if ((v555 & 1) != 0)
    v601 = v581;
  else
    v601 = v583;
  LODWORD(STACK[0x27C]) = v588;
  LODWORD(STACK[0x268]) = v590;
  if ((v555 & 1) != 0)
    v602 = v590;
  else
    v602 = v588;
  LODWORD(STACK[0x398]) = v602;
  LODWORD(STACK[0x580]) = v555;
  if ((v555 & 2) != 0)
    v603 = v600;
  else
    v603 = v601;
  LODWORD(STACK[0x2E0]) = v603;
  if ((v555 & 2) != 0)
    v600 = v601;
  LODWORD(STACK[0x2D0]) = v600;
  LODWORD(STACK[0x260]) = v589 ^ 0xD1FE8F0E ^ LODWORD(STACK[0x320]);
  LODWORD(STACK[0x25C]) = LODWORD(STACK[0x2A0]) ^ 0x9FA3CDC5;
  LODWORD(STACK[0x384]) = v571;
  LODWORD(STACK[0x4D0]) = v567;
  LODWORD(STACK[0x320]) = v567 ^ 0x5888C774;
  LODWORD(STACK[0x440]) = v562;
  LODWORD(STACK[0x35C]) = v562 ^ 0xF21BEF8;
  v604 = (((v571 ^ 0x6A587993) - ((2 * (v571 ^ 0x6A587993) - 1059470582) & 0x92E897DE) + 702623092) ^ 0xDDD1284F)
       + (v562 ^ 0xF21BEF8);
  LODWORD(STACK[0x378]) = v565;
  v605 = ((v604 - ((2 * v604) & 0x75166D24) - 1165281646) ^ 0x61E90884) + (v568 ^ 0x5888C774);
  LODWORD(STACK[0x424]) = v566;
  LODWORD(STACK[0x310]) = v569;
  v606 = (v605 ^ 0x3DFFB079) - 1040167033 + ((2 * v605) & 0x7BFF60F2);
  LODWORD(STACK[0x318]) = v568;
  v607 = (LODWORD(STACK[0x4E0]) ^ 0x32CAF966)
       + (v568 ^ 0xCE51389F ^ ((v567 ^ 0x5888C774) - ((2 * (v567 ^ 0x5888C774) + 937308564) & 0x2DB3FFD6) - 1295443787))
       + 1;
  v608 = 2 * (((2 * v607) & 0x1953FE46) + (v607 ^ 0x4CA9FF23)) + 1722548666;
  v609 = ((2 * v608) & 0x68FCE74C)
       + (v608 ^ 0xB47E73A6)
       - ((2 * (((2 * v608) & 0x68FCE74C) + (v608 ^ 0xB47E73A6)) + 415267768) & 0x5F2653A0)
       + 2079549357;
  v610 = ((v569 ^ v566 ^ ((v565 ^ 0x91A4AC7D) - ((2 * (v565 ^ 0x91A4AC7D) + 99801830) & 0x8CA74958) - 917695969)) >> 1) ^ 0x3D3A9FD7;
  v611 = v610 - ((2 * v610 + 1015697154) & 0x9E658A3A) - 310907746;
  v612 = STACK[0xB38];
  v613 = ((v606 >> 1) ^ 0xEFFBFFDE)
       + (v606 & 0xDFF7FFBC)
       - ((2 * (((v606 >> 1) ^ 0xEFFBFFDE) + (v606 & 0xDFF7FFBC)) + 259683322) & 0xB9AC080)
       + 1569364541;
  v614 = *(_QWORD *)(STACK[0xB38]
                   + 8
                   * ((*(_QWORD *)(STACK[0xB38]
                                 + 8 * (*(_QWORD *)(STACK[0xB38] + 8 * ((*(_DWORD *)STACK[0xB38] & 1) == 0)) & 1)) & 1) == 0)) & 1;
  v615 = ((~(2 * v614) + v614 + 1587757938) ^ 0x457EFD8C)
       - 1756399428
       + ((2 * (~(2 * v614) + v614 + 1587757938)) & 0x350204FA ^ 0x350204E2);
  v616 = LODWORD(STACK[0x688]) + 760;
  v617 = STACK[0x298];
  LODWORD(STACK[0x2A0]) = (2 * LODWORD(STACK[0x298])) & 0xB9884242;
  LODWORD(STACK[0x26C]) = v617 - 591126239;
  LODWORD(STACK[0x254]) = LODWORD(STACK[0x2D8]) ^ LODWORD(STACK[0x680]);
  LODWORD(STACK[0x258]) = LODWORD(STACK[0x520]) ^ v573;
  LODWORD(STACK[0x4B0]) = v609;
  LODWORD(STACK[0x560]) = v611;
  LODWORD(STACK[0x520]) = v613;
  LODWORD(STACK[0x280]) = v586;
  v618 = STACK[0x394];
  if ((v555 & 2) != 0)
    v618 = v586;
  LODWORD(STACK[0x2D8]) = v618;
  LODWORD(STACK[0x688]) = v592;
  LODWORD(STACK[0x270]) = v595;
  if ((v555 & 2) != 0)
    v619 = v592;
  else
    v619 = v595;
  LODWORD(STACK[0x348]) = v619;
  LODWORD(STACK[0x278]) = v593;
  LODWORD(STACK[0x274]) = v594;
  if ((v555 & 2) != 0)
    v620 = v594;
  else
    v620 = v593;
  LODWORD(STACK[0x350]) = v620;
  *(_QWORD *)(STACK[0xB50] + 8 * ((v616 - 58) - 1300)) = *(_QWORD *)(v612
                                                                                   + 8
                                                                                   * ((v616 - 58) - 1300)) ^ 0x9696969696969696;
  v621 = v615 > 0xB32D37BA;
  if (v615 < 0xB32D37B9)
    v621 = 1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((226 * !v621) ^ v616)) - 12))();
}

uint64_t sub_10015023C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((395 * (STACK[0x880] != 0)) ^ v0))
                            - ((((v0 + 343) | 0xA1u) - 783) ^ (v0 - 283))))();
}

uint64_t sub_100150280()
{
  unsigned int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x718];
  STACK[0xB28] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((1340 * (v3 != 0)) ^ v0)) - (v0 ^ 0x19ELL)))();
}

uint64_t sub_1001502B8()
{
  unint64_t v0;
  unsigned __int8 *v1;
  unint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  BOOL v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  __int16 v31;
  __int16 v32;
  __int16 v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unint64_t v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unint64_t v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  char v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  char v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  unsigned int v202;
  int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  unsigned int v234;
  int v235;
  int v236;
  unsigned int v237;
  int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  unint64_t v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  int v287;
  unsigned int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  int v330;
  unsigned int v331;
  int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  int v351;
  int v352;
  int v353;
  unsigned int v354;
  int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  unint64_t v367;
  _BYTE *v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  int v377;
  int v378;
  unsigned int v379;
  unint64_t v380;
  unint64_t v381;
  unsigned int v382;

  v3 = v1[9];
  STACK[0x688] = v2;
  v4 = byte_100263DF0[v3 ^ 0xF3];
  v5 = ((v0 - 118) ^ (32 * v4)) - 118;
  LOBYTE(v3) = (v5 & 0x40 ^ 0xFD) + 2 * (v5 & 0x40);
  v6 = v3 + 8;
  STACK[0x680] = v0;
  v7 = (v3 + 3) & (v4 ^ 0x80);
  v8 = 2 - v3;
  if ((v7 & 0xC0) != 0)
    v9 = v8;
  else
    v9 = v6;
  v10 = byte_10025C750[v1[3] ^ 0xAELL];
  STACK[0x678] = v10;
  v11 = *v1;
  HIDWORD(v12) = v11 ^ 1;
  LODWORD(v12) = ((v11 ^ 0x99) - 1467118160 - ((2 * (v11 ^ 0x99)) & 0x166) + 3) ^ 0xA88D8DB0;
  v13 = (v12 >> 2) - ((2 * (v12 >> 2)) & 0x92261702);
  v14 = (((2 * v11) ^ 0x32) - ((2 * ((2 * v11) ^ 0x32)) & 0xF7) + 26) & 0x2E;
  LOBYTE(v11) = (v11 ^ 0xE) + (v14 ^ 0x75) + ((2 * v14) ^ 0x14) - 127;
  HIDWORD(v12) = (v13 - 1995240575) ^ 0x227406B5;
  LODWORD(v12) = -1225984898 - v13;
  v15 = byte_100263AF0[((v12 >> 30) - ((2 * (v12 >> 30)) & 0x338F3360) - 1714972240) ^ 0x345BAD85] ^ (v11 - ((2 * v11) & 0xE0) - 16) ^ 0xBF;
  v16 = (((v15 - ((2 * v15) & 0x88888888)) << 24) + 1140850688) ^ 0x44000000;
  LODWORD(v10) = (v16 - ((2 * v16) & 0x6E000000) - 1220448350) ^ 0xB7416FA2 | ((v10 ^ 0x37)
                                                                             - ((2 * (v10 ^ 0x37)) & 0x74)
                                                                             + 2015234618) ^ 0x781E0A3A;
  v17 = byte_10027CC90[v1[2] ^ 0x4CLL];
  v18 = ((~(82 * v17 + 22) | 0xBB) + 105 * v17 + 46) ^ 0x3B;
  v19 = (((v18 + 12557982 - ((2 * v18) & 0xC)) << 8) + 223232) ^ 0xBFA20600;
  v20 = byte_100263DF0[v1[1] ^ 0xA5];
  v21 = (((32 * v20) ^ 0x20) - ((2 * ((32 * v20) ^ 0x20)) & 0x40) - 77) ^ v20;
  v22 = ((((((((32 * v20) ^ 0x20) - ((2 * ((32 * v20) ^ 0x20)) & 0x40) - 77) ^ v20) ^ 0x66)
         - ((2 * (v21 ^ 0x66)) & 0x4E)) << 16)
       - 1356398592) ^ 0xAF270000;
  LODWORD(v10) = (v10 - ((2 * v10) & 0xD51ACBBC) - 359832098) ^ 0xEA8D65DE | (v19 - ((2 * v19) & 0x720E4600) + 2030511009) ^ 0x790723A1;
  LODWORD(v10) = (v10 - ((2 * v10) & 0xD6B3FA8E) + 1801059655) ^ 0x6B59FD47 | (v22 - ((2 * v22) & 0x37780000) + 465323134) ^ 0x1BBC447E;
  v23 = v10 - ((2 * v10) & 0x1193B3CA) + 147446245;
  LODWORD(v10) = ((BYTE1(v23) ^ 0xF9 | 0x32DEDC47) - (BYTE1(v23) ^ 0xF9 | 0xCD2123B8) - 853466184) ^ 0x2DEDC6F;
  v24 = v10 - ((2 * v10) & 0xD631344) - 961443422;
  v25 = (v24 & 0xFFFFF7FF ^ 0x19060CCB)
      + (v24 & 0xFFFFF7FF ^ 0x7620A984)
      + ((2 * v24) & 0xFEDDAFB8 ^ 0x13BEECF7)
      + ((2 * v24) & 0xDF6F0AD8 ^ 0xCD630248);
  v26 = ((v25 - 1883809166) & 0xCC591789) == ((2 * (v25 - 1883809166)) & 0x90B00C02);
  v27 = ((v4 ^ 0x99) + v9 - 5 - ((2 * ((v4 ^ 0x99) + v9 - 5)) & 0x48) - 92) ^ v5 & 0xA0;
  LOWORD(v22) = byte_10027CC90[v1[10] ^ 0xCCLL];
  LOWORD(v22) = (105 * v22 - ((82 * (_BYTE)v22 + 22) & 0x78) - 57) ^ 0x85;
  LOWORD(v22) = (((v22 - ((2 * (_WORD)v22) & 0x1A2)) << 8) - 12032) ^ 0xD100;
  LOWORD(v10) = (v22 - ((2 * v22) & 0x600) - 31802) ^ 0x83C6;
  v28 = byte_10025C750[v1[7] ^ 0x56];
  v29 = byte_10025C750[v1[15] ^ 0x2BLL];
  v30 = byte_10025C750[v1[11] ^ 0xA1] ^ 0x37;
  v31 = (v30 + 1056 - ((2 * v30) & 0x122) + 2673) ^ 0xE91;
  v32 = (v10 - ((2 * v10) & 0x1E60) + 3888) ^ 0xF30 | (v31 - ((2 * v31) & 8) + 14340) ^ 0x3804;
  v33 = v32 - ((2 * v32) & 0xFB42) - 607;
  LODWORD(v10) = byte_10027CC90[v1[14] ^ 0x8BLL];
  LODWORD(v10) = (105 * v10 - ((22 - 46 * v10) & 0xF2) + 4) ^ 0x7D;
  LODWORD(v10) = (((v10 - ((2 * (_DWORD)v10) & 0x62)) << 8) + 180105472) ^ 0xABC3100;
  LODWORD(v10) = (v10 - ((2 * v10) & 0x21353000) - 1868916644) ^ 0x909A985C | ((v29 ^ 0x37)
                                                                             - ((2 * (v29 ^ 0x37)) & 0x1E8)
                                                                             + 981718004) ^ 0x3A83D3F4;
  v34 = ((v1[12] ^ 0x49) - ((2 * (v1[12] ^ 0x49) + 46) & 0x3CC) + 125) ^ byte_100263AF0[v1[12] ^ 0xAELL];
  v35 = ((((v34 ^ 0x98) - ((2 * (v34 ^ 0x98)) & 0x6E)) << 24) + 922746880) ^ 0x37000000;
  v36 = byte_100263DF0[v1[13] ^ 0x2FLL];
  v37 = ((2 * v36) ^ 0xFFFFFFBA) - ((2 * ((2 * v36) ^ 0xFFFFFFBA)) & 0xFFFFFFA4) + 82;
  v38 = ((2 * ((v36 ^ 0xFFFFFFDD) + 68)) & 0xFFFFFFAA) + (((v36 ^ 0xFFFFFFDD) + 68) ^ 0xFFFFFFD5);
  v39 = ((v37 & 0xFFFFFF88 | (16 * ((v37 >> 3) & 1))) ^ 0xFFFFFF91) + v38;
  v40 = (-126 - 32 * v38) ^ 0xBF ^ (v39 - ((2 * v39 + 52) & 0xCE) + 1);
  v41 = (((v40 - ((2 * v40) & 0xD6)) << 16) - 1586823168) ^ 0xA16B0000;
  v42 = (v41 - ((2 * v41) & 0x2B240000) + 361945438) ^ 0x1592D95E | (v35 - ((2 * v35) & 0x68000000) + 879746769) ^ 0x346FDED1;
  LODWORD(v10) = (v42 - ((2 * v42) & 0xC931A8BA) + 1687737437) ^ 0x6498D45D | (v10
                                                                             - ((2 * v10) & 0x36192318)
                                                                             + 1527550348) ^ 0x5B0C918C;
  v43 = v10 - ((2 * v10) & 0x2A1F17CE) + 353340391;
  v44 = ((((v43 ^ 0x75873C28) >> (((v33 & 0x10 ^ 0x12) + 101) & 0x10))
        - ((2 * ((v43 ^ 0x75873C28) >> (((v33 & 0x10 ^ 0x12) + 101) & 0x10))) & 0x3E75877A)
        + 523944893) ^ 0x1F3AC3BD) >> (((v33 & 0x10 ^ 0x12) + 101) ^ 0x77);
  v45 = (v44 - ((2 * v44) & 0x6A) - 75) ^ 0xAE;
  v46 = (((2 * v45) & 0x1B6) - v45 - 1972460764) ^ 0x8E26AA2D;
  v47 = dword_100255640[(((2 * v46) | 0x4F8B4DEE) - v46 - 667264759) ^ 0x238DAFFD];
  v48 = v25 + 1066026114;
  v49 = 538677150 - v25;
  if (v26)
    v49 = v48;
  v50 = dword_1002595B0[v28 ^ 0xCA];
  HIDWORD(v51) = v50 ^ 0xFFFFFF8F;
  LODWORD(v51) = v50 ^ 0xF6C24D00;
  v52 = dword_10027C600[(byte_100263AF0[v1[8] ^ 4] ^ ((v1[8] ^ 0xE3)
                                                                       - ((2 * (v1[8] ^ 0xE3) + 46) & 0xD4)
                                                                       + 1)) ^ 0xB3] ^ v47 ^ (((32 * v47) ^ 0xD0C62000)
                                                                                            - ((2
                                                                                              * ((32 * v47) ^ 0xD0C62000)) & 0x8114C680)
                                                                                            + 1082811207) ^ dword_10025AE10[v24 ^ 0xE6DAE5E9 ^ (v49 - ((2 * v49 + 957111026) & 0xB864F76E) - 122115792)] ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0x9D036CDA) + 1317123693);
  v53 = v24 ^ v52;
  v54 = (((v24 ^ v52) ^ 0xFF9E9E71) + 6382001 + ((2 * (v24 ^ v52 ^ 0x73836A78)) & 0x9E ^ 0x8C)) % 0x62;
  v55 = (v28 ^ 0x37) - ((2 * (v28 ^ 0x37)) & 0xBBBBBBBB);
  v56 = byte_100263AF0[v1[4] ^ 0x5BLL] ^ 0x6B ^ ((v1[4] ^ 0xBC)
                                                                - ((2 * (v1[4] ^ 0xBC) + 46) & 0xB2)
                                                                + 112);
  v57 = (((v56 - ((2 * v56) & 0x52)) << 24) + 687865856) ^ 0x29000000;
  v58 = (v57 - 211779000 + (~(2 * v57) | 0x19FFFFFF) + 1) ^ 0xF3608248 | (v55 + 1707147485) ^ 0x65C100DD;
  v59 = byte_10027CC90[v1[6] ^ 0xBBLL];
  v60 = (105 * v59 - ((22 - 46 * v59) & 0xF6) + 6) ^ 0xB5;
  v61 = (((v60 - ((2 * v60) & 0x132)) << 8) + 546412800) ^ 0x20919900;
  v62 = byte_100263DF0[v1[5] ^ 0xF0];
  v63 = (((32 * v62) ^ 0xFFFFFFB0) - 3) ^ v62;
  v64 = ((((v63 ^ 0xB8) - ((2 * (v63 ^ 0xB8)) & 0x16A)) << 16) - 290127872) ^ 0xEEB50000;
  v65 = (v64 - ((2 * v64) & 0x13BC0000) + 165553529) ^ 0x9DE2579 | (v61 - ((2 * v61) & 0x5C5FAC00) - 298854912) ^ 0xEE2FD600;
  v66 = (v65 - ((2 * v65) & 0x4FE0B232) - 1477420775) ^ 0xA7F05919 | (v58 - ((2 * v58) & 0x5EFFB9D2) + 796908777) ^ 0x2F7FDCE9;
  v67 = v66 - ((2 * v66) & 0x9865B004) + 1278400514;
  v68 = HIBYTE(v23) & 0xA4;
  v69 = (v68 ^ 0xFFFFFFFB) + (v23 >> 31 << 8) + 379122222;
  v70 = v69 & 0x53A79108 ^ 0x50A58103 | v69 & 0xAC586EA4;
  v71 = HIBYTE(v23) & 0x5B;
  v72 = (((2 * (v71 ^ 0x10259)) & 0x422) - (v71 ^ 0x10259) + 99701838) ^ 0x8DB55D46;
  v73 = ((v71 ^ 0x51 | 0x5629EB61) - (v71 ^ 0x51 | 0xA9D6149E) - 1445587810) ^ 0x7609A335;
  v74 = (((2 * v73) | 0x18D77D96) - v73 + 1939095861) ^ 0x3E048E71 ^ (((2 * v72) & 0x880C90) - v72 + 446396855) | (((2 * (v68 ^ 0x80009020)) & 0x10140) - (v68 ^ 0x80009020) + 49445454) & 0x2036BEC ^ 0xC87F89C2 ^ (v70 - 1);
  v75 = dword_100255640[v63 ^ 0xC9];
  LOWORD(v72) = (HIBYTE(v33) ^ 0x88) - ((2 * (HIBYTE(v33) ^ 0x88)) & 0x92) + 9545;
  v76 = (v72 & 0x15A ^ 0xB381C103) + (v72 & 0x6A5);
  v77 = (((2 * (HIBYTE(v33) ^ 0xF8)) & 0xEEEEEEEE) - (HIBYTE(v33) ^ 0xF8) + 648) ^ 0xFFFFFDAB;
  v78 = v77 - ((2 * v77 + 226) & 0x285DA67C) + 338613167;
  v79 = --v76 ^ 0xA8ACF4C9;
  v80 = v78 ^ v76 ^ 0xA8ACF4C9 ^ 0x826FD718 ^ ((v76 ^ 0x4C7E3B68)
                                             - ((2 * (v76 ^ 0x4C7E3B68) + 2) & 0x1AD868F0)
                                             - 1922288519);
  v81 = dword_1002595B0[v29 ^ 0x4B];
  HIDWORD(v51) = v81 ^ 0xFFFFFF8F;
  LODWORD(v51) = v81 ^ 0xF6C24D00;
  v82 = v75 ^ dword_10027C600[HIBYTE(v23) ^ 4] ^ (((32 * v75) ^ 0xD0C62000)
                                                - ((2 * ((32 * v75) ^ 0xD0C62000)) & 0x6064E440)
                                                + 808612398) ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0xB5BA5CA8) - 623038892) ^ dword_10025AE10[v80 + 112] ^ (v74 - 1705651097 + (~(2 * v74) | 0xCB545733));
  v83 = dword_100255640[v27 ^ 0x94];
  v84 = dword_1002595B0[STACK[0x678] ^ 0xA1];
  HIDWORD(v51) = v84 ^ 0xFFFFFF8F;
  LODWORD(v51) = v84 ^ 0xF6C24D00;
  v85 = v83 ^ dword_10027C600[HIBYTE(v67) ^ 0x95] ^ (((32 * v83) ^ 0xD0C62000)
                                                   - ((2 * ((32 * v83) ^ 0xD0C62000)) & 0x9E8CFC40)
                                                   + 1330019891) ^ ((v51 >> 8)
                                                                  - ((2 * (v51 >> 8)) & 0x77AECE36)
                                                                  + 1003972379) ^ dword_10025AE10[(((v43 >> 8) & 0x8B ^ 0xD990918A)
                                                                                                 + ((v43 >> 8) & 0x74 ^ 0x61)
                                                                                                 - 1) ^ 0xD99091A6];
  v86 = dword_100255640[v21 ^ 0xCA];
  v87 = ((2 * (BYTE1(v67) ^ 0x1805DE7)) & 0x200B1CC) - (BYTE1(v67) ^ 0x1805DE7) + 884082457;
  v88 = (((v67 >> 8) & 0x79 ^ 0xEDDC34F7) - ((v67 >> 8) & 0x86)) ^ 0x55DE31D4;
  v89 = dword_1002595B0[(((2 * (v33 ^ 0x15)) & 0xA6) - (v33 ^ 0x15) + 684) ^ 0x290];
  HIDWORD(v51) = v89 ^ 0xFFFFFF8F;
  LODWORD(v51) = v89 ^ 0xF6C24D00;
  v90 = dword_10027C600[v34 ^ 0xD5] ^ v86 ^ (((32 * v86) ^ 0xD0C62000)
                                                            - ((2 * ((32 * v86) ^ 0xD0C62000)) & 0xE20EF180)
                                                            - 251168547) ^ dword_10025AE10[((v88 | 0x6C8F73B8)
                                                                                          - (v88 | 0x93708C47)
                                                                                          - 1821340601) ^ 0xD48D7648] ^ v87 ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0x636EDCBC) + 834104926);
  v91 = ((BYTE2(v85) ^ 0xD2) - ((2 * (BYTE2(v85) ^ 0xD2)) & 0xAE) + 442626903) ^ 0x18ADE7C7;
  v92 = dword_100255640[(((2 * v91) & 0x50819D8) - v91 - 246877421) ^ 0xF384E725];
  v93 = dword_1002595B0[((v90 ^ 0x43) + (v90 & 0x53 ^ 0x210) - ((v90 ^ 0x43) & 0x53)) ^ 0x2C7];
  HIDWORD(v51) = v93 ^ 0xFFFFFF8F;
  LODWORD(v51) = v93 ^ 0xF6C24D00;
  v94 = v82 ^ v79;
  v95 = dword_10027C600[HIBYTE(v94) ^ 0x81] ^ v92 ^ (((32 * v92) ^ 0xD0C62000)
                                                   - ((2 * ((32 * v92) ^ 0xD0C62000)) & 0xAC09E180)
                                                   - 704319283) ^ ((v51 >> 8)
                                                                 - ((2 * (v51 >> 8)) & 0xDD891674)
                                                                 + 1858374458) ^ (((v53 >> 8) & 0xB ^ 0xDCBEDD01)
                                                                                + (((v53 >> 8) ^ 0x63D950) & 0xF4 ^ 0xD1)
                                                                                - 1) ^ dword_10025AE10[((BYTE1(v53) ^ 0xCE | 0x6667BABC) - (BYTE1(v53) ^ 0xCE | 0x99984543) - 1718074045) ^ 0x6667BA8F];
  v96 = dword_100255640[((BYTE2(v52) ^ 0xC060E073 | 0x4580CC20) - (BYTE2(v52) ^ 0xC060E073 | 0xBA7F33DF) - 1166068769) ^ 0x85E02CB0];
  v97 = (((HIWORD(v90) & 0xFE ^ 0x9E) + (HIWORD(v90) & 0xB2 ^ 0x420) - ((HIWORD(v90) & 0xFE ^ 0x9E) & 0xB2)) & 0xFFFFFFFE | HIWORD(v90) & 1) ^ 0x41B;
  v98 = dword_1002595B0[v94 ^ 0x56];
  HIDWORD(v51) = v98 ^ 0xFFFFFF8F;
  LODWORD(v51) = v98 ^ 0xF6C24D00;
  v99 = dword_10027C600[HIBYTE(v85) ^ 0x26] ^ dword_10025AE10[((BYTE1(v90) ^ 0x7B)
                                                             + ((v90 >> 8) & 0xDC ^ 0xB84)
                                                             - ((BYTE1(v90) ^ 0x7B) & 0xDC)) ^ 0xB81] ^ v96 ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0x48CF4B8) + 38173276) ^ (((2 * (BYTE1(v90) ^ 0x690801D2)) | 0x81E01758) - (BYTE1(v90) ^ 0x690801D2) - 1089473452) ^ (((32 * v96) ^ 0x74B81A80) - ((2 * ((32 * v96) ^ 0x74B81A80)) & 0x90184300) + 1208754576);
  v100 = dword_100255640[(v97 + 1717714272 - ((2 * v97) & 0x4CC47AF0) + 24) ^ 0x66623D60];
  v101 = ((v100 ^ 0x9179CEFF) - ((2 * (v100 ^ 0x9179CEFF) + 172483498) & 0xE165AA9E) + 1977009956) ^ v100 ^ ((v100 ^ 0x945A3F2B) + 1453682257 + (~(2 * (v100 ^ 0x945A3F2B) + 2) | 0x52B52361));
  v102 = (v101 ^ 0x4DB27BD4) - 2 * (((v101 ^ 0x4DB27BD4) + 86241748) & 0x41E3B5A7 ^ v101 & 2) + 1191683961;
  LOBYTE(v96) = v85 ^ BYTE1(v43);
  v103 = ((((v94 ^ 0xDDC27AD2) >> 8) & 0xCA ^ 0x7928414B) + (((v94 ^ 0xDDC27AD2) >> 8) & 0x35) - 1) ^ 0x2B08C47B;
  v104 = (((2 * (((unsigned __int16)(v94 ^ 0x7AD2) >> 8) ^ 0xF6)) | 0x638A7A7A)
        - (((unsigned __int16)(v94 ^ 0x7AD2) >> 8) ^ 0xF6)
        - 835009853) ^ 0x22D51D7D;
  v105 = ((((((v90 << 6) ^ 0x4DD59900) - ((2 * ((v90 << 6) ^ 0x4DD59900)) & 0xAB1AF100) + 1435334810) | 0x3FFFFFE0)
         - 323764768) & 0xC0000000 | (v90 >> 26)) ^ 0x4000000D;
  v106 = v105 - ((2 * v105) & 0x8000000E) - 933267769;
  HIDWORD(v51) = v106 ^ 0x2678F391;
  LODWORD(v51) = v106;
  v107 = dword_1002595B0[((v96 & 0xFD ^ 0xB4) + (v96 & 0xAC ^ 0x50A) - ((v96 & 0xFD ^ 0xB4) & 0xAC)) & 0xFFFFFFFD ^ 0x7E67A0E8 ^ (2120720616 - (v96 & 2) - 2 * (((v96 & 2 ^ 0xB3) & 0x12 | 0x7FFFFF6D) ^ (v96 & 2 ^ 0xB3 | 0x7FFFFFED)) + 1355)];
  v108 = (v51 >> 30) - ((2 * (v51 >> 30)) & 0xA688865A);
  HIDWORD(v51) = v107 ^ 0xFFFFFF8F;
  LODWORD(v51) = v107 ^ 0xF6C24D00;
  v109 = dword_10025AE10[((v104 | 0x3CA14090) - (v104 | 0xC35EBF6F) - 1017200785) ^ 0x2FB16045] ^ ((v51 >> 8)
                                                                                                 - ((2 * (v51 >> 8)) & 0x217D1A50)
                                                                                                 + 280923432) ^ dword_10027C600[HIBYTE(v52) ^ 0x1E] ^ v102 ^ (((2 * v103) & 0x441C366) - v103 + 2039160396) ^ (((32 * v102) ^ 0x3C76B4A0) - ((2 * ((32 * v102) ^ 0x3C76B4A0)) & 0x30156800) + 403354631);
  v110 = dword_100255640[BYTE2(v82) ^ 0x90];
  v111 = (v54 ^ 0xBBF5A7F)
       + 2 * v54
       + ((2 * ((v53 ^ 0x73836A3E) + (v54 ^ 0xFFFFFF02) - ((2 * v54) & 0xFA) - 2)) & 0x1FC)
       + (((v53 ^ 0x3E) + (v54 ^ 2) - ((2 * v54) & 0xFA) - 2) ^ 0x7FF7B7FE);
  v112 = dword_1002595B0[(v111 - 1463670114 + (~(2 * v111 + 1754389254) | 0x970D85CB)) ^ 0x34793DA9];
  v113 = ((v112 << 25) & 0xFC000000 ^ 0x1C000000) + ((v112 << 24) ^ 0x71DFC7BA);
  v114 = v110 ^ dword_10025AE10[((BYTE1(v85) ^ 0xB1) + 1433412372 - ((2 * (BYTE1(v85) ^ 0xB1)) & 0x1B8) + 200) ^ 0x55702314] ^ (((32 * v110) ^ 0xD0C62000) - ((2 * ((32 * v110) ^ 0xD0C62000)) & 0xD74A0780) + 1805976531) ^ ((BYTE1(v85) ^ 0x73) - ((2 * (BYTE1(v85) ^ 0x73)) & 0x2E) - 8160489) & 0x92000FFF ^ dword_10027C600[(v108 - 750501075) ^ 0x6BDA565B];
  v115 = (((v113 + 18888774) & 0xFF000000 | (v112 >> 8)) ^ 0x98F61209)
       + v113
       + ((2 * ((v113 + 18888774) & 0xFF000000 | (v112 >> 8))) & 0xCFFE5F76 ^ 0xFE13FBED);
  v116 = (((v112 >> 8) ^ 0xFF093DB2) - ((2 * ((v112 >> 8) ^ 0xFF093DB2) + 2) & 0xF365CE20) + 2041767697) ^ (v112 >> 8) ^ (v115 - ((2 * v115 - 767635450) & 0xBE4C5056) + 1212518446);
  HIDWORD(v51) = v114 ^ 0x6F6;
  LODWORD(v51) = v114 ^ 0xDD48B000;
  v117 = (v51 >> 12) - ((2 * (v51 >> 12)) & 0xB2E3039C) - 646872626;
  HIDWORD(v51) = v116 ^ 0xD76;
  LODWORD(v51) = (((v116 ^ 0xA6620D76) + v113 + 18888774) ^ 0xBFABFF97)
               + 1079246953
               + ((2 * ((v116 ^ 0xA6620D76) + v113 + 18888774)) & 0x7F57FF2E);
  v118 = ((v51 >> 12) - ((2 * (v51 >> 12)) & 0x473BCC40) + 597550624) ^ v117;
  HIDWORD(v51) = v118 ^ 0x8DE02;
  LODWORD(v51) = v118 ^ 0x7100000;
  v119 = (v51 >> 20) - ((2 * (v51 >> 20)) & 0x95655336) - 894260837;
  v120 = ((((v119 ^ 0x245AA9C9) >> (v43 & 8 ^ 8))
         - ((2 * ((v119 ^ 0x245AA9C9) >> (v43 & 8 ^ 8))) & 0x2E078E04)
         - 1761360126) ^ 0x9703C702) >> (v43 & 8);
  LOBYTE(v110) = v120 - ((2 * v120) & 0xAA) + 85;
  v121 = dword_100255640[BYTE2(v99) ^ 0xA];
  v122 = ((v119 & 0x72 ^ 0x85740003) - (v119 & 0x8D) + 24716) ^ 0x917461AD;
  v123 = (((2 * v122) | 0xB7DEC06A) - v122 + 605069259) ^ 0xCFEF616D;
  v124 = BYTE1(v109);
  v125 = dword_1002595B0[v123];
  HIDWORD(v51) = v125 ^ 0xFFFFFF8F;
  LODWORD(v51) = v125 ^ 0xF6C24D00;
  v126 = dword_100255640[BYTE2(v109) ^ 0x8D];
  v127 = dword_10027C600[HIBYTE(v95) ^ 0xA1] ^ v121 ^ dword_10025AE10[((BYTE1(v109) ^ 0xF7)
                                                                     + ((v109 >> 8) & 0xAC ^ 0x908)
                                                                     - ((BYTE1(v109) ^ 0xF7) & 0xAC)) ^ 0x973] ^ (((32 * v121) ^ 0xD0C62000) - ((2 * ((32 * v121) ^ 0xD0C62000)) & 0xC17CCC00) + 1623090712) ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0xA9F43AE2) - 721805967);
  v128 = (v110 ^ 0xE7) + (v110 & 0x9A ^ 0x84233118) - ((v110 ^ 0xE7) & 0x9A);
  v129 = dword_1002595B0[(((2 * (v95 ^ 0xD7409)) | 0x83F762B0)
                        - (v95 ^ 0xD7409)
                        + 1040469672) ^ 0xC1F6C5B6];
  HIDWORD(v51) = v129 ^ 0xFFFFFF8F;
  LODWORD(v51) = v129 ^ 0xF6C24D00;
  v130 = dword_10027C600[HIBYTE(v99) ^ 0x96] ^ v126 ^ (((32 * v126) ^ 0xD0C62000)
                                                     - ((2 * ((32 * v126) ^ 0xD0C62000)) & 0x2E390800)
                                                     + 387744787) ^ ((v51 >> 8)
                                                                   - ((2 * (v51 >> 8)) & 0x8363C546)
                                                                   + 1102176931) ^ dword_10025AE10[((v110 & 0x53 ^ 0x80061C03)
                                                                                                  + (v110 & 0xAC ^ 0x1A0E1A5)
                                                                                                  - 1) ^ 0x81A6FD82];
  v131 = dword_100255640[(((2 * (BYTE2(v119) ^ 0x18808053)) | 0xF49B3DB0) - (BYTE2(v119) ^ 0x18808053) + 95576360) ^ 0xE2CD1EC9];
  v132 = v131 ^ 0x6BA5C0D4;
  if ((v131 & 0x1000000) != 0)
    v133 = 0x1000000;
  else
    v133 = -16777216;
  v134 = v133 + v132 - 2 * ((v133 + v132) & 0x112969C5 ^ v132 & 4) + 287926721;
  v135 = ((v95 >> 8) & 0x79 ^ 0x3941A748) + ((v95 >> 8) & 0x86 ^ 0x81) - 1;
  v136 = dword_1002595B0[v99 ^ 0x1B];
  HIDWORD(v137) = v136 ^ 0xFFFFFF8F;
  LODWORD(v137) = v136 ^ 0xF6C24D00;
  v138 = dword_10027C600[HIBYTE(v109) ^ 0x8B] ^ BYTE1(v95) ^ dword_10025AE10[((v135 & 0x7B5 ^ 0xA032184)
                                                                            + (v135 & 0x84A ^ 0x40A08049)
                                                                            - 1) ^ 0x4AA3A66D] ^ ((v137 >> 8)
                                                                                                - ((2 * (v137 >> 8)) & 0x84631172)
                                                                                                + 1110542521) ^ v134 ^ (((32 * v134) ^ 0xA15302A0) - ((2 * ((32 * v134) ^ 0xA15302A0)) & 0x8A8A4700) - 985324646);
  v139 = dword_100255640[((BYTE2(v95) ^ 0x482B0497) - ((2 * (BYTE2(v95) ^ 0x482B0497)) & 0x80400878) - 501172676) ^ 0xAA0BB22F];
  v140 = dword_1002595B0[v109 ^ 0x2F];
  HIDWORD(v137) = v140 ^ 0xFFFFFF8F;
  LODWORD(v137) = v140 ^ 0xF6C24D00;
  v141 = dword_10027C600[HIBYTE(v119) ^ 9] ^ v139 ^ (((v99 >> 8) & 0xC8 ^ 0xE978849) + ((v99 >> 8) & 0x37) - 1) ^ dword_10025AE10[((BYTE1(v99) ^ 0x2C7008D1 | 0xBB136560) - (BYTE1(v99) ^ 0x2C7008D1 | 0x44EC9A9F) + 1156356767) ^ 0x97636D10] ^ (((32 * v139) ^ 0xD0C62000) - ((2 * ((32 * v139) ^ 0xD0C62000)) & 0xE6CF3A40) - 211313376) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x55019C56) - 1434399189);
  v142 = v127 ^ v124;
  v143 = (BYTE1(v137) - ((2 * BYTE1(v137)) & 0x56) + 43) & 0x10;
  v144 = (v142 ^ ~HIWORD(v119) & 0x1000001 ^ 0x93559465) >> v143;
  HIDWORD(v137) = v141 ^ 0x1DA;
  LODWORD(v137) = v141 ^ 0x739D6400;
  v145 = (v137 >> 10) - ((2 * (v137 >> 10)) & 0x81F306BE) + 1090093919;
  v146 = ((v144 - ((2 * v144) & 0x2EF01A14) + 393743626) ^ 0x17780D0A) >> (v143 ^ 0x10);
  v147 = v146 - 2 * (v146 & 1);
  HIDWORD(v137) = v145 ^ 0x149C97;
  LODWORD(v137) = v145 ^ 0x86800000;
  v148 = (v137 >> 22) - ((2 * (v137 >> 22)) & 0xE879CF9E) - 197335089;
  v149 = v130 ^ v128 & 0x80001FFF;
  v150 = ((BYTE2(v130) ^ 2) - ((v130 >> 15) & 0x1D2) - 1938855447) ^ 0xA82F21FB;
  v151 = dword_100255640[(((2 * v150) & 0x80015E4) - v150 + 837711117) ^ 0x15AE3DA6];
  v152 = ((v137 >> 22) - ((2 * (v137 >> 22)) & 0x9E) - 49) ^ 0x82;
  v153 = ((BYTE1(v138) ^ 0xFFFFFF7F) - 2057771225 + ((2 * BYTE1(v138)) | 0xF54E31B4)) ^ 0x70B71AFA;
  v154 = dword_1002595B0[(((2 * v152) | 0x4C1BA472) - v152 + 1509043655) ^ 0xA60DD2B5];
  HIDWORD(v137) = v154 ^ 0xFFFFFF8F;
  LODWORD(v137) = v154 ^ 0xF6C24D00;
  v155 = dword_10027C600[HIBYTE(v127) ^ 0xBF] ^ v151 ^ dword_10025AE10[((v153 | 0x6FEEB25C)
                                                                      - (v153 | 0x90114DA3)
                                                                      - 1877914205) ^ 0x65FEB0A5] ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0xF2269F76) - 116174917) ^ ((BYTE1(v138) ^ 0x8848E409) + ((v138 >> 8) & 0x36 ^ 0x33A21936) - ((BYTE1(v138) ^ 0x8848E409) & 0x8008E036)) ^ (((32 * v151) ^ 0xD0C62000) - ((2 * ((32 * v151) ^ 0xD0C62000)) & 0x55C55A40) + 719498535);
  v156 = ((HIWORD(v138) & 0x77 ^ 0xFA107151) + (HIWORD(v138) & 0x88 ^ 0x81) - 1) ^ 0x2B80D9F5;
  v157 = dword_100255640[(v156 - ((2 * v156) & 0x301446E) + 197845559) ^ 0xDA5A4AD3];
  v158 = ((BYTE1(v148) ^ 0x3D | 0xB2978492) - (BYTE1(v148) ^ 0x3D | 0x4D687B6D) + 1298692973) ^ 0xF0DFC492;
  v159 = ((((v148 >> 8) & 6) + (BYTE1(v148) ^ 0xA6)) | 0xB6E4EA00) - ((BYTE1(v148) ^ 0xA6) & 6);
  v160 = dword_1002595B0[((v142 ^ 0x45C9808C | 0x841CB1EC)
                        - (v142 ^ 0x45C9808C | 0x7BE34E13)
                        + 2078494227) ^ 0xC1D531B7];
  HIDWORD(v137) = v160 ^ 0xFFFFFF8F;
  LODWORD(v137) = v160 ^ 0xF6C24D00;
  v161 = dword_10027C600[HIBYTE(v149) ^ 0x4A] ^ dword_10025AE10[((v159 & 0x20A0A9B2 ^ 0x480011A0)
                                                               + (v159 ^ 0xB1A6EE17)
                                                               - ((v159 ^ 0xB1A6EE17) & 0x50201B2)) ^ 0x6AE0BD40] ^ v157 ^ ((v137 >> 8) + 809773427 + (~(2 * (v137 >> 8)) | 0x9F77AD1B)) ^ (v158 - ((2 * v158) & 0xD3693246) - 374040285) ^ (((32 * v157) ^ 0xD0C62000) - ((2 * ((32 * v157) ^ 0xD0C62000)) & 0x8076E40) + 67352352);
  v162 = dword_100255640[((BYTE2(v148) ^ 0xA8) + (HIWORD(v148) & 0x7B ^ 0x1753) - ((BYTE2(v148) ^ 0xA8) & 0x7B)) ^ 0x171F];
  v163 = (33 * (v162 ^ 0x6E863100)) ^ 0x6EF0E36F;
  v164 = (66 * (v162 ^ 0x6E863100)) & 0xDDE1C6DE;
  v165 = v127 >> 8;
  v166 = ((BYTE1(v127) ^ 0x8A) + ((v127 >> 8) & 0x33 ^ 0x34CFC131) - ((BYTE1(v127) ^ 0x8A) & 0x33333333)) ^ 0x344D5B3B;
  v167 = ((((2 * v162) ^ 0xDD0C6200) - 463771648 - 2 * (((2 * v162) ^ 0xDD0C6200) & 0x645B683C ^ (2 * v162) & 0x14) + 41) ^ 0xE45B6800) & ((((v162 << 6) ^ 0xA18C4000) - ((2 * ((v162 << 6) ^ 0xA18C4000)) & 0xACF79A80) - 696529581) ^ 0xD67BCD53);
  v168 = v164 + v163 + (v167 ^ 0xDEC854B2) - ((2 * v167) & 0x426F569A) + 1;
  v169 = dword_1002595B0[((v149 ^ 0xAF) - ((2 * (v149 ^ 0xAF)) & 0xF6) + 2427) ^ 0x961];
  HIDWORD(v137) = v169 ^ 0xFFFFFF8F;
  LODWORD(v137) = v169 ^ 0xF6C24D00;
  v170 = HIBYTE(v148) ^ 0xD3;
  v171 = dword_10025AE10[((v165 & 0x77 ^ 0x18E) - (v165 & 0x88)) ^ 0x16A] ^ (v166 - ((2 * v166) & 0x47410) + 293550600) ^ dword_10027C600[HIBYTE(v138) ^ 0x21] ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x7F97DF0C) - 1077153914) ^ (v168 - ((2 * v168 + 1686998972) & 0x85913EE6) + 1963943761);
  v172 = (((2 * ((v147 - 127) ^ 0xD4)) | 0x9F030F90)
        - ((v147 - 127) ^ 0xD4)
        + 813594680) ^ 0x8F0A87DC;
  v173 = dword_100255640[((v172 | 0x939ECCED) - (v172 | 0x6C613312) + 1818309394) ^ 0xD315CCB4];
  v174 = v149 >> 8;
  v175 = (v149 >> 8) & 0x6D ^ 0xA2D0925;
  v176 = BYTE1(v149);
  v177 = ((v176 ^ 0x48) + v175 - ((v176 ^ 0x48) & 0x6D)) ^ 0xA2D8965;
  v178 = v173 ^ dword_10027C600[v170] ^ (((32 * v173) ^ 0xD0C62000)
                                       - ((2 * ((32 * v173) ^ 0xD0C62000)) & 0x2DBA8600)
                                       - 1763884268);
  v179 = (v176 ^ 0xA3) + (v174 & 0x30 ^ 0x297C1F10) - ((v176 ^ 0xA3) & 0x30);
  v180 = dword_10025AE10[((v179 & 0x5D1EE3 ^ 0x908100C0) + (v179 ^ 0x497E5F23) - ((v179 ^ 0x497E5F23) & 0x20051EE3)) ^ 0xD0DF5E14];
  v181 = v180 ^ 0xA762988C;
  v182 = (v180 ^ 0xA762988C) + (v180 ^ 0xD42A6181 ^ v178) + 1;
  v183 = ((v138 & 0x27 ^ 0xBFF22004) + (v138 & 0xD8 ^ 9) - 1) ^ 0xBEF3A316;
  v184 = (v178 ^ ((v178 ^ 0x7348F90D) - ((2 * (v178 ^ 0x7348F90D) + 2) & 0x6E75C264) - 1220878029) ^ (v182 - ((2 * v182) & 0x548141C8) + 708878564) ^ 0x11CD4724)
       + v181;
  v185 = dword_1002595B0[(v183 - ((2 * v183) & 0x2FDCA) + 739606245) ^ 0x2D14FD82];
  HIDWORD(v137) = v185 ^ 0xFFFFFF8F;
  LODWORD(v137) = v185 ^ 0xF6C24D00;
  v186 = (v184 - ((2 * v184) & 0xBA5FF08C) + 1563424838) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x7061C114) - 1204756342) ^ ((v177 | 0x745168CB) - (v177 | 0x8BAE9734) - 1951492300);
  v187 = dword_100255640[BYTE2(v161) ^ 0x55];
  v188 = (v186 ^ 0x8C) - ((2 * (v186 ^ 0x8C)) & 0x142) - 1747142751;
  v189 = dword_1002595B0[((v188 & 0x83540E18 ^ 0x8000A00) + (v188 ^ 0x87DEB53A) - ((v188 ^ 0x87DEB53A) & 0x10000E18)) ^ 0x8B560C74];
  HIDWORD(v137) = v189 ^ 0xFFFFFF8F;
  LODWORD(v137) = v189 ^ 0xF6C24D00;
  v190 = v187 ^ dword_10027C600[HIBYTE(v155) ^ 0xD0] ^ dword_10025AE10[BYTE1(v171) ^ 0xE3] ^ (((32 * v187) ^ 0xD0C62000)
                                                                                            + 1146938365
                                                                                            + (~(2
                                                                                               * ((32 * v187) ^ 0xD0C62000)) | 0x7746383F)) ^ ((BYTE1(v171) ^ 0x180C0091) + ((v171 >> 8) & 0xD5 ^ 0x452F944) - ((BYTE1(v171) ^ 0x180C0091) & 0x80400D5)) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x469E1AF2) + 592383353);
  v191 = ((HIWORD(v171) & 0x1B ^ 0xB8A86003) + (HIWORD(v171) & 0xE4 ^ 0xE1) - 1) ^ 0x594A9627;
  v192 = (((v186 >> 8) & 0x90 ^ 0xF507FA81) + ((v186 >> 8) & 0x6F) - 1) ^ 0xF4A3D695;
  v193 = dword_100255640[(v191 - ((2 * v191) & 0x4201EECE) + 555022183) ^ 0xC0F601D4];
  v194 = dword_1002595B0[(((2 * (v155 ^ 0x41)) | 0x95BEA02)
                        - (v155 ^ 0x41)
                        + 1800538879) & 0x1FFFFFFF ^ 0x14ADF5F0];
  v195 = (v194 >> 8) & 0x128C8F;
  v196 = (((2 * (v195 ^ 0x49D7C9C3)) & 0x92208186) - (v195 ^ 0x49D7C9C3) + 13614396) ^ 0x9A1A74C2;
  v197 = ((v194 >> 7) & 0x5191E ^ 0xD15F26FA)
       + (v195 ^ 0x17506C82)
       + ((((v194 >> 8) ^ 0x16E44EC2) + 1) ^ 0xFE6CE71F)
       + ((2 * (((v194 >> 8) ^ 0x16E44EC2) + 1)) & 0x2CD9CE3E);
  v198 = (((2 * v196) & 0x13E00D64) - v196 + 1980741965) ^ (v197 - ((2 * v197 + 96924100) & 0x246D5674) - 1793448932) ^ 0x37299247;
  v199 = ((v194 << 24) ^ 0xE6FFBADD) + ((v194 << 25) & 0xD2000000 ^ 0x12000000) - 1778367197 + v198;
  v200 = v199 - 2 * (v199 & 0x3C6F513D ^ v198 & 1) - 1133555396;
  v201 = dword_100255640[BYTE2(v186) ^ 0xF2];
  v202 = dword_10027C600[HIBYTE(v161) ^ 0xFD] ^ v193 ^ (((32 * v193) ^ 0xD0C62000)
                                                      - ((2 * ((32 * v193) ^ 0xD0C62000)) & 0x446C9000)
                                                      - 1573500918) ^ v200 ^ ((v192 | 0x6066538F)
                                                                            - (v192 | 0x9F99AC70)
                                                                            - 1617318800) ^ dword_10025AE10[(((v186 >> 8) & 0x2B ^ 0x9FBBCC03) + ((v186 >> 8) & 0xD4 ^ 0xC1) - 1) ^ 0x9FBBCCB6];
  LOWORD(v200) = ((2 * (BYTE1(v155) ^ 0xC3)) & 0xC) - (BYTE1(v155) ^ 0xC3) - 23303;
  v203 = ((v161 ^ 0xC4) - ((2 * (v161 ^ 0xC4)) & 0x162) - 1458855247) ^ 0x398AAAB3;
  v204 = dword_1002595B0[(v203 - ((2 * v203) & 0x17C6) + 643465187) ^ 0xB6DB77FF];
  HIDWORD(v137) = v204 ^ 0xFFFFFF8F;
  LODWORD(v137) = v204 ^ 0xF6C24D00;
  v205 = v201 ^ BYTE1(v155) ^ dword_10027C600[HIBYTE(v171) ^ 0x7B] ^ dword_10025AE10[((v200 & 0x6E9 ^ 0x5569221)
                                                                                    + (v200 & 0x116 ^ 0x8884911)
                                                                                    - 1) ^ 0xDDEDF9D] ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0xA36288F8) - 776911748) ^ (((32 * v201) ^ 0xD0C62000) - ((2 * ((32 * v201) ^ 0xD0C62000)) & 0xF93D4980) - 56711979);
  v206 = dword_10027C600[HIBYTE(v186) ^ 0x24];
  v207 = (v206 ^ 0x8B138B19) + 1;
  v206 ^= 0xF83DEE3B;
  v208 = v206 + (v207 ^ 0x5BE7B7E7) + ((2 * v207) & 0xB7CF6FCE) - 1541912551;
  v209 = dword_100255640[BYTE2(v155) ^ 0x32];
  v210 = ((v208 - 1048142656 + (~(2 * v208) | 0x7CF2C681)) ^ 0x3E796341) + v206;
  v211 = BYTE1(v161) ^ 0xD79EDE36;
  v212 = v161 >> 8;
  v213 = 2 * (v161 >> 8);
  v214 = v213 & 0x7A ^ 0x13;
  v215 = (v213 ^ 0x1FAAA16) - ((2 * (v213 ^ 0x1FAAA16)) & 0xA0) + 464;
  v216 = v211 + v214 + (v215 & 0xE0) - ((2 * v215) & 0x40) + 677454194;
  v217 = dword_1002595B0[v171 ^ 0xAE];
  HIDWORD(v137) = v217 ^ 0xFFFFFF8F;
  LODWORD(v137) = v217 ^ 0xF6C24D00;
  v218 = dword_10025AE10[v216] ^ v209 ^ (((32 * v209) ^ 0xD0C62000)
                                       - ((2 * ((32 * v209) ^ 0xD0C62000)) & 0xE4210940)
                                       - 233798493) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0xED3EC150) + 1990156456) ^ (v210 - ((2 * v210) & 0x15E1FDE2) - 1963917583);
  v219 = dword_100255640[BYTE2(v202) ^ 0x81];
  v220 = (BYTE1(v205) ^ 0xE1) + ((v205 >> 8) & 0xB0 ^ 0x72A0010) - ((BYTE1(v205) ^ 0xE1) & 0xB0);
  v221 = dword_1002595B0[(((2 * ((v218 ^ v212) ^ 0x510800FF)) | 0x10A8733C)
                        - ((v218 ^ v212) ^ 0x510800FF)
                        - 139737502) ^ 0x595C39A6];
  HIDWORD(v137) = v221 ^ 0xFFFFFF8F;
  LODWORD(v137) = v221 ^ 0xF6C24D00;
  v222 = dword_10027C600[HIBYTE(v190) ^ 0xC] ^ v219 ^ dword_10025AE10[((v220 & 0x39C69 ^ 0x89C18C01)
                                                                     + (v220 & 0x6396 ^ 0x40182281)
                                                                     - 1) ^ 0xC9DBAE39] ^ (((32 * v219) ^ 0xD0C62000)
                                                                                         - ((2
                                                                                           * ((32 * v219) ^ 0xD0C62000)) & 0xFB7E1E80)
                                                                                         - 37810347) ^ (((2 * (BYTE1(v205) ^ 0x7CFC2EA3)) & 0xA08048E0) - (BYTE1(v205) ^ 0x7CFC2EA3) + 767302287) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x3F762E34) - 1615128806);
  v223 = dword_100255640[BYTE2(v205) ^ 0xE3];
  v224 = ((BYTE1(v218) ^ 0x72) + ((v218 >> 8) & 0x31 ^ 0xB4176A01) - ((BYTE1(v218) ^ 0x72) & 0x31)) ^ 0xFD574E79;
  v225 = (((2 * (BYTE2(v218) ^ 0x59)) | 0x6E770562) - (BYTE2(v218) ^ 0x59) + 1220836687) ^ 0xB69A2231;
  v226 = dword_1002595B0[(((2 * (v190 ^ 0xAA)) | 0xC459C326)
                        - (v190 ^ 0xAA)
                        + 500375149) ^ 0xE22CE188];
  HIDWORD(v137) = v226 ^ 0xFFFFFF8F;
  LODWORD(v137) = v226 ^ 0xF6C24D00;
  v227 = dword_10027C600[HIBYTE(v202) ^ 0xA4] ^ v223 ^ (((32 * v223) ^ 0xD0C62000)
                                                      - ((2 * ((32 * v223) ^ 0xD0C62000)) & 0xABD23E00)
                                                      + 1441341190) ^ dword_10025AE10[(((2 * v224) | 0x506A860C)
                                                                                     - v224
                                                                                     + 1472904442) ^ 0xE1756766] ^ (((2 * (BYTE1(v218) ^ 0xDD)) & 0x1A) - (BYTE1(v218) ^ 0xDD) + 24562) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x6599537C) - 1295210050);
  v228 = dword_100255640[(((2 * v225) | 0xEE25B544) - v225 - 1997724322) ^ 0x76B37A49];
  v229 = v228 ^ ((BYTE1(v190) ^ 0xA11C0440 | 0x41CE5A5F) - (BYTE1(v190) ^ 0xA11C0440 | 0xBE31A5A0) - 1104042592) ^ dword_10027C600[HIBYTE(v205) ^ 0x49] ^ dword_10025AE10[(((2 * (BYTE1(v190) ^ 0xB6)) & 0x20) - (BYTE1(v190) ^ 0xB6) + 1519) ^ 0x579] ^ (((32 * v228) ^ 0xD0C62000) - ((2 * ((32 * v228) ^ 0xD0C62000)) & 0x4C62E080) + 640774224);
  HIDWORD(v137) = v229 ^ 0x17;
  LODWORD(v137) = v229 ^ 0xE20E9040;
  v230 = (v137 >> 6) - ((2 * (v137 >> 6)) & 0xA837DCDA) - 736366995;
  v231 = dword_1002595B0[v202 ^ 0x5D];
  HIDWORD(v137) = v231 ^ 0xFFFFFF8F;
  LODWORD(v137) = v231 ^ 0xF6C24D00;
  v232 = (v137 >> 8) + 1324161024 - ((2 * (v137 >> 8)) & 0x9DDA304E) + 39;
  HIDWORD(v137) = v232 ^ 0xFFFFFFE7;
  LODWORD(v137) = v232 ^ 0x4EED1800;
  v233 = (v137 >> 6) - ((2 * (v137 >> 6)) & 0xB4BC2DB8) - 631367972;
  HIDWORD(v137) = v233 ^ 0x3EAC78C ^ v230;
  LODWORD(v137) = v233 ^ ~v230;
  v234 = (v137 >> 26) - ((2 * (v137 >> 26)) & 0x9E4F2FE4) + 1327994866;
  v235 = (((2 * (BYTE2(v190) ^ 0xE2)) & 0x158) - (BYTE2(v190) ^ 0xE2) - 1781319597) ^ 0x55FFA831;
  v236 = dword_100255640[((v235 | 0xDEFAA830) - (v235 | 0x210557CF) + 553998287) ^ 0x1ED638D4];
  LOWORD(v235) = (v205 ^ 0x48) + (v205 & 0x63 ^ 0x8323) - ((v205 ^ 0x48) & 0x63);
  v237 = ((BYTE1(v202) ^ 0xDD | 0x154F97A8) - (BYTE1(v202) ^ 0xDD | 0xEAB06857) - 357537705) ^ 0x914FD529;
  v238 = dword_1002595B0[((v235 & 0xCBED ^ 0xE82DC80C) + (v235 & 0x3412 ^ 0x10401013) - 1) ^ 0xF86D5B7F];
  HIDWORD(v137) = v238 ^ 0xFFFFFF8F;
  LODWORD(v137) = v238 ^ 0xF6C24D00;
  v239 = dword_100255640[BYTE2(v222) ^ 0xDC];
  v240 = v236 ^ dword_10027C600[HIBYTE(v218) ^ 0xD0] ^ dword_10025AE10[(v237 - ((2 * v237) & 0x251341CE) - 1836474137) ^ 0x1689E2B3] ^ ((v137 >> 8) + 2029420408 + (~(2 * (v137 >> 8)) | 0xE130111)) ^ (((32 * v236) ^ 0xD0C62000) - ((2 * ((32 * v236) ^ 0xD0C62000)) & 0x23B1A280) + 299422023);
  v241 = v239 ^ dword_10027C600[HIBYTE(v240) ^ 0x7C] ^ (((32 * v239) ^ 0xD0C62000)
                                                      - ((v239 << 6) & 0x40101B80)
                                                      + 537398727) ^ 0xA6C84EE6;
  v242 = ((v241 & 0xDDE3163B ^ 0x90630623)
        + (v241 & 0x901003A ^ 0x910681C)
        - ((v241 & 0xDDE3163B ^ 0x90630623) & 0x901003A)) ^ 0x555609A;
  v243 = ((BYTE1(v227) ^ 0x33 | 0xF7137C32) - (BYTE1(v227) ^ 0x33 | 0x8EC83CD) + 149717965) ^ 0xF601FE12;
  v244 = (v241 & 0xC000) + (v241 & 0x14C0C0 ^ 0xFFEBFFBF) + (v241 & 0xC000 | 0xF61F27D9);
  v245 = (v241 & 0x2080104 | v241 & 0x20002800 ^ 0x20000001) + 1291108455;
  v246 = ((v245 & 0x44C40104 ^ 0x10000100) + (v245 ^ 0xE7EDD444) - ((v245 ^ 0xE7EDD444) & 0x88000124)) ^ 0x57D5150C | (v244 | 1) ^ 0xF60B2759;
  v247 = (v246 - ((2 * v246) & 0x248DBD84) + 306634434) ^ 0x1246DEC2 | (v242 - ((2 * v242) & 0x88261388) - 1005368892) ^ 0xC4964140;
  v248 = dword_1002595B0[v234 ^ 0x85];
  HIDWORD(v137) = v248 ^ 0xFFFFFF8F;
  LODWORD(v137) = v248 ^ 0xF6C24D00;
  v249 = dword_10025AE10[BYTE1(v227) ^ 0xBB] ^ (((2 * v243) | 0xF4D6DC7A) - v243 + 93622723) ^ ((v137 >> 8)
                                                                                              - ((2 * (v137 >> 8)) & 0x62806AA6)
                                                                                              + 826291539) ^ (v247 - ((2 * v247) & 0xAF805264) + 1472211250);
  v250 = (((LOBYTE(dword_10025AE10[BYTE1(v227) ^ 0xBB]) ^ (((2 * v243) | 0x7A) - v243 - 61) ^ (BYTE1(v137) - ((2 * BYTE1(v137)) & 0xA6) + 83) ^ (v247 - ((2 * v247) & 0x64) + 50)) ^ 0xFFD959DF)
        + 2532946
        + ((2 * v249) & 0x15C ^ 0x40))
       % 0x72;
  v251 = ((v202 >> 8) & 0x74 ^ 0x435) + ((v202 >> 8) & 0x8B);
  v252 = dword_100255640[((HIWORD(v227) & 4)
                        + (BYTE2(v227) ^ 0x18D88AD)
                        - ((BYTE2(v227) ^ 0x18D88AD) & 0x898004)
                        + 436351744) ^ 0x1B063BD7];
  v253 = (((v234 >> 8) & 0x53 ^ 0xA12401) + ((v234 >> 8) & 0xAC ^ 0x1058C225) - 1) ^ 0x11798A28;
  v254 = ((BYTE1(v234) ^ 0x44) - ((2 * (BYTE1(v234) ^ 0x44)) & 0xFFFFFF0F) + 143704711) ^ 0x88D0AEC7;
  v255 = v240 ^ (v251 - 1);
  v256 = dword_1002595B0[(v240 ^ (v251 - 1)) ^ 0x5B];
  HIDWORD(v137) = v256 ^ 0xFFFFFF8F;
  LODWORD(v137) = v256 ^ 0xF6C24D00;
  v257 = v252 ^ dword_10027C600[HIBYTE(v222) ^ 0xF5] ^ (((32 * v252) ^ 0xD0C62000)
                                                      - ((2 * ((32 * v252) ^ 0xD0C62000)) & 0xC5B7E940)
                                                      - 488901460) ^ ((v137 >> 8)
                                                                    - ((2 * (v137 >> 8)) & 0xD0AB94E6)
                                                                    - 397030797) ^ (((2 * v253) | 0xE4DD096C)
                                                                                  - v253
                                                                                  + 227638090) ^ dword_10025AE10[(v254 - ((2 * v254) & 0x804C02) + 871249409) ^ 0xB3AE5ADD];
  v258 = dword_100255640[BYTE2(v234) ^ 0x4B];
  v259 = (((32 * v258) ^ 0xD0C62000) - ((2 * ((32 * v258) ^ 0xD0C62000)) & 0x3C4A23C0) - 1641737749) ^ v258;
  HIDWORD(v137) = v259 ^ 0x49E9B5;
  LODWORD(v137) = v259 ^ 0xD6000000;
  v260 = (v137 >> 25) - ((2 * (v137 >> 25)) & 0x448B3940) + 574987424;
  HIDWORD(v137) = v260 ^ 0x33333333;
  LODWORD(v137) = v260 ^ 0x57213380;
  v261 = dword_1002595B0[((v222 ^ 0xFFFFFFFC) - 883106570 + ((2 * v222) | 0x69464616)) ^ 0x34A32340];
  v262 = ((BYTE1(v255) ^ 0xB | 0xC348E016) - (BYTE1(v255) ^ 0xB | 0x3CB71FE9) + 1018634217) ^ 0x41C8AB8E;
  v263 = ((BYTE2(v240) ^ 0x24) - ((2 * (BYTE2(v240) ^ 0x24)) & 0xFFFFFFBF) + 1330272479) ^ 0x8B4AD8CD;
  v264 = dword_100255640[((v263 | 0xD17D64E3) - (v263 | 0x2E829B1C) + 780311324) ^ 0x157DE4CD];
  v265 = dword_10025AE10[(v262 - ((2 * v262) & 0x1639775C) - 1961051218) ^ 0x99CF0F8] ^ dword_10027C600[HIBYTE(v227) ^ 0x3C] ^ (((v261 << 24) ^ 0x8F000000) - ((2 * ((v261 << 24) ^ 0x8F000000)) & 0xEFFFFFFF) + 2008364344) ^ (((v255 >> 8) & 0x41) + (BYTE1(v255) ^ 0xFFFFFF71) + (BYTE1(v255) | 0x577ED1BE) + 1) ^ ((v137 >> 7) - ((2 * (v137 >> 7)) & 0x4C9A84A6) - 1504886189);
  v266 = ((2 * (v227 ^ 0xADACE597)) | 0xF169C632) - (v227 ^ 0xADACE597) - 2025120537;
  v267 = BYTE1(v222);
  v268 = (((2 * (v267 ^ 0xB1054ABA)) & 0x42080122) - (v267 ^ 0xB1054ABA) + 1477013102) ^ 0xAE4D29D1;
  v269 = dword_1002595B0[((v266 & 0xC5180599 ^ 0x5410018) + (v266 ^ 0xCABE3DE1) - ((v266 ^ 0xCABE3DE1) & 0x57B3599)) ^ 0xDADD0EB9];
  HIDWORD(v137) = v269 ^ 0xFFFFFF8F;
  LODWORD(v137) = v269 ^ 0xF6C24D00;
  v270 = v264 ^ (((2 * v268) | 0xF963FA18) - v268 + 55444212) ^ dword_10025AE10[(((2 * (v267 ^ 0x80600965)) | 0x3B62147C)
                                                                               - (v267 ^ 0x80600965)
                                                                               + 1649341890) ^ 0x1DD1032E] ^ dword_10027C600[HIBYTE(v234) ^ 0x79] ^ (((32 * v264) ^ 0xD0C62000) - ((2 * ((32 * v264) ^ 0xD0C62000)) & 0xA3403340) - 778036802) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x73B8537C) - 1176753730);
  v271 = v265 ^ (v261 >> 8);
  v272 = HIBYTE(v265) ^ 0x26;
  v274 = (((2 * (BYTE1(v270) ^ 0x83)) & 0x42) - (BYTE1(v270) ^ 0x83) - 336398882) ^ 0xEB70C56A;
  v275 = v274 - ((2 * v274) & 0x100631C) + 346913166;
  v276 = (v250 ^ 0x6716E61A) - 1729553946 + ((2 * v250) & 0x34);
  if ((v250 ^ 0xF9B7DFFF) + 2 * v250 != -105390081)
    v276 = 0;
  v277 = (((v249 ^ 0x259C4071) - v276) ^ 0xE7) + ((2 * ((v249 ^ 0x259C4071) - v276)) & 0xCE) + 25;
  v278 = dword_1002595B0[(v277 + 1507896119 - ((2 * v277) & 0x108) + 77) ^ 0x59E0AB37];
  HIDWORD(v279) = v278 ^ 0xFFFFFF8F;
  LODWORD(v279) = v278 ^ 0xF6C24D00;
  v280 = dword_100255640[BYTE2(v270) ^ 0x74];
  v273 = dword_100255640[(((2 * (BYTE2(v271) ^ 0xD)) & 0x174) - (BYTE2(v271) ^ 0xD) + 9029) ^ 0x23D1];
  v281 = v273 ^ dword_10027C600[HIBYTE(v257) ^ 0x2A] ^ dword_10025AE10[v275 ^ 0x142F49F6] ^ (((32 * v273) ^ 0xD0C62000)
                                                                                           - ((2
                                                                                             * ((32 * v273) ^ 0xD0C62000)) & 0x7CEDC700)
                                                                                           + 1047978900) ^ v275 ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0xC0409D24) - 534753646);
  v282 = (((v249 >> 8) & 0xA4 ^ 0xB7E4C305) + ((v249 >> 8) & 0x5B) - 1) ^ 0x7770B14C;
  v283 = dword_1002595B0[((v257 ^ 0x504E94B)
                        - ((2 * (v257 ^ 0x504E94B)) & 0x8084216)
                        + 1993750283) ^ 0x73D2DE0E];
  HIDWORD(v279) = v283 ^ 0xFFFFFF8F;
  LODWORD(v279) = v283 ^ 0xF6C24D00;
  v284 = HIBYTE(v249) ^ 0x25;
  v285 = dword_10027C600[v272] ^ v280 ^ dword_10025AE10[(v282 - ((2 * v282) & 0x800880A0) - 400275120) ^ 0x28B03B28] ^ (((32 * v280) ^ 0xD0C62000) - ((2 * ((32 * v280) ^ 0xD0C62000)) & 0x167CE000) - 1958842347) ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0x56A46C9E) + 726808143) ^ ((BYTE1(v249) ^ 0x5600840) + ((v249 >> 8) & 0xDA ^ 0x9A9FB79A) - ((BYTE1(v249) ^ 0x5600840) & 0x10008DA));
  v286 = dword_100255640[(((2 * (BYTE2(v249) ^ 0x581887B8)) | 0xC52B00C4) - (BYTE2(v249) ^ 0x581887B8) + 493518750) ^ 0xBA8D075E];
  v287 = dword_1002595B0[v271 ^ 0x67];
  HIDWORD(v279) = v287 ^ 0xFFFFFF8F;
  LODWORD(v279) = v287 ^ 0xF6C24D00;
  v288 = v286 ^ dword_10027C600[HIBYTE(v270) ^ 0xA2] ^ dword_10025AE10[BYTE1(v257) ^ 0x35] ^ (((2 * (BYTE1(v257) ^ 0xB3)) & 0x1AC)
                                                                                            - (BYTE1(v257) ^ 0xB3)
                                                                                            + 2089) ^ (((32 * v286) ^ 0xD0C62000) - ((2 * ((32 * v286) ^ 0xD0C62000)) & 0xB3674A80) + 1504945481) ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0x35709F1A) - 1699197043);
  v289 = ((HIWORD(v257) & 0x2E ^ 0x1F565E21) + (HIWORD(v257) & 0xD1) - 1) ^ 0x15575E9E;
  v290 = dword_100255640[(((2 * v289) & 0x1402007C) - v289 + 1891680705) ^ 0x7AC1C1F2];
  v291 = (((v271 >> 8) & 0x11 ^ 0xD2637B30) + ((v271 >> 8) & 0xCC ^ 0x8D) - 1) ^ 0xD6C27B35;
  v292 = ((v271 >> 8) & 2)
       + ((v271 >> 8) & 0x22 ^ 0x2203402F)
       - (((v271 >> 8) & 0x22 ^ 0x2203402F) & 0x2004003)
       - 871888944;
  v293 = ((BYTE1(v271) ^ 0x8C) - ((2 * (BYTE1(v271) ^ 0x8C)) & 0x10A) - 535402875) ^ 0xC010639D;
  v294 = (((2 * v291) & 0x84000B4) - v291 + 198645669) & 0x661A9CDD ^ 0x9FF777FF;
  v295 = dword_1002595B0[(((2 * (v270 ^ 0x10A80EC)) & 0x1014A)
                        - (v270 ^ 0x10A80EC)
                        + 1191861082) ^ 0x4600DB89];
  HIDWORD(v279) = v295 ^ 0xFFFFFF8F;
  LODWORD(v279) = v295 ^ 0xF6C24D00;
  v296 = v290 ^ dword_10027C600[v284] ^ v292 ^ (((32 * v290) ^ 0xD0C62000)
                                              - ((2 * ((32 * v290) ^ 0xD0C62000)) & 0x7712C780)
                                              - 1148623912) ^ ((v279 >> 8)
                                                             - 1835160881
                                                             - ((2 * (v279 >> 8)) & 0x253B6972)
                                                             + 2538) ^ dword_10025AE10[((v293 | 0x5560F645)
                                                                                      - (v293 | 0xAA9F09BA)
                                                                                      - 1432417862) ^ 0x7566F350] ^ (v294 + 1067996247 + ((2 * v294) & 0x4C1028A8 ^ 0xCCBF7FFB));
  v297 = dword_100255640[BYTE2(v285) ^ 0xE4];
  v298 = (((2 * (v296 ^ 0x28)) | 0xFBE79B48) - (v296 ^ 0x28) + 34353756) ^ 0xD9F32C84;
  v299 = dword_1002595B0[((v298 | 0xFC122EEE) - (v298 | 0x3EDD111) + 65917201) ^ 0xD812CFC0];
  HIDWORD(v279) = v299 ^ 0xFFFFFF8F;
  LODWORD(v279) = v299 ^ 0xF6C24D00;
  v300 = dword_10027C600[HIBYTE(v281) ^ 0xF] ^ v297 ^ dword_10025AE10[(((2 * (BYTE1(v288) ^ 0x42150060)) | 0xBE8A279A)
                                                                     - (BYTE1(v288) ^ 0x42150060)
                                                                     + 549121075) ^ 0x9D501331] ^ (((32 * v297) ^ 0xD0C62000)
                                                                                                 - ((2 * ((32 * v297) ^ 0xD0C62000)) & 0x1792DBC0)
                                                                                                 + 197750271) ^ ((BYTE1(v288) ^ 0xB001008E | 0xB7239A54) - (BYTE1(v288) ^ 0xB001008E | 0x48DC65AB) + 1222403499) ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0xC426C6) - 2141056157);
  v301 = ((v296 >> 8) & 0x40) + (BYTE1(v296) ^ 0xFFFFFF58) + (BYTE1(v296) | 0x73779FBF) + 1;
  v302 = dword_100255640[((HIWORD(v288) & 0x65 ^ 0x113AC024) + (HIWORD(v288) & 0x9A ^ 0x8240001B) - 1) ^ 0x937AC063];
  v303 = (((v296 >> 8) & 0x10) + (BYTE1(v296) ^ 0xFFFFFF1D) + (BYTE1(v296) | 0x9A6422EF) + 1) ^ 0xB216240F;
  v304 = dword_1002595B0[(((2 * (v281 ^ 0x47F9CC93)) | 0xCBDCC2E2)
                        - (v281 ^ 0x47F9CC93)
                        + 437362319) ^ 0xA217AD6E];
  v305 = ((v304 << 24) ^ 0x8F000000) - ((2 * ((v304 << 24) ^ 0x8F000000)) & 0x2000000) - 2120525093;
  v306 = dword_10027C600[HIBYTE(v285) ^ 0xF3] ^ v302 ^ dword_10025AE10[((v303 | 0xADA654FB)
                                                                      - (v303 | 0x5259AB04)
                                                                      + 1381608196) ^ 0x85D45280] ^ (v304 >> 8);
  v307 = dword_100255640[(((2 * (BYTE2(v296) ^ 0xBE)) | 0xAE4EF542) - (BYTE2(v296) ^ 0xBE) + 685278559) ^ 0xD7277AD5];
  v308 = v306 ^ (((32 * v302) ^ 0xD0C62000) - ((2 * ((32 * v302) ^ 0xD0C62000)) & 0x285A3C0) + 21156329) ^ ((v301 & 0xB7A9E709 ^ 0x9489C000) + (v301 ^ 0x63723F19) - ((v301 ^ 0x63723F19) & 0xB7A9E709));
  v309 = v305 ^ v308 ^ 0x6D51162A;
  v310 = ((BYTE1(v281) ^ 0xD4) + ((v281 >> 8) & 0xBC ^ 0x5F57AD28) - ((BYTE1(v281) ^ 0xD4) & 0xBC)) ^ 0xFA5FA9DD;
  v311 = BYTE1(v281) ^ 0xC1;
  v312 = dword_100255640[BYTE2(v281) ^ 0xB8];
  v313 = dword_1002595B0[((v285 ^ 0xDBB3D1FC | 0x31A882F8)
                        - (v285 ^ 0xDBB3D1FC | 0xCE577D07)
                        - 833127161) ^ 0xEA1B53F8];
  v314 = v307 ^ dword_10027C600[HIBYTE(v288) ^ 0xB9] ^ dword_10025AE10[v311] ^ (((32 * v307) ^ 0xD0C62000)
                                                                              - ((v307 << 6) & 0x4E020E00)
                                                                              + 654378757) ^ (v310
                                                                                            + 2022541751
                                                                                            - ((2 * v310) & 0x40100F54)
                                                                                            + 3571) ^ (v313 >> 8) ^ (((v313 << 24) ^ 0x8F000000) - ((2 * ((v313 << 24) ^ 0x8F000000)) & 0x55555555) + 713699365);
  v315 = ((v285 >> 7) & 0x1CE) - BYTE1(v285) - 1368804840;
  v316 = ((v288 ^ 0xFFFFFFEC) + 1005155918 + ((2 * v288) | 0x882D1366)) ^ 0x50FEC811;
  v317 = dword_1002595B0[(((2 * v316) | 0x7E7D469E) - v316 - 1061069647) ^ 0xABD6E21E];
  HIDWORD(v279) = v317 ^ 0xFFFFFF8F;
  LODWORD(v279) = v317 ^ 0xF6C24D00;
  v318 = dword_10027C600[HIBYTE(v296) ^ 0x7D] ^ dword_10025AE10[((v315 & 0x4400164 ^ 0x100164)
                                                               + (v315 ^ 0x7EE90209)
                                                               - ((v315 ^ 0x7EE90209) & 0x803164)) ^ 0xD4508110] ^ BYTE1(v285) ^ v312 ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0x3DE54BE) - 2115032481) ^ (((32 * v312) ^ 0xD0C62000) - ((2 * ((32 * v312) ^ 0xD0C62000)) & 0x69FF1200) + 889162013);
  v319 = dword_10027D7C0[((HIWORD(v308) & 1 | 0x200034) + (HIWORD(v308) & 0xFE ^ 0x3016C80F) + 971) ^ 0x3036CCD3];
  HIDWORD(v279) = v319 ^ 6;
  LODWORD(v279) = v319 ^ 0x4D943000;
  v320 = ((BYTE1(v314) ^ 0x47 | 0x28FDB5AD) - (BYTE1(v314) ^ 0x47 | 0xD7024A52) - 687715758) ^ 0x2E6F159D;
  v321 = HIBYTE(v300) ^ dword_100255240[HIBYTE(v300) ^ 0x47] ^ dword_10027BB80[(((2 * v320) & 0x26920E60)
                                                                              - v320
                                                                              + 1823930575) ^ 0x6A245880] ^ 0xF8D04879 ^ ((v279 >> 10) - ((2 * (v279 >> 10)) & 0x590F3CA) - 2100790811);
  v322 = ((2 * (v321 & 0xA1A9E454 ^ 0x1092014)) | 0x4D565802) - (v321 & 0xA1A9E454 ^ 0x1092014) + 1498731519;
  v323 = ((v322 & 0x78DDA48 ^ 0x1858249 | v322 & 0xE87225B4) - 1) ^ 0x7876E0C | (((2 * (v321 & 0x5E561BAB ^ 0xAC583986)) | 0x8EE4D128)
                                                                               - (v321 & 0x5E561BAB ^ 0xAC583986)
                                                                               + 948803436) ^ 0x6F7A5890;
  v324 = dword_100279870[v318 ^ 0xE3];
  HIDWORD(v279) = v324 ^ 0xBE34;
  LODWORD(v279) = v324 ^ 0x72AC0000;
  v325 = (v279 >> 18) - ((2 * (v279 >> 18)) & 0x3914C0F0) - 1668652936;
  v326 = ((2 * ((v325 >> 2) & 0x21D899CA ^ 0x20909842)) & 0x40A02010)
       - ((v325 >> 2) & 0x21D899CA ^ 0x20909842)
       + 1602857430;
  v327 = v325 ^ BYTE1(v314) ^ ((v326 & 0x6D09262A ^ 0x6806262D | v326 & 0x92F0D9D0) - 1) ^ (v323
                                                                                          - ((2 * v323) & 0x733CB426)
                                                                                          + 966679059);
  v328 = HIBYTE(v309) ^ 0x9FD6542B;
  v329 = dword_100255240[HIBYTE(v309) ^ 0x8A] ^ 0x5602D4BC;
  v330 = (v328 & v329) - ((2 * (v328 & v329)) & 0x1A042950);
  v331 = ((v328 + v329) ^ 0xFE1EDD75)
       + ((2 * (v328 + v329)) & 0xFC3DBAEA)
       + ((2 * v330 - 1710986416) ^ 0x1B05C941)
       + ((2 * (2 * v330 - 1710986416)) & 0xFDFCBBDC ^ 0xCBF76D7F);
  v332 = v331 + 1 - 2 * ((v331 + 14647419) & 0x2480641F ^ (v331 + 1) & 1) - 1520442216;
  v333 = dword_10027D7C0[BYTE2(v314) ^ 0xB2];
  HIDWORD(v279) = v333 ^ 6;
  LODWORD(v279) = v333 ^ 0x4D943000;
  v334 = (v279 >> 10) - ((2 * (v279 >> 10)) & 0xD748F04) + 112871298;
  v335 = ((v300 ^ 0xDE | 0x70D5945) - (v300 ^ 0xDE | 0xF8F2A6BA) - 118315334) ^ 0xB7D69C4;
  v336 = dword_100279870[((v335 | 0x41BA7EFC) - (v335 | 0xBE458103) - 1102741245) ^ 0x4DCA4E61];
  HIDWORD(v279) = v336 ^ 0xBE34;
  LODWORD(v279) = v336 ^ 0x72AC0000;
  v337 = (v279 >> 18) - ((2 * (v279 >> 18)) & 0x6777225E) + 867930415;
  v338 = (((2 * ((v337 >> 2) & 0x21D899CA ^ 0x20C810C2)) & 0x40B00394)
        - ((v337 >> 2) & 0x21D899CA ^ 0x20C810C2)
        - 1685791199) ^ 0x19824E0D;
  v339 = dword_10027D7C0[BYTE2(v318) ^ 0x1B];
  v340 = v334 ^ dword_10027BB80[((BYTE1(v318) ^ 0xF1) - 451744019 - ((v318 >> 7) & 8) + 1815) ^ 0xE512F6F3] ^ (((2 * (BYTE1(v318) ^ 0xFE)) | 0x4108C71E) - (BYTE1(v318) ^ 0xFE) + 1601936497) ^ v337 ^ v332 ^ ((v338 | 0x49B3312A) - (v338 | 0xB64CCED5) - 1236480299);
  HIDWORD(v279) = v339 ^ 6;
  LODWORD(v279) = v339 ^ 0x4D943000;
  v341 = (((2 * (BYTE1(v300) ^ 0xC7)) & 0xB6) - (BYTE1(v300) ^ 0xC7) + 1460073380) ^ 0x7706F1E4;
  v342 = BYTE1(v300) ^ 0x50;
  LOBYTE(v337) = (v340 & 0x12 ^ 6 | 0x6E) - (v340 & 0x12 ^ 6 | 0x91) - 111;
  v343 = dword_100279870[v308 ^ 5];
  v344 = ((((v343 ^ 0x72ACBE34u) >> (v337 ^ 0x78))
         - ((2 * ((v343 ^ 0x72ACBE34u) >> (v337 ^ 0x78))) & 0x7E94EFE)
         + 66365311) ^ 0x3F4A77F) >> (v337 ^ 0x6A);
  v345 = (v344 - ((2 * v344) & 0x368D6374) - 1689865798) ^ 0x9B46B1BA | (((v343 << 14) ^ 0x2F8D0000)
                                                                       - ((2 * ((v343 << 14) ^ 0x2F8D0000)) & 0x64910000)
                                                                       - 1303869637) ^ 0xB248873B;
  v346 = (HIWORD(v300) & 0x74 ^ 0x73C3DB65) + (HIWORD(v300) & 0x8B) - 1;
  v347 = dword_10027D7C0[((v346 & 0x2A1 ^ 0x802CD080) + (v346 & 0x5E ^ 0x8800055) - 1) ^ 0x88ACD252];
  v348 = v345 - ((2 * v345) & 0xEF62D6A2) - 139367599;
  v349 = ((v348 >> 2) & 0x21D899CA ^ 0x881148) - ((2 * ((v348 >> 2) & 0x21D899CA ^ 0x881148)) & 0x40B01290) - 1502073000;
  v350 = ((HIBYTE(v314) ^ 0x80000089) - 1590621635 + (~(2 * (HIBYTE(v314) ^ 0x80000089)) | 0xFFFFFF87)) ^ dword_100255240[HIBYTE(v314) ^ 0xAC] ^ dword_10027BB80[v342] ^ (v341 - ((2 * v341) & 0x40002E3C) + 1735620382) ^ ((v279 >> 10) - 617202638 - ((2 * (v279 >> 10)) & 0xB66C90D6) + 3129) ^ v348 ^ ((v349 & 0xD2F7CF40 ^ 0x50C38801 | v349 & 0x2D0830BA) - 1);
  v351 = (BYTE1(v309) ^ 0x44) - ((2 * (BYTE1(v309) ^ 0x44)) & 0x5E) - 1268961489;
  v352 = BYTE1(v309) ^ 0x165D86EC;
  v353 = dword_10027BB80[(((((((v309 >> 8) & 0x4C) + v352) | 0x49205000) - (v352 & 0x1650824C)) & 0x539F ^ 0x1490231B)
                        + ((((((v309 >> 8) & 0x4C) + v352) | 0x49205000) - (v352 & 0x1650824C)) ^ 0xE929D8A4)
                        - (((((((v309 >> 8) & 0x4C) + v352) | 0x49205000) - (v352 & 0x1650824C)) ^ 0xE929D8A4) & 0x4039F)) ^ 0xB490FFC6];
  v354 = HIBYTE(v318) ^ (v347 >> 10) ^ dword_100255240[HIBYTE(v318) ^ 0x11] ^ (((v347 << 22) ^ 0x1800000)
                                                                             - ((2 * ((v347 << 22) ^ 0x1800000)) & 0xC1000000)
                                                                             + 1621307158);
  v355 = (v353 ^ 0x163C5814) + (v353 ^ 0x40A76DFD ^ v354) + 1;
  v356 = (v354 ^ ((v354 ^ 0x569B35E9) - ((2 * (v354 ^ 0x569B35E9) + 2) & 0x3A627D3E) - 1657717088) ^ (v355 - ((2 * v355) & 0x559581CE) + 717930727) ^ 0x1E9F346E)
       + (v353 ^ 0x163C5814);
  v357 = v356 - ((2 * v356) & 0xFDF20A4C) + 2130248998;
  v358 = dword_100279870[v314 ^ 0x2C];
  v359 = (v358 << 8) ^ 0xACBE3400;
  v360 = (v359 - ((2 * v359) & 0x3D03FE00) - 1635647672) & 0xFC000000 ^ 0x960120B9;
  v361 = (v359 - ((2 * v359) & 0x1F69C00) + 50023983) & 0x3FFFF00 ^ 0x3F85200;
  v362 = (((2 * v360) & 0x14000110) - v360 + 1947728241) ^ 0x7E16D9C8 | HIBYTE(v358) ^ 0x72;
  v363 = (v362 - ((2 * v362) & 0xB8000DD0) + 1589524200) ^ 0x5EBE36E8 | ((v361 | 0x625A4F3B)
                                                                       - (v361 | 0x9DA5B0C4)
                                                                       - 1650085692) ^ 0x6359533B;
  v364 = v363 - ((2 * v363) & 0x1C11136C) - 1912043082;
  HIDWORD(v279) = v364 ^ 0x37B27AC;
  LODWORD(v279) = v364 ^ 0x5C000000;
  v365 = (v279 >> 26) - ((2 * (v279 >> 26)) & 0x12131B38) + 151621020;
  v366 = v357 ^ ((v351 & 0x10403996 ^ 0xA021090) + (v351 ^ 0x957C2D2F) - ((v351 ^ 0x957C2D2F) & 0x20213996)) ^ v365 ^ (((((v365 >> 2) & 0x21D899CA ^ 0xAE7CF71D) - 1) & 0x100000 | (((v365 >> 2) & 0x21D899CA ^ 0xAE7CF71D) - 1) & 0x21C899CA ^ 0x4AE9C87F) + 511);
  v367 = STACK[0xB28];
  v368 = (_BYTE *)STACK[0xB28];
  *(_BYTE *)(v367 + 10) = byte_1002665C0[((BYTE1(v350) ^ 0x902A1FE | 0x216E8663)
                                        - (BYTE1(v350) ^ 0x902A1FE | 0xDE91799C)
                                        - 560891492) ^ 0x286C2775] ^ 0x15;
  v369 = ((2 * (BYTE1(v366) ^ 0x4A)) & 0xFFFFFF07) - (BYTE1(v366) ^ 0x4A) + 2004443772;
  *(_BYTE *)(v367 + 14) = byte_1002665C0[((v369 & 0x4168037A ^ 0x80028502)
                                        + (v369 ^ 0x5F6962F8)
                                        - ((v369 ^ 0x5F6962F8) & 0x2010037A)) ^ 0xC96A87F0] ^ 0x86;
  v370 = (((2 * (BYTE2(v327) ^ 0xB3)) & 0x1F0) - (BYTE2(v327) ^ 0xB3) - 1461751033) ^ 0xA4575237;
  *(_BYTE *)(v367 + 1) = byte_100264C80[(v370 - ((2 * v370) & 0x800002C) - 2028503018) ^ 0x8B9FA14ALL] ^ 0x86;
  *(_BYTE *)(v367 + 13) = byte_100264C80[(((2 * (BYTE2(v366) ^ 0x621AA)) | 0xB05A0E98)
                                        - (BYTE2(v366) ^ 0x621AA)
                                        - 1479345996) ^ 0x582B2629] ^ 0x86;
  LOBYTE(v357) = ((v350 ^ 0x38 | 0x98) - (v350 ^ 0x38 | 0x67) + 103) ^ 0xDA;
  LOBYTE(v370) = byte_10025C140[((v350 & 6 | 0xA0020000 | ((v350 & 0x2F ^ 0xF8) - (v350 & 0xD0)) & 0xFFFFFFF9 ^ 0x48C199E9)
                               + 401408) ^ 0xE8C9B989];
  LOBYTE(v357) = ((2 * v357) & 0x74) - v357 + 69;
  LOBYTE(v367) = ((v357 ^ 0x61) & (v370 ^ 0x1A)) - ((2 * ((v357 ^ 0x61) & (v370 ^ 0x1A))) & 0x1C);
  LOBYTE(v370) = (v370 ^ v357 ^ 0x7B) + ((2 * v367 + 28) ^ 0x43) + ((2 * (2 * v367 + 28)) & 0xBF ^ 0x38) - 95;
  v368[11] = v370 - ((2 * v370) & 0x4C) + 38;
  LOBYTE(v370) = byte_10027B560[HIBYTE(v327) ^ 0xCELL];
  *v368 = (v370 - ((2 * v370 + 28) & 0x3E) - 19) ^ 0x1A;
  v371 = ((BYTE2(v340) ^ 0x9422C2) + (HIWORD(v340) & 0xE4 ^ 0xB943C124) - ((BYTE2(v340) ^ 0x9422C2) & 0x8022E4)) ^ 0x46A83EFE;
  v372 = (((2 * (BYTE2(v340) ^ 0x79)) | 0x354FFE78) - (BYTE2(v340) ^ 0x79) + 1163395268) & 0x3FFFFFFF;
  v373 = v372 ^ (v371 - ((2 * v371 + 76) & 0xCC8D2EA2) + 1715902327) ^ 0x8518FEE ^ ((v372 ^ 0xC55800B8)
                                                                                  - ((2 * (v372 ^ 0xC55800B8) + 2) & 0xA961CFF0)
                                                                                  + 1420879865);
  v368[5] = byte_100264C80[(v373 - 1931922883 + (~(2 * v373 + 74) | 0xE64D9AFD) + 106) ^ 0x8CD9323D] ^ 0x3D;
  v368[2] = byte_1002665C0[(((v327 >> 8) & 0xCF ^ 0x1C6) + ((v327 >> 8) & 0x30 ^ 0x11) - 1) ^ 0x11ALL] ^ 0xDF;
  v368[9] = byte_100264C80[(((2 * (BYTE2(v350) ^ 0xD6)) | 0x983F51D2) - (BYTE2(v350) ^ 0xD6) - 1277143273) ^ 0x4C1FA85F] ^ 0x20;
  LOBYTE(v373) = byte_10027B560[HIBYTE(v366) ^ 0x6DLL];
  v350 >>= 24;
  v368[12] = (v373 - ((2 * v373 - 100) & 0x96) + 25) ^ 0xA2;
  v374 = (v350 ^ 0xFFFFFF1D) + 1;
  v350 ^= 0x51u;
  v375 = v350 + (v374 ^ 0x2F6FBFEE) + ((2 * v374) & 0x5EDF7FDC) - 795852782;
  v376 = ((v375 - ((2 * v375) & 0x2528C1E6) - 1835769613) ^ 0x6D6B9F0D) + v350;
  LOBYTE(v376) = byte_10027B560[(v376 - ((2 * v376) & 0x443A76A4) + 572341074) ^ 0x221D3BA1];
  v368[8] = (v376 - ((2 * v376 - 100) & 0x90) + 22) ^ 0xEE;
  v377 = (v340 ^ 0x8A) + (v340 & 0x93 ^ 0x35A4BF11) - ((v340 ^ 0x8A) & 0x93);
  LOBYTE(v377) = (byte_10025C140[((v377 & 0x31204709 ^ 0x88184501)
                                + (v377 ^ 0x31223A0A)
                                - ((v377 ^ 0x31223A0A) & 0x4004709)) ^ 0xB9BEC23ELL] ^ 0x1A)
               + (v340 ^ 0xE2);
  v368[7] = (v377 - ((2 * v377) & 0x9A) - 51) ^ 0x6F;
  v368[6] = byte_1002665C0[(((2 * (BYTE1(v340) ^ 0x320C11B2)) & 0x102306) - (BYTE1(v340) ^ 0x320C11B2u) - 149658500) ^ 0xC5187568] ^ 0x2F;
  LOBYTE(v377) = (byte_10025C140[((v327 ^ 0x26C480B8)
                                + (v327 & 0xB5 ^ 0x99105B05)
                                - ((v327 ^ 0x26C480B8) & 0x480B5)) ^ 0xBFD05B89] ^ 0x1A)
               + (v327 ^ 0x42);
  v368[3] = (v377 - ((2 * v377) & 0x56) + 43) ^ 0xE1;
  v378 = (v366 & 0xC3 ^ 0x56C7DF81) + (v366 & 0x3C ^ 0x31) - 1;
  LOBYTE(v378) = (v366 ^ 0xB7)
               + (byte_10025C140[((v378 & 0x2417674 ^ 0x200034)
                                + (v378 ^ 0xC2CBFFC3)
                                - ((v378 ^ 0xC2CBFFC3) & 0x10043674)) ^ 0x86695677] ^ 0x1A);
  v368[15] = (v378 - ((2 * v378) & 0x48) - 92) ^ 0xD7;
  LOBYTE(v378) = byte_10027B560[HIBYTE(v340) ^ 0xF5];
  v368[4] = (v378 - ((2 * v378 - 100) & 0xD0) - 74) ^ 0xED;
  v379 = STACK[0x680] - 114;
  v380 = STACK[0x688] + 637049731;
  v381 = v379 ^ 0xFFFFFFFFDA076559;
  v382 = 1755343967
       * (((v380 + v381) ^ *(_DWORD *)(qword_100306950 + (int)(dword_100306B58 & 0xC7090E2C))) & 0x7FFFFFFF);
  *(_BYTE *)(v380 + v381) ^= byte_10027E7C0[((_BYTE)v381 - 125) & 0xF | (16
                                                                       * ((1755343967 * (v382 ^ HIWORD(v382))) >> 24))] ^ (95 * (v382 ^ BYTE2(v382)));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (int)v379) - 12))();
}

void sub_100155DC0()
{
  JUMPOUT(0x100155D4CLL);
}

void sub_100155DC8()
{
  JUMPOUT(0x100155DFCLL);
}

uint64_t sub_100155E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;

  v5 = v3 + 83306269;
  v6 = STACK[0x96C];
  STACK[0x8A0] -= 640;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (v5 ^ 0x4F72CFC ^ (1193
                                                                                          * (((((v6 - v5) | (v5 - v6)) >> (((v5 + 34) ^ 0xA) + ((v5 + 31) | 0x10))) & 1) == 0)))))(a1, a2, a3, 4294924393);
}

void sub_100155EF8()
{
  _DWORD *v0;
  uint64_t v1;

  v0 = (_DWORD *)STACK[0x830];
  STACK[0x6A8] = STACK[0x830] + 40;
  v0[26] = 605314902;
  v0[27] = 1644515966;
  v0[28] = -350341328;
  v0[29] = 1670823864;
  v0[30] = 350341327;
  v0[31] = -1670823865;
  v0[33] = 1279171884;
  v0[34] = -366034006;
  v1 = (LODWORD(STACK[0x88C]) - 1947712291);
  LODWORD(STACK[0x86C]) = v1;
  STACK[0x928] = (v1 | ((unint64_t)(v1 < 0x5C2E07) << 32)) + 0x33EC7F25B4F85B6BLL;
  JUMPOUT(0x100155FCCLL);
}

void sub_100156050()
{
  JUMPOUT(0x100156058);
}

uint64_t sub_1001560E4@<X0>(int a1@<W2>, int a2@<W7>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  _BOOL4 v12;

  v9 = a2 - 974;
  v10 = a1 + 1;
  v11 = *(_BYTE *)(STACK[0x9A0] + (a1 - 603198772));
  *(_BYTE *)(v3 + (a3 - 518144652)) = v11 - ((2 * v11) & 0x62) - 79;
  v12 = v10 + v4 < v6;
  if (v6 < v7 != v10 + v4 < v5)
    v12 = v6 < v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * ((1619 * !v12) ^ v9)) - 8))(3776822644);
}

void sub_100156180()
{
  JUMPOUT(0x10015611CLL);
}

uint64_t sub_100156190(uint64_t a1, int a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;

  v8 = a2 + v5;
  v9 = (*(_DWORD *)(v2 + 68) ^ v3) + v8 + v3 - (v4 & (2 * ((*(_DWORD *)(v2 + 68) ^ v3) + v8)));
  *(_DWORD *)(v2 + 68) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((v9 ^ v3) < v8) * (v6 - 424)) ^ v6)) - 12))();
}

uint64_t sub_1001561D4()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 64) = *(_DWORD *)(v0 + 64) + ((v1 + 748) | 0x209) - 1740;
  return ((uint64_t (*)(void))STACK[0x918])();
}

uint64_t sub_1001561FC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int v8;

  v2 = (v0 - 1734);
  v3 = STACK[0xA70];
  v4 = STACK[0x6A8];
  STACK[0x780] = *(_QWORD *)(v1 + 8 * (v0 - 1680)) + (v2 ^ 0xFFFFFFFFFFFFFFFBLL);
  v5 = (v0 + 1907619550) & 0x8E4C07FD;
  STACK[0x758] = v4;
  v6 = STACK[0x8A0];
  v7 = (char *)&STACK[0xBB0] + STACK[0x8A0];
  STACK[0x6C0] = (unint64_t)v7;
  STACK[0x8A0] = v6 + (v5 ^ 0x589);
  STACK[0x7D0] = v3;
  STACK[0xA38] = *(_QWORD *)(v1 + 8 * (int)v2);
  STACK[0x720] = v4;
  STACK[0x920] = (unint64_t)v7;
  v8 = ((2 * *(_DWORD *)(v4 + 68)) & 0x62 ^ 0x60) + (*(_DWORD *)(v4 + 68) & ((v5 - 766) ^ 0x294) ^ 0xF6B7EFCF);
  *(_BYTE *)(v4 + (v8 + 155717647)) = 49;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((23
                                               * (v8 + (((_DWORD)v5 + 1982751316) & 0x89D19ECF ^ 0x948091A) > 0xFFFFFFC7)) ^ v5))
                            - 4))();
}

uint64_t sub_10015648C()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v5;
  int v9;

  v2 = STACK[0x718];
  v3 = STACK[0x718] + 16;
  v5 = STACK[0x718] < (unint64_t)&unk_100254870 && v3 > (unint64_t)&unk_100254860;
  if (v2 < (unint64_t)&unk_100254840 && v3 > (unint64_t)byte_100254830)
    v5 = 1;
  if (v2 < (unint64_t)&unk_100256DD0 && v3 > (unint64_t)byte_100256DC0)
    v5 = 1;
  v9 = v2 < (unint64_t)&unk_10025A0E0 && v3 > (unint64_t)byte_10025A0D0 || v5;
  return (*(uint64_t (**)(void))(v1 + 8 * ((115 * ((((v0 - 238) ^ v0 ^ v9) & 1) == 0)) ^ v0)))();
}

uint64_t sub_10015652C@<X0>(int8x16_t *a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unsigned int v6;

  v3 = (v1 ^ 0x11E) - 1074;
  *a1 = veorq_s8(*a1, (int8x16_t)xmmword_1002547B0);
  v4 = (v3 + 712) | 0x120;
  v5 = STACK[0x940];
  *(_QWORD *)(v5 + 64) = 0x6205527E24145F56;
  *(_QWORD *)(v5 + 72) = 0x6396BFB8EB1E3730;
  *(_QWORD *)(v5 + 80) = 0x9C69404714E1C8CFLL;
  *(_QWORD *)(v5 + 92) = 0xEA2EC3AA4C3E9D2CLL;
  STACK[0x9A8] = *(_QWORD *)(v2 + 8 * v3);
  STACK[0xAA0] = v5;
  LODWORD(STACK[0x894]) = -289289346;
  STACK[0x710] = (unint64_t)&unk_10025BC14;
  v6 = ((2 * ((v4 - 1811858719) & 0x6BFEC7FD ^ 0x69A) - 52) & (2 * *(_DWORD *)(v5 + 68)) ^ 0x78)
     + (*(_DWORD *)(v5 + 68) & 0x3F ^ 0xD936EBC3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1310
                                          * (((v6 + 650712083) ^ 0xBBDF6D6A)
                                           + 1142985302
                                           + ((2 * (v6 + 650712083)) & 0x77BEDAD4) < 0xFFFFFFC0)) ^ v4))
                            - 8))();
}

uint64_t sub_1001565C8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(a1 + v4 - 2095062103) ^= *(_BYTE *)(v3 + v4 - 2095062103) ^ 0x66;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 + 1 != v2 + 16) * (v1 ^ 0x526)) ^ v1)))();
}

void sub_100156610()
{
  JUMPOUT(0x10015654CLL);
}

uint64_t sub_1001566A4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x756)) - 4))(0x5048710326010761, (v0 ^ 0x756u) - 345);
}

void sub_10015677C()
{
  JUMPOUT(0x100156728);
}

uint64_t sub_100156788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  char v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((((v3 - 278) | 0x50C) - 166) ^ (v3 + 717))
                                                                         * (v4 == 14)) ^ v3)))(a1, a2, a3, 4294924393);
}

uint64_t sub_1001567C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  int v8;
  uint64_t v9;

  STACK[0x8A0] += 16;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((1980 * (((a8 + 8) & 0xF) == (((((v8 - 726) | 0x202) + 1122504512) ^ 0x42E81253) & (2 * (a8 + 8))))) ^ v8)) - 8))(a1, a2, a3, a4, a5, a6, a7, 3172462002);
}

uint64_t sub_10015684C()
{
  _BYTE *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;

  STACK[0x688] = (unint64_t)&STACK[0xBB0] + v2;
  *(_OWORD *)((char *)&STACK[0xBB0] + v2) = xmmword_1002547A0;
  v4 = 1755343967
     * ((v0 ^ *(_DWORD *)(qword_100306950 + (dword_100306B58 & (v1 - 955708643)))) & 0x7FFFFFFF);
  *((_BYTE *)&STACK[0x1600] + STACK[0xAD0]) = byte_10027E7C0[16 * (((v4 ^ HIWORD(v4)) * (v1 + 1755343184)) >> 24)] ^ *v0 ^ (95 * (v4 ^ BYTE2(v4)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v1 - 9) | 9)) - 4))();
}

void sub_100156928()
{
  JUMPOUT(0x1001568C0);
}

uint64_t sub_100156934()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;

  STACK[0xAD0] = v1 + 32;
  STACK[0xB60] = v0;
  STACK[0xB68] = v3;
  STACK[0xB80] = v0;
  STACK[0xB70] = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (2 * (STACK[0x688] != v0)))) - 4))();
}

uint64_t sub_1001569BC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 - 86) ^ 0x23A) * (v0 != 0)) ^ v1)) - 12))();
}

uint64_t sub_1001569E4()
{
  char *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  char *v4;
  char v5;

  v4 = (char *)&STACK[0x1600] + v1;
  *v4 = *v0;
  v4[1] = v0[1];
  v4[2] = v0[2];
  v4[3] = v0[3];
  v4[4] = v0[4];
  v4[5] = v0[5];
  v4[6] = v0[6];
  v4[7] = v0[7];
  v4[8] = v0[8];
  v4[9] = v0[9];
  v4[10] = v0[10];
  v4[11] = v0[11];
  v4[12] = v0[12];
  v4[13] = v0[13];
  v4[14] = v0[14];
  v5 = v0[15];
  STACK[0x688] = (unint64_t)v4;
  v4[15] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 - 516) ^ 0x23A) * (v0 != 0)) ^ (v2 - 430))) - 12))();
}

uint64_t sub_100156AA0()
{
  int v0;
  int v1;
  uint64_t v2;
  BOOL v4;

  v4 = (v1 & 0xF ^ 0x20D40E) - ((2 * (v1 & 0xF ^ 0x20D40E)) & 0x41A812) != -2151420
    || v1 == ((v0 - 149240930) & 0x8E53CEF) + 537001315;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((156 * (((v0 - 86) ^ v4) & 1)) ^ v0)) - 12))();
}

uint64_t sub_100156B20()
{
  int v0;
  int v1;
  unsigned int v2;
  unint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x670]) = v0;
  LODWORD(STACK[0x3D4]) = v1;
  v3 = 193 * (v2 ^ 0x4C5);
  STACK[0xB78] = 0;
  v4 = malloc(0x408uLL);
  STACK[0xB88] = (unint64_t)v4;
  v5 = malloc(0x408uLL);
  STACK[0xB78] = (unint64_t)v5;
  if (v4)
    v7 = v5 == 0;
  else
    v7 = 1;
  v8 = !v7;
  v9 = (uint64_t)*(&off_1002C8B50 + ((v8 * ((v2 ^ 0x4C5) + 631)) ^ v2));
  STACK[0x678] = v3;
  return ((uint64_t (*)(void *, uint64_t))(v9 - v3 + 378))(v5, v6);
}

#error "100156B90: too big function (funcsize=0)"

void sub_1001670EC()
{
  JUMPOUT(0x100166AA8);
}

uint64_t sub_1001670F8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((*(unsigned int *)(STACK[0x698] + 112) ^ 0x76F586F3A50F3C40)
                                           - 0x76F586F30358CC33
                                           + ((2 * (*(_DWORD *)(STACK[0x698] + 112) ^ 0x5910D29Eu)) & 0x1F83FDDBCLL) == 4173800107)
                                          * (5 * (v0 ^ 0x6C4) + 66)) ^ (v0 - 1169)))
                            - 4))();
}

uint64_t sub_1001671D0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1541 * (dword_1003059C4 == 1197784504)) ^ ((v0 + 789) | 0x80)))
                            - (((((v0 + 789) | 0x80) + 963119996) & 0xC697F6F9)
                             + (unint64_t)(((v0 + 789) | 0x80u) - 830))
                            + 1720))();
}

uint64_t sub_1001673D4()
{
  int v0;
  unint64_t v1;
  kern_return_t v2;

  STACK[0x688] = v1;
  v2 = IOMainPort(0, (mach_port_t *)&STACK[0x974]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((29
                                        * (((v2 << (((v0 + 55) & 0xDD) + 104)) & 0xAE776DFE) + (v2 ^ 0xD73BB6FF) != -683952385)) ^ v0))
                            - 8))();
}

uint64_t sub_100167458()
{
  int v0;
  _BOOL4 v1;

  v1 = IOServiceMatching((const char *)&STACK[0x15E1]) != 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1592 * v1) ^ v0)) - 8))();
}

uint64_t sub_1001674A4(const __CFDictionary *a1)
{
  int v1;
  int v2;
  kern_return_t MatchingServices;

  LODWORD(STACK[0x680]) = v1;
  MatchingServices = IOServiceGetMatchingServices(STACK[0x974], a1, (io_iterator_t *)&STACK[0x734]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((787
                                        * (((MatchingServices << ((8 * v2) ^ 0xC9)) & 0x7EEFFDF6)
                                         + ((82 * (v2 ^ 0x89) + 1064827355) ^ MatchingServices) == 1064828667)) ^ v2))
                            - 8))();
}

uint64_t sub_100167538()
{
  int v0;
  uint64_t v1;
  io_object_t v2;

  v2 = IOIteratorNext(STACK[0x734]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v2 << ((v0 - 67) & 0xEF ^ 0xCC)) & 0xF7F9F1DE) + (v2 ^ 0xFBFCF8EF) == -67307281)
                                          * ((v0 - 1044) ^ 0x114)) ^ v0))
                            - 8))();
}

uint64_t sub_1001675AC@<X0>(int a1@<W8>)
{
  int v1;
  kern_return_t v2;

  v2 = IOServiceOpen(a1 + v1 + 67307013, mach_task_self_, 0, (io_connect_t *)&STACK[0x704]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1909 * (((2 * v2) & 0x73FF67F6) + (v2 ^ 0xB9FFB3FB) == -1174424581)) ^ v1))
                            - 12))();
}

uint64_t sub_100167620()
{
  char v0;
  io_object_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + 2500) = (LODWORD(STACK[0x704]) ^ 0x776FFFFB)
                         - 806044227
                         + ((LODWORD(STACK[0x704]) << (((v0 - 64) | 1) + 52)) & 0xEEDFFFF6);
  IOObjectRelease(v1);
  return sub_100147434();
}

uint64_t sub_100167668()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)((char *)&STACK[0xBB0] + v2) = 0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((123
                                     * ((v0 ^ 9 ^ ((unint64_t)&STACK[0xBB0]
                                                                  + v1
                                                                  - v3
                                                                  + 0x40AF9B25784C1051 < (v0 ^ 0x628uLL))) & 1)) ^ v0)))();
}

uint64_t sub_100167730()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)(v4 + v0) = *(_OWORD *)(v3 + v0);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v0 != 16) * (((v2 + v1) & 0x307E5FDF) + 595)) ^ v2)))();
}

uint64_t sub_10016776C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v3 + v1) = *(_DWORD *)(v2 + v1);
  return (*(uint64_t (**)(void))(v4 + 8 * ((46 * (v1 + 4 != (((v0 - 389) | 0x240) ^ 0x2FELL))) ^ v0)))();
}

uint64_t sub_1001677A8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 + v6 - 0x1CC047BF395CE745) = *(_BYTE *)(v1 + v5 - 0xDD46EE5EB465E56);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 + 1 != v0 + 36) * (v2 + 520)) ^ v2)))();
}

uint64_t sub_100167808()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  *(_DWORD *)(v1 + 68) = 36;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((58
                                          * ((v2 ^ 0xFBC77FFFF6ED05EDLL)
                                           + 0x4388000DB589A4ELL
                                           + ((((v0 - 2088416173) & 0x7C7AB3DF) + 0x15FFBABD9) & (2
                                                                                                  * (v2 ^ 0x5910D29E))) != 2337698241)) ^ v0))
                            - 4))();
}

uint64_t sub_1001678D4()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v2 < v1;
  *(_BYTE *)(v4 + ((v0 + 51) ^ 0xA7C5A374DDE343B0) + v6) = *(_BYTE *)(v5 + v8 - 0x31AD9354BCD330F2);
  if (v10 == v7 - 0x505E43F50E0879ABLL < v1)
    v10 = v7 - 0x505E43F50E0879ABLL < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((v10 * v3) ^ v0)) - 4))();
}

uint64_t sub_100167964@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;
  int v3;
  _BOOL4 v4;

  v2[34] = v1;
  STACK[0x860] = 140;
  v4 = IOConnectCallStructMethod(a1 - 1197784504, 0x23u, v2, 0x8CuLL, v2, &STACK[0x860]) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v4 * (v3 + 642)) ^ v3)) - 12))();
}

uint64_t sub_1001679C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((*(_DWORD *)(v6 + 68) == 36) * (((v7 - 1416493854) & 0x546DFEDD) - 1712)) ^ v7))
                                                                                                - (v7 ^ 0x2E0u)
                                                                                                + 481))(a1, a2, a3, a4, a5, a6, 4294925247);
}

uint64_t sub_100167A0C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((25
                                          * (v2 - ((uint64_t)&STACK[0xBB0] + v1) - 0x40AF9B25784C1051 >= (unint64_t)(a1 ^ 0x19u) - 484)) ^ a1))
                            - 12))();
}

uint64_t sub_100167A98()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v2 + v0) = *(_OWORD *)(v3 + v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1135 * (v0 + 16 == ((v1 + 460) ^ 0x3E0))) ^ v1))
                            - 12))();
}

uint64_t sub_100167AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)(v8 + v7) = *(_DWORD *)(v9 + v7);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10 + 8 * ((2018 * (v7 + 4 != ((a7 + 781) ^ 0x6E9))) ^ a7))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_100167B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v9 + v11 - 0xF231AED482677C8) = *(_BYTE *)(v8 + v12 - 0x4E2C008362DF0AE2);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v13 + 8 * ((736 * (v10 + (a7 ^ 0x720u) - 1740 == v7 + 36)) ^ a7))
                                                                                               - 12))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_100167B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((LODWORD(STACK[0x690]) - 1539) ^ (417 * (a7 == 0))))
                            - ((LODWORD(STACK[0x690]) - 1516) | 0x102u)
                            + 479))();
}

uint64_t sub_100167BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((2026
                                * (((a7 == 5 * (LODWORD(STACK[0x690]) ^ 0x61D) - 1040) ^ (LODWORD(STACK[0x690]) + 18)) & 1)) ^ (LODWORD(STACK[0x690]) - 723))))();
}

uint64_t sub_100167C18()
{
  int v0;
  BOOL v1;

  v1 = malloc_type_malloc(0x20uLL, 0x71F90CFBuLL) == 0;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((((v1 ^ (v0 - 1)) & 1) * (v0 - 362)) | v0)))();
}

uint64_t sub_100167C60(_BYTE *a1)
{
  int v1;
  uint64_t v2;

  *a1 = STACK[0xBB0];
  a1[1] = STACK[0xBB1];
  a1[2] = STACK[0xBB2];
  a1[3] = STACK[0xBB3];
  a1[4] = STACK[0xBB4];
  a1[5] = STACK[0xBB5];
  a1[6] = STACK[0xBB6];
  a1[7] = STACK[0xBB7];
  a1[8] = STACK[0xBB8];
  a1[9] = STACK[0xBB9];
  a1[10] = STACK[0xBBA];
  a1[11] = STACK[0xBBB];
  a1[12] = STACK[0xBBC];
  a1[13] = STACK[0xBBD];
  a1[14] = STACK[0xBBE];
  a1[15] = STACK[0xBBF];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((1734
                                               * (((((v1 - 18) & 0x7F) - 1) ^ ((unint64_t)&a1[-STACK[0x7D8] + 0x40AF9B25784C107DLL] < 0x10)) & 1)) ^ (v1 + 2086557678) & 0x83A1A77F))
                            - 12))();
}

void sub_100167DA4(unint64_t a1)
{
  int8x16_t *v1;
  int8x16_t *v2;
  int v3;
  uint64_t v4;
  int8x16_t v5;
  int8x16_t v6;

  v5.i64[0] = 0xEAEAEAEAEAEAEAEALL;
  v5.i64[1] = 0xEAEAEAEAEAEAEAEALL;
  v6.i64[0] = 0xF5F5F5F5F5F5F5F5;
  v6.i64[1] = 0xF5F5F5F5F5F5F5F5;
  *v1 = vaddq_s8(vsubq_s8(*v2, vandq_s8(vaddq_s8(*v2, *v2), v5)), v6);
  STACK[0x770] = a1;
  LODWORD(STACK[0x8DC]) = -510232838;
  STACK[0x8A0] = v4 + ((224 * (v3 ^ 0x37A) + 260) | 0x142u) - 828 - 906;
  JUMPOUT(0x100167ECCLL);
}

uint64_t sub_100167ED4@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((a1 == 0) * ((v2 + a2) & 0xF77E3AE9 ^ 0xF33C37C5)) ^ v2))
                            - ((v2 + 1836221489) & 0x928D79C5 ^ 0x8DLL)))();
}

uint64_t sub_100167F2C()
{
  return sub_1000EE908();
}

uint64_t sub_100167F4C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((743 * (((STACK[0xA68] == 0) ^ ((v0 ^ 0x2F) + 1)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_100167F84()
{
  int v0;
  void *v1;

  free(v1);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((STACK[0x938] != 0) * (((((v0 + 1029) | 0x228) - 1705) | 0x6C8) ^ 0x6AC)) ^ ((v0 + 1029) | 0x228)))
                            - 8))();
}

uint64_t sub_100167FE8(void *a1)
{
  int v1;
  int v2;

  free(a1);
  LODWORD(STACK[0xA24]) = v2;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1422 * (STACK[0x8B8] != 0)) ^ (v1 - 1307))) - 8))();
}

uint64_t sub_100168024(void *a1)
{
  int v1;

  free(a1);
  LODWORD(STACK[0xAB4]) = 870479216;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((53 * (STACK[0x770] == 0)) ^ (v1 - 1338))))();
}

uint64_t sub_100168060()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1971 * (STACK[0xA78] != 0)) ^ (v0 - 890))) - 8))();
}

uint64_t sub_100168088()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1422 * (STACK[0x8B8] != 0)) ^ (((v0 - 1122) | 0x481) - 1307)))
                            - 8))();
}

uint64_t sub_1001680C0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((53 * (STACK[0x770] == 0)) ^ (v0 - 1338))))();
}

uint64_t sub_1001680E4(void *a1)
{
  int v1;

  free(a1);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1971 * (STACK[0xA78] != 0)) ^ (v1 - 890))) - 8))();
}

uint64_t sub_100168118(void *a1)
{
  int v1;
  int v2;
  int v3;

  free(a1);
  return ((uint64_t (*)(unint64_t))*(&off_1002C8B50
                                                    + (((v3 != 0) * (((v2 + v1 - 369824392) | 2) ^ 0x141)) ^ (v1 - 1151))))(STACK[0x9D8]);
}

uint64_t sub_10016816C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((182 * (((a1 == 0) ^ (a2 & v2) ^ 0x8B) & 1)) ^ a2 & v2)))();
}

uint64_t sub_10016819C(void *a1)
{
  int v1;
  uint64_t v2;

  free(a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((14 * (STACK[0x7A0] == 0)) ^ (v1 - 794))) - 12))();
}

void sub_1001681D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t *v7;
  _DWORD *v8;

  v8 = *(_DWORD **)(STACK[0x658] + 48);
  *v7 = a1;
  *(_DWORD *)STACK[0x630] = (LOWORD(STACK[0x936]) | ((LOWORD(STACK[0x936]) < ((v6 + 641332880) & 0xEDD ^ 0x3C81u)) << 16))
                          - 14924;
  *(_QWORD *)STACK[0x620] = STACK[0x7A0];
  *v8 = (LOWORD(STACK[0x76E]) | ((LOWORD(STACK[0x76E]) < 0x79B7u) << 16)) - 31159;
  sub_1000EE8C4(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10016824C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((14 * (STACK[0x7A0] == 0)) ^ (v0 - 794))) - 12))();
}

void sub_100168274(void *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  free(a1);
  sub_1000EE8C4(v2, v3, v4, v5, v6, v7, v1);
}

uint64_t sub_1001682C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t (*v8)(void);
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  STACK[0xAD0] = v12 - 32;
  v14 = (a8 + v10 + 1283) | 8u;
  STACK[0x8A0] = (v14 ^ 0xFFFFFFFFFFFFFAFCLL) + v11;
  v8 = *(uint64_t (**)(void))(v13
                           + 8 * (int)(((STACK[0x7C0] != 0) * ((((v14 ^ 0x758) - 116) ^ 0x414) + 450)) ^ v14 ^ 0x758));
  LODWORD(STACK[0x5F0]) = a4;
  return v8();
}

uint64_t sub_1001682FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  int v7;
  unsigned int v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  BOOL v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unint64_t v42;

  v7 = LODWORD(STACK[0x3B4]) ^ LODWORD(STACK[0x3E4]) ^ LODWORD(STACK[0x248]) ^ 0x5A7A2689;
  v8 = LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x3E4]) ^ LODWORD(STACK[0x248]) ^ 0x82164830;
  v9 = (STACK[0x550] & 1) == 0;
  if ((STACK[0x550] & 1) != 0)
    v10 = STACK[0x384];
  else
    v10 = STACK[0x350];
  v11 = STACK[0x3B0];
  if ((STACK[0x550] & 1) == 0)
    v11 = STACK[0x2E8];
  LODWORD(STACK[0x670]) = v11;
  if (v9)
    v12 = v7;
  else
    v12 = STACK[0x37C];
  if (v9)
    v13 = STACK[0x380];
  else
    v13 = v8;
  if (v9)
    v14 = v8;
  else
    v14 = v7;
  if (v9)
    v15 = STACK[0x340];
  else
    v15 = STACK[0x348];
  if (v9)
    v16 = STACK[0x388];
  else
    v16 = STACK[0x394];
  v17 = LODWORD(STACK[0x660]) == -768964959;
  v18 = STACK[0x590];
  if (LODWORD(STACK[0x660]) == -768964959)
    v18 = STACK[0x560];
  LODWORD(STACK[0x384]) = v18;
  v19 = STACK[0x424];
  if (v17)
    v19 = STACK[0x420];
  LODWORD(STACK[0x388]) = v19;
  v20 = STACK[0x540];
  if (v17)
    v20 = STACK[0x4D0];
  LODWORD(STACK[0x380]) = v20;
  v21 = STACK[0x458];
  if (!v17)
    v21 = STACK[0x450];
  LODWORD(STACK[0x394]) = v21;
  v22 = STACK[0x44C];
  if (!v17)
    v22 = STACK[0x440];
  LODWORD(STACK[0x4D0]) = v22;
  v23 = STACK[0x438];
  if (!v17)
    v23 = STACK[0x428];
  LODWORD(STACK[0x418]) = v23;
  v24 = STACK[0x510];
  LODWORD(STACK[0x438]) = v10;
  if (v17)
    v24 = v10;
  LODWORD(STACK[0x2CC]) = v24;
  LODWORD(STACK[0x424]) = v12;
  LODWORD(STACK[0x420]) = v13;
  if (v17)
    v25 = v13;
  else
    v25 = v12;
  LODWORD(STACK[0x560]) = v25;
  v26 = STACK[0x4F0];
  LODWORD(STACK[0x428]) = v14;
  if (!v17)
    v26 = v14;
  LODWORD(STACK[0x590]) = v26;
  v27 = STACK[0x640];
  LODWORD(STACK[0x350]) = v15;
  if (v17)
    v27 = v15;
  LODWORD(STACK[0x3B4]) = v27;
  v28 = STACK[0x500];
  LODWORD(STACK[0x37C]) = v16;
  if (!v17)
    v28 = v16;
  LODWORD(STACK[0x3B0]) = v28;
  if ((STACK[0x3E0] & 1) != 0)
    v29 = STACK[0x298];
  else
    v29 = STACK[0x2B0];
  if ((STACK[0x3E0] & 1) != 0)
    v30 = STACK[0x278];
  else
    v30 = STACK[0x284];
  if ((STACK[0x3E0] & 1) != 0)
    v31 = STACK[0x28C];
  else
    v31 = STACK[0x2C8];
  v32 = STACK[0x270];
  if ((STACK[0x3E0] & 1) != 0)
    v32 = STACK[0x250];
  LODWORD(STACK[0x5F0]) = v32;
  v33 = LODWORD(STACK[0x668]) == -961433487;
  v34 = STACK[0x3E8];
  if (LODWORD(STACK[0x668]) != -961433487)
    v34 = STACK[0x3DC];
  LODWORD(STACK[0x270]) = v34;
  v35 = STACK[0x24C];
  if (!v33)
    v35 = STACK[0x230];
  LODWORD(STACK[0x440]) = v35;
  v36 = STACK[0x22C];
  if (!v33)
    v36 = STACK[0x228];
  LODWORD(STACK[0x458]) = v36;
  v37 = v6 ^ 0x32;
  v38 = STACK[0x3D8];
  if (v33)
    v38 = STACK[0x3C8];
  LODWORD(STACK[0x44C]) = v38;
  v39 = STACK[0x3C4];
  if (!v33)
    v39 = STACK[0x3C0];
  LODWORD(STACK[0x2B0]) = v39;
  STACK[0x678] = (v37 - 2014188314) & 0x780E10E7;
  LODWORD(STACK[0x540]) = LODWORD(STACK[0x5D0]) ^ 0x574CFFD3 ^ v37;
  v40 = STACK[0x3F8];
  LODWORD(STACK[0x3C4]) = v29;
  if (v33)
    v40 = v29;
  LODWORD(STACK[0x2C8]) = v40;
  LODWORD(STACK[0x3DC]) = v30;
  LODWORD(STACK[0x3D8]) = v31;
  if (v33)
    v41 = v30;
  else
    v41 = v31;
  LODWORD(STACK[0x450]) = v41;
  v42 = a6 - 1764038626 + ((unint64_t)(a6 < 0x692517E2) << 32);
  *(_QWORD *)(STACK[0xB70] + 8 * v42) = *(_QWORD *)(STACK[0xB80] + 8 * v42) ^ 0xC9C9C9C9C9C9C9C9;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((50 * (a6 - 1764038625 < STACK[0x680])) ^ v37)))();
}

void sub_100168BA4()
{
  JUMPOUT(0x1001685BCLL);
}

uint64_t sub_100168BD0()
{
  int v0;
  uint64_t v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;

  if ((STACK[0x550] & 1) != 0)
    v2 = STACK[0x3A4];
  else
    v2 = STACK[0x3A0];
  v3 = LODWORD(STACK[0x660]) == -768964959;
  v4 = STACK[0x468];
  if (LODWORD(STACK[0x660]) != -768964959)
    v4 = STACK[0x464];
  LODWORD(STACK[0x3E8]) = v4;
  v5 = STACK[0x424];
  if (!v3)
    v5 = STACK[0x420];
  LODWORD(STACK[0x550]) = v5;
  v6 = STACK[0x4E0];
  if (v3)
    v6 = STACK[0x4C0];
  LODWORD(STACK[0x4E0]) = v6;
  v7 = STACK[0x670];
  LODWORD(STACK[0x464]) = v2;
  if (!v3)
    v7 = v2;
  LODWORD(STACK[0x468]) = v7;
  v8 = STACK[0x4B0];
  if (!v3)
    v8 = STACK[0x4A0];
  LODWORD(STACK[0x4C0]) = v8;
  v9 = STACK[0x498];
  if (!v3)
    v9 = STACK[0x480];
  LODWORD(STACK[0x420]) = v9;
  v10 = STACK[0x478];
  if (!v3)
    v10 = STACK[0x470];
  LODWORD(STACK[0x424]) = v10;
  LODWORD(STACK[0x3A4]) = LODWORD(STACK[0x294]) - LODWORD(STACK[0x254]);
  if ((STACK[0x3E0] & 1) != 0)
    v11 = STACK[0x2C0];
  else
    v11 = STACK[0x2B4];
  v12 = LODWORD(STACK[0x668]) == -961433487;
  v13 = STACK[0x2AC];
  if (LODWORD(STACK[0x668]) == -961433487)
    v13 = STACK[0x2A8];
  LODWORD(STACK[0x2C0]) = v13;
  v14 = STACK[0x3EC];
  if (!v12)
    v14 = STACK[0x2E0];
  LODWORD(STACK[0x2AC]) = v14;
  v15 = v1
      + (((unint64_t)(v1 - 0x7773979C74BE25F5) >> 24) ^ 0x820001426B001800)
      - (((unint64_t)(v1 - 0x7773979C74BE25F5) >> 23) & 0x17B29FFCFFELL);
  v16 = v15
      + (((v15 + 0x68C67212041C20BLL) >> 14) ^ 0xFFFEFFBC3BBAE7FFLL)
      + (((v15 + 0x68C67212041C20BLL) >> 13) & 0x5FF787775CFFELL);
  v17 = v16
      + (((v16 + 0x68D6764E486DA0CLL) >> 7) ^ 0x40002110940240B1)
      - (((v16 + 0x68D6764E486DA0CLL) >> 6) & 0x3FFBDDED7FB7E9CLL)
      + 2;
  v18 = v17 - ((2 * v17 - 0x72E573575EF6CD4ELL) & 0xC326463D59876512) + 0x28206972FD484BE2;
  v19 = ((2 * ((v18 ^ 0x6193231EACC3B289) + 0x1E624C75B7D25465)) & 0xD363FFABFEBFCB72)
      + (((v18 ^ 0x6193231EACC3B289) + 0x1E624C75B7D25465) ^ 0xE9B1FFD5FF5FE5B9);
  v20 = (((v19 + 0x164E002A00A01A47) >> 28) ^ 0x6FFDB7EFFFFFF5EFLL)
      + v19
      + (((v19 + 0x164E002A00A01A47) >> 27) & 0x1FFFFFEBDELL);
  v21 = (((v20 - 0x59AFB7C5FF5FDBA8) >> 8) ^ 0xEEFBFEBEEFF97EFBLL)
      + v20
      + (((v20 - 0x59AFB7C5FF5FDBA8) >> 7) & 0x1F7FD7DDFF2FDF6);
  v22 = v21
      + (((v21 - 0x48ABB684EF595AA3) >> 2) ^ 0x832C04902C113C18)
      - (((v21 - 0x48ABB684EF595AA3) >> 1) & 0x79A7F6DFA7DD87CELL)
      + 1;
  v23 = v22 - ((2 * v22 + 0x85089D5C92AD288) & 0x1A5314A111C6DB02) - 0x3EAE30C49287293BLL;
  v24 = ((2 * ((v23 ^ 0x8D298A5088E36D81) + 0x79858CF42C6EB4C9)) & 0xEBFC7BFFFF7FB6F6)
      + (((v23 ^ 0x8D298A5088E36D81) + 0x79858CF42C6EB4C9) ^ 0xF5FE3DFFFFBFDB7BLL);
  v25 = (((v24 + 0xA01C20000402485) >> 27) ^ 0x7FBEADCEFFFBEBEFLL)
      + v24
      + (((v24 + 0xA01C20000402485) >> 26) & 0x1DFFF7D7DELL);
  v26 = v25
      + (((v25 - 0x75BCEBCEFFBBC76ALL) >> 14) ^ 0x845083A114012082)
      - (((v25 - 0x75BCEBCEFFBBC76ALL) >> 13) & 0x6F8BDD7FDBEFALL);
  v27 = v26
      + (((v26 + 0x5F2908FEC431814) >> 6) ^ 0x8890188C0060C008)
      - (((v26 + 0x5F2908FEC431814) >> 5) & 0x6DFCEE7FF3E7FEELL)
      + 2;
  v28 = v27 - ((2 * v27 - 0x53B0FF8283B4FECLL) & 0xDB364F9453E154E0) - 0x15026031EA2CFD86;
  v29 = ((2 * ((v28 ^ 0x6D9B27CA29F0AA70) + 0x285B60A07B22FE6FLL)) & 0xF9BEFFF975FFFE6CLL)
      + (((v28 ^ 0x6D9B27CA29F0AA70) + 0x285B60A07B22FE6FLL) ^ 0xFCDF7FFCBAFFFF36);
  v30 = v29
      + (((v29 + 0x3208003450000CALL) >> 27) ^ 0x880008A0DC842A11)
      - (((v29 + 0x3208003450000CALL) >> 26) & 0x3E46F7ABDCLL);
  v31 = v30
      + (((v30 + 0x7B207762687BD6B9) >> 11) ^ 0x1409404088A84A09)
      - (((v30 + 0x7B207762687BD6B9) >> 10) & 0x2D7F7EEEAF6BECLL);
  v32 = v31
      + (((v31 + 0x67173721DFD38CB0) >> 7) ^ 0xBE7DF7FE7BD9FF91)
      + (((v31 + 0x67173721DFD38CB0) >> 6) & 0xFBEFFCF7B3FF22)
      + 2;
  v33 = v32 - ((2 * v32 + 0x51327E46C7F31A3ALL) & 0x8CE8D0BCF2B0F222) + 0x6F0DA781DD52062ELL;
  v34 = v33 ^ v18;
  v35 = ((2 * ((v33 ^ 0xC674685E79587911) + 0x2CA9E7BAB642E976)) & 0x8DCDBCF9BE7FE3FELL)
      + (((v33 ^ 0xC674685E79587911) + 0x2CA9E7BAB642E976) ^ 0xC6E6DE7CDF3FF1FFLL);
  v36 = (((v35 + 0x3919218320C00E01) >> 27) ^ 0x761D2D3FFF7FB8DFLL)
      + v35
      + (((v35 + 0x3919218320C00E01) >> 26) & 0x3FFEFF71BELL);
  v37 = v36
      + (((v36 - 0x3D040BBCDEBFAADELL) >> 8) ^ 0x4019111722130500)
      - (((v36 - 0x3D040BBCDEBFAADELL) >> 7) & 0x1CDDDD1BBD9F5FELL);
  v38 = v37
      + (((v37 - 0x7D1D1CD400D2AFDELL) >> 6) ^ 0x7F7B9FFF8AEFFB8BLL)
      + (((v37 - 0x7D1D1CD400D2AFDELL) >> 5) & 0x6F73FFF15DFF716)
      + 1;
  v39 = v38 - ((2 * v38 + 0x6CE8658E87AA92CLL) & 0xE676C258174260D4) - 0x95D5BA780217B00;
  v40 = (v39 ^ 0xC9CE7A509B39F6AELL)
      + ((v39 >> 24) ^ 0xA8018A6DCE38D031)
      + ((v39 >> 23) & 0xB7FF7AFEAALL ^ 0xFFFFFF6C638F5FDDLL)
      + 0x57FE755BFFBD7F57;
  v41 = (((((2 * v40) & 0xF5EBD12E9BFDF8D2) + (v40 ^ 0x7AF5E8974DFEFC69) - 0x7AF5E8974DFEFC69) >> 10) ^ 0x1F7EB57EB6EE5C1DLL)
      + ((2 * v40) & 0xF5EBD12E9BFDF8D2)
      + (v40 ^ 0x7AF5E8974DFEFC69)
      + (((((2 * v40) & 0xF5EBD12E9BFDF8D2) + (v40 ^ 0x7AF5E8974DFEFC69) - 0x7AF5E8974DFEFC69) >> 9) & 0x7D6AFD6DDCB83ALL);
  v42 = v41
      + (((v41 + 0x658B61E9FB12A77ALL) >> 5) ^ 0x12D2088003243688)
      - (((v41 + 0x658B61E9FB12A77ALL) >> 4) & 0xA5BEEFFF9B792EELL);
  v43 = v42
      + 1
      + (((v42 - 0xCB3434890CCD6BBLL) >> 29) ^ 0x240A08600028010ELL)
      - (((v42 - 0xCB3434890CCD6BBLL) >> 28) & 0xFFFAFFDE2);
  v44 = v43
      + (((v43 - 0x30BD4BA890F4D7CALL) >> 11) ^ 0x777E65FECFBFF766)
      + (((v43 - 0x30BD4BA890F4D7CALL) >> 10) & 0x3CCBFD9F7FEECCLL);
  v45 = v44
      + (((v44 + 0x57C44E589F4B30D0) >> 8) ^ 0x982810500A010401)
      - (((v44 + 0x57C44E589F4B30D0) >> 7) & 0x1AFDF5FEBFDF7FCLL)
      + 2;
  v46 = STACK[0x5F0];
  LODWORD(STACK[0x4B0]) = v11;
  if (v12)
    v46 = v11;
  LODWORD(STACK[0x278]) = v46;
  return sub_100144E78(v0 ^ v34 ^ 0x2B24B6E ^ (v45 - ((2 * v45 + 714365338) & 0x65E8754C) + 1212049267), 2130705321, 152827930, -1328064443, -2125706550);
}

uint64_t sub_1001699A0(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((38 * ((v2 ^ 0x18A549EF ^ (67 * (v2 ^ 0x4CD))) - a2 < 7)) ^ v2))
                            - 4))();
}

uint64_t sub_100169A00()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + (v2 + v1)) = 0xB1B1B1B1B1B1B1B1;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1798 * (((v3 + 1759192548) & 0x9724D97F) - 372 == ((v4 + 1) & 0x1FFFFFFF8))) ^ v3)))();
}

uint64_t sub_100169A60(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((1439 * (v1 != v2)) ^ a1)) - (a1 ^ 0x178)))();
}

uint64_t sub_100169AAC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v1 + (v4 + v2)) = -79;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)((240
                                               * (((7 * (v5 ^ v3)) & ~(a1 + v4 + 1) | ((a1 + v4 + 1) ^ ~(7 * (v5 ^ v3))) & (a1 + v4 + 1 - 7 * (v5 ^ v3))) >> 31)) ^ (7 * (v5 ^ v3) + 324)))
                            - 4))();
}

void sub_100169B08()
{
  JUMPOUT(0x100169AC0);
}

uint64_t sub_100169B10(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  char v4;
  char v5;
  int v6;
  int v7;
  _BYTE *v8;
  char v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned __int8 v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  char v52;
  char v53;
  char v54;
  char v55;
  unsigned int v56;
  unsigned int v57;
  unsigned __int8 v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unint64_t v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  unsigned int v101;
  char v102;
  char v103;
  unint64_t v104;
  unsigned int v105;
  int v106;
  int v107;
  char v108;
  char v109;
  char v110;
  char v111;
  int v112;

  LODWORD(STACK[0x670]) = 0;
  LODWORD(STACK[0x5F0]) = a2 | 0x400;
  v10 = v8[109] ^ v3;
  LODWORD(STACK[0x560]) = ((a2 | 0x400) - 1767931186) & 0x69607FF7;
  v11 = v10 - ((v10 << ((a2 - 50) & 0xF7 ^ 0xE6)) & 0x1D8) - 1788685588;
  v12 = v8[21] ^ v3;
  LODWORD(STACK[0x678]) = ((a2 | 0x400) + 1012609835) & 0xC3A4C9FF;
  v13 = v12 - ((v12 << ((a2 + 43) ^ 0x4D)) & 0x136) - 851535717;
  v14 = ((v13 ^ 0xCD3E989B | v11 ^ 0x9562D2EC) - ((2 * (v13 ^ 0xCD3E989B | v11 ^ 0x9562D2EC)) & 0xCCCCCCCC) + 38) & 0x73;
  v15 = ((v13 ^ 0x8522809B) & (v11 ^ 0x12EC)) - ((2 * ((v13 ^ 0x8522809B) & (v11 ^ 0x12EC))) & 0x6AE5001C) + 896696334;
  v16 = ((v14 ^ 0x22 | v15 ^ 0x3572800E)
       - 2 * ((v14 ^ 0x22 | v15 ^ 0x3572800E) & 0x655BE99F ^ (v15 ^ 0x3572800E) & 0xC)
       + 1700522387) ^ 0x655BE993;
  v17 = ((2 * v16 * v16 * v16) & 0x5FFE73B8) + ((v16 * v16 * v16) ^ 0x2FFF39DC);
  v18 = STACK[0x680];
  LOBYTE(v15) = *(_BYTE *)(STACK[0x680] + (v8[40] & 0x3F ^ v3));
  LOBYTE(v13) = ((v15 & 0x50 ^ 0x99) + (v15 & 0x25) - 1) ^ 0xFC | (((v8[352] & 0x8A ^ 0x7D) - 65) & 0xF1 | -(v8[352] & 0x8A ^ 0x7D) & 0x7E) ^ 0xB0;
  LOBYTE(v13) = v13 - 2 * (v13 & 0x21 ^ v15 & 1) - 96;
  LOBYTE(v15) = v8[355];
  v19 = STACK[0x688];
  v20 = (*(_BYTE *)(STACK[0x688] + (v8[52] & 0x3F ^ v3)) ^ 0xE6) & (v15 ^ 0xE6);
  LOBYTE(v15) = (v20 + (~(2 * v20) | 0xCF) - 103) ^ 0x98 | ((v15 & 0xB8 ^ 0xE7) - 1) ^ 0xFE;
  LOBYTE(v13) = v13 ^ 0xA0;
  LOBYTE(v15) = (v15 - ((2 * v15) & 0xA0) + 80) ^ 0x50;
  v21 = ~((v15 | v13) - ((2 * (v15 | v13)) & 0x3A) + 61);
  LOBYTE(v13) = ((v21 & 0x2B) - ((2 * v21) & 0x12) + 29) ^ 0x1F | ((v15 & v13) - ((2 * (v15 & v13)) & 0x52) - 87) ^ 0xA9;
  LOBYTE(v13) = (v8[94] ^ v3) + (v13 ^ 0x12) - ((2 * v13) & 0xDA) - 18;
  v8[94] = v13 - ((2 * v13) & 0x58) + 44;
  LOBYTE(v13) = (v8[139] & 0x36 ^ 0x82) + (v8[139] & 0x12 ^ 0x51) - ((v8[139] & 0x36 ^ 0x82) & 0x92);
  LOBYTE(v13) = (v13 ^ 0x75 | byte_100256B60[v8[85] & 0x3F ^ v3] & 0x40)
              - 2 * (((v13 ^ 0x75) & 0x46 | byte_100256B60[v8[85] & 0x3F ^ v3] & 0x40) ^ v13 & 2)
              + 68;
  v22 = *(unsigned __int8 *)(v18 + (v8[157] & 0x3F ^ v3));
  v8[64] ^= 0x39 ^ ((v13 & 0xF7 ^ 0x4C) + ((2 * v13) & 0x62 ^ 0xEF) + 58);
  LODWORD(STACK[0x5E0]) = (v22 ^ 0x19) - ((2 * (_BYTE)v22 + 12) & 8);
  v23 = ((v8[125] & 0xC9) - ((2 * v8[125]) & 0x10) - 82) ^ 0x24;
  v24 = ((v23 | 0xFFFFFFB8) - (v23 | 0x47) + 71) & 0xFFFFFFF9 ^ 0x3A;
  v25 = *(unsigned __int8 *)(v18 + (v8[104] & 0x3F ^ v3));
  LODWORD(STACK[0x5D0]) = v24 - ((2 * v24) & 0xFFFFFFDF);
  v26 = v8[387];
  v27 = ((v26 & 0xA ^ 0xFFFFFF83 | v26 & v7) - 1) ^ 0xFFFFFFDC;
  v28 = ((((v27 + 108 - ((2 * v27) & 0xD8)) ^ 0x2A | (((2 * (v26 & 0xA1 ^ 0xFFFFFFE1)) | 7) - (v26 & 0xA1 ^ 0xFFFFFFE1)) ^ 0x46)
        - ((2 * (v27 + 108)) & 8)
        - 124) ^ 0xFFFFFF84) & (((v25 ^ 0xFFFFFFE6) * (v25 ^ 0xFFFFFFE6)
                               - ((2 * (v25 ^ 0xFFFFFFE6) * (v25 ^ 0xFFFFFFE6)) & 0xFFFFFFA8)
                               + 84) ^ 0x54);
  LODWORD(STACK[0x668]) = v28 - ((2 * v28) & 0x20);
  LOBYTE(v28) = (v8[52] ^ 0xD3) + (v8[175] ^ v3) + 1;
  v8[175] = v28 - ((2 * v28) & 0x58) + 44;
  v29 = 205 * (*(unsigned __int8 *)(v19 + (v8[44] & 0x3F ^ v3)) ^ 0xE6);
  LODWORD(STACK[0x5C0]) = (v29 >> 10) - ((v29 >> 9) & 0x6C);
  v8[100] = (v8[100] ^ v3) - ((2 * (v8[100] ^ v3) + 122) & 0x58) + 41;
  v8[327] = 26;
  LOBYTE(v29) = (v8[386] ^ 0xE6) + (*(_BYTE *)(v18 + (v8[17] & 0x3F ^ v3)) ^ 0xE6);
  v8[386] = v29 - ((2 * v29) & 0xCC) - 26;
  LOBYTE(v29) = byte_100256B60[v8[57] & 0x3F ^ v3];
  LOBYTE(v29) = (107 - ((v29 & 0x60) + (v29 | 0xEC))) ^ 0x77;
  LOBYTE(v26) = (v8[415] & 4 ^ 0x44) - (v8[415] & 4) + (v8[415] & 0x8C ^ 8);
  LOBYTE(v29) = (127 - (((v26 & 0xD4 ^ 0x6F) - (v26 | v4) - 44) ^ 0xA7)) ^ 0x7F | (((2 * v29) & 0x64) - v29 - 55) ^ 0xC0;
  v30 = (v29 - ((2 * v29) & 0xC6) - 29) ^ 0xE3;
  v31 = (v8[101] ^ v3)
      + ((v30 / 3u) ^ 0x27)
      - (((171 * v30) >> 8) & 0xB0)
      - 39;
  v8[101] = v31 - ((2 * v31) & 0x58) + 44;
  LOBYTE(v31) = byte_100256B60[v8[217] & 0x3F ^ v3];
  v32 = (((v31 & 0x75 ^ 0xFFFFFF8F) + ((2 * (v31 & 0x75 ^ 0xFFFFFF8F)) & 0x48 ^ 0xFFFFFFEB) + 47) ^ 0x2E) & (v8[398] ^ 0xFFFFFFE6);
  v33 = (v32 + (~(2 * v32) | 0xFFFFFFBB) + 35) ^ 0x22 | ((((v31 & 0x8A ^ 0xFFFFFFFD) - 81) & 0xFFFFFF83)
                                                       - (((v31 & 0x8A ^ 0xFFFFFFFD) - 81) | 0xFFFFFFA3)
                                                       + 127) ^ 0x50;
  v34 = (v33 - ((2 * v33) & 0x7A) - 67) ^ 0xFFFFFFBD | (v8[7] >> 1) ^ 0x16;
  LOBYTE(v34) = (v8[249] ^ v3) + (v34 ^ 0x40) - 2 * (v34 & 0x3F) - 64;
  v8[249] = v34 - ((2 * v34) & 0x58) + 44;
  v8[30] ^= 0x58u;
  LOBYTE(v16) = (*(_BYTE *)(v18 + (v8[241] & 0x3F ^ v3)) & 0xFC ^ 0xE7) - 1;
  LOBYTE(v34) = ((v16 & 0x87 ^ 5) + (v16 ^ 0x9A) - ((v16 ^ 0x9A) & 0x87)) ^ 0x1F | ((v8[383] & 3 ^ 2)
                                                                                  - 2 * (v8[383] & 1)
                                                                                  - 119) ^ 0x89;
  LOBYTE(v34) = (v34 - ((2 * v34) & 0xDF) - 17) ^ 0xEF;
  v8[215] = v34 * v34 * v34 + (~(2 * v34 * v34 * v34) | 0xA7) + 45;
  LODWORD(STACK[0x660]) = v17;
  v8[446] = *(_BYTE *)(v18 + ((28 - (_BYTE)v17) & 0x3F));
  v35 = (*(_BYTE *)(v18 + (v8[13] & 0x3F ^ v3)) & v3 ^ 0x3B) + 61;
  v36 = (v35 & v3 ^ 0x8F) - ((2 * v35) & 0x40) + 46;
  LOBYTE(v25) = (v8[146] ^ 0x75) - 89 + ((2 * (v8[146] ^ 8)) & 0xB2);
  LOBYTE(v25) = ((2 * v25 * v25 * v25) & 0xF6) + ((v25 * v25 * v25) ^ 0xFB);
  v37 = (((v36 ^ 0x22222222) & 0xEF) - ((2 * v36) & 0x102) - 1849324159) ^ 0x91C58D81;
  v8[381] = ((v37 << ((v25 + 5) & 7)) - ((2 * (v37 << ((v25 + 5) & 7))) & 0xE0) - 16) ^ ((v37 >> ((3 - v25) & 7))
                                                                                       - ((2 * (v37 >> ((3 - v25) & 7))) & 0x5A)
                                                                                       + 45) ^ 0x3B;
  v38 = (v8[131] ^ v3)
      - ((2 * (v8[131] ^ v3)) & 0x164)
      + 418557106;
  v39 = (v8[393] ^ 0xE6) - ((2 * (v8[393] ^ 0xE6)) & 0x174) - 1836848454;
  v40 = (((v39 ^ 0x9283EABA | v38 ^ 0x18F2ACB2) - ((2 * (v39 ^ 0x9283EABA | v38 ^ 0x18F2ACB2)) & 0x560) + 688) ^ 0x2B0) & (((v8[400] ^ 0xE6) - ((2 * (v8[400] ^ 0xE6)) & 0x15A) + 1646354861) ^ 0x622161AD);
  v41 = (v40 - ((2 * v40) & 0x11230EC8) - 2003728540) ^ 0x88918764 | (((v39 ^ 0x1082A2BA) & (v38 ^ 0xCB2))
                                                                    - ((2 * ((v39 ^ 0x1082A2BA) & (v38 ^ 0xCB2))) & 0x41D298AA)
                                                                    + 1625902165) ^ 0x60E94C55;
  LOBYTE(v38) = *(_BYTE *)(v19 + (v8[220] & 0x3F ^ v3)) & 3;
  LOBYTE(v38) = ((v38 ^ 6) + 2 * ((v38 ^ 6 | 0x79) ^ v38) - 77) ^ 0xB1;
  LOBYTE(v38) = ((2 * v38) & 0xFA) + (v38 ^ 0xFD);
  v42 = (v41 - ((2 * v41) & 0x3ED17D38) + 526958236) ^ 0x1F68BE9C;
  v43 = ((v42 >> (v38 + 3)) - ((2 * (v42 >> (v38 + 3))) & 0xA) + 5) ^ ((v42 << (5 - v38))
                                                                     - ((2 * (v42 << (5 - v38))) & 0x4C)
                                                                     + 38);
  LOBYTE(v43) = (v8[330] ^ 0xE6) + (v43 ^ 0x5E) + ((2 * v43) & 0xFB ^ 0x42) - 125;
  v8[330] = v43 - ((2 * v43) & 0xCC) - 26;
  v44 = (v8[10] >> 1) ^ 0x16;
  LOBYTE(v39) = *(_BYTE *)(v19 + (v8[27] & 0x3F ^ v3));
  LOBYTE(v39) = (v39 ^ 0x19) + 2 * (v39 ^ 0xE6) + 1;
  LOBYTE(v39) = ((2 * v39 * v39) & 0xDE) + ((v39 * v39) ^ 0xEF);
  v45 = (v44 - ((2 * v44) & 0x30) - 2099754728) ^ 0x82D84918;
  v46 = ((v45 >> ((v39 + 1) & 7)) - ((2 * (v45 >> ((v39 + 1) & 7))) & 0xF8) + 252) ^ ((v45 << ((7 - v39) & 7))
                                                                                    - ((2 * (v45 << ((7 - v39) & 7))) & 0xDA)
                                                                                    + 109);
  LOBYTE(v46) = (v8[67] ^ v3) + (v46 ^ 0x14) + ((2 * v46) & 0xF4 ^ 0xDF) + 124;
  v8[67] = v46 - ((2 * v46) & 0x58) + 44;
  LOBYTE(v46) = byte_100256B60[v8[136] & 0x3F ^ v3] & 0xAC;
  LOBYTE(v46) = (v8[195] ^ v3) + (v46 ^ 0x69) + (v3 ^ (2 * v46)) - 127;
  v47 = *(unsigned __int8 *)(v18 + (v8[182] & 0x3F ^ v3));
  v8[195] = v46 + (~(2 * v46) | 0xA7) + 45;
  v48 = ((2 * ((v47 ^ 0xFFFFFFE6) + 13)) & 0x7A) + (((v47 ^ 0xFFFFFFE6) + 13) ^ 0xFFFFFFBD);
  v49 = 171 * (byte_100256B60[v8[56] & 0x3F ^ v3] ^ 0xE3);
  v50 = (v49 >> 9) ^ 0xFFFFFFD9;
  v51 = (v49 >> 8) & 0xB2;
  LOBYTE(v49) = *(_BYTE *)(v18 + (v8[196] & 0x3F ^ v3)) ^ 0xE6;
  LOBYTE(v17) = *(_BYTE *)(v19 + (v8[21] & 0x3F ^ v3)) ^ 0xE6;
  v52 = (v17 | v49) - 2 * ((v17 | v49) & 7) - 57;
  v53 = (v52 & 9 ^ 0x4A) - (v52 & 0x40 | 0xBD);
  LOBYTE(v49) = (((v53 - 67) ^ 0x4B) + ((v53 + 61) & 0x82) - (((v53 - 67) ^ 0x4B) & 0x82)) ^ 0xC2 | ((v17 & v49) - ((2 * (v17 & v49)) & 0xA8) + 84) ^ 0x54;
  v54 = (*(_BYTE *)(v19 + (v8[127] & 0x3F ^ v3)) ^ 0xE6) + (v49 ^ 0x30) - ((2 * v49) & 0x9F) - 48;
  v55 = (v8[423] ^ 0xE6) + (v54 ^ 0x75) + ((2 * v54) & 0xEA) - 117;
  v8[423] = v55 - ((2 * v55) & 0xCC) - 26;
  v56 = *(_BYTE *)(v19 + (v8[65] & 0x3F ^ v3)) & 2;
  v57 = ((((v56 & 0xFFFFFFFB | (4 * ((v56 >> 1) & 1))) ^ 0xA) - 114) ^ 0xFFFFFF92) & (v8[140] ^ v3);
  v8[369] = v57 - ((2 * v57) & 0x4C) - 26;
  LOBYTE(v32) = (v8[134] & 0x89 ^ 0x1A) + 30;
  v58 = ((v32 | 0x74) + ((2 * v32) & 0x10 ^ 0x7F) - 55) ^ 0xC8;
  v8[321] = v58 / 5u - (((205 * v58) >> 9) & 0xCC) - 26;
  v59 = 171 * (v8[339] ^ 0xE6);
  v60 = ((v59 >> 9) - ((v59 >> 8) & 0x22222222) + 17) & 0x4D ^ 4;
  LOBYTE(v57) = (*(_BYTE *)(v18 + (v8[39] & 0x3F ^ v3)) ^ 0xE6) + 50;
  LOBYTE(v31) = (v57 ^ 0x3B) + ((2 * v57) & 0x36) + 5;
  LOBYTE(v31) = (((((2 * v60) | 0xA2) - v60 + 47) & 0x4E ^ 0x45) - ((-48 - (((2 * v60) | 0xA2) - v60)) | 0x4E) - 2) ^ 0x90 | ((v31 & 0x32) - ((2 * v31) & 0x20) - 44) ^ v4;
  LOBYTE(v31) = (v8[330] ^ 0xE6) + (v31 ^ 0xBF) + 2 * (v31 & 0x3F) + 65;
  v8[330] = v31 - ((2 * v31) & 0xCC) - 26;
  LOBYTE(v60) = (((2 * (v8[322] & 7 ^ 4)) | 0x32) - (v8[322] & 7 ^ 4) - 25) ^ 0x1B;
  LOBYTE(v60) = ((2 * v60) & 0xD2) + (v60 ^ 0x69);
  v61 = ((0x37u >> ((1 - v60) & 7)) - ((0x6Eu >> ((1 - v60) & 7)) & 0x32) + 244192281) ^ ((55 << (v60 - 105))
                                                                                        - ((110 << (v60 - 105)) & 0x25A0C36)
                                                                                        + 19727899);
  v62 = (((v61 & 0xFFFFFFD2 ^ 0xFA3122F) - ((2 * (v61 & 0xFFFFFFD2 ^ 0xFA3122F)) & 0x2FC) + 894) ^ 0x37E) & (((v8[401] ^ 0xE6) - ((2 * (v8[401] ^ 0xE6)) & 0xC6) - 1695866269) ^ 0x9AEB2263);
  v63 = (v62 - ((2 * v62) & 0x479BBF40) - 473047136) ^ 0xE3CDDFA0 | v61 & v6;
  LODWORD(STACK[0x590]) = ((LODWORD(STACK[0x668]) + 16) ^ 0x5B)
                        + ((v63 - ((2 * v63) & 0xB0) - 40) ^ 0xFFFFFFF7)
                        + ((2 * (v63 - ((2 * v63) & 0xB0) - 40)) & 0x5E ^ 0x10);
  LOBYTE(v63) = (v8[237] ^ v3) + (byte_100256B60[v8[201] & 0x3F ^ v3] ^ 0xFA);
  v8[237] = v63 - ((2 * v63) & 0x58) + 44;
  v64 = *(unsigned __int8 *)(v19 + (v8[120] & 0x3F ^ v3)) ^ 0xE6;
  v65 = (v8[400] ^ 0xE6) - (v3 & (2 * (v8[400] ^ 0xE6))) - 898166250;
  v66 = v64 - ((2 * v64) & 0x1F0) + 2064123128;
  v67 = (((v66 ^ 0x7B0804F8 | v65 ^ 0xCA771216) - ((2 * (v66 ^ 0x7B0804F8 | v65 ^ 0xCA771216)) & 0x1DA) + 237) ^ 0xED) & (((v8[392] ^ 0xE6) - ((2 * v8[392]) & 0x12) - 1526673655) ^ 0xA500CF09);
  v68 = (v67 - ((2 * v67) & 0xFC0373C) - 941614178) ^ 0xC7E01B9E | (((v66 ^ 0x4A0000F8) & (v65 ^ 0x71216))
                                                                  - ((2 * ((v66 ^ 0x4A0000F8) & (v65 ^ 0x71216))) & 0x1F92A56C)
                                                                  - 1882631498) ^ 0x8FC952B6;
  v69 = ((v8[436] ^ 0xE6) - ((2 * (v8[436] ^ 0xE6)) & 0x46) + 94770211) ^ 0x5A61423;
  v70 = v68 - ((2 * v68) & 0x239EFF16) + 298811275;
  v71 = ((v70 ^ 0x11CF7F8B | v69) - ((2 * (v70 ^ 0x11CF7F8B | v69)) & 0x30) + 88) & 0x4F ^ 0x20A0069;
  v72 = (((2 * v71) & 0x4140014) - v71 - 1379872523) ^ 0xAFCAD0D4 | (((v70 ^ 0x78B) & v69)
                                                                   - ((2 * ((v70 ^ 0x78B) & v69)) & 0x15CCFB64)
                                                                   - 1964606030) ^ 0x8AE67DB2;
  LODWORD(STACK[0x580]) = v72 - ((2 * v72) & 0xAE);
  LODWORD(STACK[0x668]) = v48;
  v73 = v8[327];
  v74 = ((*(unsigned __int8 *)(v18 + (((_BYTE)v48 + 3) & 0x3F)) >> 1) ^ 0x73) & (v73 ^ 0x66);
  LOBYTE(v73) = ((((v8[208] ^ v3) + 43) ^ 0x7F) + 2 * ((v8[208] ^ v3) + 43) - 127) & (v73 ^ 0x19);
  LOBYTE(v74) = (v73 - ((2 * v73) & 0xFB) + 125) ^ 0x7D | (v74 - ((2 * v74) & 0xB0) - 40) ^ 0xD8;
  LOBYTE(v74) = (v8[335] ^ 0xE6) + (v74 ^ 0xF5) + ((2 * v74) & 0xEA) + 11;
  v8[335] = v74 - ((2 * v74) & 0xCC) - 26;
  LOBYTE(v74) = *(_BYTE *)(v19 + (v8[162] & 0x3F ^ v3));
  LOBYTE(v49) = (((v74 & 0x81 ^ 0xFE) - 2 * (v74 & 0x81) + 123) ^ 0x87) & (v8[323] ^ 0xE6);
  LOBYTE(v74) = (v49 - ((2 * v49) & 0x94) - 54) ^ v5 | (((2 * (v74 & 0x7E ^ 0x24)) | 0xA) - (v74 & 0x7E ^ 0x24) + 123) & 0xFE ^ 0xC6;
  v8[394] ^= (((v74 + (~(2 * v74) | 0x15) - 10) & 0xFE) >> 1) ^ 0x7A;
  LOBYTE(v49) = *(_BYTE *)(v18 + (v8[65] & 0x3F ^ v3)) ^ 0xE6;
  v8[356] ^= 0x7A ^ (v49 - ((2 * v49 + 98) & 0xA8) - 123);
  LOBYTE(v49) = (v8[103] ^ 0xD3) + (v8[436] ^ 0xE6) + 1;
  v8[436] = v49 - ((2 * v49) & 0xCC) - 26;
  v75 = *(unsigned __int8 *)(v19 + (v8[173] & 0x3F ^ v3));
  v76 = ((2 * v75) ^ 0xFFFFFFCB) + (v8[227] ^ v3) + ((16 * (v75 >> 2)) ^ 0x6F) - 6;
  v8[227] = v76 - ((2 * v76) & 0x58) + 44;
  v77 = v50 + v51 + 39;
  STACK[0x640] = v77;
  v8[383] ^= *(_BYTE *)(v19 + (v77 & 0x3F)) ^ 0xE6;
  LOBYTE(v77) = (v8[26] ^ v3) * (v8[26] ^ v3);
  LOBYTE(v77) = (v8[350] ^ 0xE6) + (v77 ^ 0xC8) - ((2 * v77) & 0x6E) + 56;
  v8[350] = v77 - ((2 * v77) & 0xCC) - 26;
  LOBYTE(v76) = *(_BYTE *)(v18 + (v8[136] & 0x3F ^ v3)) ^ 0xE6;
  LOBYTE(v16) = (v8[385] ^ 0xE6) - ((2 * (v8[385] ^ 0xE6)) & 0xB6) + 91;
  LOBYTE(v76) = v76 - ((2 * v76) & 0x96) - 53;
  LOBYTE(v77) = (((v76 ^ 0xCB | v16 ^ 0x5B) - ((2 * (v76 ^ 0xCB | v16 ^ 0x5B)) & 0x8E) + 71) ^ 0x47) & (((v8[378] ^ 0xE6) - ((2 * (v8[378] ^ 0xE6)) & 0x94) - 54) ^ 0xCA);
  LOBYTE(v77) = (v77 - ((2 * v77) & 0xD8) - 20) ^ 0xEC | (((v76 ^ 0xCB) & (v16 ^ 0x5B))
                                                        - ((2 * ((v76 ^ 0xCB) & (v16 ^ 0x5B))) & 0x94)
                                                        + 74) ^ 0x4A;
  LOBYTE(v16) = v77 - ((2 * v77) & 0x42) + 33;
  LOBYTE(v76) = (((2 * (v16 & 0xBD ^ 0xA5)) & 0x3E) - (v16 & 0xBD ^ 0xA5) - 30) ^ 0x24;
  LOBYTE(v17) = ((2 * v76) | 0x74) - v76 + 70;
  v78 = (v8[374] >> 1) ^ 0x73;
  LOBYTE(v16) = (((v16 | 0x3D) - ((2 * v16) & 0x84) - 78) ^ 0xD2) & ((v78 - ((2 * v78) & 0xA8) - 44) ^ 0xD4);
  LOBYTE(v16) = v17 ^ 0xF8 | (v16 - ((2 * v16) & 0x16) + 11) ^ 0xB;
  v8[358] = (v16 - ((2 * v16) & 0x6E) - 73) ^ 0x51;
  v79 = (v8[422] ^ 0xE6) - ((2 * (v8[422] ^ 0xE6)) & 0x140) - 1124769376;
  v80 = v79 & 0x8A ^ 0x81;
  v81 = (((v8[92] ^ v3) - ((2 * v8[92]) & 0x1A4) + 1204136914) ^ 0x4C52BD2) & (v79 ^ 0x1E5F);
  v82 = (v81 - ((2 * v81) & 0x3CD6AA50) + 1584092456) ^ 0x5E6B5528 | (v80 + 67) & 0xBBBBBBBB;
  LOBYTE(v80) = ((2 * ((79 - (((205 * (v8[155] ^ v3)) >> 10) & 7 ^ 0x46)) ^ 9)) & 0x76)
              + ((79 - (((205 * (v8[155] ^ v3)) >> 10) & 7 ^ 0x46)) ^ 0xB2);
  v83 = (v82 - ((2 * v82) & 0x7A63AFCE) + 1026676711) ^ 0x3D31D7E7;
  v84 = ((v83 << (v80 + 69)) - ((2 * (v83 << (v80 + 69))) & 0xC0) + 96) ^ ((v83 >> ((3 - v80) & 7))
                                                                         - ((2 * (v83 >> ((3 - v80) & 7))) & 0xC4)
                                                                         + 226);
  LOBYTE(v84) = (v8[395] ^ 0xE6) + (v84 ^ 0xE2) + ((2 * (v84 & 0x1F)) ^ 0xFB) - 95;
  v8[395] = v84 - ((2 * v84) & 0xCC) - 26;
  v8[345] ^= 0xFDu;
  LOBYTE(v84) = (v8[366] ^ 0xE6) * (v8[366] ^ 0xE6);
  LOBYTE(v84) = (v84 - ((2 * v84) & 0xBF) - 33) ^ 0xDF;
  LOBYTE(v84) = (v8[343] ^ 0xE6) + ((-90 * v84) & 0xF7) + ((-45 * v84) ^ 0x7B) - 123;
  v8[343] = v84 - ((2 * v84) & 0xCC) - 26;
  LOBYTE(v84) = (2 * *(_BYTE *)(v19 + (v8[85] & 0x3F ^ v3))) ^ 0xCC;
  v8[96] = (~(2 * v84) + v84) ^ v3;
  v85 = (v8[39] & 0x58 ^ 8) + ((v8[39] >> 1) & 0x6C ^ 0xFFFFFFBB) - 89;
  LODWORD(STACK[0x5A0]) = v85;
  LOBYTE(v17) = (*(_BYTE *)(v18 + (((v85 & 0xFE) - ((2 * (_BYTE)v85) & 0x54) + 43) & 0x3E ^ 0x2ALL)) ^ 0xE6) & (byte_100256B60[v8[33] & 0x3F ^ v3] ^ 5);
  v8[373] ^= (v17 - ((2 * v17) & 0xAA) + 85) ^ 0x55;
  LOBYTE(v17) = v8[239] & 0x3F ^ 0xB4;
  v86 = (((v17 - ((2 * v17) & 0x7C) - 2) & 0xE3 ^ 0x81)
                        + ((v17 - ((2 * v17) & 0x7C) - 2) ^ 0x66)
                        - (((v17 - ((2 * v17) & 0x7C) - 2) ^ 0x66) & 0xE3)) ^ 0xE3;
  v87 = *(unsigned __int8 *)(v19 + v86) ^ 0xFFFFFFE6 | v8[148] ^ v3;
  v88 = (((2 * (v87 + 14)) & 4) + ((v87 + 14 - ((2 * v87) & 0x1C)) & 0xFFFFFFC6 ^ 0xFFFFFFBF) + 69) ^ 0x44;
  v89 = ((((2 * v88) | 0x1C) - v88 - 14) ^ 0x48 | *(_BYTE *)(v19 + (v8[105] & 0x3F ^ v3)) & 0x18)
      - 2
      * ((((((2 * v88) | 0x1C) - v88 - 14) ^ 0x48) & 0x33 | *(_BYTE *)(v19 + (v8[105] & 0x3F ^ v3)) & 0x10) ^ (((2 * v88) | 0x1C) - v88 - 14) & 2);
  LOBYTE(v87) = v8[354];
  LOBYTE(v88) = (v8[221] ^ v3) & (v87 ^ 0xE6);
  LOBYTE(v87) = (v8[339] ^ 0xE6) & (v87 ^ 0x19);
  LOBYTE(v88) = (v87 - ((2 * v87) & 0x5E) + 47) ^ 0x2F | (v88 + (~(2 * v88) | 0x99) + 52) ^ 0x33;
  v8[441] = (v88 - ((2 * v88) & 0x22) + 17) & 0x7F ^ 0xF7;
  v90 = 205 * (*(unsigned __int8 *)(v18 + (v8[171] & 0x3F ^ v3)) ^ 0xE6);
  v91 = (v8[24] ^ v3) + ((v90 >> 10) ^ 0xFFFFFFEB) + ((v90 >> 9) & 0x56) + 21;
  v8[44] ^= 0x61 ^ (v91 + (~(2 * v91) | 0x3D) + 98);
  v92 = (~((~((v8[137] >> 1) & 0x24) | 0x32) + ((v8[137] >> 1) & 0x20 | 0xD)) & 0x24 | v8[329] & 0x53) ^ 0x66;
  v8[423] ^= 0xCB ^ (v92 - ((2 * v92) & 0x87) - 53);
  v8[344] ^= 0xAB ^ (3 * (((v8[67] | 0x2F) - (v2 & (2 * (v8[67] | 0x2F))) + 53) ^ 0x35)
                                    + (~(6 * (((v8[67] | 0x2F) - (v2 & (2 * (v8[67] | 0x2F))) + 53) ^ 0x35)) | 0xA9)
                                    - 84);
  v8[370] = 83;
  v8[419] ^= 0xBDu;
  LOBYTE(v77) = ((v8[400] & 0xA1 ^ 0x7E) + 44) ^ v4;
  v93 = *(_BYTE *)(v18 + (v8[37] & 0x3F ^ v3)) & 0x5E ^ 0x1C;
  LOBYTE(v77) = ((((v93 - ((2 * v93) & 0x38) - 100) & 0x2E ^ 0xD) - ((v93 - ((2 * v93) & 0x38) - 100) | 0x2F) - 2) | (v77 + 110) & 0xA1) ^ 0x1A;
  LOBYTE(v77) = ((v77 - ((2 * v77) & 0xA8) - 44) ^ 0xDA) + (v8[188] ^ v3);
  LODWORD(STACK[0x5B0]) = byte_100256B60[v86];
  LOBYTE(v92) = v8[61] ^ v3;
  v94 = byte_100256B60[v8[193] & 0x3F ^ v3] ^ 5;
  LOBYTE(v50) = (((v94 | v92) - 2 * ((v94 | v92) & 0xF) + 15) ^ 0xF) & (v8[403] ^ 0xE6);
  v95 = (v50 - ((2 * v50) & 0xF4) - 6) ^ 0xFA | ((v94 & v92) - ((2 * (v94 & v92)) & 0xC) + 6) ^ 6;
  v96 = (v8[357] ^ 0xE6) + (v95 ^ 0x20) - ((2 * v95) & 0xBF) - 32;
  v8[357] = v96 + (~(2 * v96) | 0x33) - 25;
  v97 = *(_BYTE *)(v18 + (v8[159] & 0x3F ^ v3)) ^ 0xE6;
  LODWORD(STACK[0x608]) = v89 - 79;
  v98 = ((v97 & ((v89 - 79) ^ 0x4E)) - ((2 * (v97 & ((v89 - 79) ^ 0x4E))) & 0x58) + 44) & 0x9D ^ 0x2E;
  v8[371] ^= 0x85 ^ (v98 + (~(2 * v98) | 0xF5) - 122);
  LOBYTE(v92) = (v8[116] ^ v3) - ((2 * (v8[116] ^ v3)) & 0xC2) + 97;
  LOBYTE(v50) = (v8[416] ^ 0xE6) - (v3 & (2 * (v8[416] ^ 0xE6))) + 22;
  v99 = (((v50 ^ 0x16 | v92 ^ 0x61) - ((2 * (v50 ^ 0x16 | v92 ^ 0x61)) & 4) - 126) ^ 0x82) & (((v8[349] ^ 0xE6)
                                                                                             - ((2 * (v8[349] ^ 0xE6)) & 0xA2)
                                                                                             + 81) ^ 0x51);
  v100 = (v99 - ((2 * v99) & 0x94) - 54) ^ 0xCA | (((v50 ^ 0x16) & (v92 ^ 0x61))
                                                 - ((2 * ((v50 ^ 0x16) & (v92 ^ 0x61))) & 0xE2)
                                                 + 113) ^ 0x71;
  v101 = (((v85 & 0xFE) - ((2 * v85) & 0x54) - 1211791829) >> 1) ^ 0x5BE2C315;
  v102 = v100 - ((2 * v100) & 0x52) + 41;
  LOBYTE(v84) = (((v102 ^ 0x29 | v101) - ((2 * (v102 ^ 0x29 | v101)) & 0xA8) + 84) ^ 0x54) & (((v8[321] ^ 0xE6) + 0x80) ^ 0x80);
  v103 = (v84 - ((2 * v84) & 0x34) + 26) ^ 0x1A | (((v102 ^ 0x29) & v101) - ((2 * ((v102 ^ 0x29) & v101)) & 0xB6) - 37) ^ 0xDB;
  v8[347] = (v103 - ((2 * v103) & 0x62) - 79) ^ 0x57;
  LOBYTE(v77) = v77 - ((2 * v77) & 0x58) + 44;
  v8[188] = v77;
  LODWORD(v77) = *(unsigned __int8 *)(v19 + (v77 & 0x3F ^ v3));
  HIDWORD(v104) = v77 ^ 2;
  LODWORD(v104) = (v77 ^ 0xFFFFFFE7) << 24;
  LOBYTE(v77) = (v8[381] ^ 0xE6) - ((2 * (v8[381] ^ 0xE6)) & 0x3F);
  LOBYTE(v101) = (((2 * (v8[4] & 7 ^ 3)) | 4) - (v8[4] & 7 ^ 3) - 2) ^ 5;
  LOBYTE(v101) = ((2 * v101) & 0xBC) + (v101 ^ 0xDE);
  v105 = ((v8[430] ^ 0xE6) - ((2 * (v8[430] ^ 0xE6)) & 0x1E0) + 2111102448) ^ 0x7DD4DDF0;
  v106 = (v105 << (v101 + 34)) - ((2 * (v105 << (v101 + 34))) & 0x13E84114) - 1980489590;
  v107 = (v105 >> ((6 - v101) & 7)) - ((2 * (v105 >> ((6 - v101) & 7))) & 0x418734A0) + 1623431760;
  LOBYTE(v101) = (v8[415] ^ 0xE6) - ((2 * (v8[415] ^ 0xE6)) & 7);
  v8[151] = v3;
  LOBYTE(v78) = v8[247] ^ v3;
  v108 = *(_BYTE *)(v19 + (v8[41] & 0x3F ^ v3)) ^ 0xE6;
  LOBYTE(v78) = v78 - ((2 * v78) & 0xA) + 5;
  v109 = v108 - ((2 * v108) & 7) - 125;
  LOBYTE(v101) = (((v109 ^ 0x83 | v78 ^ 5) - ((2 * (v109 ^ 0x83 | v78 ^ 5)) & 0x30) + 24) ^ 0x18) & ((v101 - 125) ^ 0x83);
  v110 = (v101 - ((2 * v101) & 0x28) + 20) ^ 0x14 | (((v109 ^ 0x83) & (v78 ^ 5))
                                                   - ((2 * ((v109 ^ 0x83) & (v78 ^ 5))) & 6)
                                                   - 125) ^ 0x83;
  LOBYTE(v107) = v106 ^ 0xDA ^ v107;
  v111 = (v110 - ((2 * v110) & 0xB2) - 39) ^ 0xD9;
  LOBYTE(v77) = (((v111 | v107) - ((2 * (v111 | v107)) & 0x10) - 120) ^ 0x88) & ((v77 - 97) ^ 0x9F);
  LOBYTE(v77) = (v77 - ((2 * v77) & 0x9C) - 50) ^ 0xCE | ((v111 & v107) - ((2 * (v111 & v107)) & 0x94) + 74) ^ 0x4A;
  LOBYTE(v77) = (v8[354] ^ 0xE6)
              + ((v77 - ((2 * v77) & 0xBC) - 34) ^ 0xEB)
              + (v2 & (2 * (v77 - ((2 * v77) & 0xBC) - 34)) ^ v9)
              - 53;
  v8[354] = v77 - ((2 * v77) & 0xCC) - 26;
  LOBYTE(v77) = v8[442] ^ 0xE6;
  LOBYTE(v18) = v77 - 86;
  LOBYTE(v77) = v77 - 86 - ((2 * v77) & 0x55);
  LOBYTE(v18) = ((v77 & 0x23 ^ 1) - ((2 * v18) & 4) - 58) ^ 0xC4;
  LOBYTE(v77) = (((v8[372] ^ 0xE6) - ((2 * (v8[372] ^ 0xE6)) & 7) - 125) ^ 0x83) & (v77 ^ 0x55);
  LOBYTE(v77) = (v18 - ((2 * v18) & 0x58) + 44) ^ 0xD | (v77 - ((2 * v77) & 0x6C) - 74) ^ 0xB6;
  LOBYTE(v77) = (v77 - ((2 * v77) & 0x98) - 52) ^ 0xCC;
  v8[339] = ((2 * v77 * v77) & 0x33) - v77 * v77 - 26;
  LOBYTE(v77) = (v8[444] & 0x25 ^ 0xB6) + (v8[444] & 0x21 ^ 9) - ((v8[444] & 0x25 ^ 0xB6) & 0x23);
  LOBYTE(v77) = (v8[322] ^ 0xE6) + (v77 & 0xF5 ^ 0x37) + ((2 * v77) & 0xE3 ^ 0x99) + 117;
  LOBYTE(v77) = (v8[361] ^ 0xE6) + (v77 ^ 0xBC) + ((2 * v77) & 0x78) + 68;
  v8[361] = v77 - ((2 * v77) & 0xCC) - 26;
  LODWORD(v77) = (89 * (LODWORD(STACK[0x788]) != -289289362)) ^ LODWORD(STACK[0x5F0]);
  LODWORD(STACK[0x570]) = LODWORD(STACK[0x5E0]) + 2;
  LODWORD(STACK[0x5D0]) += 107;
  v112 = LODWORD(STACK[0x590]) - 47;
  LODWORD(STACK[0x5E0]) = LODWORD(STACK[0x580]) + 218;
  LODWORD(STACK[0x5F0]) = (v104 >> 26) - ((2 * (v104 >> 26)) & 0x76) + 59;
  return ((uint64_t (*)(void *, _QWORD))*(&off_1002C8B50 + (int)v77))(&unk_100254810, v112 ^ 0x7Fu);
}

uint64_t sub_10016BFBC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  int v7;

  v4 = STACK[0x560];
  v5 = (LODWORD(STACK[0x560]) - 130361069) & 0x7C526BF;
  v6 = (v3 + (LODWORD(STACK[0x560]) ^ 0x362) - 1413) ^ v2;
  LODWORD(STACK[0x670]) = v6;
  if (v6 <= 1)
    v7 = 1;
  else
    v7 = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50
                                                                               + (((4
                                                                                  * ((v7 - 17) < 0xFFFFFFF7)) | (16 * ((v7 - 17) < 0xFFFFFFF7))) ^ v4))
                                                                     - v5
                                                                     + 1710))(a1, a2, 1127335163, 1127335163);
}

uint64_t sub_10016C038()
{
  unsigned int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((667 * (((v1 < 0x10) ^ (v0 - 29) ^ 0xA5) & 1)) ^ v0)))();
}

uint64_t sub_10016C074()
{
  int v0;
  int v1;
  _OWORD *v2;

  *v2 = xmmword_100254780;
  return ((uint64_t (*)(__n128))((char *)*(&off_1002C8B50
                                                   + ((1454
                                                     * (((v0 + 663221928) & 0xD87806AB ^ 0x431) == (v1 & 0xFFFFFFF0))) ^ (v0 - 1428)))
                                         - 12))((__n128)xmmword_100254780);
}

uint64_t sub_10016C0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;

  LODWORD(STACK[0x678]) = (2 * v6) ^ 0x90E;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002C8B50
                                                                                                 + (int)(((((2 * v6) ^ 0xFFFFF2C2) + v6 + 356) * (v8 != v7)) ^ v6)))(a1, a2, 1127335163, a4, a5, a6, 9);
}

uint64_t sub_10016C13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))*(&off_1002C8B50
                                                                     + ((19 * (((v3 - 1405) & v5) == 0)) ^ v3)))(a1, a2, a3, (_DWORD)a3 + v4 + ((v3 - 893) | 0x4B2u) - 1722);
}

uint64_t sub_10016C180(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int8x16x4_t v8;

  LODWORD(STACK[0x5C0]) = v2 & 0xFFFFFFF8;
  v8.val[0].i64[0] = v1 & 8;
  v8.val[0].i64[1] = v1 & 8 | 1;
  v8.val[1].i64[0] = v8.val[0].i64[0] | 2;
  v8.val[1].i64[1] = ((v5 ^ 0x149) - 1049) & v1 | 3;
  v8.val[2].i64[0] = v8.val[0].i64[0] | 4;
  v8.val[2].i64[1] = v8.val[0].i64[0] | 5;
  v8.val[3].i64[0] = v8.val[0].i64[0] | 6;
  v8.val[3].i64[1] = v8.val[0].i64[0] | 7;
  *(int8x8_t *)(v3 + v1) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(a1 + v8.val[0].i64[0]), *(int8x8_t *)(v4 + v8.val[0].i64[0])), *(int8x8_t *)(v6 + v8.val[0].i64[0] + 4)), (int8x8_t)0x1818181818181818), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v8, (int8x16_t)xmmword_100254790), (int8x8_t)0x5959595959595959));
  return ((uint64_t (*)(__n128))((char *)*(&off_1002C8B50 + ((620 * ((v2 & 0xFFFFFFF8) - 8 == v1)) ^ v5)) - 4))((__n128)xmmword_100254790);
}

void sub_10016C25C()
{
  JUMPOUT(0x10016C1B8);
}

uint64_t sub_10016C264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;

  LODWORD(STACK[0x678]) = (v7 + 1006949213) & 0xC3FB29CD;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002C8B50
                                                                                                 + ((439 * (((v6 == LODWORD(STACK[0x5C0])) ^ (v7 - 52)) & 1)) ^ v7)))(a1, a2, 1127335163, a4, a5, a6, 9);
}

uint64_t sub_10016C2E0@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  v8 = 7 * (a4 ^ 0x62D);
  v9 = 166 * (v8 ^ 0x423);
  LODWORD(STACK[0x678]) = v9;
  *(_BYTE *)(v5 + (a3 - 1127335163)) = *(_BYTE *)(a1 + ((a3 - 1127335163) & 0xFLL)) ^ *(_BYTE *)((((_BYTE)a3 + 5) & 0xF) + v7 + 4) ^ *(_BYTE *)(v6 + ((a3 - 1127335163) & 0xFLL)) ^ (89 * ((a3 + 5) & 0xF)) ^ 0x18;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + (((a3 != (v8 ^ (a2 - 1056)) + v4) * (v9 ^ 0x3D7)) ^ v8)))();
}

void sub_10016C374()
{
  JUMPOUT(0x10016C324);
}

uint64_t sub_10016C37C(char *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, char a8)
{
  int v8;
  char v9;
  char v10;
  _BYTE *v11;
  int v12;
  char v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  char v20;
  int v21;
  char v22;
  char *v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  _BYTE *v29;
  char v30;
  _BYTE *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  int v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;

  v19 = a8 ^ 0x46;
  v20 = v9 + v10;
  v21 = LODWORD(STACK[0x570]) ^ LODWORD(STACK[0x5D0]);
  v22 = (*v11 ^ 0xC9 ^ ((LOBYTE(STACK[0x678]) - 12) | 0x10)) + 127;
  *v11 = (((((2 * v22) & 0xEF) + (v22 ^ 0x77)) ^ 0xA1) + ((2 * (((2 * v22) & 0xEF) + (v22 ^ 0x77))) & 0x42) - 24) ^ 0x99;
  if (v8 == v14 + 1)
    v23 = a1;
  else
    v23 = a1 + 1;
  v24 = *v23;
  if (v8 == v14 + 1)
    v25 = 0;
  else
    v25 = v15;
  v26 = v24 ^ v25;
  if (v8 == v14 + 1)
    v27 = 4;
  else
    v27 = 5;
  v28 = v26 ^ *(_BYTE *)(v18 + v27);
  if (v8 == v14 + 1)
    v29 = v17;
  else
    v29 = v17 + 1;
  v30 = v28 ^ *v29;
  if (v8 == v14 + 1)
    v31 = v11;
  else
    v31 = v11 + 1;
  v32 = (((v30 ^ *v31) - 20) ^ 0x7F) + 2 * ((v30 ^ *v31) - 20) - 39;
  *v31 = v30 ^ ((v32 ^ 0x48) + ((2 * v32) & 0x90) + 96);
  v33 = STACK[0x670];
  v34 = 2u % LODWORD(STACK[0x670]);
  v35 = (v34 * v15) ^ a1[v34] ^ *(_BYTE *)(v18 + v34 + 4) ^ v17[v34];
  v36 = (((v35 ^ v11[v34]) + 111) ^ 0x9F) + 2 * (((v35 ^ v11[v34]) + 111) & 0x1F) + 127;
  v11[v34] = v35 ^ ((v36 ^ 0xCE) + ((2 * v36) & 0x9C) + 20);
  v37 = 3 % v33;
  v38 = (byte_1002548E0[v37] ^ v11[v37] ^ (-79 * v37) ^ byte_100279850[v37] ^ byte_1002635B0[v37 | 4])
      + LODWORD(STACK[0x5A0]);
  v11[v37] = a1[v37] ^ (v37 * v15) ^ *(_BYTE *)(v18 + (v37 | 4)) ^ v17[v37] ^ (((((2 * v38) & 0x2E) + (v38 ^ 0x97) + 108) ^ 0x73)
                                                                             + ((2 * (((2 * v38) & 0x2E) + (v38 ^ 0x97))
                                                                               - 40) & 0xE7)
                                                                             - 118);
  v39 = STACK[0x788];
  v40 = LODWORD(STACK[0x788]) ^ v14;
  v41 = 4 % v40;
  v42 = (v41 * v15) ^ a1[v41] ^ *(_BYTE *)(v41 + v18 + 4) ^ v17[v41];
  v43 = (((v42 ^ v11[v41]) - 3) ^ 0xBE) + ((2 * ((v42 ^ v11[v41]) - 3)) & 0x7C) + 96;
  v11[v41] = v42 ^ ((v43 ^ 0x58) + ((2 * v43) & 0xB0) - 118);
  v44 = v16 % v40;
  v45 = (v44 * v15) ^ a1[v44] ^ *(_BYTE *)(v44 + v18 + 4) ^ v17[v44];
  v46 = (v45 ^ v11[v44]) + 17;
  v11[v44] = v45 ^ (((((2 * v46) & 0x76) + (v46 ^ 0xBB) + 127) ^ 0xA2)
                  + ((2 * (((2 * v46) & 0x76) + (v46 ^ 0xBB)) + 126) & 0x44)
                  + 36);
  v47 = 6 % v40;
  v48 = (byte_1002548E0[v47] ^ v11[v47] ^ (-79 * v47) ^ byte_100279850[v47] ^ byte_1002635B0[v47 + 4]) + v19;
  v11[v47] = a1[v47] ^ (v47 * v15) ^ *(_BYTE *)(v18 + v47 + 4) ^ v17[v47] ^ ((v48 ^ 0x58) + ((2 * v48) & 0xB0) - 88);
  v49 = 7 % v40;
  v50 = (v49 * v15) ^ a1[v49] ^ *(_BYTE *)(v49 + v18 + 4) ^ v17[v49];
  v11[v49] = v50 ^ ((((v50 ^ v11[v49]) + 47) ^ 0x6F) + ((2 * ((v50 ^ v11[v49]) + 47)) & 0xDF) - 111);
  v51 = 8 % v40;
  v52 = v20 + (byte_1002548E0[v51] ^ v11[v51] ^ (-79 * v51) ^ byte_100279850[v51] ^ byte_1002635B0[v51 + 4]) + 58;
  v11[v51] = a1[v51] ^ (v51 * v15) ^ *(_BYTE *)(v18 + v51 + 4) ^ v17[v51] ^ ((((v52 ^ 0x7F) + 2 * v52 - 18) ^ 0x99)
                                                                           + ((2 * ((v52 ^ 0x7F) + 2 * v52) + 28) & 0x33)
                                                                           - 6);
  v53 = a7 % v40;
  LOBYTE(v40) = (a1[v53] ^ v11[v53] ^ (v53 * v15) ^ *(_BYTE *)(v53 + v18 + 4) ^ v17[v53]) - 118;
  v11[v53] = byte_1002548A0[v53] ^ (63 * v53) ^ byte_100268430[v53 + 1] ^ byte_10027B660[v53 + 7] ^ ((v40 ^ 0x1F) + 2 * (v40 & 0x1F) - 31);
  LODWORD(v53) = v39 ^ v14;
  v54 = 0xA % (v39 ^ v14);
  v55 = (63 * v54) ^ byte_1002548A0[v54] ^ byte_100268430[v54 + 1] ^ byte_10027B660[v54 + 7];
  v56 = ((LODWORD(STACK[0x660]) + 36) ^ 0x10)
      - ((2 * (LODWORD(STACK[0x660]) + 36)) & 0xFFFFFFDF)
      + (v55 ^ v11[v54])
      - 16;
  v11[v54] = v55 ^ (((((2 * v56) & 0xBF) + (v56 ^ 0xDF) + 122) ^ 0xED)
                  + ((2 * (((2 * v56) & 0xBF) + (v56 ^ 0xDF)) - 12) & 0xDA)
                  - 70);
  v57 = 0xB % v53;
  LOBYTE(v55) = (63 * v57) ^ byte_1002548A0[v57] ^ byte_100268430[v57 + 1] ^ byte_10027B660[v57 + 7];
  v11[v57] = v55 ^ ((((v55 ^ v11[v57]) - 44) ^ 0x77) + ((2 * ((v55 ^ v11[v57]) - 44)) & 0xEF) - 119);
  v58 = 0xC % v53;
  v59 = (63 * v58) ^ byte_1002548A0[v58] ^ byte_100268430[v58 + 1] ^ byte_10027B660[v58 + 7];
  LODWORD(v57) = (v59 ^ v11[v58])
               + ~(((2 * (LODWORD(STACK[0x5E0]) - 3)) ^ 0xFFFFFFAE) + ((LODWORD(STACK[0x5E0]) - 3) ^ 0x28));
  v11[v58] = v59 ^ (((((2 * v57) & 0xD4) + (v57 ^ 0x6A) + 88) ^ 0x7F) + 2 * (((2 * v57) & 0xD4) + (v57 ^ 0x6A)) - 49);
  LODWORD(v57) = STACK[0x788];
  v60 = LODWORD(STACK[0x788]) ^ v14;
  v61 = 0xD % v60;
  v62 = (byte_1002548E0[v61] ^ v11[v61] ^ (-79 * v61) ^ byte_100279850[v61] ^ byte_1002635B0[v61 + 4])
      + (LODWORD(STACK[0x5B0]) ^ v16);
  LOBYTE(v62) = (v62 ^ 0xF6) + ((2 * v62) & 0xEC) + 28;
  v11[v61] = byte_1002548A0[v61] ^ (63 * v61) ^ byte_100268430[v61 + 1] ^ byte_10027B660[v61 + 7] ^ ((v62 ^ 0xD6) + ((2 * v62) & 0xAC) + 24);
  v63 = 0xE % v60;
  v64 = (63 * v63) ^ byte_1002548A0[v63] ^ byte_100268430[v63 + 1] ^ byte_10027B660[v63 + 7];
  v65 = (v64 ^ v11[v63]) + 42;
  v11[v63] = v64 ^ ((((v13 & (2 * v65)) + (v65 ^ 0x6D) - 97) | 0x72)
                  - ((96 - ((v13 & (2 * v65)) + (v65 ^ 0x6D))) & 0x72)
                  - 12);
  v66 = 0xF % v60;
  v67 = (63 * v66) ^ byte_1002548A0[v66] ^ byte_100268430[v66 + 1] ^ byte_10027B660[v66 + 7];
  v11[v66] = v67 ^ ((((v67 ^ v11[v66]) + 14) ^ 0x37) + ((2 * ((v67 ^ v11[v66]) + 14)) & 0x6E) + 112);
  LODWORD(v57) = v57 ^ v14;
  v68 = 0x10 % v57;
  v69 = v12
      + a2
      + (byte_1002548E0[v68 & 0xF] ^ v11[v68] ^ byte_100279850[v68 & 0xF] ^ byte_1002635B0[(v68 & 0xF) + 4] ^ (-79 * (v68 & 0xF)))
      - 127;
  v11[v68] = byte_1002548A0[v68 & 0xF] ^ (63 * (v68 & 0xF)) ^ byte_100268430[(v68 & 0xF) + 1] ^ byte_10027B660[(v68 & 0xF) + 7] ^ ((((v69 ^ 0xFE) + 4 * (v69 >> 1) + 96) ^ 0xC1) + ((2 * ((v69 ^ 0xFE) + 4 * (v69 >> 1)) - 64) & 0x83) - 31);
  v70 = 0x11 % v57;
  v71 = byte_100268430[(v70 & 0xF) + 1] ^ byte_1002548A0[v70 & 0xF];
  v72 = 63 * (v70 & 0xF);
  LOBYTE(v68) = byte_10027B660[(v70 & 0xF) + 7];
  v73 = (v71 ^ v11[v70] ^ v68 ^ v72) + 35;
  v11[v70] = v71 ^ v72 ^ v68 ^ (((2 * v73) & 0xFB)
                              + (v73 ^ 0xFD)
                              + ((15 - (((2 * v73) & 0xFB) + (v73 ^ 0xFD))) | 0xCD)
                              + ((((2 * v73) & 0xFB) + (v73 ^ 0xFD) + 48) | 0xCD)
                              + 55);
  v74 = 0x12 % v57;
  v75 = (a1[v74 & 0xF] ^ v11[v74] ^ *(unsigned __int8 *)((v74 & 0xF) + v18 + 4) ^ ((v74 & 0xF) * v15) ^ v17[v74 & 0xF])
      + (LODWORD(STACK[0x5F0]) ^ 0xFFFFFF86);
  v11[v74] = byte_1002548A0[v74 & 0xF] ^ (63 * (v74 & 0xF)) ^ byte_100268430[(v74 & 0xF) + 1] ^ byte_10027B660[(v74 & 0xF) + 7] ^ ((v75 ^ 0x7B) + ((2 * v75) & 0xF7) - 123);
  v76 = STACK[0x788];
  LODWORD(v74) = LODWORD(STACK[0x788]) ^ v14;
  v77 = 0x13 % v74;
  LOBYTE(v70) = (byte_1002548E0[v77 & 0xF] ^ v11[v77] ^ byte_100279850[v77 & 0xF] ^ byte_1002635B0[(v77 & 0xF) + 4] ^ (-79 * (v77 & 0xF)))
              + STACK[0x640];
  LOBYTE(v59) = (v70 ^ 0xF6) + ((2 * v70) & 0xEC) + 30;
  v11[v77] = byte_100254850[v77 & 0xF] ^ (-59 * (v77 & 0xF)) ^ byte_100254990[(v77 & 0xF) + 1] ^ byte_10027ADE0[(v77 & 0xF) + 1] ^ ((v59 ^ 0xF2) + ((2 * v59) & 0xE4) - 6);
  v78 = 0x14 % v74;
  v79 = (v78 & 0xF) + 1;
  LOBYTE(v63) = byte_100254990[v79] ^ byte_100254850[v78 & 0xF];
  LOBYTE(v79) = byte_10027ADE0[v79];
  v80 = -59 * (v78 & 0xF);
  v81 = (v63 ^ v11[v78] ^ v79 ^ v80) - 64;
  v11[v78] = v63 ^ v80 ^ v79 ^ ((v81 ^ 0xF7) + ((2 * v81) & 0xEF) + 9);
  v82 = 0x15 % v74;
  v83 = (v82 & 0xF) + 1;
  LOBYTE(v63) = byte_100254990[v83];
  LOBYTE(v83) = byte_10027ADE0[v83];
  LOBYTE(v63) = v63 ^ byte_100254850[v82 & 0xF];
  LOBYTE(v78) = -59 * (v82 & 0xF);
  LOBYTE(v79) = (v63 ^ v11[v82] ^ v83 ^ v78) - 26;
  v11[v82] = v63 ^ v78 ^ v83 ^ ((v79 ^ 0x55) + ((2 * v79) & 0xAA) - 85);
  LODWORD(v82) = v76 ^ v14;
  v84 = 0x16 % (v76 ^ v14);
  v85 = (v84 & 0xF) + 1;
  LOBYTE(v83) = byte_100254990[v85] ^ byte_100254850[v84 & 0xF];
  LOBYTE(v85) = byte_10027ADE0[v85];
  LOBYTE(v78) = -59 * (v84 & 0xF);
  LOBYTE(v79) = (v83 ^ v11[v84] ^ v85 ^ v78) - 95;
  v11[v84] = v83 ^ v78 ^ v85 ^ ((v79 ^ 0xA7) + ((2 * v79) & 0x4E) + 89);
  v86 = 0x17 % v82;
  LOBYTE(v78) = (byte_1002548E0[v86 & 0xF] ^ v11[v86] ^ byte_100279850[v86 & 0xF] ^ byte_1002635B0[(v86 & 0xF) + 4] ^ (-79 * (v86 & 0xF)))
              + (v21 ^ 0xB5);
  v11[v86] = byte_100254850[v86 & 0xF] ^ (-59 * (v86 & 0xF)) ^ byte_100254990[(v86 & 0xF) + 1] ^ byte_10027ADE0[(v86 & 0xF) + 1] ^ ((v78 ^ 0xF4) + ((2 * v78) & 0xE8) + 12);
  v87 = 0x18 % v82;
  v88 = (v87 & 0xF) + 1;
  LOBYTE(v83) = byte_100254990[v88] ^ byte_100254850[v87 & 0xF];
  LOBYTE(v88) = byte_10027ADE0[v88];
  LOBYTE(v78) = -59 * (v87 & 0xF);
  LOBYTE(v79) = (v83 ^ v11[v87] ^ v88 ^ v78) - 118;
  v11[v87] = v83 ^ v78 ^ v88 ^ ((v79 ^ 0x1D) + ((2 * v79) & 0x3A) - 29);
  v89 = 0x19 % v82;
  v90 = (v89 & 0xF) + 1;
  LOBYTE(v79) = byte_100254990[v90] ^ byte_100254850[v89 & 0xF];
  LOBYTE(v90) = byte_10027ADE0[v90];
  LOBYTE(v83) = -59 * (v89 & 0xF);
  LOBYTE(v78) = (v79 ^ v11[v89] ^ v90 ^ v83) - 125;
  v11[v89] = v79 ^ v83 ^ v90 ^ ((v78 ^ 0x6D) + ((2 * v78) & 0xDA) - 109);
  LODWORD(v89) = STACK[0x788];
  LODWORD(v83) = LODWORD(STACK[0x788]) ^ v14;
  v91 = 0x1A % v83;
  v92 = (v91 & 0xF) + 1;
  v93 = byte_100254990[v92];
  LOBYTE(v92) = byte_10027ADE0[v92];
  LOBYTE(v90) = -59 * (v91 & 0xF);
  LOBYTE(v79) = v93 ^ byte_100254850[v91 & 0xF];
  LOBYTE(v78) = (v79 ^ v11[v91] ^ v92 ^ v90) + 118;
  v11[v91] = v79 ^ v90 ^ v92 ^ ((v78 ^ 0x3A) + ((2 * v78) & 0x74) - 58);
  v94 = 0x1B % v83;
  LOBYTE(v59) = byte_100254990[(v94 & 0xF) + 1] ^ byte_100254850[v94 & 0xF] ^ (-59 * (v94 & 0xF)) ^ byte_10027ADE0[(v94 & 0xF) + 1];
  v11[v94] = v59 ^ ((((v59 ^ v11[v94]) - 122) ^ 0xAB) + ((2 * (v59 ^ v11[v94]) + 12) & 0x56) + 6);
  v95 = 0x1C % v83;
  v96 = (v95 & 0xF) + 2;
  v97 = byte_100254DF0[v96];
  LOBYTE(v96) = byte_100266AE0[v96];
  LOBYTE(v90) = 87 * (v95 & 0xF);
  LOBYTE(v79) = v97 ^ byte_1002548D0[v95 & 0xF];
  LOBYTE(v75) = (v79 ^ v11[v95] ^ v96 ^ v90) + 115;
  v11[v95] = v79 ^ v90 ^ v96 ^ ((v75 ^ 0x75) + ((2 * v75) & 0xEA) - 117);
  v98 = 0x1D % v83;
  v99 = LODWORD(STACK[0x668])
      + (byte_1002548E0[v98 & 0xF] ^ v11[v98] ^ byte_100279850[v98 & 0xF] ^ byte_1002635B0[(v98 & 0xF) + 4] ^ (-79 * (v98 & 0xF)))
      + 67;
  v11[v98] = byte_1002548D0[v98 & 0xF] ^ (87 * (v98 & 0xF)) ^ byte_100254DF0[(v98 & 0xF) + 2] ^ byte_100266AE0[(v98 & 0xF) + 2] ^ ((v99 ^ 0x9D) + ((2 * v99) & 0x3A) + 99);
  v100 = 0x1E % (v89 ^ v14);
  v101 = (v100 & 0xF) + 2;
  v102 = byte_100254DF0[v101];
  LOBYTE(v101) = byte_100266AE0[v101];
  LOBYTE(v90) = 87 * (v100 & 0xF);
  LOBYTE(v79) = v102 ^ byte_1002548D0[v100 & 0xF];
  LOBYTE(v83) = (v79 ^ v11[v100] ^ v101 ^ v90) + 81;
  v11[v100] = v79 ^ v90 ^ v101 ^ (((((2 * v83) & 0x9F) + (v83 ^ 0xCF) + 117) ^ 0x10)
                                + ((2 * (((2 * v83) & 0x9F) + (v83 ^ 0xCF)) + 42) & 0x20)
                                - 84);
  v103 = 0x1F % (v89 ^ v14);
  v104 = (byte_1002548E0[v103 & 0xF] ^ v11[v103] ^ byte_100279850[v103 & 0xF] ^ (-79 * (v103 & 0xF)) ^ byte_1002635B0[(v103 & 0xF) + 4])
       + (LODWORD(STACK[0x608]) ^ 0xFFFFFFB1);
  LOBYTE(v104) = (v104 ^ 0xE9) + ((2 * v104) & 0xD2) + 64;
  v105 = (v103 & 0xF) + 2;
  v106 = byte_100254DF0[v105];
  v11[v103] = byte_1002548D0[v103 & 0xF] ^ (87 * (v103 & 0xF)) ^ v106 ^ byte_100266AE0[v105] ^ ((v104 ^ 0xDF)
                                                                                              + ((2 * v104) & 0xBF)
                                                                                              - 8);
  return sub_100147490(v89 ^ v14, 1353391120, 2139391791, 1544884126, v106, -1353391120, 118);
}

uint64_t sub_10016D360()
{
  int v0;
  const char *v1;
  size_t v2;
  _BOOL4 v3;

  v2 = strlen(v1);
  v3 = malloc_type_malloc((((v0 + 45) - 0x1246301214006F8 + ((v0 + 779) | 0x110u)) & (2 * v2))+ (v2 ^ 0x7F6DCE7F6F5FFFDFLL)- 0x7F6DCE7F6F5FFFC2, 0xBDDA8B5EuLL) != 0;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((108 * v3) ^ v0)))();
}

uint64_t sub_10016D400()
{
  unint64_t v0;
  uint64_t v1;
  int v2;

  STACK[0x688] = v0;
  LODWORD(STACK[0x690]) = umask(0);
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + ((51 * (v1 - 0x7F6DCE7ED59C0C4CLL + 59 * (v2 ^ 0x545u) == 2579757280)) ^ v2)))();
}

uint64_t sub_10016D498@<X0>(uint64_t a1@<X2>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  _BOOL4 v12;

  *(_BYTE *)(v4 + v8 - 0x160E6E96EA222CD3) = *(_BYTE *)(v3 + v7 - 0x747201F4DF06898DLL);
  v10 = v5 - 0x7F7076D6225EB42CLL;
  v11 = (a2 < v6) ^ (v10 < v6);
  v12 = v10 < a2;
  if (v11)
    v12 = a2 < v6;
  return (*(uint64_t (**)(void))(a1 + 8 * ((!v12 * v2) ^ v9)))();
}

uint64_t sub_10016D540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  const char *v4;
  uint64_t v5;
  int v7;

  strcpy((char *)&v4[v5 - 0x7F6DCE7F6F5FFFDFLL], "/Library");
  v7 = mkdir(v4, 0x1EDu);
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((30
                                * (((((528 * (v3 ^ 0x54F) - 471015201) & 0x1C131F7E) + 1476375916) & (2 * v7))
                                 + (v7 ^ 0xABFFDCF5) != -1409295116)) ^ v3)))();
}

uint64_t sub_10016D5F0()
{
  int v0;
  _BOOL4 v1;

  v1 = *__error() == v0 - 1039;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((v1 * ((v0 - 800) ^ 0x73)) ^ v0)))();
}

uint64_t sub_10016D634()
{
  uint64_t v0;
  const char *v1;
  void *v2;
  int v3;
  int v4;

  qmemcpy(v2, "/ProvenanceV2", 13);
  *(_BYTE *)(v0 + 249) = 0;
  v4 = mkdir(v1, 0x1EDu);
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + ((547 * (((2 * v4) & 0x776B298E) + (v4 ^ 0xBBB594C7) == -1145727802)) ^ v3)))();
}

uint64_t sub_10016D6B4()
{
  int v0;
  _BOOL4 v1;

  v1 = *__error() == 17;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((v1 * (v0 ^ 0x47E)) ^ v0)))();
}

uint64_t sub_10016D6F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = (v3 + 187487503) & 0xF4D327D0;
  *(_DWORD *)v0 = 1668509743;
  *(_WORD *)(v0 + 4) = 26926;
  *(_BYTE *)(v0 + 6) = 100;
  *(_BYTE *)(v2 + v4 - 0x7F6DCE7F6F6000C3 + v5) = 0;
  *(_BYTE *)(v2 + STACK[0x688]) = 0;
  umask(STACK[0x690]);
  free(v1);
  return ((uint64_t (*)(void))*(&off_1002C8B50 + (int)((((v5 + 100) ^ 0x53) - 296) | v5)))();
}

uint64_t sub_10016D790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((1298 * ((((9 * (v7 ^ 0x1F1) - 1277) ^ (v6 == 0)) & 1) == 0)) ^ v7)))(a1, a2, a3, a4, a5, a6, 4294924388);
}

void sub_10016D7D4()
{
  const char *v0;

  umask(0x12u);
  open(v0, 289);
  JUMPOUT(0x10016D81CLL);
}

uint64_t sub_10016D868@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  v2 = fcntl(a1 + 168296461, 64);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50
                                                    + ((113
                                                      * ((((_DWORD)v2 == ((v1 + 17) ^ 0xC5)) ^ (v1 - 1)) & 1)) ^ v1))
                                          - 8))(v2);
}

uint64_t sub_10016D8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (int)(((((v7 - 619083101) & 0x24E674EF ^ 0xFFFFFE25) + v7 + 45) * (v6 == 0)) ^ v7)))(a1, a2, a3, a4, a5, a6, 4294924388);
}

uint64_t sub_10016D914()
{
  int v0;
  _BOOL4 v1;

  v1 = *__error() == 2;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v1 * ((v0 - 1144) ^ 0x157)) ^ (v0 - 1144)))
                            - ((v0 - 1891529167) & 0x70BE6F9B ^ 0x302)))();
}

uint64_t sub_10016D970(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  const char *v9;
  int v10;
  uint64_t v11;

  v11 = open_dprotected_np(v9, 801, 4, 0);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50
                                                    + ((113
                                                      * ((int)(((2 * v11) & 0xBFFA6BFA)
                                                             + (v11 ^ 0x5FFD35FD)
                                                             + (((v10 ^ 0x71) + 990413883) ^ 0x1B0A4EEC)) > (int)(((v10 ^ 0x71) + 990413883) & 0xC4F77BD5 ^ 0xFFFFFF3A))) ^ v10 ^ 0x71))
                                          - 8))(v11);
}

uint64_t sub_10016DA1C()
{
  int v0;
  int v1;
  int v2;
  unint64_t v3;
  ssize_t v4;

  v3 = LODWORD(STACK[0x9D0]);
  v4 = write(v0 + v1 + 1741, (const void *)STACK[0x9C8], (v3 - 1232404166));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1539
                                        * ((v4 ^ 0xBFFF26AEE231DEFDLL)
                                         + ((2 * v4) & 0x7FFE4D5DC463BDFALL)
                                         + ((v2 + 1979977354) & 0x89FBF3BA ^ 0x87069F6B467EB3A5)
                                         - ((v3 | ((unint64_t)(v3 < 0x4974FEC6) << 32))
                                          + 0x36F79922D021246CLL) == 0x100E2CF70F1A6C7ALL)) ^ v2))
                            - 8))();
}

uint64_t sub_10016DB08@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;

  ftruncate(v3, a1 - 0x36F799231996263CLL + (v4 + 581));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((((v4 + 581) ^ 0x5C7) + v1 + v2 >= 0) * (((v4 + 1412) | 0x84) ^ 0x68A)) ^ (v4 + 581)))
                            - 12))();
}

uint64_t sub_10016DBA0(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  v3 = close(a1);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50
                                                    + (((v2 < v1 - 1741) * ((v1 - 1500) ^ 0x392)) ^ (v1 - 290)))
                                          - 8))(v3);
}

uint64_t sub_10016DBE0@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (a1 ^ (1248 * (v1 == -42925))))
                            - ((a1 - 1796027734) & 0x6B0D34FB ^ 0xF9)))();
}

uint64_t sub_10016DC30()
{
  int v0;
  const char *v1;
  int v2;
  _BOOL4 v3;

  v2 = strlen(v1);
  v3 = CFURLCreateFromFileSystemRepresentation(kCFAllocatorDefault, (const UInt8 *)v1, (v2 ^ 0x6E7CFBDC) - 1853684700 + ((2 * v2) & 0xDCF9F7B8), 0) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v3 * (((v0 + 25) | 0x41) + 111)) ^ v0))
                            - ((v0 + 2007225606) & 0x885C2B3F ^ 0x13FLL)))();
}

uint64_t sub_10016DCD0(const __CFURL *a1)
{
  void *v1;
  mode_t v2;
  int v3;

  CFURLSetResourcePropertyForKey(a1, kCFURLIsExcludedFromBackupKey, kCFBooleanTrue, 0);
  CFRelease(a1);
  umask(v2);
  free(v1);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((((STACK[0x9C8] != 0) << 7) | ((STACK[0x9C8] != 0) << 10)) ^ ((((v3 - 58) | 0x26) ^ 0x53) - 154)))
                            - (((((v3 - 58) | 0x26) ^ 0x53) - 154) ^ 0x607u)
                            - (((((v3 - 58) | 0x26) ^ 0x53u) - 1596698888) ^ 0xFFFFFFFF5F2BA96BLL)))();
}

void sub_10016DDB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  free(a1);
  sub_1000EE8C4(v7, v8, v9, v10, v11, v12, a7);
}

uint64_t sub_10016DDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  _BOOL4 v14;

  v14 = v10 < a6 || v8 + v9 + (((v12 ^ a7) + 527) ^ a8) < v10;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v14 * v11) ^ v12)) - 8))();
}

uint64_t sub_10016DDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;

  v12 = 1755343967 * ((*(_DWORD *)(a3 + a4) ^ (v8 + v5)) & 0x7FFFFFFF);
  v13 = (v12 ^ HIWORD(v12)) * (v4 + 1755342966);
  LODWORD(v13) = byte_100255A40[v13 >> 24] ^ *(unsigned __int8 *)(v8 + v5) ^ byte_100258060[(v13 >> 24) + 2] ^ byte_10027C4F0[v13 >> 24] ^ v13 ^ (-95 * (v13 >> 24));
  *(_BYTE *)(v7 + v5) = *(_BYTE *)(v10 + v5) ^ (v13 - ((2 * v13) & 0x5A) - 83);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((((v4 + 25) ^ v6) * (v5 == 254)) ^ (v4 + 25)))
                            - ((v4 + 25) ^ v11 ^ v9)))();
}

uint64_t sub_10016E050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unint64_t a8)
{
  return sub_10016DDB8(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10016E05C()
{
  uint64_t v0;
  int v1;
  int v2;
  char *v3;
  char *v4;

  v2 = LODWORD(STACK[0x670]) + LODWORD(STACK[0x668]) - 101702587;
  v3 = (char *)&STACK[0xBB0] + v0 + 383;
  STACK[0x8A0] = STACK[0x660] + (v1 - 1180) + 1035;
  STACK[0x680] = (unint64_t)&STACK[0xBB0] + v0 + 319;
  sub_100224ACC(byte_10027B520, (char *)&STACK[0xBB0] + v0 + 319, 0x40uLL);
  STACK[0x688] = (unint64_t)v3;
  v4 = sub_100224ACC(byte_100268557, v3, 0x40uLL);
  return ((uint64_t (*)(char *))((char *)*(&off_1002C8B50
                                                   + (v1 ^ (924 * ((v2 + 452649520) < 0xF8))))
                                         - ((v1 - 1231) | 0x4C1u)
                                         + 1215))(v4);
}

uint64_t sub_10016E108()
{
  int v0;
  int v1;
  uint64_t v2;
  _BYTE *v3;
  int v4;
  uint64_t v5;

  LODWORD(STACK[0x788]) = -289289346;
  *v3 = *(_BYTE *)(v2 + 0u % (v0 + v1 + 8));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * ((43 * (((v4 + 1180939513) ^ 0x4663B9BDLL) == 319)) ^ v4))
                            - 8))();
}

uint64_t sub_10016E1AC@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  int v11;
  int v12;
  uint64_t (*v13)(void);

  v6 = *(unsigned __int8 *)(v4 + (v3 + a2 + 44) % 0x13Fu);
  v7 = (unsigned __int16)(v3
                        + 19264
                        - 319
                        * ((unsigned __int16)(((39651 * (unsigned __int16)(v3 + 19264)) >> 16)
                                                             + ((unsigned __int16)((v3
                                                                                  + 19264
                                                                                  - ((39651
                                                                                    * (unsigned __int16)(v3 + 19264)) >> 16)) & 0xFFFE) >> 1)) >> 8));
  v8 = __PAIR64__(v6 ^ 0xCu, (v6 ^ 0x20u) << 24) >> 29;
  v9 = *(unsigned __int8 *)(v4 + (v3 + a2) % 0x13Fu);
  HIDWORD(v10) = v9 ^ 4;
  LODWORD(v10) = (v9 ^ 0x28) << 24;
  v11 = ((v10 >> 27) ^ 0xFFFFFFE5)
      + ((2 * (v10 >> 27)) & 0xFFFFFFCA)
      + (*(unsigned __int8 *)(v4 + v7) ^ 0x34 ^ (v8 - ((v8 << ((a2 + a1 + 94) ^ 0x20)) & 0x30) + 24))
      + 27;
  HIDWORD(v10) = *(unsigned __int8 *)(v4 + (v3 + a2 - 98) % 0x13Fu);
  LODWORD(v10) = (HIDWORD(v10) ^ 0x2C) << 24;
  v12 = ((v10 >> 25) ^ 0xFFFFFFC1) - ((2 * (v10 >> 25)) & 0x7C) + (v11 ^ 0x6A) + 1;
  LOBYTE(v11) = v12 + ((2 * v11) & 0xD4) - 2 * ((v12 + ((2 * v11) & 0xD4) + 20) & 0x2D ^ v12 & 1);
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a1 ^ (v2 + 2196) ^ (573 * (((v3 + 1 - a1) | (a1 - (v3 + 1))) >= 0))))
                          - 8);
  *(_BYTE *)(v4 + v7) = v11;
  return v13();
}

void sub_10016E320()
{
  JUMPOUT(0x10016E32CLL);
}

uint64_t sub_10016E3AC(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((2 * (((v1 + 8 == a1) ^ (v2 + 92)) & 1)) & 0xF7 | (8 * (((v1 + 8 == a1) ^ (v2 - 932)) & 1))) ^ v2))
                            - 4))();
}

uint64_t sub_10016E3EC@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  int v3;
  char v4;
  char v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + (a2 - 785609392)) = (((v3 ^ v6) >> (v4 - 6))
                                                   - ((a3 + 1 + (a3 ^ v5) + 112) & (2 * ((v3 ^ v6) >> (v4 - 6))))
                                                   + 125) ^ 0xA3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((1451
                                          * (a2
                                           - ((((v3 ^ v6) >> (v4 - 6))
                                                              - ((a3 + 1 + (a3 ^ v5) + 112) & (2
                                                                                             * ((v3 ^ v6) >> (v4 - 6))))
                                                              + 125) != 0xA3) == a1 + 203)) ^ a3))
                            - 4))();
}

void sub_10016E464()
{
  unint64_t v0;

  STACK[0x8A0] = 0;
  STACK[0x988] = v0;
  STACK[0xA18] = STACK[0x688];
  JUMPOUT(0x10016E488);
}

uint64_t sub_10016E648@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 - 1171) ^ ((2 * (a1 == 0)) | ((a1 == 0) << 6)))) - 4))();
}

uint64_t sub_10016E674()
{
  int v0;
  uint64_t v1;

  byte_100306948 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 - 1153) | 0x410 | (35 * (*(char *)(STACK[0x650] + 1) < 2))))
                            - ((((v0 - 1153) | 0x410) ^ 0x696u)
                             + 149)
                            + 347))();
}

uint64_t sub_10016E6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((((v7 ^ 0x792) - 426) * (a7 == 1)) ^ v7)))(a1, a2, a3, a4, a5, a6, 4294924380);
}

void sub_10016E6F8()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v0 - 1539;
  v3 = 1189216979 * ((1484279903 - ((v1 - 192) | 0x5878505F) + ((v1 - 192) | 0xA787AFA0)) ^ 0x896CA366);
  v4 = v2 + 1510;
  v5 = v2 + LODWORD(STACK[0x81C]) - 672224850 + v3;
  *(_QWORD *)(v1 - 176) = STACK[0x650];
  *(_DWORD *)(v1 - 184) = v5;
  *(_DWORD *)(v1 - 192) = v4 ^ v3;
  sub_1001C6C10(v1 - 192);
  sub_1000EE8C4(v6, v7, v8, v9, v10, v11, *(_DWORD *)(v1 - 188));
}

uint64_t sub_10016E780@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 - 1086) ^ 0x2F5) * (a1 != 0)) ^ (v1 - 801))))();
}

void sub_10016E7A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;

  if (LODWORD(STACK[0x9E0]) == (a7 ^ 0x79887F47))
    v7 = -42023;
  else
    v7 = -42920;
  sub_1000EE8C4(a1, a2, a3, a4, a5, a6, v7);
}

uint64_t sub_10016E7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((639 * (a7 == ((v7 + 3) ^ 0xCF))) ^ v7))
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 4294924380);
}

uint64_t sub_10016E80C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  if (*(unsigned __int8 *)(STACK[0x650] + 2) == (v2 ^ 0xCC))
    v4 = v0;
  else
    v4 = -42018;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((v4 == 0) * ((v1 + 983582453) & 0xC55FBBFD ^ 0x2F8)) ^ v1))
                            - 4))();
}

uint64_t sub_10016E864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  v8 = (((a7 ^ 0x570) - 1390) ^ 0xFFFFF15F)
     + ((*(unsigned __int8 *)(STACK[0x650] + 3) - ((2 * *(unsigned __int8 *)(STACK[0x650] + 3)) & 0x1A)) << 8)
     - 25344;
  v9 = ((v8 ^ 0xFFFF8D00) - 27904 + (~(2 * v8) | 0xFFFFDBFF)) ^ 0xFFFF92FF | (*(unsigned __int8 *)(STACK[0x650] + 4)
                                                                            + 8690
                                                                            + (~(2
                                                                               * *(unsigned __int8 *)(STACK[0x650] + 4)) | 0xFFFFFE1D)) ^ 0x21F1;
  v10 = (v9 - ((2 * v9) & 0x3076) - 26565) ^ 0x983B;
  v11 = ((2 * v10) & 0x1AF6A) + ((unsigned __int16)v10 ^ 0xFFEBD7B5) + 776186655;
  v12 = LODWORD(STACK[0x81C]) - 372386224;
  v13 = (v12 < 0x2E2F82D4) ^ (v11 < 0x2E2F82D4);
  v14 = v11 < v12;
  if (v13)
    v14 = v12 < 0x2E2F82D4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * ((1716 * v14) ^ a7))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_10016E980()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  v3 = STACK[0x650] + 5;
  v4 = 1189216979 * (((v2 - 192) & 0x97A295A5 | ~((v2 - 192) | 0x97A295A5)) ^ 0x46B6669C);
  *(_DWORD *)(v2 - 192) = (v0 + 1361) ^ v4;
  *(_DWORD *)(v2 - 184) = v4 + 476348231 + v1;
  *(_QWORD *)(v2 - 176) = v3;
  sub_1001C6C10(v2 - 192);
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + (((*(_DWORD *)(v2 - 188) == ((v0 + 1409116768) & 0xAC0297FD) - 957)
                               * ((v0 + 1390) ^ 0x193)) ^ v0)))();
}

uint64_t sub_10016EA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((1443 * (*(unsigned __int8 *)(STACK[0x650] + (v7 + 1321040)) == (((v8 + 18) | 5) ^ (v8 + 16)))) ^ v8))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_10016EA90()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  __int16 v6;
  int v7;
  _BOOL4 v8;

  v5 = ((v3 + 1527115432) | ((unint64_t)(v3 + 1527115432 < (((v0 & 0x5301CEFA) + 1539) ^ 0x5A2u)
                                                                              + 1525793512) << 32))
     + STACK[0x650]
     - 1525794391;
  v6 = (((*(unsigned __int8 *)v5 - ((2 * *(unsigned __int8 *)v5) & 0xB8)) << 8) + 23552) ^ 0x5C00;
  LOWORD(v5) = (v6 - ((2 * v6) & 0xB200) - 9983) ^ 0xD901 | (*(unsigned __int8 *)(v5 + 1)
                                                           - ((2 * *(unsigned __int8 *)(v5 + 1)) & 0x196)
                                                           + 2251) ^ 0x8CB;
  LODWORD(v5) = (unsigned __int16)(v5 - ((2 * v5) & 0x2810) + 5128) ^ 0x1408;
  LODWORD(v5) = ((v2 + 3922) & (2 * v5)) + (v5 ^ 0x7FDDDF5E) - 429163034;
  v7 = ((v4 + 568832192) < 0x66495D44) ^ (v5 < 0x66495D44);
  v8 = v5 < v4 + 568832192;
  if (v7)
    v8 = (v4 + 568832192) < 0x66495D44;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1283 * v8) ^ v0 & 0x5301CEFAu)) - 4))();
}

uint64_t sub_10016EBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  _BOOL4 v12;

  v12 = v9 == 2145247070 || STACK[0x650] + v10 + a7 + (v7 ^ 0x230u) == 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((210 * v12) ^ v7))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925273);
}

uint64_t sub_10016EC34()
{
  int v0;
  int v1;
  unsigned int v2;
  void *v3;

  v2 = ((v0 - 2145247070) & 0xFFFFFFF0 ^ 0x37ABB37F) + ((2 * (v0 - 2145247070)) & 0x6F5766E0);
  LODWORD(STACK[0x9D0]) = v2 + 298404718;
  v3 = malloc_type_malloc(v2 - 933999448, 0xEE36C167uLL);
  STACK[0x9C8] = (unint64_t)v3;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((1124 * (v3 != 0)) ^ v1)))();
}

uint64_t sub_10016ECB4(uint64_t a1)
{
  int v1;
  __int16 v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;

  *(_WORD *)a1 = 513;
  *(_BYTE *)(a1 + 2) = ((unsigned __int16)(v2 - ((((v5 - 317) | 0x490) ^ 0xFBF2) & (2 * v2 - 26334)) - 13259) >> 8) ^ 0x7F;
  *(_BYTE *)(a1 + 3) = (v2 - ((((v5 - 61) | 0x90) ^ 0xF2) & (2 * v2 + 34)) + 53) ^ 0xA4;
  *(_BYTE *)(a1 + 4) = ((unsigned __int16)(v2 - v1 - ((2 * (v2 - v1) + 6110) & 0x2718) - 16517) >> 8) ^ 0x93;
  *(_BYTE *)(a1 + 5) = (v2 - v1 - ((2 * (v2 - v1) - 34) & 0x18) + 123) ^ 0x8C;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((v5 + 1085) ^ (42
                                              * (((v1 + 1341028784) | ((unint64_t)(v3 < v4) << 32)) != 3486275854)))))();
}

uint64_t sub_10016EDC0(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_BYTE *)(v6 + a1 + 601 * (v1 ^ 0x59Eu) - 0x1D2DE0147D34107ELL) = *(_BYTE *)(v5 + v8 - 0x513F94EB6E173DBALL);
  v10 = v3 < v2;
  if (v10 == v7 - 0x2242D5E3F9160B8ALL < v2)
    v10 = v7 - 0x2242D5E3F9160B8ALL < v3;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 * v4) ^ v1)))();
}

uint64_t sub_10016EE58@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((440
                                          * (((((v1 - 808) ^ 0x19Bu) + 0x7FE5A3577FF73D8ELL) ^ (a1 + 1211247599))
                                           - 0x7FE5A3577043E03ELL
                                           + (((uint64_t)(a1 + 1211247599) << (((v1 - 40) | 0x25) ^ 0xAEu)) & 0xFFCB46AEFFEE7B3ELL) == 263413089)) ^ v1))
                            - 8))();
}

void sub_10016EEFC()
{
  int v0;
  int v1;

  LODWORD(STACK[0x6F0]) = ((261 * (v0 ^ 0x14)) ^ 0xE8A52EE3) + v1;
  JUMPOUT(0x10017293CLL);
}

uint64_t sub_10016EF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  uint64_t v8;

  byte_100306948 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((LODWORD(STACK[0x9E0]) != 2038988232) * ((v7 - 732) ^ 0x281)) | a7))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, 4294925273);
}

uint64_t sub_10016EF70()
{
  int v0;
  int v1;

  v1 = strcmp("mobactivationd", __progname);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1650
                                        * (((((v0 ^ 0x17E) + 409) ^ (((2 * v1) & 0x9ED897BA) + (v1 ^ 0xCF6C4BDD) == -814986275)) & 1) == 0)) ^ v0))
                            - 4))();
}

uint64_t sub_10016EFF0()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("mobileactivationd", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((620
                                        * ((((v1 - 409) ^ 0x7F9D9D3D) & (2 * v2))
                                         + ((((v1 - 319630379) & 0x130D2BF3) - 1076966424) ^ v2) != -1076965415)) ^ v1))
                            - 12))();
}

uint64_t sub_10016F06C()
{
  const char **v0;
  unsigned int v1;
  int v2;

  v2 = strcmp("findmydeviced", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((((v2 << ((v1 + 59) ^ 0x2D)) & 0x9EF957FA) + (v2 ^ 0x4F7CABFD) != 1333570557)
                                        * ((v1 ^ 0x17E) + 733)) ^ v1))
                            - 4))();
}

uint64_t sub_10016F0E4()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("findmydeviced-nano-support", *v0);
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + ((1128
                               * (((((v1 - 32) | 0x11) ^ 0xBEFA56A3) & (2 * v2)) + (v2 ^ 0xDF7D2BDF) != (v1 ^ 0xDF7D2AF3))) ^ v1)))();
}

uint64_t sub_10016F158()
{
  const char **v0;
  int v1;
  int v2;
  int v3;

  v3 = strcmp("identityservicesd", *v0);
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + ((49
                               * ((((31 * (v1 ^ 0x13D)) ^ 0x9FDA945E) & (2 * v3))
                                + ((((v1 + 1854351842) & 0x9178D78F) + 1340950864) ^ v3) == (v2 | 0x4FED4950))) ^ v1)))();
}

uint64_t sub_10016F1E8()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("amsaccountsd", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((((2 * v2) & 0xBEF917FE) + (v2 ^ 0xDF7C8BFF) == -545485825)
                                        * ((v1 - 978) ^ 0x412 ^ ((v1 - 978) | 0x281) ^ 0x682)) | v1))
                            - 4))();
}

uint64_t sub_10016F258()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("AppStore", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((((2 * v2) & 0x7FFB5FF2) + (v2 ^ 0xBFFDAFF9) != -1073893383)
                                        * ((v1 ^ 0x693) - 653)) ^ v1))
                            - 8))();
}

uint64_t sub_10016F2B4()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("itunesstored", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((((2 * v2) & 0x3EB957FA) + ((v1 + 257832897) ^ v2 ^ 0x10029020) != 526167037)
                                        * ((v1 - 397) ^ 0x18C)) ^ v1))
                            - 8))();
}

uint64_t sub_10016F328()
{
  const char **v0;
  int v1;
  int v2;
  int v3;
  int v4;

  v3 = strcmp("StoreKitUIService", *v0);
  v4 = ((2 * v3) & 0x1EBC77BA) + (v3 ^ (v1 + 1052));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (int)(v2 ^ (v1 + 2100) ^ (103
                                                                * ((((v4 - v2) | (v2 - v4)) >> ((v2 - v1 + 16) ^ 0x33)) & 1))))
                            - 12))();
}

uint64_t sub_10016F3A4()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("appstored", *v0);
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + ((1579
                               * (((v2 << ((-125 * (((v1 - 36) | 0x20) ^ 0x2D)) ^ 0x8E)) & 0x5FDB7FB6)
                                + (v2 ^ 0xAFEDBFDB) != -1343373349)) ^ v1)))();
}

uint64_t sub_10016F418()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("Fitness", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((((2 * v2) & 0x3FF9F7F2) + (v2 ^ 0x9FFCFBF9) != -1610810375)
                                        * ((v1 ^ 0x34) - 248)) ^ v1))
                            - 12))();
}

uint64_t sub_10016F478()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("appinstallationmetricsd", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((355
                                        * (((5 * (v1 ^ 0x49F) + 1333603696) ^ v2) + ((2 * v2) & 0x9EFA5FFE) != 1333604351)) ^ v1))
                            - 8))();
}

uint64_t sub_10016F4F0()
{
  const char **v0;
  int v1;
  int v2;
  int v3;
  int v4;

  v3 = strcmp("attributionkitd", *v0);
  v4 = ((2 * v3) & 0x1E9AFFB6) + (v3 ^ (v2 + 1044));
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + (int)((v2 + ((v1 + 1890746543) | 0x205) + 161) ^ v1 ^ (634
                                                                                    * (((v4 - v1) | (v1 - v4)) >> 31)))))();
}

uint64_t sub_10016F564()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("test", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((((2 * v2) & 0x1EBD57BE) + (v2 ^ 0xF5EABDF) != 257862623)
                                        * (131 * (((v1 + 1890746825) | 0x219) ^ 0x3B8) + 20)) ^ (v1 + 1890747469)))
                            - 12))();
}

uint64_t sub_10016F5EC()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("ProvenanceCombo", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1941
                                        * (((2 * v2) & 0x5EBD97FA)
                                         + ((((v1 + 1003436850) & 0xC430C39F) + 794741102) ^ v2) == 794741757)) ^ v1))
                            - ((v1 + 784) ^ 0x6C1)))();
}

uint64_t sub_10016F674()
{
  int v0;
  void *v1;

  v1 = malloc_type_malloc(0x98uLL, 0x10300401EA5018FuLL);
  STACK[0xA10] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1868
                                        * (((v1 == 0) ^ (75 * ((v0 + 78) & 0xEF ^ 0xCF) + 1)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_10016F6F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = a2 < v2;
  *(_BYTE *)(a1
           + ((v4 - 1497249851) | ((unint64_t)((v4 - 1497249851) < 0x269FA71D) << 32))
           - 647997213) = 0;
  if (v6 == v2 > 0xFB35D62)
    v6 = a2 > 0xFB35D62;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((!v6 * ((v3 - 1301005328) & 0x4D8BC271 ^ 0x2B5)) ^ v3)) - 12))();
}

void sub_10016F7AC()
{
  JUMPOUT(0x10016F75CLL);
}

uint64_t sub_10016F7B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  int v4;
  char *v5;
  FILE *v6;

  v5 = &v3[v1 + v0];
  *((_QWORD *)v5 + 59) = 0x7972617262694C2FLL;
  qmemcpy(&v5[(v4 - 409224070) & 0x186443EA], "/ProvenanceV2", 13);
  *(_QWORD *)&v5[v4 - 75 + 189] = 0x6975732E6373702FLL;
  v5[501] = 0;
  free(v2);
  v6 = fopen(v3, "rb");
  free(v3);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1017 * (v6 != 0)) ^ v4)) - 8))();
}

uint64_t sub_10016F884()
{
  FILE *v0;
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  fseek(v0, 0, 2);
  v3 = ftell(v0);
  v4 = (((v1 + 22349792) | 0x40200002) ^ 0xFEAE175F) + v3 - ((2 * v3) & 0x7FB63C92) - 4;
  v5 = ((v1 + 22349792) ^ 0x7EC73592 ^ (2 * v4) & 0xFFD37FAA) + (v4 ^ 0xC032A19C);
  LODWORD(STACK[0x78C]) = v5 - 92276240;
  v6 = fseek(v0, 0, 0);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((519 * (v5 - 2146025429 > 0x31)) | v1)))(v6);
}

uint64_t sub_10016F964()
{
  uint64_t v0;
  int v1;
  size_t v2;
  void *v3;
  void *v4;
  BOOL v5;
  int v6;

  v3 = malloc_type_malloc(v2, 0x33D658CuLL);
  STACK[0x7B8] = (unint64_t)v3;
  v4 = malloc_type_malloc(v2, 0x293AA273uLL);
  STACK[0x6B8] = (unint64_t)v4;
  if (v3)
    v5 = v4 == 0;
  else
    v5 = 1;
  v6 = !v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v6 * (v1 - 923)) ^ v1)) - 12))();
}

uint64_t sub_10016F9D0()
{
  uint64_t v0;
  FILE *v1;
  void *v2;
  int v3;
  size_t v4;
  int v5;

  v5 = fread(v2, 1uLL, v4, v1);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1437 * ((_DWORD)v4 == ((v5 - ((2 * v5) & 0x544B72D2) - 1440368279) ^ 0xAA25B969))) ^ (v3 - 626))))();
}

uint64_t sub_10016FA54()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((542
                                * (((v2 - 92276231) & 0xF) == (((v2 - 92276231) << ((v1 - 25) & 0xFA ^ 0x13)) & ((v1 ^ 0x466) - 1356)))) ^ v1)))();
}

uint64_t sub_10016FAC4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((56
                                          * ((v2 | ((unint64_t)(v2 < 0x7A69B9C5) << 32))
                                           - 956642588 != ((a1 - 989165592) & 0x3AF573F1) + 1097106297)) ^ a1))
                            - 12))();
}

uint64_t sub_10016FB5C()
{
  int v0;
  int v1;
  FILE *v2;
  void *v3;
  int v4;
  uint64_t v5;

  v4 = v0 + 1098188770;
  free(v3);
  STACK[0x7B8] = 0;
  v5 = fclose(v2);
  LODWORD(STACK[0x874]) = v1;
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50 + ((240 * (v4 ^ 0x41750910)) | 9))
                                          - ((240 * (v4 ^ 0x41750910) - 1943259665) & 0x73D3CEFD)
                                          + 1733))(v5);
}

uint64_t sub_10016FBB4@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v2 < v1;
  *(_BYTE *)(v4 + v7 - 0x63D1D571F12D6FACLL) = *(_BYTE *)(v3 + v6 - 0x5625C435AD2988E2);
  if (v8 == v5 - 0x46735A98979AB355 < v1)
    v8 = v5 - 0x46735A98979AB355 < v2;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v8 * ((a1 ^ 0x466) - 248)) ^ a1)) - 12))();
}

uint64_t sub_10016FC50@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  _BOOL4 v3;

  v2 = ((v1 - 365) ^ 0x562) * a1;
  STACK[0x7F0] = 1;
  v3 = container_system_group_path_for_identifier(0, "systemgroup.com.apple.pisco.suinfo", &STACK[0x7F0]) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v3 * (v2 ^ 0xC5)) | (v1 - 365)))
                            - ((v1 - 1430) ^ 0x133)))();
}

uint64_t sub_10016FCB8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((1928 * (STACK[0x7F0] == (((v0 - 247) | 0x124u) ^ 0x165))) ^ v0)))();
}

uint64_t sub_10016FCF4()
{
  int v0;
  uint64_t v1;
  io_object_t v2;
  uint64_t v3;

  *(_DWORD *)(v1 + 2500) = ((v0 + 1910899623) & 0x8E19FFEF ^ 0x6F7EBB30)
                         + (LODWORD(STACK[0x6B4]) ^ 0xD7E5FFBB)
                         + ((2 * LODWORD(STACK[0x6B4])) & 0xAFCBFF76);
  IOObjectRelease(v2);
  v3 = IOObjectRelease(STACK[0x6CC]);
  return sub_100172BF4(v3);
}

uint64_t sub_10016FD44(double a1)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(double *)(v1 + v4) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v3) | v2)) - 4))();
}

uint64_t sub_10016FD6C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (473 * (v0 != v2))))
                            - ((v1 + 1058) ^ 0xFFFFFFFFFFFFF92FLL)
                            - ((v1 + 1393170451) & 0xACF5E567)))();
}

uint64_t sub_10016FDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v13 = a6 + 1;
  v14 = (a6 + v7);
  *(_BYTE *)(v11 + (a5 + v9)) = *(_BYTE *)(v10 + v14) ^ *((_BYTE *)&unk_100254820 + (v14 & 0xF)) ^ byte_100279C70[(v14 & 0xF) + 3] ^ byte_10027D7A0[(v14 & 0xF) + 2] ^ (25 * (v14 & 0xF)) ^ 0xB1;
  return ((uint64_t (*)(_BYTE *, uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v12
                                                                                 + 8
                                                                                 * ((732 * (v13 + v7 < v8)) ^ (307 * (a7 ^ 0x614))))
                                                                     - 12))(byte_100279C70, 1540, byte_10027D7A0, 25);
}

void sub_10016FE58()
{
  JUMPOUT(0x10016FDF0);
}

uint64_t sub_10016FE68(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned __int8 *v15;
  int v16;
  unint64_t v17;

  v15 = (unsigned __int8 *)(*(_QWORD *)(v11 + 8)
                          + (int)((v8 ^ 0x399)
                                + ((((v8 - 758) | 5) + 2 * a2 + 1965792619) ^ 0xED7CEBDB)
                                + ((2 * (((v8 - 758) | 5) + 2 * a2 + 1965792619)) & 0xDAF9D7B4)
                                + 310580150));
  v16 = *v15;
  v17 = ((((v15 ^ *(_DWORD *)(v10 + a1)) & 0x7FFFFFFF) * v9) ^ ((((v15 ^ *(_DWORD *)(v10 + a1)) & 0x7FFFFFFF)
                                                                             * v9) >> 16))
      * v9;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1390
                                        * (v16 != (*(_BYTE *)((v17 >> 24) + v12 + 3) ^ *(_BYTE *)(a8 + (v17 >> 24)) ^ *(_BYTE *)((v17 >> 24) + v13 + 2) ^ v17 ^ (BYTE3(v17) * v14)))) ^ v8))
                            - 8))();
}

uint64_t sub_10016FF34(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  char v17;
  unint64_t v18;

  v16 = (char *)(a7 + (v9 ^ 0x7B6BBF6F) - 2070658927 + (((a4 ^ 0x30F) - 153650308) & v11));
  v17 = *v16;
  LODWORD(v16) = ((v16 ^ v8) & 0x7FFFFFFF) * (v10 + a4 + 1630 - 1741);
  v18 = (v16 ^ (v16 >> 16)) * v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((199
                                          * ((char)(*(_BYTE *)(a8 + (v18 >> 24)) ^ v17 ^ *(_BYTE *)((v18 >> 24) + v12 + 3) ^ *(_BYTE *)((v18 >> 24) + v13 + 2) ^ v18 ^ (BYTE3(v18) * v14)) > 47)) ^ a4))
                            - 8))();
}

uint64_t sub_10016FFEC(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a5 ^ (244 * (a3 < 0x3Au)))) - (((a5 - 787) | 0x22u) ^ 0x67)))();
}

uint64_t sub_100170038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;

  v13 = (_BYTE *)(a7 + (int)((v8 ^ 0x775DD5FF) + ((a5 - 288) | 0x400) + ((2 * v8) & 0xEEBBABFC) - 2002639934));
  v14 = ((((v13 ^ v7) & 0x7FFFFFFF) * v9) ^ ((((v13 ^ v7) & 0x7FFFFFFF) * v9) >> 16)) * v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (((char)(v14 ^ *v13 ^ *(_BYTE *)(v10 + (v14 >> 24)) ^ *(_BYTE *)(v11 + (v14 >> 24) + 2) ^ *(_BYTE *)(a6 + (v14 >> 24)) ^ (-95 * BYTE3(v14))) < 48) | (a5 - 490)))
                            - 8))();
}

uint64_t sub_1001701FC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((39
                                          * ((char)(a3 ^ a7 ^ *(_BYTE *)(a8 + v12) ^ (v12 * v13) ^ *(_BYTE *)(v11 + v8) ^ *(_BYTE *)(v10 + ((v9 - 1339) ^ 0x106) + v12)) > (char)(((v9 - 65) & 0x7B) - 27))) ^ (v9 - 1339)))
                            - ((v9 - 2077890389) & 0x7BDA11FE)
                            + 230))();
}

uint64_t sub_100170290@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  if (a1 >= (((v2 + 5) & 0xDD) - 102))
    v5 = 1085724678;
  else
    v5 = v1 - 242230317;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((226
                                               * (((((v2 - 1669636603) & 0x6384A7DD ^ 0x13193E11) + v3) & (((((v2 - 1669636603) & 0x6384A7DD) - 1362) ^ 0x3F492682u) + v5)) >> 31)) | (((v2 - 1669636603) & 0x6384A7DD) - 1480)))
                            - 4))();
}

uint64_t sub_100170454@<X0>(int a1@<W1>, uint64_t a2@<X5>, char a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  unint64_t v13;

  v11 = (16 * v6 - (((((v8 ^ 0x65) + 87) & 0xF6 ^ 0x76) + 32 * v6) & 0x40) + 107) ^ 0xAB | (a3 - 7);
  v12 = (_BYTE *)(v7 + a1 - 1164587208);
  v13 = ((((v12 ^ v3) & 0x7FFFFFFF) * v5) ^ ((((v12 ^ v3) & 0x7FFFFFFF) * v5) >> 16)) * v5;
  *v12 = v13 ^ (-95 * BYTE3(v13)) ^ *(_BYTE *)(v10 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + v4 + 2) ^ *(_BYTE *)(a2 + (v13 >> 24)) ^ (v11 + (((v8 ^ 0x65) - 59) & 0x97) - ((2 * v11) & 0x22) + 12) ^ 0x11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v8 ^ 0x465 ^ (350 * ((a1 - 1164587207) > 0x13))))
                            - 8))();
}

uint64_t sub_100170574(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10016FE68(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100170580(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((a3 - 1207662886) & 0x47FB7BBF) + 215) * (LODWORD(STACK[0x680]) == 0)) ^ a3))
                            - (a3 + 118)
                            + 375))();
}

uint64_t sub_1001705C4@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1706 * (*(_QWORD *)(v1 + 8) != 0)) ^ a1))
                            - (((a1 - 727) | 0x605) ^ 0x6C1)))();
}

uint64_t sub_1001705FC(void *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  free(a1);
  *(_QWORD *)(v1 + 8) = v3;
  *(_DWORD *)(v1 + 16) = 1990266993;
  *(_DWORD *)v1 = 65;
  STACK[0x8C0] = 1;
  v4 = (uint64_t (*)(void))((char *)*(&off_1002C8B50
                                   + (((container_system_group_path_for_identifier(0, "systemgroup.com.apple.pisco.suinfo", &STACK[0x8C0]) != 0)* (((v2 - 1229) | 0x423) ^ 0x2B1)) ^ (v2 - 1362)))- ((v2 - 1261) ^ 0x1E8));
  return v4();
}

uint64_t sub_10017061C()
{
  int v0;
  void *v1;
  int v2;
  uint64_t v3;
  int v4;

  v4 = v0;
  free(v1);
  LODWORD(STACK[0x874]) = 546355592;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v4 == 0) | (8 * (v4 == 0)) | v2 ^ 0x9B))
                            - (((v2 ^ 0x9B) - 1943259665) & 0x73D3CEFD)
                            + 1733))();
}

uint64_t sub_100170644()
{
  LODWORD(STACK[0x888]) = 173755484;
  return sub_100170654();
}

void sub_100170654()
{
  sub_1000E95F0();
  JUMPOUT(0x10017067CLL);
}

uint64_t sub_100170740()
{
  int v0;
  unsigned int v1;
  char *v2;
  CFStringEncoding SystemEncoding;
  _BOOL4 v4;

  v1 = v0 & 0x9E96CF67;
  v2 = off_1003059B8;
  LOBYTE(STACK[0xB99]) = (((v0 & 0x67) + 74) ^ 0x97 ^ (((v0 & 0x67) + 29) | 0x20)) + *off_1003059B8;
  LOBYTE(STACK[0xB9A]) = v2[1] - 102;
  LOBYTE(STACK[0xB9B]) = v2[2] - 102;
  LOBYTE(STACK[0xB9C]) = v2[3] - 102;
  LOBYTE(STACK[0xB9D]) = v2[4] - 102;
  LOBYTE(STACK[0xB9E]) = v2[5] - 102;
  LOBYTE(STACK[0xB9F]) = v2[6] - 102;
  LOBYTE(STACK[0xBA0]) = v2[7] - 102;
  LOBYTE(STACK[0xBA1]) = v2[8] - 102;
  LOBYTE(STACK[0xBA2]) = v2[9] - 102;
  LOBYTE(STACK[0xBA3]) = v2[10] - 102;
  LOBYTE(STACK[0xBA4]) = v2[11] - 102;
  LOBYTE(STACK[0xBA5]) = v2[12] - 102;
  LOBYTE(STACK[0xBA6]) = v2[13] - 102;
  LOBYTE(STACK[0xBA7]) = v2[14] - 102;
  LOBYTE(STACK[0xBA8]) = v2[15] - 102;
  LOBYTE(STACK[0xBA9]) = v2[16] - 102;
  LOBYTE(STACK[0xBAA]) = v2[17] - 102;
  LOBYTE(STACK[0xBAB]) = v2[18] - 102;
  LOBYTE(STACK[0xBAC]) = v2[19] - 102;
  LOBYTE(STACK[0xBAD]) = v2[20] - 102;
  LOBYTE(STACK[0xBAE]) = v2[21] - 102;
  LOBYTE(STACK[0xBAF]) = off_1003059B8[22] - 102;
  SystemEncoding = CFStringGetSystemEncoding();
  v4 = CFStringCreateWithCString(0, (const char *)&STACK[0xB99], SystemEncoding) != 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (int)((1428 * v4) ^ v1)) - 12))();
}

uint64_t sub_1001708C4(uint64_t a1)
{
  int v1;
  _BOOL4 v2;

  v2 = MGCopyAnswer(a1, 0) != 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((2023 * v2) ^ v1)) - 12))();
}

uint64_t sub_1001708F8()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  STACK[0x668] = v1;
  STACK[0x8A0] += 64;
  v3 = STACK[0x8E0];
  STACK[0x640] = STACK[0x8E0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * (v3 != 0)) | (4 * (v3 != 0))) ^ (v0 + 627))) - 8))();
}

uint64_t sub_100170958(const void *a1)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  CFTypeID v5;
  uint64_t v6;
  unint64_t v7;
  CFTypeID TypeID;
  _BOOL4 v9;

  STACK[0x660] = v1;
  STACK[0x680] = (unint64_t)&STACK[0xBB0] + v1;
  v4 = -16
     * (((((&STACK[0xBB0] + v1) ^ (v2 + 29)) ^ 2)
       + 2 * (&STACK[0xBB0] + v1)
       + 1) & 2)
     - 0x844BD49333D7290;
  STACK[0x688] = (v4 ^ 0x32CC2959313DBF0ELL) + 0x7FBDDF3BBFDADDC0 + (~(2 * v4) & 0x8A66854D998400E0);
  v5 = CFGetTypeID(a1);
  v6 = v5 ^ 0x6D5FFF76E5FF7FA7;
  v7 = (2 * v5) & 0xDABFFEEDCBFEFF4ELL;
  TypeID = CFStringGetTypeID();
  v9 = v6 + (TypeID ^ 0x800D880480648A12) + v7 - ((TypeID << ((v2 - 29) ^ 0xECu)) & 0xFFE4EFF6FF36EBDALL) + 1 == ((v2 - 72273555) & 0x7D318C9B ^ 0xED6D877B66640DA9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((2 * v9) | (8 * v9)) ^ (v2 + 2028126237))) - 12))();
}

uint64_t sub_100170AC0()
{
  const __CFString *v0;
  unsigned int v1;
  uint64_t v2;
  CFIndex Length;
  void *v4;

  Length = CFStringGetLength(v0);
  v4 = malloc_type_malloc(((Length << (v1 - 9 + 2 * (v1 ^ 0xF3) + 55)) & 0xDBFFC6DFBDFDFEDCLL)+ (Length ^ 0x6DFFE36FDEFEFF6ELL)- 0x6DFFE36FDEFEFF6DLL, 0x9EBEB066uLL);
  STACK[0x7E0] = (unint64_t)v4;
  return ((uint64_t (*)(const __CFString *))(*(_QWORD *)(v2 + 8 * ((585 * (v4 != 0)) ^ v1)) - 8))(v0);
}

uint64_t sub_100170B88(const __CFString *a1)
{
  char *v1;
  CFIndex v2;
  int v3;
  uint64_t v4;
  char *v5;
  CFStringEncoding SystemEncoding;
  Boolean CString;
  _BOOL4 v9;

  v5 = v1;
  SystemEncoding = CFStringGetSystemEncoding();
  STACK[0x458] = (unint64_t)a1;
  CString = CFStringGetCString(a1, v5, v2, SystemEncoding);
  v9 = (((((v3 - 99) & 0xB6) - 94) & (2 * CString)) + (CString ^ 0xDB)) != 219;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v9 | (4 * v9)) ^ v3)) - 4))();
}

uint64_t sub_100170C04()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  _BOOL4 v4;

  v3 = (((v0 + 553713811) << (v1 + 65)) & 0xFFD3A2FE) + ((v0 + 553713811) ^ 0xFFE9D17F);
  LODWORD(STACK[0x8CC]) = v3 + 1991720670;
  v4 = malloc_type_malloc((v1 ^ 0x24B) + 1452790 + v3, 0x18BA6C9CuLL) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1992 * v4) ^ v1)) - 4))();
}

uint64_t sub_100170CB8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(STACK[0x8E0] + 16) >= ((((v0 - 1453) | 0x201) - 329199750) & 0x139F2FFF ^ (v1 + 416)))
                                * ((((v0 - 1453) | 0x201) - 134) ^ 0x173)) ^ ((v0 - 1453) | 0x201))))();
}

void sub_100170CC0()
{
  const void *v0;

  CFRelease(v0);
  JUMPOUT(0x1001715B0);
}

uint64_t sub_100170CD4()
{
  const void *v0;
  unsigned int v1;
  uint64_t v2;
  CFTypeID v3;
  unint64_t v4;
  unint64_t v5;
  CFTypeID TypeID;

  v3 = CFGetTypeID(v0);
  v4 = v3 ^ 0xFF16FFBAEFFA7749;
  v5 = (2 * v3) & 0xFE2DFF75DFF4EE92;
  TypeID = CFDataGetTypeID();
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1000
                                          * (v4
                                           + (TypeID ^ 0x2C0210A20081520)
                                           + v5
                                           - (((v1 + 1632163538) & 0x9EB723F7 ^ 0xFA7FBDEBBFEFD508) & (2 * TypeID)) != 0x1D720C510028C69)) ^ v1))
                            - 4))();
}

uint64_t sub_100170D88()
{
  const void *v0;
  int v1;
  uint64_t v2;
  CFTypeID v3;
  uint64_t v4;
  unint64_t v5;
  CFTypeID TypeID;

  v3 = CFGetTypeID(v0);
  v4 = v3 ^ 0x491FBF3EF7FF7FE5;
  v5 = (2 * v3) & 0x923F7E7DEFFEFFCALL;
  TypeID = CFNumberGetTypeID();
  return ((uint64_t (*)(const void *))(*(_QWORD *)(v2
                                                           + 8
                                                           * ((797
                                                             * (v4
                                                              + (TypeID ^ 0x1E20292541070804)
                                                              + v5
                                                              - ((2 * TypeID) & 0xC3BFADB57DF1EFF6)
                                                              + 1 == ((v1 - 1891809565) & 0xF7DFFE6F ^ 0x673FE864BE1BC1E0))) ^ v1))
                                               - 4))(v0);
}

uint64_t sub_100170E50(const __CFNumber *a1)
{
  char v1;
  int v2;
  uint64_t v3;
  Boolean Value;

  STACK[0x458] = (unint64_t)a1;
  Value = CFNumberGetValue(a1, kCFNumberSInt64Type, &STACK[0x6D0]);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((119
                                                                 * ((((2 * Value) & 0xBF)
                                                                                    + (Value ^ 0x5F)) != ((v2 ^ (v1 - 38)) ^ 0x55))) ^ v2))
                                                   - 4))(STACK[0x458]);
}

uint64_t sub_100170EAC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  void *v4;

  LODWORD(STACK[0x8CC]) = v0 + 8;
  v4 = malloc_type_malloc(8uLL, 0xD29E14C9uLL);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v3 + 8 * ((944 * (v4 != 0)) ^ v2))
                                                   - ((((v2 - 1757585853) & 0xEFDFE70F) - v1 - 1263) ^ 0x13CLL)))(STACK[0x458]);
}

uint64_t sub_100170F1C()
{
  _BYTE *v0;
  int v1;
  uint64_t v2;
  int v3;

  *v0 = (HIBYTE(STACK[0x6D0]) - ((STACK[0x6D0] >> 55) & 0x90) + 72) ^ (((v1 + 70) ^ 0x60) + 42);
  v0[1] = (HIWORD(STACK[0x6D0]) - ((STACK[0x6D0] >> 47) & 0xE4) - 14) ^ 0xF2;
  v0[2] = (((unsigned __int16)WORD2(STACK[0x6D0]) >> 8) - ((STACK[0x6D0] >> 39) & 0x5A) - 83) ^ 0xAD;
  v0[3] = (HIDWORD(STACK[0x6D0]) - ((STACK[0x6D0] >> 31) & 0xE4) - 14) ^ 0xF2;
  v0[4] = (((HIBYTE(LODWORD(STACK[0x6D0])) - ((LODWORD(STACK[0x6D0]) >> 23) & 0xF6) - 125) ^ 5) - 8) ^ 0x7E;
  v0[5] = (HIWORD(LODWORD(STACK[0x6D0])) - ((LODWORD(STACK[0x6D0]) >> 15) & 0x56) - 85) ^ 0xAB;
  v0[6] = (BYTE1(LODWORD(STACK[0x6D0])) - ((LODWORD(STACK[0x6D0]) >> 7) & 0x1E) + 15) ^ 0xF;
  v0[7] = (LOBYTE(STACK[0x6D0]) - ((2 * LOBYTE(STACK[0x6D0])) & 0xB2) + 89) ^ 0x59;
  v3 = malloc_type_malloc(8uLL, 0xDD79556CuLL) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((32 * v3) | (v3 << 6)) ^ v1)) - 8))();
}

uint64_t sub_100171090()
{
  uint64_t v0;
  _BYTE *v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v7;

  v5 = 3 * (v3 ^ (v2 + 208));
  v6 = 1755343967
     * ((*(_DWORD *)(qword_100306950 + (dword_100306B58 & 0xFFFFFFFFB2A98008)) ^ v1) & 0x7FFFFFFF);
  v7 = 1755343967 * (v6 ^ HIWORD(v6));
  *v1 = byte_10027AAC0[v7 >> 24] ^ *(_BYTE *)((v5 - 282) + v0 + 0x3F22FA18022DAF9DLL - 0x3F22FA18022DAFBBLL) ^ byte_100256CB0[(v7 >> 24) + 3] ^ byte_100268450[(v7 >> 24) + 2] ^ v7 ^ (13 * BYTE3(v7));
  return ((uint64_t (*)(char *, _BYTE *, uint64_t, unint64_t))(*(_QWORD *)(v4 + 8 * (v5 ^ 0x535)) - 8))(&aHAwAwAwAwAwAwA[1592], byte_100268450, 13, 0xAABDF864E597DC21);
}

void sub_1001711C8()
{
  JUMPOUT(0x100171140);
}

uint64_t sub_1001711D8()
{
  const __CFData *v0;
  int v1;
  uint64_t v2;
  int Length;
  unsigned int v4;
  int v5;

  Length = CFDataGetLength(v0);
  v4 = (((v1 - 474) ^ 0x7866B0A3 ^ ((v1 + 34159637) | 0x85140408)) & (2
                                                                    * (Length - ((2 * Length) & 0x60EE6068) - 1334366156)) ^ 0x606A6028)
     + ((Length - ((2 * Length) & 0x60EE6068) - 1334366156) ^ 0x4FCAC969);
  LODWORD(STACK[0x8CC]) = v4 + 1994594048;
  v5 = malloc_type_malloc(v4 + 4327075, 0x8DF370BBuLL) != 0;
  return ((uint64_t (*)(const __CFData *))(*(_QWORD *)(v2 + 8 * ((32 * v5) | (v5 << 7) | (v1 - 474))) - 8))(v0);
}

uint64_t sub_1001712AC(const __CFData *a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  UInt8 *v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  _BOOL4 v8;
  CFRange v10;

  v7 = (_QWORD *)(STACK[0x688] + STACK[0x680] - 0x45354B2BBDDA103ELL);
  v10.length = (v3 & 0xFFFFFFFEFFFFFFFFLL | ((unint64_t)(v3 < v1) << 32)) - 1990266973;
  *v7 = 0;
  v7[1] = v10.length;
  STACK[0x458] = (unint64_t)a1;
  v10.location = 0;
  CFDataGetBytes(a1, v10, v4);
  v8 = malloc_type_malloc(((v2 - 1045) ^ 0x420693u) + v5, 0xE2457E5FuLL) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((196 * v8) ^ v2)) - 12))();
}

uint64_t sub_100171344()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((485 * ((v1 << 32) + v2 + (v0 ^ 0x475u) + 1155131492 != 3145398513)) ^ v0))
                            - 12))();
}

void sub_1001713C0(int a1@<W8>)
{
  LODWORD(STACK[0xAB0]) = a1;
  JUMPOUT(0x1001713ECLL);
}

uint64_t sub_1001713F4@<X0>(int a1@<W8>)
{
  __int16 v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((677 * ((unsigned __int16)(v1 ^ ((a1 ^ 0x59B) + 870)) > 1u)) ^ v2))
                            - (a1 | 0x20Cu)
                            + 1729))();
}

uint64_t sub_100171440()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * ((211
                                       * (((unsigned __int16)((v0 + 916) ^ v1 ^ 0x2F) ^ ((v0 ^ 0x797) + 2145054745))
                                        + ((2 * ((v0 + 916) ^ v1 ^ 0x2F)) & 0x1EDCC) == 2145056486)) ^ v0))
                         - 12);
  STACK[0x608] = v2;
  return v4();
}

uint64_t sub_1001714C0(void *a1)
{
  int v1;

  free(a1);
  return ((uint64_t (*)(unint64_t))((char *)*(&off_1002C8B50
                                                             + ((1291 * (LODWORD(STACK[0x6E4]) == 0)) ^ (v1 - 1558)))
                                                   - ((v1 - 134364910) & 0x8F1F7E2A ^ 0x871D460ELL)))(STACK[0x458]);
}

void sub_100171550(const void *a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x640];
  *(_DWORD *)(v3 + 16) = STACK[0x8CC];
  *(_QWORD *)(v3 + 8) = v2;
  STACK[0x8A0] = v1;
  CFRelease(a1);
  JUMPOUT(0x100171598);
}

uint64_t sub_100171608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * (((10 * (v4 ^ 0x14B) + 831)
                                                                                   * (a4 == v5 + 41)) ^ v4))
                                                                     - 8))(a1, a2, a3, 4294924389);
}

uint64_t sub_100171640()
{
  unsigned int v0;
  _BOOL4 v1;

  v1 = malloc_type_malloc(0x14uLL, 0xAACB7BF8uLL) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1322 * ((((v0 + 101) ^ v1) & 1) == 0)) ^ v0)) - v0 + 371))();
}

uint64_t sub_100171694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x680]) = v7;
  v9 = (int)((((v8 + 1246443855) & 0xB5B4C7FE) - 1297515502) & dword_100306B58);
  LODWORD(STACK[0x688]) = -1614807042;
  return sub_10016FE68(v9, 1164587208, a3, a4, a5, (uint64_t)byte_10027C4F0, a7, (uint64_t)byte_10027AAC0);
}

uint64_t sub_100171734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * (((a4 == ((v4 - 1033284508) & 0x3D96AEFF ^ (v5 + 1099)))
                                                                                   * (v4 + 1497)) ^ v4))
                                                                     - 8))(a1, a2, a3, 4294924389);
}

uint64_t sub_10017177C()
{
  unsigned int v0;
  BOOL v1;

  v1 = malloc_type_malloc(0x19uLL, 0xFD034588uLL) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((367 * ((v1 ^ (v0 + 42)) & 1)) ^ v0)) - 4))();
}

uint64_t sub_1001717E8(_BYTE *a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  char *v5;
  char v6;
  int v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(char **)(v1 + 8);
  v6 = *v5;
  v7 = *(_DWORD *)(qword_100306950 + (dword_100306B58 & 0xFFFFFFFFB2A98008));
  v8 = ((1755343967 * ((v5 ^ v7) & 0x7FFFFFFF)) ^ ((1755343967 * ((v5 ^ v7) & 0x7FFFFFFF)) >> 16))
     * (((v2 - 663) | 0x401) ^ 0x68A0681E);
  v9 = 1755343967
     * ((1755343967 * ((a1 ^ v7) & 0x7FFFFFFF)) ^ ((1755343967 * ((a1 ^ v7) & 0x7FFFFFFF)) >> 16));
  *a1 = byte_100255A40[v8 >> 24] ^ v6 ^ byte_100258060[(v8 >> 24) + 2] ^ byte_10027C4F0[v8 >> 24] ^ byte_100255A40[v9 >> 24] ^ byte_100258060[(v9 >> 24) + 2] ^ byte_10027C4F0[v9 >> 24] ^ v8 ^ v9 ^ (-95 * BYTE3(v8)) ^ (-95 * BYTE3(v9));
  return (*(uint64_t (**)(void))(v3 + 8 * v2))();
}

void sub_100171904()
{
  JUMPOUT(0x100171848);
}

uint64_t sub_10017190C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (23 * (v1 != 0))))
                            - (v0 ^ 0x8F5F3728)
                            - ((v0 - 308165010) & 0x125E35FF)
                            + 2405381136))();
}

uint64_t sub_100171960()
{
  int v0;
  void *v1;
  int v2;
  int v3;
  int v4;

  v4 = (v0 + 1889586423) | 0x180;
  free(v1);
  LODWORD(STACK[0x874]) = v3;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v2 == 0) | (8 * (v2 == 0)) | v4))
                            - ((v4 - 1943259665) & 0x73D3CEFD)
                            + 1733))();
}

uint64_t sub_100171988@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((a1 + 380784414) & 0x294DB6FF) - 308) * (*(_QWORD *)(v1 + 8) != 0)) ^ a1)))();
}

void sub_1001719C4(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  free(a1);
  *(_QWORD *)(v1 + 8) = v2;
  JUMPOUT(0x1001719D4);
}

uint64_t sub_100171A4C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((STACK[0x8C0] == 1) * (((v0 - 581737750) ^ 0x22AC9372) + v0 - 61)) ^ v0))
                            - 12))();
}

uint64_t sub_100171A90@<X0>(int a1@<W8>)
{
  const char *v1;
  int v2;
  uint64_t v3;
  size_t v4;
  _BOOL4 v5;

  v3 = (v2 - a1 + 1920470123) & 0xB0348776;
  v4 = strlen(v1);
  v5 = malloc_type_malloc(((v3 ^ 0x3EBF17FFD7F9F57ELL) & (2 * v4)) + (v4 ^ 0x9F5F8BFFEBFCF994) + 0x60A074001403068ALL, 0xAE21939FuLL) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((965 * v5) ^ v2)) - 12))();
}

void sub_100171B38()
{
  void *v0;

  free(v0);
  JUMPOUT(0x100171B5CLL);
}

uint64_t sub_100171B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * ((2016
                                                                                   * (*(unsigned __int8 *)STACK[0x6B8] == (((v3 + 120) | 2) - 89))) ^ v3))
                                                                     - (v3 + 1261)
                                                                     + 1733))(a1, a2, a3, 4294924391);
}

uint64_t sub_100171BE0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  v3 = STACK[0x8A0];
  v4 = 230600693 * (((v2 - 192) & 0xB0AAFE3F | ~((v2 - 192) | 0xB0AAFE3F)) ^ 0x9D6987EB);
  *(_DWORD *)(v2 - 164) = LODWORD(STACK[0x78C]) - v4 - 127064485;
  *(_DWORD *)(v2 - 192) = (v1 - 414) ^ v4;
  *(_QWORD *)(v2 - 184) = (char *)&STACK[0xBB0] + v3;
  *(_QWORD *)(v2 - 176) = v0;
  sub_1002187F8((_DWORD *)(v2 - 192));
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((59 * (*(_DWORD *)(v2 - 168) != 0)) ^ v1)))();
}

uint64_t sub_100171CB8()
{
  int v0;
  unint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x8A0] = v1;
  STACK[0x680] = 0;
  LODWORD(STACK[0x660]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((1852 * ((((v0 - 1686) | 0x1C0) ^ 0x1F7) == -42903)) ^ (v0 - 1423)))
                            - 4))();
}

uint64_t sub_100171CC8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((278 * (v0 + 1 == v2 + 16)) ^ v1)))();
}

uint64_t sub_100171D50@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  v4 = (((v1 >> 4) ^ 0xF8246007)
      - 2 * ((a1 - 641 + ((a1 - 1016708466) & 0x3C99BFDD) - 2213) & (v1 >> 4) ^ ((v1 >> 4) ^ 0xF8246007) & 0x46690C1E)
      + 1181289494) ^ 0x46690C16 | v1 ^ v2;
  v5 = ((((int)(v4 - ((2 * v4) & 0x45D44A14) - 1561713398) >> 2) ^ 0xE8BA8942)
      - ((2 * (((int)(v4 - ((2 * v4) & 0x45D44A14) - 1561713398) >> 2) ^ 0xE8BA8942)) & 0x957412EE)
      - 893777545) ^ 0xCABA0977 | (v4 - ((2 * v4) & 0x45D44A14) - 1561713398) ^ 0xA2EA250A;
  return (*(uint64_t (**)(void))(v3 + 8 * ((469 * ((v5 & 1 | ((((v5 + 2) >> 1) & 1) == 0)) == 0)) ^ a1)))();
}

uint64_t sub_100171E24@<X0>(unint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  STACK[0x428] = v2;
  STACK[0x430] = a1;
  STACK[0x438] = v3;
  v6 = (a2 + 1102579597);
  v7 = ((2 * (_QWORD)&STACK[0x7E8]) & 0xC5DFFDFFD6FBDFF8)
     - 0x62EFFEFFEB7DEFFFLL
     + ((unint64_t)&STACK[0x7E8] ^ 0x62EFFEFFAAC5E384 ^ v6);
  STACK[0x450] = ((v7 % 0x25) ^ 0x5FBFABBFFD27DFBBLL)
               - 0x5FBFABBFFD27DFABLL
               + ((2 * (v7 % 0x25)) & 0x76);
  v8 = STACK[0x688] + STACK[0x680] - 0x45354B2BBDDA103ELL;
  v9 = 1856021207 * ((v5 - 192) ^ 0xED14979B4E69D6FELL);
  LODWORD(STACK[0x44C]) = (v4 + 1860574894) & 0x9119DEEE;
  LODWORD(STACK[0x670]) = v4 - 1252392926;
  *(int32x4_t *)&STACK[0x560] = vdupq_n_s32(0xCE7A6DCD);
  *(int32x4_t *)&STACK[0x550] = vdupq_n_s32(0x2C3F9E5u);
  *(int32x4_t *)&STACK[0x540] = vdupq_n_s32(0x40A9A9BEu);
  *(int32x4_t *)&STACK[0x530] = vdupq_n_s32(0x3F565640u);
  v10 = 516615401
      * ((2 * ((v5 - 192) & 0x48D57A0D0CC69FA0) - (v5 - 192) - 0x48D57A0D0CC69FA4) ^ 0x3F960D89805A666ELL);
  LODWORD(STACK[0x680]) = -380625658;
  STACK[0x678] = STACK[0xAA8];
  STACK[0x688] = v8;
  STACK[0x440] = v8 + 16;
  STACK[0x5F0] = v9;
  STACK[0x470] = 694118461 - v9;
  STACK[0x498] = v10;
  STACK[0x468] = v10 + 419711402;
  *(int32x4_t *)&STACK[0x5E0] = vdupq_n_s32(0xF2AC030B);
  *(int32x4_t *)&STACK[0x5D0] = vdupq_n_s32(0x7FFFFFFEu);
  *(int32x4_t *)&STACK[0x5C0] = vdupq_n_s32(0x775A672Eu);
  *(int32x4_t *)&STACK[0x5B0] = vdupq_n_s32(0x6D29B7D4u);
  *(int32x4_t *)&STACK[0x5A0] = vdupq_n_s32(0xC96B2414);
  *(int32x4_t *)&STACK[0x590] = vdupq_n_s32(0xF2AC030A);
  *(int32x4_t *)&STACK[0x580] = vdupq_n_s32(0xE9501D06);
  *(int32x4_t *)&STACK[0x570] = vdupq_n_s32(0x904BAFB8);
  *(int32x4_t *)&STACK[0x520] = vdupq_n_s32(0xBA104401);
  *(int32x4_t *)&STACK[0x510] = vdupq_n_s32(0x4001019Fu);
  *(int32x4_t *)&STACK[0x500] = vdupq_n_s32(0x4D217929u);
  *(int32x4_t *)&STACK[0x4F0] = vdupq_n_s32(0xD13E67B2);
  *(int32x4_t *)&STACK[0x4E0] = vdupq_n_s32(0xE051628A);
  *(int32x4_t *)&STACK[0x4D0] = vdupq_n_s32(0x202C8C14u);
  *(int32x4_t *)&STACK[0x4C0] = vdupq_n_s32(0x9016460A);
  *(int32x4_t *)&STACK[0x4B0] = vdupq_n_s32(0x609E32D4u);
  *(int32x4_t *)&STACK[0x4A0] = vdupq_n_s32(0x4825D7DCu);
  *(int32x4_t *)&STACK[0x480] = vdupq_n_s32(0xC87FA3Fu);
  LODWORD(STACK[0x478]) = 2002413358;
  return sub_10013B80C(-1102580827, 141, 1, 22, v6);
}

uint64_t sub_100172224(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((58
                                          * (v3 + 0x60A074007A7FD0F8 != ((v2 - 1509833819) & 0x59FE377F ^ 0x667CCBF7))) ^ v2))
                            - 8))();
}

uint64_t sub_1001722BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = v2 < v4;
  *(_BYTE *)(v6 + v10 - 0xD05A22989016BA1) = *(_BYTE *)(v5 + v9 - 0x2964FBFC17A1BD6ALL);
  if (v11 == v7 - 0x4EE90E7D979C443CLL < (unint64_t)(v8 ^ 0x72Du) + a2)
    v11 = v7 - 0x4EE90E7D979C443CLL < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v11 * v3) ^ v8)) - 8))();
}

uint64_t sub_100172350()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  char v13;
  _BOOL4 v14;

  v11 = *(_DWORD *)(qword_100306950 + (dword_100306B58 & 0xFFFFFFFFB2A98008)) ^ (v4 + v6 + 1554110436);
  v12 = 1755343967 * ((1755343967 * (v11 & 0x7FFFFFFF)) ^ ((1755343967 * (v11 & 0x7FFFFFFFu)) >> 16));
  v13 = byte_10027AAC0[v12 >> 24] ^ *(_BYTE *)(v9 + v3 + (v7 ^ 0x8625374A6402DB87)) ^ byte_100256CB0[(v12 >> 24) + 3] ^ byte_100268450[(v12 >> 24) + 2] ^ v12 ^ (13 * BYTE3(v12));
  if (v1 < v0 != v5 - 0x69811A54A982107 < v0)
    v14 = v1 < v0;
  else
    v14 = v5 - 0x69811A54A982107 < v1;
  *(_BYTE *)(v4 + v6 - 0x6018E046A35E281CLL) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v14 * v2) ^ v8)) - 12))();
}

uint64_t sub_10017246C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  LODWORD(STACK[0x6E4]) = a6;
  return sub_100171440();
}

uint64_t sub_100172498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BOOL4 v9;
  unint64_t v10;
  int v11;
  _BOOL4 v12;

  v7 = (STACK[0x680] & 0x15754) + 320832379 + (((v3 ^ 0x658) + 200123613) ^ v5);
  v8 = v6 + v4 + 653925208;
  v9 = v8 < 0x650711C4;
  v10 = (v7 + 1174004454) | ((unint64_t)(v7 < v3 + 520957517) << 32);
  v11 = v9 ^ (v10 < 0x650711C4);
  v12 = v10 <= v8;
  if (!v11)
    v9 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((14 * v9) ^ v3)) - 4))();
}

uint64_t sub_100172550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x670]) = STACK[0x890];
  return sub_10010D5E0(4294953326, a7 - 0x3749BB5A557E7DA5, 105, a7 - 1935219079, a5, 4864, a7, 22062);
}

uint64_t sub_100172634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;

  LODWORD(STACK[0x670]) = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a7
                                                                                 + 8
                                                                                 * ((966
                                                                                   * ((v7 ^ 0x737E9E7F65F3FFA5)
                                                                                    - 0x737E9E7F3749FFE3
                                                                                    + ((v7 << ((2 * (v9 + 23)) ^ 0xC9u)) & 0xCBE7FF4ALL) == 782892994)) ^ (v9 - 233)))
                                                                     - 12))(a1, a2, STACK[0x628]);
}

uint64_t sub_1001726E8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X6>, int a3@<W8>)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v4 < v3;
  *(_BYTE *)(v9 + ((a3 - 1358) ^ 0x907AF2DF57432EEFLL) + v7) = (*(_BYTE *)(v6 + a1 - 0x1634CF424AD9C6FBLL) ^ 0x3F)
                                                                           + 2
                                                                           * (*(_BYTE *)(v6 + a1 - 0x1634CF424AD9C6FBLL) & 0x3F)
                                                                           - 3;
  if (v10 == v8 - 0x25D4F355F8D0751DLL < v3)
    v10 = v8 - 0x25D4F355F8D0751DLL < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((!v10 * v5) ^ a3)) - 12))();
}

uint64_t sub_1001727AC()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((120 * (v0 != (v1 + ((v1 + 61) & 0xDD) + 79))) ^ v1)))();
}

void sub_1001727F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v11 = (v9 - 277) | 0x102;
  v12 = ((v9 - 21) | 2) - 63;
  v14 = *(_DWORD *)(v8 + 64);
  v13 = *(_DWORD *)(v8 + 68);
  *(_BYTE *)(v8 + 56) = (((_BYTE)v13 << v12) ^ 0xF0) + (~(2 * (((_BYTE)v13 << v12) ^ 0xF0)) | 0x9F) - 78;
  *(_BYTE *)(v8 + 57) = (v13 >> 5) ^ 0x22;
  *(_BYTE *)(v8 + 58) = (v13 >> 13) ^ 0x9B;
  *(_BYTE *)(v8 + 59) = (v13 >> 21) ^ 0xA1;
  HIDWORD(v15) = v14 + 468426922;
  LODWORD(v15) = v13 ^ 0x60000000;
  *(_BYTE *)(v8 + 60) = ((v15 >> 29) - ((2 * (v15 >> 29)) & 0xD6) - 21) ^ 0x5A;
  *(_BYTE *)(v8 + 61) = ((~((v14 - 605314902) >> 4) | 0xF3)
                       + ((v14 - 605314902) >> 5)
                       + 7) ^ 0xB7;
  *(_BYTE *)(v8 + 62) = (((v14 - 605314902) >> 13) - (((v14 - 605314902) >> 12) & 0xA8) + 84) ^ 0xE5;
  *(_BYTE *)(v8 + 63) = (((v14 - 605314902) >> 21) - (((v14 - 605314902) >> 20) & 0x12) + 9) ^ 0xB8;
  STACK[0x840] = (((v11 - 296) | 0x20u) ^ 0xFFFFFFFFFFFFFFC6) + *(_QWORD *)(v10 + 8 * ((v11 - 296) | 0x20));
  LODWORD(STACK[0x668]) = a8 ^ 0x556;
  LODWORD(STACK[0x670]) = (a8 ^ 0x556) + 1790221395;
  LODWORD(STACK[0x688]) = -514044794;
  LODWORD(STACK[0x680]) = 2042623983;
  LODWORD(STACK[0x678]) = -1076953617;
  JUMPOUT(0x100147914);
}

uint64_t sub_1001728E0()
{
  int v0;
  unsigned __int16 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 == (unsigned __int16)(5 * (v0 ^ 0x422) - 139))
                                          * (((2 * v0) ^ 0x95C) + 504)) ^ v0))
                            - 8))();
}

void sub_100172920()
{
  JUMPOUT(0x100172938);
}

uint64_t sub_100172948()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1019 * (dword_1003059C4 == v1)) ^ v0))
                            - (11 * (v0 ^ 0x554u)
                             + v2)
                            + 1179))();
}

uint64_t sub_100172994()
{
  int v0;
  int v1;
  kern_return_t v2;

  LODWORD(STACK[0x660]) = v1;
  v2 = IOMainPort(0, (mach_port_t *)&STACK[0xA28]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1196
                                        * (((82 * (v0 ^ 0x156) - 451158573) ^ v2) + ((2 * v2) & 0xCA37BF7E) == -451158081)) | v0))
                            - 8))();
}

uint64_t sub_100172A00()
{
  int v0;
  BOOL v1;

  v1 = IOServiceMatching((const char *)&STACK[0x15E1]) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((229 * ((v1 ^ (41 * (v0 ^ 0x5C) + 1)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100172A50(const __CFDictionary *a1)
{
  int v1;
  kern_return_t MatchingServices;

  MatchingServices = IOServiceGetMatchingServices(STACK[0xA28], a1, (io_iterator_t *)&STACK[0x6CC]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1612
                                        * (((7 * (v1 ^ 0x104) + 2129657258) & (2 * MatchingServices))
                                         + (MatchingServices ^ 0x3F77FFFB) == 1064828923)) ^ v1))
                            - ((4 * v1) ^ 0x548)))();
}

uint64_t sub_100172AC8()
{
  int v0;
  uint64_t v1;
  io_object_t v2;

  v2 = IOIteratorNext(STACK[0x6CC]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((2 * v2) & 0x95EFBEDC) + (v2 ^ 0xCAF7DF6E) == -889725074)
                                          * ((v0 - 989109965) & 0x3AF49FB6 ^ 0x316)) ^ v0))
                            - 8))();
}

void sub_100172B2C()
{
  JUMPOUT(0x100172BC0);
}

uint64_t sub_100172B34@<X0>(int a1@<W8>)
{
  int v1;
  kern_return_t v2;

  v2 = IOServiceOpen(a1 + 889725074, mach_task_self_, 0, (io_connect_t *)&STACK[0x6B4]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (int)(((((2 * v2) & 0x32BE7EF4) + (v2 ^ 0x995F3F7A) == -1721811078)
                                             * (((v1 + 1607384009) & 0xA03147CD) - 315)) ^ v1))
                            - 12))();
}

uint64_t sub_100172BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * ((1269 * (*(_DWORD *)(v10 + 2500) != v9 + (a7 | v7) - 847)) ^ v8))
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 4294924396);
}

uint64_t sub_100172C2C()
{
  int v0;
  int v1;
  _DWORD *v2;
  unsigned int v3;
  uint64_t v4;

  *v2 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((2 * v0) ^ 0x68D)
                                          * ((v3 | ((unint64_t)(v3 < 0x2090B988) << 32)) == 546355592)) ^ v0))
                            - 8))();
}

uint64_t sub_100172CD4@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  int v2;
  int v3;
  _BOOL4 v4;

  v1[501] = v3 - 546355592;
  STACK[0xAC8] = 2008;
  v4 = IOConnectCallStructMethod(a1 - 1197784504, 0x22u, v1, 0x7D8uLL, v1, &STACK[0xAC8]) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v4 * (v2 + 159)) ^ v2)) - 4))();
}

uint64_t sub_100172D3C()
{
  uint64_t (*v0)(void);
  unint64_t v1;

  STACK[0x8A0] = v1;
  return v0();
}

uint64_t sub_100172D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((167 * (a7 == ((LODWORD(STACK[0x690]) - 1706) ^ 0x23))) ^ (LODWORD(STACK[0x690]) - 350)))
                            - 4))();
}

void sub_100172D80()
{
  *(_BYTE *)(STACK[0x9C8] + (LODWORD(STACK[0x6F0]) - 542170979)) = 0x80;
  JUMPOUT(0x100172DD4);
}

uint64_t sub_100172E4C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 - 2006230721) | 0x31008050) + 1184113003) * (v0 == 0)) ^ (v1 - 546)))
                            - ((v1 - 1604) | 0x224u)
                            + 677))();
}

uint64_t sub_100172EA0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((11 * (v0 ^ 0xB96BE023)) ^ 0xD2)) - 4))();
}

void sub_100172F50()
{
  JUMPOUT(0x100172F00);
}

uint64_t sub_100172F58()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v2 < v1;
  *(_BYTE *)(v4 + v7 - 0x43A1922699E5887ALL) = *(_BYTE *)(v3 + v6 - 0x19354F63E159EE0DLL);
  if (v9 == v5 - 0x5B5F2A1360F1471BLL < v1)
    v9 = v5 - 0x5B5F2A1360F1471BLL < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((19 * ((((v0 - 355) ^ v9) & 1) == 0)) ^ v0)) - 8))();
}

uint64_t sub_100172FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((2 * (((a7 == 0) ^ (LOBYTE(STACK[0x690]) + 26)) & 1)) & 0xF7 | (8 * (((a7 == 0) ^ (LODWORD(STACK[0x690]) - 1914082534)) & 1))) ^ (LODWORD(STACK[0x690]) - 246)))
                            - 8))();
}

uint64_t sub_100173030()
{
  int v0;
  uint64_t v1;
  int v2;

  v2 = STACK[0x874];
  STACK[0x680] = 0;
  LODWORD(STACK[0x660]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8
                                             * ((1852 * ((((v0 - 1686) | 0x1C0) ^ 0x1F7) == -42903)) ^ (v0 - 1423)))
                            - 4))();
}

uint64_t sub_100173044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * ((1699
                                                                                   * (*(_BYTE *)(STACK[0x6B8] + 2) == 1)) ^ (v3 - 1914082535) & 0x72168FF9u))
                                                                     - ((((v3 - 1914082535) & 0x72168FF9) + 50) ^ 0x4DFu)
                                                                     + 1733))(a1, a2, a3, 4294924392);
}

uint64_t sub_1001730A4()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1033
                                * (*(unsigned __int8 *)(v1 + v2 - 546355592 + (v0 ^ 0x3E8u) - 505) == (((v0 - 82) | 0x20) ^ 0xE0))) ^ v0)))();
}

uint64_t sub_1001730F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;

  v3 = 10 * (v0 ^ 0x1CA);
  v4 = v1 - 1119544050 + v3;
  if (v4 < 0xDDD5D886 != (int)v1 - 1119543554 < ((v3 - 174) ^ 0xDDD5D7BE) + ((v3 - 174) | 0xC8))
    v5 = (int)v1 - 1119543554 < ((v3 - 174) ^ 0xDDD5D7BE) + ((v3 - 174) | 0xC8);
  else
    v5 = (int)v1 - 1119543554 >= v4;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((1516 * v5) ^ v3)) - 8))(1, v1);
}

uint64_t sub_100173190@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 & ~(a3 ^ (*(_BYTE *)(v5 + (a2 + a4)) == 0))) * v4) ^ a3)))();
}

void sub_1001731C0()
{
  JUMPOUT(0x100173134);
}

uint64_t sub_1001731C8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a2 == 128) * (((v2 + 556) | 0x2C1) ^ 0x5CA)) ^ v2))
                            - ((v2 + 136864798) & 0xF7D79F0D ^ 0x504)))();
}

uint64_t sub_100173220()
{
  int v0;
  void *v1;
  void *v2;
  BOOL v3;
  int v4;

  v1 = malloc_type_malloc(0x10uLL, 0x4E5327F9uLL);
  STACK[0x7C0] = (unint64_t)v1;
  v2 = malloc_type_malloc(0x10uLL, 0x4EAEF4CEuLL);
  STACK[0x848] = (unint64_t)v2;
  if (v1)
    v3 = v2 == 0;
  else
    v3 = 1;
  v4 = v3;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + (((((v0 - 1164) ^ v4) & 1) == 0) | v0)))();
}

uint64_t sub_100173280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  v7 = ((2 * *(unsigned __int8 *)(v4 + 3)) & 0x5C) + (*(unsigned __int8 *)(v4 + 3) ^ 0xFFFFFF2E);
  v8 = v7 + 1953753600;
  v9 = v5 - v7;
  LODWORD(STACK[0x79C]) = v9 - 229;
  LODWORD(STACK[0x88C]) = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * ((458
                                                                         * (((v9 + 3) & 0xF)
                                                                          + ((((v3 | 0x5C) + 36) | 0x40C) ^ 0x2625E1CF)
                                                                          - ((2 * (v9 + 3)) & 8) != 640017603)) ^ (v3 | 0x5C))))(a1, a2, a3, 4294924393);
}

uint64_t sub_100173310(unint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v9;

  STACK[0x880] = a3;
  STACK[0x790] = a1;
  STACK[0x718] = v6 + 510;
  STACK[0x940] = v6 + 528;
  LODWORD(STACK[0x788]) = -289289327;
  STACK[0x680] = v5 + 4;
  v9 = v5 == -4 && v4 != ((v3 + 377) ^ 0x25B) + 1953753376;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v9 * (48 * ((v3 + 377) ^ 0x25B) - 427)) ^ (v3 + 377))) - 12))();
}

uint64_t sub_1001733B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v11;

  v11 = a6 == (v7 ^ 0x6A2) + 1990265947 || v8 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((v11 * ((v6 + v7 - 672) ^ (v6 - 496))) ^ v7)) - 12))();
}

uint64_t sub_1001733F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  STACK[0x660] = v7;
  LODWORD(STACK[0x670]) = v6;
  LODWORD(STACK[0x688]) = a1 - 1614625540;
  v8 = qword_100306950;
  v9 = dword_100306B58 & 0xFFFFFFFFB2A98008;
  LODWORD(STACK[0x668]) = a6;
  STACK[0x678] = (a5 - a6);
  return sub_10016DDB8(a1, (a6 + v6 - 1350088456), v8, v9, a5, 0x80621F8u, 0x3E8u, 0xFFFFFFFFD9DE3836);
}

uint64_t sub_1001734A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((((101 * (v7 ^ 0x6CF)) ^ (v7 - 610)) * ((_DWORD)v6 == 0)) ^ (v7 - 1385))))(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t sub_1001734E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((LODWORD(STACK[0x690]) ^ 0x644) + 257 + 5 * (LODWORD(STACK[0x690]) ^ 0x644) + 847)
                                * (a7 == 0)) ^ (LODWORD(STACK[0x690]) - 1347))))();
}

uint64_t sub_10017351C()
{
  int v0;
  int v1;
  void *v2;

  v1 = LODWORD(STACK[0x89C]) - LODWORD(STACK[0xA50]);
  LODWORD(STACK[0x8EC]) = v1;
  v2 = malloc_type_malloc(v1 + ((v0 + 291) ^ 0xE278BB88), 0xB996B06BuLL);
  STACK[0x9B8] = (unint64_t)v2;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((1502 * (v2 != 0)) ^ v0)))();
}

uint64_t sub_100173580()
{
  int v0;
  uint64_t v1;
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((8 * ((v2 & 3) == 0)) | (((v2 & 3) == 0) << 7)) ^ v0))
                            - (v0 - 693)
                            + 709))();
}

uint64_t sub_1001735B0()
{
  arc4random();
  return sub_1001735DC();
}

uint64_t sub_1001735DC@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 + v4 - 2056426868) = a1 ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1518 * (v5 + (v3 ^ 0x7B7u) - 125 - 1280 == v2 + 16)) ^ v3)) - 4))();
}

uint64_t sub_100173628(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((442
                                          * (v2 - a2 + ((a1 - 217228017) & 0xCF2A65F ^ 0x1F62B92Bu) >= ((a1 - 84317223) & 0x50697FF ^ 0x672u))) ^ a1))
                            - 12))();
}

uint64_t sub_1001736AC(uint64_t a1, char a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v15;

  v12 = v10 + v9 + a8 + 1551;
  v15 = ((10 - a2) & 0xFu) < (v12 & 0xF) || v12 > ((a3 - 618) | 0x200) - 1537 || 1496755164 - v8 < v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((225 * (((a3 + 39) ^ v15) & 1)) ^ a3)) - 8))();
}

uint64_t sub_10017371C(uint64_t a1, char a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BOOL4 v19;

  v10 = (v4 + v5) + v8;
  v11 = v10 - v7 - v6;
  v12 = (a2 + 5) & 0xF;
  v13 = v10 - ((_QWORD)&unk_100254820 + v12);
  v14 = -v12 - (_QWORD)byte_100279C70 + v10 - ((a4 ^ 0x325u) + 1310);
  v15 = -v12 - (_QWORD)byte_10027D7A0 + v10 - 2;
  v19 = v13 > 0xF && v11 > 0xF && v14 + 1695 >= ((4 * (a4 ^ 0x325u)) ^ 0x600uLL) && v15 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((28 * v19) ^ a4)) - 12))();
}

uint64_t sub_1001737BC(void *a1)
{
  int v1;

  free(a1);
  STACK[0x6B8] = 0;
  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + (((*(_QWORD *)(STACK[0x8E0] + 8) == 0)
                               * (((474 * (v1 ^ 0x2D6) - 1046433721) & 0x3E5F4FBF) - 940)) ^ (474 * (v1 ^ 0x2D6)))))();
}

uint64_t sub_10017381C(void *a1)
{
  uint64_t v1;

  free(a1);
  *(_QWORD *)(v1 + 8) = 0;
  *(_DWORD *)(v1 + 16) = 1990266973;
  STACK[0x8A0] -= 144;
  return ((uint64_t (*)(void))STACK[0x808])();
}

uint64_t sub_10017384C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 1350) ^ (15 * (v1 == 0))))
                            - ((159 * (v0 ^ 0x6CBu)) ^ 0x3B2)))();
}

uint64_t sub_100173888()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((986 * (v1 != (((v0 - 1214) | 0x80) ^ 0x28F))) ^ (v0 - 1349)))
                            - 8))();
}

uint64_t sub_1001738D4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  v2 = a1 - 729;
  v3 = *(unsigned __int8 *)STACK[0x648];
  LODWORD(STACK[0x690]) = v2 + v3 - 1223708077 - ((2 * v3) & 0xAE) - 221;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((char)v3 < (char)(v2 + 35)) * ((v2 ^ 0x2B) - 198)) | v2)) - 12))();
}

uint64_t sub_100173934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  char v7;
  uint64_t v8;
  int v9;
  unsigned __int8 v10;

  v9 = a7 - 224;
  v10 = a7 + 115;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((1364 * ((v10 ^ ((-(((~v9 | 0xFFFFFF00) + (((v10 | 0xB) ^ 0xA0) + v7)) ^ (~(_BYTE)v9 + ((v10 | 0xB) ^ 0xA0) + v7)) | ((~v9 | 0xFFFFFF00) + (((v10 | 0xB) ^ 0xA0) + v7))) >> 15)) & 1)) ^ (v9 + 956)))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925295);
}

uint64_t sub_100173998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (int)(((v6 == ((v7 + 53) ^ 0xFB)) * ((v7 + 338709813) & 0xEBCFB35F ^ 0x349)) ^ v7))
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 4294925295);
}

uint64_t sub_1001739EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((1237 * (LODWORD(STACK[0x6A4]) - 1041036908 >= ((((a7 - 1319416676) & 0x4EA4B3FF) + 1234) ^ 0x68Eu))) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_100173A50()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = STACK[0x958];
  v3 = ~STACK[0x648];
  STACK[0x688] = STACK[0x958];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((v3 + v2 + ((v0 - 1595679438) & 0x5F1C23FF) - 785 < 0x10)
                                          * ((v0 + 46) ^ 0x1FB)) ^ v0))
                            - 4))();
}

uint64_t sub_100173AF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + a1 - 0x3A03A2395EF99A87) = *(_BYTE *)(v4 + v2 - 0x60D51A211B09A23ALL)
                                             - ((117 * (v3 ^ 0x2A) + 11) & (2
                                                                          * *(_BYTE *)(v4 + v2 - 0x60D51A211B09A23ALL)))
                                             + 53;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((4 * (v6 + 1 == v1 + 16)) | ((v6 + 1 == v1 + 16) << 8)) ^ v3))
                            - 4))();
}

uint64_t sub_100173B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  _BOOL4 v13;
  _BOOL4 v14;

  v9 = ((*(unsigned __int8 *)(STACK[0x648] + 65) - ((2 * *(unsigned __int8 *)(STACK[0x648] + 65)) & 0xC8)) << 8) + 25600;
  v10 = ((v9 ^ 0x6400) - ((v9 << ((((v7 - 91) | 1) ^ 4) & 0x37)) & 0x2200) - 28286) ^ 0xFFFF9182 | (*(unsigned __int8 *)(STACK[0x648] + 66)
                                                                                                  - ((2 * *(unsigned __int8 *)(STACK[0x648] + 66)) & 0x96)
                                                                                                  + 2379) ^ 0x94B;
  LOWORD(v10) = v10 - ((2 * v10) & 0xF214) - 1782;
  LOWORD(STACK[0x872]) = v10;
  v11 = (unsigned __int16)v10 ^ 0xF90A;
  LODWORD(STACK[0x680]) = 2 * v11;
  v12 = 2 * v11 + ((unsigned __int16)v10 ^ 0x96CF06F5) - 1398789968;
  v13 = v12 < 0x4370286C;
  v14 = v12 > v6 + 90386944;
  if ((v6 + 90386944) < 0x4370286C != v13)
    v14 = v13;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((1245 * !v14) ^ v7)))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_100173CAC()
{
  size_t v0;
  int v1;
  void *v2;

  v2 = malloc_type_malloc(v0, 0xA23FB50CuLL);
  STACK[0x678] = (unint64_t)v2 + 0x4E36C53A99817805;
  STACK[0xA80] = (unint64_t)v2 + 0x4E36C53A99817805;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + (((v2 != 0) * (((v1 ^ 0xC2) + 1328) ^ 0x271)) ^ v1)))();
}

uint64_t sub_100173D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;

  v5 = (v3 ^ 0xBB3B8FDFBF7FFFBELL) + 0x44C47020F7A1AE8BLL + ((2 * (int)v3) & 0x1FF7CLL) == ((v4 - 264) ^ 0xB721AEDCLL);
  return (*(uint64_t (**)(void))(a3 + 8 * (((4 * v5) | (v5 << 6)) ^ v4)))();
}

uint64_t sub_100173DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X6>, unint64_t a4@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _BOOL4 v9;

  v9 = v4 < a4;
  *(_BYTE *)(v6 + a1 - 0x2A2D4C3DC919F48ELL) = *(_BYTE *)(v5 + a3 - 0x4924F95ABA6A3D25)
                                             - ((2 * *(_BYTE *)(v5 + a3 - 0x4924F95ABA6A3D25)) & 0x34)
                                             - 102;
  if (v9 == v7 - 0x44250FD4E13FBBDBLL < a4)
    v9 = v7 - 0x44250FD4E13FBBDBLL < v4;
  return (*(uint64_t (**)(void))(a2 + 8 * (((4 * !v9) | (!v9 << 6)) ^ v8)))();
}

void sub_100173E50()
{
  unsigned int v0;
  uint64_t v1;

  STACK[0x9A8] = *(_QWORD *)(v1 + 8 * (int)(v0 - 1709)) + (v0 ^ 0xFFFFFFFFFFFFF935);
  JUMPOUT(0x100173F50);
}

uint64_t sub_100174018(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;

  v9 = v6 + v5;
  if ((v9 + 1) > 0x40)
    v10 = v9 + 1;
  else
    v10 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((102 * (v7 - a1 - a4 + v10 < ((v4 + 166706765) & 0xF61045F7 ^ 0x4FC))) ^ v4))
                            - ((v4 + 166706765) ^ 0x9EFBEF7)))();
}

uint64_t sub_1001740BC(int a1, uint64_t a2, uint64_t a3, int a4, int a5, unsigned int a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  BOOL v14;

  v10 = a4 + a1;
  v11 = (a5 ^ 0x43B ^ (v7 + 201)) + v10;
  if (v11 <= 0x40)
    v11 = a6;
  v12 = a7 + v11;
  v14 = v8 - v10 < v12 || v12 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((466 * (((a5 + 18) ^ v14) & 1)) ^ a5)) - 4))();
}

uint64_t sub_100174120(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  char v14;

  v9 = (a1 + v5) + v7;
  v10 = v9 - v2;
  v11 = (unint64_t)(v9 - v2) < 0x10;
  v12 = v9 - v3 - 3;
  if (v12 < 0x10)
    v11 = 1;
  v13 = v9 - v4 - 2;
  if (v13 < 0x10)
    v11 = 1;
  v14 = (unint64_t)(v9 - v6) < 0x10 || v11;
  if (v10 < (((a2 - 72) | 0x40Du) ^ 0xFFFFFFFFFFFFF82DLL) + ((a2 + 312) | 0x170u))
    v14 = 1;
  if (v12 < 0x10)
    v14 = 1;
  if (v13 < 0x10)
    v14 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1044 * ((v14 & 1) == 0)) | a2)) - 12))();
}

uint64_t sub_1001741C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int8x16_t *v4;
  uint64_t v5;
  uint64_t v6;

  *(int8x16_t *)(v5 + (((v3 ^ 0x3B8u) + 4294967095) & (v1 + a1))) = veorq_s8(*v4, (int8x16_t)xmmword_1002547D0);
  return (*(uint64_t (**)(__n128))(v6 + 8 * ((193 * (((v2 + 1) & 0x1FFFFFFF0) == 16)) ^ v3)))((__n128)xmmword_1002547D0);
}

void sub_100174224()
{
  JUMPOUT(0x1001741FCLL);
}

void sub_100174230()
{
  JUMPOUT(0x100174240);
}

uint64_t sub_1001742B0()
{
  unsigned int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = (*(_DWORD *)(v3 + 68) ^ v0) + v1 + v0 - (v4 & (2 * ((*(_DWORD *)(v3 + 68) ^ v0) + v1)));
  *(_DWORD *)(v3 + 68) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)((((v6 ^ v0) >= v1)
                                               * ((((v2 - 79) | 0x60) ^ 0xFFFFFF02) + ((v2 + 62) | 0x40))) ^ v2))
                            - 4))();
}

void sub_100174308()
{
  JUMPOUT(0x100174318);
}

uint64_t sub_1001743C4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((a2 - 413486843) < 0x38)
                                          * ((v2 - 155) ^ 0x5E ^ (v2 - 1851043592) & 0x6E54ACFF)) ^ (v2 - 1361)))
                            - 4))();
}

uint64_t sub_100174420()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((980
                                               * ((char)((((v1 - 53) & 0xDE) - 104) ^ *(_BYTE *)(v0 + 96)) >= (char)(((((v1 - 53) & 0xDE) + 94) ^ 0xA6) + ((v1 - 53) & 0xDE) + 102))) ^ (v1 + 953554891) & 0xC729E3DE))
                            - 12))();
}

uint64_t sub_10017447C()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1949 * (v0 == ((v1 + 19) ^ 0xB2 ^ (2 * v1) ^ 0xBE))) ^ v1)))();
}

void sub_1001744B4()
{
  uint64_t v0;
  char v1;
  char v2;
  int v3;
  unsigned int v4;
  unint64_t v5;

  v2 = v1 ^ 0x17;
  v3 = *(_DWORD *)(v0 + 64);
  v4 = *(_DWORD *)(v0 + 68);
  *(_BYTE *)(v0 + 56) = (((v3 - 605314902) >> 21)
                       - (((v3 - 605314902) >> 21 << (v2 - 65)) & 0x56)
                       - 85) ^ 0x1A;
  *(_BYTE *)(v0 + 57) = (((v3 - 605314902) >> 13) - (((v3 - 605314902) >> 12) & 0xB6) - 37) ^ 0x6A;
  HIDWORD(v5) = v3 + 468426922;
  LODWORD(v5) = v4 ^ 0x60000000;
  *(_BYTE *)(v0 + 58) = (((v3 - 605314902) >> 5) - (((v3 - 605314902) >> 4) & 0xFC) - 2) ^ 0x4F;
  *(_BYTE *)(v0 + 59) = ((v5 >> 29) - ((2 * (v5 >> 29)) & 0x2A) - 107) ^ 0x24;
  *(_BYTE *)(v0 + 60) = (v4 >> 21) ^ 0xA1;
  *(_BYTE *)(v0 + 61) = (v4 >> 13) ^ 0x9B;
  *(_BYTE *)(v0 + 62) = (v4 >> 5) ^ 0x22;
  JUMPOUT(0x1001745A4);
}

uint64_t sub_1001745D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10 + 8 * (v7 ^ (1695 * ((v8 + v9 + 1782) < 0x40)))) - ((42 * (v7 ^ 0x2BE) - 850) | 6u) + 30))(a1, a2, a3, a4, a5, a6, a7, LODWORD(STACK[0x690]));
}

uint64_t sub_100174620()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v0 - v1 - v2 + 96 >= (v3 ^ 0x375u)) * (v3 + 585)) ^ v3)) - 8))();
}

uint64_t sub_100174664()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((((((v1 ^ 0x1F4) - 476) ^ 0x667) - 1672) * (v0 < 0xF)) ^ v1 ^ 0x1F4))
                            - 8))();
}

uint64_t sub_1001746A0@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)&v6 = 0xB1B1B1B1B1B1B1B1;
  *((_QWORD *)&v6 + 1) = 0xB1B1B1B1B1B1B1B1;
  *(_OWORD *)(v2 + (a1 + a2)) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v3 & 0x1FFFFFFF0) == 16) * (v4 ^ 7)) ^ (v4 - 720))) - 4))();
}

uint64_t sub_1001746E4(__n128 a1)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(__n128 *)(v1 + v4) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v3) ^ v2)) - 4))();
}

uint64_t sub_10017470C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((7 * (v2 ^ 0x35E)) ^ 0x2BC) * (v0 != v1)) ^ v2)) - 4))();
}

uint64_t sub_100174748()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((433 * ((v0 & 8) == (((v1 - 667) | 0x82u) ^ 0xAALL))) ^ v1))
                            - ((v1 - 1895265012) & 0x70F776FD ^ 0x6C5)))();
}

uint64_t sub_1001747A8@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_QWORD *)(v2 + (v4 + a1 + a2)) = 0xB1B1B1B1B1B1B1B1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * (((v4 - (v3 & 0x1FFFFFFF8) == -8) * (((v5 - 39) | 0x228) - 423)) | v5))
                            - 4))();
}

uint64_t sub_1001747F8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;

  *(_BYTE *)(v1 + (v2 + a1)) = -79;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((117 * ((v2 + 1 + a1) < 0x40)) ^ (v3 - 1058)))
                            - (v3 ^ 0x6C5)))();
}

void sub_100174840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  STACK[0x840] = *(_QWORD *)(v9 + 8 * v8);
  LODWORD(STACK[0x668]) = a8 ^ 0x556;
  LODWORD(STACK[0x670]) = (a8 ^ 0x556) + 1790221395;
  LODWORD(STACK[0x688]) = -514044794;
  LODWORD(STACK[0x680]) = 2042623983;
  LODWORD(STACK[0x678]) = -1076953617;
  JUMPOUT(0x100147914);
}

uint64_t sub_100174858(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a1 ^ (499 * (v1 == v2)))) - ((a1 - 197) ^ 0x48Eu) + 1153))();
}

void sub_100174888()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x730]) = v1;
  STACK[0x840] = *(_QWORD *)(v2 + 8 * (int)v0) + (v0 ^ 0xFFFFFFFFFFFFFFF7);
  JUMPOUT(0x1001748B0);
}

uint64_t sub_10017496C@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v8 + (v6 + a2)) = *(_BYTE *)(v7 + v2 - 526565179) ^ *(_BYTE *)(v3 + ((v2 - 526565179) & 0xF)) ^ *(_BYTE *)(((v2 - 526565179) & 0xF) + v4 + 3) ^ (((v2 - 59) & 0xF) * (((a1 ^ 0xB6) - 80) & 0x17 ^ 0x1A)) ^ *(_BYTE *)(((v2 - 526565179) & 0xF) + v5 + 2) ^ 0xB1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1462 * ((v6 - 1496755164) < 0x40)) ^ a1 ^ 0x5B6))
                            - 12))();
}

void sub_100174A10()
{
  JUMPOUT(0x1001749A0);
}

uint64_t sub_100174A18(int a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  unint64_t v12;
  int v13;
  _BOOL4 v14;

  v11 = v1 < v2;
  *(_BYTE *)(v3 + v4 + v8) = 0;
  v12 = v3 + v9 + (v5 & v6);
  v13 = v11 ^ (v12 < v2);
  v14 = v12 < v1;
  if (!v13)
    v11 = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v11 * a1) ^ v7)) - 4))();
}

uint64_t sub_100174A68(int a1)
{
  return sub_100174A18(a1);
}

uint64_t sub_100174A70(void *a1)
{
  int v1;
  unsigned int v2;

  v2 = (v1 + 1779892486) & 0x95E8FFD6;
  free(a1);
  STACK[0x7B8] = 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (int)(((STACK[0x6B8] != 0) * ((v2 ^ 0x160) + 1010)) ^ v2)) - 8))();
}

uint64_t sub_100174AC8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((208 * (v4 + 8 != ((v5 - 1487276188) & 0x58A60EED ^ (v5 + 434 + a4)))) ^ v5)))();
}

uint64_t sub_100174BB4(void *a1)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  unsigned int v5;
  int v6;

  STACK[0x8A0] = STACK[0x5D0];
  v5 = ((v2 ^ 0x19B) + 1581196815) & 0xA1C0DEDD;
  STACK[0x948] = v1;
  STACK[0x8F0] = STACK[0x678];
  free(a1);
  v6 = STACK[0x5F0];
  STACK[0x680] = v3;
  LODWORD(STACK[0x660]) = v4;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (int)((1852 * (v6 == (((v5 - 1686) | 0x1C0) ^ 0x1F7))) ^ (v5 - 1423)))
                            - 4))();
}

uint64_t sub_100174BFC()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x72C]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1404
                                          * ((LODWORD(STACK[0x82C]) | ((unint64_t)(LODWORD(STACK[0x82C]) < 0x1B53B28EuLL) << 32))
                                           - 332463153 != ((v1 + 2134350393) & 0xF2FEFFFD ^ ((v1 + 1368)
                                                                                           + 1974740772)))) ^ v1))
                            - 4))();
}

uint64_t sub_100174C70()
{
  return sub_100174A18(23);
}

uint64_t sub_100174CCC@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;

  LODWORD(STACK[0x82C]) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((972 * (((STACK[0x7B8] == 0) ^ ((a1 ^ 0x78) + 1)) & 1)) ^ a1 ^ 0x72369A5B))
                            - 12))();
}

uint64_t sub_100174CE4()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x680];
  LODWORD(STACK[0x890]) = *(unsigned __int8 *)(STACK[0x680] + 1)
                        - (((v0 ^ 0xB8) - 176) & (2 * *(unsigned __int8 *)(STACK[0x680] + 1)))
                        + 1985812931;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((67 * (*(unsigned __int8 *)(v2 + 6) != ((v0 - 17) ^ 0x7D))) ^ v0))
                            - 8))();
}

uint64_t sub_100174D40()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((233
                                          * ((LODWORD(STACK[0x72C]) | ((unint64_t)(LODWORD(STACK[0x72C]) < 0x456D9175uLL) << 32)) != 1164808565)) ^ v0))
                            - 8))();
}

uint64_t sub_100174DC0@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = v2 < v3;
  *((_BYTE *)&STACK[0xBB0] + v4 - 0x7874E3F8E112FF29) = 40;
  if (v6 == v4 - 0x7874E3F8AD22A4CALL < a1)
    v6 = v4 - 0x7874E3F8AD22A4CALL < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((2 * !v6) | (8 * !v6)) ^ (v1 - 1110)))
                            - (v1 - 1368)
                            + 365))();
}

uint64_t sub_100174E84@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(unsigned __int8 *)STACK[0x680] - 1 < 2)
                                          * ((a1 - 1178359376) & 0x463C579F ^ 0x7B0)) ^ a1))
                            - 4))();
}

uint64_t sub_100174F10()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((STACK[0x6B8] != 0) * ((v0 ^ 0x160) + 1010)) ^ v0)) - 8))();
}

uint64_t sub_100175038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((131 * (v8 + 8 != a8)) ^ v9))
                            - ((((v9 - 707) | 0x470u) + 217) ^ 0x6C5)))();
}

uint64_t sub_100175078(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v3;
  int v4;
  int v5;

  v5 = v4 - 116;
  STACK[0x8A0] = STACK[0x5C0];
  STACK[0x740] = v3;
  STACK[0xA48] = STACK[0x678];
  free(a3);
  STACK[0x7C0] = 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (((((v5 + 108) | 0x481) - 920) * (STACK[0x848] != 0)) ^ v5)) - 8))();
}

void sub_1001750DC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 928048777 * (((a1 | 0x634B8ECF) - (a1 | 0x9CB47130) - 1665896144) ^ 0x4557FBA2);
  __asm { BR              X10 }
}

uint64_t sub_100175194()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((445
                                          * (((*(_QWORD *)(v1 + 120) == 0x6262E0568D5240A8) ^ (((v0 + 22) ^ 0xBF) - 23)) & 1)) ^ (v0 + 278)))
                            - 4))();
}

uint64_t sub_1001752E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 - 559) ^ 0x204) * (v2 != v1)) ^ v0)))();
}

uint64_t sub_100175304@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((*(_QWORD *)(v1 - 0x6262E0568D5240A0) != 0) * (a1 - 371)) ^ a1))
                            - 8))();
}

uint64_t sub_100175338@<X0>(void *a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = a2 - 488;
  free(a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((v4 + 806) | (8 * (*(_QWORD *)(v2 - 0x6262E0568D524090) == 0))))
                            - 4))();
}

uint64_t sub_100175370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  free((void *)(v1 - 0x6262E0568D5240A8));
  *(_QWORD *)(v0 + 120) = 0x6262E0568D5240A8;
  v4 = malloc_type_malloc(0x28uLL, 0x1010040725982CDuLL) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v3 + 619220206) & 0xDB1772D6 ^ (v3 - 1790488947) & 0x6AB8B56F ^ 0x56D)
                                               * v4) ^ (v3 + 1114)))
                            - 4))();
}

uint64_t sub_100175464(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v6;
  void *v7;

  v6 = *(_DWORD *)(v1 + 20) + v2;
  *a1 = *(_QWORD *)(v1 + 40) ^ v2;
  a1[1] = 0;
  a1[3] = 0;
  v7 = malloc_type_malloc((v6 - 1808951162), 0x45FA0C94uLL);
  a1[1] = (uint64_t)v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((57 * (((v4 - 107) ^ (v7 == 0)) & 1)) ^ v4))
                            - 12))();
}

uint64_t sub_1001754C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  *(_DWORD *)(v0 + 16) = v2;
  v4 = (v2 | ((unint64_t)(v2 < 0x6BD2677A) << 32)) + 307034700 != (v3 ^ 0x418u)
                                                                                     - 157
                                                                                     + 2115985648;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v4 | (8 * v4)) ^ v3 ^ 0x418)) - 12))();
}

uint64_t sub_100175554@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v3 < v2;
  *(_BYTE *)(v5 + a1 - 0x4AB2092B44DC0CF6) = *(_BYTE *)(v4 + *(_QWORD *)(v7 + 32) - 0x46CAA1F943420962)
                                             - ((a2 ^ 0x2D) & (2
                                                             * *(_BYTE *)(v4
                                                                        + *(_QWORD *)(v7 + 32)
                                                                        - 0x46CAA1F943420962)))
                                             - 81;
  if (v9 == v6 - 0x75FCE2784E5EFC13 < v2)
    v9 = v6 - 0x75FCE2784E5EFC13 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v9 | (8 * v9)) ^ a2)) - 12))();
}

uint64_t sub_1001755FC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  void *v5;

  v5 = malloc_type_malloc(*(_DWORD *)(v0 + 28) ^ v2 ^ 0x7670799Bu, 0x4C9DE76uLL);
  *(_QWORD *)(v1 + 24) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((725 * (((v5 == 0) ^ (v4 + 90) ^ 0x5B) & 1)) ^ v4))
                            - 12))();
}

uint64_t sub_100175658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  *(_DWORD *)(v0 + 32) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v3 ^ (104
                                               * ((v1 ^ 0xEFBFFFFFDCDCF7FFLL)
                                                + 0x10400000C98F0068
                                                + ((2 * v1) & 0x1B9B9EFFELL) == 2792093799))))
                            - 12))();
}

uint64_t sub_100175708(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  _BOOL4 v11;

  v11 = v2 < v3;
  *(_BYTE *)(v6 + a1 - 0x220F83238F6918E4) = *(_BYTE *)(v5 + *v8 - 0x5514BB7B4338F102)
                                             - (((v10 + 61) & 0xBF ^ 0x73) & (2
                                                                            * *(_BYTE *)(v5 + *v8 - 0x5514BB7B4338F102)))
                                             - 81;
  if (v11 == v7 - 0x766F905786A7B282 < v1)
    v11 = v7 - 0x766F905786A7B282 < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((!v11 * v4) ^ v10)) - 12))();
}

void sub_1001757C4(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v2 + 120) = a1;
  *(_DWORD *)(v2 + 96) = (*(_DWORD *)(v2 + 96) & 0xFFFFFFFB ^ 0x79887DCC)
                       + 2038987977
                       + ((2
                         * ((*(_DWORD *)(v2 + 96) & 0xFFFFFFFB ^ 0x79887DCC) & (3 * (v1 ^ 0x176) + 2038987977) ^ (*(_DWORD *)(v2 + 96) | 0x7FFFFFED))) ^ 0x2D)
                       + 260;
  *(_DWORD *)v2 = 2023518722;
  *(_DWORD *)(v2 + 4) = -1223708077;
  *v3 = v2;
}

uint64_t sub_100175CCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  unint64_t v5;
  _DWORD v7[2];
  uint64_t v8;
  char *v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;

  v5 = 444472921
     * ((((unint64_t)v7 | 0xEA735D22C64C6F32)
       - ((unint64_t)v7 | 0x158CA2DD39B390CDLL)
       + 0x158CA2DD39B390CDLL) ^ 0x6A6885817B3808DCLL);
  v10 = v5 ^ 0x68D9B3A5;
  v8 = a4;
  v9 = (char *)&loc_1000E9908 + v5 - 4;
  v12 = a2;
  v13 = a1;
  v7[0] = v5 ^ a5;
  v7[1] = v5 ^ a3;
  sub_1000E9860((uint64_t)v7);
  return v11;
}

uint64_t sub_100175DA4(uint64_t result)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  _BOOL4 v6;
  int v7;

  v1 = 1606104089 * ((((2 * result) | 0x3ADB71A5212363FCLL) - result - 0x1D6DB8D29091B1FELL) ^ 0xDFD343E6E586F3C0);
  v2 = *(_DWORD *)(result + 24) ^ (1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0));
  v3 = *(_QWORD *)(result + 32) + v1;
  v4 = *(_QWORD *)result - v1;
  v5 = (uint64_t)v4 < (uint64_t)v3;
  v6 = v4 < v3;
  v7 = v5;
  if (((*(_DWORD *)(result + 12) ^ (1606104089
                                   * ((((2 * (_DWORD)result) | 0x212363FC) - (_DWORD)result + 1869499906) ^ 0xE586F3C0))) & 1) != 0)
    v6 = v7;
  if (!v6)
    v2 = *(_DWORD *)(result + 20) - 1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0);
  *(_DWORD *)(result + 8) = *(_DWORD *)(result + 16) ^ (1606104089
                                                      * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0)) ^ v2;
  return result;
}

void sub_100175E40(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_100175EC4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((785 * (*(_DWORD *)(a1 + 8) + a2 == 640809546)) ^ v2))
                            - ((v2 + 1423) ^ 0x63BLL)))();
}

uint64_t sub_100175F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;

  v11 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(a1 + 56))
    v12 = v11 == 0x353232397341B08CLL;
  else
    v12 = 1;
  v13 = v12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((15 * (((v9 + 114) ^ v13) & 1)) ^ v9)) - 2 * (v9 ^ 0x661u) + 152))(a1, v11, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_100175F64@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((25
                                          * (((*(_DWORD *)(a1 + 4) - a2) ^ 0x41800A13) == *(_DWORD *)(a1 + 48)
                                                                                        + a2
                                                                                        + ((v2 - 1439) ^ 0xB544CA68))) | (v2 - 1423)))
                            - 8))();
}

uint64_t sub_100175FBC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  char v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v5 = (v3 & 0xF ^ 0x71E4164B | 0x4BCDD096) - ((v2 - 1271779627) | v3 & 0xF ^ 0x71E4164B);
  v7 = *(_DWORD *)(a1 + 64) - a2 != 290818466 || v5 != -2047371403;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v7 * ((v2 ^ 0x30) - 116)) ^ v2)) - 8))();
}

_DWORD *sub_100176030(_DWORD *result)
{
  int v1;

  *result = v1;
  return result;
}

void sub_100176054(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned __int8 *v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  uint64_t v100;
  int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  unint64_t v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  uint64_t v120;
  int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  uint64_t v130;
  unsigned int v131;
  uint64_t v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  unint64_t v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  uint64_t v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  uint64_t v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  uint64_t v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  BOOL v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned __int8 *v253;

  LODWORD(STACK[0x270]) = *(unsigned __int8 *)(a1 + 52) - a3;
  v6 = (v4 + 2092971371) & 0x833FCE72;
  v7 = *(unsigned __int8 **)(a1 + 16);
  v8 = v7[3];
  v9 = ((v8 - 26) - 2 * (((_BYTE)v8 - 26) & 0x7F) + 1104048255) ^ 0x41CE7089;
  v10 = byte_1002685A0[(((7098 * v9) & 0x2FE0FFC) + ((3549 * v9) ^ 0xBD7F07FE) + 1115748354) % 0x10180];
  LODWORD(STACK[0x478]) = v3;
  v11 = ((v10 ^ 0xBE) - ((2 * (v10 ^ 0xBE)) & 0x22222222) + 300661777) ^ 0x11EBBC11 | ((((v8 | ((v8 < 0x4E) << 8))
                                                                                       + 1245624550) & 0xF00)
                                                                                     - ((2
                                                                                       * ((v8 | ((v8 < 0x4E) << 8))
                                                                                        + 1245624550)) & 0x200)
                                                                                     - 1426033250) ^ 0xAB00759E;
  v12 = v7[2];
  STACK[0x470] = a2;
  v13 = ((v12 - 26) - 756875221 - ((2 * (v12 + 230)) & 0x1BA) + 178) ^ 0xD2E3002B;
  v14 = v5 - 0x5C13350084191667;
  v15 = *(_DWORD *)(v5
                  - 0x5C13350084191667
                  + 4
                  * (((v11 - ((2 * v11) & 0x2A4226A0) - 719252656) ^ 0x37FE71EF2FFCE5A7)
                   + ((2 * ((v11 - ((2 * v11) & 0x2A4226A0) - 719252656) ^ 0xD5211360)) & 0x1F5BBED8ELL))
                  + 0x20063840148824E4);
  v16 = byte_1002685A0[(((7098 * v13) & 0x37E5B5AE) + ((3549 * v13) ^ 0x7BF2DAD7) - 2079513303) % 0x10180];
  v17 = ((v16 ^ 0xBE) - ((2 * (v16 ^ 0xBE)) & 0xFFFFFFEF) + 583021047) ^ 0x22C031F7 | ((((v12 | ((v12 < 0x4E) << 8))
                                                                                       + 1567795430) & 0x1F00)
                                                                                     - ((2
                                                                                       * ((v12 | ((v12 < 0x4E) << 8))
                                                                                        + 1567795430)) & 0x400)
                                                                                     + 1532114565) ^ 0x5B523685;
  v18 = v7[1];
  v19 = (v17 + 1173822019 - ((2 * v17) & 0xBEE34E6) + 48) ^ 0x45F71A43;
  v20 = ((v18 - 26) + 394755845 - ((2 * (v18 + 230)) & 0x1E6) + 238) ^ 0x17877F05;
  LODWORD(v19) = (*(_DWORD *)(v5
                            - 0x5C13350084191667
                            + 4 * ((v19 ^ 0x1F690FEDE8A7FCFFLL) + ((2 * v19) & 0x1D14FF9FELL))
                            - 0x7DA43FB7A29FF3FCLL) << 8) ^ 0xEADFEE00;
  v21 = ((7098 * v20) & 0x29FFCFCA) + ((3549 * v20) ^ 0xD4FFE7E5) + 721426459;
  v22 = v19 + 71762 - ((2 * v19) & 0x4000);
  v23 = *v7;
  v24 = byte_1002685A0[v21 % 0x10180] ^ 0xBE;
  v25 = ((v23 - 26) + 1503485076 - ((2 * (v23 + 230)) & 0x4A) + 2961) ^ 0x599D68D3;
  v26 = (v24 - 2 * (v24 & 0x1F) + 725347103) ^ 0x2B3BEB1F | ((((v18 | ((v18 < 0x4E) << 8)) + 6374) & 0xF00)
                                                           - ((2 * ((v18 | ((v18 < 0x4E) << 8)) + 6374)) & 0x1C00)
                                                           - 1213945341) ^ 0xB7A4AA03;
  v27 = byte_1002685A0[(((7098 * v25) & 0x177FFFE) + ((3549 * v25) ^ 0xFEBBFFFF) + 21233665) % 0x10180];
  v28 = (v27 ^ 0xBE) - ((2 * (v27 ^ 0xBE)) & 0x54);
  v29 = (v26 - ((2 * v26) & 0x396E1234) + 1555499290) ^ 0x5CB7092A;
  v30 = v23 >= (((_BYTE)v4 + 107) & 0x72 ^ 0x3Cu);
  v31 = (v29 ^ 0x3AAF99FF8C6DD6F6) + ((2 * v29) & 0x118DBADECLL);
  v32 = !v30;
  v33 = (*(_DWORD *)(v14 + 4 * v31 + 0x15419801CE48A428) << 16) ^ 0xDFEE0000;
  v34 = ((((v23 | (v32 << 8)) + 2278) & 0xFFFFFF00) - 908772199) ^ 0xC9D54C99;
  v35 = ((v33 - ((2 * v33) & 0x3E0000) + 10447837) & 0xFF0000 ^ 0x50A97259) - 1;
  v36 = (*(_DWORD *)(v14
                   + 4
                   * ((((((v28 + 528949290) | v34) ^ 0x1F87202A)
                      - 1053156973
                      - ((2 * (((v28 + 528949290) | v34) ^ 0x1F87202A)) & 0x2743346)
                      + 16) ^ 0x1FF77E7DBEE3E666)
                    + ((2
                      * (((((v28 + 528949290) | v34) ^ 0x1F87202A)
                        - 1053156973
                        - ((2 * (((v28 + 528949290) | v34) ^ 0x1F87202A)) & 0x2743346)
                        + 16) ^ 0xC13A1993)) & 0xFFB3FFEA))
                   - 0x7FDDF9F5FF67FFD4) << 24) ^ 0xEE000000;
  v37 = ((v35 & 0x1C6240 ^ 0x81180581) + (v35 ^ 0x3827E24C) - ((v35 ^ 0x3827E24C) & 0x401C0004)) ^ 0xA90DF7D1 | (v36 - ((2 * v36) & 0xEFFFFFFF) - 147404506) ^ 0xF736C926;
  v38 = ((v22 + 2015) & 0x6100) + ((v22 + 2015) & 0xFF00 ^ 0xF500) - (((v22 + 2015) & 0xFF00 ^ 0xF500) & 0x6100);
  v39 = ((v15 ^ 0x75) + (v15 & 0xB1 ^ 0xE17BDF80) - ((v15 ^ 0x75) & 0xB1)) ^ 0x291B9F3B;
  v40 = (((v37 - ((2 * v37) & 0x4F8EDE04) - 1480102142) ^ 0xA7C76F02 | (v38 + 720896) ^ 0xBB400)
       - 2
       * (((v37 - ((2 * v37) & 0x4F8EDE04) - 1480102142) ^ 0xA7C76F02 | (v38 + 720896) ^ 0xBB400) & 0x1F552CB2 ^ (v37 - ((2 * v37) & 0x4F8EDE04) - 1480102142) & 0x10)
       - 1621807966) ^ 0x9F552CA2 | (((2 * v39) & 0x80801AC0) - v39 + 171864735) ^ 0xC25E328E;
  LODWORD(STACK[0x460]) = v40 - ((2 * v40) & 0xD90740FA);
  v41 = v7[7];
  v42 = ((v41 - 26) - 2 * ((v41 + 230) & 0x27 ^ v41 & 1) - 1962994394) ^ 0x8AFF15D0;
  v43 = byte_1002685A0[(((7098 * v42) & 0x7FBCF786) + ((3549 * v42) ^ 0x7FDE7BC3) - 2145287107) % 0x10180] ^ 0xBE;
  v44 = v7[5];
  v45 = (v44 - 26) - ((2 * (v44 + 230)) & 0x62);
  v46 = (v43 - ((2 * v43) & 0x50) - 541513432) ^ 0xDFB92928 | ((((v41 | ((v41 < 0x4E) << 8)) + 2278) & 0xFFFFFF00)
                                                             + 616077408) ^ 0x24B8A860;
  v47 = byte_1002685A0[(((7098 * ((v45 + 353986865) ^ 0x151969C7)) & 0x1697F4E)
                      + ((3549 * ((v45 + 353986865) ^ 0x151969C7)) ^ 0xBDB4BFA7)
                      + 1112227929)
                     % 0x10180];
  v48 = ((v47 ^ 0xBE) - ((2 * (v47 ^ 0xBE)) & 0x94) + 1703118410) ^ 0x6583864A | ((((v44 | ((v44 < 0x4E) << 8)) + 2278) & 0xFFFFFF00)
                                                                                - 1543866357) ^ 0xA3FA880B;
  v49 = (v46 - 558442597 - ((2 * v46) & 0x3D6DAF56) + 16) ^ 0xDEB6D79B;
  v50 = (v48 - ((2 * v48) & 0x2DADBE8E) - 690561209) ^ 0xD6D6DF77;
  LODWORD(v49) = *(unsigned __int8 *)(v14
                                    + 4 * ((v49 ^ 0x2FF8BBDF9EFEB7F7) + ((2 * v49) & 0x13DFD6FEELL))
                                    + 0x401D108184052024);
  LODWORD(v50) = (*(_DWORD *)(v14
                            + 4 * ((v50 ^ 0x1FCFFE3BBFFBF7FELL) + ((2 * v50) & 0x17FF7EFFCLL))
                            - 0x7F3FF8EEFFEFDFF8) << 16) ^ 0xDFEE0000;
  LODWORD(v50) = (v50 - ((2 * v50) & 0xC40000) + 14857278) & 0xFF0000 ^ 0x4C0000;
  LODWORD(v50) = (v50 - ((2 * v50) & 0x1AC0000) + 1071027691) ^ 0xF67E1FEE;
  v51 = v7[4];
  v52 = ((v51 - 26) - ((2 * (v51 + 230)) & 0xFC) + 1108753534) ^ 0x42163C88;
  v53 = (v50 - ((2 * v50) & 0xFA5F0000) - 47209038) ^ 0x34292FB7;
  LODWORD(v50) = ((7098 * v52) & 0x477F8A) + ((3549 * v52) ^ 0xB5A3BFC5) + 1247559739;
  v54 = v7[6];
  v55 = ((v54 - 26) - ((2 * (v54 + 230)) & 0xA8) + 978683732) ^ 0x3A5587A2;
  LODWORD(v50) = byte_1002685A0[v50 % 0x10180] ^ 0xBE;
  LODWORD(v50) = (v50 - ((2 * v50) & 0x19A) - 337463603) ^ 0xEBE2B6CD;
  v56 = byte_1002685A0[(((7098 * v55) & 0x12DF47DA) + ((3549 * v55) ^ 0xF96FA3ED) + 110124051) % 0x10180] ^ 0xBE;
  v57 = (v56 - ((2 * v56) & 0x11111111) - 1326726776) ^ 0xB0EBC188 | ((((v54 | ((v54 < 0x4E) << 8)) + 2006165734) & 0x1F00)
                                                                    - ((2 * ((v54 | ((v54 < 0x4E) << 8)) + 2006165734)) & 0x400)
                                                                    - 1954092432) ^ 0x8B86FA70;
  LODWORD(v50) = (v50 | ((v51 | ((v51 < 0x4E) << 8)) + 2278) & 0xFFFFFF00) + 789127172 - ((2 * v50) & 0x68);
  v58 = (*(_DWORD *)(v14
                   + 4
                   * (((v57 - ((2 * v57) & 0x12688484) + 1228161602) ^ 0x3596FBB7A0DBBD8DLL)
                    + ((2 * ((v57 - ((2 * v57) & 0x12688484) + 1228161602) ^ 0x49344272)) & 0x1D3DFFFFELL))
                   + 0x29A4112058400004) << 8) ^ 0xEADFEE00;
  LODWORD(v50) = (*(_DWORD *)(v14
                            + 4
                            * (((v50 + 48) ^ 0x2EE16FF7987A5C41)
                             + ((2 * (((_DWORD)v50 + 48) ^ 0x2F092004u)) & 0x16EE6F88ALL))
                            + 0x447A402122320EECLL) << 24) ^ 0xEE000000;
  LODWORD(v50) = v53 | (v50 - ((2 * v50) & 0x87FFFFFF) + 1136217721) ^ 0x43B94E79;
  v59 = ((_WORD)v58 - ((2 * (_WORD)v58) & 0x5000) + 10379) & 0xFF00 ^ 0xA300;
  LODWORD(v50) = (v50 - ((2 * v50) & 0xF566E7DA) - 88902675) ^ 0xFAB373ED | (((2 * v59) | 0x1B8FD48A) - v59 + 1647842747) & 0x1FFFFFFC ^ 0x1DC76144;
  LODWORD(v49) = (v50 - ((2 * v50) & 0x90072DFA) - 939288835) ^ 0xC80396FD | ((v49 ^ 0x4053046C)
                                                                            - ((2 * (v49 ^ 0x4053046C)) & 0x8601F8)
                                                                            - 1346124804) ^ 0xEF90C77E;
  v60 = v49 - 326918019 + (~(2 * v49) | 0x26F8BF05);
  LODWORD(v49) = v7[11];
  LODWORD(v50) = ((v49 - 26) + 738930026 - 2 * ((v49 + 230) & 0x9D ^ v49 & 1) + 50) ^ 0x2C0B2D6A;
  v61 = v7[9];
  LODWORD(v50) = byte_1002685A0[(((7098 * (_DWORD)v50) & 0xDFCFEFFE) + ((3549 * (_DWORD)v50) ^ 0x6FE7F7FF) - 1877473279)
                              % 0x10180] ^ 0xBE;
  v62 = ((v61 - 26) - ((2 * (v61 + 230)) & 0xEC) - 1504481930) ^ 0xA6536D80;
  v63 = byte_1002685A0[(((7098 * v62) & 0x9BEEAC) + ((3549 * v62) ^ 0xFFCDF756) + 3279018) % 0x10180] ^ 0xBE;
  v64 = (v63 - ((2 * v63) & 0x58) + 525614636) ^ 0x1F543E2C | ((((v61 | ((v61 < 0x4E) << 8)) + 2278) & 0xFFFFFF00)
                                                             - ((2 * ((v61 | ((v61 < 0x4E) << 8)) + 2278)) & 0x600)
                                                             - 847165645) ^ 0xCD814733;
  v65 = (v64 - ((2 * v64) & 0x3E5B5504) - 550655358) ^ 0xDF2DAAB2;
  v66 = ((((v49 | ((v49 < 0x4E) << 8)) + 913774822) & 0xF00)
       - ((2 * ((v49 | ((v49 < 0x4E) << 8)) + 913774822)) & 0x200)
       - 407035453) ^ 0xE7BD21C3;
  LODWORD(v65) = (*(_DWORD *)(v14
                            + 4 * ((v65 ^ 0x37D9E7E397E6CF5DLL) + ((2 * v65) & 0x12FCD9EBALL))
                            + 0x20986071A064C28CLL) << 16) ^ 0xDFEE0000;
  v67 = ((((_DWORD)v50 - ((2 * (_DWORD)v50) & 0xDA) + 1086433901) ^ 0x40C1AA6D | v66)
       + 1869759900
       - ((2 * (((_DWORD)v50 - ((2 * (_DWORD)v50) & 0xDA) + 1086433901) ^ 0x40C1AA6D | v66)) & 0x5EE48B58)
       + 16) ^ 0x6F72459Cu;
  LODWORD(v65) = (v65 - ((2 * v65) & 0x480000) + 10801130) & 0xFF0000 ^ 0xDA0000;
  v68 = ((2 * v65) & 0xD60000) - v65 + 496252595;
  v69 = (v67 ^ 0x3FFC6FBC1DF3DFFFLL) + ((2 * (_DWORD)v67) & 0x3BE7BFFE);
  LODWORD(v67) = (v68 ^ 0xDD276BB | 0xE7986A5) - (v68 ^ 0xDD276BB | 0xF186795A) - 242845350;
  v70 = v7[10];
  v71 = ((v70 - 26) - 2 * (v70 & 1) - 821956863) ^ 0xCF01EFF7;
  v72 = v67 ^ 0x1E41C6AD;
  LODWORD(v67) = ((7098 * v71) & 0x5DFFFFE) + ((3549 * v71) ^ 0xBAEFFFFF) + 1158676481;
  v73 = v7[8];
  v74 = ((v73 - 26) - ((2 * (v73 + 230)) & 0x76) + 176959291) ^ 0xA8C2FCD;
  LODWORD(v67) = byte_1002685A0[v67 % 0x10180] ^ 0xBE;
  v75 = byte_1002685A0[(((7098 * v74) & 0x70FCD4C) + ((3549 * v74) ^ 0xB787E6A6) + 1215830362) % 0x10180];
  v76 = ((v75 ^ 0xBE) - ((2 * (v75 ^ 0xBE)) & 0x1CC) + 930614758) ^ 0x37780DE6;
  LODWORD(v67) = (v67 - ((2 * v67) & 0xDC) - 837810834) ^ 0xCE10056E | ((((v70 | ((v70 < 0x4E) << 8)) + 2278) & 0xFFFFFF00)
                                                                      + 1212774469) ^ 0x48498845;
  v77 = ((_DWORD)v67 - 1888159085 - ((2 * (_DWORD)v67) & 0x1EE9F546) + 16) ^ 0x8F74FA93;
  LODWORD(v77) = (*(_DWORD *)(v14
                            + 4 * ((v77 ^ 0x3B9F6F9D95BDE374) + ((2 * v77) & 0x12B7BC6E8))
                            + 0x11824189A9087230) << 8) ^ 0xEADFEE00;
  v78 = (*(_DWORD *)(v14
                   + 4
                   * ((((v76 | ((((v73 | ((v73 < 0x4E) << 8)) + 2278) & 0xFFFFFF00) + 1181871265) ^ 0x4671FCA1)
                      - ((2 * v76) & 0x18E)
                      + 90439879) ^ 0x3737DE7F7EDBD908)
                    + ((2
                      * (((v76 | ((((v73 | ((v73 < 0x4E) << 8)) + 2278) & 0xFFFFFF00) + 1181871265) ^ 0x4671FCA1)
                        - ((2 * v76) & 0x18E)
                        + 90439879) ^ 0x56400F7)) & 0xF77FB3FE))
                   + 0x2320860211009804) << 24) ^ 0xEE000000;
  v79 = v72 | (v78 - ((2 * v78) & 0x74000000) - 1162278674) ^ 0xBAB908EE;
  LODWORD(v77) = ((_WORD)v77 - ((2 * (_WORD)v77) & 0xCCCC) - 6485) & 0xFF00 ^ 0x5400;
  LODWORD(v77) = (v79 - ((2 * v79) & 0xE0A642AC) + 1884496214) ^ 0x70532156 | (v77 - ((2 * v77) & 0x18000) + 311448) & 0x7FF00 ^ 0x47200;
  LODWORD(v77) = *(unsigned __int8 *)(v14 + 4 * v69 + 0xE410F88308004) ^ 0xEE | (v77
                                                                                 - ((2 * v77) & 0xD60785FC)
                                                                                 - 352075010) ^ 0xEB03C2FE;
  v80 = v77 - ((2 * v77) & 0xD90740FA);
  v81 = *(_DWORD *)(v5 - 0x5C1335008418C4EBLL);
  LODWORD(v77) = ((~HIWORD(v81) & 8 | 0x4533F9E7) - (~HIWORD(v81) & 7 | 0xBACC0618) - 1161034216) ^ 0x553378E3;
  LODWORD(STACK[0x438]) = (((2 * v77) | 0xF03D4466) - v77 - 2015273523) ^ 0xBFE37392;
  v82 = *(_DWORD *)(v5 - 0x5C1335008418C393);
  LODWORD(STACK[0x428]) = (v82 & 0xF) + 157551262 + (~(2 * v82) & 0x1C);
  v83 = *(_DWORD *)(v5 - 0x5C1335008418C64FLL);
  LODWORD(STACK[0x2C0]) = ((v83 >> 8) & 0xF ^ 0x7E7D7FF5) + (~(v83 >> 7) & 0x14) - 1075053592;
  LODWORD(STACK[0x28C]) = (v81 & 0xF ^ 0x199FF5F9) + ((2 * (v81 & 7)) ^ 0xC) - 277643334;
  LODWORD(STACK[0x2B0]) = (v83 & 0xF ^ 0x5AF4AF59) + ((2 * (v83 & 7)) ^ 0xC) - 303038465;
  LODWORD(v77) = v7[15];
  v84 = v7[14];
  LODWORD(v69) = ((v77 - 26) - 1613588880 - ((2 * (v77 + 230)) & 0x10C) + 22) ^ 0x9FD29670;
  v85 = ((v84 - 26) - 2 * (((_BYTE)v84 - 26) & 7) - 641623289) ^ 0xD9C19BF1;
  v86 = byte_1002685A0[(((7098 * v85) & 0x1DFE7FE) + ((3549 * v85) ^ 0x36EFF3FF) - 921695231) % 0x10180] ^ 0xBE;
  LODWORD(v69) = byte_1002685A0[(((7098 * (_DWORD)v69) & 0x3F7CBE) + ((3549 * (_DWORD)v69) ^ 0x24DFBE5Fu) - 618643039)
                              % 0x10180] ^ 0xBE;
  LODWORD(v77) = (v69 - ((2 * v69) & 0xC8) + 517812580) ^ 0x1EDD3164 | ((((v77 | ((v77 < 0x4E) << 8))
                                                                        + 6374) & 0xF00)
                                                                      - ((2
                                                                        * ((v77 | ((v77 < 0x4E) << 8))
                                                                         + 6374)) & 0x400)
                                                                      + 1773699819) ^ 0x69B882EB;
  LODWORD(v69) = (v86 - ((2 * v86) & 0x192) + 745409993) ^ 0x2C6E0DC9 | ((((v84 | ((v84 < 0x4E) << 8)) + 2278) & 0xFFFFFF00)
                                                                       - ((2 * ((v84 | ((v84 < 0x4E) << 8)) + 2278)) & 0x200)
                                                                       + 1881502000) ^ 0x70257130;
  v87 = ((_DWORD)v77 + 2099022877 - ((2 * (_DWORD)v77) & 0x7A39185A) + 16) ^ 0x7D1C8C1Du;
  v88 = ((_DWORD)v69 - 119657336 - ((2 * (_DWORD)v69) & 0x71BC5970) + 48) ^ 0xF8DE2C88;
  v89 = *(_DWORD *)(v14 + 4 * ((v88 ^ 0xFBE9FFFF7AB6F6FLL) + ((2 * v88) & 0x1EF56DEDELL)) - 0x3EFA7FFFDEADBDBCLL);
  v90 = (v87 ^ 0x3FFFDF3FE6E61B3BLL) + ((2 * v87) & 0x1CDCC3676);
  v91 = ((v89 << 8) ^ 0xEADFEE00) + 121758 - ((2 * ((v89 << 8) ^ 0xEADFEE00)) & 0xC200);
  LODWORD(v87) = v7[12];
  v92 = ((v87 - 26) - ((2 * (v87 + 230)) & 0x4A) - 1912802779) ^ 0x8DFCF2D3;
  v93 = v7[13];
  v94 = ((v93 - 26) - 1463936951 - ((2 * (v93 + 230)) & 0x17E) + 118) ^ 0xA8BE1849;
  v95 = byte_1002685A0[(((7098 * v92) & 0x1DFF96) + ((3549 * v92) ^ 0xE6CEFFCB) + 422641717) % 0x10180] ^ 0xBE;
  v96 = byte_1002685A0[(((7098 * v94) & 0x1DFF9EE) + ((3549 * v94) ^ 0xBFEFFCF7) + 1074791177) % 0x10180] ^ 0xBE;
  v97 = (v96 - ((2 * v96) & 0x1A6) + 591636947) ^ 0x2343A9D3 | ((((v93 | ((v93 < 0x4E) << 8)) + 2278) & 0xFFFFFF00)
                                                              - ((2 * ((v93 | ((v93 < 0x4E) << 8)) + 2278)) & 0x200)
                                                              - 185116187) ^ 0xF4F769E5;
  v98 = (v95 - ((2 * v95) & 0xDE) + 1315271279) ^ 0x4E65726F | ((((v87 | ((v87 < 0x4E) << 8)) + 268966118) & 0xB00)
                                                              - ((2
                                                                * ((v87 | ((v87 < 0x4E) << 8)) + 268966118)) & 0x400)
                                                              - 1233198348) ^ 0xB67EE2F4;
  v99 = (*(_DWORD *)(v14
                   + 4
                   * (((v97 - ((2 * v97) & 0x61D83AB0) + 820780376) ^ 0x15A3FDED8752B097)
                    + ((2 * ((v97 - ((2 * v97) & 0x61D83AB0) + 820780376) ^ 0x30EC1D68)) & 0x16F7D5BFELL))
                   - 0x568FF7B6DEFAB7FCLL) << 16) ^ 0xDFEE0000;
  v100 = (v98 - ((2 * v98) & 0x7B563B9E) + 2108366287) ^ 0x7DAB1DFFu;
  v101 = (((v99 - ((2 * v99) & 0x6A0000) + 20297889) & 0x220000)
        + ((v99 - ((2 * v99) & 0x6A0000) + 20297889) & 0xFF0000 ^ 0x3B0000)
        - (((v99 - ((2 * v99) & 0x6A0000) + 20297889) & 0xFF0000 ^ 0x3B0000) & 0x22222222)
        + 1929442326) ^ 0x7824B41E;
  LODWORD(v100) = (*(_DWORD *)(v14
                             + 4 * ((v100 ^ 0x29DFB97639DEB9F2) + ((2 * (_DWORD)v100) & 0x73BD73E4))
                             + 0x58811A2718851838) << 24) ^ 0xEE000000;
  v102 = (((2 * v101) | 0xDF74A81A) - v101 + 273001459) ^ 0xE4B21405 | (v100 - ((2 * v100) & 0xAAAAAAAA) - 717717679) ^ 0xD5387F51;
  v103 = v102 - ((2 * v102) & 0x1B9D26D6) + 231641963;
  LODWORD(v100) = v103 ^ 0xDCE936B | ((((v91 + 1538) & 0x8D00 ^ 0x3D489E9) - 1) & 0xFF3FFF3F | (v91 + 1538) & 0x7200) ^ 0x3146828;
  STACK[0x468] = v14;
  LODWORD(v87) = *(unsigned __int8 *)(v14 + 4 * v90 + 0x830064679314) ^ 0xBFE7133A;
  v104 = (((2 * v87) & 0x31062530) - v87 + 662441319) ^ 0x989B1EB3 | (v100
                                                                    - 2 * (v100 & 0x51C07E5D ^ v103 & 4)
                                                                    + 1371569753) ^ 0x51C07E59;
  LODWORD(v90) = v104 - ((2 * v104) & 0xD90740FA);
  v105 = (((v82 >> 8) & 0xF ^ 5) - ((2 * ((v82 >> 8) & 0xF ^ 5)) & 0xFFFFFFF3) - 1383192055) ^ 0xADCC2B69;
  LODWORD(STACK[0x2A0]) = (HIBYTE(v81) & 0xF ^ 0xDFDEFAFE) + 2100023230 + ((v81 >> 23) & 6 ^ 2);
  LODWORD(STACK[0x440]) = ((v105 | 0x37EBBD89) - (v105 | 0xC8144276) - 938196362) ^ 0x60BEBFFE;
  LODWORD(STACK[0x2B8]) = ((HIWORD(v83) & 0xF ^ 0x3010801A)
                         + (HIWORD(v83) & 4 ^ 0xCB2A53E4)
                         - ((HIWORD(v83) & 0xF ^ 0x3010801A) & 0x10100014)) ^ 0xE32C05AB;
  LODWORD(STACK[0x274]) = ((HIWORD(v82) & 7 ^ 0x2EB6F7) - (HIWORD(v82) & 7) + (HIWORD(v82) & 0xF ^ 8)) & 0x2001FF ^ 0x375431B3;
  LODWORD(STACK[0x298]) = ((v81 >> 8) & 0xF ^ 0x7EEF5771) + (~(v81 >> 7) & 0x1C) - 1142947936;
  v253 = (unsigned __int8 *)(STACK[0x470] - 0x353232397341B08CLL);
  LODWORD(STACK[0x300]) = *(_DWORD *)(v5 - 0x5C13350084191483);
  LODWORD(STACK[0x3B4]) = *(_DWORD *)(v5 - 0x5C1335008419141FLL);
  LODWORD(STACK[0x424]) = *(_DWORD *)(v5 - 0x5C13350084191317);
  LODWORD(STACK[0x410]) = *(_DWORD *)(v5 - 0x5C133500841912C3);
  LODWORD(STACK[0x414]) = *(_DWORD *)(v5 - 0x5C1335008419152BLL);
  LODWORD(STACK[0x3B0]) = *(_DWORD *)(v5 - 0x5C13350084191613);
  LODWORD(STACK[0x3F8]) = *(_DWORD *)(v5 - 0x5C13350084191277);
  LODWORD(STACK[0x3C4]) = *(_DWORD *)(v5 - 0x5C133500841913D3);
  LODWORD(STACK[0x324]) = *(_DWORD *)(v5 - 0x5C1335008419161BLL);
  LODWORD(STACK[0x40C]) = *(_DWORD *)(v5 - 0x5C133500841913DFLL);
  LODWORD(STACK[0x3C8]) = *(_DWORD *)(v5 - 0x5C1335008418C563);
  LODWORD(STACK[0x400]) = *(_DWORD *)(v5 - 0x5C133500841915C7);
  LODWORD(STACK[0x2F8]) = *(_DWORD *)(v5 - 0x5C133500841913E7);
  LODWORD(STACK[0x31C]) = *(_DWORD *)(v5 - 0x5C133500841914F7);
  LODWORD(STACK[0x344]) = *(_DWORD *)(v5 - 0x5C1335008418C453);
  LODWORD(STACK[0x404]) = *(_DWORD *)(v5 - 0x5C1335008419163BLL);
  LODWORD(STACK[0x304]) = *(_DWORD *)(v5 - 0x5C1335008419154FLL);
  LODWORD(STACK[0x3BC]) = *(_DWORD *)(v5 - 0x5C1335008419133BLL);
  LODWORD(STACK[0x420]) = *(_DWORD *)(v5 - 0x5C133500841914AFLL);
  LODWORD(STACK[0x318]) = *(_DWORD *)(v5 - 0x5C1335008419151FLL);
  LODWORD(STACK[0x320]) = *(_DWORD *)(v5 - 0x5C1335008418C43FLL);
  LODWORD(STACK[0x310]) = *(_DWORD *)(v5 - 0x5C133500841915A7);
  LODWORD(STACK[0x408]) = *(_DWORD *)(v5 - 0x5C13350084191337);
  LODWORD(STACK[0x41C]) = *(_DWORD *)(v5 - 0x5C1335008419157BLL);
  LODWORD(STACK[0x3A8]) = *(_DWORD *)(v5 - 0x5C13350084191287);
  LODWORD(STACK[0x3A0]) = *(_DWORD *)(v5 - 0x5C13350084191643);
  LODWORD(STACK[0x3A4]) = *(_DWORD *)(v5 - 0x5C133500841914CBLL);
  LODWORD(STACK[0x340]) = *(_DWORD *)(v5 - 0x5C1335008419137FLL);
  LODWORD(STACK[0x3B8]) = *(_DWORD *)(v5 - 0x5C1335008418C3FFLL);
  LODWORD(STACK[0x3AC]) = *(_DWORD *)(v5 - 0x5C1335008418C2CBLL);
  LODWORD(STACK[0x3E8]) = *(_DWORD *)(v5 - 0x5C13350084191283);
  LODWORD(STACK[0x39C]) = *(_DWORD *)(v5 - 0x5C1335008419147FLL);
  LODWORD(STACK[0x314]) = *(_DWORD *)(v5 - 0x5C1335008418C45BLL);
  LODWORD(STACK[0x3D4]) = *(_DWORD *)(v5 - 0x5C1335008418C63FLL);
  LODWORD(STACK[0x3FC]) = *(_DWORD *)(v5 - 0x5C13350084191473);
  LODWORD(STACK[0x2F0]) = *(_DWORD *)(v5 - 0x5C1335008419131BLL);
  LODWORD(STACK[0x33C]) = *(_DWORD *)(v5 - 0x5C1335008418C2F3);
  LODWORD(STACK[0x3DC]) = *(_DWORD *)(v5 - 0x5C13350084191477);
  LODWORD(STACK[0x334]) = *(_DWORD *)(v5 - 0x5C133500841913C7);
  LODWORD(STACK[0x368]) = *(_DWORD *)(v5 - 0x5C1335008419156FLL);
  LODWORD(STACK[0x3D0]) = *(_DWORD *)(v5 - 0x5C1335008418C623);
  LODWORD(STACK[0x418]) = *(_DWORD *)(v5 - 0x5C1335008419150BLL);
  LODWORD(STACK[0x398]) = *(_DWORD *)(v5 - 0x5C133500841915DFLL);
  LODWORD(STACK[0x38C]) = *(_DWORD *)(v5 - 0x5C1335008419162FLL);
  LODWORD(STACK[0x2E8]) = *(_DWORD *)(v5 - 0x5C1335008418C30BLL);
  LODWORD(STACK[0x388]) = *(_DWORD *)(v5 - 0x5C1335008419160FLL);
  LODWORD(STACK[0x378]) = *(_DWORD *)(v5 - 0x5C1335008419137BLL);
  LODWORD(STACK[0x36C]) = *(_DWORD *)(v5 - 0x5C1335008419128BLL);
  LODWORD(STACK[0x3F0]) = *(_DWORD *)(v5 - 0x5C1335008419129BLL);
  LODWORD(STACK[0x3EC]) = *(_DWORD *)(v5 - 0x5C13350084191423);
  LODWORD(STACK[0x3D8]) = *(_DWORD *)(v5 - 0x5C133500841913BBLL);
  LODWORD(STACK[0x390]) = *(_DWORD *)(v5 - 0x5C13350084191527);
  LODWORD(STACK[0x394]) = *(_DWORD *)(v5 - 0x5C133500841913F3);
  LODWORD(STACK[0x3CC]) = *(_DWORD *)(v5 - 0x5C1335008418C4CFLL);
  LODWORD(STACK[0x370]) = *(_DWORD *)(v5 - 0x5C1335008419144FLL);
  LODWORD(STACK[0x330]) = *(_DWORD *)(v5 - 0x5C1335008418C4B7);
  LODWORD(STACK[0x374]) = *(_DWORD *)(v5 - 0x5C1335008418C53FLL);
  LODWORD(STACK[0x37C]) = *(_DWORD *)(v5 - 0x5C1335008419131FLL);
  LODWORD(STACK[0x338]) = *(_DWORD *)(v5 - 0x5C133500841914F3);
  LODWORD(STACK[0x3C0]) = *(_DWORD *)(v5 - 0x5C1335008418C2FFLL);
  LODWORD(STACK[0x380]) = *(_DWORD *)(v5 - 0x5C1335008418C52FLL);
  LODWORD(STACK[0x30C]) = *(_DWORD *)(v5 - 0x5C1335008418C407);
  LODWORD(STACK[0x328]) = *(_DWORD *)(v5 - 0x5C133500841912EBLL);
  LODWORD(STACK[0x384]) = *(_DWORD *)(v5 - 0x5C1335008418C357);
  LODWORD(STACK[0x3F4]) = *(_DWORD *)(v5 - 0x5C13350084191593);
  LODWORD(STACK[0x354]) = *(_DWORD *)(v5 - 0x5C133500841914FBLL);
  LODWORD(STACK[0x2E4]) = *(_DWORD *)(v5 - 0x5C1335008418C327);
  LODWORD(STACK[0x364]) = *(_DWORD *)(v5 - 0x5C1335008418C433);
  LODWORD(STACK[0x3E0]) = *(_DWORD *)(v5 - 0x5C133500841913AFLL);
  LODWORD(STACK[0x3E4]) = *(_DWORD *)(v5 - 0x5C1335008419149BLL);
  LODWORD(STACK[0x34C]) = *(_DWORD *)(v5 - 0x5C1335008418C36FLL);
  LODWORD(STACK[0x308]) = *(_DWORD *)(v5 - 0x5C1335008418C557);
  LODWORD(STACK[0x360]) = *(_DWORD *)(v5 - 0x5C1335008419139FLL);
  LODWORD(STACK[0x32C]) = *(_DWORD *)(v5 - 0x5C1335008418C28FLL);
  LODWORD(STACK[0x350]) = *(_DWORD *)(v5 - 0x5C1335008418C273);
  LODWORD(STACK[0x358]) = *(_DWORD *)(v5 - 0x5C1335008418C35FLL);
  LODWORD(STACK[0x35C]) = *(_DWORD *)(v5 - 0x5C1335008418C413);
  LODWORD(STACK[0x2DC]) = *(_DWORD *)(v5 - 0x5C1335008418C4A3);
  LODWORD(STACK[0x2E0]) = *(_DWORD *)(v5 - 0x5C1335008418C42BLL);
  LODWORD(STACK[0x348]) = *(_DWORD *)(v5 - 0x5C1335008418C5FBLL);
  LODWORD(STACK[0x26C]) = LODWORD(STACK[0x478]) - 1411380449;
  LODWORD(STACK[0x2CC]) = LODWORD(STACK[0x460]) - 326918019;
  LODWORD(STACK[0x2D0]) = v60 + 1;
  LODWORD(STACK[0x2D4]) = v80 - 326918019;
  LODWORD(STACK[0x2A8]) = HIBYTE(v82) & 0xF ^ 0x800D55D3;
  LODWORD(STACK[0x2D8]) = v90 - 326918019;
  v106 = v6 ^ 0xA4;
  STACK[0x250] = v106;
  v107 = v253[v106 - 1238];
  v108 = v253[1];
  LODWORD(v106) = v108
                + 119453579
                + ((v108 < 0x39) << 8)
                - 2 * ((v108 + 119453579 + ((v108 < 0x39) << 8) + 954288496) & 0x265D53DF ^ (v108 + 119453579) & 0xC)
                + 524197187;
  v109 = (v106 & 0xFFFFF7FF ^ 0x265D5BD3)
       - 1245471550
       + ((2 * (v106 & 0xFFFFF7FF ^ 0x265D5BD3)) & 0x6B872982 ^ 0xFFFFEFFF);
  v110 = v106;
  LODWORD(v90) = v253[2];
  LODWORD(v106) = (((2 * (v110 ^ 0x6E)) & 0xA2) - (v110 ^ 0x6E) - 1457116242) ^ 0x9DB00F96;
  v111 = (((v90 | ((v90 < 0x39) << 8)) + 15816955) & 0xF00)
       + 669715105
       - ((2 * ((v90 | ((v90 < 0x39) << 8)) + 15816955)) & 0x1C00);
  v112 = (v90 - 5) + 1017188110 - ((2 * (v90 + 251)) & 0x1F0);
  v113 = v253[5];
  v114 = v253[4];
  v115 = (((7098 * (v110 ^ 0x25)) & 0x165A56) + ((3549 * (v110 ^ 0x25)) ^ 0x137B2D2Bu) - 326839595) % 0x10180;
  v116 = (v114 - 5) + 704716601 - ((2 * (v114 + 251)) & 0x19E);
  v117 = ((v107 - 5) - 1023376596 - ((2 * (v107 + 251)) & 0x1B4) + 174) ^ 0xC300832C;
  STACK[0x478] = 1882731045;
  LODWORD(v49) = ((v113 - 5) - 1098487213 - ((2 * (v113 + 251)) & 0x14A) + 82) ^ 0xBE866A53;
  LODWORD(STACK[0x450]) = (((7098 * (_DWORD)v49) & 0x67BEF8) + ((3549 * (_DWORD)v49) ^ 0x59F3DF7Cu) - 1509154684)
                        % 0x10180;
  LODWORD(v49) = v253[6];
  v118 = ((v49 - 5) - 1209224191 - 2 * (((_BYTE)v49 - 5) & 1)) ^ 0xB7ECB4F7;
  v119 = byte_1002685A0[(((7098 * ((v112 + 234) ^ 0x3CA10F0E)) & 0x2F7DCCFA)
                       + ((3549 * ((v112 + 234) ^ 0x3CA10F0E)) ^ 0x77BEE67Du)
                       - 2008999549)
                      % 0x10180] ^ 0xBE;
  v120 = ((byte_1002685A0[v115] ^ 0xBE) - ((2 * (byte_1002685A0[v115] ^ 0xBE)) & 0x5A) + 821388077) ^ v109 ^ (((2 * (_DWORD)v106) | 0x4599FA5E) - (_DWORD)v106 + 1563624145) ^ 0x136C2676u;
  STACK[0x430] = (v120 ^ 0x1F7D1FF0F7FBDF7BLL) + ((2 * v120) & 0x1EFF7BEF6);
  LODWORD(STACK[0x290]) = v113 | ((v113 < 0x39) << 8);
  v121 = byte_1002685A0[(((7098 * v117) & 0x1DE353F6) + ((3549 * v117) ^ 0xFEF1A9FB) + 17716741) % 0x10180];
  LODWORD(STACK[0x458]) = (((7098 * v118) & 0xE777BA) + ((3549 * v118) ^ 0xFDF3BBDD) + 34358307) % 0x10180;
  LODWORD(v120) = ((v121 ^ 0xBE) - 335073232 - ((2 * (v121 ^ 0xBE)) & 0x60)) ^ 0xEC073030 | ((((v107 | ((v107 < 0x39) << 8))
                                                                                             + 6395) & 0xF00)
                                                                                           - 1417057718
                                                                                           - ((2
                                                                                             * ((v107 | ((v107 < 0x39) << 8))
                                                                                              + 6395)) & 0x1C00)) ^ 0xAB896A4A;
  v122 = v120 + 1680136336 - ((2 * v120) & 0x4849B140);
  LODWORD(v120) = v253[8];
  v123 = v253[3];
  LODWORD(v106) = v253[7];
  v124 = (((7098 * ((v116 + 150) ^ 0x2A011F39)) & 0x1BFBEF5E)
        + ((3549 * ((v116 + 150) ^ 0x2A011F39)) ^ 0xADFDF7AF)
        + 1375864913)
       % 0x10180;
  v125 = (v106 - 5) - 1391910649 - ((2 * (v106 + 251)) & 0x1E2);
  v126 = v123 | ((v123 < 0x39) << 8);
  LODWORD(v87) = ((v123 - 5) - 395505598 - ((2 * (v123 + 251)) & 0x168) + 114) ^ 0xE86D1042;
  v127 = byte_1002685A0[v124] ^ 0xBE;
  v128 = (v127 - 1461704176 - ((2 * v127) & 0x20)) ^ 0xA8E02A10 | ((((v114 | ((v114 < 0x39) << 8)) + 6395) & 0xF00)
                                                                 - 1944193084
                                                                 - ((2 * ((v114 | ((v114 < 0x39) << 8)) + 6395)) & 0x600)) ^ 0x8C1DF7C4;
  v129 = (((7098 * ((v125 + 234) ^ 0xAD092107)) & 0x775BFF6)
        + ((3549 * ((v125 + 234) ^ 0xAD092107)) ^ 0xFFBADFFB)
        + 4530181)
       % 0x10180;
  LODWORD(STACK[0x460]) = (((v120 | ((v120 < 0x39) << 8)) + 108329211) & 0xF00)
                        + 853042648
                        - ((2 * ((v120 | ((v120 < 0x39) << 8)) + 108329211)) & 0x200);
  v130 = (((v119 - 1763268750 - ((2 * v119) & 0xE4)) ^ 0x96E6A772 | v111 ^ 0x27EB0AA1)
        - 630326961
        - ((2 * ((v119 - 1763268750 - ((2 * v119) & 0xE4)) ^ 0x96E6A772 | v111 ^ 0x27EB0AA1)) & 0x34DBF29E)) ^ 0xDA6DF97F;
  v131 = v253[STACK[0x478] - 1882731036];
  v132 = (v130 ^ 0x2BED8FFF733BDF7ALL) + ((2 * (_DWORD)v130) & 0xE677BEF4);
  LODWORD(STACK[0x42C]) = v131 < 0x39;
  v133 = ((v120 - 5) + 1155500145 - ((2 * (v120 + 251)) & 0x10E) + 22) ^ 0x44DF8871;
  LODWORD(v120) = byte_1002685A0[(((7098 * (_DWORD)v87) & 0x1FFF6FE)
                                + 16777142
                                + ((3549 * (_DWORD)v87) ^ 0xFEFFFB7F)
                                + 1227)
                               % 0x10180] ^ 0xBE;
  LODWORD(v120) = (v120 + 1337982787 - ((2 * v120) & 0x86)) ^ 0x4FBFFF43 | (((v126 + 2299) & 0xFFFFFF00) - 530039611) ^ 0xE0684CC5;
  v134 = v253[10];
  v135 = v253[13];
  LODWORD(v130) = v253[12];
  LODWORD(STACK[0x470]) = v130 < 0x39;
  STACK[0x478] = ((v128 + 367054279 - ((2 * v128) & 0x2BC19B8E)) ^ 0xFDFB35E20DFE71DLL)
               + ((2 * ((v128 + 367054279 - ((2 * v128) & 0x2BC19B8E)) ^ 0x15E0CDF7)) & 0x6A7E55D4);
  v136 = (v131 - 5) - 1244446658 - ((2 * (v131 + 251)) & 0x7C);
  v137 = byte_1002685A0[v129] ^ 0xBE;
  LODWORD(v90) = (v137 + 778777779 - ((2 * v137) & 0x166)) ^ 0x2E6B34B3 | ((((v106 | ((v106 < 0x39) << 8))
                                                                           + 2299) & 0xFFFFFF00)
                                                                         - 1539793042
                                                                         - 2
                                                                         * (((v106 | ((v106 < 0x39) << 8))
                                                                           + 2299) & 0xFFFFFF00)) ^ 0xA4389F6E;
  LODWORD(STACK[0x448]) = v90 - 131109409 - ((2 * v90) & 0x705EDBDE);
  v138 = (((7098 * v133) & 0x1BAD7EE) - 1608346615 + ((3549 * v133) ^ 0x5FDD6BF7u)) % 0x10180;
  v139 = v253[11];
  v140 = v253[14];
  LODWORD(STACK[0x268]) = 188346958;
  STACK[0x280] = 340422029;
  v141 = ((v139 - 5) - 1271137983 - ((2 * (v139 + 251)) & 0x82)) ^ 0xB43BF9B7;
  v142 = byte_1002685A0[LODWORD(STACK[0x450])] ^ 0xBE;
  v143 = (v142 + 22237538 - ((2 * v142) & 0xC4)) ^ 0x1535162 | (((LODWORD(STACK[0x290]) + 2299) & 0xFFFFFF00)
                                                              + 1541667942) ^ 0x5BE40C66;
  v144 = (((v134 | ((v134 < 0x39) << 8)) + 1362131195) & 0xF00)
       + 1802074711
       - ((2 * ((v134 | ((v134 < 0x39) << 8)) + 1362131195)) & 0x1C00);
  v145 = STACK[0x468];
  v146 = *(_DWORD *)(STACK[0x468]
                   + 4
                   * (((v122 + 16) ^ 0x3EFEFFFF5FCB773FLL)
                    + ((2 * ((v122 + 16) ^ 0x6424D890)) & 0x77DF5F5E))
                   + 0x404000310414144);
  LODWORD(STACK[0x450]) = (((v135 | ((v135 < 0x39) << 8)) + 333420795) & 0xF00)
                        + 782916344
                        - ((2 * ((v135 | ((v135 < 0x39) << 8)) + 333420795)) & 0x1C00);
  v147 = (*(_DWORD *)(v145 + 4 * STACK[0x430] - 0x7DF47FC3DFEF7DECLL) << 16) ^ 0xDFEE0000;
  LODWORD(v87) = (((v147 - ((2 * v147) & 0xA60000) + 30643629) & 0xFF0000 ^ 0xC10000)
                + ((v147 - ((2 * v147) & 0xA60000) + 30643629) & 0x820000 ^ 0xF502BA55)
                - (((v147 - ((2 * v147) & 0xA60000) + 30643629) & 0xFF0000 ^ 0xC10000) & 0x820000)) ^ 0xF590BA55 | (((v146 << 24) ^ 0xEE000000) + 231328272 - ((2 * ((v146 << 24) ^ 0xEE000000)) & 0x1A000000)) ^ 0xDC9CA10;
  v148 = (*(_DWORD *)(v145 + 4 * v132 + 0x5049C00233108218) << 8) ^ 0xEADFEE00;
  v149 = ((((_WORD)v148 - ((2 * (_WORD)v148) & 0x4A00) + 9716) & 0xFF00 ^ 0xA69645C1) - 1) ^ 0xEED46045;
  LODWORD(v87) = (((2 * v149) | 0x4EA4FCDA) - v149 - 659717741) ^ 0x6F107EE8 | (v87
                                                                              + 1418720710
                                                                              - ((2 * v87) & 0xA91FEB8C)) ^ 0x548FF5C6;
  LODWORD(v100) = byte_1002685A0[LODWORD(STACK[0x458])] ^ 0xBE;
  LODWORD(v100) = (v100 - 1138792209 - ((2 * v100) & 0xFFFFFFDF)) ^ 0xBC1F68EF;
  LODWORD(v132) = (v100 | ((v49 | ((v49 < 0x39) << 8)) + 2299) & 0xFFFFFF00)
                - 709521832
                - 2 * ((v100 & 0xE6F | ((v49 | ((v49 < 0x39) << 8)) + 2299) & 0xE00) ^ v100 & 7);
  v150 = ((v143 - 1863372218 - ((2 * v143) & 0x21DE648C)) ^ 0x3FFFA972EF5B1FC9)
       + ((2 * ((v143 - 1863372218 - ((2 * v143) & 0x21DE648C)) ^ 0x90EF3276)) & 0xFF685B7E);
  LODWORD(v100) = *(unsigned __int8 *)(v145
                                     + 4
                                     * ((((_DWORD)v120 + 393241925 - ((2 * (_DWORD)v120) & 0x2EE0CAEAu) + 48) ^ 0x3FF7BFFFA9A19B1BLL)
                                      + ((2
                                        * (((_DWORD)v120 + 393241925 - ((2 * (_DWORD)v120) & 0x2EE0CAEA) + 48) ^ 0x17706545u)) & 0x17DA3FCBCLL))
                                     + 0x21000104B80688) ^ 0x66;
  LODWORD(v100) = (v87 - 2087847764 - ((2 * v87) & 0x71BF158)) ^ 0x838DF8AC | (v100 - ((2 * v100) & 0xFFFFFF83) + 1217) ^ 0x449;
  v151 = v100 - 326918019 - ((2 * v100) & 0xD90740FA);
  LODWORD(v100) = ((v134 - 5) + 57617476 - ((2 * (v134 + 251)) & 0x88888888)) ^ 0x36F2CB2;
  v152 = v130;
  v153 = ((v130 - 5) - 243422410 - ((2 * (v130 + 251)) & 0x180) + 138) ^ 0xF17DAB36;
  LODWORD(STACK[0x458]) = (((v140 | ((v140 < 0x39) << 8)) + 149137659) & 0x1F00)
                        - 897685154
                        - ((2 * ((v140 | ((v140 < 0x39) << 8)) + 149137659)) & 0x1200);
  v154 = ((v131 | (LODWORD(STACK[0x42C]) << 8)) + 2299) & 0xFFFFFF00;
  v155 = v154 + 269683661 - 2 * v154;
  v156 = byte_1002685A0[(((7098 * (_DWORD)v100) & 0xEBDDF6) + ((3549 * (_DWORD)v100) ^ 0xFFF5EEFB) + 659717) % 0x10180] ^ 0xBE;
  v157 = v156 + 481002884 - ((2 * v156) & 0x108);
  v158 = (v140 - 5) + 590129428 - ((2 * (v140 + 251)) & 0x28);
  LODWORD(v130) = byte_1002685A0[(((7098 * v141) & 0x1DE73D8) + ((3549 * v141) ^ 0x31EF39EC) - 837761516) % 0x10180] ^ 0xBE;
  LODWORD(v130) = (v130 + 1993125071 - ((2 * v130) & 0xFFFFFF9F)) ^ 0x76CCACCF;
  LODWORD(v130) = (v130 | ((v139 | ((v139 < 0x39) << 8)) + 2299) & 0xFFFFFF00)
                - 1484596410
                - 2 * ((v130 & 0xB7F | ((v139 | ((v139 < 0x39) << 8)) + 2299) & 0xB00) ^ v130 & 9);
  v159 = byte_1002685A0[v138] ^ 0xBE;
  LODWORD(v49) = (v159 - 1366584078 - ((2 * v159) & 0x1E4)) ^ 0xAE8B94F2 | LODWORD(STACK[0x460]) ^ 0x32D865D8;
  v160 = v49 - 945961201 + (~(2 * v49) | 0xF0C471E3);
  v161 = v253[STACK[0x280] - 340422014];
  LODWORD(v49) = v161 | ((v161 < 0x39) << 8);
  v162 = ((v161 - 5) - 1897348778 - ((2 * (v161 + 251)) & 0xAC)) ^ 0x8EE8C1A0;
  v163 = ((v135 - 5) + 2022555929 - ((2 * (v135 + 251)) & 0x32)) ^ 0x788DC1EF;
  LODWORD(v87) = byte_1002685A0[(((7098 * (v136 ^ 0xB5D340C8)) & 0x8DCF8FA)
                               + ((3549 * (v136 ^ 0xB5D340C8)) ^ 0xF46E7C7D)
                               + 194085763)
                              % 0x10180] ^ 0xBE;
  LODWORD(v87) = (v87 - 1809647157 - ((2 * v87) & 0x196)) ^ 0x9422F9CB | v155 ^ 0x10130BCD;
  v164 = v87 + 2125192985 - ((2 * v87) & 0x7D57BE32);
  LODWORD(v87) = v152 | (LODWORD(STACK[0x470]) << 8);
  v165 = (((v157 ^ 0x1CAB8584 | v144 ^ 0x6B697A57)
         - 185337263
         + (~(2 * (v157 ^ 0x1CAB8584 | v144 ^ 0x6B697A57)) | 0x96180B5F)) ^ 0xBBDBBAB494C4599)
       + ((2
         * (((v157 ^ 0x1CAB8584 | v144 ^ 0x6B697A57)
           - 185337263
           + (~(2 * (v157 ^ 0x1CAB8584 | v144 ^ 0x6B697A57)) | 0x96180B5F)) ^ 0xF4F3FA60)) & 0x17B7F7FF2);
  v166 = byte_1002685A0[(((7098 * v163) & 0xFDCAFCA) + ((3549 * v163) ^ 0xFFEE57E5) + 1157147) % 0x10180] ^ 0xBE;
  v167 = (v166 - 1464422810 - ((2 * v166) & 0xCCCCCCCC)) ^ 0xA8B6AE66 | LODWORD(STACK[0x450]) ^ 0x2EAA5AF8;
  LODWORD(v120) = v167 - 284936316 - ((2 * v167) & 0x5E086F68);
  v168 = (*(_DWORD *)(v145 + 4 * STACK[0x478] - 0x3F7ECD78D4FCABA8) << 24) ^ 0xEE000000;
  v169 = (*(_DWORD *)(v145 + 4 * v150 + 0x15A36012F4904) << 16) ^ 0xDFEE0000;
  v170 = (v169 - ((2 * v169) & 0x940000) + 13298539) & 0xFF0000 ^ 0x4B0000;
  v171 = ((((v170 | 0x9B60DC3D) - (v170 | 0x649F23C2) + 1688150978) & 0xD53CC3D ^ 0x24120410)
        + (((v170 | 0x9B60DC3D) - (v170 | 0x649F23C2) + 1688150978) & 0x92AC1000 ^ 0x90200083)
        - 1) ^ 0x2FD3D8AF | (v168 + 1915278087 - ((2 * v168) & 0xE4000000)) ^ 0x7228D307;
  v172 = (*(_DWORD *)(v145
                    + 4
                    * (((v132 + 16) ^ 0x315D76F73A0AC0E2)
                     + ((2 * (((_DWORD)v132 + 16) ^ 0xD5B58E58)) & 0x1DF7E9D74))
                    + 0x3A8A24204102C518) << 8) ^ 0xEADFEE00;
  v173 = ((_WORD)v172 - ((2 * (_WORD)v172) & 0xBE00) + 24339) & 0xFF00 ^ 0xD100;
  v174 = (v171 + 931485329 - ((2 * v171) & 0x6F0AAD22)) ^ 0x37855691 | (((((2 * v173) & 0xF800) - v173 - 1232895130) ^ 0x2F676E4B)
                                                                      - 1) ^ 0x99E4632C;
  v175 = (*(_DWORD *)(v145
                    + 4
                    * (((LODWORD(STACK[0x448]) + 16) ^ 0x1A8F2EBC2ED29330)
                     + ((2 * ((LODWORD(STACK[0x448]) + 16) ^ 0xF82F6DDF)) & 0x1ADFBFDDELL))
                    - 0x6A3CBAF35BF7FBBCLL) & 0x30 ^ 0x3E078E30)
       - (*(_DWORD *)(v145
                    + 4
                    * (((LODWORD(STACK[0x448]) + 16) ^ 0x1A8F2EBC2ED29330)
                     + ((2 * ((LODWORD(STACK[0x448]) + 16) ^ 0xF82F6DDF)) & 0x1ADFBFDDELL))
                    - 0x6A3CBAF35BF7FBBCLL) & 0x30)
       + (*(_DWORD *)(v145
                                     + 4
                                     * (((LODWORD(STACK[0x448]) + 16) ^ 0x1A8F2EBC2ED29330)
                                      + ((2 * ((LODWORD(STACK[0x448]) + 16) ^ 0xF82F6DDF)) & 0x1ADFBFDDELL))
                                     - 0x6A3CBAF35BF7FBBCLL) ^ 0xC5);
  v176 = (v174 + 431125488 - ((2 * v174) & 0x3364E7E0)) ^ 0x19B273F0 | ((v175 & 0xC0402F9 ^ 0x401810C0)
                                                                      + (v175 ^ 0xC04CF3B)
                                                                      - ((v175 ^ 0xC04CF3B) & 0x220102F9)) ^ 0x5C1E53D9;
  v177 = v176 - 326918019 - ((2 * v176) & 0xD90740FA);
  v178 = *(unsigned __int8 *)(v145
                            + 4
                            * (((v130 + 48) ^ 0x177F3F7E516A21B9)
                             + ((2 * (((_DWORD)v130 + 48) ^ 0xA782DB46)) & 0x1EDD1F5FELL))
                            - 0x5DFCFDFBDBA3EBFCLL) ^ 0x90;
  v179 = byte_1002685A0[(((7098 * v153) & 0x1FFE8D6) + ((3549 * v153) ^ 0x7AFFF46Bu) - 2063594603) % 0x10180] ^ 0xBE;
  LODWORD(v87) = (v179 + 992776773 - ((2 * v179) & 0x8A)) ^ 0x3B2C9245 | (((v87 + 2299) & 0xFFFFFF00) - 1038734085) ^ 0xC2163CFB;
  v180 = ((_DWORD)v87 + 1773796566 - ((2 * (_DWORD)v87) & 0x5373F9CC) + 16) ^ 0x69B9FCD6u;
  v181 = (*(_DWORD *)(v145
                    + 4 * ((v160 ^ 0x1FF5D33B5846B1E5) + ((2 * (v160 ^ 0xC79DC73E)) & 0x13FB6EDB6))
                    - 0x7FD74CEE7F6DDB6CLL) << 24) ^ 0xEE000000;
  v182 = (*(_DWORD *)(v145
                    + 4 * ((v164 ^ 0x1CBD39FEA55820D7) + ((2 * (v164 ^ 0x7EABDF29)) & 0x1B7E7FFFCLL))
                    - 0x72F4E7FB6FCFFFF8) << 16) ^ 0xDFEE0000;
  v183 = (v182 - ((2 * v182) & 0xD40000) + 6956709) & 0xFF0000 ^ 0x32614007;
  v184 = (((2 * v183) | 0x3DECC65E) - v183 - 519463727) ^ 0x2CFD2328 | (v181 + 114420197 - ((2 * v181) & 0xC000000)) ^ 0x6D1E9E5;
  LODWORD(v165) = (*(_DWORD *)(v145 + 4 * v165 - 0x2EF6EEAEF6FEFFE4) << 8) ^ 0xEADFEE00;
  LODWORD(v165) = ((_WORD)v165 - ((2 * (_WORD)v165) & 0x7000) - 18283) & 0xFF00 ^ 0xA48E867B;
  LODWORD(v165) = (v184 - 418375693 - ((2 * v184) & 0xCE202FE6)) ^ 0xE71017F3 | (v165
                                                                               - ((2 * v165) & 0x41045EB2)
                                                                               + 985870173) ^ 0x9E4D1126;
  LODWORD(v165) = (v165 + 854460759 - ((2 * v165) & 0x65DC12AE)) ^ 0x32EE0957 | (((2 * v178) | 0x7F01466)
                                                                               - v178
                                                                               + 2013787597) & 0x7FFFFFF ^ 0x7F80A4D;
  v185 = v165 - 326918019 - ((2 * v165) & 0xD90740FA);
  LODWORD(v165) = byte_1002685A0[(((7098 * (v158 ^ 0x232CA9E2)) & 0x1DDED3E)
                                + ((3549 * (v158 ^ 0x232CA9E2)) ^ 0x75EEF69Fu)
                                - 1978594975)
                               % 0x10180] ^ 0xBE;
  LODWORD(v165) = (v165 - 1111335797 - ((2 * v165) & 0x116)) ^ 0xBDC25C8B | LODWORD(STACK[0x458]) ^ 0xCA7E695E;
  v186 = byte_1002685A0[(((7098 * v162) & 0x3ED7E9E) + ((3549 * v162) ^ 0x59F6BF4F) - 1509343055) % 0x10180] ^ 0xBE;
  v187 = (v186 - 1554327412 - ((2 * v186) & 0x118)) ^ 0xA35AD88C | (((v49 + 2299) & 0xFFFFFF00) - 1364874052) ^ 0xAEA5BCBC;
  v188 = (v187 - 745790884 - ((2 * v187) & 0x271844D8) + 16) ^ 0xD38C225C;
  v189 = ((_DWORD)v165 - 1249262438 - ((2 * (_DWORD)v165) & 0x6B138934)) ^ 0xB589C4AA;
  LODWORD(v49) = (*(_DWORD *)(v145
                            + 4 * ((v180 ^ 0x3BB8BBC97BEE7F3ALL) + ((2 * (_DWORD)v180) & 0xF7DCFE74))
                            + 0x111D10DA10460318) << 24) ^ 0xEE000000;
  LODWORD(v120) = (*(_DWORD *)(v145
                             + 4
                             * (((v120 + 48) ^ 0x1EDDCEFF00D3CC7BLL)
                              + ((2 * (((_DWORD)v120 + 48) ^ 0xEF043784)) & 0x1DFAFF7FELL))
                             - 0x7B773BFFBF5FEFFCLL) << 16) ^ 0xDFEE0000;
  LODWORD(v120) = ((v120 + 31449668 - ((2 * v120) & 0xBE0000)) & 0xFF0000 ^ 0x840000)
                + ((v120 + 31449668 - ((2 * v120) & 0xBE0000)) & 0x740000 ^ 0xBB704C86)
                - (((v120 + 31449668 - ((2 * v120) & 0xBE0000)) & 0xFF0000 ^ 0x840000) & 0x740000);
  LODWORD(v120) = ((v120 & 0x988A4C00 ^ 0x802138) + (v120 ^ 0x9E2E4C85) - ((v120 ^ 0x9E2E4C85) & 0x88A0002)) ^ 0xBD8B6D39 | (v49 - 1610930364 - ((2 * v49) & 0x3E000000)) ^ 0x9FFB2744;
  LODWORD(v189) = (*(_DWORD *)(v145
                             + 4 * ((v189 ^ 0x1F5FA7CDBFE9DB37) + ((2 * v189) & 0x17FD3B66ELL))
                             - 0x7D7E9F36FFA76CDCLL) << 8) ^ 0xEADFEE00;
  LODWORD(v120) = (v120 - 347706362 - ((2 * v120) & 0xD68CD80C)) ^ 0xEB466C06;
  LODWORD(v189) = v120 | ((_WORD)v189 - ((2 * (_WORD)v189) & 0x7800) - 17166) & 0xFF00 ^ 0xBC00;
  LODWORD(v120) = v189 - 1336332555 - 2 * (v189 & 0x30592EFF ^ v120 & 0xA);
  LODWORD(v189) = *(_DWORD *)(v145
                            + 4 * ((v188 ^ 0x1F56CAEBF5FD5B6FLL) + ((2 * v188) & 0x1EBFAB6DELL))
                            - 0x7D5B2BAFD7F56DBCLL);
  LODWORD(v189) = ((v189 & 0x42 ^ 0xAD663403) + (v189 & 0xBD) - 1) ^ 0xA0463CDC;
  LODWORD(v120) = v120 ^ 0xB0592EF5 | (((2 * v189) | 0x96B2746E) - v189 + 883344841) ^ 0xC6793207;
  v190 = v120 - 326918019 - ((2 * v120) & 0xD90740FA);
  v191 = LODWORD(STACK[0x270]) == 52;
  v192 = STACK[0x2CC];
  if (LODWORD(STACK[0x270]) != 52)
    v192 = -326918019;
  v193 = v151 ^ v192;
  LODWORD(STACK[0x280]) = v151 ^ v192;
  v194 = STACK[0x2D0];
  if (!v191)
    v194 = -326918019;
  v195 = v177 ^ v194;
  LODWORD(STACK[0x430]) = v177 ^ v194;
  v196 = STACK[0x2D4];
  if (!v191)
    v196 = -326918019;
  LODWORD(STACK[0x27C]) = v185 ^ v196;
  v197 = ((v195 + v193) ^ 0x2F3FEF4F) + (v185 ^ v196) + ((2 * (v195 + v193)) & 0x5E7FDE9E) - 792719183;
  v198 = (v197 ^ 0xFEDDC73A) + 19019794 + ((2 * v197) & 0xFDBB8E74);
  v199 = STACK[0x2D8];
  if (!v191)
    v199 = -326918019;
  v200 = (((v198 + (v190 ^ v199) + 180) ^ 0x4D6BD7E7) - 1298913255 + ((2 * (v198 + (v190 ^ v199) + 180)) & 0x9AD7AFCE))
       % 0xFF;
  v201 = (((LODWORD(STACK[0x2C0]) - 1047100386) >> 2) ^ 0x80631405)
       - (((LODWORD(STACK[0x2C0]) - 1047100386) >> 1) & 0x7F39D7F4);
  LODWORD(STACK[0x448]) = v200;
  LODWORD(STACK[0x278]) = v200 ^ 0xBECF8FD2;
  v202 = ((2 * v200) & 0x1A4) + (v200 ^ 0xBECF8FD2);
  LODWORD(STACK[0x470]) = v202;
  v203 = v202 + 14;
  LODWORD(STACK[0x450]) = v202 + 14;
  v204 = (v202 + 14) & 0xC;
  v205 = (v203 >> 2) & 3;
  LODWORD(STACK[0x460]) = v205;
  LODWORD(STACK[0x42C]) = v204;
  v204 >>= 1;
  LODWORD(STACK[0x458]) = v204;
  LODWORD(STACK[0x290]) = v204 & 2;
  v206 = (v205 ^ 0x53D3827D) + (v204 & 2);
  LODWORD(STACK[0x260]) = v206;
  v207 = v201 + v206 + 1;
  v208 = HIBYTE(LODWORD(STACK[0x300])) ^ 0xCDEADF23;
  v209 = (LODWORD(STACK[0x300]) >> 8) ^ 0xCD273531;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v210 = (LODWORD(STACK[0x300]) >> 8) ^ 0xCD273531;
  else
    v210 = HIBYTE(LODWORD(STACK[0x300])) ^ 0xCDEADF23;
  LODWORD(STACK[0x248]) = v210;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 < 8)
    v208 = v209;
  LODWORD(STACK[0x240]) = v208;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v211 = (LODWORD(STACK[0x2F8]) >> 8) ^ 0xCD273531;
  else
    v211 = HIBYTE(LODWORD(STACK[0x2F8])) ^ 0xCDEADF23;
  LODWORD(STACK[0x258]) = v211;
  v212 = STACK[0x2F0];
  v213 = HIWORD(LODWORD(STACK[0x2F0])) ^ 0xCDEA1204;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v214 = STACK[0x2F0];
  else
    v214 = HIWORD(LODWORD(STACK[0x2F0])) ^ 0xCDEA1204;
  LODWORD(STACK[0x220]) = v214;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 < 8)
    v213 = v212;
  LODWORD(STACK[0x228]) = v213;
  v215 = HIBYTE(v212) ^ 0xCDEADF23;
  v216 = (v212 >> 8) ^ 0xCD273531;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v217 = v215;
  else
    v217 = v216;
  LODWORD(STACK[0x208]) = v217;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v215 = v216;
  LODWORD(STACK[0x2F0]) = v215;
  v218 = STACK[0x2E4];
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v219 = (LODWORD(STACK[0x2E4]) >> 8) ^ 0xCD273531;
  else
    v219 = HIBYTE(LODWORD(STACK[0x2E4])) ^ 0xCDEADF23;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v220 = HIBYTE(LODWORD(STACK[0x2E4])) ^ 0xCDEADF23;
  else
    v220 = (LODWORD(STACK[0x2E4]) >> 8) ^ 0xCD273531;
  v221 = STACK[0x2DC];
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v222 = STACK[0x2DC];
  else
    v222 = HIWORD(LODWORD(STACK[0x2DC])) ^ 0xCDEA1204;
  v223 = HIBYTE(v221) ^ 0xCDEADF23;
  v224 = (v221 >> 8) ^ 0xCD273531;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v225 = v223;
  else
    v225 = v224;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v226 = STACK[0x2E4];
  else
    v226 = HIWORD(v218) ^ 0xCDEA1204;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v227 = HIWORD(v218) ^ 0xCDEA1204;
  else
    v227 = STACK[0x2E4];
  v228 = STACK[0x2E0];
  v229 = HIBYTE(LODWORD(STACK[0x2E0])) ^ 0xCDEADF23;
  LODWORD(STACK[0x478]) = -840245469;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v230 = v229;
  else
    v230 = (v228 >> 8) ^ 0xCD273531;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v231 = (v228 >> 8) ^ 0xCD273531;
  else
    v231 = v229;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v232 = HIWORD(v228) ^ 0xCDEA1204;
  else
    v232 = v228;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v233 = v228;
  else
    v233 = HIWORD(v228) ^ 0xCDEA1204;
  v234 = STACK[0x2E8];
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v235 = STACK[0x2E8];
  else
    v235 = HIWORD(LODWORD(STACK[0x2E8])) ^ 0xCDEA1204;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v236 = HIWORD(LODWORD(STACK[0x2E8])) ^ 0xCDEA1204;
  else
    v236 = STACK[0x2E8];
  v237 = HIBYTE(v234) ^ 0xCDEADF23;
  v238 = (v234 >> 8) ^ 0xCD273531;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v239 = (v234 >> 8) ^ 0xCD273531;
  else
    v239 = HIBYTE(v234) ^ 0xCDEADF23;
  if (((2 * (5 - 12 * v207)) & 8) + ((5 - 12 * v207) & 0xC ^ 0xF7BEFE76) + 138477962 >= 8)
    v238 = v237;
  if ((v207 & 1) != 0)
    v240 = v235;
  else
    v240 = v239;
  LODWORD(STACK[0x230]) = v240;
  if ((v207 & 1) != 0)
    v241 = v239;
  else
    v241 = v236;
  LODWORD(STACK[0x218]) = v241;
  if ((v207 & 1) != 0)
    v242 = v238;
  else
    v242 = v235;
  LODWORD(STACK[0x238]) = v242;
  if ((v207 & 1) != 0)
    v238 = v236;
  LODWORD(STACK[0x210]) = v238;
  if ((v207 & 1) != 0)
    v243 = v233;
  else
    v243 = v231;
  LODWORD(STACK[0x2DC]) = v243;
  if ((v207 & 1) != 0)
    v244 = v230;
  else
    v244 = v233;
  LODWORD(STACK[0x2E4]) = v244;
  if ((v207 & 1) != 0)
    v245 = v227;
  else
    v245 = v220;
  LODWORD(STACK[0x200]) = v245;
  v246 = (STACK[0x450] & 0xF ^ 0xBDBF75BD) + ((2 * LODWORD(STACK[0x450])) & 0x1A) + 1111525955;
  LODWORD(STACK[0x304]) = ((v246 >> 1) & 0x1CDBFFFE) + ((v246 >> 2) ^ 0x4E6DFFFF);
  if ((v207 & 1) != 0)
    v247 = v220;
  else
    v247 = v226;
  LODWORD(STACK[0x240]) = v247;
  if ((v207 & 1) != 0)
    v248 = v226;
  else
    v248 = v219;
  LODWORD(STACK[0x228]) = v248;
  if ((v207 & 1) != 0)
    v249 = v219;
  else
    v249 = v227;
  LODWORD(STACK[0x220]) = v249;
  if ((v207 & 1) != 0)
    v250 = v231;
  else
    v250 = v232;
  LODWORD(STACK[0x248]) = v250;
  if ((v207 & 1) != 0)
    v251 = v225;
  else
    v251 = v222;
  LODWORD(STACK[0x208]) = v251;
  v252 = (((v230 ^ v232) ^ 0xAC)
        + ((v230 ^ v232) & 0x15 ^ 0x24AEB811)
        - (((v230 ^ v232) ^ 0xAC) & 0x15)) ^ 0xE57FCDA8;
  if ((v207 & 1) == 0)
    v252 = -1043237615;
  LODWORD(STACK[0x2E0]) = v252;
  JUMPOUT(0x10017AA94);
}

void sub_1001C6468(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,int a25,char a26,uint64_t a27,int a28,int a29)
{
  int v29;
  int v30;
  int v31;
  int v32;
  int v36;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;

  if (v32 == 52)
    a19 = a4;
  LODWORD(STACK[0x2D8]) = a19;
  if (v32 == 52)
    a20 = v31;
  LODWORD(STACK[0x2D4]) = a20;
  if (v32 == 52)
    a22 = v30;
  LODWORD(STACK[0x2CC]) = a22;
  v36 = LODWORD(STACK[0x458]) + 669;
  if (v32 == 52)
    a21 = v29;
  LODWORD(STACK[0x2D0]) = a21;
  v38 = ((LODWORD(STACK[0x28C]) + 1) & 3) + 1893226842 - (((LODWORD(STACK[0x28C]) + 1) << (v36 ^ 0x73)) & 4);
  v39 = STACK[0x42C];
  v40 = ((((a29 + 2) & 3) + 1182176802 - ((2 * (a29 + 2)) & 4)) | LODWORD(STACK[0x42C])) ^ 0x46769622;
  v41 = (LODWORD(STACK[0x274]) + 1) & 3;
  v42 = (v41 - 1306575377 - 2 * v41) ^ 0xB21F3DEF | LODWORD(STACK[0x42C]);
  LODWORD(STACK[0x2C0]) = (v42 ^ 0x3EFB7FF7) - 9569301 + ((2 * v42) & 0x7DF6FFEE);
  v43 = (((a25 + 9112610) & 3) + 1629555866 - ((2 * (a25 + 9112610)) & 4)) ^ 0x61210C9A | v39;
  LODWORD(STACK[0x2B0]) = (v43 ^ 0x4BE6BF7E) - 50466856 + ((2 * v43) & 0x158D66DC);
  v44 = (LODWORD(STACK[0x428]) + 2) & 3 | v39;
  v45 = (((a26 + 81) & 3) + 590103129 - 2 * ((a26 + 81) & 1)) ^ 0x232C4259 | v39;
  v46 = ((LODWORD(STACK[0x278]) + 1) & 3 | v39)
      - 2
      * (((LODWORD(STACK[0x278]) + 1) & 3 | v39) ^ (LODWORD(STACK[0x278]) + 1) & 2);
  v47 = (LODWORD(STACK[0x27C]) + 2) & 3;
  v48 = (v47 - 1056220193 - 2 * v47) ^ 0xC10B5BDF | v39;
  LODWORD(STACK[0x428]) = (v48 ^ 0x3B762EAD) - 840049665 + ((2 * v48) & 0x76EC5D5A);
  v49 = ((STACK[0x280] & 3) + 62153145 - 2 * (STACK[0x280] & 1)) ^ 0x3B461B9 | v39;
  LODWORD(STACK[0x2A0]) = (v49 ^ 0xFFCAFAFF) + 1564463026 + ((2 * v49) & 0x7F95F5FE);
  LODWORD(STACK[0x438]) = v39 | 0xD7FD50A0 | (LODWORD(STACK[0x430]) - 1) & 3;
  LODWORD(STACK[0x298]) = ((v38 ^ 0x70D8595A | v39) ^ 0xBEEF57FE)
                        + 2078277408
                        + ((2 * (v38 ^ 0x70D8595A | v39)) & 0x1C4E0D7C);
  LODWORD(STACK[0x28C]) = a18 + 1263796212;
  LODWORD(STACK[0x2B8]) = v40 - ((2 * v40) & 0x1000809E) + 134665807;
  LODWORD(STACK[0x2A8]) = v44 - 2146609709 - ((2 * v44) & 0x1C) + 11;
  LODWORD(STACK[0x274]) = v45 - ((2 * v45) & 0x28A0620C) + 930361670;
  LODWORD(STACK[0x440]) = v46 + 1461125917;
  JUMPOUT(0x1001783D0);
}

void sub_1001C67A4(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1001C6820(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  _QWORD v7[3];
  int v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + 24);
  v6 = 941074649 * (((v7 | 0xB3A4DD8A) - (v7 & 0xB3A4DD8A)) ^ 0xB36C12EE);
  v7[1] = *(_QWORD *)(v2 + 16);
  v7[2] = v5;
  LODWORD(v7[0]) = v6 - 1425378415 + v1 + 239;
  v9 = v4;
  v8 = a1 - v6;
  sub_100218684(v7);
  *(_DWORD *)(v3 + 16) = HIDWORD(v7[0]);
}

void sub_1001C6C10(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;

  v1 = 1189216979 * ((2 * (a1 & 0xB5105BF) - a1 - 189859264) ^ 0xDA45F686);
  v2 = *(_DWORD *)a1 ^ v1;
  if (*(_QWORD *)(a1 + 16))
    v3 = *(_DWORD *)(a1 + 8) - v1 == 475027196;
  else
    v3 = 1;
  v4 = v3;
  __asm { BR              X8 }
}

uint64_t sub_1001C6CE4()
{
  int v0;
  int v1;
  void *v2;

  v2 = malloc_type_malloc((((v0 + 138) ^ 0xFFFFFE3E) & (v1 - 475027181) ^ 0x57BFDFDF)+ ((v0 ^ 0xAF7FBEE4) & (2 * (v1 - 475027181)))- 1472192461, 0x69448721uLL);
  STACK[0x3A8] = (unint64_t)v2;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((939 * (v2 != 0)) ^ v0)) - 4))();
}

uint64_t sub_1001C6D6C(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;

  STACK[0x358] = v6;
  *a1 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((29
                                          * ((((v7 | ((unint64_t)(v7 < v5) << 32)) == 475027196) ^ (11 * (v4 ^ 0x4B))) & 1)) ^ v4))
                            - 8))();
}

uint64_t sub_1001C6E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;

  v13 = v5 < v4;
  *(_BYTE *)(v8 + v11 - 0x2DC1E73D7BCF3CB6) = *(_BYTE *)(((v10 + 997) | 4u) + v7 + v12 - 0x70C8EF7C0E1664A0);
  if (v13 == v9 - 0x2529CB755DDA9528 < v4)
    v13 = v9 - 0x2529CB755DDA9528 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((v13 * v6) ^ v10)) - 8))();
}

uint64_t sub_1001C6EBC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X3>, unint64_t a3@<X4>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  unint64_t v7;

  STACK[0x338] = v7;
  STACK[0x350] = a1;
  LODWORD(STACK[0x34C]) = v6;
  STACK[0x340] = a3;
  *(_BYTE *)(a3 + v5 - 0x217F59977FC75E46) = 0x80;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((117 * (((a4 + 785031716) & 0xD13558B7 ^ 0xCB34FFB6) + v4 > 0x7FFFFFFE)) ^ a4))
                            - 4))();
}

uint64_t sub_1001C6F40@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;

  *(_BYTE *)(v4 + ((3 * (a2 ^ 0x586)) ^ (v3 + 145)) + v2) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 + v3 > v5) * v6) ^ a2)) - 4))();
}

uint64_t sub_1001C6F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((dword_1003059C4 == 1197784504) * ((v4 + 89) ^ 0xBD)) ^ v4))
                            - (((v4 + 83) | 0x100u) ^ 0x1EALL)))();
}

uint64_t sub_1001C6FC8()
{
  int v0;
  kern_return_t v1;

  v1 = IOMainPort(0, (mach_port_t *)&STACK[0x3C4]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((((2 * v1) & 0xFFFF36DE) + (v1 ^ 0x7FFF9B6F) == 2147457903)
                                        * (((8 * v0) ^ 0x1D0) - 1710)) ^ v0))
                            - 4))();
}

uint64_t sub_1001C701C()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  strcpy((char *)(v1 - 215), "com_apple_driver_FairPlayIOKit");
  v2 = IOServiceMatching((const char *)(v1 - 215)) != 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1318 * v2) ^ v0)) - ((v0 + 292) | 0x4A0u) + 1708))();
}

uint64_t sub_1001C70B0(const __CFDictionary *a1)
{
  int v1;
  kern_return_t MatchingServices;

  MatchingServices = IOServiceGetMatchingServices(STACK[0x3C4], a1, (io_iterator_t *)&STACK[0x360]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1394
                                        * (((2 * MatchingServices) & 0xDF7EDFFE)
                                         + (MatchingServices ^ ((v1 ^ 0x59A) + 1874815625)) == 1874817023)) ^ v1))
                            - ((v1 + 1476) ^ 0x6B4)))();
}

uint64_t sub_1001C7128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  io_object_t v6;

  v6 = IOIteratorNext(STACK[0x360]);
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((189
                                          * ((((107 * (v4 ^ 0x566)) ^ (((2 * v6) & 0xD7ABF4FC) + (v6 ^ 0xEBD5FA7E) == -338298242)) & 1) == 0)) ^ v4))
                            - 8))();
}

uint64_t sub_1001C718C@<X0>(int a1@<W8>)
{
  int v1;
  kern_return_t v2;

  v2 = IOServiceOpen(a1 + 338298242, mach_task_self_, 0, (io_connect_t *)&STACK[0x378]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((28
                                        * (((v2 << (-42 * (v1 ^ 0x7E) + 81)) & 0x78FF67FC) + (v2 ^ 0xBC7FB3FE) != -1132481538)) ^ v1 ^ 0x191))
                            - 8))();
}

uint64_t sub_1001C7218()
{
  int v0;
  int v1;
  io_object_t v2;
  uint64_t v3;
  uint64_t v4;

  IOObjectRelease(v2);
  v4 = IOObjectRelease(STACK[0x360]);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50
                                                    + (((*(_DWORD *)(v3 + 2500) == v1) * (((v0 - 1610) | 0x180) ^ 0x1A1)) ^ (v0 - 1565)))
                                          - 12))(v4);
}

uint64_t sub_1001C72AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  LODWORD(STACK[0x510]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(a4
                                                                                   + 8
                                                                                   * ((27
                                                                                     * ((v5 | ((unint64_t)(v5 < 0x511B57D6) << 32))
                                                                                      + 1135769905 == 28 * (v4 ^ 0x1E3u) + 2496516219)) ^ v4))
                                                                       - 4))(a1, a2, &STACK[0x510]);
}

uint64_t sub_1001C7354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;

  v14 = v7 < v9;
  *(_BYTE *)(v11 + v13 - 0x6F1BBE0CE1938ABCLL) = *(_BYTE *)(v10 + a5 - 0x5C7293304D46266);
  if (v14 == v12 - 0x7AF88F636F6F810 < (unint64_t)((v5 - 478) | 0x84u) + v6)
    v14 = v12 - 0x7AF88F636F6F810 < v7;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(a4 + 8 * ((!v14 * v8) ^ v5)) - 4))(v12 - 0x7AF88F636F6F810 < v7);
}

uint64_t sub_1001C73F0@<X0>(void *a1@<X2>, unint64_t a2@<X4>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  _BOOL4 v6;

  STACK[0x330] = a2;
  LODWORD(STACK[0xCE4]) = v4 + v3;
  STACK[0x478] = 2008;
  STACK[0x328] = (unint64_t)a1;
  v6 = IOConnectCallStructMethod(a3 - 1197784504, 0x22u, a1, 0x7D8uLL, a1, &STACK[0x478]) == 0;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((v6 * ((16 * (v5 ^ 0xE7)) ^ 0x522)) ^ v5)))();
}

uint64_t sub_1001C745C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (int)(((LODWORD(STACK[0xCE4]) - v4 == v3)
                                     * ((v5 - 1334674570) ^ 0xB0727C59 ^ (428 * (v5 ^ 0x88)))) ^ v5)))();
}

uint64_t sub_1001C74A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * ((78 * (((v5 + 1599546412 - v4) | (v4 - (v5 + 1599546412))) >= 0)) ^ ((int)v4 + 1334675341)))
                            - ((v4 ^ (v3 + 589))
                             + 462)
                            + 899))();
}

uint64_t sub_1001C757C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;

  v12 = v5 < v4;
  *(_BYTE *)(v9 + a4 - 0x772B6EFA3BF7139ELL) = *(_BYTE *)(v8 + v11 - 0x3192EBE1C4EA65A8);
  if (v12 == v10 - 0x12697B86E9B1E352 < v4)
    v12 = v10 - 0x12697B86E9B1E352 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((!v12 * v6) ^ v7)) - 12))();
}

uint64_t sub_1001C7614@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;

  STACK[0x3F0] = 0x7BB775407D70C8E2;
  v5 = 230600693 * ((v4 - 152) ^ 0xD23C862B);
  *(_DWORD *)(v4 - 124) = (a2 ^ 0x13CCB390)
                        - v5
                        + 2013195452
                        + ((a2 << (((v3 - 17) ^ 0x9D) + v3 + 19)) & 0xF5AFE6E8 ^ 0xD02680C8);
  v6 = STACK[0x350];
  *(_QWORD *)(v4 - 144) = a1 + v2;
  *(_QWORD *)(v4 - 136) = v6;
  *(_DWORD *)(v4 - 152) = (v3 + 251) ^ v5;
  sub_1002187F8((_DWORD *)(v4 - 152));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1259 * (*(_DWORD *)(v4 - 128) == 0)) ^ v3)) - 4))();
}

uint64_t sub_1001C76E4()
{
  int v0;
  BOOL v1;

  STACK[0x490] = 1;
  v1 = container_system_group_path_for_identifier(0, "systemgroup.com.apple.pisco.suinfo", &STACK[0x490]) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((((v1 ^ (v0 + 1)) & 1) * (42 * (v0 ^ 0xCF) + 33)) ^ v0))
                            - 12))();
}

uint64_t sub_1001C7748()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((26 * (STACK[0x490] == (v1 + 578) - 1711)) ^ v1))
                            - 12))();
}

uint64_t sub_1001C7778()
{
  unsigned int v0;
  const char *v1;
  size_t v2;
  _BOOL4 v3;

  v2 = strlen(v1);
  v3 = malloc_type_malloc((v2 ^ 0x7F5EBAEF6C5FFBFDLL ^ v0 ^ 0x40E) + ((2 * v2) & 0xFEBD75DED8BFF73ALL) + (v0 ^ 0x80A1451093A000EFLL), 0xBDDA8B5EuLL) != 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (int)((293 * v3) ^ v0)) - 12))();
}

uint64_t sub_1001C780C()
{
  int v0;
  unint64_t v1;

  LODWORD(STACK[0x310]) = umask(0);
  STACK[0x318] = v1;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((239 * (v1 + (v0 ^ 0x3EC7F2BEu) - 0x7F5EBAEEEE68DD1ELL == 3166638429)) ^ v0))
                            - 12))();
}

uint64_t sub_1001C78A4@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  *(_BYTE *)(v3 + v9 - 0x64EA68701FB662CLL) = *(_BYTE *)(v6 + v2 + v8 - 0x720860B23EFB7B39);
  v11 = v4 - 0x281EACE23B562FC6 < a1;
  if (a1 < v7 != v4 - 0x281EACE23B562FC6 < v7)
    v11 = a1 < v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v11 * v1) ^ v5)) - 12))();
}

uint64_t sub_1001C7934()
{
  int v0;
  const char *v1;
  uint64_t v2;
  int v3;

  strcpy((char *)&v1[STACK[0x318] - 0x7F5EBAEF6C5FFB9DLL], "/Library");
  STACK[0x320] = (unint64_t)v1;
  v3 = mkdir(v1, 0x1EDu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((v0 - 1053290981) ^ (2
                                                              * ((v0 ^ 0x27 ^ (((((2 * v3) & 0x7D8FE5BE) + (v3 ^ 0x3EC7F2DF) - v0) | (v0 - (((2 * v3) & 0x7D8FE5BE) + (v3 ^ 0x3EC7F2DFu)))) >> ((v0 ^ 0x62) + 99))) & 1))))
                            - 4))();
}

uint64_t sub_1001C79EC()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = *__error() != 17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 * (v0 + 500)) ^ v0)) - (v0 ^ 0x112u) + 487))();
}

uint64_t sub_1001C7A2C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  strcpy((char *)(v0 + 570), "/ProvenanceV2");
  v3 = mkdir((const char *)STACK[0x320], 0x1EDu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((118
                                          * (((2 * v3) & 0x67DBAB8E) + (v3 ^ ((v1 ^ 0x6A8) - 1276259405)) != -1276258874)) ^ v1))
                            - 4))();
}

uint64_t sub_1001C7AC4()
{
  int v0;
  uint64_t v1;
  signed int v2;

  v2 = ((*__error() == ((v0 - 145) | 0x68) - 474) * ((v0 - 1852257) & 0xF4FF797F ^ 0xF4E33EED)) ^ v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v2) - 4))();
}

uint64_t sub_1001C7B28()
{
  uint64_t v0;
  void *v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 583) = 0x6975732E6373702FLL;
  *(_BYTE *)(STACK[0x318] - 0x7F5EBAEF6C5FFDCFLL + STACK[0x320] + 591) = 0;
  STACK[0x320] = 0;
  umask(STACK[0x310]);
  free(v1);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 - 941826616) & 0x433FEBEF)))();
}

uint64_t sub_1001C7BD4()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((((v0 + 1308) ^ 0x6E5) * (STACK[0x320] == 0)) ^ v0))
                            - (v0 ^ 0x190)))();
}

void sub_1001C7C14(void *a1)
{
  int v1;
  uint64_t v2;
  void *v3;

  free(a1);
  free(v3);
  *(_DWORD *)(v2 + 4) = v1;
}

uint64_t sub_1001C95B8(int a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  _BOOL4 v6;

  if (v2 < v3 != v4 + v1 < v3)
    v6 = v2 < v3;
  else
    v6 = v4 + v1 < v2;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v6 * a1) ^ v5)) - 8))();
}

uint64_t sub_1001C9CA4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,unsigned int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int a66;
  unsigned int a70;
  int a72;
  int a73;
  int a74;
  uint64_t v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  BOOL v78;
  int v81;
  unsigned int v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  int v99;
  int v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v109;

  v78 = LODWORD(STACK[0x328]) == -315061333;
  if (LODWORD(STACK[0x328]) == -315061333)
    a66 = a41;
  HIDWORD(a36) = a66;
  if (LODWORD(STACK[0x328]) == -315061333)
    a74 = a73;
  LODWORD(STACK[0x208]) = a74;
  v81 = STACK[0x330];
  if (v78)
    v81 = STACK[0x2F8];
  LODWORD(STACK[0x204]) = v81;
  if ((STACK[0x2E8] & 2) != 0)
    a40 = a70;
  v83 = STACK[0x350];
  if ((STACK[0x2E8] & 2) == 0)
    v83 = STACK[0x21C];
  v109 = __PAIR64__(a40, v83);
  LODWORD(STACK[0x350]) = a33 - 154123353;
  LODWORD(STACK[0x330]) = a31 + HIDWORD(a31);
  LODWORD(STACK[0x21C]) = HIDWORD(a30) ^ a32;
  LODWORD(a62) = a72 ^ 0x3199466D;
  HIDWORD(a30) = HIDWORD(a33) ^ 0xE85C78FF;
  LODWORD(STACK[0x2F8]) = HIDWORD(a33) ^ 0x6FB56AA;
  v84 = ((v75 + 1107432187) | 0x85A86140)
      + (unint64_t)v77
      + ((unint64_t)(v77 < v76) << 32)
      - 0x104CC0AE1;
  v85 = *(_QWORD *)(STACK[0x4A8] + 8 * v84) ^ 0xAEAEAEAEAEAEAEAELL;
  v86 = 0x5F3D51B5D321F3ADLL * v85 - ((0xE7AA36BA643E75ALL * v85) & 0x9C0205775A3526ALL) + 0x4E0102BBAD1A935;
  v87 = ((2 * ((v74 ^ 0xD70042CD3D8E5C0ELL ^ v86) + v84)) & 0xEB5FFF97BEF5FF66)
      + (((v74 ^ 0xD70042CD3D8E5C0ELL ^ v86) + v84) ^ 0x75AFFFCBDF7AFFB3);
  v88 = v87
      + (((v87 - 0x75AFFFCBDF7AFFB3) >> 32) ^ 0xC322009C11008C41)
      - (((v87 - 0x75AFFFCBDF7AFFB3) >> 31) & 0x1DDFEE77CLL);
  v89 = v88
      + (((v88 - 0x38D20067F07B8BF4) >> 16) ^ 0x3F1B579BFBBEF9FDLL)
      + (((v88 - 0x38D20067F07B8BF4) >> 15) & 0xAF37F77DF3FALL);
  v90 = v89
      + (((v89 - 0x77ED5803EC3A85F1) >> 8) ^ 0x8288099040082100)
      - (((v89 - 0x77ED5803EC3A85F1) >> 7) & 0xEFECDF7FEFBDFELL)
      + 2;
  LODWORD(v89) = v90 - ((2 * v90 + 125481498) & 0xF1F9656);
  v91 = v90 - ((2 * v90 + 0x42187B6119171EDALL) & 0x459B1ED95A3B0054) - 0x7C2632E2C656F069;
  v92 = 0x5F3D51B5D321F3ADLL * v85 - ((0xBE7AA36BA643E75ALL * v85) & 0xF8016C756A7E6C20) + 0x7C00B63AB53F3610;
  v93 = ((2 * v91) ^ 0x459B1ED95A3B0054)
      - ((2 * ((2 * v91) ^ 0x459B1ED95A3B0054)) & 0x1515B3A0159C7194)
      + 0xA8AD9D00ACE38CALL;
  v94 = (v91 ^ 0x794C102815D3B64ALL)
      + (v93 & 0xB7033E89719C6CC0 ^ 0x1966E3FE6F56F15FLL)
      + ((2 * v93) & 0x26007410C3309100 ^ 0x400300001101100)
      - 0x1B64FB7E6FDAD99FLL;
  v95 = ((2 * ((v92 ^ 0x7F3AA8C0F2D6C52ELL ^ (v94 - ((2 * v94) & 0x6743DF48FD3E67CLL) + 0x33A1EFA47E9F33ELL)) + v84)) & 0xFF9BDB563FFB3FFELL)
      + (((v92 ^ 0x7F3AA8C0F2D6C52ELL ^ (v94 - ((2 * v94) & 0x6743DF48FD3E67CLL) + 0x33A1EFA47E9F33ELL)) + v84) ^ 0xFFCDEDAB1FFD9FFFLL);
  v96 = v95
      + (((v95 + 0x321254E0026001) >> 32) ^ 0x20A00146098C6D82)
      - (((v95 + 0x321254E0026001) >> 31) & 0x1ECE724FALL);
  v97 = v96
      + (((v96 - 0x206DEEF1298A0D81) >> 16) ^ 0xE0D9C7EDBBBF77EFLL)
      + (((v96 - 0x206DEEF1298A0D81) >> 15) & 0x18FDB777EEFDELL);
  v98 = v97
      + (((v97 - 0x147B6DEE5498570) >> 8) ^ 0x3471100011450120)
      - (((v97 - 0x147B6DEE5498570) >> 7) & 0x11DDFFFDD75FDBELL)
      + 2;
  v99 = v98 - ((2 * v98 + 316863196) & 0x1868E6A0);
  v100 = ((2 * (v98 + 158431598)) & 0x77FD7BDC) + ((v98 + 158431598) ^ 0xBBFEBDEE);
  v101 = v98 - ((2 * v98 + 0x294EF54F61BCC5CLL) & 0x3DB590138F012E78) + 0x20253FB4428E7D6ALL;
  v102 = ((2 * ((v86 ^ 0x9A3AD8227D513E09 ^ v101) + v84)) & 0xFFFA7BCFD3CDD29ELL)
       + (((v86 ^ 0x9A3AD8227D513E09 ^ v101) + v84) ^ 0x7FFD3DE7E9E6E94FLL);
  v103 = v102
       + (((v102 - 0x7FFD3DE7E9E6E94FLL) >> 32) ^ 0xC080152259A80066)
       - (((v102 - 0x7FFD3DE7E9E6E94FLL) >> 31) & 0x14CAFFF32)
       + 1;
  v104 = v103 - ((2 * v103 + 0x7F0559EB78E22C94) & 0xBA3453B08E5D93F2) - 0x63632931FC601FBDLL;
  v105 = 2
       * ((((v104 >> 16) ^ 0xDD1A29D8472ELL) & (v104 ^ 0x29D8472EC9F9))
        - ((2 * (((v104 >> 16) ^ 0xDD1A29D8472ELL) & (v104 ^ 0x29D8472EC9F9))) & 0x1A062F4A88A64))
       - 0x56A25F9D0B57759CLL;
  v106 = (v104 ^ 0xDD1AF4C26EF68ED7 ^ (v104 >> 16))
       + (v105 ^ 0x28798030F3D9BLL)
       + 0x56A0D80508584801
       + ((2 * v105) & 0x52BE4FF5EF4F6FFCLL ^ 0x52BA40C5E94104C8);
  v107 = ((2 * v106) & 0x78D5FEBE79BBFDCELL)
       + (v106 ^ 0x3C6AFF5F3CDDFEE7)
       + (((((2 * v106) & 0x78D5FEBE79BBFDCELL) + (v106 ^ 0x3C6AFF5F3CDDFEE7) - 0x3C6AFF5F3CDDFEE7) >> 8) ^ 0x5020040840A4420)
       - (((((2 * v106) & 0x78D5FEBE79BBFDCELL) + (v106 ^ 0x3C6AFF5F3CDDFEE7) - 0x3C6AFF5F3CDDFEE7) >> 7) & 0x1FBFF7EF7EB77BELL);
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((88 * ((v77 & 0xFFFFFFFE) != v76 - 1)) ^ v75)) - 12))(v100 - ((2 * v100 - 107024156) & 0xCCBA9DE2) - 483604637, 3811362659, 3218045342, a4 ^ ((_DWORD)v89 + 1531782200) ^ (v99 + 363195582) ^ 0x1189EBC0 ^ ((_DWORD)v107+ 1- 2* (((_DWORD)v107 + 521649401) & 0x1A3253BF ^ ((_DWORD)v107 + 1) & 4u)- 649457485), 1531782200, 0xDD1AF4C26EF68ED7, 835515170, 1187175654, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           v109,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

void sub_1001CA5E4()
{
  JUMPOUT(0x1001C9E28);
}

#error "1001CD164: call analysis failed (funcsize=1832)"

uint64_t sub_1001CD16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int v71;
  unsigned int v72;
  int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  int v94;

  v73 = STACK[0x280];
  if (LODWORD(STACK[0x328]) == -315061333)
    v73 = STACK[0x27C];
  LODWORD(a38) = v73;
  LODWORD(STACK[0x338]) = a68 ^ 0x469E4E42;
  LODWORD(a51) = LODWORD(STACK[0x2C8]) ^ 0x3096450C;
  LODWORD(a26) = a26 - a71;
  HIDWORD(a25) = a69 - a70;
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x270]) ^ 0x49DD2801;
  LODWORD(STACK[0x27C]) = a30 - a67;
  v74 = STACK[0x4A8];
  LODWORD(STACK[0x350]) = 223 * (a6 ^ 0x3AD);
  v75 = v72 - 1389159816 + ((unint64_t)(v72 < LODWORD(STACK[0x350]) + 1389159370) << 32);
  v76 = 0x5F3D51B5D321F3ADLL * (*(_QWORD *)(v74 + 8 * v75) ^ 0xAEAEAEAEAEAEAEAELL)
      - ((0xBE7AA36BA643E75ALL * (*(_QWORD *)(v74 + 8 * v75) ^ 0xAEAEAEAEAEAEAEAELL)) & 0xD20D7122EDD468A4)
      + 0x6906B89176EA3452;
  v77 = ((2 * ((a1 ^ 0x8604011440B61650 ^ v76) + v75)) & 0xFFFCFBFF7F7DDB5ELL)
      + (((a1 ^ 0x8604011440B61650 ^ v76) + v75) ^ 0x7FFE7DFFBFBEEDAFLL);
  v78 = v77
      + (((v77 - 0x7FFE7DFFBFBEEDAFLL) >> 32) ^ 0x40CC20010154142DLL)
      - (((v77 - 0x7FFE7DFFBFBEEDAFLL) >> 31) & 0x1FD57D7A4);
  v79 = v78
      + (((v78 + 0x3F3561FF3EECFE24) >> 16) ^ 0xDF67F5EF7FEEE3BFLL)
      + (((v78 + 0x3F3561FF3EECFE24) >> 15) & 0x1EBDEFFDDC77ELL);
  v80 = v79
      + (((v79 + 0x5FCD6C0FBEFE1A65) >> 8) ^ 0xE4C825004803C880)
      - (((v79 + 0x5FCD6C0FBEFE1A65) >> 7) & 0x6FB5FF6FF86EFELL)
      + 2;
  v81 = v80 - ((2 * v80 + 0x64110B31D12D7D46) & 0x527A37296CB3297ELL) - 0x24BA5ED2610FAC9ELL;
  LODWORD(v80) = (2 * (v80 - ((2 * v80 - 785547962) & 0x6CB3297E) - 1628417182)) ^ 0x6CB3297E;
  LODWORD(v80) = (v80 - ((2 * v80) & 0xEF354F1C) - 140859506) & v71 ^ 0x44442828;
  v82 = ((2 * ((v76 ^ 0xC03BA305C0B3A0EDLL ^ v81) + v75)) & 0xEAFC7B9EF6F74FF2)
      + (((v76 ^ 0xC03BA305C0B3A0EDLL ^ v81) + v75) ^ 0x757E3DCF7B7BA7F9);
  v83 = v82
      + (((v82 - 0x757E3DCF7B7BA7F9) >> 32) ^ 0x98620A0230110686)
      - (((v82 - 0x757E3DCF7B7BA7F9) >> 31) & 0x19FDDF2F2);
  v84 = v83
      + (((v83 - 0xDE047D1AB8CAE7FLL) >> 16) ^ 0xEE6FAFE7E8DE2CFFLL)
      + (((v83 - 0xDE047D1AB8CAE7FLL) >> 15) & 0x15FCFD1BC59FELL);
  v85 = v84
      + (((v84 + 0x3B008466B952482) >> 8) ^ 0x7A3D0092C0808A22)
      + 2
      - (((v84 + 0x3B008466B952482) >> 7) & 0x185FEDA7EFEEBBALL);
  v86 = v85 - ((2 * v85 + 0xEC8C7A39620E3CLL) & 0x73C804244624CC8CLL) - 0x5A5B7B0C03C929CLL;
  LODWORD(v85) = (2 * (v85 - ((2 * v85 + 962727484) & 0x4624CC8C) + 1069772132)) ^ 0x4624CC8C;
  v87 = ((_DWORD)v85 - ((2 * (_DWORD)v85) & 0x33EA950C) - 1711977849) & v71 ^ v86;
  v88 = ((2 * ((v76 ^ 0xD0E2BA8355F85214 ^ v86) + v75)) & 0xFFBFFFF995F77F76)
      + (((v76 ^ 0xD0E2BA8355F85214 ^ v86) + v75) ^ 0x7FDFFFFCCAFBBFBBLL);
  v89 = v88
      + (((v88 - 0x7FDFFFFCCAFBBFBBLL) >> 32) ^ 0x810D00126910E960)
      - (((v88 - 0x7FDFFFFCCAFBBFBBLL) >> 31) & 0x12DDE2D3ELL);
  v90 = v89
      + (((v89 - 0xED000F340CA91BLL) >> 16) ^ 0xD9D3E3EFDFC37C5BLL)
      + (((v89 - 0xED000F340CA91BLL) >> 15) & 0x1C7DFBF86F8B6);
  v91 = v90 + (((v90 + 0x253F1C00EC2FDA8ALL) >> 8) ^ 0x8100320141A42A20) + 2;
  v92 = v91 - (((v90 + 0x253F1C00EC2FDA8ALL) >> 7) & 0x1FF9BFD7CB7ABBELL);
  v93 = (v92 - 1433685912) ^ 0xD141084C ^ (((2 * v92 - ((4 * v92 - 1439776352) & 0xE94A0E84) + 1237084178) & v71 ^ 0x27F40E9D)
                                         - 1) & v71;
  LODWORD(v79) = 2 * (v92 - ((2 * v92 + 944781904) & 0x6CB84404) + 1384398634);
  LODWORD(v79) = (v79 ^ 0x6CB84404) - 2 * ((v79 ^ 0x6CB84404) & 0x289E2D6 ^ v79 & 0x12) + 42590917;
  LODWORD(v79) = ((v79 & 0xF8058048 ^ 0x7010004B) + (v79 & 0x56A7C24 ^ 0x4A4705) - 2) ^ 0xF19CA423;
  LODWORD(v80) = a8 ^ v81 ^ (((((2 * v80) | 0x2C7C0636) - v80 - 373162779) & 0x721ED54B ^ 0x700E5440)
                           + ((((2 * v80) | 0x2C7C0636) - v80 - 373162779) ^ 0x87308B0B)
                           - (((((2 * v80) | 0x2C7C0636) - v80 - 373162779) ^ 0x87308B0B) & 0x721ED548)) ^ v87 ^ 0x63C8E97D ^ (((2 * v79) | 0xC7349934) - v79 + 476427110) ^ (v92 - ((2 * v92 + 944781904) & 0x6CB84404) + 1384398634);
  v94 = ((v80 & 0xA2FBE306 ^ 0xF3C106) - ((2 * (v80 & 0xA2FBE306 ^ 0xF3C106)) & 0x15C004) - 586487598) & 0xFFFFE31E ^ 0xFDD8E116 | (((2 * (v80 & 0x5D041CF9 ^ 0x10C0)) | 0x530EFE6A) - (v80 & 0x5D041CF9 ^ 0x10C0) + 1450737867) ^ 0xED8763DC;
  return ((uint64_t (*)(unint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002C8B50 + (int)(((8 * (v72 - 1389159815 > 1)) | (16 * (v72 - 1389159815 > 1))) ^ a6)))(v92 - ((2 * v92 - 0x497BAEEDC7AFC5B0) & 0xDE05730A6CB84404) + 0x4A44E20E52843F2ALL, 227550054, ~(2 * (v93 & 0x9F971F ^ (v91 & 1))) + v93 + 10458911, v87, 0x195B1FC63DBF96F0, a6, 2322451083, v94 + 227550054 + (~(2 * v94) | 0xE4DFB935), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_1001CDE24()
{
  JUMPOUT(0x1001CD290);
}

uint64_t sub_1001CDE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,uint64_t a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  unsigned __int8 a64;
  int a68;
  int a70;
  int a72;
  int v72;
  unsigned int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  int v144;
  unint64_t v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  uint64_t v151;

  LODWORD(STACK[0x328]) = a23 - a24;
  v72 = ((2 * (a70 ^ LODWORD(STACK[0x2B8]) ^ LODWORD(STACK[0x27C]))) ^ 0x4D7CBE50)
      - ((2 * ((2 * (a70 ^ LODWORD(STACK[0x2B8]) ^ LODWORD(STACK[0x27C]))) ^ 0x4D7CBE50)) & 0x28DA30FC)
      + 342694014;
  v73 = (v72 & 0x246BD864 ^ 0x24D8D913 | v72 & 0xD9042408) - 1;
  LODWORD(STACK[0x2B8]) = v73 & 0xDC4CE408 ^ 0xCE100401 | v73 & 0x21231864;
  v74 = 0x5F3D51B5D321F3ADLL * (*(_QWORD *)STACK[0x4A8] ^ 0xAEAEAEAEAEAEAEAELL)
      - ((0x3E7AA36BA643E75ALL * (*(_QWORD *)STACK[0x4A8] ^ 0xAEAEAEAEAEAEAEAELL)) & 0x46BE85F90739CE66)
      + 0x235F42FC839CE733;
  v90 = 0x5F3D51B5D321F3ADLL * (*(_QWORD *)(STACK[0x4A8] + 8) ^ 0xAEAEAEAEAEAEAEAELL)
      - ((0xBE7AA36BA643E75ALL * (*(_QWORD *)(STACK[0x4A8] + 8) ^ 0xAEAEAEAEAEAEAEAELL)) & 0xA4545B06A8A9D098)
      + 0x522A2D835454E84CLL;
  v75 = ((2 * v74) & 0xE7DB7FBFAAEFFBE8 ^ 0x834859ABA864CA60) + (v74 ^ 0xB64B930A2BC598C7);
  v76 = v75
      + (((v75 - 0x73EDBFDFD577FDF4) >> 32) ^ 0x99998840051E8250)
      - (((v75 - 0x73EDBFDFD577FDF4) >> 31) & 0x1F5C2FB5ELL);
  v77 = v76
      + (((v76 - 0xD87481FDA968044) >> 16) ^ 0xBD7DD5F71FFF1ADCLL)
      + (((v76 - 0xD87481FDA968044) >> 15) & 0x1ABEE3FFE35B8);
  v78 = v77
      + (((v77 + 0x34FAE1E9056A64E0) >> 8) ^ 0xA871011042680086)
      - (((v77 + 0x34FAE1E9056A64E0) >> 7) & 0x11DFDDF7B2FFEF2)
      + 2;
  v79 = v78 - ((2 * v78 - 0x78E5C13B96C25DD0) & 0x80C2CAF46B79946ELL) + 0x3EE84DC6A5B9B4FLL;
  v80 = ((2 * (v79 ^ v74)) & 0xFEDDE9FD33D5EDFELL ^ 0xC65C490D20404808) + (v79 ^ v74 ^ 0x1C50D3782FCADBFBLL);
  v81 = v80
      + (((v80 + 0x910B0166150901) >> 32) ^ 0x208403E12470B821)
      - (((v80 + 0x910B0166150901) >> 31) & 0x1B71E8FBCLL);
  v82 = v81
      + (((v81 - 0x1FF2F8DFBE5BAF20) >> 16) ^ 0x1DEDB6EBFE7EBAAELL)
      + (((v81 - 0x1FF2F8DFBE5BAF20) >> 15) & 0x16DD7FCFD755CLL);
  v83 = v82
      + (((v82 - 0x3DE0AFCBBCDA69CELL) >> 8) ^ 0x8083000581184A89)
      - (((v82 - 0x3DE0AFCBBCDA69CELL) >> 7) & 0xF9FFF4FDCF6AECLL)
      + 2;
  v84 = v83 - ((2 * v83 - 0xEC0E28F98AC8F32) & 0xDEDB08A590008C60) - 0x17F2ECF504560169;
  v85 = ((2 * (v84 ^ v74)) & 0x42DE3FEDFFDAFEBELL ^ 0x440D4C97184206) + (v84 ^ v74 ^ 0x6D5DD958B471DE5CLL);
  v86 = v85
      + (((unint64_t)(v85 + 0x5E90E009001280A1) >> 32) ^ 0x203C9000308212C5)
      - (((unint64_t)(v85 + 0x5E90E009001280A1) >> 31) & 0x19EFBDA74);
  v87 = v86
      + (((v86 + 0x3E545008CF906DDCLL) >> 16) ^ 0xFFD41F3EBF8A79FFLL)
      + (((v86 + 0x3E545008CF906DDCLL) >> 15) & 0x3E7D7F14F3FELL);
  v88 = v87
      + (((v87 + 0x3E8030CA1005F3DDLL) >> 8) ^ 0xC7A4110444030000)
      - (((v87 + 0x3E8030CA1005F3DDLL) >> 7) & 0xB7DDF777F9FFFELL)
      + 2;
  v89 = v88 - ((2 * v88 + 0x1BBEBC9E7B3EC136) & 0x1D065A14D790869ELL) - 0x439D74A656985C16;
  v91 = ((2 * ((v90 ^ 0xDCA900893F9CAB03 ^ v89) + 1)) & 0xFFC6B66FF3F13FB4)
      + (((v90 ^ 0xDCA900893F9CAB03 ^ v89) + 1) ^ 0xFFE35B37F9F89FDALL);
  v92 = v91
      + (((v91 + 0x1CA4C806076026) >> 32) ^ 0x87230B5100828DCCLL)
      - (((v91 + 0x1CA4C806076026) >> 31) & 0x1FEFAE466);
  v93 = v92
      + (((v92 + 0x78F999770584D25ALL) >> 16) ^ 0xDAFFFFFF65B1FAFBLL)
      + (((v92 + 0x78F999770584D25ALL) >> 15) & 0x1FFFECB63F5F6);
  v94 = v93
      + (((v93 - 0x62066688602D28A1) >> 8) ^ 0x24902602A89A94)
      - (((v93 - 0x62066688602D28A1) >> 7) & 0x1B6DFB3FAAECAD6)
      + 2;
  v95 = v94 - ((2 * v94 + 0x3BAA12A33A547992) & 0xF0CEC08137924B12) + 0x163C699238F36252;
  v96 = ((2 * v95) ^ 0xF0CEC08137924B12)
      - ((2 * ((2 * v95) ^ 0xF0CEC08137924B12)) & 0x95CFC4770B056B5CLL)
      + 0x4AE7E23B8582B5AELL;
  v95 ^= 0x23E6FF04230713E9uLL;
  v97 = v95
      + (v96 & 0xB7033E89719C6CC0 ^ 0x599899DFFA7E6337)
      + ((2 * v96) & 0x26067500E3388900 ^ 0x406440003000900)
      - 0x5B9BBBD6FBFE47B7;
  v98 = v97 - 2 * (v97 & 0x60DE2E8F3E4B2457 ^ v95 & 1) + 0x60DE2E8F3E4B2456;
  v99 = (v98 ^ 0x60DE2E8F3E4B2456)
      - 2
      * (((v98 ^ 0x60DE2E8F3E4B2456) + 0x5B819F44B8CE3660) & 0x7AD92E3AABA726DCLL ^ (v98 ^ 0x60DE2E8F3E4B2456) & 4)
      - 0x29A532809B8AA2C8;
  v100 = ((2 * ((v99 ^ v90) & 0xD362FDD1353660F8 ^ 0x3028D1024104098)) & 0xA6807A2028248120)
       - ((v99 ^ v90) & 0xD362FDD1353660F8 ^ 0x3028D1024104098)
       - 0x7FCD3D38DE1A5693;
  v101 = (((v99 ^ v90) & 0x2C9D022ECAC99F07 ^ 0x49C000880899500 | 0xC1B04F6DD07EE998)
        - ((v99 ^ v90) & 0x2C9D022ECAC99F07 ^ 0x49C000880899500 | 0x3E4FB0922F811667)
        + 0x3E4FB0922F811667) ^ 0x5DF4E54D9870E39CLL;
  v102 = ((v100 & 0xCD429450834AC708 ^ 0x45401410810A4201 | v100 & 0x32BD6BA37CB528F0) - 1) ^ 0xC6125A52B1CDEB60 | (((2 * v101) & 0x14CEDDC3FCC6730ALL) - v101 + 0x7598911E019CC67ALL) ^ 0xC5D1391E03DAD77ALL;
  v103 = (v102 ^ 0x3D9FCA1F7F533CE7)
       + ((2 * v102) & 0x7B3F943EFEA679CELL)
       + ((((v102 ^ 0x3D9FCA1F7F533CE7) + ((2 * v102) & 0x7B3F943EFEA679CELL) - 0x3D9FCA1F7F533CE6) >> 32) ^ 0xA0081448C40400A1)
       - ((((v102 ^ 0x3D9FCA1F7F533CE7) + ((2 * v102) & 0x7B3F943EFEA679CELL) - 0x3D9FCA1F7F533CE6) >> 31) & 0x77F7FEBC);
  v104 = v103
       + (((v103 + 0x22582197BCA8C279) >> 16) ^ 0x4DF3CDFBE9F2F7EDLL)
       + (((v103 + 0x22582197BCA8C279) >> 15) & 0x19BF7D3E5EFDALL);
  v105 = v104
       + 0x3A40A567DBABF4FBLL
       + (((v104 - 0x2B9BAC642D4A3574) >> 8) ^ 0x4041010020E67100)
       - (((v104 - 0x2B9BAC642D4A3574) >> 7) & 0x17DFDFFBE331DFELL)
       + 2;
  v106 = v105 - ((2 * v105 - 0x4C3AA59853B936E2) & 0xC5CBD195F67CF48ELL) - 0x43376A012E9E212ALL;
  v107 = (v106 ^ 0x62E5E8CAFB3E7A47)
       - 2 * (((v106 ^ 0x62E5E8CAFB3E7A47) + 0x17033E89719C6CC0) & 0x1E49935387B783F7 ^ v106 & 0x30)
       + 0x554CD1DCF953F087;
  v108 = ((2 * ((v90 ^ 0xCC63BED0D3E36B8BLL ^ v107) + 1)) & 0x75F767FFDEFEEECELL)
       + (((v90 ^ 0xCC63BED0D3E36B8BLL ^ v107) + 1) ^ 0x3AFBB3FFEF7F7767);
  v109 = v108
       + (((v108 - 0x3AFBB3FFEF7F7767) >> 32) ^ 0x809017A101237804)
       - (((v108 - 0x3AFBB3FFEF7F7767) >> 31) & 0x1FDB90FF6);
  v110 = v109
       + (((v109 + 0x4474345F0F5D1095) >> 16) ^ 0x371BEB4FFFF731B5)
       + (((v109 + 0x4474345F0F5D1095) >> 15) & 0x1D69FFFEE636ALL);
  v111 = v110
       + (((v110 + 0xD58490F0F65DEE0) >> 8) ^ 0x90C928002000240CLL)
       - (((v110 + 0xD58490F0F65DEE0) >> 7) & 0x6DAFFFBFFFB7E6);
  v112 = (((v111 - 0xF98974BEA9A581ALL) >> 30) ^ 0x774F3B7FDB771F7FLL)
       + v111
       + 2
       + (((v111 - 0xF98974BEA9A581ALL) >> 29) & 0x7B6EE3EFELL);
  v113 = (((v112 + 0x79182D3439EE8865) >> 12) ^ 0xC7E133FB31FDFEFFLL)
       + v112
       + (((v112 + 0x79182D3439EE8865) >> 11) & 0x267F663FBFDFELL);
  v114 = v113
       + (((v113 - 0x4EC906C6F80F769ALL) >> 7) ^ 0x8408506412500)
       - (((v113 - 0x4EC906C6F80F769ALL) >> 6) & 0x3EF7EF5F37DB5FELL)
       + 1;
  v115 = v114 - ((2 * v114 + 0x625D7168035EC8CALL) & 0xE97EE72A12FDE43ELL) - 0x5A11D3B6F4D1A97CLL;
  v116 = ((2 * ((v115 ^ 0xF4BF7395097EF21FLL) + 0x288AB139EA2E5744)) & 0xE6FF5F57FDBD1F76)
       + (((v115 ^ 0xF4BF7395097EF21FLL) + 0x288AB139EA2E5744) ^ 0x737FAFABFEDE8FBBLL);
  v117 = v116
       + (((v116 - 0x737FAFABFEDE8FBBLL) >> 24) ^ 0xBC80620A50844461)
       - (((v116 - 0x737FAFABFEDE8FBBLL) >> 23) & 0x1EB5EF7773CLL);
  v118 = v117
       + (((v117 - 0x300011B64F62D41CLL) >> 13) ^ 0x48541C0C842A4108)
       - (((v117 - 0x300011B64F62D41CLL) >> 12) & 0x7C7E6F7AB7DEELL);
  v119 = v118
       + (((v118 - 0x78542DC2D38D1524) >> 5) ^ 0x8411122608442580)
       - (((v118 - 0x78542DC2D38D1524) >> 4) & 0x7DDDBB3EF77B4FELL)
       + 3;
  v120 = v119 - ((2 * v119 + 0x735802E485D8AB2) & 0x9224864939CCA530) - 0x3352FCC43EEAE80FLL;
  v121 = (v120 ^ 0xE1034D759F4647B8)
       + ((v120 >> 31) ^ 0x9F305609F85218A9)
       + ((v120 >> 30) & 0x38B56FB7ALL ^ 0xFFFFFFFC7FFBCEADLL)
       + 0x60CFA9F7C5AB7DBFLL;
  v122 = (((((2 * v121) & 0xFDDF7DDAFFFF81FCLL) + (v121 ^ 0xFEEFBEED7FFFC0FELL) + 0x110411280003F02) >> 11) ^ 0x3BBE7FF7EF5FEDD6)
       + ((2 * v121) & 0xFDDF7DDAFFFF81FCLL)
       + (v121 ^ 0xFEEFBEED7FFFC0FELL)
       + (((((2 * v121) & 0xFDDF7DDAFFFF81FCLL) + (v121 ^ 0xFEEFBEED7FFFC0FELL) + 0x110411280003F02) >> 10) & 0x3CFFEFDEBFDBACLL);
  v123 = (((v122 - 0x3AAE3EE56F5FAED4) >> 4) ^ 0x7F5CFDB377DFBB7FLL)
       + v122
       + (((v122 - 0x3AAE3EE56F5FAED4) >> 3) & 0x1EB9FB66EFBF76FELL);
  v124 = v123 - ((2 * v123 - 0x74167931CE7ED4A6) & 0xC24D2D9632EC5F6CLL) - 0x58E4A5CDCDC93A9DLL;
  v125 = ((2 * ((v124 ^ 0x612696CB19762FB6) + 0x1E4A8A832E7300A6)) & 0xFDE17F1FA1FFB67ELL)
       + (((v124 ^ 0x612696CB19762FB6) + 0x1E4A8A832E7300A6) ^ 0xFEF0BF8FD0FFDB3FLL);
  v126 = v125
       + (((v125 + 0x10F40702F0024C1) >> 30) ^ 0x8A14AD011C118031)
       - (((v125 + 0x10F40702F0024C1) >> 29) & 0x5C7DCFF9CLL);
  v127 = v126
       + (((v126 + 0x76FA936F12EEA490) >> 15) ^ 0xEAB9FFDFFF9FDFBALL)
       + (((v126 + 0x76FA936F12EEA490) >> 14) & 0x3FFBFFF3FBF74);
  v128 = v127
       + (((v127 - 0x73BF6C70ECB13B2ALL) >> 8) ^ 0xFF0EB77AFFFB5E9ELL)
       + (((v127 - 0x73BF6C70ECB13B2ALL) >> 7) & 0x1D6EF5FFF6BD3CLL)
       + 1;
  v129 = v128 - ((2 * v128 + 0x1A63B82826A6CC6ELL) & 0x83307D049FDC2926) - 0x3135E5699CBE8536;
  v130 = ((2 * ((v129 ^ 0x41983E824FEE1493) + 0x2C1E97BC5C429E81)) & 0xC87FAE5EDFFFDFF6)
       + (((v129 ^ 0x41983E824FEE1493) + 0x2C1E97BC5C429E81) ^ 0xE43FD72F6FFFEFFBLL);
  v131 = (((v130 + 0x1BC028D090001005) >> 27) ^ 0x36FDEBD7F4D79CBFLL)
       + v130
       + (((v130 + 0x1BC028D090001005) >> 26) & 0x2FE9AF397ELL);
  v132 = (((v131 - 0x1B3DC30764D78CBALL) >> 15) ^ 0xF5DF7BFE60FDFAB7)
       + v131
       + (((v131 - 0x1B3DC30764D78CBALL) >> 14) & 0x2F7FCC1FBF56ELL);
  v133 = (((v132 - 0x111D3F05C5D58771) >> 8) ^ 0x7FFFF9D5A9DFF7DELL)
       + v132
       + (((v132 - 0x111D3F05C5D58771) >> 7) & 0x1FFF3AB53BFEFBCLL);
  v134 = v133 - ((2 * v133 + 0x5DC58E4920950162) & 0x471DEA4217220AD4) + 0x1271BC459BDB861BLL;
  v135 = (v134 ^ 0x3F9F7086A7EED5FALL)
       + ((v134 >> 30) ^ 0xBDEFBF5D07881CA6)
       + ((v134 >> 29) & 0x3F3EBBD78 ^ 0x1F0EB8430)
       + 0x421040A2060A2144;
  v136 = (((((2 * v135) & 0xF782BBDFDF1DB7FELL) + (v135 ^ 0xFBC15DEFEF8EDBFFLL) + 0x43EA21010712401) >> 8) ^ 0xB7FF6EFF7B7FD9EBLL)
       + ((2 * v135) & 0xF782BBDFDF1DB7FELL)
       + (v135 ^ 0xFBC15DEFEF8EDBFFLL)
       + (((((2 * v135) & 0xF782BBDFDF1DB7FELL) + (v135 ^ 0xFBC15DEFEF8EDBFFLL) + 0x43EA21010712401) >> 7) & 0x1FEDDFEF6FFB3D6);
  v137 = v136
       + (((v136 + 0x4C3F331094F14A16) >> 8) ^ 0x2550600AEC0492BLL)
       - (((v136 + 0x4C3F331094F14A16) >> 7) & 0x155F3FEA27F6DA8)
       + 1;
  v138 = v137 - ((2 * v137 - 0x6C2BA5E0339DFE2CLL) & 0xDB23A16AC411FAA6) - 0x4884023AB7C601C3;
  v139 = ((2 * ((v138 ^ 0x6D91D0B56208FD53) + 0x75D572E7727DD82)) & 0xB747CFFF0FCADEEELL)
       + (((v138 ^ 0x6D91D0B56208FD53) + 0x75D572E7727DD82) ^ 0xDBA3E7FF87E56F77);
  v140 = (((v139 + 0x245C1800781A9089) >> 29) & 0x7DFB8EE6ELL)
       + (((v139 + 0x245C1800781A9089) >> 30) ^ 0x55FBFE8FEFDC7737);
  v141 = v140
       + v139
       + ((2 * v140 + 0x540802E020471192) ^ 0x8441010080D4CA0FLL)
       - ((2 * (2 * v140 + 0x540802E020471192)) & 0xF77DFDFEFE566BE0);
  v142 = v141
       + (((v141 + 0x4A1F187007694F43) >> 9) ^ 0x1604514C02F568DCLL)
       - (((v141 + 0x4A1F187007694F43) >> 8) & 0xF75D67FA152E46);
  v143 = v142
       + (((v142 + 0x341AC7240473E667) >> 7) ^ 0x6FD8BFFDFF653FEBLL)
       + (((v142 + 0x341AC7240473E667) >> 6) & 0x3B17FFBFECA7FD6);
  LODWORD(v98) = (((_DWORD)v143 + 1 - ((2 * ((_DWORD)v143 + 1) + 169692406) & 0x1F41B390u) + 347045955) >> 2) & 0x1DBD7AF5 ^ 0xCB40034;
  v144 = (((2 * v98) | 0x3C15C372) - v98 + 1643454023) ^ 0x930873FF;
  LODWORD(STACK[0x300]) = 67 * (LODWORD(STACK[0x350]) ^ 0x1BD);
  LODWORD(STACK[0x268]) = v144;
  LODWORD(STACK[0x260]) = v144 & 0x8137420A;
  LODWORD(STACK[0x318]) = LODWORD(STACK[0x2E0]) ^ 0x35F37427;
  LODWORD(STACK[0x2B8]) = a30 ^ a68;
  LODWORD(STACK[0x338]) = a30 ^ a68 ^ 0x4848D2A4;
  LODWORD(STACK[0x328]) = LODWORD(STACK[0x21C]) ^ 0x6408D0B4;
  v145 = STACK[0x4A0];
  v146 = (2 * ((STACK[0x308] & 0xC5F5353) - ((2 * (STACK[0x308] & 0xC5F5353)) & 0xB4CB872)) - 1957906318) ^ 0x8B4CB872;
  v147 = (v146 - 362110525 + (~(2 * v146) | 0x2B2ABC7B)) ^ 0xE635F291;
  v148 = (v147 & STACK[0x338]) + 1248142135 - ((2 * (v147 & STACK[0x338])) & 0x94CA466E);
  v149 = (((v147 & STACK[0x328]) - 911930745 - ((2 * (v147 & STACK[0x328])) & 0x934A150E)) ^ 0xC9A50A87) << LODWORD(STACK[0x340]);
  v150 = (((v148 ^ 0x4A652337) >> LODWORD(STACK[0x330]))
        - 1073180374
        - ((2 * ((v148 ^ 0x4A652337) >> LODWORD(STACK[0x330]))) & 0x80112254)) ^ 0xC008912A | (v149
                                                                                             + 2027048344
                                                                                             - ((2 * v149) & 0xF1A49B30)) ^ 0x78D24D98;
  v151 = 4 * (a64 ^ 0x55u);
  *(_DWORD *)(STACK[0x4C0] + v151) = a33 ^ a72 ^ 0x42952603 ^ (v150 - ((2 * v150) & 0xEBB4F0FA) - 170231683);
  *(_DWORD *)(v145 + v151) = a33 ^ a72 ^ 0xE23662B2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + SLODWORD(STACK[0x350]))
                                                                                                - 12))(2136970370, 3221786922, 1845183310, 2772586886, 2717358262, 2027048344, 1717708016);
}

#error "1001D1A70: too big function (funcsize=0)"

void sub_1001E5AA8()
{
  JUMPOUT(0x1001E5A58);
}

uint64_t sub_1001E5AB4@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W8>, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t (*v6)(void);
  unint64_t v7;

  LODWORD(STACK[0x318]) = a2;
  v4 = (a3 - 210625942);
  v5 = ((unint64_t)&STACK[0x444] ^ 0x7DDA7FCDEFFAEAFFLL)
     - 0x7DDA7FCDEFFAEAFFLL
     + ((2 * (_QWORD)&STACK[0x444]) & 0xFBB4FF9BDFF5D5F8);
  STACK[0x328] = ((2 * (v5 % 0x25)) & 0x4CLL)
               + ((v5 % 0x25) ^ v4 ^ 0xFFE7F3FEDEFFFFE5)
               + 0x180C012100012ALL;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)(v4 ^ 0x613))
                         - (((v4 ^ 0x7B3) - 565) ^ (v4 + 892)));
  v7 = STACK[0x3F0];
  STACK[0x310] = STACK[0x3F0];
  STACK[0x350] = STACK[0x418];
  STACK[0x320] = (unint64_t)&a4 + v7 - 0x7BB775407D70C3C2;
  return v6();
}

uint64_t sub_1001E5C20(int8x16_t a1, int8x16_t a2, int32x4_t a3, int8x16_t a4, int32x4_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int32x4_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int32x4_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int32x4_t v24;
  int8x16_t v25;
  int8x16_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int32x4_t v35;
  int32x4_t v36;
  int8x16_t v37;

  v27 = 4 * v12;
  v28 = v16 + 4 * v12;
  v29 = v14 | v12;
  v30 = v12 + 4;
  LODWORD(v29) = *(_DWORD *)(v16 + 4 * v29);
  v26.i32[0] = *(_DWORD *)(v16 + (v27 | 4));
  v26.i32[1] = v29;
  v26.i32[2] = *(_DWORD *)(v16 + (v27 | 0xC));
  v31 = vextq_s8(a1, v26, 0xCuLL);
  v32 = v26;
  v32.i32[3] = *(_DWORD *)(v16 + 4 * v30);
  v33 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v31, a2), a3), a4), a5);
  v34 = veorq_s8(vandq_s8(v32, a6), a7);
  v35 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v34, a8), (int32x4_t)vorrq_s8(v34, (int8x16_t)v17)), v17), v18);
  v36 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v35, v35), v19), v35), v20), veorq_s8(v33, v21)), v22);
  v37.i32[0] = *(_DWORD *)(v15 + 4 * ((*(_DWORD *)(v16 + (v27 | 4)) & 1) == 0));
  v37.i32[1] = *(_DWORD *)(v15 + 4 * ((v29 & 1) == 0));
  v37.i32[2] = *(_DWORD *)(v15 + 4 * (~*(_DWORD *)(v16 + (v27 | 0xC)) & 1));
  v37.i32[3] = *(_DWORD *)(v15 + 4 * ((v32.i8[12] & 1) == 0));
  *(int8x16_t *)v28 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v28 + 1588), v37), v25), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v36, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v36, v36), v23)), v24), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a12 + 8 * ((1022 * (v30 != 224)) ^ v13)) - 8))();
}

uint64_t sub_1001E5D3C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;

  v10 = (unsigned int *)(v7 + 4 * (v6 + v8));
  v11 = ((((a4 + 5 * (a5 ^ 0x11) + 3985) | v5) + 421544968) ^ 0x629199BE) - 1301341158;
  v12 = v6 + 1;
  v13 = *(_DWORD *)(v7 + 4 * (v12 + v8));
  v14 = (a3 - (v13 & 0x7FFFFFFE ^ 0x3D4BF1B0 | a3) + (v13 & 0x7FFFFFFE ^ 0x3D4BF1B0 | 0x6B63DD2F)) ^ 0x36B5A2B;
  v15 = ((((2 * v14) | 0x4E2E362) - v14 - 40989105) | v11 ^ 0xAE20F9D3) ^ 0x535939;
  *v10 = v10[397] ^ *(_DWORD *)(v9 - 184 + 4 * ((v13 & 1) == 0)) ^ ((v15 - ((2 * v15) & 0xBC54B998) + 1579834572) >> 1) ^ 0x2645C819;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((504 * (v12 != a2 + 3)) ^ a5)) - 8))();
}

uint64_t sub_1001E5E64()
{
  int v0;
  uint64_t v1;
  int8x16_t v2;
  int8x16_t v3;
  int8x16_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int32x4_t v8;
  int32x4_t v9;
  int32x4_t v10;
  int8x16_t v11;

  v3 = (int8x16_t)vld1q_dup_f32((const float *)&aHAwAwAwAwAwAwA[912]);
  v4.i64[0] = 0x8000000080000000;
  v4.i64[1] = 0x8000000080000000;
  v2.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[916];
  v2.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[924];
  v5 = vextq_s8(v3, v2, 0xCuLL);
  v6 = v2;
  v6.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[928];
  v7 = vandq_s8(v5, v4);
  v8 = (int32x4_t)veorq_s8(vandq_s8(v6, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x24AF0CCEu));
  v9 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v8, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v8, v8), (int8x16_t)vdupq_n_s32(0x8E02B88u))), vdupq_n_s32(0x847015C4)), (int8x16_t)vdupq_n_s32(0xB4FC4584));
  v10 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32(v9, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v9, v9), (int8x16_t)vdupq_n_s32(0x5F1C27FCu))), vdupq_n_s32(0x2F8E13FEu)), v7), (int8x16_t)vdupq_n_s32(0x6CCC114Cu));
  v11.i32[0] = *(_DWORD *)(v1 + 4 * ((aHAwAwAwAwAwAwA[916] & 1) == 0));
  v11.i32[1] = *(_DWORD *)(v1 + 4 * (*(_DWORD *)&aHAwAwAwAwAwAwA[920] & ((v0 - 216) ^ 0x396u) ^ 1));
  v11.i32[2] = *(_DWORD *)(v1 + 4 * (~*(_DWORD *)&aHAwAwAwAwAwAwA[924] & 1));
  v11.i32[3] = *(_DWORD *)(v1 + 4 * (~*(_DWORD *)&aHAwAwAwAwAwAwA[928] & 1));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[912] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[4], v11), (int8x16_t)vdupq_n_s32(0x4720AB1Fu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v10, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v10, v10), (int8x16_t)vdupq_n_s32(0x39C13580u))), vdupq_n_s32(0x9CE09AC0)), 1uLL));
  return ((uint64_t (*)(void))*(&off_1002C8B50 + v0))();
}

void sub_1001E5FF0()
{
  JUMPOUT(0x1001E5F08);
}

uint64_t sub_1001E5FFC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;
  uint64_t v3;
  unsigned int v4;

  v4 = ((((((428 * ((a1 + 452215587) & 0xE50BBFF5 ^ 0x6B4) + 505050048) & *v2 ^ 0x9C102201) - 1) & 0x5F0A6F38 | *v2 & 0x41000508) ^ 0x940A0701)
      + (((((428 * ((a1 + 452215587) & 0xE50BBFF5 ^ 0x6B4) + 505050048) & *v2 ^ 0x9C102201) - 1) & 0x20F590C6 | *v2 & 0x20E58086) ^ 0x751001)
      - 2) ^ 0xDF0E6B3C;
  v2[623] = v2[396] ^ *(_DWORD *)(v3 - 184 + 4 * ((*v2 & 1) == 0)) ^ (((v4 | ((v2[623] & 0x80000000) - 1572641050) ^ 0xA24366E6)
                                                                       - ((2 * v4) & 0x38A62B50)
                                                                       + 475207080) >> 1) ^ 0x7796CAB;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((47 * (LODWORD(STACK[0x424]) < 0x270)) ^ a1)) - 12))();
}

uint64_t sub_1001E6124()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  v3 = LODWORD(STACK[0x424])++;
  *(_DWORD *)(v1 + 2496) = v3 + 73583858;
  v4 = *(_DWORD *)aHAwAwAwAwAwAwA;
  v5 = 516615401 * (((~(v2 - 152) | 0x3E25FA4912891144) + ((v2 - 152) | 0xC1DA05B6ED76EEBBLL)) ^ 0x49668DCD9E15E888);
  *(_QWORD *)(v2 - 120) = v5 + 3574677777u;
  *(_DWORD *)(v2 - 112) = (v0 - 185257513) ^ v5;
  *(_DWORD *)(v2 - 108) = v5 + v0 + 1787044281 - 45;
  *(_DWORD *)(v2 - 128) = v5 ^ (v0 + 1787044281) ^ 0xC;
  *(_DWORD *)(v2 - 152) = v5 + 1;
  *(_DWORD *)(v2 - 148) = v0 + 1787044281 - v5;
  *(_QWORD *)(v2 - 136) = (v4 - 1414407980) ^ v5;
  v6 = sub_1000EA338(v2 - 152);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50 + *(int *)(v2 - 144)) - 12))(v6);
}

void sub_1001E622C()
{
  unsigned int v0;
  unsigned int v1;
  int v2;

  if (v0 >= v1)
    v2 = *(_DWORD *)aHAwAwAwAwAwAwA + 1;
  else
    v2 = 694118461;
  *(_DWORD *)aHAwAwAwAwAwAwA = v2;
  JUMPOUT(0x1001E63C4);
}

uint64_t sub_1001E6448(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((324 * (v1 + 8 == ((v2 + 674) ^ a1 ^ (v2 + 1632772207) & 0x9EADDBFF))) ^ v2))
                            - 4))();
}

uint64_t sub_1001E6490()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 184) = 0x905856A00950E67FLL;
  LODWORD(STACK[0x424]) = dword_1003059C0 - 73583857;
  v3 = *(unsigned int *)aHAwAwAwAwAwAwA;
  v4 = 1856021207 * ((v2 + 0x3092E5873C345D6FLL - 2 * ((v2 - 152) & 0x3092E5873C345E07)) ^ 0xDD86721C725D88F9);
  *(_DWORD *)(v2 - 140) = v0 - 1229013907 + v4;
  *(_QWORD *)(v2 - 136) = v3 - v4;
  *(_QWORD *)(v2 - 128) = v4 ^ v1;
  *(_DWORD *)(v2 - 120) = v4 + v0 + 1123495865;
  *(_DWORD *)(v2 - 116) = v4;
  *(_DWORD *)(v2 - 148) = v4 ^ (v0 - 1229013907) ^ 7;
  *(_DWORD *)(v2 - 144) = (v0 - 1229013788) ^ v4;
  v5 = sub_100218378(v2 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_1002C8B50 + *(int *)(v2 - 152)))(v5);
}

uint64_t sub_1001E6570()
{
  int v0;
  uint64_t v1;
  int v2;
  uint32_t v3;
  unsigned int v4;
  int v5;

  LODWORD(STACK[0x2D0]) = v0;
  STACK[0x308] = (unint64_t)malloc_type_malloc(STACK[0x2B8], 0xC5732911uLL);
  v3 = arc4random();
  v4 = v3 + 1465998909 - ((v3 << (((v2 + 80) | 0x40) ^ 0x41)) & 0xAEC2BC7A);
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = v4;
  LODWORD(STACK[0x328]) = 1465998908;
  v5 = v4 ^ LODWORD(STACK[0x328]) ^ (v4 >> 30);
  *(_DWORD *)(v1 + 4) = ((((v2 - 1456) | 0x440) - 792) ^ 0xF0FFDCC3 ^ (1812433253 * v5))
                      + ((-670100790 * v5) & 0xE1FFBDD6)
                      + 1717665619
                      - ((2
                        * (((((v2 - 1456) | 0x440) - 792) ^ 0xF0FFDCC3 ^ (1812433253 * v5))
                         + ((-670100790 * v5) & 0xE1FFBDD6))
                        + 503333420) & 0xAEC2BC7A);
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((v2 - 1456) | 0x449)))();
}

void sub_1001E6694()
{
  JUMPOUT(0x1001E6628);
}

uint64_t sub_1001E66B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  const float *v4;
  int8x16_t v5;
  int8x16_t v6;

  v5 = (int8x16_t)vld1q_dup_f32(v4);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  return sub_1001E5C20(v5, v6, vdupq_n_s32(0x19204408u), (int8x16_t)vdupq_n_s32(0x629199BEu), vdupq_n_s32(0xB26F1C1A), (int8x16_t)vdupq_n_s32(0x7FFFFFFEu), (int8x16_t)vdupq_n_s32(0x3D4BF1B0u), (int8x16_t)vdupq_n_s32(0x6B63DD2Fu), a1, a2, a3, a4);
}

uint64_t sub_1001E702C()
{
  unint64_t v0;

  STACK[0x448] = v0;
  STACK[0x400] = STACK[0x308];
  return ((uint64_t (*)(void))STACK[0x2A0])();
}

uint64_t sub_1001E7040()
{
  free((void *)STACK[0x2A8]);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((1339
                                        * (LODWORD(STACK[0x37C]) == (((LODWORD(STACK[0x34C]) ^ 0x620) + 1835992012) ^ 0x6D6F057C ^ (2 * (LODWORD(STACK[0x34C]) ^ 0x620))))) ^ (LODWORD(STACK[0x34C]) - 1073)))
                            - 8))();
}

void sub_1001E70D0()
{
  const void *v0;

  LODWORD(STACK[0x520]) = STACK[0x38C];
  STACK[0x518] = STACK[0x2C0];
  STACK[0x3F0] = STACK[0x2D8];
  CFRelease(v0);
  JUMPOUT(0x1001E7130);
}

uint64_t sub_1001E7170@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((26 * (a1 >= (v1 ^ (v5 - 66)))) ^ v2)) - v4 + 132))();
}

uint64_t sub_1001E719C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((a1 == v3 + 41) ^ v1) & 1)
                                          * ((v1 - 297365962) & 0x11B971CD ^ 0x1BD)) ^ v1))
                            - 4))();
}

uint64_t sub_1001E71E8()
{
  unsigned int v0;
  _BOOL4 v1;

  v1 = malloc_type_malloc(0x14uLL, 0xAACB7BF8uLL) != 0;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1530 * v1) ^ v0)) - 193 * (v0 ^ 0x1C5) + 768))();
}

uint64_t sub_1001E7238()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  unsigned int v4;
  unint64_t v5;

  STACK[0x2F8] = v2;
  STACK[0x2F0] = v1;
  v3 = 134 * (v0 ^ 0x30E);
  v4 = ((STACK[0x518] ^ *(_DWORD *)(qword_100306950 + ((v3 - 200036676) & dword_100306B58))) & 0x7FFFFFFF)
     * (((v3 + 1189855848) & 0xB91439FF) + 1755343547);
  v5 = 1755343967 * (v4 ^ HIWORD(v4));
  return ((uint64_t (*)(uint64_t))*(&off_1002C8B50
                                           + ((115
                                             * (*(unsigned __int8 *)STACK[0x518] == (byte_10027F8E0[v5 >> 24] ^ byte_10027A4C0[v5 >> 24] ^ byte_10025C850[v5 >> 24] ^ v5 ^ (-33 * BYTE3(v5))))) ^ v3)))(400697702);
}

uint64_t sub_1001E739C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  unint64_t v13;
  int v14;

  v12 = (_BYTE *)(v6 + (int)((v2 ^ 0xFE363FBB) + 29999173 + (v5 & 0xFC6C7F74)));
  v13 = (((((v12 ^ v1) & 0x7FFFFFFF) * v4) >> (((v8 ^ 0xD) + 37) ^ 0xA)) ^ (((v12 ^ v1) & 0x7FFFFFFF)
                                                                                        * v4))
      * v4;
  v14 = (char)(v13 ^ *v12 ^ *(_BYTE *)(v3 + (v13 >> 24)) ^ *(_BYTE *)(v9 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + v7 + 1) ^ (BYTE3(v13) * v11));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v10 + 8 * ((((v14 > 47) << 7) | ((v14 > 47) << 10)) ^ v8)))(a1, ((2 * v14) & 0xF26FFFBE) + (v14 ^ 0x7937FFDF));
}

uint64_t sub_1001E7460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((((char)(v8 ^ *(_BYTE *)(a7 + a3) ^ *(_BYTE *)(a8 + a3) ^ *(_BYTE *)(v9 + a3) ^ ((v10 ^ 0x2A) * a3)) < 58)
                                          * (v10 - 1304)) ^ v10))
                            - 4))();
}

uint64_t sub_1001E74AC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE *v13;
  unint64_t v14;

  v13 = (_BYTE *)(v9 + (int)((a5 ^ 0x5BEBD7BF) - 1542182846 + ((2 * a5) & 0xB7D7AF7C)));
  v14 = ((v7 + (v8 ^ 0x45) - 330 - 1338) ^ ((v8 ^ 0x45) - 1500))
      * ((((v13 ^ v5) & 0x7FFFFFFF) * v7) ^ ((((v13 ^ v5) & 0x7FFFFFFF) * v7) >> 16));
  LODWORD(v13) = (char)(*(_BYTE *)(v6 + (v14 >> 24)) ^ *v13 ^ *(_BYTE *)(v11 + (v14 >> 24)) ^ *(_BYTE *)((v14 >> 24) + v10 + 1) ^ v14 ^ (BYTE3(v14) * v12)) > 47;
  return ((uint64_t (*)(uint64_t, _QWORD))((char *)*(&off_1002C8B50
                                                            + (((32 * (int)v13) | ((_DWORD)v13 << 9)) ^ ((v8 ^ 0x45) - 1292)))
                                                  - 8))(a1, (a2 - 939300095));
}

uint64_t sub_1001E76FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W4>, int a4@<W8>)
{
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v4
                                                             + 8
                                                             * ((27
                                                               * ((((v5 - 742) ^ (v5 + 403781776) & 0xE7EEC379 ^ (a3 < 0x3Au)) & 1) == 0)) ^ v5)))(a1, a2, ((2 * a4) & 0x73FF7FFE) + (a4 ^ 0xB9FFBFFF));
}

uint64_t sub_1001E7768()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 <= (v0 - 48)) * (285 * (v0 ^ 0x175) - 1213)) ^ v0))
                            - 8))();
}

uint64_t sub_1001E779C@<X0>(unsigned __int8 a1@<W4>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((4 * (((a1 < 0x47u) ^ (5 * (a2 ^ 0xC5) + a2 + 31 + 1)) & 1)) & 0xF7 | (8 * (((a1 < 0x47u) ^ (5 * (a2 ^ 0x5C5) + a2 + 287 + 1)) & 1)) | a2))
                            - 8))();
}

uint64_t sub_1001E77E0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (int)(((((v4 - 966378781) ^ 0xC6663C53) + 1291) * (a4 > 0x60)) ^ v4))
                            - 8))();
}

uint64_t sub_1001E781C@<X0>(int a1@<W1>, int a2@<W2>, unsigned __int8 a3@<W4>, int a4@<W8>)
{
  int v4;

  if (a3 >= 0x67u)
    v4 = 1303956645;
  else
    v4 = a2 - 1816590944 + a4 + 966380073;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (int)((1856
                                             * (((a1 + 1053070576) & (((4 * (a4 + 966380073)) ^ 0x3247299Au) + v4)) >> 31)) ^ (a4 + 966378781)))
                            - ((53 * ((a4 + 966380073) ^ 0x6B4u)) ^ 0xDCLL)))();
}

uint64_t sub_1001E78E0@<X0>(int a1@<W0>, char a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  char v13;
  _BYTE *v14;
  unint64_t v15;

  v12 = a3 ^ 0x19C4;
  v13 = (16 * a2 - (((((v12 - 100) | 4) ^ 0xA4) + 32 * a2) & 0xE0) + 121) ^ 0x79 | (v7 + 90);
  v14 = (_BYTE *)(v8 + a1 - 400697702);
  v15 = ((((v14 ^ v4) & 0x7FFFFFFF) * v6) ^ ((((v14 ^ v4) & 0x7FFFFFFF) * v6) >> 16)) * v6;
  *v14 = v15 ^ (BYTE3(v15) * v11) ^ *(_BYTE *)(v5 + (v15 >> 24)) ^ *(_BYTE *)(v10 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + v9 + 1) ^ 0xAD ^ (v13 - ((2 * v13) & 0x5A) - 83);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v12 | (8 * ((a1 - 400697701) > 0x13)))) - 12))();
}

void sub_1001E79D0()
{
  JUMPOUT(0x1001E72C0);
}

uint64_t sub_1001E79D8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 + 657) * (a1 == v3 + 26)) ^ v2)))();
}

uint64_t sub_1001E79FC()
{
  int v0;
  _BOOL4 v1;

  v1 = malloc_type_malloc(0x19uLL, 0xFD034588uLL) != 0;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((((v0 - 338539421) & 0x142DB737 ^ 0x464) * v1) ^ v0)))();
}

uint64_t sub_1001E7A50(_BYTE *a1)
{
  unsigned int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  STACK[0x2F8] = v3;
  STACK[0x2F0] = v2;
  v4 = *(_DWORD *)(qword_100306950 + (dword_100306B58 & 0xFFFFFFFFF413B3F8));
  v5 = 1755343967
     * ((1755343967 * ((STACK[0x518] ^ v4) & 0x7FFFFFFF)) ^ ((1755343967
                                                                          * ((STACK[0x518] ^ v4) & 0x7FFFFFFF)) >> 16));
  v6 = 1755343967
     * ((1755343967 * ((a1 ^ v4) & 0x7FFFFFFF)) ^ ((1755343967 * ((a1 ^ v4) & 0x7FFFFFFF)) >> 16));
  *a1 = byte_10027DBC0[v5 >> (v1 - 15)] ^ *(_BYTE *)STACK[0x518] ^ byte_100279740[v5 >> (v1 - 15)] ^ byte_1002599B0[(v5 >> (v1 - 15)) + 1] ^ byte_10027DBC0[v6 >> 24] ^ byte_100279740[v6 >> 24] ^ byte_1002599B0[(v6 >> 24) + 1] ^ v5 ^ v6 ^ (41 * (v5 >> (v1 - 15))) ^ (41 * BYTE3(v6));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + v1) - 4))();
}

void sub_1001E7B74()
{
  JUMPOUT(0x1001E7AACLL);
}

uint64_t sub_1001E7B7C()
{
  int v0;
  int v1;
  unsigned int v2;

  v2 = v1 + 70;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((8 * (((v0 == 0) ^ (v2 + v2 + 91)) & 1)) & 0xEF | (16 * (((v0 == 0) ^ (v2 + v2 + 91)) & 1))) ^ v2))
                            - 4))();
}

void sub_1001E7BB8()
{
  void *v0;

  free(v0);
  JUMPOUT(0x1001C7C28);
}

uint64_t sub_1001E7BC8@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((1616 * (STACK[0x518] != 0)) ^ (a1 | 4)))
                            - (((((a1 | 4) + 868) | 0x280u) + 12) ^ ((a1 | 4u) + 1508))))();
}

uint64_t sub_1001E7C10(void *a1)
{
  int v1;
  _BYTE *v2;
  unint64_t v3;
  int v4;

  free(a1);
  STACK[0x518] = v3;
  LODWORD(STACK[0x340]) = v4 + 25;
  LODWORD(STACK[0x520]) = STACK[0x340];
  LODWORD(STACK[0x510]) = 65;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((8 * (*v2 == 1)) | ((*v2 == 1) << 9) | (v1 - 1499)))
                            - ((v1 + 1937795367) & 0x8C7F90FD)
                            + 201))();
}

uint64_t sub_1001E7D54()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  int v5;

  v2 = *(unsigned __int8 *)STACK[0x330];
  STACK[0x320] = v2;
  v3 = ((2 * v2) & 0xE4) + (v2 ^ 0xDBF59F72);
  v4 = STACK[0x338];
  LODWORD(STACK[0x308]) = v3;
  v5 = v4 - v3;
  LODWORD(STACK[0x2E0]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1724
                                          * ((((_BYTE)v5 + ((v0 - 37) ^ 0xB3)) & 0xF) == 2 * (((_BYTE)v5 + ((v0 - 37) ^ 0xB3)) & 3))) ^ v0))
                            - 12))();
}

uint64_t sub_1001E7DC4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  BOOL v5;
  char v6;

  v2 = (v0 + 43) | 2;
  v3 = v2 + LODWORD(STACK[0x308]) + 788528302;
  v4 = STACK[0x350] + 3;
  STACK[0x2B0] = STACK[0x3F0];
  LODWORD(STACK[0x2E8]) = 1935652661;
  LODWORD(STACK[0x474]) = 1935652661;
  STACK[0x338] = v4;
  if (v4)
    v5 = 1;
  else
    v5 = v3 == 183868706;
  v6 = !v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((2 * ((v6 ^ (v2 - 1)) & 1)) & 0xEF | (16 * ((v6 ^ (v2 - 1)) & 1))) ^ v2))
                            - ((8 * (v2 ^ 0x1D4u)) ^ 0x6B8)))();
}

uint64_t sub_1001E7E54()
{
  int v0;
  int v1;
  int v2;
  char *v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = (v1 - 258) | 0x1C4;
  v3 = (char *)&STACK[0x4D0] + STACK[0x2B0] - 0x7BB775407D70C8A2;
  STACK[0x328] = (unint64_t)(v3 + 255);
  STACK[0x2C0] = (unint64_t)(v3 + 510);
  STACK[0x330] = (unint64_t)v3;
  STACK[0x300] = (unint64_t)(v3 + 528);
  v4 = STACK[0x340];
  v5 = (LODWORD(STACK[0x340]) - 1816283062);
  STACK[0x318] = (v0 + LODWORD(STACK[0x340]) - 1456910838);
  v6 = qword_100306950;
  v7 = dword_100306B58 & 0xFFFFFFFFF413B3F8;
  STACK[0x310] = -v4 + 1031026413;
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)*(&off_1002C8B50
                                                                      + ((((((v2 ^ 0x2CC) + 800236343) & 0xD04D5BF7 ^ 0xBF8561ACuLL)
                                                                         + 296520604 < v5)
                                                                        * (((v2 ^ 0x2CC) + 194) ^ 0x393)) ^ v2 ^ 0x2CC))
                                                            - 8))(v6, v7);
}

uint64_t sub_1001E7FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  unint64_t v14;

  v13 = ((*(_DWORD *)(a1 + a2) ^ (v5 + v2)) & 0x7FFFFFFF) * v4;
  v14 = (v13 ^ HIWORD(v13)) * v4;
  LODWORD(v14) = byte_10027DBC0[v14 >> 24] ^ *(unsigned __int8 *)(v5 + v2) ^ byte_100279740[v14 >> 24] ^ byte_1002599B0[(v14 >> 24) + 1] ^ v14 ^ ((v14 >> 24) * (v7 - 270));
  *(_BYTE *)(STACK[0x330] + v2) = *(_BYTE *)(v6 + v2) ^ (v14 - (v8 & (2 * v14)) - 103);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (((v2 + 1 + v3 != ((((v7 - 143) ^ v10) * v11) ^ (unint64_t)(v3 + 416)))
                                        * v12) ^ (v7 - 143)))
                            - ((v7 - 143) ^ v9)
                            + 764))();
}

void sub_1001E81BC()
{
  JUMPOUT(0x1001E7F60);
}

void sub_1001E81C4()
{
  int v0;
  void *v1;

  STACK[0x3F0] = STACK[0x2B0];
  free(v1);
  STACK[0x518] = 0;
  LODWORD(STACK[0x520]) = v0;
  JUMPOUT(0x1001C7C28);
}

uint64_t sub_1001E81D4()
{
  int v0;
  int v1;
  char *v2;
  char *v3;

  v1 = LODWORD(STACK[0x340]) + LODWORD(STACK[0x308]) + 1428728482;
  v2 = (char *)&STACK[0x4D0] + STACK[0x2B0] - 0x7BB775407D70C8A2;
  STACK[0x3F0] = STACK[0x2B0] + 1088;
  STACK[0x340] = (unint64_t)(v2 + 959);
  sub_100224ACC(byte_10027B520, v2 + 959, 0x40uLL);
  STACK[0x318] = (unint64_t)(v2 + 1023);
  v3 = sub_100224ACC(byte_100268557, v2 + 1023, 0x40uLL);
  return ((uint64_t (*)(char *))((char *)*(&off_1002C8B50
                                                   + ((((v0 - 383) ^ 0x196 ^ (5 * (v0 ^ 0x112)))
                                                     * ((v1 - 1855095041) < 0xF8)) ^ v0))
                                         - 4))(v3);
}

uint64_t sub_1001E8298()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  v4 = (v2 - 1402945422) & 0x539F3F36;
  LODWORD(STACK[0x474]) = 1935652826;
  *(_BYTE *)(v3 + 640) = *(_BYTE *)(STACK[0x330] + 0 % ((v4 ^ v0) + v1));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((((v4 - 776) | 0x2C4) - 563) ^ v4)) - 12))();
}

uint64_t sub_1001E8360()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t (*v11)(void);

  v5 = (unsigned __int16)(v3 + 14256) % (unsigned __int16)(((v4 - 748) | 0x218) - 219);
  v6 = *(unsigned __int8 *)(v1 + (v3 + v0 + 142) % 0x13Fu);
  HIDWORD(v8) = v6 ^ 0x18;
  LODWORD(v8) = v6 << 24;
  v7 = v8 >> 29;
  HIDWORD(v8) = *(unsigned __int8 *)(v1 + (v3 + v0 + 98) % 0x13Fu);
  LODWORD(v8) = (HIDWORD(v8) ^ 0x18) << 24;
  v9 = ((v8 >> 27) ^ 0xFFFFFFDB)
     + ((2 * (v8 >> 27)) & 0xFFFFFFB6)
     + (*(unsigned __int8 *)(v1 + v5) ^ (v7 + (~(2 * v7) | 0x37) - 27) ^ 0xFFFFFFFC)
     + 37;
  HIDWORD(v8) = *(unsigned __int8 *)(v1 + (v3 + v0) % 0x13Fu);
  LODWORD(v8) = (HIDWORD(v8) ^ 0x18) << 24;
  v10 = ((v8 >> 25) ^ 0xFFFFFFD2) - ((2 * (v8 >> 25)) & 0x5A) + (v9 ^ 0x27) + ((2 * v9) & 0x4E) + 1;
  v11 = (uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((476 * (v3 + 1 != v2 + 1276)) ^ v4)) - 12);
  *(_BYTE *)(v1 + v5) = v10 - ((2 * v10 + 12) & 0x30) + 30;
  return v11();
}

_QWORD *sub_1001E84A4@<X0>(unsigned int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  char v3;
  char v4;
  _BYTE *v5;
  int v6;
  char v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  unsigned int v23;
  char v24;
  char v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  char v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned __int8 v63;
  unsigned int v64;
  unsigned int v65;
  char v66;
  char v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  int v92;
  int v93;
  char v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  uint64_t v106;
  unsigned int v107;
  int v108;
  char v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unint64_t v115;
  unsigned int v116;
  int v117;
  int v118;
  char v119;
  char v120;
  int v121;
  int v122;

  LODWORD(STACK[0x310]) = 0;
  v8 = (v5[109] ^ 0x18)
     - ((((a3 - 217) | 2) - 197) & (2 * (v5[109] ^ 0x18)))
     + 1554726207;
  v9 = v5[21];
  LODWORD(STACK[0x280]) = (a3 - 217) ^ 0x122;
  v10 = ((((a3 + 39) ^ 0x22) - 75) ^ v9)
      + 406554332
      + (~(2 * ((((a3 + 39) ^ 0x22) - 75) ^ v9)) | 0xFFFFFE47)
      + 1;
  v11 = ((v10 ^ 0x183B86DC | v8 ^ 0x5CAB3D3F) - ((2 * (v10 ^ 0x183B86DC | v8 ^ 0x5CAB3D3F)) & 0xDDDDDDDD) + 46) & 0x73 ^ 0x31;
  v12 = ((((v11 | 0x27751349) - (v11 | 0xD88AECB6) - 661984074) & 0x57501D7 ^ 0x8086104)
       + (((v11 | 0x27751349) - (v11 | 0xD88AECB6) - 661984074) ^ 0xB7F59ED3)
       - ((((v11 | 0x27751349) - (v11 | 0xD88AECB6) - 661984074) ^ 0xB7F59ED3) & 0x85D7)) ^ 0x9DFD685E | (((v10 ^ 0x182B06DC) & (v8 ^ v6)) - ((2 * ((v10 ^ 0x182B06DC) & (v8 ^ v6))) & 0x32) - 1782902759) ^ 0x95BB1019;
  v13 = (v12 - ((2 * v12) & 0x44DBCDB2) + 1651369689) ^ 0x626DE6D9;
  v14 = ((2 * v13 * v13 * v13) & 0xAEBFFFFE) + ((v13 * v13 * v13) ^ 0xD75FFFFF);
  v15 = STACK[0x340];
  LOBYTE(v8) = *(_BYTE *)(STACK[0x340] + (v5[40] & 0x3F ^ 0x18)) & 0x75 ^ 0x31;
  LOBYTE(v8) = (((v8 - ((2 * v8) & 0x22) + 19) & 0x86 ^ 0x82)
              + ((v8 - ((2 * v8) & 0x22) + 19) ^ 0x4C)
              - (((v8 - ((2 * v8) & 0x22) + 19) ^ 0x4C) & 0x86)) ^ 0x8C | ((((v5[352] & 0x80) - (v5[352] | 0xF5)) ^ 0xB0)
                                                                         - 1) ^ 0x38;
  v16 = v8 - (v4 & (2 * v8)) - 37;
  LOBYTE(v8) = v5[355];
  v17 = STACK[0x318];
  LOBYTE(v10) = (*(_BYTE *)(STACK[0x318] + (v5[52] & 0x3F ^ 0x18)) ^ 0xE6) & (v8 ^ 0xE6);
  LOBYTE(v8) = (v10 - ((2 * v10) & 0x46) + 35) ^ 0x23 | (((2 * v8) & 0x10) + (v8 & 0xB8 ^ 0xDF) + 120) ^ 0x4F;
  v18 = v16 ^ v3;
  v19 = (v8 - ((2 * v8) & 0x56) + 43) ^ 0x2B;
  LOBYTE(v8) = (v18 | v19) - 2 * ((v18 | v19) & 3);
  LOBYTE(v8) = ((-36 - v8) | 0xDE) + ((v8 + 51) & 0xA);
  v20 = (((-35 - v8) ^ 0x33) + ((93 - v8) & 0x83) - (((-35 - v8) ^ 0x33) & 0x83)) ^ 0x4D | ((v18 & v19)
                                                                                          - ((2 * (v18 & v19)) & 0xD6)
                                                                                          - 21) ^ 0xEB;
  v21 = (v5[94] ^ 0x18) + (v20 ^ 0x8B) - ((2 * v20) & 0xE8) + 117;
  v5[94] = v21 - ((2 * v21) & 0x30) + 24;
  v22 = v5[139];
  v23 = (v5[366] ^ 0xFFFFFFE6) * (v5[366] ^ 0xFFFFFFE6);
  LODWORD(STACK[0x298]) = (v5[343] ^ 0xFFFFFFE6) - 45 * (~v23 + 2 * v23);
  v24 = (((v22 & 0x12 ^ 0x12) - (v22 & 0x12) + (v22 & 0x36 ^ 4)) | byte_100256B60[v5[85] & 0x3F ^ 0x18] & 0x40) ^ 6;
  v25 = (v24 - ((2 * v24) & 0x6A) + 53) & 0xF7 ^ 0x3D;
  v5[64] ^= (v25 - 2 * (v25 & 1) + 1) ^ 1;
  v26 = *(unsigned __int8 *)(v15 + (v5[157] & 0x3F ^ 0x18)) ^ 0x19;
  LODWORD(STACK[0x2D0]) = v26 - 2 * (v26 & 1);
  v27 = (v5[125] & 0x41) + (v5[125] & 0x88 ^ 9) + 15;
  v28 = (((v27 & 0xFFFFFF8E ^ 0xFFFFFF89) - 1) & 0xFFFFFFFD | v27 & 0x51) ^ 0xFFFFFF9A;
  LODWORD(STACK[0x2C8]) = v28 - ((2 * v28) & 0xFFFFFFF9);
  v29 = *(unsigned __int8 *)(v15 + (v5[104] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6;
  v30 = v5[387];
  v31 = ((v30 & 0xA1 ^ 0xFFFFFF9B) + (v30 & 0xA1 ^ 0xA0 | 0xFFFFFFC7) + ((v30 & 0xA1 ^ 0xA0) & 0x20) - 63) ^ 0xFFFFFFC3;
  v32 = v31 | ((((v30 & 0x26) + (v30 & 0x3E ^ 0x36)) | 0xFFFFFF80) - ((v30 & 0x3E ^ 0x36) & 0xFFFFFFE7)) ^ 0xFFFFFF88;
  v33 = ((v32 - 2 * (v32 & 0x77 ^ v31 & 1) + 118) ^ 0x76) & ((v29 * v29 - ((2 * v29 * v29) & 0x38) - 100) ^ 0xFFFFFF9C);
  LODWORD(STACK[0x2B8]) = v33 - ((2 * v33) & 0xFFFFFF8A);
  LOBYTE(v33) = (v5[52] ^ 0xE7) + (v5[175] ^ 0x18) + 1;
  v5[175] = v33 - ((2 * v33) & 0x30) + 24;
  v34 = 205 * (*(unsigned __int8 *)(v17 + (v5[44] & 0x3F ^ 0x18)) ^ 0xE6);
  LODWORD(STACK[0x2A8]) = (v34 >> 10) - ((v34 >> 9) & 0x1E);
  v5[100] = (v5[100] ^ 0x18) - ((2 * (v5[100] ^ 0x18) + 58) & 0x30) + 21;
  v5[327] = 26;
  LOBYTE(v34) = (v5[386] ^ 0xE6) + (*(_BYTE *)(v15 + (v5[17] & 0x3F ^ 0x18)) ^ 0xE6);
  LOBYTE(v31) = byte_100256B60[v5[57] & 0x3F ^ 0x18];
  v5[386] = v34 - ((2 * v34) & 0xCC) - 26;
  LOBYTE(v34) = ((v31 & 0x60 ^ 0x25) + (v31 & 0x13) - 1) ^ 0x74;
  LOBYTE(v11) = ((v34 | 0xE8) - (v34 | 0x17) + 23) ^ 0xB9 | ((v5[415] & 0x8C ^ 0x7B)
                                                           + ((2 * (v5[415] & 0x8C)) | 0x2C)
                                                           + 107) ^ 0x96;
  v35 = (v11 - ((2 * v11) & 0x8C) - 58) ^ 0xC6;
  v36 = (v5[101] ^ 0x18)
      + (((171 * v35) >> 9) ^ 0x30)
      - (((171 * v35) >> 8) & 0x9E)
      - 48;
  v5[101] = v36 - ((2 * v36) & 0x30) + 24;
  v37 = byte_100256B60[v5[217] & 0x3F ^ 0x18];
  v38 = (((v37 & 0x75 ^ 0xFFFFFF8F) - ((2 * v37) & 0x60) + 48) ^ 0x30) & (v5[398] ^ 0xFFFFFFE6);
  v39 = (v38 - ((2 * v38) & 0xFFFFFFCF) + 103) ^ 0x67 | ((v37 & 0x8A) - ((2 * v37) & 0x14) + 59) ^ 0x3B;
  v40 = (v39 - ((2 * v39) & 0xFFFFFFE7) - 13) ^ 0xFFFFFFF3 | (v5[7] >> 1) ^ 0xC;
  LOBYTE(v40) = (v5[249] ^ 0x18) + (v40 ^ 0x18) - ((2 * v40) & 0xCF) - 24;
  v5[249] = v40 + (~(2 * v40) | 0xCF) + 25;
  v5[30] ^= 0x58u;
  LOBYTE(v40) = *(_BYTE *)(v15 + (v5[241] & 0x3F ^ 0x18));
  LOBYTE(v40) = (v40 & 0xE4 ^ 0x7C) - (v40 | 0xE7) - 25;
  LOBYTE(v40) = (((v40 ^ 0x67) + ((2 * v40) & 0x40) - 35) | v5[383] & 3 ^ 2) ^ 0xDC;
  LOBYTE(v34) = (v40 - ((2 * v40) & 0x2C) - 106) ^ 0x96;
  LOBYTE(v34) = (((v34 * v34) ^ 0x5E) + ((2 * v34 * v34) & 0xBC) - 94) * v34;
  LODWORD(STACK[0x2E8]) = v14;
  LOBYTE(v40) = *(_BYTE *)(v15 + ((63 - (_BYTE)v14) & 0x3F));
  v5[215] = v34 + (~(2 * v34) | 0xCF) + 25;
  LOBYTE(v34) = *(_BYTE *)(v15 + (v5[13] & 0x3F ^ 0x18));
  v5[446] = v40;
  v41 = ((((v34 & 0x2C ^ 0x1F) + 63) & 0x2C ^ 0xAB) - ((2 * ((v34 & 0x2C ^ 0x1F) + 63)) & 8) - 44) ^ 0xD4;
  LOBYTE(v40) = (v5[146] ^ 0xAA) + 78 + ((2 * (v5[146] ^ 0x10)) & 0x64);
  LOBYTE(v40) = ((2 * ((v40 * v40 + 16) ^ 0x10) * v40) & 0x54) + ((((v40 * v40 + 16) ^ 0x10) * v40) ^ 0xAA);
  v42 = (v41 - ((2 * v41) & 0x1F6) - 1643132165) ^ 0x9E0FCAFB;
  v5[381] = ((v42 << ((v40 + 6) & 7)) - ((2 * (v42 << ((v40 + 6) & 7))) & 0x6A) + 53) ^ ((v42 >> ((2 - v40) & 7))
                                                                                       - ((2 * (v42 >> ((2 - v40) & 7))) & 0x26)
                                                                                       + 19) ^ 0xC0;
  v43 = (v5[131] ^ 0x18) - ((2 * (v5[131] ^ 0x18)) & 0x172) + 554257337;
  v44 = (v5[393] ^ 0xE6) - ((2 * (v5[393] ^ 0xE6)) & 0xCA) + 655203941;
  v45 = (((v44 ^ 0x270D9E65 | v43 ^ 0x21094BB9) - ((2 * (v44 ^ 0x270D9E65 | v43 ^ 0x21094BB9)) & 0x3FD2) + 8169) ^ 0x1FE9) & (((v5[400] ^ 0xE6) - ((2 * (v5[400] ^ 0xE6)) & 0x68) + 1055408436) ^ 0x3EE84134);
  v46 = (v45 - ((2 * v45) & 0x80E92B4) + 1141328218) ^ 0x4407495A | (((v44 ^ 0x21090E65) & (v43 ^ 0x3B9))
                                                                   - ((2 * ((v44 ^ 0x21090E65) & (v43 ^ 0x3B9))) & 0x5F909852)
                                                                   - 272085975) ^ 0xEFC84C29;
  LOBYTE(v43) = *(_BYTE *)(v17 + (v5[220] & 0x3F ^ 0x18)) & 3 ^ 6;
  LOBYTE(v8) = (v43 - ((2 * v43) & 4) - 50) ^ 0xD6;
  LOBYTE(v8) = ((2 * v8) & 0xE7) + (v8 ^ 0xF3);
  v47 = (v46 - ((2 * v46) & 0x62C05DFE) + 1902128895) ^ 0x71602EFF;
  LOBYTE(v47) = ((v47 >> (v8 + 13)) - ((2 * (v47 >> (v8 + 13))) & 0xF2) + 121) ^ ((v47 << (-5 - v8))
                                                                                - ((2 * (v47 << (-5 - v8))) & 0xAE)
                                                                                + 87);
  LOBYTE(v47) = (v5[330] ^ 0xE6) + (v47 ^ 0x51) + ((2 * v47) ^ 0x5C) - 127;
  v5[330] = v47 - ((2 * v47) & 0xCC) - 26;
  v48 = (v5[10] >> 1) ^ 0xC;
  LOBYTE(v43) = *(_BYTE *)(v17 + (v5[27] & 0x3F ^ 0x18));
  LOBYTE(v43) = (v43 ^ 0x19) + 2 * (v43 ^ 0xE6) + 1;
  LOBYTE(v43) = ((2 * v43 * v43) & 0x42) + ((v43 * v43) ^ 0x21);
  v49 = (v48 - ((2 * v48) & 0xB8) + 858890332) ^ 0x3331A05C;
  v50 = ((v49 >> ((v43 - 1) & 7)) - ((2 * (v49 >> ((v43 - 1) & 7))) & 0x98) + 76) ^ ((v49 << ((1 - v43) & 7))
                                                                                   - ((2 * (v49 << ((1 - v43) & 7))) & 0xC2)
                                                                                   + 225);
  v51 = (v5[67] ^ 0x18) + (v50 ^ 0x2C) + ((4 * (v50 >> 1)) ^ 0xFFFFFFA7) - 128;
  v5[67] = v51 - ((2 * v51) & 0x30) + 24;
  LOBYTE(v51) = byte_100256B60[v5[136] & 0x3F ^ 0x18] & 0xAC ^ 0x84;
  LOBYTE(v51) = ((((2 * v51) & 0x18) - v51 - 77) ^ 0x36) - 1;
  v52 = v5[195];
  LOBYTE(v51) = (v52 ^ 0x18) + (v51 & 0xEF ^ 0x6B) + ((2 * v51) & 0xD8 ^ 0x28) - 125;
  v5[195] = v51 + ~(2 * (v51 & 0x99 ^ v52 & 1)) + 25;
  v53 = (*(unsigned __int8 *)(v15 + (v5[182] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6) + 13;
  v54 = ((2 * v53) & 0xFFFFFFAC) + (v53 ^ 0x56);
  v55 = 171 * (byte_100256B60[v5[56] & 0x3F ^ 0x18] ^ 0xE3);
  v56 = ((v55 >> 8) & 0xF2) + ((v55 >> 9) ^ 0x79);
  v57 = *(unsigned __int8 *)(v15 + (v5[196] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6;
  v58 = *(unsigned __int8 *)(v17 + (v5[21] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6;
  v59 = ((v58 | v57) - ((2 * (v58 | v57)) & 0x18) + 12) & 0x49 ^ 9;
  v60 = (((2 * v59) & 0xFFFFFF8F) - v59 - 70) ^ 0xFFFFFFBA;
  v61 = ((v60 | 0xFFFFFFA1) - (v60 | 0x5E) + 94) ^ 0xFFFFFFA0 | ((v58 & v57) + (~(2 * (v58 & v57)) | 0xFFFFFFA5) - 82) ^ 0xFFFFFFAD;
  v62 = (*(unsigned __int8 *)(v17 + (v5[127] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6)
      + (v5[423] ^ 0xFFFFFFE6)
      + (v61 ^ 0xFFFFFF87)
      - 16 * (v61 >> 3)
      + 121;
  v5[423] = v62 - ((2 * v62) & 0xCC) - 26;
  LOBYTE(v62) = (((*(_BYTE *)(v17 + (v5[65] & 0x3F ^ 0x18)) & 2 ^ 0xA) - 52) ^ 0xDC) & (v5[140] ^ 8);
  v5[369] = v62 - ((2 * v62) & 4) - 26;
  v63 = ((v5[134] & 0x89 ^ 0x3E) - ((2 * (v5[134] & 0x89 ^ 0x3E) + 28) & 0x10) + 86) ^ 0xF8;
  v5[321] = v63 / 5u - (((205 * v63) >> 9) & 0xCC) - 26;
  v64 = 171 * (v5[339] ^ 0xE6);
  v65 = ((v64 >> 9) - ((v64 >> 8) & 0x6A) + 53) & 0x4D ^ 0xFFFFFFC4;
  v66 = (*(_BYTE *)(v15 + (v5[39] & 0x3F ^ 0x18)) ^ 0xE6) + 50;
  v67 = (v66 ^ 0x3B) + ((2 * v66) & 0x36) + 5;
  LOBYTE(v65) = (((2 * v65) | 0x4C) - v65 + 90) ^ 0x67 | ((v67 & 0x32) - ((2 * v67) & 0x20) - 36) ^ 0xDC;
  LOBYTE(v65) = (v5[330] ^ 0xE6) + (v65 ^ 0xB2) + ((2 * v65) & 0x64) + 78;
  v5[330] = v65 - ((2 * v65) & 0xCC) - 26;
  LOBYTE(v65) = (v5[322] & 7 ^ 6 | 0x8D) - (v5[322] & 7 ^ 6 | 0x72) + 114;
  LOBYTE(v57) = v65 ^ 0xD2;
  LOBYTE(v58) = v65 ^ 0xD;
  v68 = ((a1 >> ((7 - (((2 * v58) & 0xBE) + v57)) & 7))
       - ((0x6Eu >> ((7 - (((2 * v58) & 0xBE) + v57)) & 7)) & 0x36)
       - 1453256741) ^ ((a1 << (((2 * v58) & 0xBE) + v57 - 95))
                      - 1431738406
                      + (~(110 << (((2 * v58) & 0xBE) + v57 - 95)) | 0xAAAD304D));
  v69 = ((((v68 & a2 ^ 0x3C8682F) + 78284 + ((2 * (v68 & a2 ^ 0x3C8682F)) & 0x26380 ^ 0x3FFE7)) | 1) ^ 0x131CC) & (((v5[401] ^ 0xE6) - ((2 * (v5[401] ^ 0xE6)) & 0x144) - 1457111134) ^ 0xA9263FA2);
  v70 = (v69 - ((2 * v69) & 0x368F65AE) - 1689799977) ^ 0x9B47B2D7 | ((v68 & 0x2C | 0x258CDFD3)
                                                                    - ((v68 & 0x2D)
                                                                     + 264832)
                                                                    + (((v68 & 0x2D) + 264832) & 0x40AAC)) ^ 0x258CDFD3;
  v71 = v70 + (~(2 * v70) | 0xFFFFFFC9) - 100;
  LODWORD(STACK[0x2A0]) = v71 ^ 0xFFFFFF8E;
  LODWORD(STACK[0x29C]) = (2 * v71) & 0x2A ^ 0x22;
  LOBYTE(v71) = (v5[237] ^ 0x18) + (byte_100256B60[v5[201] & 0x3F ^ 0x18] ^ 0xFA);
  v5[237] = v71 - ((2 * v71) & 0x30) + 24;
  v72 = *(unsigned __int8 *)(v17 + (v5[120] & 0x3F ^ 0x18)) ^ 0xE6;
  v73 = (v5[400] ^ 0xE6) - 2 * ((v5[400] ^ 0xE6) & 0x7F) + 1473653631;
  v74 = v72 - ((2 * v72) & 0x9E) + 265454415;
  v75 = (((v74 ^ 0xFD2834F | v73 ^ 0x57D62B7F) - ((2 * (v74 ^ 0xFD2834F | v73 ^ 0x57D62B7F)) & 0x816) + 3083) ^ 0xC0B) & (((v5[392] ^ 0xE6) - ((2 * (v5[392] ^ 0xE6)) & 0x142) + 2006919329) ^ 0x779F28A1);
  v76 = (v75 - ((2 * v75) & 0x260FAF48) + 319281060) ^ 0x1307D7A4 | (((v74 ^ 0x7D0034F) & (v73 ^ 0x22B7F))
                                                                   - ((2 * ((v74 ^ 0x7D0034F) & (v73 ^ 0x22B7F))) & 0x311BF0E0)
                                                                   - 661784464) ^ 0xD88DF870;
  v77 = ((v5[436] ^ 0xE6) - ((2 * (v5[436] ^ 0xE6)) & 0x1E4) + 1103120626) ^ 0x41C048F2;
  v78 = v76 - ((2 * v76) & 0x7A0EE6B6) + 1023898459;
  v79 = ((v78 ^ 0x3D07735B | v77) - ((2 * (v78 ^ 0x3D07735B | v77)) & 0x1C) + 14) & 0x4F ^ 0x47;
  v80 = (v79 - 530376418 - ((2 * v79) & 0xFFFFFF8F) + 57) ^ 0xE063191E | (((v78 ^ 0x35B) & v77)
                                                                        - ((2 * ((v78 ^ 0x35B) & v77)) & 0x32DBCD1E)
                                                                        + 1500374671) ^ 0x596DE68F;
  LODWORD(STACK[0x290]) = v80 - ((2 * v80) & 0xF2);
  LODWORD(STACK[0x308]) = v54;
  v81 = v5[327];
  v82 = ((*(unsigned __int8 *)(v15 + (((_BYTE)v54 + 42) & 0x3F)) >> 1) ^ 0x73) & (v81 ^ 0x66);
  LOBYTE(v81) = ((((v5[208] ^ 0x18) + 43) ^ 0x3A) + ((2 * ((v5[208] ^ 0x18) + 43)) & 0x74) - 58) & (v81 ^ 0x19);
  v83 = (v81 + (~(2 * v81) | 0x63) + 79) ^ v7 | (v82 - ((2 * v82) & 0xCC) + 102) ^ 0x66;
  v84 = (v5[335] ^ 0xE6) + (v83 ^ 0xD7) + ((2 * v83) & 0xAE) + 41;
  v5[335] = v84 - ((2 * v84) & 0xCC) - 26;
  v85 = *(_BYTE *)(v17 + (v5[162] & 0x3F ^ 0x18));
  LOBYTE(v82) = (((v85 & 0x81 ^ 0xFE) + ((2 * (v85 & 0x81)) ^ 0xBB) - 92) ^ 0xA3) & (v5[323] ^ 0xE6);
  v86 = (v82 - ((2 * v82) & 0x6C) + 54) ^ 0x36 | v85 & 0x7E ^ 0x66;
  LOBYTE(v82) = *(_BYTE *)(v15 + (v5[65] & 0x3F ^ 0x18));
  v5[394] ^= (((v86 + (~(2 * v86) | 0xA1) + 48) & 0xFE) >> 1) ^ 0x17;
  v5[356] ^= 0x1A ^ ((v82 ^ 0xE6) - ((2 * (v82 ^ 0xE6) + 98) & 0x68) + 101);
  v87 = (v5[103] ^ 0xE7) + (v5[436] ^ 0xE6) + 1;
  v5[436] = v87 - ((2 * v87) & 0xCC) - 26;
  v88 = *(_BYTE *)(v17 + (v5[173] & 0x3F ^ 0x18));
  v89 = ~(((2 * v88) ^ 0x33) + ((4 * v88) ^ 0x98)) + (v5[227] ^ 0x18);
  v5[227] = v89 - ((2 * v89) & 0x30) + 24;
  LODWORD(STACK[0x2D8]) = v56;
  v5[383] ^= *(_BYTE *)(v17 + (((_BYTE)v56 + 7) & 0x3F)) ^ 0xE6;
  v90 = (v5[26] ^ 0x18) * (v5[26] ^ 0x18);
  v91 = (v5[350] ^ 0xE6) + (v90 ^ 0xC9) - ((2 * v90) & 0x6C) + 55;
  v5[350] = v91 - ((2 * v91) & 0xCC) - 26;
  LOBYTE(v82) = *(_BYTE *)(v15 + (v5[136] & 0x3F ^ 0x18)) ^ 0xE6;
  LOBYTE(v65) = (v5[385] ^ 0xE6) - ((2 * (v5[385] ^ 0xE6)) & 0xBE) + 95;
  LOBYTE(v82) = v82 - ((2 * v82) & 0x1F) - 113;
  LOBYTE(v8) = (((v82 ^ 0x8F | v65 ^ 0x5F) - ((2 * (v82 ^ 0x8F | v65 ^ 0x5F)) & 0xAE) + 87) ^ 0x57) & (((v5[378] ^ 0xE6) - ((2 * (v5[378] ^ 0xE6)) & 0x1C) + 14) ^ 0xE);
  LOBYTE(v8) = (v8 - ((2 * v8) & 0x86) + 67) ^ 0x43 | (((v82 ^ 0x8F) & (v65 ^ 0x5F))
                                                     - ((2 * ((v82 ^ 0x8F) & (v65 ^ 0x5F))) & 0xE8)
                                                     - 12) ^ 0xF4;
  LOBYTE(v8) = v8 - ((2 * v8) & 0xE8) - 12;
  LOBYTE(v65) = ((v8 & 0xBD ^ 0x3C | 0x6F) - (v8 & 0xBD ^ 0x3C | 0x90) - 112) ^ 0x8D;
  LOBYTE(v82) = ((2 * v65) | 0x88) - v65 + 60;
  v92 = (v5[374] >> 1) ^ 0x73;
  LOBYTE(v8) = (((v8 & 0xC2 ^ 0xFD) - ((2 * (v8 & 0xC2 ^ 0xFD)) & 4) - 26) ^ 0x1E) & ((v92 - ((2 * v92) & 0x30) - 104) ^ 0x98);
  LOBYTE(v8) = (v8 - ((2 * v8) & 0xA2) - 47) ^ 0xD1 | v82 ^ 0xAE;
  v5[358] = (v8 - ((2 * v8) & 0x36) - 101) ^ 0x7D;
  v93 = v5[422] ^ 0xE6;
  v94 = v93 - 34;
  v95 = v93 + 1824918494 - ((2 * v93) & 0x184) - 28;
  v96 = (v95 & 0x8A ^ 0x41D41509) + (v94 & 2 ^ 0xB22BE206) - ((v95 & 0x8A ^ 0x41D41509) & 0x40141403);
  v97 = (v95 ^ 0x743D) & (((v5[92] ^ 0x18)
                         - ((2 * (v5[92] ^ 0x18)) & 0x112)
                         - 791297655) ^ 0xD0D5C189);
  v98 = (v97 - ((2 * v97) & 0x18BD41DC) - 1939955474) ^ 0x8C5EA0EE | v96 ^ 0xB3EBE38C;
  v99 = 205 * (v5[155] ^ 0x18);
  LOBYTE(v99) = ((v99 >> 10) - ((v99 >> 9) & 4) + 2) & 7 ^ 6;
  LOBYTE(v99) = (v99 - 2 * (v99 & 3) + 91) ^ 0x4F;
  LOBYTE(v82) = ((v99 | 0x5E) - (v99 | 0xA1) + 33) ^ 0xCE;
  v100 = (v98 - ((2 * v98) & 0x5CC5DE48) - 295506140) ^ 0xEE62EF24;
  v101 = v100 << ((((v99 | 0x5E) - (v99 | 0xA1) + 33) ^ 0x36) + ((2 * v82) & 0xF0) + 8);
  v102 = (v101 + (~(2 * v101) | 0xFFFFFF61) + 208) ^ ((v100 >> (-(char)v82 & 7))
                                                    - 2 * ((v100 >> (-(char)v82 & 7)) & 1)
                                                    + 1);
  LOBYTE(v38) = (v5[395] ^ 0xE6) + (v102 ^ 0xCC) + ((2 * v102) & 0xFB ^ 0x67) - 1;
  v5[395] = v38 - ((2 * v38) & 0xCC) - 26;
  v5[345] ^= 0xFDu;
  v5[343] = LOBYTE(STACK[0x298]) - 45 + (~(2 * (LOBYTE(STACK[0x298]) - 45)) | 0x33) - 25;
  v103 = v5[69] & 0xAC ^ 0xFFFFFF88;
  LODWORD(STACK[0x298]) = (((((v103 | 0xFFFFFFE2) - (v103 | 0x1D) + 29) & 0xFFFFFFBC ^ 0x62)
                          + ((2 * ((v103 | 0xFFFFFFE2) - (v103 | 0x1D) + 29)) & 0x30 ^ 0x7F)
                          + 89) ^ 0x58)
                        * (*(unsigned __int8 *)(v15 + (v5[116] & 0x3F ^ 0x18)) ^ 0x19);
  LOBYTE(v103) = (2 * *(_BYTE *)(v17 + (v5[85] & 0x3F ^ 0x18))) ^ 0xCC;
  v5[96] = (v103 - ((2 * v103) & 0x4C) - 89) ^ 0x40;
  v104 = (v5[39] & 0x48 ^ 8) + ((v5[39] >> 1) & 0x6C ^ 0x3B) + 47;
  LODWORD(STACK[0x288]) = v104;
  v105 = (v104 & 0xFE) - ((2 * v104) & 0xF0) - 276130184;
  LOBYTE(v102) = (*(_BYTE *)(v15 + (((v104 & 0xFE) - ((2 * (_BYTE)v104) & 0xF0) + 120) & 0x3E ^ 0x38)) ^ 0xE6) & (byte_100256B60[v5[33] & 0x3F ^ 0x18] ^ 5);
  v5[373] ^= 0x89 ^ (v102 - ((2 * v102) & 0x12) - 119);
  LOBYTE(v102) = (v5[239] & 0x3F ^ 0x35) + (v5[239] & 0x3D ^ 0x88) - ((v5[239] & 0x3F ^ 0x35) & 0xFD);
  v106 = ((v102 & 0x9F ^ 0x8E) + (v102 ^ 0x51) - ((v102 ^ 0x51) & 0x9F)) ^ 0x5ELL;
  LOBYTE(v102) = *(_BYTE *)(v17 + v106) ^ 0xE6 | v5[148] ^ 0x18;
  LOBYTE(v102) = ((v102 + (~(2 * v102) | 0xC3) - 97) & 0xC6 ^ 0xC3) - 1;
  v107 = *(unsigned __int8 *)(v17 + (v5[105] & 0x3F ^ 0x18));
  v108 = ((32 * ((v107 >> 4) & 1)) | 0x49) - (v107 & 0x18);
  LOBYTE(v102) = ((v102 & 0x84 ^ 0xA1) + (v102 ^ 0x4C) - ((v102 ^ 0x4C) & 0x84)) ^ 0xAD | ((v108 ^ 0xF6)
                                                                                         + ((2 * v108) & 0xA0)
                                                                                         + 44) ^ 0x6B;
  v109 = v102 - ((2 * v102) & 0x60);
  LOBYTE(v108) = v5[354];
  LOBYTE(v102) = (v5[221] ^ 0x18) & (v108 ^ 0xE6);
  LOBYTE(v108) = (v5[339] ^ 0xE6) & (v108 ^ 0x19);
  LOBYTE(v102) = (v108 - ((2 * v108) & 0xFB) - 3) ^ 0xFD | (v102 - ((2 * v102) & 0xB2) - 39) ^ 0xD9;
  v5[441] = (v102 - ((2 * v102) & 0xCF) + 39) & 0x7F ^ 0xC1;
  v110 = 205 * (*(unsigned __int8 *)(v15 + (v5[171] & 0x3F ^ 0x18)) ^ 0xE6);
  v111 = (v5[24] ^ 0x18) + ((v110 >> 10) ^ 0x59) + ((v110 >> 9) & 0x32) - 89;
  v5[44] ^= 0x62 ^ (v111 - ((2 * v111) & 0xC4) + 98);
  v112 = (v5[137] >> 1) & 0x24 ^ 0xE;
  LOBYTE(v112) = ((v112 | 0x62) - (v112 | 0x9D) - 99) ^ 0x68 | v5[329] & 0x53 ^ 0x42;
  v5[423] ^= 0x97 ^ (v112 + (~(2 * v112) | 0xD1) - 104);
  v5[344] ^= (3 * (((v5[67] & 0xD0 ^ 0x3F) + ((2 * (v5[67] & 0xD0)) ^ 0x9D) - 14) ^ 0xF1)
                             - ((6 * (((v5[67] & 0xD0 ^ 0x3F) + ((2 * (v5[67] & 0xD0)) ^ 0x9D) - 14) ^ 0xF1)) & 0xD8)
                             - 18) ^ 0xEE;
  v5[370] = 83;
  v5[419] ^= 0xBDu;
  LOBYTE(v108) = *(_BYTE *)(v15 + (v5[37] & 0x3F ^ 0x18));
  LOBYTE(v112) = ((v108 & 0x56 ^ 0x74) - (v108 | 0xF7)) ^ 0x3B | ((v5[400] & 0xA1 ^ 0xC1)
                                                                - ((2 * (v5[400] & 0xA1 ^ 0xC1)) & 0x83)
                                                                - 51) ^ 0xAC;
  LOBYTE(v112) = ((v112 - ((2 * v112) & 0x6C) - 74) ^ 0xB8) + (v5[188] ^ 0x18);
  LODWORD(STACK[0x294]) = byte_100256B60[v106];
  LOBYTE(v55) = v112 - ((2 * v112) & 0x30);
  LOBYTE(v112) = v5[61] ^ 0x18;
  LOBYTE(v104) = byte_100256B60[v5[193] & 0x3F ^ 0x18] ^ 5;
  LOBYTE(v108) = (((v104 | v112) - ((2 * (v104 | v112)) & 0xE4) + 114) ^ 0x72) & (v5[403] ^ 0xE6);
  LOBYTE(v104) = (v108 + (~(2 * v108) | 0xDD) + 18) ^ 0x11 | ((v104 & v112) - ((2 * (v104 & v112)) & 0x14) + 10) ^ 0xA;
  LOBYTE(v104) = (v5[357] ^ 0xE6) + (v104 ^ 0xC2) - ((2 * v104) & 0x7A) + 62;
  v5[357] = v104 - ((2 * v104) & 0xCC) - 26;
  LOBYTE(v112) = (*(_BYTE *)(v15 + (v5[159] & 0x3F ^ 0x18)) ^ 0xE6) & ((v109 - 80) ^ 0x4F);
  LOBYTE(v112) = (((v112 - ((2 * v112) & 0x76) + 59) & 0x9C ^ 0x85) - ((v112 + 1) | 0xFE) - 2) ^ 0x21;
  LOBYTE(v112) = ((v112 | 0xC3) - (v112 | 0x3C) + 60) & 0xDD ^ 0x7E;
  v5[371] ^= (v112 - ((2 * v112) & 0x10) + 8) ^ 8;
  LOBYTE(v108) = (v5[116] ^ 0x18) - ((2 * (v5[116] ^ 0x18)) & 0xB6) - 37;
  LOBYTE(v59) = (v5[416] ^ 0xE6) - ((2 * (v5[416] ^ 0xE6)) & 0x6C) + 54;
  LOBYTE(v92) = (((v59 ^ 0x36 | v108 ^ 0xDB) - ((2 * (v59 ^ 0x36 | v108 ^ 0xDB)) & 0x8E) + 71) ^ 0x47) & (((v5[349] ^ 0xE6) - ((2 * (v5[349] ^ 0xE6)) & 0xC8) + 100) ^ 0x64);
  LOBYTE(v92) = (v92 - ((2 * v92) & 0x3A) - 99) ^ 0x9D | (((v59 ^ 0x36) & (v108 ^ 0xDB))
                                                        - ((2 * ((v59 ^ 0x36) & (v108 ^ 0xDB))) & 0xB2)
                                                        - 39) ^ 0xD9;
  v113 = (v105 >> 1) ^ 0x77C54B3C;
  LOBYTE(v92) = v92 - ((2 * v92) & 0x7C) + 62;
  LOBYTE(v112) = (((v92 ^ 0x3E | v113) - ((2 * (v92 ^ 0x3E | v113)) & 0xEA) - 11) ^ 0xF5) & (((v5[321] ^ 0xE6)
                                                                                            - ((2 * (v5[321] ^ 0xE6)) & 0x1A)
                                                                                            - 115) ^ 0x8D);
  LOBYTE(v113) = (v112 - ((2 * v112) & 0x6A) + 53) ^ 0x35 | (((v92 ^ 0x3E) & v113)
                                                           - ((2 * ((v92 ^ 0x3E) & v113)) & 0x46)
                                                           - 93) ^ 0xA3;
  v5[347] = (v113 - ((2 * v113) & 0x4A) + 37) ^ 0xC3;
  v5[188] = v55 + 24;
  v114 = *(unsigned __int8 *)(v17 + (((_BYTE)v55 + 24) & 0x3F ^ 0x18));
  HIDWORD(v115) = v114 ^ 2;
  LODWORD(v115) = (v114 ^ 0xFFFFFFE7) << 24;
  LOBYTE(v55) = 2 * (((2 * ((v5[4] & 7 ^ 3) & 3) - (v5[4] & 7 ^ 3) + 20) ^ 0x17) & 0xF)
              + ((2 * ((v5[4] & 7 ^ 3) & 3) - (v5[4] & 7 ^ 3) + 20) ^ 0x78);
  v116 = ((v5[430] ^ 0xE6) - ((2 * v5[430]) & 0x12) + 1169180425) ^ 0x45B04709;
  v117 = (v116 << (v55 - 111)) - ((2 * (v116 << (v55 - 111))) & 0x59843EF8) - 1396564100;
  v118 = (v116 >> ((7 - v55) & 7)) - ((2 * (v116 >> ((7 - v55) & 7))) & 0x167C6E30) - 1958856936;
  v119 = *(_BYTE *)(v17 + (v5[41] & 0x3F ^ 0x18));
  LOBYTE(v101) = (v5[247] ^ 0x18) - ((2 * v5[247]) & 0x46) + 35;
  v120 = (v119 ^ 0xE6) - ((2 * v119) & 0x32) + 25;
  LOBYTE(v55) = (((v120 ^ 0x19 | v101 ^ 0x23) - ((2 * (v120 ^ 0x19 | v101 ^ 0x23)) & 0x92) - 55) ^ 0xC9) & (((v5[415] ^ 0xE6) - ((2 * v5[415]) & 0x10) + 8) ^ 8);
  LOBYTE(v55) = (v55 - ((2 * v55) & 0xBA) + 93) ^ 0x5D | (((v120 ^ 0x19) & (v101 ^ 0x23))
                                                        - ((2 * ((v120 ^ 0x19) & (v101 ^ 0x23))) & 0x90)
                                                        - 56) ^ 0xC8;
  LOBYTE(v118) = v117 ^ 0x64 ^ v118;
  LOBYTE(v55) = (v55 - ((2 * v55) & 0xBC) + 94) ^ 0x5E;
  LOBYTE(v112) = (((v55 | v118) - ((2 * (v55 | v118)) & 0xA2) + 81) ^ 0x51) & (((v5[381] ^ 0xE6)
                                                                              - ((2 * (v5[381] ^ 0xE6)) & 0x50)
                                                                              + 40) ^ 0x28);
  LOBYTE(v112) = (v112 - ((2 * v112) & 0xB2) + 89) ^ 0x59 | ((v55 & v118) - ((2 * (v55 & v118)) & 0xCE) + 103) ^ 0x67;
  LOBYTE(v112) = (v5[354] ^ 0xE6)
               + ((v112 - ((2 * v112) & 0xE0) + 112) ^ 0x87)
               + ((2 * (v112 - ((2 * v112) & 0xE0) + 112)) & 0xEF ^ 0xE0)
               + 9;
  v5[354] = v112 - ((2 * v112) & 0xCC) - 26;
  LOBYTE(v112) = (v5[442] ^ 0xE6) - ((2 * (v5[442] ^ 0xE6)) & 0xDD) - 18;
  LOBYTE(v118) = (((v5[372] ^ 0xE6) - ((2 * (v5[372] ^ 0xE6)) & 0xB6) + 91) ^ 0x5B) & (v112 ^ 0x11);
  LOBYTE(v112) = (v118 - ((2 * v118) & 0x42) + 33) ^ 0x21 | ((v112 & 0xE3 ^ 0x3E) + 60) & 0x23;
  LOBYTE(v112) = (v112 - ((2 * v112) & 0x74) - 70) ^ 0xBA;
  v5[339] = (v112 * v112 + (~(2 * v112 * v112) | 0x57) - 43) ^ 0x32;
  LOBYTE(v112) = v5[444] & 0x25 ^ 0x2D;
  LOBYTE(v112) = (v5[322] ^ 0xE6)
               + (((v112 | 0xE0) - (v112 | 0x1F) + 31) & 0xE5 ^ 0x29)
               + ((2 * ((v112 | 0xE0) - (v112 | 0x1F) + 31)) & 0x4A ^ 0xAD)
               + 63;
  LOBYTE(v112) = (v5[361] ^ 0xE6) + (v112 ^ 0xFD) + ((2 * v112) & 0xFB) + 3;
  v5[361] = v112 - ((2 * v112) & 0xCC) - 26;
  v121 = (61 * (LODWORD(STACK[0x474]) == 1935652810)) ^ a3;
  v122 = LODWORD(STACK[0x2B8]) + 69;
  LODWORD(STACK[0x28C]) = LODWORD(STACK[0x2A8]) - 49;
  v5[151] = 24;
  LODWORD(STACK[0x2A8]) = LODWORD(STACK[0x290]) + 138;
  LODWORD(STACK[0x2C8]) = (v115 >> 26) - ((2 * (v115 >> 26)) & 0x60) - 80;
  return ((_QWORD *(*)(_QWORD *__return_ptr, _QWORD, void *, void *))*(&off_1002C8B50 + v121))(qword_100254870, v122 ^ 0xEu, &unk_10027A0A0, &unk_100254800);
}

uint64_t sub_1001EA988@<X0>(int a1@<W0>, char *a2@<X1>, _BYTE *a3@<X2>, int a4@<W4>, int a5@<W7>, _BYTE *a6@<X8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  unint64_t v11;
  char v12;
  _BYTE *v13;
  char v14;
  char v15;
  char *v16;
  char v17;
  _BYTE *v18;
  char v19;
  _BYTE *v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  char v81;
  char v82;
  char v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  int v91;
  unint64_t v92;

  v9 = a1 + LODWORD(STACK[0x2A0]) + LODWORD(STACK[0x29C]);
  LODWORD(STACK[0x2B8]) = a4 ^ a5 ^ 0xFFFFFFA7;
  LODWORD(STACK[0x2D0]) = v7 ^ 0xFFFFFFB0;
  v10 = v8 == 1935652811;
  v11 = STACK[0x328];
  v12 = (*(_BYTE *)STACK[0x328] ^ 0x99) + 127;
  *(_BYTE *)STACK[0x328] = (((((2 * v12) & 0xBF) + (v12 ^ 0xDF) + 118) | 0x13)
                          - ((9 - (((2 * v12) & 0xBF) + (v12 ^ 0xDF))) & 0x13)
                          - 85) ^ 0x99;
  if (v8 == 1935652811)
    v13 = a6;
  else
    v13 = a6 + 1;
  if (v8 == 1935652811)
    v14 = 0;
  else
    v14 = 11;
  v15 = *v13 ^ v14;
  if (v8 == 1935652811)
    v16 = a2;
  else
    v16 = a2 + 1;
  v17 = *v16;
  if (v8 == 1935652811)
    v18 = a3;
  else
    v18 = a3 + 1;
  v19 = v15 ^ v17 ^ *v18;
  if (v10)
    v20 = (_BYTE *)v11;
  else
    v20 = (_BYTE *)(v11 + 1);
  *v20 = v19 ^ ((v19 ^ *v20) - 20);
  v21 = STACK[0x310];
  v22 = 2u % LODWORD(STACK[0x310]);
  v23 = (11 * v22) ^ a6[v22] ^ a2[v22] ^ a3[v22];
  *(_BYTE *)(v11 + v22) = v23 ^ ((((v23 ^ *(_BYTE *)(v11 + v22)) + 111) ^ 0x7B)
                               + ((2 * ((v23 ^ *(_BYTE *)(v11 + v22)) + 111)) & 0xF7)
                               - 123);
  v24 = 3 % v21;
  v25 = (11 * v24) ^ a6[v24] ^ a2[v24] ^ a3[v24];
  v26 = (v25 ^ *(unsigned __int8 *)(v11 + v24)) + LODWORD(STACK[0x288]);
  *(_BYTE *)(v11 + v24) = v25 ^ ((v26 ^ 0x13) + ((2 * v26) & 0x26) - 19);
  v27 = 4 % v21;
  LOBYTE(v25) = (11 * v27) ^ a6[v27] ^ a2[v27] ^ a3[v27];
  LOBYTE(v26) = (v25 ^ *(_BYTE *)(v11 + v27)) - 3;
  *(_BYTE *)(v11 + v27) = v25 ^ (((2 * v26) & 0xDC)
                               + (v26 ^ 0x6E)
                               + ((24 - (((2 * v26) & 0xDC) + (v26 ^ 0x6E))) | 0xA1)
                               + ((((2 * v26) & 0xDC) + (v26 ^ 0x6E) + 103) | 0xA1)
                               - 14);
  v28 = STACK[0x474];
  v29 = LODWORD(STACK[0x474]) ^ 0x735FB7CA;
  v30 = 5 % v29;
  v31 = (-111 * v30) ^ byte_100254940[v30] ^ byte_10027CB70[v30 + 1] ^ byte_10027ABC0[v30 + 1];
  v32 = (v31 ^ *(unsigned __int8 *)(v11 + v30)) + 17;
  *(_BYTE *)(v11 + v30) = v31 ^ ((((v32 ^ 0xFE) + 4 * (v32 >> 1) + 62) ^ 0x43)
                               + ((2 * ((v32 ^ 0xFE) + 4 * (v32 >> 1)) + 124) & 0x87)
                               - 127);
  v33 = 6 % v29;
  v34 = (*((unsigned __int8 *)&unk_100254820 + v33) ^ *(unsigned __int8 *)(v11 + v33) ^ (25 * v33) ^ byte_100279C70[v33 + 3] ^ byte_10027D7A0[v33 + 2])
      + (LODWORD(STACK[0x28C]) ^ 0xFFFFFFBF);
  *(_BYTE *)(v11 + v33) = byte_100254940[v33] ^ (-111 * v33) ^ byte_10027CB70[v33 + 1] ^ byte_10027ABC0[v33 + 1] ^ ((v34 ^ 0x4F) + ((2 * v34) & 0x9F) - 79);
  v35 = 7 % v29;
  LOBYTE(v34) = (-111 * v35) ^ byte_100254940[v35] ^ byte_10027CB70[v35 + 1] ^ byte_10027ABC0[v35 + 1];
  LOBYTE(v21) = (v34 ^ *(_BYTE *)(v11 + v35)) + 47;
  *(_BYTE *)(v11 + v35) = v34 ^ (((((2 * v21) & 0x6C) + (v21 ^ 0xB6) + 124) | 0x5A)
                               - ((3 - (((2 * v21) & 0x6C) + (v21 ^ 0xB6))) & 0x5A)
                               - 50);
  v36 = 8 % v29;
  v37 = LODWORD(STACK[0x298])
      + (a6[v36] ^ *(unsigned __int8 *)(v11 + v36) ^ (11 * v36) ^ a2[v36] ^ a3[v36])
      + 97;
  *(_BYTE *)(v11 + v36) = byte_100254940[v36] ^ (-111 * v36) ^ byte_10027CB70[v36 + 1] ^ byte_10027ABC0[v36 + 1] ^ ((v37 ^ 0x7F) + 2 * v37 - 127);
  v38 = 9 % v29;
  LOBYTE(v37) = (-111 * v38) ^ byte_100254940[v38] ^ byte_10027CB70[v38 + 1] ^ byte_10027ABC0[v38 + 1];
  LOBYTE(v21) = (v37 ^ *(_BYTE *)(v11 + v38)) - 118;
  *(_BYTE *)(v11 + v38) = v37 ^ (((((2 * v21) & 0xEF) + (v21 ^ 0x77) - 53) ^ 0xC9)
                               + ((2 * (((2 * v21) & 0xEF) + (v21 ^ 0x77)) - 106) & 0x92)
                               - 11);
  v39 = 0xA % v29;
  v40 = (-111 * v39) ^ byte_100254940[v39] ^ byte_10027CB70[v39 + 1] ^ byte_10027ABC0[v39 + 1];
  v41 = ((LODWORD(STACK[0x2E8]) + 1) ^ 0xFFFFFFC0)
      - 2 * ((LODWORD(STACK[0x2E8]) + 1) & 0x3F)
      + (v40 ^ *(unsigned __int8 *)(v11 + v39))
      + 64;
  LOBYTE(v41) = (v41 ^ 0x7B) + ((2 * v41) & 0xF7) - 2;
  *(_BYTE *)(v11 + v39) = v40 ^ ((v41 ^ 0xCF) + ((2 * v41) & 0x9F) - 72);
  v42 = 0xB % (v28 ^ 0x735FB7CAu);
  LOBYTE(v41) = (-111 * v42) ^ byte_100254940[v42] ^ byte_10027CB70[v42 + 1] ^ byte_10027ABC0[v42 + 1];
  *(_BYTE *)(v11 + v42) = v41 ^ ((((((v41 ^ *(_BYTE *)(v11 + v42)) - 44) ^ 0x7F)
                                 + 2 * ((v41 ^ *(_BYTE *)(v11 + v42)) - 44)
                                 - 19) ^ 0xA1)
                               + ((2
                                 * ((((v41 ^ *(_BYTE *)(v11 + v42)) - 44) ^ 0x7F)
                                  + 2 * ((v41 ^ *(_BYTE *)(v11 + v42)) - 44)
                                  - 19)) & 0x42)
                               - 13);
  v43 = 0xC % (v28 ^ 0x735FB7CAu);
  v44 = (-111 * v43) ^ byte_100254940[v43] ^ byte_10027CB70[v43 + 1] ^ byte_10027ABC0[v43 + 1];
  v45 = ((LODWORD(STACK[0x2A8]) - 17) ^ 0x5B)
      + ((2 * (LODWORD(STACK[0x2A8]) - 17)) & 0xFFFFFFBA ^ 0x4D)
      + (v44 ^ *(unsigned __int8 *)(v11 + v43))
      - 33;
  *(_BYTE *)(v11 + v43) = v44 ^ (((2 * v45) & 0xDF)
                               + (v45 ^ 0xEF)
                               + ((44 - (((2 * v45) & 0xDF) + (v45 ^ 0xEF))) | 0x89)
                               + ((((2 * v45) & 0xDF) + (v45 ^ 0xEF) + 83) | 0x89)
                               - 23);
  v46 = 0xD % (v28 ^ 0x735FB7CAu);
  LODWORD(v43) = (a6[v46] ^ *(unsigned __int8 *)(v11 + v46) ^ (11 * v46) ^ a2[v46] ^ a3[v46])
               + (LODWORD(STACK[0x294]) ^ 5);
  *(_BYTE *)(v11 + v46) = byte_100254940[v46] ^ (-111 * v46) ^ byte_10027CB70[v46 + 1] ^ byte_10027ABC0[v46 + 1] ^ ((v43 ^ 0xFB) + ((2 * v43) & 0xF7) + 5);
  v47 = STACK[0x474];
  LODWORD(v46) = LODWORD(STACK[0x474]) ^ 0x735FB7CA;
  v48 = 0xE % v46;
  LOBYTE(v43) = (byte_100254940[v48] ^ *(_BYTE *)(v11 + v48) ^ (-111 * v48) ^ byte_10027CB70[v48 + 1] ^ byte_10027ABC0[v48 + 1])
              + 42;
  *(_BYTE *)(v11 + v48) = byte_100254900[v48] ^ (-9 * v48) ^ byte_100257620[v48 + 4] ^ byte_10027F7C0[v48] ^ ((((v43 ^ 0x7F) + 2 * v43 - 32) ^ 0x83) + 2 * (((v43 ^ 0x7F) + 2 * v43) & 3) + 30);
  v49 = 0xF % v46;
  v50 = (-9 * v49) ^ byte_100254900[v49] ^ byte_100257620[v49 + 4] ^ byte_10027F7C0[v49];
  v51 = (v50 ^ *(_BYTE *)(v11 + v49)) - 75;
  *(_BYTE *)(v11 + v49) = v50 ^ (((2 * (((2 * v51) & 0x5E) + (v51 ^ 0xAF))) & 0xD4)
                               + ((((2 * v51) & 0x5E) + (v51 ^ 0xAF) + 96) ^ 0x6A)
                               + 71);
  v52 = 0x10 % v46;
  v53 = v9 + (a6[v52 & 0xF] ^ *(_BYTE *)(v11 + v52) ^ a2[v52 & 0xF] ^ a3[v52 & 0xF] ^ (11 * (v52 & 0xF))) - 21;
  *(_BYTE *)(v11 + v52) = byte_100254900[v52 & 0xF] ^ (-9 * (v52 & 0xF)) ^ byte_100257620[(v52 & 0xF) + 4] ^ byte_10027F7C0[v52 & 0xF] ^ ((((v53 ^ 0x7F) + 2 * v53 - 34) ^ 0x8C) + ((2 * ((v53 ^ 0x7F) + 2 * v53) + 28) & 0x18) + 23);
  LODWORD(v52) = v47 ^ 0x735FB7CA;
  v54 = 0x11 % (v47 ^ 0x735FB7CAu);
  v55 = byte_100257620[(v54 & 0xF) + 4] ^ byte_100254900[v54 & 0xF];
  v56 = byte_10027F7C0[v54 & 0xF];
  v57 = -9 * (v54 & 0xF);
  LOBYTE(v29) = (v55 ^ *(_BYTE *)(v11 + v54) ^ v56 ^ v57) + 35;
  *(_BYTE *)(v11 + v54) = v55 ^ v57 ^ v56 ^ ((v29 ^ 0x1E) + ((2 * v29) & 0x3C) - 30);
  v58 = 0x12 % v52;
  v59 = (a6[v58 & 0xF] ^ *(unsigned __int8 *)(v11 + v58) ^ a2[v58 & 0xF] ^ a3[v58 & 0xF] ^ (11 * (v58 & 0xF)))
      + (LODWORD(STACK[0x2C8]) ^ 0xD);
  *(_BYTE *)(v11 + v58) = byte_100254900[v58 & 0xF] ^ (-9 * (v58 & 0xF)) ^ byte_100257620[(v58 & 0xF) + 4] ^ byte_10027F7C0[v58 & 0xF] ^ ((((v59 ^ 0x7E) + 4 * (v59 >> 1) - 40) ^ 8) + (~(2 * ((v59 ^ 0x7E) + 4 * (v59 >> 1))) & 0x10) - 94);
  v60 = 0x13 % v52;
  LODWORD(v58) = LODWORD(STACK[0x2D8])
               + (a6[v60 & 0xF] ^ *(unsigned __int8 *)(v11 + v60) ^ a2[v60 & 0xF] ^ a3[v60 & 0xF] ^ (11 * (v60 & 0xF)))
               - 121;
  *(_BYTE *)(v11 + v60) = byte_100254900[v60 & 0xF] ^ (-9 * (v60 & 0xF)) ^ byte_100257620[(v60 & 0xF) + 4] ^ byte_10027F7C0[v60 & 0xF] ^ (((((2 * v58) & 0xDF) + (v58 ^ 0xEF) + 127) ^ 0x8C) + ((2 * (((2 * v58) & 0xDF) + (v58 ^ 0xEF)) + 30) & 0x18) + 6);
  LODWORD(v58) = STACK[0x474];
  LODWORD(v60) = LODWORD(STACK[0x474]) ^ 0x735FB7CA;
  v61 = 0x14 % v60;
  v62 = byte_100257620[(v61 & 0xF) + 4] ^ byte_100254900[v61 & 0xF] ^ (-9 * (v61 & 0xF)) ^ byte_10027F7C0[v61 & 0xF];
  *(_BYTE *)(v11 + v61) = v62 ^ ((((v62 ^ *(_BYTE *)(v11 + v61)) - 64) ^ 0x7F)
                               + 2 * ((v62 ^ *(_BYTE *)(v11 + v61)) - 64)
                               - 127);
  v63 = 0x15 % v60;
  v64 = byte_10027F7C0[v63 & 0xF];
  v65 = -9 * (v63 & 0xF);
  v66 = byte_100257620[(v63 & 0xF) + 4] ^ byte_100254900[v63 & 0xF];
  LOBYTE(v49) = (v66 ^ *(_BYTE *)(v11 + v63) ^ v64 ^ v65) - 26;
  *(_BYTE *)(v11 + v63) = v66 ^ v65 ^ v64 ^ (((((2 * v49) & 0xE3) + (v49 ^ 0x71) + 75) ^ 0x43)
                                           + ((2 * (((2 * v49) & 0xE3) + (v49 ^ 0x71)) - 106) & 0x87)
                                           + 1);
  v67 = 0x16 % v60;
  v68 = byte_100257620[(v67 & 0xF) + 4] ^ byte_100254900[v67 & 0xF] ^ (-9 * (v67 & 0xF)) ^ byte_10027F7C0[v67 & 0xF];
  *(_BYTE *)(v11 + v67) = v68 ^ ((((v68 ^ *(_BYTE *)(v11 + v67)) - 95) ^ 0xBF)
                               + 2 * (((v68 ^ *(_BYTE *)(v11 + v67)) - 95) & 0x3F)
                               + 65);
  v69 = 0x17 % v60;
  v70 = (*((unsigned __int8 *)&unk_100254820 + (v69 & 0xF)) ^ *(unsigned __int8 *)(v11 + v69) ^ byte_100279C70[(v69 & 0xF) + 3] ^ (25 * (v69 & 0xF)) ^ byte_10027D7A0[(v69 & 0xF) + 2])
      + LODWORD(STACK[0x2B8]);
  *(_BYTE *)(v11 + v69) = byte_100254900[v69 & 0xF] ^ (-9 * (v69 & 0xF)) ^ byte_100257620[(v69 & 0xF) + 4] ^ byte_10027F7C0[v69 & 0xF] ^ (((2 * v70) & 0xE7) + (v70 ^ 0x73) + ((65 - (((2 * v70) & 0xE7) + (v70 ^ 0x73))) | 0x1D) + ((((2 * v70) & 0xE7) + (v70 ^ 0x73) - 66) | 0x1D) + 113);
  v71 = 0x18 % (v58 ^ 0x735FB7CA);
  LOBYTE(v43) = (byte_100254900[v71 & 0xF] ^ *(_BYTE *)(v11 + v71) ^ byte_100257620[(v71 & 0xF) + 4] ^ byte_10027F7C0[v71 & 0xF] ^ (-9 * (v71 & 0xF)))
              - 118;
  *(_BYTE *)(v11 + v71) = byte_100254920[v71 & 0xF] ^ (-37 * (v71 & 0xF)) ^ byte_1002548C0[v71 & 0xF] ^ byte_1002548F0[v71 & 0xF] ^ ((v43 ^ 0xF7) + ((2 * v43) & 0xEF) + 9);
  v72 = 0x19 % (v58 ^ 0x735FB7CA);
  v73 = byte_1002548F0[v72 & 0xF];
  LOBYTE(v71) = -37 * (v72 & 0xF);
  LOBYTE(v49) = byte_1002548C0[v72 & 0xF] ^ byte_100254920[v72 & 0xF];
  LOBYTE(v28) = (v49 ^ *(_BYTE *)(v11 + v72) ^ v73 ^ v71) - 125;
  *(_BYTE *)(v11 + v72) = v49 ^ v71 ^ v73 ^ ((v28 ^ 0xFD) + ((2 * v28) & 0xFB) + 3);
  v74 = 0x1A % (v58 ^ 0x735FB7CA);
  v75 = byte_1002548F0[v74 & 0xF];
  LOBYTE(v71) = -37 * (v74 & 0xF);
  LOBYTE(v49) = byte_1002548C0[v74 & 0xF] ^ byte_100254920[v74 & 0xF];
  LOBYTE(v28) = (v49 ^ *(_BYTE *)(v11 + v74) ^ v75 ^ v71) + 118;
  *(_BYTE *)(v11 + v74) = v49 ^ v71 ^ v75 ^ ((v28 ^ 0x5E) + ((2 * v28) & 0xBC) - 94);
  v76 = 0x1B % (v58 ^ 0x735FB7CA);
  v77 = byte_1002548F0[v76 & 0xF];
  LOBYTE(v71) = -37 * (v76 & 0xF);
  v78 = byte_1002548C0[v76 & 0xF] ^ byte_100254920[v76 & 0xF];
  LOBYTE(v28) = (v78 ^ *(_BYTE *)(v11 + v76) ^ v77 ^ v71) + 55;
  *(_BYTE *)(v11 + v76) = v78 ^ v71 ^ v77 ^ (((((2 * v28) & 0xF3) + (v28 ^ 0x79)) ^ 0xF8)
                                           + ((2 * (((2 * v28) & 0xF3) + (v28 ^ 0x79))) & 0xF0)
                                           - 113);
  LODWORD(v71) = STACK[0x474];
  v79 = LODWORD(STACK[0x474]) ^ 0x735FB7CA;
  v80 = 0x1C % v79;
  v81 = byte_1002548F0[v80 & 0xF];
  LOBYTE(v29) = -37 * (v80 & 0xF);
  v82 = byte_1002548C0[v80 & 0xF] ^ byte_100254920[v80 & 0xF];
  v83 = (v82 ^ *(_BYTE *)(v11 + v80) ^ v81 ^ v29) + 115;
  v84 = (v83 ^ 0xFD) + ((2 * v83) & 0xFB) + 87;
  *(_BYTE *)(v11 + v80) = v82 ^ v29 ^ v81 ^ ((v84 ^ 3) + 2 * (v84 & 3) - 87);
  v85 = 0x1D % v79;
  v86 = LODWORD(STACK[0x308])
      + (a6[v85 & 0xF] ^ *(_BYTE *)(v11 + v85) ^ a2[v85 & 0xF] ^ a3[v85 & 0xF] ^ (11 * (v85 & 0xF)))
      - 86;
  *(_BYTE *)(v11 + v85) = byte_100254920[v85 & 0xF] ^ (-37 * (v85 & 0xF)) ^ byte_1002548C0[v85 & 0xF] ^ byte_1002548F0[v85 & 0xF] ^ ((v86 ^ 0x3F) + 2 * (v86 & 0x3F) - 63);
  v87 = 0x1E % v79;
  v88 = byte_1002548C0[v87 & 0xF];
  v89 = (v88 ^ byte_100254920[v87 & 0xF] ^ (-37 * (v87 & 0xF)) ^ byte_1002548F0[v87 & 0xF] ^ *(_BYTE *)(v11 + v87)) + 81;
  *(_BYTE *)(v11 + v87) = v88 ^ byte_100254920[v87 & 0xF] ^ (-37 * (v87 & 0xF)) ^ byte_1002548F0[v87 & 0xF] ^ ((v89 ^ 0xE1) + ((2 * v89) & 0xC3) + 31);
  v90 = 0x1F % v79;
  v91 = (a6[v90 & 0xF] ^ *(unsigned __int8 *)(v11 + v90) ^ a2[v90 & 0xF] ^ a3[v90 & 0xF] ^ (11 * (v90 & 0xF)))
      + LODWORD(STACK[0x2D0]);
  *(_BYTE *)(v11 + v90) = byte_100254920[v90 & 0xF] ^ (-37 * (v90 & 0xF)) ^ byte_1002548C0[v90 & 0xF] ^ byte_1002548F0[v90 & 0xF] ^ ((v91 ^ 0x66) + ((2 * v91) & 0xCC) - 102);
  v92 = STACK[0x318];
  *(_BYTE *)(STACK[0x328] + 0 % (v71 ^ 0x735FB7CA)) ^= *(_BYTE *)STACK[0x340] ^ 0xE6;
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002C8B50 + v6))(1897387887, v92, 476726722, 1897387887, 3696230153, 476726722, 598737143, -598737143);
}

uint64_t sub_1001EB95C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X5>, unsigned int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = ((int)a2 - 476726722) % a4;
  *(_BYTE *)(v5 + v13) ^= *(_BYTE *)(a2 + a1 - 476726722) ^ *(_BYTE *)(v6 + (v13 & 0xF)) ^ *(_BYTE *)(v7 + (v13 & 0xF)) ^ (-37 * (v13 & 0xF)) ^ (89 * (v13 & 0xF)) ^ *(_BYTE *)(v8 + (v13 & 0xF)) ^ *(_BYTE *)(v10 + (v13 & 0xF)) ^ *(_BYTE *)((v13 & 0xF) + v11 + 3) ^ *(_BYTE *)(v12 + (v13 & 0xF)) ^ 0xE6;
  return (*(uint64_t (**)(void))(v9 + 8 * ((14 * (a2 + 1 != a3 + 64)) | v4)))();
}

uint64_t sub_1001EBA10@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + ((int)v1 - 1377818204) % a1) ^= *(_BYTE *)(v1 + v3 - 1377818204) ^ 0x18;
  return (*(uint64_t (**)(void))(v6 + 8 * (v2 ^ (4 * (v1 + 1 == v4 + 319)))))();
}

uint64_t sub_1001EBA6C@<X0>(int a1@<W0>, int a2@<W3>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t (*v18)(void);

  v9 = (a2 - 1897387894) % a3;
  v10 = (a2 - 1897387924) % a3;
  v11 = *(unsigned __int8 *)(v8 + (v10 & 0xF));
  v12 = *(unsigned __int8 *)(v6 + (v10 & 0xF)) ^ *(unsigned __int8 *)(v4 + v10) ^ *(unsigned __int8 *)((v10 & 0xF) + v7 + 3);
  HIDWORD(v13) = *(unsigned __int8 *)(v6 + (v9 & 0xF)) ^ *(unsigned __int8 *)(v4 + v9) ^ *(unsigned __int8 *)((v9 & 0xF) + v7 + 3) ^ *(unsigned __int8 *)(v8 + (v9 & 0xF)) ^ (89 * (v9 & 0xF));
  LODWORD(v13) = HIDWORD(v13) << 24;
  LODWORD(v9) = v13 >> 31;
  HIDWORD(v13) = v12 ^ v10 ^ v11;
  LODWORD(v13) = (v12 ^ (89 * (((a2 - 1897387924) % a3) & 0xF)) ^ v11) << 24;
  v14 = (a2 - 1897388064) % a3;
  v15 = *(unsigned __int8 *)(v8 + (v14 & 0xF));
  v16 = *(unsigned __int8 *)(v6 + (v14 & 0xF)) ^ *(unsigned __int8 *)(v4 + v14) ^ *(unsigned __int8 *)((v14 & 0xF) + v7 + 3);
  v17 = (v13 >> 26) - ((2 * (v13 >> 26)) & 0x84);
  HIDWORD(v13) = v16 ^ v14 ^ v15;
  LODWORD(v13) = (v16 ^ (89 * (((a2 - 1897388064) % a3) & 0xF)) ^ v15) << 24;
  v18 = *(uint64_t (**)(void))(v5 + 8 * ((1215 * (a2 + 1 == a1 + 256)) ^ v3));
  *(_BYTE *)(v4 + (a2 - 1897387887) % a3) ^= (v9 - (((_BYTE)v9 << (((v3 - 125) & 0xAF) + 90)) & 0xC6) - 29) ^ (v17 + 66) ^ ((v13 >> 27) - ((2 * (v13 >> 27)) & 0xDF) - 17) ^ 0x4E;
  return v18();
}

uint64_t sub_1001EBBEC(double a1, double a2, double a3, double a4, double a5, double a6, double a7, __n128 a8)
{
  int v8;
  int v9;
  unint64_t v10;
  int v11;
  _QWORD *v12;
  int v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  int v17;

  v9 = 8 * (v8 ^ 0x1A2);
  v10 = STACK[0x3F0];
  LODWORD(STACK[0x2E8]) = STACK[0x474];
  v11 = (v9 - 34) | 0x200;
  STACK[0x3F0] = v10 - 448;
  v12 = (_QWORD *)STACK[0x330];
  v12[74] = 0x9C29E977165AD0EBLL;
  v12[75] = 0xC1AE29E94926A161;
  v12[76] = 0x3E51D616B6D95E9ELL;
  *(_QWORD *)((char *)v12 + 620) = 0x5A382E206A757CBELL;
  STACK[0x398] = (unint64_t)*(&off_1002C8B50 + v9);
  v13 = STACK[0x2E0];
  LODWORD(STACK[0x340]) = LODWORD(STACK[0x2E0]) - 1592160998;
  STACK[0x310] = STACK[0x338] + STACK[0x320];
  LODWORD(STACK[0x2A0]) = v13 + 1126403181;
  LODWORD(STACK[0x2A8]) = v13 - 1079687069;
  LODWORD(STACK[0x308]) = v13 - 1079687651 + v11;
  LODWORD(v12) = STACK[0x34C];
  LODWORD(STACK[0x318]) = 67 * (LODWORD(STACK[0x34C]) ^ 0x6A0);
  v14.n128_u64[0] = 0x3E3E3E3E3E3E3E3ELL;
  v14.n128_u64[1] = 0x3E3E3E3E3E3E3E3ELL;
  v15.n128_u64[0] = 0x1F1F1F1F1F1F1F1FLL;
  v15.n128_u64[1] = 0x1F1F1F1F1F1F1F1FLL;
  LODWORD(STACK[0x29C]) = (_DWORD)v12 - 521074685;
  LODWORD(STACK[0x298]) = (_DWORD)v12 + 1269915979;
  LODWORD(STACK[0x294]) = (_DWORD)v12 + 1004475373;
  v16.n128_u64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v16.n128_u64[1] = 0x5B5B5B5B5B5B5B5BLL;
  a8.n128_u16[0] = 23387;
  a8.n128_u8[2] = 91;
  a8.n128_u8[3] = 91;
  a8.n128_u8[4] = 91;
  a8.n128_u8[5] = 91;
  a8.n128_u8[6] = 91;
  a8.n128_u8[7] = 91;
  LODWORD(STACK[0x338]) = -512473929;
  STACK[0x3B8] = STACK[0x300];
  v17 = STACK[0x2E8];
  LODWORD(STACK[0x454]) = STACK[0x2E8];
  STACK[0x3D8] = STACK[0x328];
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))((char *)*(&off_1002C8B50 + ((22 * ((v17 ^ 0xCB04835) - 2146435135 + ((2 * (v17 ^ 0x735FB7CA)) & 0xFFDFFFFF) < 0xFFFFFFC0)) ^ v11))
                                                                                                 - 4))((__n128)xmmword_1002547E0, v14, v15, (__n128)xmmword_1002547B0, (__n128)xmmword_1002547C0, (__n128)xmmword_100254790, v16, a8);
}

uint64_t sub_1001EBEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v9 = a7 + 854;
  v10 = v8 - 1814019223;
  if ((v10 + 1) > 0x40)
    v11 = v10 + 1;
  else
    v11 = 64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002C8B50
                                                                               + ((43
                                                                                 * (-(int)a1
                                                                                  - v7
                                                                                  + (((v9 - 1050) | 0x21) ^ 0x6C1FBDF5u)
                                                                                  + v11 > 0xE)) ^ v9)))(a1, a2, 2131970610, 3152738156, 17);
}

uint64_t sub_1001EBF64(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;

  v10 = 32 * (a7 ^ 0x54D);
  v11 = a1 + v7 - 1814019223;
  if ((v11 + 1) > 0x40)
    v12 = v11 + 1;
  else
    v12 = 64;
  v13 = v8 + ((v10 + 334835166) & 0xEC0AD55D ^ 0x6C1FB9CA) + v12;
  v14 = __CFADD__(v11, v13);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8
                                             * (((2 * ((v13 < 0x10) & ~v14)) | (((v13 < 0x10) & ~v14) << 7)) ^ v10))
                            - 4))();
}

uint64_t sub_1001EBFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  unint64_t v17;
  char v18;

  v13 = (char *)&STACK[0x4D0] + STACK[0x2B0] + v7 - 0x7BB775407D70C692;
  v14 = (unint64_t)&v13[-v10];
  v15 = (unint64_t)&v13[-v10] < 0x10;
  v16 = (unint64_t)&v13[-v11 - 5];
  if (v16 < 0x10)
    v15 = 1;
  v17 = (unint64_t)&v13[-v12];
  if ((unint64_t)&v13[-v12] < 0x10)
    v15 = 1;
  v18 = (unint64_t)&v13[-v8] < ((a7 + 960786083) & 0xC6BB8D63 ^ 0x173uLL) || v15;
  if (v14 < (((a7 - 1112) | 0x13u) ^ 0x107uLL))
    v18 = 1;
  if (v16 < 0x10)
    v18 = 1;
  if (v17 < 0x10)
    v18 = 1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((918 * ((v18 & 1) == 0)) ^ a7)))();
}

uint64_t sub_1001EC0D4(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  unsigned int v6;
  int v7;

  *(int8x16_t *)(STACK[0x300] + (v7 + a5)) = veorq_s8(*(int8x16_t *)STACK[0x328], a1);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (int)((487
                                             * (((((v6 ^ 0x1FFFFFEE7) & (v5 + 1)) == 16) ^ ((v6 ^ 0xE7) - 1)) & 1)) ^ v6 ^ 0x1E7))
                            - 12))();
}

void sub_1001EC150()
{
  JUMPOUT(0x1001EC104);
}

uint64_t sub_1001EC158()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + ((113 * (((v0 + 5) ^ (((v0 + 694650660) & 0xD698762F) - 1028 < v1)) & 1)) ^ (v0 - 1277))))();
}

uint64_t sub_1001EE7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  unsigned int v9;

  v9 = (*(_DWORD *)(a7 + 68) ^ 0x9C29E977)
     + v8
     - 1674974857
     - ((((*(_DWORD *)(a7 + 68) ^ 0x9C29E977) + v8) << ((v7 - 5) ^ 0xB1)) & 0x3853D2EE);
  *(_DWORD *)(a7 + 68) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((1960 * ((v9 ^ 0x9C29E977) < v8)) ^ v7)) - 8))();
}

uint64_t sub_1001EE81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  *(_DWORD *)(a7 + 64) = v7 + *(_DWORD *)(a7 + 64) - 180;
  return ((uint64_t (*)(void))STACK[0x398])();
}

void sub_1001EE834()
{
  STACK[0x408] = (unint64_t)*(&off_1002C8B50 + LODWORD(STACK[0x34C]) - 1678)
               + (LODWORD(STACK[0x34C]) - 1684)
               - 36;
  JUMPOUT(0x1001EECB4);
}

uint64_t sub_1001EE864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  unsigned int v7;

  v7 = v4 + 2131969564 - v6 + v5 + 18;
  LODWORD(STACK[0x2B8]) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((399 * (v7 >= ((v5 - 669813782) & 0x27EC8BF5 ^ 0x3ECu))) ^ v5))
                            - 8))();
}

uint64_t sub_1001EE8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  char v11;
  unsigned int v12;
  _BOOL4 v15;

  v12 = v9 + 2131969564 + a8 + 1045;
  v15 = v12 > 0xF || ((2 * (v8 ^ 0xEF) - v11 + 11) & 0xFu) < (v12 & 0xF) || 1142229139 - v10 < v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((v15 * (((v8 - 979) | 0x206) + 1481)) ^ v8)) - 8))();
}

uint64_t sub_1001EE948(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v22;

  v13 = (v8 + v11) + a7;
  v14 = v13 - a1 - a5;
  v15 = (v12 + 14) & 0xF;
  v16 = v13 - (v9 + v15);
  v17 = v13 - ((_QWORD)&unk_10027AF00 + v15) - 5;
  v18 = v13 - (v10 + v15);
  v22 = v16 < 0x10 || v14 < 0x10 || v17 < 0x10 || v18 < 0x10;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((1800 * ((v22 ^ (v7 - 16)) & 1)) ^ v7)))();
}

uint64_t sub_1001EE9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(_QWORD))(a4
                                           + 8
                                           * (((LODWORD(STACK[0x2B8]) >= ((v4 + 1073) ^ 0x658u)) * ((v4 - 207) ^ 0x16A)) ^ (v4 - 266))))(0);
}

uint64_t sub_1001EEA10(double a1, double a2, int8x16_t a3, double a4, int8x16_t a5, double a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  int8x16x4_t v22;

  v17 = (v14 - 584) | 0x245;
  v18 = STACK[0x2B8] & 0xFFFFFFF0;
  LODWORD(STACK[0x2D0]) = v16 + 9;
  LODWORD(STACK[0x2C8]) = v16 + 10;
  LODWORD(STACK[0x288]) = v16 + 11;
  LODWORD(STACK[0x28C]) = v16 + 12;
  LODWORD(STACK[0x290]) = v16 + 13;
  STACK[0x328] = (v16 + 3) & 0xF;
  STACK[0x2E8] = (v16 + 4) & 0xF;
  STACK[0x2E0] = (v16 + 7) & 0xF;
  STACK[0x2D8] = ((_BYTE)v16 + 8) & 0xF;
  STACK[0x2D0] = STACK[0x2D0] & 0xF;
  STACK[0x2C8] = STACK[0x2C8] & 0xF;
  v22.val[0].i64[0] = ((_BYTE)v16 - 50) & 0xF;
  v22.val[0].i64[1] = ((_BYTE)v16 - 1) & 0xF;
  v22.val[1].i64[0] = v16 & 0xF;
  v22.val[1].i64[1] = ((_BYTE)v16 + 1) & 0xF;
  v22.val[2].i64[0] = ((v17 ^ 7) + v16) & 0xF;
  v22.val[2].i64[1] = STACK[0x328];
  v22.val[3].i64[0] = STACK[0x2E8];
  v22.val[3].i64[1] = ((_BYTE)v16 + 5) & 0xF;
  v22.val[0].i64[0] = vqtbl4q_s8(v22, a5).u64[0];
  v22.val[1].i64[0] = ((_BYTE)v16 + 6) & 0xF;
  v22.val[1].i64[1] = STACK[0x2E0];
  v22.val[2].i64[0] = STACK[0x2D8];
  v22.val[2].i64[1] = STACK[0x2D0];
  v22.val[3].i64[0] = STACK[0x2C8];
  v22.val[3].i64[1] = STACK[0x288] & 0xF;
  v19 = STACK[0x28C] & 0xF;
  v20 = STACK[0x290] & 0xF;
  v22.val[0].i64[1] = vqtbl4q_s8(*(int8x16x4_t *)((char *)&v22 + 16), a5).u64[0];
  *(int8x16_t *)(a14 + (v15 - 1142229140)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a12 + (v16 - 2131970610)), *(int8x16_t *)((char *)&unk_100254880+ (((_BYTE)v16 - 50) & 0xF))), veorq_s8(*(int8x16_t *)((char *)&unk_10027AF00+ ((v16 - 50) & 0xF)+ 5), *(int8x16_t *)((char *)&unk_10025CD60+ (((_BYTE)v16 - 50) & 0xF)))), a3), vmulq_s8(v22.val[0], a7));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((13 * ((((v17 - 537) | 0xD1) ^ 0x4ED) != v18)) ^ v17)) - 8))();
}

void sub_1001EEBF4()
{
  STACK[0x398] = (unint64_t)*(&off_1002C8B50 + LODWORD(STACK[0x34C]) - 1679);
  STACK[0x328] = (unint64_t)&unk_10025BC24;
  JUMPOUT(0x1001EBDC8);
}

void sub_1001EEC28()
{
  STACK[0x408] = (unint64_t)*(&off_1002C8B50 + LODWORD(STACK[0x34C]) - 1701)
               + (STACK[0x294] & 0xC420E57E ^ 0xFFFFFFFFFFFFFFE4);
  JUMPOUT(0x1001EECB4);
}

uint64_t sub_1001EED50(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (((a1 + 254 + ((a1 - 253) | 0x10) + 1247) * ((v4 + 1713) < 0x40)) ^ a1))
                            - 4))();
}

uint64_t sub_1001EED9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;

  return (*(uint64_t (**)(uint64_t))(a4
                                            + 8 * ((30 * ((((v4 + 1177) | 0x10) ^ 0x6FBFFCCDu) - (v6 + v7) > 6)) ^ v4)))(v5);
}

uint64_t sub_1001EEDDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X6>, unsigned int a4@<W8>)
{
  char v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(a3 + ((14 * (v6 ^ a4) + v7) & (a1 + v8))) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((((a1 + 1 + v8) < 0x40) * v5) ^ (v6 - 1447))) - 4))();
}

void sub_1001EEE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  STACK[0x438] = *(_QWORD *)(a4 + 8 * a8) + ((a8 + 1235676963) & 0xB65911E6) - 306;
  JUMPOUT(0x1001EF220);
}

void sub_1001EF22C()
{
  JUMPOUT(0x1001EC79CLL);
}

uint64_t sub_1001EF254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((104
                                * (((v4 + 2098388939) & 0x82ED19A6 ^ 0x81ABCE7E ^ (v4 + 258686807) & 0xF094B9FD)
                                 + 2119446951 < 0x10)) ^ (v4 - 369))))();
}

void sub_1001EF2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v8;
  uint64_t v9;

  *(_BYTE *)(a7 + a1) ^= *(_BYTE *)(v9 + a1) ^ ((v8 ^ a8) + 74);
  JUMPOUT(0x1001EF29CLL);
}

void sub_1001EF2FC(double a1, double a2, double a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int8x16_t *a11)
{
  uint64_t v11;
  _DWORD *v12;

  *a11 = veorq_s8(*a11, a4);
  v12 = (_DWORD *)STACK[0x330];
  v12[156] = 1513631264;
  v12[149] = -1674974857;
  v12[148] = 375050475;
  v12[150] = 1227268449;
  v12[151] = -1045550615;
  v12[152] = -1227268450;
  v12[153] = 1045550614;
  v12[155] = 1786084542;
  STACK[0x398] = (v11 + 558) + *(_QWORD *)(a8 + 8 * v11) - 571;
  JUMPOUT(0x1001EF388);
}

uint64_t sub_1001EF390(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((((a8 - 1008) ^ 0xEB) * (LODWORD(STACK[0x2B8]) != a1)) ^ a8))
                            - 12))();
}

uint64_t sub_1001EF400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((794
                                * ((STACK[0x2B8] & 8) == ((((v4 + 171436225) & 0xF5C81779) + 718) ^ (523 * (v4 ^ 0x10F))))) ^ v4)))();
}

uint64_t sub_1001EF460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  char v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;

  v18 = v10 - 596;
  v19 = v9 + 1;
  v20 = (v9 + v16);
  *(_BYTE *)(a7 + (v17 + v15)) = *(_BYTE *)(a5 + v20) ^ *(_BYTE *)(v13 + (v20 & 0xF)) ^ byte_10027AF00[(v20 & 0xF) + 5] ^ *(_BYTE *)(v14 + (v20 & 0xF)) ^ ((v20 & 0xF) * (((v18 + v7) & v8) - 90)) ^ 0x1F;
  return (*(uint64_t (**)(void))(a4 + 8 * (((v19 + v16 < v12) * v11) ^ v18)))();
}

void sub_1001EF4D4()
{
  JUMPOUT(0x1001EF464);
}

uint64_t sub_1001EF4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unint64_t v5;

  v5 = (*(unsigned int *)(STACK[0x390] + 92) | ((unint64_t)(*(_DWORD *)(STACK[0x390] + 92) < 0x6A757CAEu) << 32))
     + 425909497;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((826
                                          * ((((v4 + 610540048 + 67 * (v4 ^ 0x6B3)) ^ (((v5
                                                                                       - (v4 - 2082974985)) | ((v4 - 2082974985) - v5)) >> 63)) & 1) == 0)) ^ (v4 - 295)))
                            - 12))();
}

uint64_t sub_1001EF570@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;
  _BOOL4 v3;

  v3 = a1 < 0x83D859A7;
  *(_BYTE *)(STACK[0x428] - 0x57F7A3E501E5FAB3) = *(_BYTE *)STACK[0x380] ^ 0x99;
  if (a1 >= 0x83D859A7)
    v3 = a1 > 0x83D859A8;
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t))((char *)*(&off_1002C8B50
                                                                                        + ((42 * v3) ^ ((v1 | 0xA1100) - 611200055)))
                                                                              - 12))(0xC6882A920996AE25, ((((v1 | 0xA1100) - 611200055) ^ 0x58Au) * v2) ^ 0xC8, 0xF2096CF42D57B6A7);
}

void sub_1001EF6BC()
{
  JUMPOUT(0x1001EF630);
}

uint64_t sub_1001EF6CC()
{
  int v0;
  void *v1;
  void *v2;
  BOOL v3;
  int v4;

  STACK[0x3F0] -= 32;
  STACK[0x4B0] = (unint64_t)&STACK[0x538];
  LODWORD(STACK[0x300]) = v0 ^ 0x410;
  STACK[0x4B8] = STACK[0x2F0];
  STACK[0x498] = (unint64_t)&STACK[0x538];
  STACK[0x2A0] = (unint64_t)&STACK[0x538];
  STACK[0x4A8] = (unint64_t)&STACK[0x538];
  STACK[0x4C0] = 0;
  v1 = malloc(0x404uLL);
  STACK[0x4C0] = (unint64_t)v1;
  v2 = malloc(0x408uLL);
  STACK[0x4A0] = (unint64_t)v2;
  if (v1)
    v3 = v2 == 0;
  else
    v3 = 1;
  v4 = !v3;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + ((v4 * (((v0 ^ 0x410) - 712) ^ 0x206)) ^ v0)) - 8))();
}

#error "1001F6B80: call analysis failed (funcsize=5886)"

uint64_t sub_1001F6C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int a66;
  int a69;
  int a70;
  char a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  uint64_t v79;
  unsigned int v80;
  int v82;
  int v83;
  int v84;
  BOOL v86;
  int v87;
  int v88;
  int v90;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v105;
  int v106;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v125;
  uint64_t v126;

  if ((a63 & 0x100000000) != 0)
    a43 = STACK[0x228];
  if ((a63 & 0x100000000) != 0)
    v82 = STACK[0x320];
  else
    v82 = STACK[0x288];
  v83 = a50;
  if ((a63 & 0x100000000) != 0)
  {
    v84 = a44;
  }
  else
  {
    v83 = a48;
    v84 = HIDWORD(a47);
  }
  if ((a63 & 0x100000000) != 0)
    a45 = a46;
  v86 = LODWORD(STACK[0x328]) == -315061333;
  v87 = STACK[0x224];
  if (LODWORD(STACK[0x328]) != -315061333)
    v87 = STACK[0x220];
  LODWORD(a37) = v87;
  v88 = STACK[0x218];
  if (LODWORD(STACK[0x328]) != -315061333)
    v88 = STACK[0x214];
  LODWORD(STACK[0x228]) = v88;
  if (v86)
    a77 = a76;
  LODWORD(STACK[0x220]) = a77;
  if (v86)
    v90 = v83;
  else
    v90 = a54;
  LODWORD(STACK[0x224]) = v90;
  if (v86)
    a75 = a74;
  LODWORD(a38) = a75;
  v92 = HIDWORD(a40) ^ a78 ^ 0x7E3C5639;
  HIDWORD(a40) = v82;
  if (v86)
    v93 = a43;
  else
    v93 = v82;
  LODWORD(a54) = v93;
  LODWORD(STACK[0x218]) = v84;
  HIDWORD(v126) = a45;
  if (v86)
    v94 = v84;
  else
    v94 = a45;
  LODWORD(STACK[0x288]) = v94;
  if ((a72 & 1) != 0)
    v95 = a30;
  else
    v95 = v92;
  if ((a72 & 1) != 0)
    v96 = v92;
  else
    v96 = HIDWORD(a29);
  if ((a72 & 1) != 0)
    v97 = a40;
  else
    v97 = a36;
  v98 = HIDWORD(a35);
  if ((a72 & 1) == 0)
    v98 = a35;
  v99 = a34;
  if ((a72 & 1) == 0)
    v99 = HIDWORD(a31);
  v100 = HIDWORD(a33);
  if ((a72 & 1) == 0)
    v100 = a33;
  LODWORD(STACK[0x350]) = v100;
  v101 = HIDWORD(a30);
  if ((a72 & 1) != 0)
    v101 = HIDWORD(a32);
  HIDWORD(a35) = v97;
  LODWORD(a36) = v95;
  if ((STACK[0x2E8] & 2) == 0)
    a70 = v95;
  LODWORD(a50) = a70;
  LODWORD(a40) = v96;
  if ((STACK[0x2E8] & 2) != 0)
    a73 = v96;
  LODWORD(a61) = a73;
  if ((STACK[0x2E8] & 2) == 0)
    a69 = v97;
  LODWORD(a48) = a69;
  if ((STACK[0x2E8] & 2) != 0)
    v105 = v98;
  else
    v105 = v99;
  HIDWORD(a47) = v105;
  if ((STACK[0x2E8] & 2) != 0)
    v98 = v99;
  LODWORD(v126) = v98;
  v106 = a32;
  if ((STACK[0x2E8] & 2) == 0)
    v106 = a31;
  HIDWORD(v125) = v106;
  if ((STACK[0x2E8] & 2) == 0)
    a79 = v101;
  LODWORD(v125) = a79;
  v108 = v80 - 318500354 + ((unint64_t)(v80 < (((_DWORD)a1 - 53) ^ 0x12FBEC06u)) << 32);
  v109 = *(_QWORD *)(STACK[0x498] + 8 * v108);
  v110 = 0x5F3D51B5D321F3ADLL * v109 - ((0x3E7AA36BA643E75ALL * v109) & 0x7F2CCEF1F7D4266ELL) - 0x406998870415ECC9;
  *(_QWORD *)(STACK[0x4A8] + 8 * v108) = v109 ^ 0xAEAEAEAEAEAEAEAELL;
  v111 = ((2 * ((v79 ^ 0xAC28D8CDA4789D88 ^ v110) + v108)) & 0xD7FFF3BF7DB5E7FELL)
       + (((v79 ^ 0xAC28D8CDA4789D88 ^ v110) + v108) ^ 0x6BFFF9DFBEDAF3FFLL);
  v112 = v111
       + (((v111 - 0x6BFFF9DFBEDAF3FFLL) >> 32) ^ 0x81EAA302159391D4)
       - (((v111 - 0x6BFFF9DFBEDAF3FFLL) >> 31) & 0x1D4D8DC56);
  v113 = v112
       + (((v112 + 0x1215631E2B917A2DLL) >> 16) ^ 0x5B189CEF5A66B6BFLL)
       + (((v112 + 0x1215631E2B917A2DLL) >> 15) & 0x139DEB4CD6D7ELL);
  v114 = v113
       + (((v113 - 0x490339D12ED53C92) >> 8) ^ 0x288141300F008084)
       - (((v113 - 0x490339D12ED53C92) >> 7) & 0xFD7D9FE1FEFEF6)
       + 2;
  v115 = v114 - ((2 * v114 - 0x750278EF9872A0B0) & 0xF9E2A80AEB166326) - 0x3D8FE87256AE1EC5;
  v116 = ((2 * ((v110 ^ 0xC367337D8E6122A4 ^ v115) + v108)) & 0xFF4A5FEF95F9B67ELL)
       + (((v110 ^ 0xC367337D8E6122A4 ^ v115) + v108) ^ 0xFFA52FF7CAFCDB3FLL);
  v117 = v116
       + (((v116 + 0x5AD008350324C1) >> 32) ^ 0x2A110412890103B2)
       - (((v116 + 0x5AD008350324C1) >> 31) & 0xEDFDF89A);
  v118 = v117
       + (((v117 - 0x29B6340A53FDDEF1) >> 16) ^ 0x7E9DFF3BA6BDBFFFLL)
       + (((v117 - 0x29B6340A53FDDEF1) >> 15) & 0x1FE774D7B7FFELL);
  v119 = v118
       + (((v118 + 0x57ABCCBA05446110) >> 8) ^ 0x11012A1162280000)
       - (((v118 + 0x57ABCCBA05446110) >> 7) & 0x1FDABDD3BAFFFFELL)
       + 2;
  v120 = v119 - ((2 * v119 + 0x1B5BC26429719B9CLL) & 0x1EE642CF0D2CE346) - 0x72DEFD6664B0C08FLL;
  v121 = ((2 * ((v110 ^ 0x30E5461F7D7C6294 ^ v120) + v108)) & 0xAECFD17FFFEEFBEELL)
       + (((v110 ^ 0x30E5461F7D7C6294 ^ v120) + v108) ^ 0xD767E8BFFFF77DF7);
  v122 = v121
       + (((v121 + 0x2898174000088209) >> 32) ^ 0x6056008DC888218)
       - (((v121 + 0x2898174000088209) >> 31) & 0x46EEFBCE);
  v123 = v122
       + (((v122 + 0x2292B737237FFFF1) >> 16) ^ 0xFFB9ABBDFD5B473FLL)
       + (((v122 + 0x2292B737237FFFF1) >> 15) & 0x1577BFAB68E7ELL);
  HIDWORD(a52) = a66 ^ 0xD87DBFDF;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + (int)((1939 * (v80 - 318500353 > 1)) ^ a1)) - 8))(a1, 318500354, 0x17CEE5F7EDBFAF0, 3688890070, 364670442, v123+ (((v123 + 0x22D90B792624B8B2) >> 8) ^ 0x104188D040920287)- (((v123 + 0x22D90B792624B8B2) >> 7) & 0x17CEE5F7EDBFAF0)+ 2, 1975353146, 2243753618, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v125,
           v126,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

void sub_1001F7494()
{
  JUMPOUT(0x1001F6E8CLL);
}

uint64_t sub_1001F74A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43,uint64_t a44,int a45,int a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;
  int v69;
  int v70;
  int v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  int v112;
  int v113;
  int v114;
  unint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  char v119;
  BOOL v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;

  v73 = (((unint64_t)(a6 - 0x799035B1F46D5CC5) >> 29) & 0x25F9FFBFELL)
      + a6
      + ((v72 - 80) ^ ((unint64_t)(a6 - 0x799035B1F46D5CC5) >> 30) ^ 0x1CBF3F792FCFFC4BLL);
  v74 = (((v73 + 0x69B08AD4DBC2A53CLL) >> 12) ^ 0x9F3FDFC7FB9B3D47)
      + v73
      + (((v73 + 0x69B08AD4DBC2A53CLL) >> 11) & 0x1FBF8FF7367A8ELL);
  v75 = v74
      + (((v74 - 0x358F54F31FD8980BLL) >> 7) ^ 0x9028040100800A2)
      - (((v74 - 0x358F54F31FD8980BLL) >> 6) & 0x1FAFF7FDFEFFEBALL)
      + 1;
  v76 = v75 - ((2 * v75 - 0x7D23AA665FC1315CLL) & 0xB994C7432146485CLL) - 0x61C771919F3D7480;
  v77 = ((2 * ((v76 ^ 0xDCCA63A190A3242ELL) + 0x288AB139EA2E5744)) & 0xE7FF5757FC7C7DDALL)
      + (((v76 ^ 0xDCCA63A190A3242ELL) + 0x288AB139EA2E5744) ^ 0xF3FFABABFE3E3EEDLL);
  v78 = v77
      + (((v77 + 0xC00545401C1C113) >> 24) ^ 0x90840C1102002293)
      - (((v77 + 0xC00545401C1C113) >> 23) & 0x1DDFBFFBAD8);
  v79 = v78
      + (((v78 + 0x7B7C4842FFC19E80) >> 13) ^ 0x3758017820281821)
      - (((v78 + 0x7B7C4842FFC19E80) >> 12) & 0xFFD0FBFAFCFBCLL);
  v80 = v79
      + (((v79 + 0x442446CADF99865FLL) >> 5) ^ 0x10287908AC2000)
      - (((v79 + 0x442446CADF99865FLL) >> 4) & 0xFDFAF0DEEA7BFFELL)
      + 3;
  v81 = v80 - ((2 * v80 + 0x8283CA3ADDACCB8) & 0x25D9AD49E1AA794ELL) - 0x28FF0B09383D5CFDLL;
  v82 = (v81 ^ 0xBAFDD8F5F3752987)
      + ((v81 >> 31) ^ 0x101244053DFB11CBLL)
      + ((v81 >> 30) & 0x36FFEBFBELL ^ 0xFFFFFFFD9409DC69)
      - 0x101244044800A01FLL;
  v83 = (((((2 * v82) & 0xF37BEABB76FFFBFCLL) + (v82 ^ 0xF9BDF55DBB7FFDFELL) + 0x6420AA244800202) >> 11) ^ 0xEEBCEFF7F50F915DLL)
      + ((2 * v82) & 0xF37BEABB76FFFBFCLL)
      + (v82 ^ 0xF9BDF55DBB7FFDFELL)
      + (((((2 * v82) & 0xF37BEABB76FFFBFCLL) + (v82 ^ 0xF9BDF55DBB7FFDFELL) + 0x6420AA244800202) >> 10) & 0x39DFEFEA1F22BALL);
  v84 = (((v83 + 0x17851AAA4F7070A5) >> 4) ^ 0x7FFB3BA2F7E86FFFLL)
      + v83
      + (((v83 + 0x17851AAA4F7070A5) >> 3) & 0x1FF67745EFD0DFFELL);
  v85 = v84 - 0x6805E993C067D362 + (~(2 * v84 + 0x13BE0EAF10014CLL) | 0xFF1F91362FDFA811);
  v86 = ((2 * ((v85 ^ 0x703764E8102BF7) + 0x1E4A8A832E7300A6)) & 0xFFFFFDBFF67FBEAELL)
      + (((v85 ^ 0x703764E8102BF7) + 0x1E4A8A832E7300A6) ^ 0xFFFFFEDFFB3FDF57);
  v87 = v86
      + (((v86 + 0x12004C020A9) >> 30) ^ 0x44008C0CEA028C11)
      - (((v86 + 0x12004C020A9) >> 29) & 0x62BFAE7DCLL);
  v88 = v87
      + (((v87 - 0x44008AECE5426B68) >> 15) ^ 0x3938FAFF87F3BF9ELL)
      + (((v87 - 0x44008AECE5426B68) >> 14) & 0x1F5FF0FE77F3CLL);
  v89 = v88
      + (((v88 - 0x7D3985EC6D362B06) >> 8) ^ 0xFFB5E77BEFB75DF7)
      + (((v88 - 0x7D3985EC6D362B06) >> 7) & 0x16BCEF7DF6EBBEELL)
      + 1;
  v90 = v89 - ((2 * v89 + 0x621252F4624EE04) & 0xD460B24072623150) - 0x12BF144823BC7056;
  v91 = ((2 * ((v90 ^ 0x6A305920393118A8) + 0x2C1E97BC5C429E81)) & 0xF2FDEFBF2E4FF3FCLL)
      + (((v90 ^ 0x6A305920393118A8) + 0x2C1E97BC5C429E81) ^ 0x797EF7DF9727F9FELL);
  v92 = (((v91 - 0x797EF7DF9727F9FELL) >> 27) ^ 0xFFDB7CF077FEBF48)
      + v91
      + (((v91 - 0x797EF7DF9727F9FELL) >> 26) & 0x20EFFD7E90);
  v93 = (((v92 - 0x795A74D00F26B946) >> 15) ^ 0x777F37F75DABEDEBLL)
      + v92
      + (((v92 - 0x795A74D00F26B946) >> 14) & 0x26FEEBB57DBD6);
  v94 = (((v93 + 0xF265338932D58CFLL) >> 8) ^ 0xF2D43FFAFD7FD63BLL)
      + v93
      + (((v93 + 0xF265338932D58CFLL) >> 7) & 0x1A87FF5FAFFAC76);
  v95 = v94 - ((2 * v94 + 0x38A4267B2B5B0528) & 0x220468122728BA24) + 0x2D544746A941DFA6;
  v96 = (v95 ^ 0x8D13B1AEBFEB8D82)
      + ((v95 >> 30) ^ 0x7D5FF5FDC9B9F95DLL)
      + ((v95 >> 29) & 0x7FBEE7FCELL ^ 0x4688C0D44)
      - 0x7D5FF5FFFDF73FE7;
  v97 = (((((2 * v96) & 0xD65EF7AFFEFF96C0) + (v96 ^ 0xEB2F7BD7FF7FCB60) + 0x14D08428008034A0) >> 8) ^ 0x7FFEEFBFF985EE7DLL)
      + ((2 * v96) & 0xD65EF7AFFEFF96C0)
      + (v96 ^ 0xEB2F7BD7FF7FCB60)
      + (((((2 * v96) & 0xD65EF7AFFEFF96C0) + (v96 ^ 0xEB2F7BD7FF7FCB60) + 0x14D08428008034A0) >> 7) & 0x1FDDF7FF30BDCFALL);
  v98 = v97
      + (((v97 - 0x6B2E6B97F905B9DDLL) >> 8) ^ 0x1C300212041A60A9)
      - (((v97 - 0x6B2E6B97F905B9DDLL) >> 7) & 0x19FFBDBF7CB3EACLL)
      + 1;
  v99 = v98 - ((2 * v98 + 0x14324AC05BFCAF2) & 0xF29198417489EBALL) - 0x7FC9E0E7F17BCB2ALL;
  v100 = ((2 * ((v99 ^ 0x7948CC20BA44F5DLL) + 0x75D572E7727DD82)) & 0x13B779FDE753FFFALL)
       + (((v99 ^ 0x7948CC20BA44F5DLL) + 0x75D572E7727DD82) ^ 0x89DBBCFEF3A9FFFDLL);
  v101 = v100
       + (((v100 + 0x762443010C560003) >> 30) ^ 0xE000180688040078)
       - (((v100 + 0x762443010C560003) >> 29) & 0x2EFF7FF0ELL);
  v102 = v101
       + (((v101 - 0x69DBD5057BAE0075) >> 9) ^ 0x9717040201908061)
       - (((v101 - 0x69DBD5057BAE0075) >> 8) & 0xD1F7FBFCDEFF3CLL);
  v103 = v102
       + (((v102 - 0xF2D9077D3E80D6) >> 7) ^ 0xCCFFF2FBB7FFEDF7)
       + (((v102 - 0xF2D9077D3E80D6) >> 6) & 0x1FFE5F76FFFDBEELL)
       + 2;
  v104 = v103 - ((2 * v103 + 0x641A67F995832262) & 0x42DA25FBA8265986) - 0x2C85B905612B420CLL;
  v105 = ((2 * ((v104 ^ 0xA16D12FDD4132CC3) + 0x20226CA5EA003BB7)) & 0xEEFDD7F8F63E7AFELL)
       + (((v104 ^ 0xA16D12FDD4132CC3) + 0x20226CA5EA003BB7) ^ 0x777EEBFC7B1F3D7FLL);
  v106 = v105
       + (((v105 - 0x777EEBFC7B1F3D7FLL) >> 27) ^ 0x8081010900246000)
       - (((v105 - 0x777EEBFC7B1F3D7FLL) >> 26) & 0x2DFFB73FFELL);
  v107 = v106
       + (((v106 + 0x80012FA84BC6281) >> 13) ^ 0x57FEFD7E76BED76FLL)
       + (((v106 + 0x80012FA84BC6281) >> 12) & 0xDFAFCED7DAEDELL);
  v108 = v107
       + (((v107 - 0x4FFEEA83F20274EELL) >> 4) ^ 0x7FBFB707D6EF9FF5)
       + (((v107 - 0x4FFEEA83F20274EELL) >> 3) & 0x1F7F6E0FADDF3FEALL)
       + 1;
  v109 = v108 - ((2 * v108 + 0x2082BCE86E1BD638) & 0x3F8E45F7AB40589ALL) + 0x500881700CAE1769;
  v110 = (v109 ^ 0x6DA080B3AA4AD302)
       + ((v109 >> 26) ^ 0x7FB7DFA7BB475705)
       + ((v109 >> 25) & 0x79A6CEF7DELL ^ 0x30804051D4)
       - 0x7FB7DFBCD3677BEFLL;
  v111 = ((2 * v110) & 0x5FFF9FAABF5D5FBELL)
       + (v110 ^ 0x2FFFCFD55FAEAFDFLL)
       + (((((2 * v110) & 0x5FFF9FAABF5D5FBELL) + (v110 ^ 0x2FFFCFD55FAEAFDFuLL) - 0x2FFFCFD55FAEAFDFLL) >> 15) ^ 0x12084A94E0005009)
       - (((((2 * v110) & 0x5FFF9FAABF5D5FBELL) + (v110 ^ 0x2FFFCFD55FAEAFDFuLL) - 0x2FFFCFD55FAEAFDFLL) >> 14) & 0x36AD63FFF5FECLL);
  v112 = ((v111 - 0x42081A6A3FAEFFE8) >> 6) - (((v111 - 0x42081A6A3FAEFFE8) >> 5) & 0xF6C76080);
  LODWORD(v111) = ((2 * (v111 - 1068433384)) & 0xFF6B9FFE)
                + ((v111 - 1068433384) ^ 0xFFB5CFFF)
                + ((v112 - 77352896) ^ 0xE6790CC2)
                + ((2 * (v112 - 77352896)) & 0xC5CA86FA ^ 0x3B3DFF7F);
  v113 = v99 ^ v85 ^ v69 ^ (v111 - 2 * ((v111 + 53441408) & 0xAF6C51E ^ v111 & 0x1A) + 1847998596);
  LODWORD(v85) = (((2 * (v113 & 7 ^ 0xA6586F41)) | 0xEEF5A00A) - (v113 & 7 ^ 0xA6586F41) + 142946299) ^ 0x7369BF62;
  v114 = (v85 | 0x14993C17) - (v85 | 0xEB66C3E8) - 345586712;
  LODWORD(v85) = (((v113 ^ 0x4617345) + 1) ^ 3) + 2 * ((v113 ^ 0x4617345) + 1) + 5;
  v115 = ((v85 & 7) - ((2 * (_DWORD)v85) & 0xA) - 1814470115) ^ 0x93D9621D;
  v116 = 255;
  if (v114 == 919747635)
    v116 = 0;
  STACK[0x320] = v115;
  v117 = (v116 << v115) - ((2 * (v116 << v115)) & 0x3FA64FB8) - 1613551652;
  v118 = (v117 ^ 0x67)
       + ((2 * v117) & 0x76 ^ 0x30)
       + 69
       + ((((2 * v117) ^ 0xB8) - ((2 * ((2 * v117) ^ 0xB8)) & 0x88) + 68) ^ 0xBB);
  v119 = (v118 ^ 0xF2) + 14 + ((2 * v118) & 0xE4);
  if (v114 == 919747635)
    v119 = 0;
  v120 = LODWORD(STACK[0x328]) == -315061333;
  v121 = STACK[0x2D0];
  if (LODWORD(STACK[0x328]) == -315061333)
    v121 = STACK[0x21C];
  LODWORD(STACK[0x214]) = v121;
  v122 = STACK[0x218];
  if (v120)
    v122 = a46;
  LODWORD(STACK[0x218]) = v122;
  v123 = STACK[0x210];
  if (!v120)
    v123 = STACK[0x20C];
  LODWORD(STACK[0x210]) = v123;
  v124 = STACK[0x208];
  if (!v120)
    v124 = STACK[0x204];
  LODWORD(STACK[0x20C]) = v124;
  if ((a69 & 1) != 0)
    a43 = a47;
  v126 = v90 ^ v76 ^ v70 ^ v104;
  v127 = v95 ^ v81 ^ v71 ^ v109;
  v128 = ((v126 & 0x7F ^ 0x13) - ((2 * (v126 & 0x7F ^ 0x13)) & 0x14) + 898999946) ^ 0x351DB68B;
  v129 = (((2 * v128) | 0x85DE4244) - v128 + 1024515806) ^ 0xC2673120;
  v130 = (((2 * (v117 ^ 0x6F)) & 0xFFFFFF3F) - (v117 ^ 0x6F) - 68209568) ^ 0xFBEF34D3;
  v131 = ((v119 & (v126 ^ 0xD6)) + (~(2 * (v119 & (v126 ^ 0xD6))) | 0x59) - 44) ^ 0x5F;
  v132 = ((v131 | 0xC5EE9834) - (v131 | 0x3A1167CB) + 974219211) ^ 0x4FEEBAB0;
  v133 = (((2 * ((v127 ^ BYTE1(v127) ^ BYTE2(v127)) ^ 0x36600703)) | 0x69F031BA)
        - ((v127 ^ BYTE1(v127) ^ BYTE2(v127)) ^ 0x36600703)
        + 1258809123) ^ HIBYTE(v127) ^ 0x82981F19;
  LODWORD(STACK[0x2D0]) = (2 * v126) & 0xDDFB7F74 ^ 0xD0095220;
  LODWORD(STACK[0x2D8]) = 33686018 * v129;
  LODWORD(STACK[0x2E0]) = (((2 * v132) & 0x1256D6F6) - v132 + 1993643140) ^ ((~(33686018 * v130) | 0x6DB07AA9)
                                                                           + 16843009 * v130
                                                                           - 920141140);
  LODWORD(STACK[0x200]) = (16843009 * v133 - ((33686018 * v133) & 0xCAA66C64) - 447531470) ^ 0x4D40146D;
  LODWORD(STACK[0x21C]) = a43;
  return sub_1001C95B8(944);
}

uint64_t sub_1001F87BC()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;

  v1 = STACK[0x280];
  v2 = (LODWORD(STACK[0x280]) + 378119576) & 0xE9765BA6;
  v3 = (LODWORD(STACK[0x280]) + 1935652711) ^ v0;
  LODWORD(STACK[0x310]) = v3;
  if (v3 <= 1)
    v4 = 1;
  else
    v4 = v3;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((206 * (v4 - 17 >= v2 - 427)) ^ v1)))();
}

uint64_t sub_1001F8838()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + ((8 * (v0 < ((v1 - 220) ^ 0x415u))) | (16 * (v0 < ((v1 - 220) ^ 0x415u))) | v1))
                            - (((v1 - 689) | 0x480u) ^ 0x6B8)))();
}

uint64_t sub_1001F8884(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  *(_OWORD *)STACK[0x328] = xmmword_100254780;
  return ((uint64_t (*)(__n128))*(&off_1002C8B50
                                          + ((235
                                            * ((((v4 & 0xFFFFFFF0) == 16) ^ (29 * (a4 ^ 0xA3))) & 1)) ^ (a4 - 573))))((__n128)xmmword_100254780);
}

void sub_1001F88DC()
{
  JUMPOUT(0x1001F88B8);
}

uint64_t sub_1001F88E4()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((385 * (((v1 == v2) ^ (v0 + 26)) & 1)) ^ v0)))();
}

uint64_t sub_1001F891C()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50
                                      + (int)(((((v0 + 474) | 4) - 1008) * ((v1 >> 3) & 1)) ^ (v0 + 348)))
                            - 12))();
}

uint64_t sub_1001F895C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  int8x16x4_t v7;

  v7.val[0].i64[0] = v5 & 8;
  v7.val[0].i64[1] = (11 * (v3 ^ 0x40C)) ^ 0x62 | v5 & 8;
  v7.val[1].i64[0] = v7.val[0].i64[0] | 2;
  v7.val[1].i64[1] = v7.val[0].i64[0] | 3;
  v7.val[2].i64[0] = v7.val[0].i64[0] | 4;
  v7.val[2].i64[1] = v7.val[0].i64[0] | 5;
  v7.val[3].i64[0] = v7.val[0].i64[0] | 6;
  v7.val[3].i64[1] = v7.val[0].i64[0] | 7;
  *(int8x8_t *)(STACK[0x328] + v5) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(a3 + v7.val[0].i64[0]), *(int8x8_t *)(a1 + v7.val[0].i64[0])), *(int8x8_t *)(a2 + v7.val[0].i64[0])), (int8x8_t)0x1818181818181818), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v7, (int8x16_t)xmmword_100254790), (int8x8_t)0xB0B0B0B0B0B0B0BLL));
  return ((uint64_t (*)(__n128))((char *)*(&off_1002C8B50 + ((42 * ((v4 & 0xFFFFFFF8) - 8 == v5)) ^ v3)) - 12))((__n128)xmmword_100254790);
}

void sub_1001F8A3C()
{
  JUMPOUT(0x1001F89A0);
}

uint64_t sub_1001F8A44()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))*(&off_1002C8B50
                             + (int)((((v1 + 1537353624) & 0xA45DD9A6 ^ ((v1 - 32) | 0x100) ^ 0x2A5) * (v0 == v2)) ^ v1)))();
}

uint64_t sub_1001F8A90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;

  *(_BYTE *)(STACK[0x328] + (v4 - 954000439)) = *(_BYTE *)(a4 + ((v4 - 954000439) & 0xFLL)) ^ *(_BYTE *)(a1 + (((_BYTE)v4 - 55) & 0xF)) ^ *(_BYTE *)(a2 + (((_BYTE)v4 - 55) & 0xF)) ^ (((v4 - 55) & 0xF) * (a3 ^ 0xA9)) ^ 0x18;
  return ((uint64_t (*)(void))*(&off_1002C8B50 + ((901 * (v4 == v6 + v5 - 1)) ^ a3)))();
}

void sub_1001F8B04()
{
  JUMPOUT(0x1001F8AB4);
}

uint64_t sub_1001F8B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((1555 * (v3 + 8 == v5)) ^ v4))
                            - (((v4 ^ 0x7B3u) - 565) ^ (v4 + 892))))();
}

uint64_t sub_1001F8B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  LODWORD(STACK[0x330]) = v4;
  STACK[0x4C8] = 0xE7E06F487EE8DF97;
  LODWORD(STACK[0x444]) = dword_1003059C0 - 73583857;
  v6 = *(unsigned int *)aHAwAwAwAwAwAwA;
  v7 = 1856021207
     * ((((v5 - 152) | 0x8A6AD391298A1BEDLL) - (v5 - 152) + ((v5 - 152) & 0x75952C6ED675E410)) ^ 0x677E440A67E3CD13);
  *(_DWORD *)(v5 - 140) = v3 + 1877625344 + v7;
  *(_DWORD *)(v5 - 120) = v7 + v3 + 1123495865;
  *(_DWORD *)(v5 - 116) = v7;
  *(_QWORD *)(v5 - 136) = v6 - v7;
  *(_QWORD *)(v5 - 128) = v7 ^ 0x295F683D;
  *(_DWORD *)(v5 - 148) = (v3 + 1877625358) ^ v7;
  *(_DWORD *)(v5 - 144) = v7 ^ (v3 + 1877625344) ^ 0x53;
  v9 = sub_100218378(v5 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * *(int *)(v5 - 152)) - 8))(v9);
}

uint64_t sub_1001F8C48()
{
  int v0;
  uint32_t v1;

  v0 = LODWORD(STACK[0x34C]) - 1222;
  STACK[0x350] = (unint64_t)malloc_type_malloc(STACK[0x328], 0xC5732911uLL);
  v1 = arc4random();
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = v1 + 1465998909 - ((v1 << (v0 ^ 0xEB)) & 0xAEC2BC7A);
  *(_DWORD *)&aHAwAwAwAwAwAwA[8] = ((1812433253
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xB3EBDFF8 ^ ((*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30) | 0xE48A81C4))) ^ 0xFBFBFF3D)
                                 + ((-670100790
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xB3EBDFF8 ^ ((*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30) | 0xE48A81C4))) & ((v0 - 833546813) & 0x31AEEAD6 ^ 0xF7F7FCFE))
                                 + 1533370113
                                 - ((2
                                   * (((1812433253
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xB3EBDFF8 ^ ((*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30) | 0xE48A81C4))) ^ 0xFBFBFF3D)
                                    + ((-670100790
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xB3EBDFF8 ^ ((*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30) | 0xE48A81C4))) & ((v0 - 833546813) & 0x31AEEAD6 ^ 0xF7F7FCFE)))
                                   + 134742408) & 0xAEC2BC7A);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + v0) - 12))();
}

void sub_1001F8D88()
{
  JUMPOUT(0x1001F8D18);
}

uint64_t sub_1001F8DA4()
{
  int8x16_t v0;
  int v1;
  const float *v2;
  int8x16_t v3;
  int8x16_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int32x4_t v8;
  int8x16_t v9;

  v1 = 409 * (LODWORD(STACK[0x34C]) ^ 0x6B3);
  v2 = (const float *)&aHAwAwAwAwAwAwA[4];
  v3 = (int8x16_t)vld1q_dup_f32(v2);
  v4.i64[0] = 0x8000000080000000;
  v4.i64[1] = 0x8000000080000000;
  v0.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[8];
  v0.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[16];
  v5 = vextq_s8(v3, v0, 0xCuLL);
  v6 = v0;
  v6.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[20];
  v7 = veorq_s8(vandq_s8(v6, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x5B75524Eu));
  v8 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32((int32x4_t)vandq_s8(v7, (int8x16_t)vdupq_n_s32(0x645C2AB6u)), (int32x4_t)vorrq_s8(v7, (int8x16_t)vdupq_n_s32(0xE45C2AB7))), (int8x16_t)vdupq_n_s32(0x17B7D93Bu));
  v9.i32[0] = *((_DWORD *)&STACK[0x4C8] + ((aHAwAwAwAwAwAwA[8] & 1) == 0));
  v9.i32[1] = *((_DWORD *)&STACK[0x4C8] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[12] & 1));
  v9.i32[2] = *((_DWORD *)&STACK[0x4C8] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[16] & 1));
  v9.i32[3] = *((_DWORD *)&STACK[0x4C8] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[20] & 1));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[4] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[1592], v9), (int8x16_t)vdupq_n_s32(0x79EEFAD2u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vbicq_s8(v4, v5), (int8x16_t)vdupq_n_s32(0x8E0C4A8B)), v8), (int32x4_t)vmvnq_s8(vandq_s8((int8x16_t)vaddq_s32(v8, v8), (int8x16_t)vdupq_n_s32(0x1C189514u)))), 1uLL));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (v1 ^ 0x2D7)) - 8))();
}

uint64_t sub_1001F97BC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, int a3@<W5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v8 = -451793628 - ((v6 & 0x80000000 | 0x6888635C) & (a3 + 6));
  v9 = *(_DWORD *)(a2 + 4 * (v7 + a4 + ((a6 - 1225) | 0xB8u)));
  v10 = (((v9 & 0x7FFFFFFE ^ 0x5B75524E) & 0x645C2AB6) - (v9 & 0x7FFFFFFE ^ 0x5B75524E | 0xE45C2AB7)) ^ 0x17B7D93B;
  *(_DWORD *)(a2 + 4 * (v7 + a4) + 740) = *(_DWORD *)(a2 + 4 * (v7 + a4) + 2328) ^ *((_DWORD *)&STACK[0x4C8]
                                                                                   + ((v9 & 1) == 0)) ^ ((v10 + (v8 & 0x80000000 ^ 0x8E0C4A8B) + (~(2 * v10) | 0xE3E76AEB)) >> 1) ^ 0x79EEFAD2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((31 * (v7 + 1 == a5 + 3)) ^ a6)) - 8))();
}

uint64_t sub_1001F98A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  int8x16_t v7;
  unsigned int v8;
  const float *v9;
  int8x16_t v10;
  uint64_t v11;
  int32x4_t v12;
  int32x4_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int32x4_t v18;
  int8x16_t v19;
  int32x4_t v20;
  int8x16_t v21;

  v8 = (v6 - 1302990607) & 0x4DAA0EF7;
  v9 = (const float *)(a5 + 908);
  v10 = (int8x16_t)vld1q_dup_f32(v9);
  v11 = 4 * v8 + 264;
  v12 = vdupq_n_s32(0xE18AC144);
  v13 = vdupq_n_s32(0x10D826D7u);
  v14.i64[0] = 0x8000000080000000;
  v14.i64[1] = 0x8000000080000000;
  v7.i32[0] = *(_DWORD *)(a5 + 912);
  v7.i32[1] = *(_DWORD *)(a5 + v11);
  v7.i32[2] = *(_DWORD *)(a5 + 920);
  v15 = vextq_s8(v10, v7, 0xCuLL);
  v16 = v7;
  v16.i32[3] = *(_DWORD *)(a5 + 924);
  v17 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v15, v14), v12);
  v18 = (int32x4_t)veorq_s8(vandq_s8(v16, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x1CB35CF4u));
  v19 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v18, v18), (int8x16_t)vdupq_n_s32(0xA761B6C2)), v18), vdupq_n_s32(0x2C4F249Fu)), (int8x16_t)vdupq_n_s32(0xD070D921));
  v20 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v19, (int8x16_t)vdupq_n_s32(0xEF27D928)), (int32x4_t)vorrq_s8(v19, (int8x16_t)v13)), v13), (int8x16_t)vdupq_n_s32(0xA735D9A0));
  v21.i32[0] = *(_DWORD *)(v5 + 4 * ((*(_DWORD *)(a5 + 912) & 1) == 0));
  v21.i32[1] = *(_DWORD *)(v5 + 4 * ((*(_DWORD *)(a5 + v11) & 1) == 0));
  v21.i32[2] = *(_DWORD *)(v5 + 4 * (~*(_DWORD *)(a5 + 920) & 1));
  v21.i32[3] = *(_DWORD *)(v5 + 4 * (~v16.i32[3] & 1));
  *(int8x16_t *)(a5 + 908) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)a5, v21), (int8x16_t)vdupq_n_s32(0x313B0FEDu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v20, veorq_s8(v17, (int8x16_t)v12)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), (int8x16_t)vdupq_n_s32(0x3F4F41E8u))), vdupq_n_s32(0x9FA7A0F4)), 1uLL));
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (v8 ^ 0x19)) - 12))();
}

void sub_1001F9A60()
{
  JUMPOUT(0x1001F996CLL);
}

uint64_t sub_1001F9A6C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;

  v2 = (((((a1 + 135) ^ 0x1FC) + 1498) ^ 0x1B04AD06 ^ ((((8 * ((a1 + 135) ^ 0x1FC) + 2147481934) & *(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xD6173B0) & 0x6B2C2B4E)
                                                     - ((8 * ((a1 + 135) ^ 0x1FC) + 2147481934) & *(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xD6173B0 | 0xEB2C2B4F)))
      - 1) ^ 0x55D7528A;
  *(_DWORD *)&aHAwAwAwAwAwAwA[2496] = *(_DWORD *)&aHAwAwAwAwAwAwA[1588] ^ *((_DWORD *)&STACK[0x4C8]
                                                                          + ((aHAwAwAwAwAwAwA[4] & 1) == 0)) ^ (((((*(_DWORD *)&aHAwAwAwAwAwAwA[2496] & 0x80000000) - 388570880) ^ 0xE8D6E100) + v2 - ((2 * v2) & 0x80946D90) - 1068878136) >> 1) ^ 0x1ECDC4F3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1857 * (LODWORD(STACK[0x444]) > 0x26F)) ^ (a1 + 135))) - 4))();
}

uint64_t sub_1001F9B6C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x444]) = 0;
  v2 = LODWORD(STACK[0x444])++;
  dword_1003059C0 = v2 + 73583858;
  v3 = (*(_DWORD *)aHAwAwAwAwAwAwA - 1274634254);
  v4 = 1606104089
     * ((~((v1 - 152) ^ 0x9AF036D0EEA70D4BLL | 0xD7C1FE4EC6377693)
       + (((v1 - 152) ^ 0x9AF036D0EEA70D4BLL) & 0xD7C1FE4EC6377693)) ^ 0x7070CC55A278C619);
  *(_DWORD *)(v1 - 132) = ((a1 + 1651105280) | 0xB) + v4;
  *(_DWORD *)(v1 - 128) = (a1 + 1651105280) ^ v4;
  *(_DWORD *)(v1 - 124) = -1231242094 - v4 + a1;
  *(_QWORD *)(v1 - 120) = 3714451503u - v4;
  *(_QWORD *)(v1 - 152) = v3 + v4;
  *(_DWORD *)(v1 - 140) = v4;
  *(_DWORD *)(v1 - 136) = ((a1 + 1651105280) | 0x43) ^ v4;
  v5 = sub_100175DA4(v1 - 152);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50 + *(int *)(v1 - 144)) - 12))(v5);
}

uint64_t sub_1001F9C8C(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  int v4;

  if (v2 >= v3)
    v4 = (((LODWORD(STACK[0x34C]) - 1707) | 0x47A) ^ 0x47E) + *(_DWORD *)aHAwAwAwAwAwAwA;
  else
    v4 = 694118461;
  *(_DWORD *)aHAwAwAwAwAwAwA = v4;
  return sub_1001F9E00(a1, a2, &off_1002C8B50, STACK[0x2F0], &unk_100254880, byte_10027AF00, &unk_10025CD60, 3924581327);
}

uint64_t sub_1001F9E00@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  char v8;
  int v9;
  int v10;
  unsigned int v11;

  v11 = (v7 ^ (((a7 - 943) ^ 0x1D3u) + a6)) >> (((a7 + 81) | 4) + v8 - 19);
  LOBYTE(v11) = (v11 - ((2 * v11) & 0x5A) + 45) ^ 0x37;
  *(_BYTE *)(a2 + (v10 - 85688685)) = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((252
                                          * (v10
                                           - ((*(unsigned __int8 *)(a3 + ((v10 - 85688685) & 0xFLL)) ^ (91 * ((v10 - 109) & 0xF)) ^ *(unsigned __int8 *)(((v10 - 85688685) & 0xFLL) + a4 + 5) ^ *(unsigned __int8 *)(a5 + ((v10 - 85688685) & 0xFLL))) != v11) != v9)) ^ a7))
                            - 4))();
}

uint64_t sub_1001F9EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  int v4;

  STACK[0x3F0] = STACK[0x310];
  STACK[0x3E8] = v3;
  STACK[0x418] = STACK[0x350];
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((((v4 - 84) ^ (STACK[0x518] == 0)) & 1) == 0) | v4))
                            - ((v4 - 84) | 0x630u)
                            + 1700))();
}

uint64_t sub_1001F9F28(uint64_t a1)
{
  unint64_t v1;
  unsigned int v3;
  char *v4;
  uint64_t v5;
  int v6;

  v1 = 941074649
     * ((((unint64_t)&v3 | 0x6B6B37162FCDE1F4) - ((unint64_t)&v3 & 0x6B6B37162FCDE1F4)) ^ 0x6AEDD0F42F052E90);
  v6 = -804802556 - v1;
  v4 = (char *)&loc_1002185EC + v1 - 4;
  v5 = a1;
  sub_1002184C8((uint64_t)&v3);
  return v3;
}

uint64_t sub_1001F9FDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD v8[4];
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  _QWORD *v14;
  unsigned int v15;
  uint64_t vars0;

  v8[0] = &loc_1001C6924;
  v8[1] = a1;
  v9 = a3;
  v8[2] = a2;
  v8[3] = a4;
  v10 = a5;
  v11 = a6;
  v12 = a7;
  v13 = (230600693
       * ((((&vars0 - 32) | 0x4099155E) - ((&vars0 - 32) & 0x4099155E)) ^ 0x92A59375)) ^ 0x54F58F50;
  v14 = v8;
  sub_1001C67A4((uint64_t)&v13);
  return v15;
}

void sub_1001FA09C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  char *v3;

  v1 = *(_DWORD *)(a1 + 64) + 1448877107 * (a1 ^ 0x713B1D2A);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = (char *)malloc_type_malloc(0x5400uLL, 0xBDD0132FuLL);
  *(_QWORD *)(v2 - 0x3E93D6427590D1A8) = v3 + 0x5C13350084191667;
  __asm { BR              X8 }
}

uint64_t sub_1001FA190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  uint64_t v16;
  _BOOL4 v20;

  v16 = *(unsigned int *)(a14 + 80);
  v20 = (_DWORD)v16 - v15 == 2085568946
     || (*(_DWORD *)(a14 + 32) ^ v15) == 2064621751
     || *(_DWORD *)(a14 + 4) - v15 == 1940630634
     || *(_DWORD *)a14 + v15 == 943899293;
  *(_DWORD *)(*(_QWORD *)(a14 + 56) - 0x58405A597B241F58) = 2047018587;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((224 * v20) ^ v14)) - ((215 * (v14 ^ 0x266)) ^ 0x4ABu) + 1570))(v16, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1001FA24C@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  _BOOL4 v12;

  v8 = a8[5];
  v12 = a8[9] == 0xC2C3062343A3C93
     || a8[6] == 0x511395B3EF1E789
     || v8 == 0x8ED1C57AC03BA80
     || a8[3] == 0x4E36C53A99817805;
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_1002C8B50 + (((((a2 ^ v12) & 1) == 0) * (a2 ^ 0x64C)) ^ a2)))(a1, v8);
}

uint64_t sub_1001FA2E4@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;

  v1 = 199 * (a1 ^ 0x62A);
  v2 = (v1 - 840246062) ^ 0xCDEADFEE;
  *((_DWORD *)&STACK[0x8D0] + (((194 * v2) & 0x55763F9A) + ((97 * v2) ^ 0x2ABB1FCD) - 716852513) % 0x55C) = -840245266;
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50
                                                    + ((1913
                                                      * (((v2 - 840245266 - ((2 * v2 + 2) & 0x9BD5BFDC) + 1) ^ 0xCDEADFE0) > 0x18F)) ^ v1))
                                          - 4))(97);
}

uint64_t sub_1001FAA6C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x1570]) = -840245266;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((8 * ((v2 ^ 0xCDEADFEF) > 0x19F)) | (16
                                                                                            * ((v2 ^ 0xCDEADFEF) > 0x19F)) | (a2 + 1056)))
                                          - 12))(1979067812);
}

uint64_t sub_1001FAB54(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  uint64_t v35;

  v14 = v9 + v8;
  v15 = a7 + v13;
  v16 = (v15 - 1860105850) % 0x190u - 1669107760 + (~(2 * ((v15 - 1860105850) % 0x190u)) | 0xFFFFFC5F) + 1;
  v17 = (((v15 - 1860105850) * (v15 - 1860105850)) ^ 0x67DEE7FF)
      + v12
      + v11
      + ((((v15 - 1860105850) * (v15 - 1860105850)) << ((a2 - 21) ^ 0x71)) & 0xCFBDCFFE);
  v18 = ((((v17 + 1886119219) % 0xFFFF) ^ 0x6D76EFE3) - 1836511203 + ((2 * ((v17 + 1886119219) % 0xFFFF)) & 0x1DFC6))
      % 0x190;
  v19 = a7
      + v13
      - 303071396
      + (((v10 + a8 - 2027623525) * (v10 + a8 - 2027623525)) ^ 0x5E33CCB7)
      + ((2 * (v10 + a8 - 2027623525) * (v10 + a8 - 2027623525)) & 0xBC67996E);
  v20 = 4
      * ((97 * (((2 * ((v12 + v11 - 666186447) % 0x190u)) & 0x15E) + (((v12 + v11 - 666186447) % 0x190u) ^ 0xE553D4AF))
        + 456997981)
       % 0x55C);
  v21 = *(_DWORD *)((char *)&STACK[0x8D0] + v20);
  v22 = 4 * ((97 * (((2 * v18) & 0x1EE) + (v18 ^ 0x6F719AF7)) - 973792491) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8D0] + v20) = *(_DWORD *)((char *)&STACK[0x8D0] + v22);
  v23 = ((((v19 + 1157479796) % 0xFFFF) ^ 0x7BD7DFF7) - 2077745143 + ((2 * ((v19 + 1157479796) % 0xFFFF)) & 0x1BFEE))
      % 0x190;
  *(_DWORD *)((char *)&STACK[0x8D0] + v22) = v21;
  v24 = 4 * ((((194 * (v16 ^ 0x9C836FD0)) & 0x37EE7C) + ((97 * (v16 ^ 0x9C836FD0)) ^ 0xDEFBF73E) + 553966446) % 0x55C);
  v25 = *(_DWORD *)((char *)&STACK[0x8D0] + v24);
  v26 = 4 * ((((194 * v23) & 0x135FE) + ((97 * v23) ^ 0x53DE9AFF) - 1407043667) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8D0] + v24) = *(_DWORD *)((char *)&STACK[0x8D0] + v26);
  v27 = (((v14 - 582432868) * (v14 - 582432868)) ^ 0x7B7FEDFB)
      + v10
      + a8
      + ((2 * (v14 - 582432868) * (v14 - 582432868)) & 0xF6FFDBF6);
  *(_DWORD *)((char *)&STACK[0x8D0] + v26) = v25;
  LODWORD(v24) = ((((v27 + 195362209) % 0xFFFF) ^ 0x7C7EBFF9)
                - 2088681465
                + ((2 * ((v27 + 195362209) % 0xFFFF)) & 0x17FF2))
               % 0x190;
  v28 = ((v10 + a8 - 2027623525) % 0x190u - 2045952226 - ((2 * ((v10 + a8 - 2027623525) % 0x190u)) & 0x23C)) ^ 0x860D3F1E;
  LODWORD(v26) = 97 * v28;
  v29 = (97 * v28) ^ 0xFBF3B3CD;
  v28 *= 194;
  v30 = *((_DWORD *)&STACK[0x8D0] + ((v28 & 0x1E7679A) + v29 + 67968735) % 0x55C);
  v31 = 4 * ((((194 * (_DWORD)v24) & 0xEFF8) + ((97 * (_DWORD)v24) ^ 0x9FF377FC) + 1611487920) % 0x55C);
  *((_DWORD *)&STACK[0x8D0] + ((v28 & 0x1B9F6FE) + (v26 ^ 0xBBDCFB7F) + 1143199533) % 0x55C) = *(_DWORD *)((char *)&STACK[0x8D0] + v31);
  *(_DWORD *)((char *)&STACK[0x8D0] + v31) = v30;
  LODWORD(v20) = ((v14 - 582432868) % 0x190u - 809361142 - ((2 * ((v14 - 582432868) % 0x190u)) & 0x214)) ^ 0xCFC2210A;
  v32 = (v14
       + (((v17 + 1886119219) * (v17 + 1886119219)) ^ 0x77D7BFEB)
       + ((2 * (v17 + 1886119219) * (v17 + 1886119219)) & 0xEFAF7FD6)
       + 1701906354)
      % 0xFFFF;
  v33 = ((v32 ^ 0x77E557F9) - 2011518969 + ((2 * v32) & 0xAFF2)) % 0x190;
  v34 = (v33 + 1884049702 - ((2 * v33) & 0x24C)) ^ 0x704C5126;
  v35 = 4 * ((((194 * v34) & 0x1F517E) + ((97 * v34) ^ 0x5FFFA8BFu) - 1610536467) % 0x55C);
  LODWORD(v31) = *((_DWORD *)&STACK[0x8D0]
                 + (((194 * (_DWORD)v20) & 0x376DF2) + ((97 * (_DWORD)v20) ^ 0x7BFBB6F9u) - 2080040013) % 0x55C);
  *((_DWORD *)&STACK[0x8D0] + (((194 * (_DWORD)v20) & 0x2FB974) + ((97 * (_DWORD)v20) ^ 0xEF57DCBA) + 279508466) % 0x55C) = *(_DWORD *)((char *)&STACK[0x8D0] + v35);
  *(_DWORD *)((char *)&STACK[0x8D0] + v35) = v31;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + a2 - 365) - 12))();
}

void sub_1001FB130()
{
  JUMPOUT(0x1001FABB0);
}

uint64_t sub_1001FB164@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;

  v4 = *((_DWORD *)&STACK[0x8D0]
       + (((194 * (a1 ^ 0xCDEADFEE)) & 0xFFBFDEFE)
        + 2155309
        + ((97 * (a1 ^ 0xCDEADFEE)) ^ (809 * (v3 ^ 0x672) - 2102995)))
       % 0x55C) ^ 0xCDEADFEE;
  *((_DWORD *)&STACK[0x8D0] + (((194 * v4) & 0xA9E6AF6E) + ((97 * v4) ^ 0xD4F357B7) + 722342533) % 0x55C) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((140
                                          * ((((a1 ^ 0xCDEADFEE)
                                             - 840245266
                                             - ((2 * (a1 ^ 0xCDEADFEE) + 2) & 0x9BD5BFDC)
                                             + 1) ^ v1) < 0x190)) ^ v3))
                            - 12))();
}

uint64_t sub_1001FB268(uint64_t a1, uint64_t a2, unsigned int a3, int a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t (*v16)(void);

  v11 = 4
      * (v8 * v7
       - 1212914617
       - ((((v8 * v7 - 1212914617) * (unint64_t)a3) >> 32) >> 10) * a4);
  v12 = dword_10025DBB0[(((2722 * (*(_DWORD *)(a5 + v11) ^ v6)) & 0xBAF77F7C)
                       + ((1361 * (*(_DWORD *)(a5 + v11) ^ v6)) ^ 0x5D7BBFBE)
                       - 1568041325)
                      % 0x12E0] ^ 0xB7AE8AB6;
  v13 = v12 * v10 - 790419061 - ((-2114329278 * v12) & 0xA1C65316);
  v14 = 8 * ((v13 ^ 0xD0E3298B) * (v13 ^ 0xD0E3298B) - ((2 * (v13 ^ 0xD0E3298B) * (v13 ^ 0xD0E3298B)) & 0x1693E18A));
  v15 = v13 ^ 0x97853DB8 ^ (((v14 - 632322520) ^ 0xDA4F8628)
                          + 969164811
                          - 2 * (((v14 - 632322520) ^ 0xDA4F8628) & 0x39C44818 ^ ((_BYTE)v14 - 88) & 0x10));
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((2 * (v8 != 2049294244)) | (32 * (v8 != 2049294244))) ^ v5)) - 12);
  *(_DWORD *)(a5 + v11) = v15;
  return v16();
}

uint64_t sub_1001FB3B8@<X0>(int a1@<W1>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  uint64_t (*v14)(void);

  v9 = (((v6 - 1535481858) ^ 0xE) - 2044738605 - ((((v3 - 594) | 0x28A) ^ 0xC3F812C) & (2 * ((v6 - 1535481858) ^ 0xE)))) ^ 0x861FC3D3;
  v10 = ((v9 * v4) & 0xF9F67FDE) + ((v9 * a3) ^ 0xFCFB3FEF) + 50992738;
  v11 = *(_DWORD *)(a2 + 4 * (v10 - (((v10 * (unint64_t)v5) >> 32) >> 10) * a1)) ^ 0xB7AE8AB6;
  v12 = v11 * v8 + 1064432081 - ((33154370 * v11) & 0x7EE3E3A2);
  v13 = (8 * ((v12 ^ 0x3F71F1D1) * (v12 ^ 0x3F71F1D1) - ((2 * (v12 ^ 0x3F71F1D1) * (v12 ^ 0x3F71F1D1)) & 0x27C2C12))
       + 166768712) ^ 0x9F0B048;
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((242 * (v6 == 1535482273)) ^ v3)) - 12);
  *((_DWORD *)&STACK[0x8D0] + (97 * v6 + 1382207866) % 0x55Cu) = v12 ^ 0xA1440AF6 ^ (v13
                                                                                   - ((2 * v13) & 0xC12F4E30)
                                                                                   - 526932193);
  return v14();
}

uint64_t sub_1001FB528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  uint64_t v64;
  int v65;
  uint64_t v66;
  int v67;

  v67 = (((v65 - 1658332939) & 0x62D821CA)
       + (((v64 + 268320724) * (v64 + 458225857)) ^ 0xEFF2FEBF)
       + ((2 * (v64 + 268320724) * (v64 + 458225857)) & 0xDFE5FD7E)
       - 1546677728)
      * (v64 + 458225857);
  *(_DWORD *)(*a64 + 4 * (v64 + 2085868788) - 0x5C13350208288733) = ((2 * v67) & 0xE2FDCAFE)
                                                                                    + (v67 ^ 0xF17EE57F)
                                                                                    - ((2
                                                                                      * (((2 * v67) & 0xE2FDCAFE)
                                                                                       + (v67 ^ 0xF17EE57F))
                                                                                      - 437902512) & 0x9BD5BFDC)
                                                                                    + 1088287126;
  return ((uint64_t (*)(void))(*(_QWORD *)(v66 + 8 * ((19 * (v64 == 3836746814)) ^ v65)) - 4))();
}

uint64_t sub_1001FB628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,uint64_t a63)
{
  int a64;
  unsigned int v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;

  v66 = malloc_type_malloc((HIDWORD(a11) + a13 + a12 - ((2 * (HIDWORD(a11) + a13 + a12) + 703259226) & 0x5A200EA0) + 1107654781) ^ 0xAD100750, 0x100004077774924uLL);
  v72 = (a12 + 2006160853) < 0xEB3F423F;
  v66[a62 + HIDWORD(a11) - a64 + 144776599] = *(_BYTE *)(a60 - 0x8ED1C57AC03BA80);
  if ((a12 + 2006160853) >= 0xEB3F423F)
    v72 = (a12 + 2006160853) > 0xEB3F4240;
  return ((uint64_t (*)(_BYTE *, uint64_t, _QWORD, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * ((1229 * (((-41 * (v64 ^ 0x49)) ^ v72) & 1)) ^ v64)) - 12))(v66, v67, HIDWORD(a11), v68, v69, v66, v70, v71, a9, a10, a11);
}

void sub_1001FB770()
{
  JUMPOUT(0x1001FB70CLL);
}

uint64_t sub_1001FB77C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  _BOOL4 v64;

  v64 = (a13 + 1779884717) < 0xE666245F;
  *(_BYTE *)(a6 + (a3 - 2064621751)) = *(_BYTE *)(a62 - 0xC2C3062343A3C93);
  if ((a13 + 1779884717) >= 0xE666245F)
    v64 = (a13 + 1779884717) > 0xE6662460;
  return (*(uint64_t (**)(void))(v63 + 8 * ((62 * v64) ^ (v62 + 840))))();
}

void sub_1001FB834()
{
  JUMPOUT(0x1001FB7D8);
}

uint64_t sub_1001FB840(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  _BOOL4 v67;
  _BOOL4 v68;

  v65 = 347 * (v63 ^ 0x287u);
  v66 = v63 - 118;
  v67 = (a3 - 2035463796) < 0x1BCEA43;
  *(_BYTE *)(a6 + (v65 ^ 0x8C1B7690712DB853) + 0x73E4896F8ED2451BLL) = *(_BYTE *)(a63
                                                                                  - 0x511395B3EF1E789
                                                                                  + (v65 ^ 0x8C1B7690712DB853)
                                                                                  + 0x73E4896F8ED2451BLL)
                                                                       - ((2
                                                                         * *(_BYTE *)(a63
                                                                                    - 0x511395B3EF1E789
                                                                                    + (v65 ^ 0x8C1B7690712DB853)
                                                                                    + 0x73E4896F8ED2451BLL)) & 0x6A)
                                                                       + 53;
  v68 = (a3 - 2035463796) > 0x1BCEA44;
  if (!v67)
    v67 = v68;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v64 + 8 * ((1227 * !v67) ^ v66)) - 8))(1469728142);
}

void sub_1001FB93C()
{
  JUMPOUT(0x1001FB8CCLL);
}

uint64_t sub_1001FB944@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((((v2 ^ (v1 - 16)) > ((a1 + 709) ^ 0x494A2838u) - 1229597988)
                                                                 * (10 * ((a1 + 709) ^ 0x524) - 697)) ^ (a1 + 709)))
                                                   - 12))(53, 53);
}

uint64_t sub_1001FBB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a66;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unint64_t v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  unsigned int v233;
  int v234;
  int v235;
  unsigned int v236;
  int v237;
  int v238;
  int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  unsigned int v253;
  int v254;
  int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  int v295;
  unsigned int v296;
  int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  unsigned int v306;
  int v307;
  int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  int v365;
  unsigned int v366;
  unsigned int v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  int v378;
  int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  unsigned int v414;
  int v415;
  int v416;
  unsigned int v417;
  int v418;
  int v419;
  unsigned int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  int v429;
  unsigned int v430;
  unsigned int v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  int v438;
  int v439;
  int v440;
  unsigned int v441;
  int v442;
  int v443;
  int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  int v452;
  int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  int v465;
  unsigned int v466;
  unsigned int v467;
  int v468;
  unsigned int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  unsigned int v475;
  int v476;
  int v477;
  unsigned int v478;
  int v479;
  unsigned int v480;
  int v481;
  int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  int v486;
  int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  unsigned int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  int v499;
  unsigned int v500;
  unsigned int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  unsigned int v510;
  unsigned int v511;
  unsigned int v512;
  unsigned int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  unsigned int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  unsigned int v529;
  int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  unsigned int v543;
  int v544;
  int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  int v549;
  unsigned int v550;
  int v551;
  unsigned int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  unsigned int v561;
  unsigned int v562;
  unsigned int v563;
  int v564;
  unsigned int v565;
  int v566;
  int v567;
  unsigned int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  unsigned int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  int v581;
  int v582;
  int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  int v588;
  int v589;
  int v590;
  unsigned int v591;
  int v592;
  int v593;
  unsigned int v594;
  unsigned int v595;
  int v596;
  unsigned int v597;
  int v598;
  int v599;
  unsigned int v600;
  int v601;
  unsigned int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  unsigned int v609;
  int v610;
  int v611;
  unsigned int v612;
  unsigned int v613;
  unsigned int v614;
  int v615;
  int v616;
  int v617;
  unsigned int v618;
  int v619;
  unsigned int v620;
  unsigned int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  int v626;
  int v627;
  int v628;
  unsigned int v629;
  int v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  unsigned int v636;
  int v637;
  int v638;
  unsigned int v639;
  int v640;
  int v641;
  int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  int v647;
  int v648;
  int v649;
  int v650;
  unsigned int v651;
  int v652;
  unsigned int v653;
  unsigned int v654;
  int v655;
  unsigned int v656;
  unsigned int v657;
  int v658;
  unsigned int v659;
  unsigned int v660;
  int v661;
  unsigned int v662;
  int v663;
  unsigned int v664;
  int v665;
  unsigned int v666;
  int v667;
  int v668;
  int v669;
  unsigned int v670;
  unsigned int v671;
  int v672;
  unsigned int v673;
  int v674;
  int v675;
  int v676;
  unsigned int v677;
  int v678;
  unsigned int v679;
  int v680;
  unsigned int v681;
  int v682;
  int v683;
  unsigned int v684;
  int v685;
  int v686;
  unsigned int v687;
  int v688;
  int v689;
  int v690;
  unsigned int v691;
  int v692;
  int v693;
  int v694;
  int v695;
  int v696;
  int v697;
  unsigned int v698;
  int v699;
  int v700;
  int v701;
  unsigned int v702;
  unsigned int v703;
  int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  int v708;
  int v709;
  unsigned int v710;
  unsigned int v711;
  int v712;
  int v713;
  int v714;
  int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  unsigned int v719;
  unsigned int v720;
  unsigned int v721;
  int v722;
  unsigned int v723;
  int v724;
  int v725;
  unsigned int v726;
  int v727;
  unsigned int v728;
  int v729;
  int v730;
  unsigned int v731;
  int v732;
  int v733;
  int v734;
  int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  unsigned int v741;
  int v742;
  int v743;
  int v744;
  int v745;
  int v746;
  int v747;
  unsigned int v748;
  unsigned int v749;
  unsigned int v750;
  unsigned int v751;
  unsigned int v752;
  int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  int v757;
  int v758;
  int v759;
  unsigned int v760;
  int v761;
  unsigned int v762;
  unsigned int v763;
  int v764;
  unsigned int v765;
  int v766;
  unsigned int v767;
  unsigned int v768;
  int v769;
  unsigned int v770;
  unsigned int v771;
  int v772;
  int v773;
  int v774;
  unsigned int v775;
  int v776;
  unsigned int v777;
  int v778;
  int v779;
  int v780;
  int v781;
  unsigned int v782;
  unsigned int v783;
  int v784;
  unsigned int v785;
  unsigned int v786;
  unsigned int v787;
  unsigned int v788;
  unsigned int v789;
  int v790;
  int v791;
  unsigned int v792;
  int v793;
  int v794;
  int v795;
  unsigned int v796;
  unsigned int v797;
  int v798;
  unsigned int v799;
  int v800;
  unsigned int v801;
  int v802;
  int v803;
  unsigned int v804;
  int v805;
  unsigned int v806;
  int v807;
  int v808;
  int v809;
  int v810;
  unsigned int v811;
  int v812;
  int v813;
  unsigned int v814;
  unsigned int v815;
  int v816;
  unsigned int v817;
  int v818;
  int v819;
  int v820;
  int v821;
  int v822;
  int v823;
  unsigned int v824;
  int v825;
  unsigned int v826;
  int v827;
  unsigned int v828;
  unsigned int v829;
  int v830;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  unint64_t v835;
  unint64_t v836;
  unint64_t v837;
  uint64_t v838;
  unint64_t v839;
  uint64_t v840;
  int v841;
  uint64_t v842;
  unsigned int v843;
  uint64_t v844;
  int v845;
  uint64_t v846;
  unsigned int v847;
  unint64_t v848;
  unint64_t v849;
  uint64_t v850;
  uint64_t v851;
  unint64_t v852;
  unint64_t v853;
  int v854;
  unint64_t v855;
  uint64_t v856;
  int v857;
  uint64_t v858;
  unint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  unint64_t v863;
  int v864;
  uint64_t v865;
  unsigned int v866;
  uint64_t v867;
  int v868;
  unsigned int v869;
  unint64_t v870;
  unsigned int v871;
  unsigned int v872;
  int v873;
  int v874;
  int v875;
  int v876;
  int v877;
  unsigned __int8 v878;
  int v879;
  int v880;
  int v881;

  HIDWORD(v860) = v67;
  HIDWORD(v862) = *(unsigned __int8 *)(a6 + (a20 - 1755578127));
  v71 = (v66 - 44108220) & 0x6FFBD73F;
  v72 = ((((a20 - 1755578127) ^ 1) - 312041437 + (~(2 * ((a20 - 1755578127) ^ 1)) | 0x2532BFB9) + 1) ^ 0xED66A023)
      + ((v71 - 1834668344) & (2 * a20))
      + ((2 * ((v71 - 1834668344) & (2 * a20))) ^ 4)
      - 2;
  v73 = ((2 * v72) & 0xBDFE77D6) + (v72 ^ 0x5EFF3BEB);
  v879 = *(unsigned __int8 *)(a6 + v73 - 1593785322);
  v880 = *(unsigned __int8 *)(a6 + v73 - 1593785321);
  v74 = *(unsigned __int8 *)(a6 + v73 - 1593785320);
  v75 = *(unsigned __int8 *)(a6 + v73 - 1593785319);
  v877 = *(unsigned __int8 *)(a6 + v73 - 1593785318);
  v878 = *(_BYTE *)(a6 + v73 - 1593785317);
  v76 = *(unsigned __int8 *)(a6 + v73 - 1593785316);
  v77 = *(unsigned __int8 *)(a6 + v73 - 1593785315);
  v78 = *(unsigned __int8 *)(a6 + v73 - 1593785314);
  LODWORD(v861) = v68 + (v70 ^ v68) - 2 * (((v70 ^ v68) + 1073741792) & 0x2D10075E ^ v70 & 0xE) - 32;
  LODWORD(v862) = *(unsigned __int8 *)(a6 + v73 - 1593785313);
  v79 = *(unsigned __int8 *)(a6 + v73 - 1593785312);
  v80 = *(unsigned __int8 *)(a6 + v73 - 1593785311);
  v81 = *(unsigned __int8 *)(a6 + v73 - 1593785310);
  v875 = *(unsigned __int8 *)(a6 + v73 - 1593785309);
  v82 = *(unsigned __int8 *)(a6 + v73 - 1593785308);
  v83 = *(unsigned __int8 *)(a6 + v73 - 1593785307);
  v84 = *(unsigned __int8 *)(a6 + v73 - 1593785306);
  v85 = *(unsigned __int8 *)(a6 + v73 - 1593785305);
  v86 = *(unsigned __int8 *)(a6 + v73 - 1593785304);
  v874 = *(unsigned __int8 *)(a6 + v73 - 1593785303);
  v876 = *(unsigned __int8 *)(a6 + v73 - 1593785302);
  v873 = *(unsigned __int8 *)(a6 + v73 - 1593785301);
  v87 = *(unsigned __int8 *)(a6 + v73 - 1593785294);
  HIDWORD(v861) = *(unsigned __int8 *)(a6 + v73 - 1593785323);
  v88 = *(unsigned __int8 *)(a6 + v73 - 1593785293);
  LODWORD(v832) = v73 + 161792835;
  HIDWORD(v833) = *(unsigned __int8 *)(a6 + v73 - 1593785300);
  LODWORD(v858) = (v71 - 739297337) | 0x8002444;
  HIDWORD(v834) = *(unsigned __int8 *)(a6 + v73 - 1593785299);
  v89 = ((((v858 ^ 0x494A24FE)
         + (BYTE4(v833) ^ v69)
         - ((2 * (HIDWORD(v833) ^ v69)) & 0x16A)) << 16)
       - 393216) ^ 0x9B50000;
  v90 = ((((BYTE4(v834) ^ v69) + 2943308 - ((2 * (HIDWORD(v834) ^ v69)) & 0x5C)) << 8) - 7680) ^ 0x2CE92E00;
  LODWORD(v838) = *(unsigned __int8 *)(a6 + v73 - 1593785296);
  v91 = (v89 + 1371031689 - ((2 * v89) & 0x23700000)) ^ 0x51B84889 | (v90 - 1567651594 - ((2 * v90) & 0x451F1000)) ^ 0xA28F88F6;
  v92 = v91 - 2106260844 - ((2 * v91) & 0x4EA0528);
  HIDWORD(v832) = *(unsigned __int8 *)(a6 + v73 - 1593785298);
  v93 = v92 ^ 0x82750294 | ((BYTE4(v832) ^ v69) - 389958789 - ((2 * (HIDWORD(v832) ^ v69)) & 0xF6)) ^ 0xE8C1B37B;
  v872 = v93 - ((2 * v93) & 0xF1BA709E) + 2027763791;
  HIDWORD(v838) = *(unsigned __int8 *)(a6 + v73 - 1593785295);
  v94 = (BYTE4(v838) ^ v69) - ((2 * (HIDWORD(v838) ^ v69)) & 0x15A);
  LODWORD(v833) = *(unsigned __int8 *)(a6 + v73 - 1593785297);
  v95 = (v833 ^ v69) + 1161098812 - ((2 * (v833 ^ v69)) & 0x78);
  v96 = (((v872 << 8) ^ 0xDD384F00) + 1169129742 - ((2 * ((v872 << 8) ^ 0xDD384F00)) & 0x8B5F0200)) ^ 0x45AF810E | v95 ^ 0x4534F63C;
  v97 = v96 - 1084912426 - ((2 * v96) & 0x7EAB19AC);
  v835 = __PAIR64__(v84, v82);
  v98 = (v82 ^ v69) - ((2 * (v82 ^ v69)) & 0x15A);
  v839 = __PAIR64__(v87, v76);
  v837 = __PAIR64__(v77, v74);
  v99 = (v77 ^ v69) - ((2 * (v77 ^ v69)) & 0x2C);
  v100 = (v74 ^ v69) - ((2 * (v74 ^ v69)) & 0x1F0);
  v101 = ((((v76 ^ v69) - ((2 * (v76 ^ v69)) & 0x8E)) << 16) + 289865728) ^ 0x11470000;
  v102 = (v101 + 730830994 - ((2 * v101) & 0x571E0000)) ^ 0x2B8F9892 | ((((v99 << 8) - 670034432) ^ 0xD8101600)
                                                                      - 420801044
                                                                      - ((2 * (((v99 << 8) - 670034432) ^ 0xD8101600)) & 0x4DD62A00)) ^ 0xE6EB15EC;
  v103 = v102 - 333420215 - ((2 * v102) & 0x5840D292);
  LODWORD(v834) = v79;
  v104 = (v79 ^ v69) - ((2 * (v79 ^ v69)) & 0x19E);
  v105 = ((((v83 ^ v69) - ((2 * (v83 ^ v69)) & 0x15E)) << 8) + 2041097984) ^ 0x79A8AF00;
  v106 = ((((v98 << 16) + 229441536) ^ 0xDAD0000)
        - 1642230756
        - ((2 * (((v98 << 16) + 229441536) ^ 0xDAD0000)) & 0x3C3A0000)) ^ 0x9E1D8C1C | (v105
                                                                                      - 1981487533
                                                                                      - ((2 * v105) & 0x13C9CC00)) ^ 0x89E4E653;
  v871 = v106 - 82145385 - ((2 * v106) & 0x76351F2E);
  v107 = v871 ^ 0xFB1A8F97 | ((v84 ^ v69) - 1668944810 - ((2 * (v84 ^ v69)) & 0xAC)) ^ 0x9C85EC56;
  v108 = (((v838 ^ v69) - ((2 * (v838 ^ v69)) & 0x60)) << 16) + 573571072;
  v109 = ((((v94 << 8) - 1090409216) ^ 0xBF01AD00)
        - 495093611
        - ((2 * (((v94 << 8) - 1090409216) ^ 0xBF01AD00)) & 0x44FAF000)) ^ 0xE27D7895 | ((v108 ^ 0x22300000)
                                                                                       - 926575216
                                                                                       - ((2 * v108) & 0x118A0000)) ^ 0xC8C59590;
  v866 = v109 + 1877118556 - ((2 * v109) & 0x5FC51CB8);
  v110 = v866 ^ 0x6FE28E5C | ((v87 ^ v69) - 248597445 - ((2 * (v87 ^ v69)) & 0x76)) ^ 0xF12EB43B;
  LODWORD(a44) = v110 - ((2 * v110) & 0x4504537A) + 578955709;
  v111 = (((v107 - ((2 * v107) & 0xBB98E2)) << 8) - 573804288) ^ 0xDDCC7100;
  v836 = __PAIR64__(v83, v80);
  v863 = __PAIR64__(v86, v85);
  v868 = (v85 ^ v69) - 1599528582 - ((2 * (v85 ^ v69)) & 0xF4);
  v112 = (v111 + 134708267 - ((2 * v111) & 0x100EF800)) ^ 0x8077C2B | v868 ^ 0xA0A9217A;
  v113 = v112 - 45500119 - ((2 * v112) & 0xFA937252);
  v859 = __PAIR64__(v78, v75);
  v114 = (v75 ^ v69) - ((2 * (v75 ^ v69)) & 0x1CC);
  v115 = (v86 ^ v69) - ((2 * (v86 ^ v69)) & 0xFFFFFFF3);
  v116 = (((v97 << 15) ^ 0xC66B0000) - 1891050501 - ((2 * ((v97 << 15) ^ 0xC66B0000)) & 0x1E910000)) ^ 0x8F48DBFB | (v92 >> 9) ^ 0x413A81;
  v117 = (v874 ^ v69) - ((2 * (v874 ^ v69)) & 0x16E);
  v118 = v103 ^ 0xEC206949 | ((v78 ^ v69) - 422485461 - ((2 * (v78 ^ v69)) & 0x56)) ^ 0xE6D1622B;
  v119 = (((v118 - ((2 * v118) & 0x9C26A6)) << 8) + 1309889280) ^ 0x4E135300;
  v120 = (v862 ^ v69) - 296281511 - ((2 * (v862 ^ v69)) & 0xB2);
  v121 = (v119 + 106165355 - ((2 * v119) & 0xCA7E800)) ^ 0x653F46B | v120 ^ 0xEE571A59;
  v122 = v121 + 1693573248 - ((2 * v121) & 0xC9E3C1EE) + 119;
  v123 = (BYTE4(v862) ^ v69) - ((2 * (HIDWORD(v862) ^ v69)) & 0x3A);
  LODWORD(v860) = v88;
  HIDWORD(a45) = (v88 ^ v69) + 872906846 - ((2 * (v88 ^ v69)) & 0xBC);
  v124 = ((((_DWORD)a44 << 8) ^ 0x8229BD00) + 1454523172 - ((2 * (((_DWORD)a44 << 8) ^ 0x8229BD00)) & 0xAD648600)) ^ 0x56B24324 | HIDWORD(a45) ^ 0x3407805E;
  v125 = ((((v80 ^ v69) - ((2 * (v80 ^ v69)) & 0x1F0)) << 8) + 391772160) ^ 0x1759F800;
  v126 = ((((v104 << 16) + 1137639424) ^ 0x43CF0000)
        - 221755271
        - ((2 * (((v104 << 16) + 1137639424) ^ 0x43CF0000)) & 0x65900000)) ^ 0xF2C84879 | (v125
                                                                                         - 2118204172
                                                                                         - ((2 * v125) & 0x37D8800)) ^ 0x81BEC4F4;
  v127 = v126 + 1420560198 - ((2 * v126) & 0x29580E8C);
  LODWORD(v867) = v97;
  HIDWORD(v128) = v95 ^ 0x3C;
  LODWORD(v128) = v97 ^ 0xBF558C80;
  v864 = v128 >> 7;
  HIDWORD(v858) = v81;
  v129 = v127 ^ 0x54AC0746 | ((v81 ^ v69) + 547769213 - ((2 * (v81 ^ v69)) & 0xFA)) ^ 0x20A64B7D;
  v130 = (((v129 - ((2 * v129) & 0xE76712)) << 8) - 206337792) ^ 0xF3B38900;
  v131 = (BYTE4(v861) ^ v69) - ((2 * (HIDWORD(v861) ^ v69)) & 0xF8);
  v132 = v124 + 1859689344 + (~(2 * v124) | 0x224EC845) + 94;
  v133 = ((v132 << 15) ^ 0x4DEE8000) - 1750839527 - ((2 * ((v132 << 15) ^ 0x4DEE8000)) & 0x2F480000);
  v134 = ((((v114 << 8) - 591534592) ^ 0xDCBDE600)
        + 1515988771
        - ((2 * (((v114 << 8) - 591534592) ^ 0xDCBDE600)) & 0x34B84E00)) ^ 0x5A5C2723 | ((((v100 << 16) + 1358430208) ^ 0x50F80000)
                                                                                       - 164811462
                                                                                       - ((2
                                                                                         * (((v100 << 16) + 1358430208) ^ 0x50F80000)) & 0x6C5A0000)) ^ 0xF62D2D3A;
  v135 = v134 - 589348010 - ((2 * v134) & 0xB9BE86AC);
  v136 = (v875 ^ 0x35) - 958722577 - ((2 * (v875 ^ 0x35)) & 0x1DE);
  v869 = (((v97 << 14) ^ 0x63358000) - 555584322 - ((2 * ((v97 << 14) ^ 0x63358000)) & 0xBDC48000)) ^ 0xDEE274BE | (v92 >> 10) ^ 0x209D40;
  HIDWORD(v128) = v120 ^ 0x59;
  LODWORD(v128) = v122 ^ 0x64F1E080;
  v137 = ((((v131 << 8) - 2034336768) ^ 0x86BE7C00)
        - 192043225
        - ((2 * (((v131 << 8) - 2034336768) ^ 0x86BE7C00)) & 0x691B4E00)) ^ 0xF48DA727 | ((((v123 << 16) + 320667648) ^ 0x131D0000)
                                                                                        + 196175249
                                                                                        - ((2
                                                                                          * (((v123 << 16) + 320667648) ^ 0x131D0000)) & 0x17620000)) ^ 0xBB16591;
  v138 = (((v97 << 13) ^ 0xB19AC000) - 1277271007 - ((2 * ((v97 << 13) ^ 0xB19AC000)) & 0x67BCC000)) ^ 0xB3DE6421 | (v92 >> 11) ^ 0x104EA0;
  v139 = (v873 ^ 0x35) + 1563275273 - ((2 * (v873 ^ 0x35)) & 0x12);
  v140 = ((v130 - 978681429 - ((2 * v130) & 0x8B550200)) ^ 0xC5AA81AB | v136 ^ 0xC6DB0DEF)
       + 641300480
       - ((2 * ((v130 - 978681429 - ((2 * v130) & 0x8B550200)) ^ 0xC5AA81AB | v136 ^ 0xC6DB0DEF)) & 0x4C72F020)
       + 16;
  v141 = v135 ^ 0xDCDF4356 | ((v877 ^ 0x35) + 1556948323 - ((2 * (v877 ^ 0x35)) & 0xC6)) ^ 0x5CCD2563;
  v142 = (((v141 - ((2 * v141) & 0xC76358)) << 8) + 1672588288) ^ 0x63B1AC00;
  v143 = ((((v876 ^ 0x35) - ((2 * (v876 ^ 0x35)) & 0x9C)) << 8) + 1477463552) ^ 0x58104E00;
  v144 = v139 ^ 0x5D2DB009 | (v143 + 249970877 - ((2 * v143) & 0x1DCC8000)) ^ 0xEE640BD;
  v145 = ((((v117 << 16) - 1028194304) ^ 0xC2B70000)
        + 627837841
        - ((2 * (((v117 << 16) - 1028194304) ^ 0xC2B70000)) & 0x4AD80000)) ^ 0x256C0B91 | ((((v115 << 24) + 2030043136) ^ 0x79000000)
                                                                                         - 523099187
                                                                                         - ((((v115 << 24) + 2030043136) ^ 0x79000000) >> 29 << 30)) ^ 0xE0D223CD;
  v146 = v145 + 483716275 - ((2 * v145) & 0x39A9D966);
  v147 = v132;
  v148 = (((v122 << 14) ^ 0x783DC000) - 635489731 - ((2 * ((v122 << 14) ^ 0x783DC000)) & 0xB43E0000)) ^ 0xDA1F323D | (v103 >> 10) ^ 0x3B081A;
  v149 = v146 ^ 0x1CD4ECB3 | (v144 + 601699076 - ((2 * v144) & 0x47BA6608)) ^ 0x23DD3304;
  v150 = (((v132 << 13) ^ 0x137BA000) + 396185449 - ((2 * ((v132 << 13) ^ 0x137BA000)) & 0x2F3A8000)) ^ 0x179D4F69 | (v866 >> 11) ^ 0xDFC51;
  v847 = v122;
  v151 = ((v122 >> 3) ^ 0xC980F1E)
       + ((v872 >> 2) ^ 0xE0889AFC)
       + ((v122 >> 2) & 0x3FF399FE ^ 0xE6CFE7C3)
       + ((v128 >> 7) ^ 0x3C7BDFFF)
       + ((2 * (v128 >> 7)) & 0x78F7BFFE)
       + ((2 * (v872 >> 2)) & 0x7D7FA9DE ^ 0x3C6E8806)
       + (v148 ^ 0xFF57BDFD)
       + ((2 * v148) & 0xFEAF7BFA)
       + (v138 ^ 0x9C942081)
       + (v116 ^ 0x1100684E);
  v152 = (2 * v116) & 0xDDFF2F62;
  v153 = (2 * v138) & 0xC6D7BEFC;
  v154 = v149 + 1762465152 + (~(2 * v149) | 0x2DE5D44D) + 90;
  v155 = v151 - v153;
  v156 = v150 ^ 0xE5FEDBF7;
  v157 = (2 * v150) & 0xCBFDB7EE;
  v158 = v155 - v152 + 2 - ((2 * (v155 - v152 + 2) + 799253130) & 0x56344334) + 1122759391;
  v159 = v133 ^ 0x97A44F19 | (v866 >> 9) ^ 0x37F147;
  HIDWORD(v128) = v136 ^ 0xFFFFFFEF;
  LODWORD(v128) = v140 ^ 0x26397800;
  v160 = v128 >> 7;
  v161 = (v142 - 30776529 - ((2 * v142) & 0xFC54C600)) ^ 0xFE2A632F | v878 ^ 0x35;
  v162 = v161 - 1421236366 - ((2 * v161) & 0x56934EE4);
  v163 = (((v113 << 14) ^ 0x6E4A4000) - 274126617 - ((2 * ((v113 << 14) ^ 0x6E4A4000)) & 0xDF520000)) ^ 0xEFA928E7 | (v871 >> 10) ^ 0x3EC6A3;
  v164 = (((v140 << 14) ^ 0x5E040000) - 1352951788 - ((2 * ((v140 << 14) ^ 0x5E040000)) & 0x5EB70000)) ^ 0xAF5B9814 | (v127 >> 10) ^ 0x152B01;
  HIDWORD(v128) = v868 ^ 0x7A;
  LODWORD(v128) = v113 ^ 0xFD49B900;
  v857 = v162;
  v165 = (v162 ^ 0x805386E8 ^ v158)
       + (v162 ^ 0xAB49A772)
       - 1149331840
       - ((2 * ((v162 ^ 0x805386E8 ^ v158) + (v162 ^ 0xAB49A772))) & 0x76FD2D5E)
       + 47;
  v166 = ((v128 >> 7) ^ 0x6FFDFFFB)
       + ((2 * (v128 >> 7)) & 0xDFFBFFF6)
       + (v163 ^ 0x22318001)
       - ((2 * v163) & 0xBB9CFFFC)
       + 1;
  HIDWORD(v128) = v165 ^ 0x696AF;
  LODWORD(v128) = v165 ^ 0xBB780000;
  v167 = (v128 >> 19) - ((2 * (v128 >> 19)) & 0x371C8EB8);
  v168 = v156
       + (v159 ^ 0x75E8ECBD)
       + ((2 * v159) & 0xEBD1D97A)
       + v157
       - 2
       * ((v156 + (v159 ^ 0x75E8ECBD) + ((2 * v159) & 0xEBD1D97A) + v157 + 605566796) & 0x4EA72F16 ^ (v156 + (v159 ^ 0x75E8ECBD) + ((2 * v159) & 0xEBD1D97A) + v157) & 2);
  HIDWORD(v128) = v165 ^ 0x96AF;
  LODWORD(v128) = v165 ^ 0xBB7E0000;
  v169 = (v128 >> 17) - ((2 * (v128 >> 17)) & 0x76957D8) - 2085311508;
  v170 = ((v140 >> 3) ^ 0xBA98D8F2)
       + ((v140 >> 2) & 0x3CBFEFE0 ^ 0x88E4E00)
       + (v160 ^ 0x1F6CBFAF)
       + ((2 * v160) & 0x3ED97F5E)
       + (v164 ^ 0x51ACFDF3)
       + ((2 * v164) & 0xA359FBE6)
       - 796505490
       + ((v168 - 222337440) ^ (a44 >> 2) ^ 0x4607A57B);
  v171 = v170 - 882405790 - ((2 * v170) & 0x96CF1CC4);
  HIDWORD(v128) = v165 ^ 0x296AF;
  LODWORD(v128) = v165 ^ 0xBB7C0000;
  v172 = v128 >> 18;
  HIDWORD(v128) = v154 ^ 0x115D9;
  LODWORD(v128) = v146 ^ 0x1CD40000;
  v173 = v128 >> 18;
  v174 = v165;
  v175 = ((v167 + 462309212) ^ (v165 >> 10) ^ v169 ^ 0x98143315)
       + ((v166 - ((2 * v166 + 1537277958) & 0x6563CAD8) + 545416559) ^ (v113 >> 3) ^ 0xAD18D249);
  v176 = (v137 + 1951841638 - ((2 * v137) & 0x68AD7ACC)) ^ 0x7456BD66 | ((v879 ^ 0x35)
                                                                       - 2122147913
                                                                       - ((2 * (v879 ^ 0x35)) & 0x16E)) ^ 0x818297B7;
  HIDWORD(v844) = v140;
  v177 = ((4 * v140) & 0x3A5AFFCC ^ 0x1840E040)
       + ((2 * v140) ^ 0x515F8FC7)
       + (v175 ^ 0x7F6FDA8F)
       + ((2 * v175) & 0xFEDFB51E);
  v178 = v177 - ((2 * v177 - 960148716) & 0xCD59F396) - 904945835;
  v179 = (((v176 - ((2 * v176) & 0xF8DC8)) << 8) - 2017008640) ^ 0x87C6E400;
  HIDWORD(v128) = v139 ^ 9;
  LODWORD(v128) = v154 ^ 0x690D1580;
  v180 = v128 >> 7;
  HIDWORD(v128) = v165 ^ 0x2F;
  LODWORD(v128) = v165 ^ 0xBB7E9680;
  v181 = v128 >> 7;
  HIDWORD(v128) = HIDWORD(a45) ^ 0x5E;
  LODWORD(v128) = v147 ^ 0x6ED89B80;
  v182 = v128 >> 7;
  HIDWORD(v128) = v171 ^ 0x78E62;
  LODWORD(v128) = v171 ^ 0xCB600000;
  v183 = v128 >> 19;
  v184 = v171;
  HIDWORD(v128) = v171 ^ 0x18E62;
  LODWORD(v128) = v171 ^ 0xCB660000;
  v185 = v128 >> 17;
  v186 = v178 ^ 0xF9CB;
  v187 = v178 ^ 0x66AC0000;
  HIDWORD(v128) = v178 ^ 0xF9CB;
  LODWORD(v128) = v178 ^ 0x66AC0000;
  v188 = (v185 ^ 0x25FDCF77) + (v183 ^ 0xDB762F75) + ((2 * v183) & 0xB6EC5EEA) + ((2 * v185) & 0x4BFB9EEE);
  v189 = ((v154 >> 3) ^ 0xDBDEDDC8)
       + (v173 ^ 0xAFF8CEBF)
       + ((2 * v173) & 0x5FF19D7E)
       + ((2 * (v154 >> 3)) & 0x2DFEFEE6 ^ 0x8424466)
       + 2030547406
       + ((v188 - 426128919 - ((2 * v188 - 48758232) & 0xD01B91AA)) ^ (v171 >> 10) ^ 0xE83F1136);
  v190 = (v180 ^ 0xFFF19BD2) + ((2 * v180) & 0xFFE337A4) + (v189 ^ 0x85000600) - ((2 * v189) & 0xF5FFF3FE) + 1;
  v191 = (((v147 << 14) ^ 0x26F74000) + 1576596949 - ((2 * ((v147 << 14) ^ 0x26F74000)) & 0xBBF18000)) ^ 0x5DF8F5D5 | (v866 >> 10) ^ 0x1BF8A3;
  LODWORD(v846) = v113 ^ 0xFD49B929;
  v192 = (v113 ^ 0x864B21FB ^ (v190 - ((2 * v190 - 165888934) & 0xF60531A4) - 166660353)) + (v113 ^ 0xFD49B929);
  v193 = v192 + 612324503 - ((2 * v192) & 0x48FEA92E);
  v194 = v178;
  v195 = ((v178 >> 10) ^ 0xABE657E1)
       + ((v178 >> 9) & 0x7FF9BE ^ 0x33503C)
       + 1409286945
       + (((v128 >> 17) - ((2 * (v128 >> 17)) & 0xEFCEEF6E) + 2011658167) ^ (v178 >> 19) ^ (((v178 << 13) ^ 0x9F396000)
                                                                                          - ((2
                                                                                            * ((v178 << 13) ^ 0x9F396000)) & 0xA44B8000)
                                                                                          - 769275996) ^ 0xA5C2BCC6);
  v848 = __PAIR64__(v147, v154);
  v196 = (v174 >> 3) ^ 0x69B32C28;
  v197 = v174;
  v198 = (v174 >> 2) & 0x3DB9FDFA ^ 0x2C99A5AA;
  v199 = ((v867 >> 3) ^ 0x86E699A2)
       + (v864 ^ 0x7C7FEEF7)
       + ((2 * v864) & 0xF8FFDDEE)
       + ((v867 >> 2) & 0x1DE7AF8E ^ 0xF23ADCFB)
       + ((2 * v154) ^ 0x9E1B74D)
       + ((4 * v154) & 0xB7F739FC ^ 0xA4341164)
       + (v869 ^ 0x848805CC)
       - ((2 * v869) & 0xF6EFF466)
       + (v195 ^ 0x92CB0045)
       - ((2 * v195) & 0xDA69FF74)
       + 4;
  v200 = v199 - ((2 * v199 - 28669060) & 0xC16989AE) + 1608125077;
  v201 = ((v147 >> 3) ^ 0x8DCF3B1E)
       + (v182 ^ 0xE83EF1BD)
       + ((2 * v182) & 0xD07DE37A)
       + ((v147 >> 2) & 0x3FD7AF34 ^ 0xE469D9CB)
       + (v191 ^ 0xE506FE84)
       - ((2 * v191) & 0x35F202F6)
       + 3;
  HIDWORD(v128) = v193 ^ 0x75497;
  LODWORD(v128) = v193 ^ 0x24780000;
  v202 = (v128 >> 19) - ((2 * (v128 >> 19)) & 0x31DCE3E0) - 1729203728;
  HIDWORD(v128) = v193 ^ 0x15497;
  LODWORD(v128) = v193 ^ 0x247E0000;
  v203 = ((v193 >> 10) ^ 0x30583FF5)
       + ((v193 >> 9) & 0x5DBFBE ^ 0xFFEFC055)
       - 810623007
       + (v202 ^ ((v128 >> 17) - ((2 * (v128 >> 17)) & 0xC40539F8) + 1644338428) ^ 0xFAECED0C);
  v204 = (v203 - ((2 * v203) & 0xBE17B274) - 552871622) ^ (v201 - ((2 * v201 + 1699466928) & 0x84A3A020) - 185092248);
  HIDWORD(v128) = v200 ^ 0x4C4D7;
  LODWORD(v128) = v200 ^ 0x60B00000;
  v205 = (v128 >> 19) - ((2 * (v128 >> 19)) & 0x16FB976A) + 192793525;
  v206 = (v181 ^ 0x5D3BDFF3) + v196 + (v172 ^ 0xEB2E1E3F) + v198 + ((2 * v181) & 0xBA77BFE6) + ((2 * v172) & 0xD65C3C7E);
  v207 = v206 - ((2 * v206 + 1903297954) & 0xFDB12516) + 932287836;
  v208 = v200 ^ 0xC4D7;
  v209 = v200 ^ 0x60B40000;
  HIDWORD(v128) = v200 ^ 0xC4D7;
  LODWORD(v128) = v200 ^ 0x60B40000;
  v210 = (v128 >> 17) - ((2 * (v128 >> 17)) & 0xF89203F4) + 2085159418;
  HIDWORD(v128) = v184 ^ 0x62;
  LODWORD(v128) = v184 ^ 0xCB678E00;
  v211 = v128 >> 7;
  v212 = (__PAIR64__(v186, v187) >> 18) - ((2 * (__PAIR64__(v186, v187) >> 18)) & 0x3C7DCEE0);
  v213 = v184;
  HIDWORD(v128) = v184 ^ 0x38E62;
  LODWORD(v128) = v184 ^ 0xCB640000;
  v214 = v128 >> 18;
  v215 = ((2 * v147) ^ 0xA24E5C44)
       + ((4 * v147) & 0xFFFED7FC ^ 0xBB624774)
       - 2147445758
       + (v207 ^ (v200 >> 10) ^ v205 ^ v210 ^ 0x89F475F5);
  v216 = v215 - 434465709 - ((2 * v215) & 0xCC3528A6);
  v217 = v200;
  HIDWORD(v128) = v200 ^ 0x57;
  LODWORD(v128) = v200 ^ 0x60B4C480;
  v218 = (v128 >> 7) - ((2 * (v128 >> 7)) & 0x6DDD9DC8);
  HIDWORD(a45) = (v179 + 969469199 - ((2 * v179) & 0x7391DA00)) ^ 0x39C8ED0F | ((v880 ^ 0x35)
                                                                              + 880128987
                                                                              - ((2 * (v880 ^ 0x35)) & 0x1B6)) ^ 0x3475B3DB;
  HIDWORD(v128) = v216 ^ 0x9453;
  LODWORD(v128) = v216 ^ 0xE61A0000;
  v219 = v128 >> 17;
  HIDWORD(v128) = v194 ^ 0x4B;
  LODWORD(v128) = v194 ^ 0x66ACF980;
  v220 = (v128 >> 7) - ((2 * (v128 >> 7)) & 0x75AE9D70);
  HIDWORD(v128) = v204 ^ 0x92A;
  LODWORD(v128) = v204 ^ 0x9D5A0000;
  v221 = v128 >> 17;
  v222 = (v214 ^ 0xFDF5FBFF) + ((v213 >> 3) ^ 0x668B4A32) + (v211 ^ 0x72F3CF77);
  v223 = v213;
  v224 = ((2 * v214) & 0xFBEBF7FE) + ((v213 >> 2) & 0x3FCF77FC ^ 0x32C96398) + ((2 * v211) & 0xE5E79EEE) + v222;
  v225 = v224 - 2 * ((v224 + 254703756) & 0x6BF1C5DB ^ v222 & 1);
  HIDWORD(v128) = v204 ^ 0x2092A;
  LODWORD(v128) = v204 ^ 0x9D580000;
  v226 = (v221 ^ 0x55FBBFBF)
       + ((v204 >> 10) ^ 0x8027C184)
       + ((v128 >> 19) ^ 0x7FBEB77A)
       + ((v204 >> 9) & 0x7ED1F2 ^ 0xFFB17EFF)
       + ((2 * v221) & 0xABF77F7E)
       + ((2 * (v128 >> 19)) & 0xFF7D6EF4);
  v227 = ((2 * v197) ^ 0x6EFD88CF)
       + ((4 * v197) & 0xCFFEB4DC ^ 0x3205EF63)
       - 402695568
       + ((v225 + 2065710694) ^ 0x9FDED2E8 ^ (v226 - ((2 * v226 + 1418322820) & 0xE85E2E64) - 1636562700));
  v228 = v227 + 224768155 - ((2 * v227) & 0x1ACB6136);
  HIDWORD(v128) = v193 ^ 0x17;
  LODWORD(v128) = v193 ^ 0x247F5480;
  v229 = (v128 >> 7) - ((2 * (v128 >> 7)) & 0x262AB358);
  HIDWORD(v128) = v193 ^ 0x35497;
  LODWORD(v128) = v193 ^ 0x247C0000;
  v230 = (v128 >> 18) - ((2 * (v128 >> 18)) & 0x375F2BA);
  v231 = (v212 - 1640044688) ^ (v220 + 987188920);
  HIDWORD(v850) = v194;
  HIDWORD(v128) = v204 ^ 0x2092A;
  LODWORD(v128) = v204 ^ 0x9D580000;
  v232 = v128 >> 18;
  v233 = ((HIDWORD(v850) >> 3) ^ 0xE38AC2F6)
       + ((HIDWORD(v850) >> 2) & 0x1EBEBB9E ^ 0x18AA3A12)
       + 278962737
       + (v231 ^ 0xA4E9A9C8);
  v234 = (__PAIR64__(v208, v209) >> 18) - ((2 * (__PAIR64__(v208, v209) >> 18)) & 0xDA7B3290);
  HIDWORD(v128) = v216 ^ 0x29453;
  LODWORD(v128) = v216 ^ 0xE6180000;
  v849 = __PAIR64__(v197, v223);
  v235 = (v223 ^ 0xCB678E62)
       + ((v128 >> 19) ^ 0x677DFFF9)
       + (v219 ^ 0x5FEFF79F)
       + ((2 * (v128 >> 19)) & 0xCEFBFFF2)
       + ((2 * v219) & 0xBFDFEF3E);
  v236 = (v233 ^ 0x15DFFD3F)
       + ((2 * v233) & 0x2BBFFA7E)
       + ((v216 >> 10) ^ 0xF3487B89)
       + ((2 * (v216 >> 10)) & 0x63FA58 ^ 0x630848)
       + ((v235 + 949094504) ^ 0x30001010)
       - ((2 * (v235 + 949094504)) & 0x9FFFDFDE)
       + 1;
  HIDWORD(v128) = v228 ^ 0x5B09B;
  LODWORD(v128) = v228 ^ 0xD600000;
  v237 = v128 >> 19;
  v238 = v228 ^ 0x1B09B;
  v239 = v228 ^ 0xD640000;
  v240 = v228;
  HIDWORD(v128) = v228 ^ 0x1B09B;
  LODWORD(v128) = v228 ^ 0xD640000;
  v241 = (v237 ^ 0x6FFF65FE)
       + ((v128 >> 17) ^ 0xBDA7D5EF)
       + ((2 * (v128 >> 17)) & 0x7B4FABDE)
       + ((2 * v237) & 0xDFFECBFC);
  v242 = (v236 - ((2 * v236 + 224127752) & 0x40F4FB18) + 1730704144) ^ v223;
  HIDWORD(v128) = v242 ^ 0x5F3EE;
  LODWORD(v128) = v242 ^ 0x6B180000;
  v243 = v128 >> 19;
  HIDWORD(v128) = v204 ^ 0xAAAAAAAA;
  LODWORD(v128) = v204 ^ 0x9D5A0900;
  v244 = v128 >> 7;
  HIDWORD(v128) = v240 ^ 0x1B;
  LODWORD(v128) = v240 ^ 0xD65B080;
  v245 = (v229 + 320166316) ^ (v193 >> 3) ^ (v230 - 2118452899) ^ (v240 >> 10) ^ (v241
                                                                                - ((2 * v241 - 1531869146) & 0xE5E7F4CA)
                                                                                + 1162657400);
  v246 = (v128 >> 7) - 82846989 + (~(2 * (v128 >> 7)) | 0x9E04A1B);
  HIDWORD(v128) = v216 ^ 0x53;
  LODWORD(v128) = v216 ^ 0xE61A9400;
  v247 = v128 >> 7;
  HIDWORD(v851) = v217;
  HIDWORD(v128) = v242 ^ 0x1F3EE;
  LODWORD(v128) = v242 ^ 0x6B1C0000;
  v248 = ((v217 >> 3) ^ 0x7169099)
       + ((v217 >> 2) & 0x29FFEFF8 ^ 0xF7D2DECF)
       + ((v218 - 1225863452) ^ (v234 + 1832753480) ^ 0xDBD357AC)
       + ((v242 >> 10) ^ 0x40DA9BB8)
       + (v243 ^ 0xF4DFFFFF)
       + ((v128 >> 17) ^ 0xC2882080)
       + ((2 * v243) & 0xE9BFFFFE)
       - ((2 * (v128 >> 17)) & 0x7AEFBEFE)
       + ((v242 >> 9) & 0x7F4676 ^ 0xFFCAF98F)
       - 52987204;
  LODWORD(v850) = v193;
  v249 = (v193 ^ 0x247F5497) + (v248 ^ 0xF5FE77FF) + ((2 * v248) & 0xEBFCEFFE) + 167872513;
  v250 = v249 - ((2 * v249) & 0x1BE4BFD4);
  v251 = (__PAIR64__(v238, v239) >> 18) - ((2 * (__PAIR64__(v238, v239) >> 18)) & 0x76A3BECC);
  HIDWORD(v128) = v242 ^ 0x1F3EE;
  LODWORD(v128) = v242 ^ 0x6B1C0000;
  v252 = v128 >> 18;
  v253 = v242;
  HIDWORD(v128) = v242 ^ 0xEEEEEEEE;
  LODWORD(v128) = v242 ^ 0x6B1DF380;
  v254 = v128 >> 7;
  HIDWORD(v128) = v216 ^ 0x29453;
  LODWORD(v128) = v216 ^ 0xE6180000;
  v255 = v128 >> 18;
  v256 = (v250 + 233988074) ^ v193;
  HIDWORD(v128) = v256 ^ 0x50B7D;
  LODWORD(v128) = v256 ^ 0x29880000;
  v257 = v128 >> 19;
  HIDWORD(v128) = v245 ^ 0xE96A;
  LODWORD(v128) = v245 ^ 0xE4D00000;
  v258 = v128 >> 17;
  HIDWORD(v128) = v245 ^ 0xE96A;
  LODWORD(v128) = v245 ^ 0xE4D00000;
  v259 = ((v128 >> 19) ^ 0xF4FB7B73)
       + (v258 ^ 0x4FEC920D)
       + ((2 * v258) & 0x9FD9241A)
       + ((2 * (v128 >> 19)) & 0xE9F6F6E6);
  v260 = (v232 ^ 0x7B73DFEF)
       + ((v204 >> 3) ^ 0x7E5C3CDA)
       + (v244 ^ 0x37DFFEFF)
       + ((v204 >> 2) & 0x1BEEFBFE ^ 0x346824A)
       + ((2 * v232) & 0xF6E7BFDE)
       + ((2 * v244) & 0x6FBFFDFE)
       + ((v259 - 2 * ((v259 + 454554240) & 0x1FBBBECF ^ v259 & 4) - 623660725) ^ (v245 >> 10) ^ 0xE07D750E);
  HIDWORD(v128) = v256 ^ 0x10B7D;
  LODWORD(v128) = v256 ^ 0x298C0000;
  v261 = ((v216 >> 3) ^ 0x7394BD55)
       + (v247 ^ 0x691D3FCA)
       + (v255 ^ 0x8403B483)
       + ((v216 >> 2) & 0x1EAFDFBE ^ 0x18868514)
       + ((2 * v247) & 0xD23A7F94)
       - ((2 * v255) & 0xF7F896F8)
       + ((v256 >> 10) ^ 0x37D5DC39)
       + ((v128 >> 17) ^ 0x7FBF7BDD)
       + (v257 ^ 0x7FFEB7FD)
       + ((v256 >> 9) & 0x3F7EF6 ^ 0x144684)
       + ((2 * (v128 >> 17)) & 0xFF7EF7BA)
       + ((2 * v257) & 0xFFFD6FFA)
       + 1;
  LODWORD(v851) = v204 ^ 0x9D5A092A;
  v262 = (v204 ^ 0x554E2D37 ^ (v261 - ((2 * v261 - 674082564) & 0x9028483A) + 872238235)) + (v204 ^ 0x9D5A092A);
  v263 = v262 + 490948736 - ((2 * v262) & 0x3A86918E);
  v264 = v260 - ((2 * v260 - 1117174232) & 0xA2AFFC8C) - 1341349542;
  HIDWORD(v128) = v264 ^ 0x7FE46;
  LODWORD(v128) = v264 ^ 0xD1500000;
  v265 = v128 >> 19;
  HIDWORD(a40) = v245;
  HIDWORD(v128) = v245 ^ 0x6A;
  LODWORD(v128) = v245 ^ 0xE4D0E900;
  v266 = v128 >> 7;
  HIDWORD(v128) = v264 ^ 0x1FE46;
  LODWORD(v128) = v264 ^ 0xD1560000;
  v267 = ((v128 >> 17) ^ 0xE97FF5FF)
       + (v265 ^ 0xEDEF8C3F)
       + ((2 * v265) & 0xDBDF187E)
       + ((2 * (v128 >> 17)) & 0xD2FFEBFE);
  v268 = v263 + 71;
  HIDWORD(v128) = (v263 + 71) ^ 0x148C7;
  LODWORD(v128) = (v263 + 71) ^ 0x1D420000;
  v269 = v128 >> 17;
  v270 = (v263 + 71) ^ 0x348C7;
  v271 = v268 ^ 0x1D400000;
  v272 = v268;
  HIDWORD(v128) = v270;
  LODWORD(v128) = v268 ^ 0x1D400000;
  v273 = v128 >> 19;
  v274 = (v252 ^ 0x24200210) + (v254 ^ 0x7DF1BCF6) + ((2 * v254) & 0xFBE379EC) - ((2 * v252) & 0xB7BFFBDE) + 1;
  HIDWORD(v128) = v245 ^ 0xE96A;
  LODWORD(v128) = v245 ^ 0xE4D00000;
  v275 = v128 >> 18;
  v852 = __PAIR64__(v216, v240);
  v276 = ((v240 >> 3) ^ 0x7E52C0E5)
       + ((v240 >> 2) & 0x3FFCEDEC ^ 0x3586C24)
       - 2147383030
       + ((v267 - ((2 * v267 + 1361116036) & 0xCC4FA4A2) - 1900523501) ^ (v264 >> 10) ^ 0x661387AE);
  v277 = ((v251 + 995221350) ^ v246 ^ 0xC05E0594) + (v276 ^ 0x80042E00) - ((2 * v276) & 0xFFF7A3FE) + 2147209728;
  v278 = v256;
  HIDWORD(v128) = v256 ^ 0xFFFFFFFD;
  LODWORD(v128) = v256 ^ 0x298D0B00;
  v279 = v128 >> 7;
  HIDWORD(v128) = v264 ^ 0x3FE46;
  LODWORD(v128) = v264 ^ 0xD1540000;
  v280 = (v128 >> 18) - ((2 * (v128 >> 18)) & 0xB72F3638);
  v281 = (v275 ^ 0x80142A3) + (v266 ^ 0xBF3B3F77) + ((2 * v266) & 0x7E767EEE) - ((2 * v275) & 0xEFFD7AB8) + 1;
  HIDWORD(v128) = a61 ^ 0x13;
  LODWORD(v128) = a61 ^ 0x4A33E5C0;
  v282 = v128 >> 6;
  v283 = (v273 ^ 0xB8689293) + (v269 ^ 0xEFB7ED4F) + ((2 * v269) & 0xDF6FDA9E) - ((2 * v273) & 0x8F2EDAD8) + 1;
  HIDWORD(v128) = v264 ^ 0x46;
  LODWORD(v128) = v264 ^ 0xD157FE00;
  v284 = (v128 >> 7) - ((2 * (v128 >> 7)) & 0x554A4106);
  v285 = ((v274 + 62145460 + (~(2 * v274 + 1004306930) | 0xB473FA8B)) ^ (v253 >> 3) ^ 0xA8A5BCC7) + (v240 ^ 0xD65B09B);
  v286 = (v285 ^ 0x2B8FFFE6)
       + ((2 * v285) & 0x571FFFCC)
       - 730857446
       + ((v283 - ((2 * v283 - 1346437062) & 0x856F2530) + 446108341) ^ (v272 >> 10) ^ 0xC2B0C24A);
  v287 = v277 - 1287400704 - ((2 * v277) & 0x6687A616) + 11;
  HIDWORD(v128) = v287 ^ 0x1D30B;
  LODWORD(v128) = v287 ^ 0xB3420000;
  v288 = v128 >> 17;
  HIDWORD(v128) = v287 ^ 0x3D30B;
  LODWORD(v128) = v287 ^ 0xB3400000;
  v289 = ((v281 - ((2 * v281 + 1904671690) & 0x8C61AD94) - 17541969) ^ (v245 >> 3) ^ 0xDAAACBE7)
       + ((v287 >> 10) ^ 0x25BDD5E0)
       + ((v128 >> 19) ^ 0xC8200C02)
       + (v288 ^ 0x10A10000)
       + ((v287 >> 9) & 0x5DF5D6 ^ 0xFFA65E3F)
       - ((2 * v288) & 0xDEBDFFFE)
       - ((2 * (v128 >> 19)) & 0x6FBFE7FA)
       + 28176107;
  v290 = (v253 ^ 0x35C38328 ^ (v289 - ((2 * v289) & 0xBDBCE18C) + 1591636166)) + (v253 ^ 0x6B1DF3EE);
  v291 = (v240 ^ 0xD65B09B) + (v286 ^ 0xCCF7CDA9) + ((2 * v286) & 0x99EF9B52) + 856175191;
  v292 = v291 + 2061384111 - ((2 * v291) & 0xF5BC735E);
  v293 = v272;
  LODWORD(a41) = v272;
  HIDWORD(v128) = v272 ^ 0xFFFFFFC7;
  LODWORD(v128) = v272 ^ 0x1D434880;
  v294 = v128 >> 7;
  HIDWORD(v128) = v292 ^ 0x39AF;
  LODWORD(v128) = v292 ^ 0x7ADE0000;
  v295 = (v128 >> 17) - ((2 * (v128 >> 17)) & 0xA25F2DBC);
  v296 = v290 + 2094467584 - ((2 * v290) & 0xF9AE14CC) + 102;
  HIDWORD(v128) = v296 ^ 0x70A66;
  LODWORD(v128) = v296 ^ 0x7CD00000;
  v297 = v128 >> 19;
  HIDWORD(v128) = v292 ^ 0x639AF;
  LODWORD(v128) = v292 ^ 0x7AD80000;
  v298 = ((v278 >> 3) ^ 0xDAEE5A14)
       + ((__PAIR64__(v256 ^ 0x10B7D, v256 ^ 0x298C0000) >> 18) ^ 0xDFFBA3D5)
       + ((2 * (__PAIR64__(v256 ^ 0x10B7D, v256 ^ 0x298C0000) >> 18)) & 0xBFF747AA)
       + ((v278 >> 2) & 0x3FBFF6F6 ^ 0xA2342D6)
       + 1076125872
       + (((v128 >> 19) - ((2 * (v128 >> 19)) & 0x386484D4) - 1674427798) ^ (v292 >> 10) ^ (v295 - 785410338) ^ 0x4D03633A);
  v299 = (v279 ^ 0x7FFBFF7D) + ((2 * v279) & 0xFFF7FEFA) + (v298 ^ 0xAA400E0) - ((2 * v298) & 0xEAB7FE3E) + 1;
  v300 = v299 - ((2 * v299 - 356516028) & 0xB884749A);
  HIDWORD(v128) = v287 ^ 0x3D30B;
  LODWORD(v128) = v287 ^ 0xB3400000;
  v301 = (v128 >> 18) - ((2 * (v128 >> 18)) & 0x67745D0C);
  HIDWORD(v128) = a61 ^ 0x5D3;
  LODWORD(v128) = a61 ^ 0x4A33E000;
  v302 = v128 >> 11;
  HIDWORD(v128) = a61 ^ 0x33E5D3;
  LODWORD(v128) = a61 ^ 0x4A000000;
  v303 = ((v128 >> 25) ^ 0xC211578E)
       + (v302 ^ 0x49B80642)
       + (v282 ^ 0x31B5FBFD)
       + ((2 * v282) & 0x636BF7FA)
       - ((2 * (v128 >> 25)) & 0x7BDD50E2)
       - ((2 * v302) & 0x6C8FF37A);
  HIDWORD(v128) = v296 ^ 0x10A66;
  LODWORD(v128) = v296 ^ 0x7CD60000;
  v304 = v128 >> 17;
  v305 = v303 + 2 - ((2 * (v303 + 2) + 83971170) & 0x7319D222);
  v306 = v287;
  HIDWORD(v128) = v287 ^ 0xB;
  LODWORD(v128) = v287 ^ 0xB343D300;
  v307 = (v128 >> 7) - ((2 * (v128 >> 7)) & 0xE84D6BC0);
  HIDWORD(v128) = v292 ^ 0x2F;
  LODWORD(v128) = v292 ^ 0x7ADE3980;
  v845 = v128 >> 7;
  HIDWORD(v128) = v296 ^ 0x30A66;
  LODWORD(v128) = v296 ^ 0x7CD40000;
  v854 = v128 >> 18;
  v308 = ((v264 >> 3) ^ 0x2D9381BB)
       + ((v264 >> 2) & 0x2F72FCE6 ^ 0x2450FC80)
       - 934903411
       + ((v280 - 610821348) ^ (v284 - 1432018813) ^ 0x7132BB9F);
  v309 = (v308 ^ 0x6E7FFFB)
       + ((2 * v308) & 0xDCFFFF6)
       + ((v296 >> 10) ^ 0x77A9DB20)
       + (v304 ^ 0x7EFFAFE)
       + (v297 ^ 0xB8E40000)
       + ((v296 >> 9) & 0x6DDDC4 ^ 0x2C4984)
       + ((2 * v304) & 0xFDFF5FC)
       - ((2 * v297) & 0x8E37FFFE)
       + 1;
  HIDWORD(v128) = ~a61;
  LODWORD(v128) = a61 ^ 0x4A33E5D0;
  v310 = v128 >> 2;
  LODWORD(a38) = v256;
  v311 = (v278 ^ 0x57FB8A42 ^ (v309 - ((2 * v309 - 2128991160) & 0xFCED027E) + 1057199971)) + (v278 ^ 0x298D0B7D);
  v312 = v311 + 1566171274 - ((2 * v311) & 0xBAB3C114);
  v313 = ((__PAIR64__(v270, v271) >> 18) ^ 0x80944231)
       + (v294 ^ 0xBFFF21BE)
       + ((2 * v294) & 0x7FFE437C)
       - ((2 * (__PAIR64__(v270, v271) >> 18)) & 0xFED77B9C)
       + 1;
  HIDWORD(v128) = a61 ^ 0x33E5D3;
  LODWORD(v128) = a61 ^ 0x4A000000;
  v314 = v128 >> 22;
  v315 = v300 + 1369586159;
  HIDWORD(v128) = (v300 + 1369586159) ^ 0x3A4D;
  LODWORD(v128) = (v300 + 1369586159) ^ 0xDC420000;
  v316 = v128 >> 17;
  HIDWORD(v128) = a61 ^ 0x5D3;
  LODWORD(v128) = a61 ^ 0x4A33E000;
  v317 = v128 >> 13;
  HIDWORD(v128) = v312 ^ 0x1E08A;
  LODWORD(v128) = v312 ^ 0x5D580000;
  LODWORD(v840) = v312 ^ 0x1E08A;
  HIDWORD(v840) = v312 ^ 0x5D580000;
  v318 = (v128 >> 19) - ((2 * (v128 >> 19)) & 0x4CDAD6DA);
  v870 = __PAIR64__(v315, v306);
  v319 = ((v306 >> 3) ^ 0xD137829E)
       + ((v306 >> 2) & 0xEBFF1FE ^ 0xC90F0C2)
       + 950011649
       + ((v301 + 867839622) ^ (v307 - 198789664) ^ 0xC79C9B66);
  v841 = v315 ^ 0x23A4D;
  v843 = v315 ^ 0xDC400000;
  HIDWORD(v128) = v315 ^ 0x23A4D;
  LODWORD(v128) = v315 ^ 0xDC400000;
  v320 = ((v313 - ((2 * v313 + 2128164896) & 0x7C439506) + 2106484371) ^ (v293 >> 3) ^ 0xBD89A39B)
       + ((v315 >> 10) ^ 0x7E99FD75)
       + (v316 ^ 0xF3D4DBFA)
       + ((v128 >> 19) ^ 0xC41A80A8)
       + ((v315 >> 9) & 0x5DDBF6 ^ 0x4C0114)
       + ((2 * v316) & 0xE7A9B7F4)
       - ((2 * (v128 >> 19)) & 0x77CAFEAE)
       - 916343453;
  v321 = (a66 ^ a61 ^ 0x9C842CBB)
       + (((a62 ^ 0x5C6047C5) + (a66 ^ 0xD6B7C968)) ^ 0xEF9BEEFD)
       + ((2 * ((a62 ^ 0x5C6047C5) + (a66 ^ 0xD6B7C968))) & 0xDF37DDFA)
       + 274993411;
  v322 = (a64 ^ ((a61 ^ 0x4A33E5D3)
               + (a62 ^ a61 ^ 0x1653A216)
               - ((2 * ((a61 ^ 0x4A33E5D3) + (a62 ^ a61 ^ 0x1653A216))) & 0x245E1012)
               + 305072137) ^ 0x4171E098 ^ (v305 + 2081263426))
       + 694531638;
  v323 = (((a61 ^ 0x4A33E5D3) + (a62 ^ 0x5C6047C5)) ^ 0x10429801)
       + (v314 ^ 0xE3BFFF6F)
       + (v310 ^ 0x773F1B7F)
       + (v317 ^ 0xD6025A00)
       + ((2 * v314) & 0xC77FFEDE)
       + ((2 * v310) & 0xEE7E36FE)
       - ((2 * ((a61 ^ 0x4A33E5D3) + (a62 ^ 0x5C6047C5))) & 0xDF7ACFFC)
       - ((2 * v317) & 0x53FB4BFE)
       + (v321 ^ 0xEBBDEFF7)
       + ((2 * v321) & 0xD77BDFEE)
       + (v322 ^ 0xF6ADBFC2)
       + ((2 * v322) & 0xED5B7F84)
       + (HIDWORD(a45) ^ 0xFF7FFEF4)
       + ((2 * HIDWORD(a45)) & 0xFEFFFDE8)
       + 2;
  HIDWORD(v128) = v312 ^ 0x1E08A;
  LODWORD(v128) = v312 ^ 0x5D580000;
  v324 = (v128 >> 17) - ((2 * (v128 >> 17)) & 0x26CB795C);
  v853 = __PAIR64__(v253, v264);
  v325 = (v264 ^ 0x2EA801B9) + (v264 ^ 0xD66573AF ^ (v320 - ((2 * v320) & 0xE651BD2) + 120753641)) + 1;
  v326 = v325 - ((2 * v325) & 0x16BF3E68);
  v327 = v292;
  HIDWORD(v128) = v292 ^ 0x239AF;
  LODWORD(v128) = v292 ^ 0x7ADC0000;
  v328 = v128 >> 18;
  v329 = v323 - ((2 * v323 - 1180661564) & 0xBAB25BD2) + 975794763;
  v330 = (v329 << 21) ^ 0xBD200000;
  v331 = (v330 - 2001000704 - ((2 * v330) & 0x11400000) + 3707) & 0xF8000000 ^ 0xD0000000;
  v332 = (v329 >> 11) ^ 0xBAB25;
  v333 = (((v331 - (v331 >> 29 << 30) + 1691288058) & 0xF8000000 ^ 0x70010001) + 67248839) ^ 0x4C0322C8 | v332;
  v334 = v333 - 2 * (v333 & 0x1007A3D4 ^ v332 & 4);
  v335 = ((v312 >> 10) ^ 0x68C2466C)
       + ((v312 >> 9) & 0x55DFD6 ^ 0xFFFB732F)
       - 1758793747
       + ((v318 + 644705133) ^ (v324 + 325434542) ^ 0x3508D7C3);
  HIDWORD(v128) = v296 ^ 0x66666666;
  LODWORD(v128) = v296 ^ 0x7CD70A00;
  v336 = v128 >> 7;
  HIDWORD(v128) = (v329 >> 11) ^ 0x3AB25;
  LODWORD(v128) = (v334 - 1786272816) ^ 0x95800000;
  v337 = (v128 >> 19) + 1770591488 - ((2 * (v128 >> 19)) & 0xD3122ABE);
  v338 = (v335 - ((2 * v335) & 0x1F4C3A6C) - 1884938954) ^ (v319 - ((2 * v319) & 0xE936BDE6) + 1956339443);
  v339 = v326 + 190816052;
  HIDWORD(v128) = (v326 + 190816052) ^ 0x79F34;
  LODWORD(v128) = (v326 + 190816052) ^ 0xB580000;
  v340 = (v128 >> 19) - ((2 * (v128 >> 19)) & 0xCEEF2B36);
  v337 += 95;
  HIDWORD(v128) = v337 ^ 0x5F;
  LODWORD(v128) = v337 ^ 0x69891500;
  v341 = (v128 >> 8) + 83457675 - ((2 * (v128 >> 8)) & 0x9F2ED16);
  HIDWORD(v128) = v329 ^ 0x1592DE9;
  LODWORD(v128) = v329 ^ 0x5C000000;
  v342 = v128 >> 25;
  HIDWORD(v128) = v329 ^ 0x192DE9;
  LODWORD(v128) = v329 ^ 0x5D400000;
  v343 = v128 >> 22;
  HIDWORD(v128) = v339 ^ 0x19F34;
  LODWORD(v128) = v339 ^ 0xB5E0000;
  v344 = (v330 + 1831963319 - ((2 * v330) & 0xDA400000)) ^ 0x6D318AB7 | v332;
  v345 = v344 - ((2 * v344) & 0xC6601F1E);
  LODWORD(a44) = a62 ^ 0x5C6047C5;
  v346 = ((v128 >> 17) - ((2 * (v128 >> 17)) & 0xFE3AA7EC) - 14855178) ^ (v340 + 1735890331);
  HIDWORD(v128) = v338 ^ 0x143C5;
  LODWORD(v128) = v338 ^ 0xFB3C0000;
  v347 = ((v339 >> 10) ^ 0xB37D0898) + ((v339 >> 9) & 0x7FBEFE ^ 0x5AECE) + 1283465345 + (v346 ^ 0x986AC66D);
  v348 = (v128 >> 17) - ((2 * (v128 >> 17)) & 0xF88AC71A);
  v349 = v341 ^ 0x4F9768B | (((v329 << 26) ^ 0xA4000000) + 363942263 - ((2 * ((v329 << 26) ^ 0xA4000000)) & 0x28000000)) ^ 0x15B15177;
  HIDWORD(v128) = v338 ^ 0x543C5;
  LODWORD(v128) = v338 ^ 0xFB380000;
  v350 = v349 - ((2 * v349) & 0x1618F89A);
  v351 = (v128 >> 19) - ((2 * (v128 >> 19)) & 0x5335CD7C);
  HIDWORD(v128) = v329 ^ 1;
  LODWORD(v128) = v329 ^ 0x5D592DE8;
  v352 = v128 >> 2;
  HIDWORD(v128) = v329 ^ 0xDE9;
  LODWORD(v128) = v329 ^ 0x5D592000;
  v353 = v128 >> 13;
  v354 = (v870 ^ 0x4CBC2CF4) + (v347 ^ 0xFE9FD6DF) + ((2 * v347) & 0xFD3FADBE) + 23079202;
  v355 = ((v327 >> 3) ^ 0x875BCF2D)
       + (v845 ^ 0x5FE7A5DD)
       + (v328 ^ 0xA022338C)
       + ((v327 >> 2) & 0x2FFFEFCE ^ 0xF14871B5)
       + ((2 * v845) & 0xBFCF4BBA)
       - ((2 * v328) & 0xBFBB98E6)
       + (v354 ^ 0x6AFFF5FD)
       + ((2 * v354) & 0xD5FFEBFA);
  v356 = v355 + 3 - 2 * ((v355 + 217458819) & 0x528577F7 ^ (v355 + 3) & 5);
  v357 = (v329 ^ 0x5D592DE9)
       + (a61 ^ 0x4A33E5D3)
       - 536754999
       - ((2 * ((v329 ^ 0x5D592DE9) + (a61 ^ 0x4A33E5D3))) & 0xC0038992);
  v358 = ((v345 + 1664094095) ^ 0x683C73C2 ^ (v350 + 185367629))
       + (a62 ^ v357 ^ 0x104BD736 ^ ((a62 ^ 0xA39FB83A)
                                   + (v329 ^ 0x5D592DE9)
                                   + 1
                                   - ((2 * ((a62 ^ 0xA39FB83A) + (v329 ^ 0x5D592DE9) + 1)) & 0x5854A874)
                                   - 1406512070));
  v359 = (a66 ^ 0xD6B7C968) + (v342 ^ 0x6F7DFB6F) + ((2 * v342) & 0xDEFBF6DE) - 1870527343;
  v360 = (v359 ^ 0xBDDFFF7F) + ((2 * v359) & 0x7BBFFEFE) + (v358 ^ 0x60001081) - ((2 * v358) & 0x3FFFDEFC) + 1;
  LODWORD(v856) = v338;
  HIDWORD(v865) = v312;
  HIDWORD(v128) = v312 ^ 0xA;
  LODWORD(v128) = v312 ^ 0x5D59E080;
  HIDWORD(a45) = v128 >> 7;
  v361 = ((v338 >> 10) ^ 0x5FD958AE)
       + ((v338 >> 9) & 0x4F2FFC ^ 0x4D0EA0)
       - 1609013246
       + ((v348 + 2084922253) ^ (v351 - 1449466178) ^ 0xD5DF8533);
  HIDWORD(v867) = v296;
  v362 = ((v296 >> 3) ^ 0x2E1EC15F)
       + (v336 ^ 0xFFF79AFB)
       + (v854 ^ 0xBDEDD5BF)
       + ((v296 >> 2) & 0x3CF7BFD8 ^ 0xE3CA7D67)
       + ((2 * v336) & 0xFFEF35F6)
       + ((2 * v854) & 0x7BDBAB7E)
       + (v361 ^ 0x800E8408)
       - ((2 * v361) & 0xFFE2F7EE)
       + 3;
  v363 = (a61 ^ 0x176AC83A ^ v329)
       + (((v329 ^ 0x5D592DE9) + (a62 ^ 0x5C6047C5)) ^ 0x5C27A0C3)
       - ((2 * ((v329 ^ 0x5D592DE9) + (a62 ^ 0x5C6047C5))) & 0x47B0BE78)
       - 1546100931;
  v364 = (((a62 ^ 0x5C6047C5) + (a61 ^ 0xB5CC1A2C) + 1) ^ 0xDFF77976)
       + ((2 * ((a62 ^ 0x5C6047C5) + (a61 ^ 0xB5CC1A2C) + 1)) & 0xBFEEF2EC)
       + (v343 ^ 0xE0064622)
       + (v353 ^ 0xF9F71FFF)
       + (v352 ^ 0x3BDDDF7F)
       + ((2 * v353) & 0xF3EE3FFE)
       + ((2 * v352) & 0x77BBBEFE)
       - ((2 * v343) & 0x3FF373BA)
       + (v363 ^ 0xDB6F77FF)
       + ((2 * v363) & 0xB6DEEFFE)
       + 784189675
       + (v857 ^ 0x3F9B43D5 ^ (v360 - ((2 * v360 + 61127162) & 0x29A5C94E) - 156941916));
  v365 = v364 - 1096878080 - ((2 * v364) & 0x7D3DF616);
  HIDWORD(v856) = __PAIR64__(v312 ^ 0x1E08A, v312 ^ 0x5D580000) >> 18;
  LODWORD(a39) = v327;
  v366 = (v327 ^ 0x8521C650) + (v327 ^ 0x4BBC9C7D ^ (v362 - ((2 * v362 + 1091556946) & 0x62C54BA4) - 773156613)) + 1;
  v367 = v366 - ((2 * v366) & 0x4423AD0E);
  HIDWORD(v128) = HIDWORD(v870) ^ 0x4D;
  LODWORD(v128) = HIDWORD(v870) ^ 0xDC423A00;
  LODWORD(v844) = (v128 >> 7) - ((2 * (v128 >> 7)) & 0xE3CD0492);
  v368 = v365 + 779;
  v369 = (v365 + 779) ^ 0xBE9EFB0B;
  v370 = ((2 * (v369 + (v329 ^ 0x5D592DE9))) & 0x3FFCBDBE) + ((v369 + (v329 ^ 0x5D592DE9)) ^ 0x9FFE5EDF);
  HIDWORD(v842) = (__PAIR64__(v841, v843) >> 18) - ((2 * (__PAIR64__(v841, v843) >> 18)) & 0x90DFFAC2);
  HIDWORD(v128) = (v365 + 779) ^ 0xB;
  LODWORD(v128) = (v365 + 779) ^ 0xBE9EFB00;
  v371 = (v128 >> 6) + 2125142444 - ((2 * (v128 >> 6)) & 0xFD563962);
  HIDWORD(v128) = (v365 + 779) ^ 0x30B;
  LODWORD(v128) = (v365 + 779) ^ 0xBE9EF800;
  v372 = v128 >> 11;
  HIDWORD(v128) = (v365 + 779) ^ 0x1B0B;
  LODWORD(v128) = (v365 + 779) ^ 0xBE9EE000;
  v373 = v128 >> 13;
  HIDWORD(v128) = (v365 + 779) ^ 0x9EFB0B;
  LODWORD(v128) = (v365 + 779) ^ 0xBE000000;
  v374 = ((v128 >> 25) ^ 0x7BDEEFFF)
       - 2078212036
       + ((2 * (v128 >> 25)) & 0xF7BDDFFE)
       + ((v372 - ((2 * v372) & 0x697D47AA) + 884909013) ^ (v371 + 773) ^ 0x4A15BF64)
       + 4037;
  v375 = (a61 ^ 0xF4AD1ED8 ^ (v365 + 779)) + 1610719521 + v370;
  HIDWORD(v128) = (v365 + 779) ^ 0x1EFB0B;
  LODWORD(v128) = (v365 + 779) ^ 0xBE800000;
  v376 = v128 >> 22;
  v377 = (v356 - 545546126) ^ v870;
  HIDWORD(v128) = v377 ^ 0x6A4F9;
  LODWORD(v128) = v377 ^ 0x61C00000;
  LODWORD(v842) = (v128 >> 19) - ((2 * (v128 >> 19)) & 0x897F7756);
  HIDWORD(v128) = -796 - v365;
  LODWORD(v128) = (v365 + 779) ^ 0xBE9EFB08;
  v378 = v128 >> 2;
  v379 = (a61 ^ 0x4A33E5D3) + (v375 ^ 0x372FBFF6) + ((2 * v375) & 0x6E5F7FEC) - 925876214;
  v380 = (v379 ^ 0xFBFB2FFD)
       + ((2 * v379) & 0xF7F65FFA)
       + 67424259
       + (a62 ^ 0x973F5D61 ^ (v374 - ((2 * v374) & 0x96BE3548) - 882959708));
  v855 = __PAIR64__(v339, v377);
  HIDWORD(v128) = v377 ^ 0xA4F9;
  LODWORD(v128) = v377 ^ 0x61C60000;
  v381 = (v128 >> 17) - ((2 * (v128 >> 17)) & 0x62EBFB94);
  v382 = (v357 ^ 0xE001C4C9)
       + ((v369 + 1 + (v329 ^ 0xA2A6D216) - ((2 * (v369 + 1 + (v329 ^ 0xA2A6D216))) & 0x7DEC15DE) + 1056312047) ^ (v369 + (a61 ^ 0x4A33E5D3) - ((2 * (v369 + (a61 ^ 0x4A33E5D3))) & 0x65B1731C) + 853064078) ^ 0xF3D14C9E)
       + 1;
  v383 = (v376 ^ 0xB0C28A08)
       + (v378 ^ 0x7FFE9FDF)
       + (v373 ^ 0x7F7DFBFE)
       + ((2 * v378) & 0xFFFD3FBE)
       + ((2 * v373) & 0xFEFBF7FC)
       - ((2 * v376) & 0x9E7AEBEE)
       + (v382 ^ 0xDFFFB4FA)
       + ((2 * v382) & 0xBFFF69F4)
       + 1874928929
       + (v847 ^ 0x705FC0FF ^ (((2 * v380) & 0xFFDBBB7E)
                             + (v380 ^ 0x7FEDDDBF)
                             - ((2 * (((2 * v380) & 0xFFDBBB7E) + (v380 ^ 0x7FEDDDBF)) + 12707854) & 0x295C4010)
                             - 1794173937));
  HIDWORD(v846) = v367 + 571594375;
  v384 = (v367 + 571594375) ^ 0x1D687;
  v385 = (v367 + 571594375) ^ 0x22100000;
  v386 = __PAIR64__(v384, v385) >> 19;
  v387 = __PAIR64__(v384, v385) >> 17;
  v388 = v383 + 2017511046 - ((2 * v383) & 0xF0818D0C);
  v389 = (v368 ^ 0x416104F4)
       + (v388 ^ 0x7840C686)
       + 1502413600
       - ((2 * ((v368 ^ 0x416104F4) + (v388 ^ 0x7840C686) + 1)) & 0xB31A063E);
  HIDWORD(v128) = v388 ^ 0xC686;
  LODWORD(v128) = v388 ^ 0x78787878;
  v390 = v128 >> 22;
  HIDWORD(v128) = v388 ^ 0x686;
  LODWORD(v128) = v388 ^ 0x7840C000;
  v391 = (v128 >> 13) - ((2 * (v128 >> 13)) & 0x30BD97D8);
  HIDWORD(v128) = v388 ^ 0x686;
  LODWORD(v128) = v388 ^ 0x7840C000;
  v392 = (v128 >> 11) - ((2 * (v128 >> 11)) & 0xCF1354DE);
  HIDWORD(v128) = (v383 + 2017511046) ^ 2;
  LODWORD(v128) = v388 ^ 0x7840C684;
  v393 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0x7843F07A);
  HIDWORD(v128) = v388 ^ 0x40C686;
  LODWORD(v128) = v388 ^ 0x78000000;
  v394 = (v128 >> 25) - ((2 * (v128 >> 25)) & 0xA8416524);
  v395 = (v390 ^ 0xB05AC184)
       - ((2 * v390) & 0x9F4A7CF6)
       + 1336229500
       + ((v393 - 1138624451) ^ (v391 - 1738617876) ^ 0x247F33D1);
  HIDWORD(v128) = v388 ^ 6;
  LODWORD(v128) = v388 ^ 0x7840C680;
  v396 = (v389 ^ ((v388 ^ 0x7840C686)
                + (v329 ^ 0x5D592DE9)
                - ((2 * ((v388 ^ 0x7840C686) + (v329 ^ 0x5D592DE9))) & 0x7FBDF0BA)
                - 1075906467) ^ 0xE653FB42)
       - v370;
  v397 = v369 - 2147415999 + ((2 * v388) ^ 0x8F7F7BF3) + ((4 * v388) & 0xFFFDEDFC ^ 0xE1010818) + 192;
  v398 = (a61 ^ 0x4A33E5D3)
       + ((v392 + 1737075311) ^ ((v128 >> 6) - ((2 * (v128 >> 6)) & 0xD0E72B24) - 395078254) ^ (v394 - 736054638) ^ 0xA4257290)
       + 1;
  v399 = ((2 * v329) ^ 0x61512429)
       + ((4 * v329) & 0xB7C6FFF4 ^ 0x3544B7A4)
       + (v397 ^ 0x21AC6010)
       - ((2 * v397) & 0xBCA73FDE)
       + (v398 ^ 0x77EDF5EB)
       + ((2 * v398) & 0xEFDBEBD6)
       + 1;
  v400 = (HIDWORD(v844) ^ 0x26AAAE90 ^ (v399 - ((2 * v399 + 13338154) & 0x127AD00) - 1057384043))
       + ((v395 - ((2 * v395) & 0x9A6B33E4) + 1295358450) ^ (v396 - ((2 * v396 + 1073528254) & 0xB8D6784C) + 2087295749) ^ 0x915EA5D4);
  v401 = v400 - 523289688 - ((2 * v400) & 0xC19E7750);
  HIDWORD(v128) = v401 ^ 0x28;
  LODWORD(v128) = v401 ^ 0xE0CF3B80;
  v402 = (v128 >> 6) - ((2 * (v128 >> 6)) & 0xFB748A06);
  HIDWORD(v128) = v401 ^ 0x1BA8;
  LODWORD(v128) = v401 ^ 0xE0CF2000;
  v403 = v128 >> 13;
  HIDWORD(v128) = v401 ^ 0xF3BA8;
  LODWORD(v128) = v401 ^ 0xE0C00000;
  v404 = v128 >> 22;
  v405 = (v386 ^ 0xA04AC200) + (v387 ^ 0xAEFD7BFF) + ((2 * v387) & 0x5DFAF7FE) - ((2 * v386) & 0xBF6A7BFE);
  LODWORD(v865) = v405 + 1 - 2 * ((v405 + 280478209) & 0x1724047F ^ (v405 + 1) & 0x18);
  v406 = (v388 ^ 0x87BF3979) + 1;
  v407 = (((v401 ^ 0xE0CF3BA8) + v406) ^ 0x7D75BB3F) - 2104867647 + ((2 * ((v401 ^ 0xE0CF3BA8) + v406)) & 0xFAEB767E);
  v408 = (v368 ^ 0x416104F4)
       + (((v401 ^ 0xE0CF3BA8) + (v388 ^ 0x7840C686)) ^ 0xBFF5FD9D)
       + ((2 * ((v401 ^ 0xE0CF3BA8) + (v388 ^ 0x7840C686))) & 0x7FEBFB3A)
       + 1074397796;
  v409 = ((2 * (v369 + 1 + (v401 ^ 0x1F30C457))) & 0xF7EAFDE6)
       + ((v369 + 1 + (v401 ^ 0x1F30C457)) ^ 0xFBF57EF3)
       + (v408 ^ 0xFF76EF9F)
       + ((2 * v408) & 0xFEEDDF3E);
  HIDWORD(v128) = v401 ^ 0xCF3BA8;
  LODWORD(v128) = v401 ^ 0xE0000000;
  v410 = v128 >> 25;
  HIDWORD(v128) = v401 ^ 0x3A8;
  LODWORD(v128) = v401 ^ 0xE0CF3800;
  v411 = (v389 ^ 0x598D031F)
       - 2147415999
       + ((v407 + (v368 ^ 0x5E51C0A3 ^ v401)) ^ 0x7FFEED5D)
       + ((2 * (v407 + (v368 ^ 0x5E51C0A3 ^ v401))) & 0xFFFDDABA);
  v412 = (v410 ^ 0x7ADFFFF5)
       + ((2 * v410) & 0xF5BFFFEA)
       - 2061500404
       + ((v402 + 2109359363) ^ ((v128 >> 11) - ((2 * (v128 >> 11)) & 0xBAA08E6A) - 581941451) ^ 0x5F15FDC9);
  v413 = (v329 ^ 0x5D592DE9) + (v412 ^ 0xFEFF7D96) + ((2 * v412) & 0xFDFEFB2C) + 16810602;
  v414 = ((v409 - ((2 * v409 + 153559772) & 0xEA822DEA) - 103503773) ^ 0x50580AC7 ^ (v413
                                                                                   - ((2 * v413) & 0x4A323864)
                                                                                   - 1525081038))
       + 672521749;
  HIDWORD(v128) = v400;
  LODWORD(v128) = v401 ^ 0xE0CF3BA8;
  v415 = v846 + (v414 ^ 0xD9ABBEBB) + ((2 * v414) & 0xB3577D76) + 643055941;
  v416 = ((v128 >> 2) ^ 0xD4D67EDE)
       + (v404 ^ 0x598DBDEE)
       + (v403 ^ 0x4000)
       + ((2 * (v128 >> 2)) & 0xA9ACFDBC)
       + ((2 * v404) & 0xB31B7BDC)
       - ((2 * v403) & 0xFFFF7FFF)
       + ((v411 + 2658) ^ 0xC4107C0)
       - ((2 * (v411 + 2658)) & 0xE77DF07E)
       + (v415 ^ 0x7F7FF77F)
       + ((2 * v415) & 0xFEFFEEFE);
  v417 = (2 * v416 - 1951070230) & 0xDED9E1D4;
  v416 -= 1253608225;
  v418 = v416 - v417;
  v419 = (v416 - v417) ^ 0x6F6CF0EA;
  v420 = v419 + (v401 ^ 0xE0CF3BA8) - 2003948803 - ((2 * (v419 + (v401 ^ 0xE0CF3BA8))) & 0x111C55FA);
  v421 = ((2 * v296) ^ 0xA71E823)
       + ((4 * v296) & 0xE7BFF9DC ^ 0xE31C2998)
       + 203424529
       + ((v377 >> 10) ^ 0xF5D237C8 ^ (v381 - 1317667382) ^ (v842 + 1153416107));
  HIDWORD(v128) = v416 ^ 2;
  LODWORD(v128) = v418 ^ 0x6F6CF0E8;
  v422 = v128 >> 2;
  HIDWORD(v128) = v418 ^ 0x10EA;
  LODWORD(v128) = v418 ^ 0x6F6CE000;
  v423 = v128 >> 13;
  HIDWORD(v128) = v418 ^ 0xAAAAAAAA;
  LODWORD(v128) = v418 ^ 0x6F6CF0C0;
  v424 = v128 >> 6;
  HIDWORD(v128) = v418 ^ 0x2CF0EA;
  LODWORD(v128) = v418 ^ 0x6F400000;
  v425 = v128 >> 22;
  HIDWORD(v128) = v418 ^ 0xEA;
  LODWORD(v128) = v418 ^ 0x6F6CF000;
  v426 = v128 >> 11;
  v881 = ((v844 - 236551607) ^ (HIDWORD(v870) >> 3) ^ (HIDWORD(v842) + 1215298913) ^ 0x5DFEC79E)
       + 4198664
       + (v421 ^ 0xFFBFDFEF)
       + ((2 * v421) & 0xFF7FBFDE);
  v427 = (v388 ^ 0xE8D3C993 ^ v418) + (v420 ^ 0x888E2AFD) + 1;
  HIDWORD(v128) = v418 ^ 0x16CF0EA;
  LODWORD(v128) = v418 ^ 0x6E000000;
  v428 = ((v419 + v406 - ((2 * (v419 + v406)) & 0xDCA9A89E) + 1851053135) ^ v420 ^ 0xE6DAFEB2) + v407;
  v429 = v369
       + (v426 ^ 0x6B41918)
       + ((v128 >> 25) ^ 0xF2B34F6F)
       + (v424 ^ 0x3EEE76CD)
       + ((2 * (v128 >> 25)) & 0xE5669EDE)
       + ((2 * v424) & 0x7DDCED9A)
       - ((2 * v426) & 0xF297CDCE)
       - 945151828;
  v430 = (v429 ^ 0xFDAFBFDF)
       + ((2 * v429) & 0xFB5F7FBE)
       + 38813729
       + (v388 ^ 0x891F5504 ^ (v427 - ((2 * v427) & 0xE2BF2704) - 245394558));
  v431 = (v425 ^ 0x38A02224)
       + (v423 ^ 0x80C02113)
       + (v422 ^ 0xCFF3FFEB)
       + ((2 * v422) & 0x9FE7FFD6)
       - ((2 * v425) & 0x8EBFBBB6)
       - ((2 * v423) & 0xFE7FBDD8)
       + (v428 ^ 0xDFEFC7AF)
       + ((2 * v428) & 0xBFDF8F5E);
  v432 = (v848 ^ 0x690D15D9) + (v430 ^ 0xF23FFFEF) + ((2 * v430) & 0xE47FFFDE) - 2099205870;
  v433 = v431 + (v432 ^ 0x733BDE7B) + ((2 * v432) & 0xE677BCF6) + 2;
  v434 = v433 - ((2 * v433 + 117452132) & 0x397EA1A6);
  v435 = v434 + 1077897093;
  v436 = (v434 + 1077897093) ^ 0x1CBF50D3;
  v437 = ((2 * (v436 + (v401 ^ 0xE0CF3BA8))) & 0x733FFF4E) + ((v436 + (v401 ^ 0xE0CF3BA8)) ^ 0x399FFFA7);
  HIDWORD(v128) = (v434 + 1077897093) ^ 0x13;
  LODWORD(v128) = (v434 + 1077897093) ^ 0x1CBF50C0;
  v438 = v128 >> 6;
  HIDWORD(v128) = (v434 + 1077897093) ^ 0x10D3;
  LODWORD(v128) = (v434 + 1077897093) ^ 0x1CBF4000;
  v439 = v128 >> 13;
  HIDWORD(v128) = (v434 + 1077897093) ^ 0xD3;
  LODWORD(v128) = (v434 + 1077897093) ^ 0x1CBF5000;
  v440 = v128 >> 11;
  v441 = (v418 ^ 0x90930F15) + 1;
  HIDWORD(v128) = (v434 + 1077897093) ^ 0xBF50D3;
  LODWORD(v128) = (v434 + 1077897093) ^ 0x1C000000;
  v442 = (v128 >> 25) + 749917999 + (~(2 * (v128 >> 25)) | 0xA69A51A3);
  HIDWORD(v128) = -1077897114 - v434;
  LODWORD(v128) = (v434 + 1077897093) ^ 0x1CBF50D0;
  v443 = v128 >> 2;
  v444 = (v436 + v441 + 952647845 - ((2 * (v436 + v441)) & 0x7190814A)) ^ 0x38C840A5 ^ (v437 - 966786983);
  v445 = (v440 ^ 0x7FD7F57F) + (v438 ^ 0x795F7EE5) + ((2 * v438) & 0xF2BEFDCA) + ((2 * v440) & 0xFFAFEAFE);
  HIDWORD(v128) = v435 ^ 0x3F50D3;
  LODWORD(v128) = v435 ^ 0x1C800000;
  v446 = (v401 ^ 0xE0CF3BA8) + ((v436 + v419) ^ 0xEED3EF7B) + ((2 * (v436 + v419)) & 0xDDA7DEF6) + v437;
  v447 = ((v128 >> 22) ^ 0xB6BDEF7B)
       + (v443 ^ 0xD7CF77EE)
       + (v439 ^ 0x82002C88)
       + ((2 * (v128 >> 22)) & 0x6D7BDEF6)
       + ((2 * v443) & 0xAF9EEFDC)
       - ((2 * v439) & 0xFBFFA6EE)
       + 1;
  v448 = (v442 ^ 0x626ACD36 ^ (v445 - 2 * ((v445 + 113806236) & 0x4ED81A1B ^ v445 & 3) + 1436591540))
       + (v388 ^ 0x7840C686);
  v449 = ((v444 - 231389574 - ((2 * v444) & 0xE46A8CF4)) ^ 0xF235467A) + (v401 ^ 0x8FA3CB42 ^ v418);
  v450 = (v867 ^ 0xBF558CD6) + ((v446 - 678686498) ^ 0xEFF37FDD) + ((2 * (v446 - 678686498)) & 0xDFE6FFBA) + 269254691;
  v451 = (v450 ^ 0xC0010C01)
       - ((2 * v450) & 0x7FFDE7FC)
       + (v448 ^ 0x3FFEDDEF)
       + ((2 * v448) & 0x7FFDBBDE)
       + ((v447 - ((2 * v447 - 555427812) & 0xDCF807FE) + 1575907341) ^ 0x20B713FA ^ (v449
                                                                                    - ((2 * v449) & 0x9D96200A)
                                                                                    + 1321930757))
       - 1695378935;
  v452 = v451 + 402276173 - ((2 * v451) & 0x2FF47E9A);
  v453 = v452 ^ 0x17FA3F4D;
  v454 = (((v452 ^ 0x17FA3F4D) + v441) ^ 0xBEDFF34F)
       + (((v452 ^ 0x17FA3F4D) + v436) ^ 0xBB0FFCF7)
       + ((2 * ((v452 ^ 0x17FA3F4D) + v436)) & 0x761FF9EE)
       + ((2 * ((v452 ^ 0x17FA3F4D) + v441)) & 0x7DBFE69E);
  HIDWORD(v128) = v452 ^ 1;
  LODWORD(v128) = v452 ^ 0x17FA3F4C;
  v455 = v128 >> 2;
  v456 = (v435 ^ 0xE340AF2C) + 1;
  v457 = (v452 ^ 0x17FA3F4D) + v456 - 1145192530 - ((2 * ((v452 ^ 0x17FA3F4D) + v456)) & 0x777B7F5C);
  HIDWORD(v128) = v452 ^ 0xD;
  LODWORD(v128) = v452 ^ 0x17FA3F40;
  v458 = v128 >> 6;
  HIDWORD(v128) = v452 ^ 0x74D;
  LODWORD(v128) = v452 ^ 0x17FA3800;
  v459 = v128 >> 11;
  HIDWORD(v128) = v452 ^ 0x1F4D;
  LODWORD(v128) = v452 ^ 0x17FA2000;
  v460 = v128 >> 13;
  HIDWORD(v128) = v452 ^ 0x1FA3F4D;
  LODWORD(v128) = v452 ^ 0x16000000;
  v461 = v128 >> 25;
  HIDWORD(v128) = v452 ^ 0x3A3F4D;
  LODWORD(v128) = v452 ^ 0x17C00000;
  v462 = (v459 ^ 0xA0100200)
       + (v461 ^ 0x6B3F0DF7)
       + (v458 ^ 0xB6F5D37F)
       + ((2 * v461) & 0xD67E1BEE)
       + ((2 * v458) & 0x6DEBA6FE)
       - ((2 * v459) & 0xBFDFFBFE)
       + 1035672714
       + (v418 ^ 0xFFADE935 ^ ((v457 ^ 0xBBBDBFAE)
                             + (v418 ^ 0x7896CFA7 ^ v452)
                             - ((2 * ((v457 ^ 0xBBBDBFAE) + (v418 ^ 0x7896CFA7 ^ v452))) & 0x218233BE)
                             - 1866393121));
  v463 = (v401 ^ 0xE0CF3BA8) + (v462 ^ 0x86424504) - ((2 * v462) & 0xF37B75F6) + 2042477308;
  v464 = (v460 ^ 0xFF7D96FF)
       + ((2 * v460) & 0xFEFB2DFE)
       + 8546561
       + (v418 ^ v435 ^ 0xB03D6ECB ^ (v454 - ((2 * v454 + 203431796) & 0x87DD9DE4) + 1241439916));
  v465 = (v455 ^ 0x6DF77FFF)
       + ((v128 >> 22) ^ 0x87BDBD79)
       + ((2 * v455) & 0xDBEEFFFE)
       + ((2 * (v128 >> 22)) & 0xF7B7AF2)
       + (v464 ^ 0x58408A00)
       - ((2 * v464) & 0x4F7EEBFE);
  v466 = (HIDWORD(v848) ^ 0x6ED89BDD) + (v463 ^ 0x7B7BDFE6) + ((2 * v463) & 0xF6F7BFCC) - 115429705;
  v467 = v465 + (v466 ^ 0xBD3FC6CF) + ((2 * v466) & 0x7A7F8D9E);
  v468 = (2 * v467 + 1771365234) & 0x49D4F08C;
  v467 += 431286783;
  v469 = v467 - v468;
  HIDWORD(v128) = v467 ^ 2;
  LODWORD(v128) = v469 ^ 0x24EA7844;
  v470 = v128 >> 2;
  HIDWORD(v128) = v469 ^ 6;
  LODWORD(v128) = v469 ^ 0x24EA7840;
  v471 = v128 >> 6;
  HIDWORD(v128) = v469 ^ 0x46;
  LODWORD(v128) = v469 ^ 0x24EA7800;
  v472 = v128 >> 11;
  HIDWORD(v128) = v469 ^ 0x1846;
  LODWORD(v128) = v469 ^ 0x24EA6000;
  v473 = v469 ^ 0x24EA7846;
  v474 = ((v128 >> 13) ^ 0xF9D7FBB5)
       + (v470 ^ 0x7FF1FFDF)
       + ((2 * v470) & 0xFFE3FFBE)
       + ((2 * (v128 >> 13)) & 0xF3AFF76A);
  v475 = (v472 ^ 0x1800702) + (v471 ^ 0xB672FFFE) + ((2 * v471) & 0x6CE5FFFC) - ((2 * v472) & 0xFCFFF1FA) + 1;
  HIDWORD(v128) = v469 ^ 0x2A7846;
  LODWORD(v128) = v469 ^ 0x24C00000;
  v476 = (v128 >> 22) - ((2 * (v128 >> 22)) & 0x847148FA);
  HIDWORD(v128) = v469 ^ 0xEA7846;
  LODWORD(v128) = v469 ^ 0x24000000;
  v477 = v435 ^ v452;
  v478 = (v477 ^ 0x44B154CA ^ v469 ^ ((v469 ^ 0x24EA7846)
                                    + v456
                                    - ((2 * ((v469 ^ 0x24EA7846) + v456)) & 0xD63C8624)
                                    + 1797145362))
       - 898248179;
  v479 = (v478 ^ 0xBDBDFBFB)
       + ((2 * v478) & 0x7B7BF7F6)
       + 1111622661
       + (v418 ^ ((v128 >> 25) - ((2 * (v128 >> 25)) & 0xA56C2282) - 759819967) ^ 0xF61E5FDE ^ (v475
                                                                                              - 1814972555
                                                                                              + (~(2 * v475 - 1877347842) | 0x68768315)));
  v480 = (HIDWORD(v849) ^ 0x7FC0B93B ^ (v479 - ((2 * v479) & 0x897C5F28) - 994168940))
       + (v477 ^ v457 ^ (v476 - 1036475267) ^ 0x8D08635E ^ (v474 - ((2 * v474 + 208406744) & 0xFF902E26) - 2046944385));
  v481 = v480 - 2125588480 - ((2 * v480) & 0x29C3F08);
  v482 = (v469 ^ 0x24EA7846) + (v452 ^ 0x17FA3F4D) - ((2 * ((v469 ^ 0x24EA7846) + (v452 ^ 0x17FA3F4D))) & 0x71010F08);
  v483 = v481 + 1924;
  v484 = (v481 + 1924) ^ 0x814E1F84;
  v485 = (v452 ^ 0xE805C0B2) + v484 + 1 - ((2 * ((v452 ^ 0xE805C0B2) + v484 + 1)) & 0xA6A0137A);
  HIDWORD(v128) = (v481 + 1924) ^ 0x14E1F84;
  LODWORD(v128) = v481 - 2147481724;
  v486 = v128 >> 25;
  HIDWORD(v128) = (v481 + 1924) ^ 4;
  LODWORD(v128) = (v481 + 1924) ^ 0x814E1F80;
  v487 = v128 >> 6;
  v488 = v484 + (v469 ^ 0x24EA7846) + 1189952680 - ((2 * (v484 + (v469 ^ 0x24EA7846))) & 0x8DDA7950);
  HIDWORD(v128) = v483 ^ 0x1F84;
  LODWORD(v128) = v483 ^ 0x814E0000;
  v489 = v128 >> 13;
  HIDWORD(v128) = v483 ^ 0x784;
  LODWORD(v128) = v483 ^ 0x814E1800;
  v490 = ((v128 >> 11) ^ 0x80224A)
       + (v487 ^ 0xFF6FFFEB)
       + ((2 * v487) & 0xFEDFFFD6)
       - ((2 * (v128 >> 11)) & 0xFEFFBB6A)
       + 1;
  v491 = (v452 ^ 0x17FA3F4D)
       + (((v452 ^ 0x96B420C9 ^ v483) + (v469 ^ 0x24EA7846)) ^ 0xF7FF5DCF)
       + ((2 * ((v452 ^ 0x96B420C9 ^ v483) + (v469 ^ 0x24EA7846))) & 0xEFFEBB9E)
       + 134259249;
  HIDWORD(v128) = v483 ^ 0xE1F84;
  LODWORD(v128) = v483 ^ 0x81400000;
  v492 = ((v486 - ((2 * v486) & 0x505D8C0C) - 1473329658) ^ 0x7A114903 ^ (v490
                                                                        - ((2 * v490 + 2079636) & 0xA47F1E0A)
                                                                        - 766546737))
       + v436;
  v493 = v484 + (v491 ^ 0x50008030) - ((2 * v491) & 0x5FFEFF9E) - 1342210096;
  v494 = (v849 ^ 0x3498719D)
       + (v493 ^ 0xF77EF7FF)
       + ((2 * v493) & 0xEEFDEFFE)
       + (v492 ^ 0x3F8FD61C)
       + ((2 * v492) & 0x7F1FAC38);
  v495 = (v489 ^ 0x8F028A01)
       + ((__PAIR64__(v483, v484) >> 2) ^ 0xFF6D9FCF)
       + ((v128 >> 22) ^ 0xA0609885)
       + ((2 * (__PAIR64__(v483, v484) >> 2)) & 0xFEDB3F9E)
       - ((2 * (v128 >> 22)) & 0xBF3ECEF4)
       - ((2 * v489) & 0xE1FAEBFC)
       + ((v482 - 1199536252) ^ v488 ^ 0xAD3DB291 ^ (v485 + 1397754301))
       - 785433173;
  v496 = ((2 * v495) & 0xF2F3E798)
       + (v495 ^ 0x7979F3CC)
       + ((v494 + 727728131) ^ 0xF7B775FF)
       + ((2 * (v494 + 727728131)) & 0xEF6EEBFE);
  v497 = v496 - ((2 * v496 + 496839786) & 0xAE7B9F3E);
  v498 = v497 + 1712088532;
  HIDWORD(v128) = (v497 + 1712088532) ^ 0x1F;
  LODWORD(v128) = (v497 + 1712088532) ^ 0xD73DCF80;
  v499 = v128 >> 6;
  v500 = (v497 + 1712088532) ^ 0xD73DCF9F;
  v501 = ((v500 + v484) ^ 0xFB4FEEEF) + (v469 ^ 0xC284826 ^ (v497 + 1712088532)) + ((2 * (v500 + v484)) & 0xF69FDDDE);
  HIDWORD(v128) = (v497 + 1712088532) ^ 0xF9F;
  LODWORD(v128) = (v497 + 1712088532) ^ 0xD73DC000;
  v502 = v128 >> 13;
  HIDWORD(v128) = ~(v497 + 1712088556);
  LODWORD(v128) = (v497 + 1712088532) ^ 0xD73DCF9C;
  v503 = v128 >> 2;
  v504 = (v497 + 1712088532) ^ v483;
  v505 = (v504 ^ 0x4DC2F0CE ^ (v500 + (v469 ^ 0x24EA7846) - ((2 * (v500 + (v469 ^ 0x24EA7846))) & 0x376241AA) + 464593109))
       + (v488 ^ 0x46ED3CA8);
  HIDWORD(v128) = v498 ^ 0xFFFFFF9F;
  LODWORD(v128) = v498 ^ 0xD73DC800;
  v506 = (v128 >> 11) - ((2 * (v128 >> 11)) & 0x598EE5C2) - 1396215071;
  HIDWORD(v128) = v506 ^ 0x772E1;
  LODWORD(v128) = v506 ^ 0xACC00000;
  v507 = (v128 >> 19) - ((2 * (v128 >> 19)) & 0xB434AC94);
  HIDWORD(v128) = v498 ^ 0x13DCF9F;
  LODWORD(v128) = v498 ^ 0xD6000000;
  v508 = v128 >> 25;
  v507 += 1511675466;
  HIDWORD(v128) = v507 ^ 0x164A;
  LODWORD(v128) = v507 ^ 0x5A1A4000;
  v509 = v128 >> 13;
  v510 = (v502 ^ 0x12000BA0) + (v503 ^ 0x6FB75ABB) + ((2 * v503) & 0xDF6EB576) - ((2 * v502) & 0xDBFFE8BE);
  HIDWORD(v128) = v498 ^ 0x3DCF9F;
  LODWORD(v128) = v498 ^ 0xD7000000;
  v511 = v453
       + (v508 ^ 0xC2828CF)
       + (v499 ^ 0x37820A40)
       - ((2 * v499) & 0x90FBEB7E)
       - ((2 * v508) & 0xE7AFAE60)
       + (v509 ^ 0x7D7FAFFD)
       + ((2 * v509) & 0xFAFF5FFA)
       + 1054219508;
  v512 = (v469 ^ 0xCEFF0175 ^ (v501 - ((2 * v501 + 157295140) & 0xD42AF266) - 289043899))
       + (v511 ^ 0x4BEAF9DE)
       + ((2 * v511) & 0x97D5F3BC)
       - 1273690590;
  v513 = (HIDWORD(v850) ^ 0x99530634) + (v512 ^ 0xFB707DDF) + ((2 * v512) & 0xF6E0FBBE) - 1977325525;
  v514 = (((v128 >> 22) - ((2 * (v128 >> 22)) & 0x21E2DFFA) - 1863225347) ^ (v505
                                                                           - ((2 * v505) & 0x5B173362)
                                                                           - 1383360079) ^ (v510
                                                                                          + 1
                                                                                          - ((2 * (v510 + 1) + 1016148808) & 0x255DD688)
                                                                                          - 1862826776) ^ 0x2FD41D08)
       + 344657
       + (v513 ^ 0xFFFABDAF)
       + ((2 * v513) & 0xFFF57B5E);
  v515 = (2 * v514) & 0x4FA6DF84;
  v514 -= 1479315518;
  v516 = v514 - v515;
  HIDWORD(v128) = v514 ^ 2;
  LODWORD(v128) = v516 ^ 0xA7D36FC0;
  v517 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0xD31060EC);
  HIDWORD(v128) = v516 ^ 0xFC2;
  LODWORD(v128) = v516 ^ 0xA7D36000;
  v518 = (v128 >> 13) - ((2 * (v128 >> 13)) & 0x77FAB6E0);
  v519 = (v516 ^ 0xA7D36FC2) + v500 - 131958060 - ((2 * ((v516 ^ 0xA7D36FC2) + v500)) & 0xF044F5A8);
  HIDWORD(v128) = v516 ^ 0x136FC2;
  LODWORD(v128) = v516 ^ 0xA7C00000;
  v520 = v128 >> 22;
  HIDWORD(v128) = v516 ^ 0x7C2;
  LODWORD(v128) = v516 ^ 0xA7D36800;
  v521 = v128 >> 11;
  v517 += 1770532982;
  HIDWORD(v128) = v517 ^ 0x3076;
  LODWORD(v128) = v517 ^ 0x69880000;
  v522 = (v128 >> 15) - ((2 * (v128 >> 15)) & 0x4C4C94C6) - 1507440029;
  HIDWORD(v128) = v522 ^ 0x4A63;
  LODWORD(v128) = v522 ^ 0xA6260000;
  v523 = (v128 >> 17) + 14196710 + (~(2 * (v128 >> 17)) | 0xFE4EC035);
  HIDWORD(v128) = v516 ^ 2;
  LODWORD(v128) = v516 ^ 0xA7D36FC0;
  v524 = v128 >> 6;
  HIDWORD(v128) = v516 ^ 0x1D36FC2;
  LODWORD(v128) = v516 ^ 0xA6000000;
  v525 = (v520 ^ 0xFFE3EDF5) + ((2 * v520) & 0xFFC7DBEA) + 1839627 + ((v518 - 1141023888) ^ 0xBB25C495 ^ v523);
  v526 = v525 - ((2 * v525) & 0xACDE55E8);
  v527 = v519 ^ 0xF8227AD4;
  v528 = (((v516 ^ 0xA7D36FC2) + v484) ^ 0x7F757FE0)
       + ((2 * ((v516 ^ 0xA7D36FC2) + v484)) & 0xFEEAFFC0)
       - 2138406880
       + (v519 ^ 0xF8227AD4);
  v529 = (((v483 ^ 0x7EB1E07B)
         + (v516 ^ 0xA7D36FC2)
         + 1
         - ((2 * ((v483 ^ 0x7EB1E07B) + (v516 ^ 0xA7D36FC2) + 1)) & 0xD2569316)
         + 1764444555) ^ v519 ^ 0x9109335F)
       + (v504 ^ 0x5673D01B);
  v530 = v473
       + (v521 ^ 0xF3FDFFCF)
       + ((v128 >> 25) ^ 0x33FFC7BB)
       + ((2 * v521) & 0xE7FBFF9E)
       + ((2 * (v128 >> 25)) & 0x67FF8F76)
       - 670943114;
  v531 = (v524 ^ 0x80202698) - ((2 * v524) & 0xFFBFB2CE) + (v530 ^ 0xFE66DA4B) + ((2 * v530) & 0xFCCDB496);
  v532 = v484 + (v528 ^ 0x7A1E74F6) + ((2 * v528) & 0xF43CE9EC) - 2048816374;
  v533 = v531 + (v532 ^ 0x80383A1) - ((2 * v532) & 0xEFF8F8BC) + 2;
  v534 = ((v529 - ((2 * v529) & 0x59E11036) - 1393522661) ^ 0xFA9FA2EF ^ (v526 + 1450126068))
       + (v850 ^ 0x94037F7C ^ (v533 - ((2 * v533 + 947953396) & 0x60F857D6) + 1287420773));
  v535 = v534 - 1087184960 - ((2 * v534) & 0x7E65BF80);
  v536 = v535 ^ 0xBF32DFC0;
  v537 = (v535 ^ 0xBF32DFC0) + v500 - ((2 * ((v535 ^ 0xBF32DFC0) + v500)) & 0xB167C6AE);
  v538 = (v498 ^ 0x680F105F ^ v535)
       + (((v535 ^ 0xBF32DFC0) + (v516 ^ 0xA7D36FC2)) ^ 0x7FA7EDED)
       + ((2 * ((v535 ^ 0xBF32DFC0) + (v516 ^ 0xA7D36FC2))) & 0xFF4FDBDA)
       - 2141711853;
  HIDWORD(v128) = v534;
  LODWORD(v128) = v535 ^ 0xBF32DFC0;
  v539 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0x777DB3A2) - 1145120303;
  HIDWORD(v128) = v539 ^ 0x3ED9D1;
  LODWORD(v128) = v539 ^ 0xBBBBBBBB;
  v540 = (v128 >> 23) + 540486158 - ((2 * (v128 >> 23)) & 0x406E541C);
  HIDWORD(v128) = v540 ^ 0x20372A0E;
  LODWORD(v128) = v540;
  v541 = v128 >> 30;
  HIDWORD(v128) = v535 ^ 0x7C0;
  LODWORD(v128) = v535 ^ 0xBF32D800;
  v542 = v128 >> 11;
  v543 = v541 - 884942848 - ((2 * v541) & 0x9681B206) + 259;
  HIDWORD(v128) = v543 ^ 0x103;
  LODWORD(v128) = v543 ^ 0xCB40D800;
  v544 = v128 >> 11;
  HIDWORD(v128) = v535 ^ 0x1FC0;
  LODWORD(v128) = v535 ^ 0xBF32C000;
  v545 = v128 >> 13;
  HIDWORD(v128) = v535 ^ 0x132DFC0;
  LODWORD(v128) = v535 ^ 0xBE000000;
  v546 = v128 >> 25;
  v547 = v537 + 1488184151;
  v548 = (v535 ^ 0xBF32DFC0)
       + (v516 ^ 0x582C903D)
       - 1775220252
       + (~(2 * ((v535 ^ 0xBF32DFC0) + (v516 ^ 0x582C903D) + 1)) | 0xD39F6C39)
       + 1;
  HIDWORD(v128) = v534;
  LODWORD(v128) = v535 ^ 0xBF32DFC0;
  v549 = (v542 ^ 0xEAAFBE6E)
       + (v546 ^ 0x6BAFE3F5)
       + ((v128 >> 6) ^ 0xDFFADFFE)
       + ((2 * v546) & 0xD75FC7EA)
       + ((2 * v542) & 0xD55F7CDC)
       + ((2 * (v128 >> 6)) & 0xBFF5BFFC);
  HIDWORD(v128) = v535 ^ 0x32DFC0;
  LODWORD(v128) = v535 ^ 0xBF000000;
  v550 = v483 ^ 0x82096BB4 ^ (v549 - ((2 * v549 + 55245630) & 0x68EE860) - 856886833);
  v551 = (v498 ^ 0x5C6DA35F ^ (v538 - ((2 * v538) & 0x16A0D980) - 1957663552)) - 2114705756;
  v552 = (v551 ^ 0x67EE7BDF) + ((2 * v551) & 0xCFDCF7BE) + v550 - 1743682527;
  v553 = ((v128 >> 22) ^ 0x6FFB79DE)
       + (v545 ^ 0xB3F2CDDF)
       + ((2 * (v128 >> 22)) & 0xDFF6F3BC)
       + ((2 * v545) & 0x67E59BBE)
       + (((v548 ^ v547 ^ 0xCE83AAB4) + v527) ^ 0x20400118)
       - ((2 * ((v548 ^ v547 ^ 0xCE83AAB4) + v527)) & 0xBF7FFDCE)
       + (v544 ^ 0x7FCFFF5F)
       + ((2 * v544) & 0xFF9FFEBE)
       + (HIDWORD(v851) ^ 0x9EB0C217 ^ (v552 - ((2 * v552) & 0xFC080D80) - 33290560))
       + 1006745548;
  v554 = v553 + 238100750;
  v555 = v553 + 238100750 - ((2 * v553) & 0x1C62420C) - 8;
  HIDWORD(v128) = v555 ^ 6;
  LODWORD(v128) = v555 ^ 0xE312100;
  v556 = v128 >> 6;
  HIDWORD(v128) = v555 ^ 0x312106;
  LODWORD(v128) = v555 ^ 0xE000000;
  v557 = (v128 >> 22) - ((2 * (v128 >> 22)) & 0xCEBC65C2);
  HIDWORD(v128) = v555 ^ 0x312106;
  LODWORD(v128) = v555 ^ 0xE000000;
  v558 = v128 >> 25;
  HIDWORD(v128) = v555 ^ 0x106;
  LODWORD(v128) = v555 ^ 0xE312000;
  v559 = (v558 ^ 0xFEFFEB97)
       + (v556 ^ 0x6B77DCBF)
       + ((v128 >> 11) ^ 0x182408)
       + ((2 * v558) & 0xFDFFD72E)
       + ((2 * v556) & 0xD6EFB97E)
       - ((2 * (v128 >> 11)) & 0xFFCFB7EE)
       + 1;
  HIDWORD(v128) = v554 ^ 2;
  LODWORD(v128) = v555 ^ 0xE312104;
  v560 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0x99B4A170);
  v561 = (v555 ^ 0xE312106)
       + (v516 ^ 0xA7D36FC2)
       - ((2 * ((v555 ^ 0xE312106) + (v516 ^ 0xA7D36FC2))) & 0x143CFDF8)
       - 1977712900;
  v562 = ((2 * ((v555 ^ 0xE312106) + (v535 ^ 0xBF32DFC0))) & 0xFFEFB6CC)
       + (((v555 ^ 0xE312106) + (v535 ^ 0xBF32DFC0)) ^ 0x7FF7DB66)
       + (v561 ^ 0x75E18103);
  v563 = (v498 ^ 0xDC2AFDB3 ^ (v559 - ((2 * v559 + 182462274) & 0x162E6458) - 1601747507))
       + (v516 ^ 0x60F45A9C ^ (v562 - ((2 * v562 + 1067318) & 0x8E4E6ABC) + 1194285561));
  HIDWORD(v128) = v555 ^ 0x106;
  LODWORD(v128) = v555 ^ 0xE312000;
  v564 = v851 + (v563 ^ 0x2FCEE7B7) + ((2 * v563) & 0x5F9DCF6E);
  v565 = (v555 ^ v535 ^ 0x3B1D803A ^ v561) + (v548 ^ 0x963049E3);
  v566 = (((v128 >> 13) - ((2 * (v128 >> 13)) & 0xE19683A8) - 255114796) ^ (v560 + 1289375928) ^ (v557 + 1734226657) ^ 0xCA817571 ^ (v565 - ((2 * v565) & 0x239CADF8) + 298735356))
       + ((v564 + 267221282) ^ 0x3BADFDF5)
       + ((2 * (v564 + 267221282)) & 0x775BFBEA)
       - 1001258485;
  v567 = v566 + 775057280 - ((2 * v566) & 0x5C64DF00);
  v568 = (v555 ^ 0xF1CEDEF9)
       + (v567 ^ 0x2E326F80)
       - 1873171914
       - ((2 * ((v555 ^ 0xF1CEDEF9) + (v567 ^ 0x2E326F80) + 1)) & 0x20B3546A);
  HIDWORD(v128) = v567 ^ 0x326F80;
  LODWORD(v128) = v567 ^ 0x2E000000;
  v569 = v128 >> 22;
  HIDWORD(v128) = v567 ^ 0x326F80;
  LODWORD(v128) = v567 ^ 0x2E000000;
  v570 = v128 >> 25;
  HIDWORD(v128) = v566;
  LODWORD(v128) = v567 ^ 0x2E326F80;
  v571 = (v128 >> 6) - ((2 * (v128 >> 6)) & 0xD5054D8C);
  HIDWORD(v128) = v567 ^ 0xF80;
  LODWORD(v128) = v567 ^ 0x2E326000;
  v572 = (v128 >> 13) - ((2 * (v128 >> 13)) & 0x635E02C0);
  v573 = (v535 ^ 0x9100B040 ^ v567)
       + (((v567 ^ 0x2E326F80) + (v555 ^ 0xE312106)) ^ 0xFB1FDD97)
       + ((2 * ((v567 ^ 0x2E326F80) + (v555 ^ 0xE312106))) & 0xF63FBB2E)
       + 81797737;
  HIDWORD(v128) = v566;
  LODWORD(v128) = v567 ^ 0x2E326F80;
  v574 = (v569 ^ 0x401108)
       - 4202754
       - ((2 * v569) & 0xFF7FDDEE)
       + (((v128 >> 2) - ((2 * (v128 >> 2)) & 0x2EA9B230) - 1756047080) ^ (v572 - 1313930912) ^ 0x26FBD878)
       + 4090;
  v575 = (v573 - ((2 * v573) & 0xF5B1224) - 2018670318) ^ v555 ^ v535 ^ (v574 - ((2 * v574) & 0x279B0A10) - 1815247608);
  HIDWORD(v128) = v567 ^ 0x780;
  LODWORD(v128) = v567 ^ 0x2E326800;
  v576 = (v570 ^ 0x18080088)
       - ((2 * v570) & 0xCFEFFEEE)
       - 403177608
       + (((v128 >> 11) - ((2 * (v128 >> 11)) & 0x3F7ED2BC) - 1614845602) ^ (v571 + 1786947270) ^ 0xF53DCF98);
  HIDWORD(v128) = v575 ^ 0x163F2DC;
  LODWORD(v128) = v575 ^ 0xA4000000;
  v577 = (v128 >> 26) - 464857088 - ((2 * (v128 >> 26)) & 0xC895B72E) + 919;
  HIDWORD(v128) = v577 ^ 0x397;
  LODWORD(v128) = v577 ^ 0xE44AD800;
  v578 = (v535 ^ 0x40CD203F)
       + (v568 ^ ((v567 ^ 0x2E326F80)
                + (v535 ^ 0xBF32DFC0)
                - ((2 * ((v567 ^ 0x2E326F80) + (v535 ^ 0xBF32DFC0))) & 0x2AB750A)
                - 2125088123) ^ 0x110C10B0)
       + 1;
  v579 = (v578 ^ 0xAF3BBEFD)
       + ((2 * v578) & 0x5E777DFA)
       + 1355038979
       + (v516 ^ 0x65F3DF75 ^ (v576 - ((2 * v576) & 0x8441616E) - 1038045001));
  v580 = (HIDWORD(v852) ^ 0xE61A9453) + (v579 ^ 0x3DD4FBDA) + ((2 * v579) & 0x7BA9F7B4) + 800867604;
  v581 = (v128 >> 11) - ((2 * (v128 >> 11)) & 0x5E22EBB8) + 789673436;
  HIDWORD(v128) = v581 ^ 0x71175DC;
  LODWORD(v128) = v581 ^ 0x28000000;
  v582 = ((2 * v580) & 0xBFFFDE9E)
       + (v580 ^ 0x5FFFEF4F)
       + ((v128 >> 27) ^ 0x3FFFFEFF)
       + ((2 * (v128 >> 27)) & 0x7FFFFDFE);
  v583 = v582 + 322506754;
  v584 = v582 + 322506754 - ((2 * v582 + 1073750884) & 0x6671FCA0);
  v585 = v584 ^ 0xB338FE50;
  v586 = (v567 ^ 0xD1CD907F) + 1;
  v587 = (v584 ^ 0xB338FE50) + v586 + 607591614 - ((2 * ((v584 ^ 0xB338FE50) + v586)) & 0x486E397C);
  HIDWORD(v128) = v584 ^ 0x10;
  LODWORD(v128) = v584 ^ 0xB338FE40;
  v588 = v128 >> 6;
  HIDWORD(v128) = v584 ^ 0x650;
  LODWORD(v128) = v584 ^ 0xB338F800;
  v589 = v128 >> 11;
  HIDWORD(v128) = v584 ^ 0x1E50;
  LODWORD(v128) = v584 ^ 0xB338E000;
  v590 = v128 >> 13;
  v591 = (v567 ^ 0x9D0A91D0 ^ v584)
       + (((v584 ^ 0xB338FE50) + (v555 ^ 0xE312106)) ^ 0x7EF6B7EE)
       + ((2 * ((v584 ^ 0xB338FE50) + (v555 ^ 0xE312106))) & 0xFDED6FDC)
       - 2130098158;
  HIDWORD(v128) = v584 ^ 0x138FE50;
  LODWORD(v128) = v584 ^ 0xB2000000;
  v592 = v128 >> 25;
  HIDWORD(v128) = v583;
  LODWORD(v128) = v584 ^ 0xB338FE50;
  v593 = ((v128 >> 2) ^ 0xF9FDBFFD) + (v590 ^ 0x77BDBF7F) + ((2 * v590) & 0xEF7B7EFE) + ((2 * (v128 >> 2)) & 0xF3FB7FFA);
  HIDWORD(v128) = v584 ^ 0x38FE50;
  LODWORD(v128) = v584 ^ 0xB3000000;
  v594 = v536
       + (v588 ^ 0x64101100)
       + (v589 ^ 0x7DDF6FFF)
       + (v592 ^ 0x77FFEFF7)
       + ((2 * v589) & 0xFBBEDFFE)
       + ((2 * v592) & 0xEFFFDFEE)
       - ((2 * v588) & 0x37DFDDFE)
       - 1508864246;
  v595 = (v555 ^ 0xF656BAE5 ^ (v591 - ((2 * v591) & 0xF0CF37C6) - 127427613))
       + (v594 ^ 0xDFF5FEFF)
       + ((2 * v594) & 0xBFEBFDFE)
       + 537526529;
  v596 = (v555 ^ 0x42F620A9 ^ v584) + (v587 ^ 0x24371CBE) + 1;
  v597 = (v568 ^ 0x9059AA35) + (v596 ^ 0x17FEEFFC) + ((2 * v596) & 0x2FFDDFF8) - 402583548;
  v598 = (((v128 >> 22) - ((2 * (v128 >> 22)) & 0xF57CD02C) + 2059298838) ^ 0x7D0EF46 ^ (v593
                                                                                       - ((2 * v593 + 478740744) & 0xFADD0EA0)
                                                                                       + 196282324))
       + (v597 ^ 0x4AAFF39B)
       + ((2 * v597) & 0x955FE736)
       - 1253045147;
  v599 = (v852 ^ 0xF29A4F64) + (v595 ^ 0xFCFF7987) + ((2 * v595) & 0xF9FEF30E) + 1435067169;
  v600 = ((2 * v598) & 0x4DFFFBF6) + (v598 ^ 0x26FFFDFB) + (v599 ^ 0xAFF8FFDE) + ((2 * v599) & 0x5FF1FFBC);
  v601 = (2 * v600 + 1376650318) & 0x660ABAF0;
  v600 += 1544314783;
  v602 = v600 - v601;
  HIDWORD(v128) = (v600 - v601) ^ 0x578;
  LODWORD(v128) = (v600 - v601) ^ 0x33055800;
  v603 = v128 >> 11;
  HIDWORD(v128) = (v600 - v601) ^ 0x38;
  LODWORD(v128) = (v600 - v601) ^ 0x33055D40;
  v604 = v128 >> 6;
  HIDWORD(v128) = (v600 - v601) ^ 0x1D78;
  LODWORD(v128) = (v600 - v601) ^ 0x33054000;
  v605 = v128 >> 13;
  HIDWORD(v128) = (v600 - v601) ^ 0x1055D78;
  LODWORD(v128) = (v600 - v601) ^ 0x33333333;
  v606 = (v128 >> 25) - ((2 * (v128 >> 25)) & 0x1497ACA0);
  v607 = v602 ^ 0x33055D78;
  HIDWORD(v128) = v600;
  LODWORD(v128) = (v600 - v601) ^ 0x33055D78;
  v608 = (v605 ^ 0x3D7FBECF) + ((v128 >> 2) ^ 0xBAF4D31F) + ((2 * (v128 >> 2)) & 0x75E9A63E) + ((2 * v605) & 0x7AFF7D9E);
  v609 = (v602 ^ 0x33055D78) + v586;
  v610 = (v584 ^ 0x4CC701AF) + 1;
  v611 = (v602 ^ 0x33055D78) + v610;
  v612 = (v609 ^ 0x7B75DECE) + (v611 ^ 0xFE4BFF7E);
  v613 = v612 + ((2 * v611) & 0xFC97FEFC) + ((2 * v609) & 0xF6EBBD9C);
  v614 = (v603 ^ 0x188A010) + (v604 ^ 0x3FFF37BF) + ((2 * v604) & 0x7FFE6F7E) - ((2 * v603) & 0xFCEEBFDE);
  HIDWORD(v128) = v602 ^ 0x55D78;
  LODWORD(v128) = v602 ^ 0x33333333;
  v615 = v613 - 2 * ((v613 + 104735156) & 0x48F3DDDF ^ v612 & 1) - 818806894;
  v616 = v555 ^ v567 ^ (v606 - 1974741424) ^ v615 ^ (v614
                                                   + 1
                                                   - 2 * ((v614 + 1048062001) & 0x6E6CD8DB ^ (v614 + 1) & 8)
                                                   - 1394278141) ^ 0xCD79DDB;
  v617 = (((v128 >> 22) - ((2 * (v128 >> 22)) & 0x22EFC650) - 1854414040) ^ 0xF3C44931 ^ (v608
                                                                                        - ((2 * v608 + 253156388) & 0xC5675432)
                                                                                        + 1782519851))
       + (v587 ^ 0x933B3E9F ^ v615)
       + 1;
  v618 = (v617 ^ 0xDEFFFDFB)
       + ((2 * v617) & 0xBDFFFBF6)
       + 553648645
       + (HIDWORD(v853) ^ 0x4F23B86 ^ (v616 - 2 * ((v616 + 1922563192) & 0x6FEFC86D ^ v616 & 5) - 494418720));
  v619 = v618 - 2095159208 - ((2 * v618) & 0x63CD0B0);
  v620 = v619 ^ 0x831E6858;
  v621 = (v619 ^ 0x831E6858) + (v584 ^ 0xB338FE50) - ((2 * ((v619 ^ 0x831E6858) + (v584 ^ 0xB338FE50))) & 0xDBD44E1E);
  HIDWORD(v128) = v619 ^ 0x18;
  LODWORD(v128) = v619 ^ 0x831E6840;
  v622 = (v128 >> 6) - ((2 * (v128 >> 6)) & 0x52EE9ABA);
  HIDWORD(v128) = v619 ^ 0x11E6858;
  LODWORD(v128) = v619 ^ 0x83FFFFFF;
  v623 = (v128 >> 25) - ((2 * (v128 >> 25)) & 0xF646E3F2);
  HIDWORD(v128) = v619 ^ 0x58;
  LODWORD(v128) = v619 ^ 0x831E6800;
  v624 = v602 ^ v584;
  v625 = (((v624 ^ 0x803DA328) + v610) ^ 0x5F1ED7F6)
       + ((2 * ((v624 ^ 0x803DA328) + v610)) & 0xBE3DAFEC)
       - 1595856886
       + (v567 ^ ((v128 >> 11) - 1162428184 + (~(2 * (v128 >> 11)) | 0x8A927E31)) ^ (v622 - 1451799203) ^ (v623 + 2065920505) ^ 0x46D093C3);
  HIDWORD(v128) = v619 ^ 0x858;
  LODWORD(v128) = v619 ^ 0x831E6000;
  v626 = v128 >> 13;
  HIDWORD(v128) = v619 ^ 0x1E6858;
  LODWORD(v128) = v619 ^ 0x83000000;
  v627 = v128 >> 22;
  v628 = v619 ^ v602;
  HIDWORD(v128) = v618;
  LODWORD(v128) = v619 ^ 0x831E6858;
  v629 = (v624 ^ 0x7FC25CD7) + (v619 ^ v602 ^ 0xDDF1122F ^ (v621 + 1844061967)) + 1;
  v630 = (v627 ^ 0x6EFB9FB6)
       + (v626 ^ 0x7D7CF73C)
       + ((v128 >> 2) ^ 0x7FF9E4BB)
       + ((2 * v627) & 0xDDF73F6C)
       + ((2 * v626) & 0xFAF9EE78)
       + ((2 * (v128 >> 2)) & 0xFFF3C976)
       + (v629 ^ 0xEEF7FDEB)
       + ((2 * v629) & 0xDDEFFBD6)
       - 1533704600
       + (HIDWORD(a40) ^ 0x100C53FC ^ (((2 * v625) & 0xE97FBFE)
                                     + (v625 ^ 0x74BFDFF)
                                     - ((2 * (((2 * v625) & 0xE97FBFE) + (v625 ^ 0x74BFDFF)) + 920225790) & 0xE9B9752C)
                                     - 1874231659));
  v631 = v630 + 823891553 - ((2 * v630) & 0x62372CC2);
  HIDWORD(v128) = v631 ^ 0x1B9661;
  LODWORD(v128) = v631 ^ 0x31000000;
  v632 = (v128 >> 22) - ((2 * (v128 >> 22)) & 0x87674D4E);
  HIDWORD(v128) = v631 ^ 0xFFFFFFE1;
  LODWORD(v128) = v631 ^ 0x311B9640;
  v633 = v128 >> 6;
  HIDWORD(v128) = v631 ^ 0x661;
  LODWORD(v128) = v631 ^ 0x311B9000;
  v634 = ((v128 >> 11) ^ 0x280C149A)
       + (v633 ^ 0xEE7B7EBB)
       + ((2 * v633) & 0xDCF6FD76)
       - ((2 * (v128 >> 11)) & 0xAFE7D6CA)
       + 1;
  v635 = v631 ^ 0x311B9661;
  v636 = (v602 ^ 0x21ECB19 ^ v631)
       + (((v631 ^ 0x311B9661) + (v619 ^ 0x831E6858)) ^ 0x3BEE9DF7)
       + ((2 * ((v631 ^ 0x311B9661) + (v619 ^ 0x831E6858))) & 0x77DD3BEE)
       - 1005493751;
  HIDWORD(v128) = v631 ^ 0x11B9661;
  LODWORD(v128) = v631 ^ 0x30000000;
  v637 = (v128 >> 25) - ((2 * (v128 >> 25)) & 0xA2F9B972);
  HIDWORD(v128) = v631 ^ 1;
  LODWORD(v128) = v631 ^ 0x311B9660;
  v638 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0xFF9874E4);
  HIDWORD(v128) = v631 ^ 0x1661;
  LODWORD(v128) = v631 ^ 0x311B8000;
  v639 = ((v637 - 780346183) ^ 0xABAAD49F ^ (v634 - ((2 * v634 - 755967660) & 0xF5AC104C) + 1682863312)) + v585;
  v640 = (v628 ^ 0x7B26355 ^ (v636 - ((2 * v636) & 0x6F52ACEA) - 1213639051))
       + ((v638 + 2144090738) ^ ((v128 >> 13) - ((2 * (v128 >> 13)) & 0x20F04B3E) + 276309407) ^ (v632 - 1011636569) ^ 0xAC07B94A);
  v641 = (v619 ^ 0x2B436832 ^ (v639 - ((2 * v639) & 0x50BA00D4) - 1470300054)) + 846739860;
  v642 = (a38 ^ 0xD672F482) + (v641 ^ 0xE6FFAFDB) + ((2 * v641) & 0xCDFF5FB6) + 419450918;
  v643 = ((2 * v640) & 0xFFFF6DAE) + (v640 ^ 0x7FFFB6D7) + (v642 ^ 0xFAEFBEAB) + ((2 * v642) & 0xF5DF7D56);
  v644 = v643 - ((2 * v643 + 169940220) & 0x51B2598A);
  v645 = v644 + 770291523;
  v646 = (v644 + 770291523) ^ 0xA8D92CC5;
  HIDWORD(v128) = (v644 + 770291523) ^ 5;
  LODWORD(v128) = (v644 + 770291523) ^ 0xA8D92CC0;
  v647 = (v128 >> 6) - ((2 * (v128 >> 6)) & 0xCB46CD62);
  HIDWORD(v128) = (v644 + 770291523) ^ 0xD92CC5;
  LODWORD(v128) = (v644 + 770291523) ^ 0xA8000000;
  v648 = v128 >> 25;
  HIDWORD(v128) = (v644 + 770291523) ^ 0x4C5;
  LODWORD(v128) = (v644 + 770291523) ^ 0xA8D92800;
  v649 = (v128 >> 11) - ((2 * (v128 >> 11)) & 0xBA4CAA56);
  HIDWORD(v128) = (v644 + 770291523) ^ 0xCC5;
  LODWORD(v128) = (v644 + 770291523) ^ 0xA8D92000;
  v650 = v128 >> 13;
  HIDWORD(v128) = (v644 - 1) ^ 1;
  LODWORD(v128) = (v644 + 770291523) ^ 0xA8D92CC4;
  v651 = (v648 ^ 0x73FDFFE7)
       + ((2 * v648) & 0xE7FBFFCE)
       - 1946025958
       + ((v649 - 584690389) ^ (v647 + 1705207473) ^ 0x477ACC65);
  v652 = (v650 ^ 0x21521209)
       + ((v128 >> 2) ^ 0xE3EFBDD4)
       + ((2 * (v128 >> 2)) & 0xC7DF7BA8)
       - ((2 * v650) & 0xBD5BDBEC)
       + 1;
  HIDWORD(v128) = v645 ^ 0x192CC5;
  LODWORD(v128) = v645 ^ 0xA8C00000;
  v653 = (v631 ^ 0xCEE4699E) + v646 + 1 - ((2 * ((v631 ^ 0xCEE4699E) + v646 + 1)) & 0x9023B26C) - 938354378;
  v654 = v607 + (v651 ^ 0x67F75F7F) + ((2 * v651) & 0xCFEEBEFE) - 1744265087;
  v655 = (((v128 >> 22) - ((2 * (v128 >> 22)) & 0xD3CA63F8) - 370855428) ^ 0x17A80C7E ^ (v652
                                                                                       - ((2 * v652 - 176398268) & 0xFC9A7B04)
                                                                                       - 116691548))
       + (v619 ^ ((v619 ^ 0x7CE197A7)
                + (v631 ^ 0x311B9661)
                + 1176974272
                + (~(2 * ((v619 ^ 0x7CE197A7) + (v631 ^ 0x311B9661) + 1)) | 0x73B19883)) ^ v645 ^ 0xA5F1AE15 ^ v653);
  v656 = ((2 * v619) ^ 0x7D42278F) + ((4 * v619) & 0xF6FDEE7C ^ 0x479A060) - 2071918399 + v646;
  v657 = (v656 ^ 0xDF3FEEEF) + ((2 * v656) & 0xBE7FDDDE) + 549458194 + (v653 ^ 0x37EE26C9);
  v658 = (v853 ^ 0xD157FE46)
       + (v657 ^ 0xEBABF645)
       + ((2 * v657) & 0xD757EC8A)
       + (v654 ^ 0xFFF7DB7F)
       + ((2 * v654) & 0xFFEFB6FE)
       + 1352779030;
  v659 = ((2 * v655) & 0xDDFDF9F4) + (v655 ^ 0xEEFEFCFA) + (v658 ^ 0xEBFCAFEB) + ((2 * v658) & 0xD7F95FD6);
  v660 = v659 - 69459501 - ((2 * v659 + 1242080822) & 0xADAF9D30) - 32;
  HIDWORD(v128) = v660 ^ 0xE98;
  LODWORD(v128) = v660 ^ 0xD6D7C000;
  v661 = v128 >> 13;
  v662 = v660 ^ 0xD6D7CE98;
  HIDWORD(v128) = v660 ^ 0x17CE98;
  LODWORD(v128) = v660 ^ 0xD6C00000;
  v663 = v128 >> 22;
  v664 = v631 ^ 0x99C2BAA4 ^ v645;
  v665 = v664 + v635 - ((2 * (v664 + v635)) & 0x650D1A7E);
  v666 = v664
       + (((v660 ^ 0xD6D7CE98) + v635) ^ 0xF76F5ADE)
       + ((2 * ((v660 ^ 0xD6D7CE98) + v635)) & 0xEEDEB5BC)
       + 143697186;
  HIDWORD(v128) = v660 ^ 0x698;
  LODWORD(v128) = v660 ^ 0xD6D7C800;
  v667 = v128 >> 11;
  HIDWORD(v128) = v660 ^ 0x18;
  LODWORD(v128) = v660 ^ 0xD6D7CE80;
  v668 = v128 >> 6;
  HIDWORD(v128) = v660 ^ 0xD7CE98;
  LODWORD(v128) = v660 ^ 0xD6000000;
  v669 = v620
       + ((v128 >> 25) ^ 0x8904C0A2)
       + (v667 ^ 0x93008789)
       + (v668 ^ 0x2026641)
       - ((2 * v667) & 0xD9FEF0EC)
       - ((2 * (v128 >> 25)) & 0xEDF67EBA)
       - ((2 * v668) & 0xFBFB337C)
       - 503819884;
  v670 = (v665 + 847678783) ^ 0x7F4A4F9A ^ (v669 - ((2 * v669) & 0x9B99854A) + 1305264805);
  HIDWORD(v128) = v659 - 69459501;
  LODWORD(v128) = v660 ^ 0xD6D7CE98;
  v671 = (v645 ^ 0x7E0EE25D ^ v660) + (v666 ^ 0x3212020D) - ((2 * v666) & 0x9BDBFBE4) - 840040973;
  v672 = (v663 ^ 0xFF3FD734)
       + (v661 ^ 0xFFBFF7FF)
       + ((v128 >> 2) ^ 0x737FBD7F)
       + ((2 * v663) & 0xFE7FAE68)
       + ((2 * v661) & 0xFF7FEFFE)
       + ((2 * (v128 >> 2)) & 0xE6FF7AFE)
       + (v671 ^ 0xF9E6B8FF)
       + ((2 * v671) & 0xF3CD71FE)
       - 1818641841
       + (a41 ^ 0xB45D51A8 ^ (v670 - 662400878 + (~(2 * v670 + 1590488644) | 0xADC3CD21)));
  v673 = v672 + 1609988268 - ((2 * v672) & 0xBFECF158);
  v674 = (v645 ^ 0x5726D33A) + (v673 ^ 0x5FF678AC) + 1;
  HIDWORD(v128) = v673 ^ 0x18AC;
  LODWORD(v128) = v673 ^ 0x5FF66000;
  v675 = v128 >> 13;
  HIDWORD(v128) = v673 ^ 0x2C;
  LODWORD(v128) = v673 ^ 0x5FF67880;
  v676 = v128 >> 6;
  v677 = v674 + 1369400955 - ((2 * v674) & 0xA33ECCF6);
  v678 = (v660 ^ 0x29283167) + 1;
  v679 = (v673 ^ 0x5FF678AC) + v678 - 662939320 - ((2 * ((v673 ^ 0x5FF678AC) + v678)) & 0xB0F8B290);
  HIDWORD(v128) = v673 ^ 0xAC;
  LODWORD(v128) = v673 ^ 0x5FF67800;
  v680 = v128 >> 11;
  v681 = (((v660 ^ 0xD6D7CE98) + v646) ^ 0x8D402482)
       - ((2 * ((v660 ^ 0xD6D7CE98) + v646)) & 0xE57FB6FA)
       + (((v677 ^ 0x519F667B) + (v679 ^ 0xD87C5948)) ^ 0xFFDFDFF7)
       + ((2 * ((v677 ^ 0x519F667B) + (v679 ^ 0xD87C5948))) & 0xFFBFBFEE)
       + 1;
  HIDWORD(v128) = v673 ^ 0x1F678AC;
  LODWORD(v128) = v673 ^ 0x5E000000;
  v682 = v635
       - 1652604933
       + ((v128 >> 25) ^ 0x2008004)
       + (v676 ^ 0xE280C238)
       + (v680 ^ 0x7DFF77DD)
       - ((2 * v676) & 0x3AFE7B8E)
       - ((2 * (v128 >> 25)) & 0xFBFEFFF6);
  HIDWORD(v128) = v672;
  LODWORD(v128) = v673 ^ 0x5FF678AC;
  v683 = v128 >> 2;
  v684 = ((v677 ^ v679 ^ 0x89E33F33) + v646 - ((2 * ((v677 ^ v679 ^ 0x89E33F33) + v646)) & 0x7AEC9948) + 1031163044) ^ 0xADBAEFE7 ^ (v682 + ((2 * v680) & 0xFBFEEFBA) + 1516 - ((2 * (v682 + ((2 * v680) & 0xFBFEEFBA) + 1516)) & 0x21994686) - 1865637053);
  HIDWORD(v128) = v673 ^ 0x3678AC;
  LODWORD(v128) = v673 ^ 0x5FC00000;
  v685 = ((v128 >> 22) ^ 0xAEFB7F7D)
       + (v683 ^ 0x7F9FEDF5)
       + (v675 ^ 0xE4D05A24)
       + ((2 * (v128 >> 22)) & 0x5DF6FEFA)
       + ((2 * v683) & 0xFF3FDBEA)
       - ((2 * v675) & 0x365F4BB6)
       + 1;
  v686 = (v870 ^ 0xF3D002A3 ^ (v684 - ((2 * v684 + 1845629730) & 0x8127A350) - 141239495))
       + ((v685 - ((2 * v685 + 422080722) & 0x39E10D9C) + 159694647) ^ 0x17A85B72 ^ (v681
                                                                                   - ((2 * v681 + 96466700) & 0x16B1BB78)
                                                                                   + 2117654850));
  v687 = v686 + 1975210037 - ((2 * v686) & 0xEB76A06A);
  v688 = v687 ^ 0x75BB5035;
  v689 = (v687 ^ 0x75BB5035)
       + (v673 ^ 0x5FF678AC)
       + 1057904863
       - ((2 * ((v687 ^ 0x75BB5035) + (v673 ^ 0x5FF678AC))) & 0x7E1CB1BE);
  HIDWORD(v128) = v687 ^ 0x35;
  LODWORD(v128) = v687 ^ 0x75BB5000;
  v690 = (v128 >> 11) - ((2 * (v128 >> 11)) & 0xE683BA36);
  v691 = ((2 * ((v687 ^ 0x75BB5035) + v678)) & 0xDDFDF7F4) + (((v687 ^ 0x75BB5035) + v678) ^ 0x6EFEFBFA);
  v692 = (v673 ^ 0x2A4D2899 ^ v687)
       + 1862204410
       - v691
       - ((2 * ((v673 ^ 0x2A4D2899 ^ v687) + 1862204410 - v691)) & 0x57EA03AE);
  HIDWORD(v128) = v687 ^ 0x35;
  LODWORD(v128) = v687 ^ 0x75BB5000;
  v693 = (v128 >> 6) - ((2 * (v128 >> 6)) & 0xF59A0948);
  HIDWORD(v128) = v687 ^ 0x1BB5035;
  LODWORD(v128) = v687 ^ 0x74000000;
  v694 = ((v128 >> 25) ^ 0x41B8411)
       - ((2 * (v128 >> 25)) & 0xF7C8F7DC)
       - 68912145
       + ((v693 + 2060256420) ^ (v690 + 1933696283) ^ 0x98CD9BF);
  HIDWORD(v128) = v687 ^ 0x3B5035;
  LODWORD(v128) = v687 ^ 0x75800000;
  v695 = v128 >> 22;
  v696 = v646 + (v694 ^ 0x2FD6EF98) + ((2 * v694) & 0x5FADDF30) - 802615192;
  HIDWORD(v128) = v687 ^ 1;
  LODWORD(v128) = v687 ^ 0x75BB5034;
  v697 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0x44571DCC);
  HIDWORD(v128) = v687 ^ 0x1035;
  LODWORD(v128) = v687 ^ 0x75BB4000;
  v698 = (v660 ^ 0x8921B634 ^ v673)
       + ((v691 - 1862204410 + (v689 ^ 0x3F0E58DF)) ^ 0x76D7BFFF)
       + ((2 * (v691 - 1862204410 + (v689 ^ 0x3F0E58DF))) & 0xEDAF7FFE)
       - 1993850879;
  v699 = v660 ^ (v692 + 737477079) ^ 0x4B334C78 ^ (v696 - ((2 * v696) & 0x6C23066E) - 1240366281);
  v700 = (v695 ^ 0x81400005)
       - ((2 * v695) & 0xFD7FFFF4)
       + (((v128 >> 13) - ((2 * (v128 >> 13)) & 0x1742AF16) + 195123083) ^ (v697 - 1574203674) ^ 0xA98AD96D)
       + (v698 ^ 0xD6063002)
       - ((2 * v698) & 0x53F39FFA)
       - 1464217607;
  v701 = (v327 ^ 0x7ADE39AF) + ((v699 - 1298429573) ^ 0x1E6BFFE7) + ((2 * (v699 - 1298429573)) & 0x3CD7FFCE) - 510394343;
  v702 = ((2 * v700) & 0xBF77B736) + (v700 ^ 0xDFBBDB9B) + (v701 ^ 0xDBAF58FE) + ((2 * v701) & 0xB75EB1FC);
  v703 = v702 - 76348585;
  v704 = 2 * v702 + 153720526;
  v705 = (~v704 | 0x92439021) + v702 - 76348585;
  v706 = v705 ^ 0xB6DE37EF;
  HIDWORD(v128) = v704 - v703;
  LODWORD(v128) = v705 ^ 0xB6DE37EC;
  v707 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0x413CA026);
  HIDWORD(v128) = v705 ^ 0xDE37EF;
  LODWORD(v128) = v705 ^ 0xB6000000;
  v708 = v128 >> 25;
  HIDWORD(v128) = v705 ^ 0x1E37EF;
  LODWORD(v128) = v705 ^ 0xB6C00000;
  v709 = v128 >> 22;
  v710 = (v687 ^ 0x75BB5035)
       + (((v705 ^ 0xB6DE37EF) + (v673 ^ 0x5FF678AC)) ^ 0x73C7FDF9)
       + ((2 * ((v705 ^ 0xB6DE37EF) + (v673 ^ 0x5FF678AC))) & 0xE78FFBF2)
       - 1942486521;
  v711 = (v705 ^ 0xB6DE37EF) + (v710 ^ 0x83082402) - ((2 * v710) & 0xF9EFB7FA) + 2096618494;
  HIDWORD(v128) = v705 ^ 0xFFFFFFEF;
  LODWORD(v128) = v705 ^ 0xB6DE3000;
  v712 = v128 >> 11;
  HIDWORD(v128) = v705 ^ 0xFFFFFFEF;
  LODWORD(v128) = v705 ^ 0xB6DE37C0;
  v713 = v128 >> 6;
  HIDWORD(v128) = v705 ^ 0x17EF;
  LODWORD(v128) = v705 ^ 0xB6DE2000;
  v714 = v705 ^ v687;
  v715 = (v709 ^ 0x32451004)
       - ((2 * v709) & 0x9B75DFF6)
       - 843386884
       + ((v707 + 547246099) ^ ((v128 >> 13) - ((2 * (v128 >> 13)) & 0x283B8594) + 337494730) ^ 0x348392D9);
  v716 = (v673 ^ 0x16D7B0BC ^ v705) + (v705 ^ v687 ^ 0xC36567DA) + 1;
  v717 = (v673 ^ 0x5FF678AC) + (v716 ^ 0x7DE1F38E) + ((2 * v716) & 0xFBC3E71C);
  v718 = (v715 ^ 0x7FFDE686)
       + ((2 * v715) & 0xFFFBCD0C)
       - 2147346054
       + (v689 ^ 0x89870642 ^ (v711 - ((2 * v711) & 0x6D12BD3A) - 1232511331));
  v719 = v662
       + (v708 ^ 0x2C3A3083)
       + (v713 ^ 0x2382802)
       + (v712 ^ 0xDDBDFDF6)
       - ((2 * v713) & 0xFB8FAFFA)
       - ((2 * v708) & 0xA78B9EF8)
       + ((2 * v712) & 0xBB7BFBEC)
       + ((v717 - 2111959950) ^ 0x88002610)
       - ((2 * (v717 - 2111959950)) & 0xEFFFB3DE)
       + 1808761717;
  v720 = (v718 ^ 0x7F767BFE)
       + ((2 * v718) & 0xFEECF7FC)
       - 2138471422
       + (v296 ^ 0x42F281FE ^ (((2 * v719) & 0x5CEEFEFC)
                             + (v719 ^ 0xAE777F7E)
                             - ((2 * (((2 * v719) & 0x5CEEFEFC) + (v719 ^ 0xAE777F7E)) + 904612110) & 0x7C4B1730)
                             + 421212191));
  v721 = v720 - 489236428 - ((2 * v720) & 0xC5ADB068);
  HIDWORD(v128) = v721 ^ 0x34;
  LODWORD(v128) = v721 ^ 0xE2D6D800;
  v722 = v128 >> 11;
  v723 = v721 ^ 0xE2D6D834;
  HIDWORD(v128) = v721 ^ 0x34;
  LODWORD(v128) = v721 ^ 0xE2D6D800;
  v724 = v128 >> 6;
  v725 = v705 ^ 0x5408EFDB ^ v721;
  v726 = (v687 ^ 0x689277FE ^ v721) + v725 + 1 - ((2 * ((v687 ^ 0x689277FE ^ v721) + v725 + 1)) & 0xAB72C21C);
  HIDWORD(v128) = v721 ^ 0xD6D834;
  LODWORD(v128) = v721 ^ 0xE3FFFFFF;
  v727 = v128 >> 25;
  v728 = ((2 * ((v721 ^ 0xE2D6D834) + (v705 ^ 0x4921C810) + 1)) & 0x7FEEFFFC)
       + (((v721 ^ 0xE2D6D834) + (v705 ^ 0x4921C810) + 1) ^ 0xBFF77FFE)
       + (((v687 ^ 0x75BB5035) + (v721 ^ 0x1D2927CB) + 1) ^ 0x9BF0FE66)
       + ((2 * ((v687 ^ 0x75BB5035) + (v721 ^ 0x1D2927CB) + 1)) & 0x37E1FCCC);
  HIDWORD(v128) = v721 ^ 0x1834;
  LODWORD(v128) = v721 ^ 0xE2D6C000;
  v729 = v128 >> 13;
  v730 = (v728 - ((2 * v728 + 137298744) & 0x3C658376) + 1112163159) ^ v687;
  v731 = (v727 ^ 0x82081028)
       + (v722 ^ 0x96014202)
       + (v724 ^ 0x99FEDF7F)
       + ((2 * v724) & 0x33FDBEFE)
       - ((2 * v727) & 0xFBEFDFAE)
       - ((2 * v722) & 0xD3FD7BFA)
       + 2;
  HIDWORD(v128) = v721 ^ 0x16D834;
  LODWORD(v128) = v721 ^ 0xE2C00000;
  v732 = v128 >> 22;
  HIDWORD(v128) = v730 ^ 0x89918E;
  LODWORD(v128) = v730 ^ 0xEB000000;
  v733 = (v128 >> 24) + 825487872 - ((2 * (v128 >> 24)) & 0x6267E5A4) + 210;
  HIDWORD(v128) = v733 ^ 0xD2;
  LODWORD(v128) = v733 ^ 0x3133F200;
  v734 = (v128 >> 8) - ((2 * (v128 >> 8)) & 0x1EF3D18A);
  HIDWORD(v128) = v720;
  LODWORD(v128) = v721 ^ 0xE2D6D834;
  v735 = (v732 ^ 0xE1005108)
       + (v729 ^ 0x8C00420A)
       + ((v128 >> 2) ^ 0x337FFC5F)
       + ((2 * (v128 >> 2)) & 0x66FFF8BE)
       - ((2 * v732) & 0x3DFF5DEE)
       - ((2 * v729) & 0xE7FF7BEA)
       + 2;
  v736 = (v673 ^ (v731 - ((2 * v731 + 468688042) & 0x79BFAB14) - 1965579297) ^ 0xEC5045E3 ^ (v734 - 1887835963))
       + 1088089828;
  v737 = (HIDWORD(v870) ^ 0x23BDC5B2) + (v736 ^ 0x4F5F7BF3) + ((2 * v736) & 0x9EBEF7E6) - 1331657714;
  v738 = (v714 ^ (v726 + 1438212366) ^ 0x4136E14 ^ (v735 - ((2 * v735 + 1056891162) & 0x259ED180) - 229713587))
       + (v737 ^ 0x7FF78A5F)
       + ((2 * v737) & 0xFFEF14BE)
       - 2146929247;
  v739 = v738 - 527458207 - ((2 * v738) & 0xC11F40C2);
  v740 = v739 ^ 0xE08FA061;
  v741 = (v739 ^ 0xE08FA061) + (v721 ^ 0xE2D6D834);
  HIDWORD(v128) = v739 ^ 0xFFFFFFE1;
  LODWORD(v128) = v739 ^ 0xE08FA040;
  v742 = (v128 >> 6) - ((2 * (v128 >> 6)) & 0xF83B9D54);
  HIDWORD(v128) = v739 ^ 1;
  LODWORD(v128) = v739 ^ 0xE08FA060;
  v743 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0x795D076E);
  HIDWORD(v128) = v739 ^ 0x8FA061;
  LODWORD(v128) = v739 ^ 0xE0000000;
  v744 = v128 >> 25;
  HIDWORD(v128) = v739 ^ 0x61;
  LODWORD(v128) = v739 ^ 0xE08FA000;
  v745 = (v128 >> 11) - ((2 * (v128 >> 11)) & 0xCB0680AE);
  HIDWORD(v128) = v739 ^ 0xFA061;
  LODWORD(v128) = v739 ^ 0xE0800000;
  v746 = (v128 >> 22) - ((2 * (v128 >> 22)) & 0x7B14A98);
  HIDWORD(v128) = v739 ^ 0x61;
  LODWORD(v128) = v739 ^ 0xE08FA000;
  v747 = v739 ^ v705;
  v748 = (v744 ^ 0xEDFFBE77)
       + ((2 * v744) & 0xDBFF7CEE)
       + 302006666
       + ((v745 + 1703100503) ^ (v742 - 65155414) ^ 0x66617102);
  v749 = (v747 ^ 0xAB597EB3 ^ (v741 - ((2 * v741) & 0xFA11D27A) - 49747651)) + v706;
  v750 = v688 + (v748 ^ 0xF3B47BEC) + ((2 * v748) & 0xE768F7D8);
  v751 = v747 ^ 0x11B67E15 ^ (v741 - ((2 * v741) & 0x8FCFD336) + 1206380955);
  v752 = (HIDWORD(v865) ^ 0x5D59E08A)
       + (v749 ^ 0x7FFE7B74)
       + ((2 * v749) & 0xFFFCF6E8)
       + ((v750 + 206275604) ^ 0xFF37FF7B)
       + ((2 * (v750 + 206275604)) & 0xFE6FFEF6)
       + 1462309420;
  v753 = ((v751 + v725) ^ 0x80404580)
       + 2143268731
       + ((v743 - 1129413705) ^ ((v128 >> 13) - ((2 * (v128 >> 13)) & 0x5C81D10A) - 1371477883) ^ (v746 + 64529740) ^ 0x1136CE7E)
       - ((2 * (v751 + v725)) & 0xFF7F74FE)
       + 2821;
  v754 = ((2 * v753) & 0xFF8EEDF8) + (v753 ^ 0x7FC776FC) + (v752 ^ 0x1DDFDBF7) + ((2 * v752) & 0x3BBFB7EE);
  v755 = v754 - ((2 * v754 + 1152473626) & 0x47C26AC6);
  v756 = v755 - 2043026832;
  HIDWORD(v128) = (v755 - 2043026832) ^ 0xFFFFFFE3;
  LODWORD(v128) = (v755 - 2043026832) ^ 0x23E13540;
  v757 = v128 >> 6;
  HIDWORD(v128) = (v755 - 2043026832) ^ 0x563;
  LODWORD(v128) = (v755 - 2043026832) ^ 0x23E13000;
  v758 = v128 >> 11;
  HIDWORD(v128) = (v755 - 2043026832) ^ 0x1E13563;
  LODWORD(v128) = (v755 - 2043026832) ^ 0x22222222;
  v759 = (v128 >> 25) - ((2 * (v128 >> 25)) & 0x981A0D8A) - 871561531;
  v760 = (v758 ^ 0x5FBCFECE) + (v757 ^ 0x6ABBDB6A) + ((2 * v757) & 0xD577B6D4) + ((2 * v758) & 0xBF79FD9C);
  HIDWORD(v128) = (v755 - 2043026832) ^ 0x1563;
  LODWORD(v128) = (v755 - 2043026832) ^ 0x23E12000;
  v761 = (v128 >> 13) - ((2 * (v128 >> 13)) & 0xCBF87810) + 1711029256;
  v762 = (v739 ^ 0xC36E9502 ^ (v755 - 2043026832)) + (v721 ^ 0xC137ED57 ^ (v755 - 2043026832));
  v763 = ((v755 - 2043026832) ^ 0xDC1ECA9C) + 1;
  HIDWORD(v128) = 2043026823 - v755;
  LODWORD(v128) = (v755 - 2043026832) ^ 0x23E13560;
  v764 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0x716EACC4);
  HIDWORD(v128) = v756 ^ 0x213563;
  LODWORD(v128) = v756 ^ 0x23C00000;
  v765 = v763 + (v739 ^ 0xE08FA061);
  v766 = v759 ^ 0x6D5664A8 ^ (v760 - ((2 * v760 + 1796098960) & 0x42B6C4DA) - 689797067);
  v767 = (v739 ^ 0xE08FA061) + ((v766 + v706) ^ 0x171FFF6F) + ((2 * (v766 + v706)) & 0x2E3FFEDE) - 387972975;
  v768 = (v721 ^ 0x2597855 ^ v739) + (v762 ^ 0x80A24508) - ((2 * v762) & 0xFEBB75EE) + 2136849144;
  v769 = (v768 ^ 0x5D7F9F1D)
       + ((2 * v768) & 0xBAFF3E3A)
       + ((v764 - 1195944350) ^ v761 ^ ((v128 >> 22) - ((2 * (v128 >> 22)) & 0xA6E87D6C) + 1400127158) ^ 0x8E3F54DC)
       - 1568644893;
  v770 = (v769 ^ 0xFE7FE7FF)
       + ((2 * v769) & 0xFCFFCFFE)
       + 25171969
       + (HIDWORD(v855) ^ 0x9E319D28 ^ (((2 * v767) & 0x75EFFFFE)
                                      + (v767 ^ 0xBAF7FFFF)
                                      - ((2 * (((2 * v767) & 0x75EFFFFE) + (v767 ^ 0xBAF7FFFF)) + 602893468) & 0x2ADC0438)
                                      - 1486505878));
  v771 = v770 + 1182267705 - ((2 * v770) & 0x8CEFF272);
  v772 = v756 ^ 0x23E13563;
  v773 = v771 ^ 0x4677F939;
  HIDWORD(v128) = v771 ^ 0x37F939;
  LODWORD(v128) = v771 ^ 0x46400000;
  v774 = v128 >> 22;
  v775 = (v739 ^ 0x5907A6A7 ^ v771)
       + (((v771 ^ 0x4677F939) + (v756 ^ 0x23E13563)) ^ 0x5FFE6EFD)
       + ((2 * ((v771 ^ 0x4677F939) + (v756 ^ 0x23E13563))) & 0xBFFCDDFA)
       - 1610510076;
  HIDWORD(v128) = v771 ^ 0x139;
  LODWORD(v128) = v771 ^ 0x4677F800;
  v776 = v128 >> 11;
  v777 = ((2 * v765) & 0x3FFFFD36) + (v765 ^ 0x1FFFFE9B) + (v775 ^ 0x6F7F2FDB) + ((2 * v775) & 0xDEFE5FB6);
  HIDWORD(v128) = v771 ^ 0x77F939;
  LODWORD(v128) = v771 ^ 0x46000000;
  v778 = v128 >> 25;
  HIDWORD(v128) = v771 ^ 0x1939;
  LODWORD(v128) = v771 ^ 0x4677E000;
  v779 = (v128 >> 13) - ((2 * (v128 >> 13)) & 0x3798C9DE);
  HIDWORD(v128) = v771 ^ 0xFFFFFFF9;
  LODWORD(v128) = v771 ^ 0x4677F900;
  v780 = v128 >> 6;
  HIDWORD(v128) = v771 ^ 1;
  LODWORD(v128) = v771 ^ 0x4677F938;
  v781 = (v774 ^ 0x132A202)
       - ((2 * v774) & 0xFD9ABBFA)
       - 20095490
       + ((v779 - 1681103633) ^ ((v128 >> 2) - ((2 * (v128 >> 2)) & 0x23E7DEE2) + 301199217) ^ 0x8A3F8B9E);
  v782 = v723
       + (v778 ^ 0x2C481840)
       + (v776 ^ 0x29E6FFBF)
       + (v780 ^ 0xB7DFBF54)
       + ((2 * v776) & 0x53CDFF7E)
       + ((2 * v780) & 0x6FBF7EA8)
       - ((2 * v778) & 0xA76FCF7E)
       - 235853651;
  v783 = (v756 ^ 0x23E13563) + (v782 ^ 0x6EF97FFF) + ((2 * v782) & 0xDDF2FFFE) - 1861844991;
  v784 = (v856 ^ 0xEDDBEDFB ^ (((2 * v783) & 0xFDBE5B3A)
                             + (v783 ^ 0x7EDF2D9D)
                             - 2
                             * ((((2 * v783) & 0xFDBE5B3A) + (v783 ^ 0x7EDF2D9D) + 32093732) & 0x16E6AE3F ^ (v783 ^ 0x7EDF2D9D) & 1)
                             + 2026923106))
       + ((v781 - ((2 * v781) & 0x9992972) - 2066967367) ^ (v777 - ((2 * v777 + 1627497236) & 0x52C2E986) + 434259533) ^ 0x2DADE07A);
  v785 = v784 - 751504256 - ((2 * v784) & 0xA669E922);
  v786 = v785 + 37;
  v787 = v785 + 17;
  v788 = (v785 + 17) ^ 0xD334F491;
  v789 = v788 + (v771 ^ 0x4677F939) - ((2 * (v788 + (v771 ^ 0x4677F939))) & 0xFF619DD2) + 2142293737;
  HIDWORD(v128) = v787 ^ 0x1491;
  LODWORD(v128) = v787 ^ 0xD334E000;
  v790 = (v128 >> 13) - ((2 * (v128 >> 13)) & 0x5570299E) - 1430776625;
  HIDWORD(v128) = v787 ^ 0x134F491;
  LODWORD(v128) = v787 ^ 0xD2000000;
  v791 = v128 >> 25;
  v792 = ((v763 + v788 - ((2 * (v763 + v788)) & 0x3ECE2826) - 1620634605) ^ v789 ^ 0xE0D7DAFA) + (v756 ^ 0x23E13563);
  HIDWORD(v128) = v786 ^ 1;
  LODWORD(v128) = v787 ^ 0xD334F490;
  v793 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0x43343778);
  HIDWORD(v128) = v787 ^ 0x11111111;
  LODWORD(v128) = v787 ^ 0xD334F480;
  v794 = v128 >> 6;
  HIDWORD(v128) = v787 ^ 0x34F491;
  LODWORD(v128) = v787 ^ 0xD3000000;
  v795 = v128 >> 22;
  HIDWORD(v128) = v787 ^ 0x491;
  LODWORD(v128) = v787 ^ 0xD334F000;
  v796 = (v771 ^ 0x95430DA8 ^ v787) + (v756 ^ 0xF0D5C1F2 ^ v787);
  v797 = (v756 ^ 0x6596CC5A ^ v771) + (v796 ^ 0xFFBFB7CF) + ((2 * v796) & 0xFF7F6F9E) + 4212785;
  v798 = v740
       + (v791 ^ 0x42470C10)
       + (v794 ^ 0x15064588)
       + ((v128 >> 11) ^ 0x7EF5EFFF)
       - ((2 * v794) & 0xD5F374EE)
       - ((2 * v791) & 0x7B71E7DE)
       + ((2 * (v128 >> 11)) & 0xFDEBDFFE)
       + 700235369;
  v799 = (v795 ^ 0x20DC0804) - ((2 * v795) & 0xBE47EFF6) - 551290884 + (v790 ^ (v793 - 1583735876) ^ 0xB220F73);
  v800 = (v855 ^ 0x61C6A4F9)
       + (v792 ^ 0xFFD57DF6)
       + (v798 ^ 0xC3EF69BB)
       + ((2 * v792) & 0xFFAAFBEC)
       + ((2 * v798) & 0x87DED376)
       - 231582322;
  v801 = ((v797 - ((2 * v797) & 0x75E64EBE) - 1158469793) ^ 0xEF383821 ^ (v799 - ((2 * v799) & 0xAB963EFC) + 1439375230))
       + (v800 ^ 0x779FC0FB)
       + ((2 * v800) & 0xEF3F81F6)
       - 2006958331;
  v802 = v801 + 366854144 - ((2 * v801) & 0x2BBB9E6E);
  v803 = v802 + 3895;
  v804 = ((2 * ((v802 + 3895) ^ v787)) & 0xD9FFFBFA ^ 0x89D27348) + ((v802 + 3895) ^ v787 ^ 0x2A16C65B);
  v805 = (v802 + 3895) ^ 0x15DDCF37;
  v806 = ((v805 + (v771 ^ 0x4677F939)) ^ 0xC1A80A08) - ((2 * (v805 + (v771 ^ 0x4677F939))) & 0x7CAFEBEE) + v804 + 1;
  HIDWORD(v128) = (v802 + 3895) ^ 0xF37;
  LODWORD(v128) = (v802 + 3895) ^ 0x15DDC000;
  v807 = v128 >> 13;
  HIDWORD(v128) = (v802 + 3895) ^ 0xFFFFFFF7;
  LODWORD(v128) = (v802 + 3895) ^ 0x15DDCF00;
  v808 = v128 >> 6;
  HIDWORD(v128) = (v802 + 3895) ^ 0x737;
  LODWORD(v128) = (v802 + 3895) ^ 0x15DDC800;
  v809 = v128 >> 11;
  HIDWORD(v128) = (v802 + 3895) ^ 0x1DDCF37;
  LODWORD(v128) = (v802 + 3895) ^ 0x14000000;
  v810 = v128 >> 25;
  v811 = (v771 ^ 0x53AA360E ^ (v802 + 3895))
       + (((v787 ^ 0x2CCB0B6E) + v805 + 1) ^ 0xF7B2FDBD)
       + ((2 * ((v787 ^ 0x2CCB0B6E) + v805 + 1)) & 0xEF65FB7A)
       + 139264579;
  HIDWORD(v128) = -3896 - v802;
  LODWORD(v128) = (v802 + 3895) ^ 0x15DDCF34;
  v812 = v128 >> 2;
  HIDWORD(v128) = v803 ^ 0x1DCF37;
  LODWORD(v128) = v803 ^ 0x15C00000;
  v813 = v773 + (v811 ^ 0x1DE377D3) + ((2 * v811) & 0x3BC6EFA6) - 501446611;
  v814 = v772
       + (v809 ^ 0xC60069A4)
       + (v810 ^ 0xB8CBEBD)
       + (v808 ^ 0x30402400)
       + ((2 * v810) & 0x17197D7A)
       - ((2 * v809) & 0x73FF2CB6)
       - ((2 * v808) & 0x9F7FB7FE)
       - 30231649;
  v815 = (HIDWORD(v846) ^ 0xDDEE2978) + (v814 ^ 0xEDF7C75F) + (v813 ^ 0xCF71DDF7);
  v816 = (v807 ^ 0x4511804A)
       + (v812 ^ 0x5EFF6EFB)
       + ((v128 >> 22) ^ 0x20DA6A14)
       + ((2 * v812) & 0xBDFEDDF6)
       - ((2 * (v128 >> 22)) & 0xBE4B2BD6)
       - ((2 * v807) & 0x75DCFF6A)
       + 991209127
       + (v789 ^ 0x56EC2DE1 ^ (v806 - ((2 * v806 + 581955572) & 0x52B9C610) + 2058672898));
  v817 = ((2 * v816) & 0xFFFFBE7E)
       + (v816 ^ 0xFFFFDF3F)
       + ((v815 + ((2 * v814) & 0xDBEF8EBE) + ((2 * v813) & 0x9EE3BBEE) - 1222377336) ^ 0xFDDBFFA9)
       + ((2 * (v815 + ((2 * v814) & 0xDBEF8EBE) + ((2 * v813) & 0x9EE3BBEE) - 1222377336)) & 0xFBB7FF52);
  v818 = v817 - 1436363522 - ((2 * v817 + 71844400) & 0x507D67BC) - 8;
  HIDWORD(v128) = v818 ^ 0x1E;
  LODWORD(v128) = v818 ^ 0xA83EB3C0;
  v819 = v128 >> 6;
  HIDWORD(v128) = v818 ^ 0x3DE;
  LODWORD(v128) = v818 ^ 0xA83EB000;
  v820 = v128 >> 11;
  HIDWORD(v128) = v818 ^ 0x3EB3DE;
  LODWORD(v128) = v818 ^ 0xA8000000;
  v821 = v128 >> 25;
  HIDWORD(v128) = v818 ^ 0x3EB3DE;
  LODWORD(v128) = v818 ^ 0xA8000000;
  v822 = v128 >> 22;
  v823 = v818 ^ v787;
  v824 = v773
       + (v821 ^ 0x4402A00)
       + (v820 ^ 0xBEFDDF6B)
       + (v819 ^ 0xBF3FFDE)
       + ((2 * v820) & 0x7DFBBED6)
       + ((2 * v819) & 0x17E7FFBC)
       - ((2 * v821) & 0xF77FABFE);
  HIDWORD(v128) = (v817 - 1436363522) ^ 2;
  LODWORD(v128) = v818 ^ 0xA83EB3DC;
  v825 = v128 >> 2;
  HIDWORD(v128) = v818 ^ 0x13DE;
  LODWORD(v128) = v818 ^ 0xA83EA000;
  v826 = v788
       + (((v823 ^ 0x7B0A474F)
         + (((v818 ^ 0xA83EB3DE) + v805) ^ 0x3B87B9FA)
         + ((2 * ((v818 ^ 0xA83EB3DE) + v805)) & 0x770F73F4)
         - 998750714) ^ 0x42)
       - ((2
         * ((v823 ^ 0x7B0A474F)
          + (((v818 ^ 0xA83EB3DE) + v805) ^ 0x3B87B9FA)
          + ((2 * ((v818 ^ 0xA83EB3DE) + v805)) & 0x770F73F4)
          - 998750714)) & 0xFFFFFF7A);
  v827 = (v825 ^ 0x7E76D39F)
       + ((v128 >> 13) ^ 0x7D95D7EF)
       + (v822 ^ 0x92200114)
       + ((2 * v825) & 0xFCEDA73E)
       + ((2 * (v128 >> 13)) & 0xFB2BAFDE)
       - ((2 * v822) & 0xDBBFFDD6)
       + 1;
  v828 = (v823 ^ 0x7C917632 ^ ((v803 ^ 0xEA2230C8)
                             + (v818 ^ 0xA83EB3DE)
                             + 1
                             - ((2 * ((v803 ^ 0xEA2230C8) + (v818 ^ 0xA83EB3DE) + 1)) & 0xF3662FA)
                             + 127611261))
       - v804;
  v829 = ((v881 + 3850) ^ 0xEA75FDBF)
       + ((2 * (v881 + 3850)) & 0xD4EBFB7E)
       + ((v824 + 818804407) ^ 0x4DF87C5D)
       + ((v826 - 66) ^ 0xB4BFBF73)
       + ((2 * (v826 - 66)) & 0x697F7EE6)
       + ((2 * (v824 + 818804407)) & 0x9BF0F8BA)
       + 180427193
       + ((v828 - ((2 * v828 + 436206586) & 0x2E94A0A4) + 71978575) ^ (v827
                                                                     - ((2 * v827 - 475617606) & 0xB41F5BE6)
                                                                     - 874315440) ^ 0x4D45FDA1);
  v830 = v829 - 2002756791 - ((2 * v829) & 0x1140B692);
  HIDWORD(v128) = v830 ^ 0x349;
  LODWORD(v128) = v830 ^ 0x88A05800;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t))*(&off_1002C8B50 + (int)((((int)((v858 ^ HIDWORD(v860) ^ (335 * (v858 ^ 0x494A2D47) - 671)) & (HIDWORD(v860) - v858) | HIDWORD(v860) & ~(_DWORD)v858) >= 0) * ((5 * (v858 ^ 0x494A2DCE)) ^ 0x2B8)) ^ (v858 - 1229597168))))(v858, (v128 >> 11) ^ 0xA00A02, (v830 ^ 0x88A05B49)+ (_DWORD)a44+ 1549813701+ (~(2 * ((v830 ^ 0x88A05B49) + (_DWORD)a44)) | 0x473F7075)+ 1, (v128 >> 11), 2033122798, ((v818 ^ 0x209EE897 ^ v830) + (v803 ^ 0x9D7D947E ^ v830)) ^ 0xDAE63BBF, 3939631488, 2292210505, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           v832,
           v833,
           v834,
           v835,
           v836,
           v837,
           v838,
           v839,
           v840,
           v842,
           v844,
           v846,
           v848,
           v849,
           v850,
           v851,
           v852,
           v853,
           a38,
           a39,
           a40,
           a41,
           v855,
           v856,
           a44,
           a45,
           v858,
           v859,
           v860,
           v861,
           v862,
           v863,
           v865,
           v867,
           v870);
}

uint64_t sub_100205A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unsigned int a57,unsigned int a58,unsigned int a59,unsigned int a60)
{
  int v60;
  int v61;
  uint64_t v62;

  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v62 + 8 * ((41 * (v61 != v60 + 1229597351)) ^ v60)) - (v60 ^ 0x28u) + 690))(a60, a59, a3, a58, a5, a19, a57, a47);
}

void sub_100205AC4()
{
  JUMPOUT(0x1001FBACCLL);
}

#error "10020BCD8: call analysis failed (funcsize=5128)"

void sub_10020BCDC()
{
  JUMPOUT(0x10020B8D0);
}

uint64_t sub_10020BCE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  _BOOL4 v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;

  LOBYTE(STACK[0x3A5]) = BYTE1(v65) ^ 0x44;
  LOBYTE(STACK[0x552]) = BYTE2(v67) ^ 0xB;
  LOBYTE(STACK[0x737]) = HIBYTE(v65) ^ 0xF4;
  LOBYTE(STACK[0x389]) = BYTE1(v67) ^ 0xE0;
  LOBYTE(STACK[0x56E]) = BYTE2(v65) ^ 0x20;
  LOBYTE(STACK[0x71B]) = HIBYTE(v67) ^ 0xE3;
  LOBYTE(STACK[0x76F]) = HIBYTE(v66) ^ 0x1B;
  LOBYTE(STACK[0x214]) = v66 ^ 0x62;
  LOBYTE(STACK[0x3C1]) = BYTE1(v64) ^ 0x1D;
  LOBYTE(STACK[0x58A]) = BYTE2(v64) ^ 0x75;
  LOBYTE(STACK[0x3DD]) = BYTE1(v66) ^ 0x6B;
  LOBYTE(STACK[0x753]) = HIBYTE(v64) ^ 0x48;
  LOBYTE(STACK[0x5A6]) = BYTE2(v66) ^ 0x1F;
  v69 = (HIDWORD(a12) - 1230202205) < 0x32FBDC55;
  v70 = *(unsigned __int8 *)((a5 - 1132) + 1491152648 + a15 - 1491152943);
  v71 = (a3 ^ 0x16BAD583) - 838698623 * (((2 * (v70 ^ 0x31)) & 0xFFFFFFE7) + (v70 ^ 0xDE9FFFC6)) - 1484772467;
  v72 = ((2 * v71) & 0x9DFFFD6A) + (v71 ^ 0x4EFFFEB5);
  v73 = (v72 - 1325399733) % 0x101;
  v74 = v64 ^ v68;
  v75 = v74
      + (((v63 ^ 0xCE93D11D) - 1325399733 + v72 + 1) ^ 0x4FFDFD9F)
      + ((2 * ((v63 ^ 0xCE93D11D) - 1325399733 + v72 + 1)) & 0x9FFBFB3E)
      - 1342045599;
  v76 = ((2 * v73) & 0x33E) + (v73 ^ 0xE6BB739F) + (v75 ^ 0xD7E77E3B) + ((2 * v75) & 0xAFCEFC76);
  v77 = v76 - ((2 * v76 - 2101732276) & 0xD2A81886) - 1431233943;
  v78 = v77 ^ v66;
  v79 = (v78 ^ 0x2DB84A75) + 1;
  v80 = v79 + v74 - ((2 * (v79 + v74)) & 0x41856184) - 1597853502;
  v81 = v79 + (v63 ^ 0x316C2EE2) - ((2 * (v79 + (v63 ^ 0x316C2EE2))) & 0xC2600664) - 516947150;
  v82 = (v81 ^ v78 ^ 0x3377B6B8) + 644140058;
  v83 = v82 ^ 0xFFFFF27F;
  v84 = (2 * v82) & 0xFFFFE4FE;
  if ((HIDWORD(a12) - 1230202205) >= 0x32FBDC55)
    v69 = (HIDWORD(a12) - 1230202205) > 0x32FBDC56;
  v85 = v77 ^ 0xFC6DEBDD;
  v86 = v85 + v83 + v84 + 3457;
  v87 = (v86 ^ 0xFFDD33EF)
      + (v80 ^ 0x5F3D4F3D)
      + ((2 * v86) & 0xFFBA67DE)
      - 2
      * (((v86 ^ 0xFFDD33EF) + (v80 ^ 0x5F3D4F3D) + ((2 * v86) & 0xFFBA67DE) + 2280466) & 0x4FDCA9 ^ ((v86 ^ 0xFFDD33EF) + (v80 ^ 0x5F3D4F3D)) & 1)
      + 7514298;
  v88 = v87 ^ v80;
  v89 = v87 ^ v81;
  v87 ^= 0x4FDCA8u;
  v90 = v87 + v85 + 200486236 - ((2 * (v87 + v85)) & 0x17E65AB8);
  v91 = (((v88 ^ 0xA08D6C6A) + v87) ^ 0xFFFF9F7C) + (v89 ^ 0x1E802065) + ((2 * ((v88 ^ 0xA08D6C6A) + v87)) & 0xFFFF3EF8);
  v92 = v90 ^ 0x32D3D44F ^ (v91 - ((2 * v91 + 49418) & 0x7241F226) + 958486936);
  v93 = v92 - ((2 * v92 - 1717201034) & 0x96EF223C) + 407526617;
  v94 = (((v93 ^ 0xCB77911E) + (v90 ^ 0xBF32D5C)) ^ 0x1148A400)
      - ((2 * ((v93 ^ 0xCB77911E) + (v90 ^ 0xBF32D5C))) & 0xDD6EB7FE)
      - 289973248
      + (v93 ^ v88 ^ 0xEAD02173 ^ ((v93 ^ 0xCB77911E)
                                 + (v93 ^ v89 ^ 0xD5F7B17B)
                                 + 1
                                 - ((2 * ((v93 ^ 0xCB77911E) + (v93 ^ v89 ^ 0xD5F7B17B) + 1)) & 0x255B80E)
                                 - 2127897593));
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((675 * !v69) ^ a5)) - 4))(86108246, 762686214, ((2 * v94) & 0xCFF15F3E)+ (v94 ^ 0x67F8AF9F)- ((2 * (((2 * v94) & 0xCFF15F3E) + (v94 ^ 0x67F8AF9F)) + 86108246) & 0x2D75AB06)- 649344594, 1325399733, a5, 855366741, 200486236, 5233832, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_10020C248()
{
  JUMPOUT(0x10020BE38);
}

uint64_t sub_10020C250@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  _BOOL4 v9;

  LOBYTE(STACK[0x24C]) = v8 ^ 0x32;
  LOBYTE(STACK[0x415]) = BYTE1(v8) ^ 0xAE;
  LOBYTE(STACK[0x78B]) = HIBYTE(a1) ^ 0x23;
  LOBYTE(STACK[0x5DE]) = BYTE2(v8) ^ 0x87;
  LOBYTE(STACK[0x5C2]) = BYTE2(a1) ^ 0x8F;
  LOBYTE(STACK[0x230]) = a1 ^ 0xB6;
  LOBYTE(STACK[0x3F9]) = BYTE1(a1) ^ 0xE0;
  LOBYTE(STACK[0x268]) = v6 ^ 0xC2;
  LOBYTE(STACK[0x5FA]) = BYTE2(v6) ^ 0x75;
  LOBYTE(STACK[0x616]) = BYTE2(v7) ^ 0x1F;
  LOBYTE(STACK[0x44D]) = BYTE1(v7) ^ 0x6B;
  LOBYTE(STACK[0x7A7]) = HIBYTE(v8) ^ 9;
  LOBYTE(STACK[0x7C3]) = HIBYTE(v6) ^ 0x48;
  LOBYTE(STACK[0x284]) = v7 ^ 0x62;
  LOBYTE(STACK[0x431]) = BYTE1(v6) ^ 0x1D;
  LOBYTE(STACK[0x7DF]) = HIBYTE(v7) ^ 0x1B;
  v9 = (a6 + 1861178222) < 0xE29AFFD8 || (a6 + 1861178222) > 0xE29AFFD9;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((106 * !v9) ^ a2)) - 12))(2056409035, 2042673813);
}

void sub_10020C7E4()
{
  JUMPOUT(0x10020C3ACLL);
}

uint64_t sub_10020C7EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  int v11;
  int v12;
  int v13;
  char v14;
  _BOOL4 v15;

  LOBYTE(STACK[0x469]) = BYTE1(v13) ^ 6;
  LOBYTE(STACK[0x7FB]) = HIBYTE(v13) ^ 0xAA;
  LOBYTE(STACK[0x2BC]) = v10 ^ 0xD7;
  LOBYTE(STACK[0x2D8]) = v11 ^ 0xC2;
  LOBYTE(STACK[0x4A1]) = BYTE1(v11) ^ 0x1D;
  LOBYTE(STACK[0x817]) = HIBYTE(v10) ^ 4;
  LOBYTE(STACK[0x485]) = BYTE1(v10) ^ 0x1B;
  LOBYTE(STACK[0x64E]) = BYTE2(v10) ^ 0x59;
  LOBYTE(STACK[0x66A]) = BYTE2(v11) ^ 0x75;
  LOBYTE(STACK[0x2F4]) = v12 ^ 9;
  LOBYTE(STACK[0x632]) = BYTE2(v13) ^ 0xB7;
  LOBYTE(STACK[0x686]) = BYTE2(v12) ^ 0x4B;
  LOBYTE(STACK[0x833]) = HIBYTE(v11) ^ 0x48;
  v14 = ((v13 & 0x35 ^ 0xCE) + ((2 * (v13 & 0x35)) ^ 0xE3) - 64) ^ 0xBF;
  LOBYTE(STACK[0x2A0]) = (v14 & (v13 & 0xCA ^ 0x7F)) - ((2 * v14) & 0x6A) + 53;
  LOBYTE(STACK[0x84F]) = HIBYTE(v12) ^ 0x53;
  LOBYTE(STACK[0x4BD]) = BYTE1(v12) ^ 0x39;
  v15 = (a10 + 1512204369) < 0x92652AEE;
  if ((a10 + 1512204369) >= 0x92652AEE)
    v15 = (a10 + 1512204369) > 0x92652AEF;
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50 + ((91 * !v15) ^ a4)) - 4))(1577045098);
}

void sub_10020CDF8()
{
  JUMPOUT(0x10020C988);
}

uint64_t sub_10020CE10(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unint64_t v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  int v155;

  LOBYTE(STACK[0x32C]) = v65 ^ 0xD7;
  LOBYTE(STACK[0x310]) = a3 ^ 0x3B;
  LOBYTE(STACK[0x887]) = HIBYTE(v65) ^ 4;
  LOBYTE(STACK[0x4D9]) = BYTE1(a3) ^ 0x51;
  LOBYTE(STACK[0x6DA]) = BYTE2(v66) ^ 0xA;
  LOBYTE(STACK[0x6BE]) = BYTE2(v65) ^ 0x59;
  LOBYTE(STACK[0x86B]) = (a3 >> ((100 * (v68 ^ 0x3B)) ^ 0x38)) ^ 0x2A;
  LOBYTE(STACK[0x364]) = v67 ^ 0x62;
  LOBYTE(STACK[0x4F5]) = BYTE1(v65) ^ 0x1B;
  LOBYTE(STACK[0x348]) = v66 ^ 0xAB;
  LOBYTE(STACK[0x8A3]) = HIBYTE(v66) ^ 0xEF;
  LOBYTE(STACK[0x6F6]) = BYTE2(v67) ^ 0x1F;
  LOBYTE(STACK[0x6A2]) = BYTE2(a3) ^ 0xDD;
  LOBYTE(STACK[0x52D]) = BYTE1(v67) ^ 0x6B;
  LOBYTE(STACK[0x8BF]) = HIBYTE(v67) ^ 0x1B;
  LOBYTE(STACK[0x511]) = BYTE1(v66) ^ 0xA1;
  v155 = 100 * (v68 ^ 0x33B);
  v69 = (v155 + 1981151927) & 0x89EA033A;
  v70 = -362980607
      - 1487347361
      * (((2 * (*(&a65 + v69 - 1800 * ((v69 - 274) / 0x708) - 274) ^ 0x35)) & 0xF6)
       + (*(&a65 + v69 - 1800 * ((v69 - 274) / 0x708) - 274) ^ 0x7FBFAF4E));
  v71 = v70
      - 418090588
      + (((v70 - 1560073347) % 0x101u) ^ 0xCDD7D7DD)
      + ((2 * ((v70 - 1560073347) % 0x101u)) & 0x3BA)
      - 718580832;
  v72 = (v71 ^ 0x6BDFC7FF) + 621096836 + ((2 * v71) & 0xD7BF8FFE) - 1809827839;
  v73 = ((v72 - ((2 * v72) & 0xE97F41B0) + 1958715608) ^ 0x36990F76) - 1738420157;
  v74 = (((v73 ^ 0x3FFAF7DD)
        + 1554772381
        + ((2 * v73) & 0x7FF5EFBA)
        + 1
        - ((2 * ((v73 ^ 0x3FFAF7DD) + 1554772381 + ((2 * v73) & 0x7FF5EFBA) + 1) + 923258538) & 0x33E7C2A0)
        + 1433913509) ^ 0xC8DF7C93)
      - 1226364049;
  v75 = ((v74 - ((2 * v74 + 1784666428) & 0x4677D98C) + 1483463012) ^ 0xE36AABA7) - 35086739;
  v76 = (v75 - ((2 * v75) & 0x7AA0A172) + 1028673721) ^ 0xC7F1901B;
  v77 = v76 - ((2 * v76 - 597685216) & 0xAA531882) + 1129943633;
  v78 = (v77 ^ 0x2AD673BE) + 417920183 - ((2 * ((v77 ^ 0x2AD673BE) + 644941651)) & 0xE4EFDAC8);
  v79 = (v77 ^ 0x2AD673BE) + 621096837;
  v80 = v79 ^ 0x7F7BD7EB;
  v81 = (2 * v79) & 0xFEF7AFD6;
  v82 = v77 ^ 0xA3C9B81B;
  v83 = (v77 ^ 0x2AD673BE) + 95714791 - ((2 * ((v77 ^ 0x2AD673BE) + 1117723493)) & 0x862AC504);
  v84 = ((2 * ((v77 ^ 0xD5298C41) - 1068415135)) & 0xBDFADFFE) + (((v77 ^ 0xD5298C41) - 1068415135) ^ 0x5EFD6FFF);
  v85 = v77 ^ 0x970F23EF;
  v86 = (v77 ^ 0x970F23EF) + (v77 ^ 0xD5298C41);
  v87 = v86 ^ 0xDFCFAFFE;
  v88 = (2 * v86) & 0xBF9F5FFC;
  v89 = v80 - 2138822635 + v81;
  v90 = v77 ^ 0x323DFDE5;
  v91 = (v78 ^ 0xF277ED64)
      + (((v77 ^ 0x1C5416EA) + v89) ^ 0x776EBFBF)
      + ((2 * ((v77 ^ 0x1C5416EA) + v89)) & 0xEEDD7F7E)
      - 2003746751;
  v92 = ((v90 + v87 + v88 + 540037122) ^ 0xFFF7AFEE)
      + ((2 * (v90 + v87 + v88 + 540037122)) & 0xFFEF5FDC)
      + (v91 ^ 0xA2604002);
  v93 = v77 ^ 0x26DAC522;
  v94 = v77 ^ 0xA32C63EE;
  v95 = (v77 ^ 0x2AD673BE)
      + 1817193031
      - ((2 * ((v77 ^ 0x2AD673BE) + 1817193031) + 590407758) & 0x48D4629C)
      - 1241340555;
  v96 = v77 ^ 0xB7CD66C7;
  v97 = (v77 ^ 0x2AD673BE) - 1738420156 - ((2 * ((v77 ^ 0x2AD673BE) - 1738420156)) & 0xF83658CA) + 2082155621;
  v98 = (v77 ^ 0xD5298C41) + 334030835 - ((2 * ((v77 ^ 0xD5298C41) + 334030835)) & 0x2B3A77D4) - 1784857622;
  v99 = (((v77 ^ 0xD5298C41) - 179867185) ^ 0xFFD9FBF3)
      + 2491405
      + ((2 * ((v77 ^ 0xD5298C41) - 179867185)) & 0xFFB3F7E6);
  v100 = (v97 ^ 0xC77E3936 ^ (v92
                            - ((2 * v91) & 0xBB3F7FFA)
                            + 1
                            - ((2 * (v92 - ((2 * v91) & 0xBB3F7FFA) + 1) + 995106846) & 0x76CA2AA6)
                            + 420291938))
       + v99;
  v101 = (v77 ^ 0xF2664D6F) + (v83 ^ 0x9FD7C9C8 ^ (v100 - ((2 * v100) & 0xB9855694) + 1556261706)) + 1;
  v77 ^= 0x9159A24C;
  v102 = v77 + (v101 ^ 0xF3DA3F52) + ((2 * v101) & 0xE7B47EA4) + 203800750;
  v103 = (v94 ^ v98 ^ 0x24E03B1D ^ (v102 - ((2 * v102) & 0x1528C48E) - 1969987001)) - v84;
  v104 = (v93 ^ 0xF6AD763E) + (v95 ^ 0xA394B126 ^ (v103 - ((2 * v103 + 234545150) & 0xFFD00D0) - 419696537)) + 1;
  v105 = ((2 * v104) & 0xCBB57FEE)
       + (v104 ^ 0xE5DABFF7)
       - ((2 * (((2 * v104) & 0xCBB57FEE) + (v104 ^ 0xE5DABFF7)) + 1896703486) & 0x7953411E)
       - 1255124082;
  v106 = (v105 ^ 0xBCA9A08F) + v77 - ((2 * ((v105 ^ 0xBCA9A08F) + v77)) & 0x57189318) + 730614156;
  v107 = ((2 * ((v105 ^ 0xBCA9A08F) + (v83 ^ 0xC3156282))) & 0xEFB6FE7E)
       + (((v105 ^ 0xBCA9A08F) + (v83 ^ 0xC3156282)) ^ 0x77DB7F3F);
  v108 = v105 ^ v94;
  v109 = v105 ^ v98;
  v110 = v105 ^ v93;
  v111 = (v105 ^ 0xBCA9A08F) + v90 - ((2 * ((v105 ^ 0xBCA9A08F) + v90)) & 0xF3A80CCE) - 103545241;
  v112 = ((2 * ((v105 ^ 0xBCA9A08F) + (v95 ^ 0x246A314E))) & 0xF767ECFE)
       + (((v105 ^ 0xBCA9A08F) + (v95 ^ 0x246A314E)) ^ 0xFBB3F67F);
  v113 = ((2 * ((v105 ^ 0xBCA9A08F) + v99)) & 0xFA7AEBCE) + (((v105 ^ 0xBCA9A08F) + v99) ^ 0x7D3D75E7);
  v114 = v105 ^ v82;
  v115 = v85 + (v105 ^ 0x43565F70) - 74149442 - ((2 * (v85 + (v105 ^ 0x43565F70) + 1)) & 0xF729237A);
  v116 = v105 ^ v96;
  v117 = (v105 ^ 0xBCA9A08F) + v89 - 1163676313 - ((2 * ((v105 ^ 0xBCA9A08F) + v89)) & 0x75476ACE);
  v118 = (v105 ^ 0x43565F70) + v84 - ((2 * ((v105 ^ 0x43565F70) + v84) + 1107632132) & 0xD1D278E0) + 166448242;
  v119 = v97 ^ 0xC0B28CEA ^ v105;
  v120 = (v105 ^ v117 ^ v111 ^ v115 ^ 0x44A8232) + v119;
  v121 = v78 ^ 0x4EDE4DEB ^ v105;
  v122 = (((v114 ^ 0x3340E7E) + v121) ^ 0x20404B14)
       - v107
       - ((2 * ((v114 ^ 0x3340E7E) + v121)) & 0xBF7F69D6)
       + v113
       + (v120 ^ 0xFFDE5FF5)
       + ((2 * v120) & 0xFFBCBFEA)
       - 1709154290;
  v123 = (v106 ^ 0xD473B673) + (v116 ^ 0x41D15857 ^ (v122 - ((2 * v122 - 2135032702) & 0x8E58591E) - 2020922672)) + 1;
  v124 = (v108 ^ 0x8740C23F) + (v123 ^ 0x5EFBBFAF) + ((2 * v123) & 0xBDF77F5E) - 1593556911;
  v125 = (v109 ^ v118 ^ 0x6ADE726C ^ (v124 - ((2 * v124) & 0x5607AAF2) + 721671545)) - 762027389;
  v126 = (v110 ^ 0x4A04D6B1) + (v125 ^ 0xEBE78FE6) + ((2 * v125) & 0xD7CF1FCC) + 337145883;
  v127 = ((2 * v126) & 0xBE5FEF6C) + (v126 ^ 0xDF2FF7B6);
  v128 = v112 + v127 - ((2 * (v112 + v127) + 1245193110) & 0x86A4F99C) + 1752075929;
  v129 = ((2 * ((v128 ^ 0x43527CCE) + (v117 ^ 0xBAA3B567))) & 0x3F2FFFFE)
       + (((v128 ^ 0x43527CCE) + (v117 ^ 0xBAA3B567)) ^ 0x9F97FFFF);
  v130 = ((2 * ((v128 ^ 0x43527CCE) + (v115 ^ 0xFB9491BD))) & 0xD15CF7F4)
       + (((v128 ^ 0x43527CCE) + (v115 ^ 0xFB9491BD)) ^ 0xE8AE7BFA);
  v131 = ((2 * (v113 - 2101179879 + (v128 ^ 0x43527CCE))) & 0xBFFADFFC)
       + ((v113 - 2101179879 + (v128 ^ 0x43527CCE)) ^ 0xDFFD6FFE);
  v132 = ((2 * ((v128 ^ 0x43527CCE) + (v118 ^ 0x68E93C70))) & 0xFFDF77B2)
       + (((v128 ^ 0x43527CCE) + (v118 ^ 0x68E93C70)) ^ 0xFFEFBBD9);
  HIDWORD(v133) = v129 + 1;
  LODWORD(v133) = v129 + 1617428481;
  v134 = (v133 >> 2) + 135852032 - ((2 * (v133 >> 2)) & 0x1031F28A) + 2373;
  HIDWORD(v133) = v134 ^ 0x945;
  LODWORD(v133) = v134 ^ 0x818F000;
  v135 = (v133 >> 12) - ((2 * (v133 >> 12)) & 0xD968B64A) + 1823759141;
  v136 = ((2 * ((v128 ^ 0x43527CCE) + (v109 ^ 0x29349B65))) & 0xB3B8EFA0)
       + (((v128 ^ 0x43527CCE) + (v109 ^ 0x29349B65)) ^ 0x59DC77D0);
  v137 = v121 + (v128 ^ 0xBCAD8331) - 499254284 - ((2 * (v121 + (v128 ^ 0xBCAD8331) + 1)) & 0xC47BF7E6);
  v138 = (v128 ^ 0x43527CCE) + v119 + 85648036 - ((2 * ((v128 ^ 0x43527CCE) + v119)) & 0xA35C548);
  HIDWORD(v133) = v135 ^ 0x5B25;
  LODWORD(v133) = v135 ^ 0x6CB40000;
  v139 = ((2 * (v128 ^ v114)) & 0x2FEF6FBC ^ 0xCC6520) + (v128 ^ v114 ^ 0x5791C56E);
  v140 = ((2 * (v128 ^ v106)) & 0xFEFF1E34 ^ 0xD0BC0A04) + (v128 ^ v106 ^ 0x97A1BA58);
  v141 = (v128 ^ 0x12FC7D38 ^ ((v133 >> 18) + 1370358262 - ((2 * (v133 >> 18)) & 0xA35C03EC))) + (v137 ^ 0xE23DFBF3);
  v142 = v139
       + v130
       + ((2 * (v128 ^ v111)) & 0x8EF3757C ^ 0x4007550)
       + (v128 ^ v111 ^ 0x7DFFC017)
       + 1463328152
       + (v141 ^ 0x5FF9F9FE);
  v143 = v142 + ((2 * v141) & 0xBFF3F3FC);
  v144 = v128 ^ v110;
  v145 = (v138 ^ 0x38E41B88 ^ (v143 - 2 * ((v143 + 11368916) & 0x3DFEF92E ^ v142 & 2) - 1095994624)) - v131;
  v146 = (v107
        - 2010873663
        + (v128 ^ 0x43527CCE)
        - 418080783
        - ((2 * (v107 - 2010873663 + (v128 ^ 0x43527CCE))) & 0xCE292FE2)) ^ 0x93955F2E ^ (v145
                                                                                        - ((2 * v145 - 1074077700) & 0xE90391BE)
                                                                                        + 1417623773);
  v147 = ((v146 + (v108 ^ 0xC412BEF1 ^ v128)) ^ 0x7FFEFBF3)
       - (v140
        + v136
        + ((2 * ((v128 ^ 0x43527CCE) + (v116 ^ 0x6FD74D8))) & 0xA7FFBEA0)
        + (((v128 ^ 0x43527CCE) + (v116 ^ 0x6FD74D8)) ^ 0x53FFDF50))
       + ((2 * (v146 + (v108 ^ 0xC412BEF1 ^ v128))) & 0xFFFDF7E6)
       + 418333754;
  v148 = (v132 + 1066023) ^ 0xB0D81854 ^ (v147 - ((2 * v147 + 685460506) & 0x61B030A8) - 985285023);
  v149 = (v144 ^ 0x956AA7F) + ((v148 + 1232548366 - ((2 * v148) & 0x92EE641C)) ^ 0x4977320E) + 1;
  v150 = (v149 ^ 0xF62D75F4) + v127 + ((2 * v149) & 0xEC5AEBE8);
  v151 = v150 - ((2 * v150 + 1430594732) & 0xF7F062F2) + 647676879;
  v152 = ((2 * v151) & 0x275ADAEE ^ 0x64808CC) + (v151 ^ 0x78896919);
  v153 = (_DWORD)v152 + v131 - ((2 * ((_DWORD)v152 + v131) + 413811990) & 0xE034FFAC);
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + (v155 ^ 0x13)) - 12))(v153, (v138 ^ 0x51AE2A4)- 1817350793- (_DWORD)v152+ 2121069335- ((2 * ((v138 ^ 0x51AE2A4) - 1817350793 - (_DWORD)v152)) & 0xFCD9E62E), v140 - (_DWORD)v152 - ((2 * (v140 - (_DWORD)v152) + 677100730) & 0x8D12099A), (v153 + 2087690849), v152, (_DWORD)v152 + v139 - ((2 * ((_DWORD)v152 + v139) - 1464486570) & 0xD5684560), (_DWORD)v152 + v130 - ((2 * ((_DWORD)v152 + v130) + 122170654) & 0x4260FF30) + 617911847, (v144 ^ 0xF6A95580)- 1817350793- (_DWORD)v152- ((2 * ((v144 ^ 0xF6A95580) - 1817350793 - (_DWORD)v152)) & 0xB8F60B00), a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

void sub_10020E080()
{
  JUMPOUT(0x10020CFBCLL);
}

uint64_t sub_10020E0AC(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  char a70;
  char a71;
  char a72;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  uint64_t v84;

  LODWORD(a52) = v72;
  HIDWORD(a53) = v81;
  LODWORD(a54) = v80;
  HIDWORD(a56) = v77;
  HIDWORD(v84) = v79;
  LODWORD(a34) = v76;
  LODWORD(a58) = v78;
  HIDWORD(a32) = v75;
  LOBYTE(STACK[0x368]) = LOBYTE(STACK[0x3C8]) ^ LOBYTE(STACK[0x390]) ^ *(_BYTE *)((LODWORD(STACK[0x11F0]) ^ 0x8B7B7E7BB3192611)
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x11F0]) ^ 0xCDEADFEE)) & 0xFDE7F3FE)
                                                                                + a13
                                                                                + 0x264DBC49E78A8DFCLL) ^ *(_BYTE *)((LODWORD(STACK[0x1E10]) ^ 0x779F2BFFBA310031) + ((2 * (LODWORD(STACK[0x1E10]) ^ 0xCDEADFEE)) & 0xEFB7BFBE) + a13 + 0x3A2A0EC5EEA2A81CLL) ^ 0x35;
  LOBYTE(STACK[0x531]) = *(_BYTE *)((LODWORD(STACK[0x1374]) ^ 0x69FDFFC70217A001)
                                  + a13
                                  + ((2 * (LODWORD(STACK[0x1374]) ^ 0xCDEADFEE)) & 0x19FFAFFDELL)
                                  + 0x47CB3AFD9681080CLL) ^ LOBYTE(STACK[0x559]) ^ LOBYTE(STACK[0x591]) ^ *(_BYTE *)((LODWORD(STACK[0xA24]) ^ 0x7BB25D5F72F92099) + a13 + ((2 * (LODWORD(STACK[0xA24]) ^ 0xCDEADFEE)) & 0x17E27FEEELL) + 0x3616DD65A76A8884) ^ 0x35;
  LOBYTE(STACK[0x6FA]) = LOBYTE(STACK[0x75A]) ^ LOBYTE(STACK[0x722]) ^ *(_BYTE *)((LODWORD(STACK[0x14F8]) ^ 0x6BFFEAFFB2312051)
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x14F8]) ^ 0xCDEADFEE)) & 0xFFB7FF7E)
                                                                                + a13
                                                                                + 0x45C94FC5E6A2883CLL) ^ *(_BYTE *)((LODWORD(STACK[0xBA8]) ^ 0x47078F7DA2169A3DLL) + ((2 * (LODWORD(STACK[0xBA8]) ^ 0xCDEADFEE)) & 0xDFF88BA6) + a13 + 0x6AC1AB47F6824228) ^ 0x35;
  LOBYTE(STACK[0x8C3]) = a71 ^ *(_BYTE *)((LODWORD(STACK[0xD2C]) ^ 0x7BBEEFFF3214290CLL)
                                        + a13
                                        + ((2 * (LODWORD(STACK[0xD2C]) ^ 0xCDEADFEE)) & 0x1FFFDEDC4)
                                        + 0x360A4AC5667F9119) ^ *(_BYTE *)((LODWORD(STACK[0x167C]) ^ 0xEDFD9F7E5055C890)
                                                                           + a13
                                                                           + ((2
                                                                             * (LODWORD(STACK[0x167C]) ^ 0xCDEADFEE)) & 0x13B7E2EFCLL)
                                                                           - 0x3C3464B937408F83) ^ LOBYTE(STACK[0x21B]) ^ 0x35;
  LOBYTE(STACK[0x384]) = LOBYTE(STACK[0x3AC]) ^ LOBYTE(STACK[0x3E4]) ^ *(_BYTE *)((LODWORD(STACK[0xEB0]) ^ 0xFFFE6E2B1A953319)
                                                                                + a13
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0xEB0]) ^ 0xCDEADFEE)) & 0x1AEFFD9EELL)
                                                                                - 0x4E353366710164FCLL) ^ *(_BYTE *)((LODWORD(STACK[0x1800]) ^ 0x77ABDFFB1558F093) + a13 + ((2 * (LODWORD(STACK[0x1800]) ^ 0xCDEADFEE)) & 0x1B1645EFALL) + 0x3A1D5AC98DCC587ELL) ^ 0x35;
  LOBYTE(STACK[0x54D]) = LOBYTE(STACK[0x575]) ^ LOBYTE(STACK[0x5AD]) ^ *(_BYTE *)((LODWORD(STACK[0x1034]) ^ 0x53F77DB7F231AC37)
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1034]) ^ 0xCDEADFEE)) & 0x7FB6E7B2)
                                                                                + a13
                                                                                + 0x5DD1BD0E26A31422) ^ *(_BYTE *)((LODWORD(STACK[0x1984]) ^ 0xFDFF73FF9F5CA103) + ((2 * (LODWORD(STACK[0x1984]) ^ 0xCDEADFEE)) & 0xA56CFDDA) + a13 - 0x4C363939EC37F6F2) ^ 0x35;
  LOBYTE(STACK[0x716]) = LOBYTE(STACK[0x776]) ^ *(_BYTE *)((LODWORD(STACK[0x1B08]) ^ 0xFC5EFE7F3215E881)
                                                         + a13
                                                         + ((2 * (LODWORD(STACK[0x1B08]) ^ 0xCDEADFEE)) & 0x1FFFE6EDELL)
                                                         - 0x4A95C3BA9980AF74) ^ *(_BYTE *)((LODWORD(STACK[0x11B8]) ^ 0xDFBDBDB776BD7033)
                                                                                            + a13
                                                                                            + ((2
                                                                                              * (LODWORD(STACK[0x11B8]) ^ 0xCDEADFEE)) & 0x176AF5FBALL)
                                                                                            - 0x2DF482F254D927E2) ^ LOBYTE(STACK[0x73E]) ^ 0x35;
  a70 = a72 ^ LOBYTE(STACK[0x237]) ^ *(_BYTE *)((LODWORD(STACK[0x133C]) ^ 0xDFBD3DFB30112481)
                                              + a13
                                              + ((2 * (LODWORD(STACK[0x133C]) ^ 0xCDEADFEE)) & 0x1FBF7F6DELL)
                                              - 0x2DF40336977D7374) ^ *(_BYTE *)((LODWORD(STACK[0x1C8C]) ^ 0x7FFD9B7F32552609)
                                                                                 + a13
                                                                                 + ((2
                                                                                   * (LODWORD(STACK[0x1C8C]) ^ 0xCDEADFEE)) & 0x1FF7FF3CELL)
                                                                                 + 0x31CB9F4566BE8E14) ^ 0x35;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x370]) = 53;
  LODWORD(v84) = v73 + 1725812192;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + v74) - 12))(53, 457, 41765899, 2443359173, 1800, &a65, 2960517107, 1008633853, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           v84,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           __PAIR64__(a7, v82),
           a56,
           __PAIR64__(a2, a4),
           a58,
           a59);
}

uint64_t sub_10020E84C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t (*v64)(void);

  v62 = *(_DWORD *)(v61
                  + 4
                  * ((((2722 * ((v60 - ((2 * v60 + 738443208) & 0x7766FA26) + 1370840311) ^ 0x3BB37DAB)) & 0xFDBDF1FC)
                    + ((1361 * ((v60 - ((2 * v60 + 738443208) & 0x7766FA26) + 1370840311) ^ 0x3BB37DAB)) ^ 0x7EDEF8FE)
                    - 2126221445)
                   % 0x12E0)) ^ 0xB7AE8AB6;
  v63 = v62 - ((2 * v62 + 374804154) & 0x163BB3C8) - 162963135;
  v64 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1543 * (v60 + 1 != v58 + 256)) ^ v59)) - 12);
  *(&a58 + (457 * v60 + 1230577732) % 0x708u) = byte_100263EF0[(((4424 * (v63 ^ (v63 >> 7) ^ (v63 >> 3) ^ 0x42F29945)) & 0xF19FD6D8)
                                                              + ((2212 * (v63 ^ (v63 >> 7) ^ (v63 >> 3) ^ 0x42F29945)) ^ 0xF8CFEB6D)
                                                              + 122354471)
                                                             % 0x97F] ^ 0xD1;
  return v64();
}

uint64_t sub_10020E9D8@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  unint64_t v17;
  unsigned int v18;
  int v19;
  char v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t (*v37)(void);

  v11 = v5 * v9;
  v12 = v11 - 768014465 - ((((v11 - 768014465) * (unint64_t)a2) >> 32) >> 10) * a3;
  v13 = (((2 * (*(unsigned __int8 *)(a4 + v12) ^ 0x35)) & 0x148)
       + (*(unsigned __int8 *)(a4 + v12) ^ 0x35 ^ ((v6 ^ 0x151) - 1345095192)))
      * v9
      + 528239740;
  v14 = *(unsigned __int8 *)(a4 + v13 - (((v13 * (unint64_t)a2) >> 32) >> 10) * a3);
  v15 = (((2 * ~v14) & 0xFC) + v14) * v7 - 278712;
  v16 = *(unsigned __int8 *)(v10 + v15 - (((v15 * (unint64_t)v8) >> 32) >> 10) * a1);
  HIDWORD(v17) = v16 ^ 0x70;
  LODWORD(v17) = ~v16 << 24;
  v18 = (v17 >> 31) - ((2 * (v17 >> 31)) & 0x2A) - 107;
  v19 = (((v18 & 0xFC) >> 2) ^ 0x50) + ((v18 >> 1) & 0x6A ^ 0x4A) - 117;
  v20 = 2 * ((v19 & (v18 ^ 0x95)) - ((2 * (v19 & (v18 ^ 0x95))) & 0x26));
  v21 = (((v19 + (v18 ^ 0x95)) ^ 0xD7)
                        + ((2 * (v19 + (v18 ^ 0x95))) & 0xAE)
                        + ((v20 - 90) ^ 0x23)
                        + ((2 * (v20 - 90)) & 0xF4 ^ 0xBB)
                        - 91);
  v22 = v18 ^ 0xC8 ^ ((~(v21 >> 3) | 0xE9) + (v21 >> 4) + 44);
  v23 = (((2 * v22) & 0xCC) + (v22 ^ 0x7FFFEB66)) * v7 + 16286956;
  v24 = *(unsigned __int8 *)(v10 + v23 - (((v23 * (unint64_t)v8) >> 32) >> 10) * a1);
  v25 = (2 * ((v24 ^ 0x5A) & 0x7F) + (v24 ^ 0x5FF7B725)) * v9 - 1362501495;
  v26 = *(unsigned __int8 *)(a4 + v25 - (((v25 * (unint64_t)a2) >> 32) >> 10) * a3);
  v27 = (((2 * (v26 ^ 0x7E)) & 0x14E) + (v26 ^ 0x5F65FFC1)) * v7 - 1296840812;
  LOBYTE(v27) = *(_BYTE *)(v10 + v27 - (((v27 * (unint64_t)v8) >> 32) >> 10) * a1) ^ 0xF0;
  LOBYTE(v27) = (-97 * v27 - ((62 * v27) & 0xF7) + 123) ^ 0x97;
  v28 = ((v27 ^ 0xFF7EBFFF) + 2 * v27) * v7 + 1560944465;
  v29 = *(unsigned __int8 *)(v10 + v28 - (((v28 * (unint64_t)v8) >> 32) >> 10) * a1);
  v30 = 23 * (v29 ^ 0xFFFFFFF0) - ((14 * v29) & 0x16) - 117;
  v31 = v30 ^ 0x28 ^ (((2 * ((v30 >> 3) & 9 ^ 0xFFFFFF88)) & 0x10) - ((v30 >> 3) & 9 ^ 0xFFFFFF88) - 95);
  v32 = (((2 * v31) & 0x136) + (v31 ^ 0x754F939B)) * v9 - 1795966067;
  v33 = *(unsigned __int8 *)(a4 + v32 - (((v32 * (unint64_t)a2) >> 32) >> 10) * a3);
  v34 = (((2 * (v33 ^ 0x25)) & 0xFFFFFFDF) + (v33 ^ 0x6EE3FBDA)) * v9 + 185026201;
  *(_BYTE *)(a4
           + v11
           - 767455097
           - ((((v11 - 767455097) * (unint64_t)a2) >> 32) >> 10) * a3) = *(_BYTE *)(a4 + v34 - (((v34 * (unint64_t)a2) >> 32) >> 10) * a3);
  LODWORD(v12) = (((2 * (*(unsigned __int8 *)(a4 + v12) ^ 1)) & 0x12) + (*(unsigned __int8 *)(a4 + v12) ^ 0x4FF6FF3C))
               * v9
               + 1075232047;
  LODWORD(v12) = *(unsigned __int8 *)(a4
                                    + v12
                                    - (((v12 * (unint64_t)a2) >> 32) >> 10) * a3);
  LODWORD(v12) = (((2 * (v12 ^ 0x8D)) & 0xFFFFFFBF) + (v12 ^ 0x76BFF672)) * v7 - 313597660;
  LODWORD(v12) = *(unsigned __int8 *)(v10
                                    + v12
                                    - (((v12 * (unint64_t)v8) >> 32) >> 10) * a1);
  HIDWORD(v17) = v12 ^ 0x70;
  LODWORD(v17) = ~(_DWORD)v12 << 24;
  v35 = ((v17 >> 31) - ((2 * (v17 >> 31)) & 0x92) - 55);
  LODWORD(v12) = (((2 * (((v17 >> 31) - ((2 * (v17 >> 31)) & 0xFFFFFF92) - 55) ^ (v35 >> 4) ^ (v35 >> 6) ^ 0x3C)) & 0x176)
                + ((((v17 >> 31) - ((2 * (v17 >> 31)) & 0x92) - 55) ^ (v35 >> 4) ^ (v35 >> 6)) ^ 0xFFBBFE87))
               * v9
               + 2036774509;
  LODWORD(v12) = *(unsigned __int8 *)(a4
                                    + v12
                                    - (((v12 * (unint64_t)a2) >> 32) >> 10) * a3);
  LODWORD(v12) = (((2 * (v12 ^ 0xA2)) & 0xFFFFFFF7) + (v12 ^ 0x6DDE775D)) * v7 - 1443337376;
  LODWORD(v12) = *(unsigned __int8 *)(v10
                                    + v12
                                    - (((v12 * (unint64_t)v8) >> 32) >> 10) * a1) ^ 0xFFFFFFF0;
  LODWORD(v12) = 23 * v12 - ((46 * v12) & 0xFFFFFFD8) + 108;
  v36 = ((v12 >> 3) & 9 ^ 0xFFFFFFFE) + ((v12 >> 2) & 0x10) + 2;
  LODWORD(v12) = v12 ^ 0x2D ^ ((v36 & 0x70 ^ 0x20) + (v36 ^ 0x5B) - ((v36 ^ 0x5B) & 0x72));
  LODWORD(v12) = (((2 * v12) & 0x16C) + (v12 ^ 0x1EE7F8B6)) * v9 - 739819942;
  LODWORD(v12) = *(unsigned __int8 *)(a4
                                    + v12
                                    - (((v12 * (unint64_t)a2) >> 32) >> 10) * a3) ^ 0x35;
  LODWORD(v12) = (((2 * v12) & 0x12E) + (v12 ^ 0x2DFEF297)) * v9 - 471534415;
  v37 = (uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((486 * (v5 == 1016684344)) ^ v6)) - 12);
  *(_BYTE *)(a4
           + v11
           - 767776825
           - ((((v11 - 767776825) * (unint64_t)a2) >> 32) >> 10) * a3) = *(_BYTE *)(a4 + v12 - (((v12 * (unint64_t)a2) >> 32) >> 10) * a3);
  return v37();
}

uint64_t sub_10020EF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned __int8 a68;
  unsigned __int8 a72;
  int v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  uint64_t v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;

  HIDWORD(a45) = 4 * (v72 ^ 0x1E1);
  HIDWORD(a34) = -4233477;
  v74 = *(unsigned __int8 *)((LODWORD(STACK[0x178C]) ^ 0xEFEBDECD3076A091)
                           + a63
                           + ((2 * (LODWORD(STACK[0x178C]) ^ 0xCDEADFEE)) & 0x1FB38FEFELL)
                           + 0x1014213202638081) ^ LOBYTE(STACK[0x563]) ^ 0xAF;
  v75 = a68 ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1484]) ^ 0x7DFF7BFFBA173C37)
                                        + ((2 * (LODWORD(STACK[0x1484]) ^ 0xCDEADFEE)) & 0xEFFBC7B2)
                                        + a63
                                        - 0x7DFF7BFF77FDE3D9);
  v76 = LOBYTE(STACK[0x39A]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1608]) ^ 0x3F3F7EE43406AC21)
                                                         + a63
                                                         + ((2 * (LODWORD(STACK[0x1608]) ^ 0xCDEADFEE)) & 0x1F3D8E79ELL)
                                                         - 0x3F3F7EE4F9EC73CFLL);
  v77 = *(unsigned __int8 *)((LODWORD(STACK[0x1300]) ^ 0x7FDFBFDF2239AC90)
                           + a63
                           + ((2 * (LODWORD(STACK[0x1300]) ^ 0xCDEADFEE)) & 0x1DFA6E6FCLL)
                           - 0x7FDFBFDFEFD3737ELL) ^ 0x9A;
  v78 = (((v74 - ((v74 << ((BYTE4(a45) - 120) ^ 0xFD)) & 0x164)) << 16) + 984743936) ^ 0x3AB20000;
  v79 = (((v76 - ((2 * v76) & 0xF2)) << 8) + 2128128) ^ 0x207900;
  v80 = (v79 - 1543986477 - ((2 * v79) & 0x47F14400)) ^ 0xA3F8A2D3 | (v78 - 137560522 - ((2 * v78) & 0x6F980000)) ^ 0xF7CCFE36;
  v81 = (v80 + 1695720919 - ((2 * v80) & 0x4A254BAE)) ^ 0x6512A5D7 | (v75 + 1266102699 - ((2 * v75) & 0x156)) ^ 0x4B7731AB;
  v82 = (((v81 - ((2 * v81) & 0x705470)) << 8) + 942290944) ^ 0x382A3800;
  v83 = (v82 + 763929304 - ((2 * v82) & 0x5B114400)) ^ 0x2D88A2D8 | (v77 + 1607271547 - ((2 * v77) & 0xF6)) ^ 0x5FCD047B;
  *(_DWORD *)(*a64 - 0x5C1335008418C527) = ((LOBYTE(STACK[0x710]) ^ 0x35)
                                            - ((2 * (LOBYTE(STACK[0x710]) ^ 0x35)) & 0xA)
                                            - 1046315515) ^ 0x8F38327B ^ (v83 - ((2 * v83) & 0x6E12720) - 2089774192);
  v84 = LOBYTE(STACK[0x57F]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1D9C]) ^ 0x6F6FD76C32013874)
                                                         + a63
                                                         + ((2 * (LODWORD(STACK[0x1D9C]) ^ 0xCDEADFEE)) & 0x1FFD7CF34)
                                                         - 0x6F6FD76CFFEBE79ALL);
  v85 = *(unsigned __int8 *)((LODWORD(STACK[0x1C18]) ^ 0xD6FB7BFD62052050)
                           + a63
                           + ((2 * (LODWORD(STACK[0x1C18]) ^ 0xCDEADFEE)) & 0x15FDFFF7CLL)
                           + 0x2904840250100042) ^ LOBYTE(STACK[0x3B6]) ^ 0xAF;
  v86 = a72 ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1A94]) ^ 0xFFE7F70E311D7117)
                                        + a63
                                        + ((2 * (LODWORD(STACK[0x1A94]) ^ 0xCDEADFEE)) & 0x1F9EF5DF2)
                                        + 0x1808F103085107);
  v87 = (((v84 - ((2 * v84) & 0xFFFFFFE3)) << 16) + 2029060096) ^ 0x78F10000;
  v88 = (((v85 - (a7 & (2 * v85))) << 8) - 1454950144) ^ 0xA9473900;
  v89 = (v88 - 1305656242 - ((2 * v88) & 0x645A8800)) ^ 0xB22D444E | (v87 - 71522473 - ((2 * v87) & 0x77780000)) ^ 0xFBBCA757;
  v90 = (v89 + 2029037412 - ((2 * v89) & 0xF1E14EC8)) ^ 0x78F0A764 | (v86 - 505695816 - ((2 * v86) & 0x170)) ^ 0xE1DBB1B8;
  v91 = LOBYTE(STACK[0x72C]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1910]) ^ 0x96AC7BFD34102011)
                                                         + a63
                                                         + ((2 * (LODWORD(STACK[0x1910]) ^ 0xCDEADFEE)) & 0x1F3F5FFFELL)
                                                         + 0x6953840206050001);
  v92 = (((v90 - ((2 * v90) & 0x34E166)) << 8) + 443593472) ^ 0x1A70B300;
  v93 = (v92 + 1832372791 - ((2 * v92) & 0xDA6F9400)) ^ 0x6D37CA37 | (v91 + 1952444259 - ((2 * v91) & 0xC6)) ^ 0x745FEF63;
  *(_DWORD *)(*a64 - 0x5C1335008418C517) = v93 - 840245266 - ((2 * v93) & 0x9BD5BFDC);
  v94 = *(unsigned __int8 *)((LODWORD(STACK[0xCB8]) ^ 0x5E5EFEFF98550451)
                           + ((2 * (LODWORD(STACK[0xCB8]) ^ 0xCDEADFEE)) & 0xAB7FB77E)
                           + a63
                           - 0x5E5EFEFF55BFDBBFLL);
  v95 = ((2 * (v94 ^ 0x92)) & 0xFFFFFFEF) + (v94 ^ 0xF7FDF6D);
  v96 = *(unsigned __int8 *)((LODWORD(STACK[0x9B0]) ^ 0x3EF4BFFC401F3075)
                           + a63
                           + ((2 * (LODWORD(STACK[0x9B0]) ^ 0xCDEADFEE)) & 0x11BEBDF36)
                           - 0x3EF4BFFC8DF5EF9BLL) ^ LOBYTE(STACK[0x748]) ^ 0xAF;
  v97 = LOBYTE(STACK[0x59B]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0xE3C]) ^ 0x4E7FBFBB1A95D412)
                                                         + a63
                                                         + ((2 * (LODWORD(STACK[0xE3C]) ^ 0xCDEADFEE)) & 0x1AEFE17F8)
                                                         - 0x4E7FBFBBD77F0BFCLL);
  v98 = (((v97 - ((2 * v97) & 0x116)) << 8) + 1365543680) ^ 0x51648B00;
  v99 = ((LOBYTE(STACK[0x3D2]) ^ 0x35) - 1328085113 - ((2 * (LOBYTE(STACK[0x3D2]) ^ 0x35)) & 0xFFFFFF0F)) ^ 0xB0D70787;
  v100 = (v98 + 590282016 - ((2 * v98) & 0x465DFA00)) ^ 0x232EFD20 | v99;
  v101 = (v100 ^ 0xFE7B7F) + v95 + ((2 * v100) & 0xFCF6FE);
  v102 = (((v99 & (v95 - 260038647)) - ((2 * (v99 & (v95 - 260038647))) & 0x14EF22)) << 9) - 1796267520;
  v103 = *(unsigned __int8 *)((LODWORD(STACK[0xB34]) ^ 0x7E35DFE51A15A811)
                            + a63
                            + ((2 * (LODWORD(STACK[0xB34]) ^ 0xCDEADFEE)) & 0x1AFFEEFFELL)
                            - 0x7E35DFE5D7FF77FFLL) ^ 0x9A;
  v104 = ((v102 ^ 0x4EE2401)
        + ((2 * v102) & 0xDFFDF000 ^ 0xF623BFFF)
        + (((v101 << 8) - 2119923200) ^ 0x7B9DD6BD)
        + ((2 * ((v101 << 8) - 2119923200)) & 0xF73BAC00)
        - 194960573) | (v103 + 15399397 - ((2 * v103) & 0x1CA)) ^ 0xEAF9E5;
  v105 = (((v104 - ((2 * v104) & 0x95548A) + 4893253) ^ ((LOBYTE(STACK[0x209]) ^ 0x35)
                                                       - ((2 * (LOBYTE(STACK[0x209]) ^ 0x35)) & 0x64)
                                                       + 16695090)) << 8) ^ 0xB4157700;
  v106 = (v105 - 1080051247 - ((2 * v105) & 0x7F3F7200)) ^ 0xBF9FB9D1 | (v96 - 1207087621 - ((2 * v96) & 0xFFFFFFF7)) ^ 0xB80D4DFB;
  *(_DWORD *)(*a64 - 0x5C1335008418C507) = v106 - 840245266 - ((2 * v106) & 0x9BD5BFDC);
  LODWORD(v146) = (*(unsigned __int8 *)(v73 - 117) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v73 - 117) ^ 0x3E)) & 0x1EC);
  v107 = *(unsigned __int8 *)((LODWORD(STACK[0x19FC]) ^ 0x73E69F7F2F144095)
                            + a63
                            + ((2 * (LODWORD(STACK[0x19FC]) ^ 0xCDEADFEE)) & 0x1C5FD3EF6)
                            - 0x73E69F7FE2FE9F7BLL);
  HIDWORD(v150) = (*(unsigned __int8 *)(v73 - 120) ^ 0x3E)
                + 1388346255
                - ((2 * (*(unsigned __int8 *)(v73 - 120) ^ 0x3E)) & 0xFFFFFF1F);
  v108 = (LOBYTE(STACK[0x2CB]) ^ 0xAF ^ v107) - ((2 * (LOBYTE(STACK[0x2CB]) ^ 0xAF ^ v107)) & 0x1B8);
  HIDWORD(v146) = 696;
  v109 = (*(unsigned __int8 *)(v73 - 118) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v73 - 118) ^ 0x3E)) & 0x78);
  v110 = *(unsigned __int8 *)((LODWORD(STACK[0x1878]) ^ 0x45DAD8AF3E5D1809)
                            + a63
                            + ((2 * (LODWORD(STACK[0x1878]) ^ 0xCDEADFEE)) & 0x1E76F8FCELL)
                            - 0x45DAD8AFF3B7C7E7) ^ 0x9A;
  HIDWORD(v147) = v110 - ((2 * v110) & 0x1AA);
  LODWORD(v150) = 147;
  v149 = (LODWORD(STACK[0x194C]) ^ 0x6AFDF823AAEF3619)
       + ((2 * (LODWORD(STACK[0x194C]) ^ 0xCDEADFEE)) & 0xCE0BD3EE)
       + a63;
  HIDWORD(a40) = 1490;
  v148 = (LODWORD(STACK[0x1644]) ^ 0xBFBDFB8F3258E821)
       + a63
       + ((2 * (LODWORD(STACK[0x1644]) ^ 0xCDEADFEE)) & 0x1FF646F9ELL);
  LODWORD(v147) = 136;
  v111 = ((((v109 << 8) - 1287177216) ^ 0xB3473C00)
        - 457241811
        - ((2 * (((v109 << 8) - 1287177216) ^ 0xB3473C00)) & 0x497E1600)) ^ 0xE4BF0B2D | (((((_DWORD)v146 << 16) - 655360) ^ 0xFFF60000)
                                                                                        - 602709904
                                                                                        - ((2
                                                                                          * ((((_DWORD)v146 << 16)
                                                                                            - 655360) ^ 0xFFF60000)) & 0xB8260000)) ^ 0xDC136070;
  v112 = (v111 - 423870275 - ((2 * v111) & 0xCD78817A)) ^ 0xE6BC40BD | ((*(unsigned __int8 *)(v73 - 119) ^ 0x3E)
                                                                      + 1162864727
                                                                      - ((2 * (*(unsigned __int8 *)(v73 - 119) ^ 0x3E)) & 0xAE)) ^ 0x454FE857;
  v113 = (((v112 - ((2 * v112) & 0x8E0AB6)) << 8) + 1191533312) ^ 0x47055B00;
  v114 = v113 - 726915169 - ((2 * v113) & 0xA9584E00);
  v115 = LOBYTE(STACK[0x79B]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0xE0C]) ^ 0xE89B3D3D289FA069)
                                                          + a63
                                                          + ((2 * (LODWORD(STACK[0xE0C]) ^ 0xCDEADFEE)) & 0x1CAEAFF0ELL)
                                                          + 0x1764C2C21A8A8079);
  v116 = v115 - ((2 * v115) & 0x44444444);
  v117 = ((LOBYTE(STACK[0x80A]) ^ 0x35) - 441110883 - ((2 * (LOBYTE(STACK[0x80A]) ^ 0x35)) & 0x13A)) ^ 0xE5B52E9D | ((((v108 << 8) - 1237459968) ^ 0xB63DDC00) - 1633368089 - ((2 * (((v108 << 8) - 1237459968) ^ 0xB63DDC00)) & 0x3D498E00)) ^ 0x9EA4C7E7;
  v118 = v117 - ((2 * v117) & 0xD090);
  v119 = LOBYTE(STACK[0x5D2]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0xC88]) ^ 0xFCFBFD7722011843)
                                                          + a63
                                                          + ((2 * (LODWORD(STACK[0xC88]) ^ 0xCDEADFEE)) & 0x1DFD78F5ALL)
                                                          + 0x304028810143853);
  v120 = v119 - ((2 * v119) & 0x128);
  v121 = LOBYTE(STACK[0x641]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x16F4]) ^ 0x7F6B6DFE30176072)
                                                          + a63
                                                          + ((2 * (LODWORD(STACK[0x16F4]) ^ 0xCDEADFEE)) & 0x1FBFB7F38)
                                                          - 0x7F6B6DFEFDFDBF9CLL);
  v122 = LOBYTE(STACK[0x478]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1570]) ^ 0x8EEFDDFCF0552005)
                                                          + ((2 * (LODWORD(STACK[0x1570]) ^ 0xCDEADFEE)) & 0x7B7FFFD6)
                                                          + a63
                                                          + 0x71102203C2400015);
  v123 = LOBYTE(STACK[0x409]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0xB04]) ^ 0x31B5B65F22556040)
                                                          + a63
                                                          + ((2 * (LODWORD(STACK[0xB04]) ^ 0xCDEADFEE)) & 0x1DF7F7F5CLL)
                                                          - 0x31B5B65FEFBFBFAELL);
  v124 = ((((v120 << 8) + 782668800) ^ 0x2EA69400)
        - 348100583
        + (~(2 * (((v120 << 8) + 782668800) ^ 0x2EA69400)) | 0xA97F2FFF)
        + 1) ^ 0xEB406819 | ((((v116 << 16) - 1105068032) ^ 0xBE220000)
                           + 1358512080
                           - ((2 * (((v116 << 16) - 1105068032) ^ 0xBE220000)) & 0x21F20000)) ^ 0x50F93FD0;
  v125 = *(unsigned __int8 *)((LODWORD(STACK[0x980]) ^ 0xDAFE3BF7F2877071)
                            + ((2 * (LODWORD(STACK[0x980]) ^ 0xCDEADFEE)) & 0x7EDB5F3E)
                            + a63
                            + 0x2501C408C0925061) ^ LOBYTE(STACK[0x240]) ^ 0xAF;
  v126 = (((((v118 + 59464) ^ (HIDWORD(v147) + 8917)) << 16) ^ 0xCA9D0000)
        + 359443825
        - ((2 * ((((v118 + 59464) ^ (HIDWORD(v147) + 8917)) << 16) ^ 0xCA9D0000)) & 0x2AD80000)) ^ 0x156CAD71 | (((((v121 + 224668 - ((2 * v121) & 0xB6)) << 8) + 114432) ^ 0x36F5B00) - 65547654 - ((2 * ((((v121 + 224668 - ((2 * v121) & 0xB6)) << 8) + 114432) ^ 0x36F5B00)) & 0x782FA400)) ^ 0xFC17D27A;
  v127 = (v124 - 2122961011 - ((2 * v124) & 0x2EC5F1A)) ^ 0x81762F8D | (v123 + 105282250 - ((2 * v123) & 0x194)) ^ 0x6467ACA;
  v128 = (((v127 - ((2 * v127) & 0xAE804C)) << 8) - 683661824) ^ 0xD7402600;
  v129 = (v126 + 681187659 - ((2 * v126) & 0x51343296)) ^ 0x289A194B | (v122 - 1363689782 - ((2 * v122) & 0x194)) ^ 0xAEB7BECA;
  v130 = LODWORD(STACK[0xAF0]) ^ ((v114 ^ 0xD4AC279F | HIDWORD(v150) ^ 0x52C07B8F)
                                - ((2 * (v114 ^ 0xD4AC279F | HIDWORD(v150) ^ 0x52C07B8F)) & 0x5DAD9F6A)
                                - 1361653835) ^ (v125 - ((2 * v125) & 0x1F8) + 1186689788);
  v131 = *(unsigned __int8 *)(v149 - 0x6AFDF8236705E9F7);
  v132 = LOBYTE(STACK[0x5C9]);
  v133 = *(unsigned __int8 *)(v148 + 0x40420470004DC831);
  v134 = *(unsigned __int8 *)((LODWORD(STACK[0x17C8]) ^ 0x7DFEFFDF36973001)
                            + a63
                            + ((2 * (LODWORD(STACK[0x17C8]) ^ 0xCDEADFEE)) & 0x1F6FBDFDELL)
                            - 0x7DFEFFDFFB7DEFEFLL);
  v135 = LOBYTE(STACK[0x792]);
  v136 = LOBYTE(STACK[0x253]);
  v137 = LOBYTE(STACK[0x400]);
  v138 = *(unsigned __int8 *)((LODWORD(STACK[0x14C0]) ^ 0x46FCFEEF3F55AA90)
                            + a63
                            + ((2 * (LODWORD(STACK[0x14C0]) ^ 0xCDEADFEE)) & 0x1E57EEAFCLL)
                            - 0x46FCFEEFF2BF757ELL);
  *(_DWORD *)(*a64 - 0x5C13350084191667) = v130 ^ (v128 - ((2 * v128) & 0xD878EA00) + 1815901562) ^ 0x81B362E1 ^ (v129 - ((2 * v129) & 0xBC555A4) + 98740946);
  v139 = (v131 ^ v136 ^ 0xAF) - ((2 * (v131 ^ v136 ^ 0xAF)) & 0xC4);
  v140 = ((((v134 ^ v135 ^ 0xAF) - ((2 * (v134 ^ v135 ^ 0xAF)) & 0x30)) << 8) - 1574627328) ^ 0xA2251800;
  v141 = ((((v139 << 16) - 731774976) ^ 0xD4620000)
        + 34265122
        - ((2 * (((v139 << 16) - 731774976) ^ 0xD4620000)) & 0x4140000)) ^ 0x20AD822 | (v140
                                                                                      + 1329041776
                                                                                      - ((2 * v140) & 0x1E6F2200)) ^ 0x4F379170;
  v142 = (v141 + 300819278 - ((2 * v141) & 0x23DC469C)) ^ 0x11EE234E | ((v132 ^ 0xAF ^ v133)
                                                                      + 284242992
                                                                      - ((2 * (v132 ^ 0xAF ^ v133)) & 0x60)) ^ 0x10F13430;
  v143 = (((v142 - ((2 * v142) & 0x76CB3C)) << 8) + 996515328) ^ 0x3B659E00;
  v144 = (v143 + 2000028025 - ((2 * v143) & 0xEE6C0200)) ^ 0x77360179 | ((v137 ^ 0xAF ^ v138)
                                                                       + 349346098
                                                                       - ((2 * (v137 ^ 0xAF ^ v138)) & 0x64)) ^ 0x14D29932;
  *(_DWORD *)(*a64 - 0x5C1335008418C597) = v144 - 840245266 - ((2 * v144) & 0x9BD5BFDC);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + (HIDWORD(a45) ^ 0xC8)) - 4))(175, v137, 175, a64, 1607707621, 359443825, 1358512080, 105282250, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           0xEE00000249,
           v146,
           v147,
           v148,
           202418848,
           a40,
           v149,
           v150,
           0x24000000409,
           1607707621,
           a45,
           0x13D8C8E760C506E2,
           0x7071305245A737B9,
           0x1C468AF27238D3EALL,
           0x78301B266752FF5ELL,
           0x2C6344EE322B531ELL,
           0x4B61D285394B5A7CLL);
}

void sub_1002106B8()
{
  JUMPOUT(0x10020F050);
}

uint64_t sub_1002106C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  _QWORD *a65;
  char a66;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;

  v67 = ((a59 - 41) ^ 0x3B2) * v66;
  v68 = (((v66 - 1755748148) >> 2) ^ 0xDFF63B3F) + (((v66 - 1755748148) >> 1) & 0x3FEC767E);
  v69 = v67 + 1491214216;
  v70 = v67 + 1491214313;
  v71 = (v67 + 1491214313) / 0x55C;
  v72 = (v67 + 1491214216) % 0x55C;
  v73 = v67 + 1491214507;
  v74 = (v67 + 1491214507) / 0x55C;
  v67 += 1491237496;
  v75 = (v69 + 194) % 0x55C;
  v76 = *((_DWORD *)&STACK[0x8D0] + v73 - 1372 * v74) ^ 0xCDEADFEE;
  v77 = *((_DWORD *)&STACK[0x8D0] + v70 - 1372 * v71) ^ 0xCDEADFEE;
  v78 = *((_DWORD *)&STACK[0x8D0] + (v67 + 194) % 0x55C);
  v79 = *((_DWORD *)&STACK[0x8D0] + v72) ^ 0xCDEADFEE;
  v80 = *(unsigned __int8 *)((v76 ^ 0xFD5FF5BF9F377DF5) + a64 + ((2 * v76) & 0x13E6EFBEALL) + 0x2A00A4060C8820BLL);
  v81 = *((_DWORD *)&STACK[0x8D0] + (v67 + 97) % 0x55C);
  v82 = *(unsigned __int8 *)((v79 ^ 0xDD4FFF5EF4395FDALL) + a64 + ((2 * v79) & 0x1E872BFB4) + 0x22B000A10BC6A026);
  v83 = *(unsigned __int8 *)((*((unsigned int *)&STACK[0x8D0] + (v67 + 291) % 0x55C) ^ 0x36BEEF6F73042015)
                           + a64
                           + ((2 * (*((_DWORD *)&STACK[0x8D0] + (v67 + 291) % 0x55C) ^ 0xCDEADFEE)) & 0x17DDDFFF6)
                           - 0x36BEEF6FBEEEFFFBLL);
  LODWORD(v79) = *(unsigned __int8 *)((v78 ^ 0x3F775EFA32042755)
                                    + a64
                                    + ((2 * (v78 ^ 0xCDEADFEE)) & 0x1FFDDF176)
                                    - 0x3F775EFAFFEEF8BBLL);
  v84 = *(&a66 + (457 * v66 + 782496669) % 0x708u) ^ 0xAF ^ *(unsigned __int8 *)((v77 ^ 0xFFDF5A2BFDFB2BFFLL)
                                                                                                + a64
                                                                                                + ((2 * v77) & 0x1FBF657FELL)
                                                                                                + 0x20A5D40204D401);
  v85 = *(unsigned __int8 *)((v81 ^ 0x6EBFDF9FA2155031)
                           + ((2 * (v81 ^ 0xCDEADFEE)) & 0xDFFF1FBE)
                           + a64
                           - 0x6EBFDF9F6FFF8FDFLL);
  v86 = *(&a66 + (457 * v66 + 782497126) % 0x708u) ^ 0xAF ^ *(unsigned __int8 *)((*((unsigned int *)&STACK[0x8D0] + v75) ^ 0xDF5C5EED32392115)
                                                                                                + a64
                                                                                                + ((2
                                                                                                  * (*((_DWORD *)&STACK[0x8D0] + v75) ^ 0xCDEADFEE)) & 0x1FFA7FDF6)
                                                                                                + 0x20A3A112002C0105);
  v87 = *(&a66 + (457 * v66 + 782497583) % 0x708u);
  v88 = *(unsigned __int8 *)((*((unsigned int *)&STACK[0x8D0] + v67 % 0x55C) ^ 0xFBD3FF6F35B93D15)
                           + a64
                           + ((2 * (*((_DWORD *)&STACK[0x8D0] + v67 % 0x55C) ^ 0xCDEADFEE)) & 0x1F0A7C5F6)
                           + 0x42C009007AC1D05);
  v89 = (v80 ^ v87 ^ 0xAF) - ((2 * (v80 ^ v87 ^ 0xAF)) & 0x72);
  v90 = *(&a66 + (457 * v66 + 782496212) % 0x708u) ^ 0xAF ^ v82;
  v91 = (((v86 + (~(2 * v86) | 0xFFFE6F)) << 8) - 1161836288) ^ 0xBABFC800;
  v92 = (v91 + 648627832 - ((2 * v91) & 0x1528C00)) ^ 0x26A94678 | ((((v89 << 16) + 188284928) ^ 0xB390000)
                                                                  - 2093037758
                                                                  - ((2 * (((v89 << 16) + 188284928) ^ 0xB390000)) & 0x67C0000)) ^ 0x833EC742;
  v93 = (v92 - 1132174719 - ((2 * v92) & 0x7908C502)) ^ 0xBC846281 | (v84 + 1244682371 - ((2 * v84) & 0xFFFFFF07)) ^ 0x4A305883;
  v94 = (((v93 - ((2 * v93) & 0x15FCBE)) << 8) - 1963041024) ^ 0x8AFE5F00;
  v95 = (v94 - 50726303 - ((2 * v94) & 0xF9F3F400)) ^ 0xFCF9FA61 | (v90 - 1546092185 - ((2 * v90) & 0xCE)) ^ 0xA3D88167;
  v96 = *(&a66 + (457 * v66 + 782607263) % 0x708u);
  v97 = *(&a66 + (457 * v66 + 782605892) % 0x708u);
  v98 = *(&a66 + (457 * v66 + 782606349) % 0x708u);
  LODWORD(v76) = *(&a66 + (457 * v66 + 782606806) % 0x708u);
  *(_DWORD *)(((4 * (v68 + 552464382)) | ((unint64_t)(v68 + 552464382 < 0xE42B3D) << 34))
            + *a65
            - 0x5C13350087A9C35BLL) = *((_DWORD *)&STACK[0x8D0] + (97 * (v68 + 552464382) - 1450443037) % 0x55C) ^ 0xD098B6F8 ^ (v95 - 795298056 - ((2 * v95) & 0xA1316DF0));
  v99 = (v83 ^ v96 ^ 0xAF) + 2748688 - ((2 * (v83 ^ v96 ^ 0xAF)) & 0x1B2);
  v100 = ((((v99 << 8) - 210688) ^ 0x29EDD900) - 1726593683 - ((2 * (((v99 << 8) - 210688) ^ 0x29EDD900)) & 0x322C8A00)) ^ 0x9916456D | ((v79 ^ 0x9A) - 437786230 - ((2 * (v79 ^ 0x9A)) & 0x114)) ^ 0xE5E7E98A;
  v101 = (v85 ^ v98 ^ 0xAF) - ((2 * (v85 ^ v98 ^ 0xAF)) & 0x1D8);
  v102 = ((v76 ^ 0x35) - ((2 * (v76 ^ 0x35)) & 0x160) + 9136) ^ (v100 - ((2 * v100) & 0x8E) + 71);
  v103 = (((v102 << 16) ^ 0x23F70000) + 549956630 - ((2 * ((v102 << 16) ^ 0x23F70000)) & 0x418E0000)) ^ 0x20C7AC16 | ((((v101 << 8) - 1716982784) ^ 0x99A8EC00) + 168610752 - ((2 * (((v101 << 8) - 1716982784) ^ 0x99A8EC00)) & 0x14199600)) ^ 0xA0CCBC0;
  v104 = (v103 + 1941494546 - ((2 * v103) & 0xE771B624)) ^ 0x73B8DB12 | ((v88 ^ v97 ^ 0xAF)
                                                                       + 1480644925
                                                                       - ((2 * (v88 ^ v97 ^ 0xAF)) & 0x7A)) ^ 0x5840D93D;
  *(_DWORD *)(((4 * (v68 + 1117346493)) | ((unint64_t)(v68 + 1117346493 < 0x228F81C8) << 34))
            + *a65
            - 0x5C1335010E571D87) = v104 - 840245266 - ((2 * v104) & 0x9BD5BFDC);
  HIDWORD(a45) = a59 - 41;
  return ((uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((1216 * ((v66 - 1755748144) < 0x20)) ^ a59)) - 8))(1800, 549956630, &a66, 1372, 1480644925, 53, 168610752, 973640231, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_100210EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned int v64;
  int v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;

  HIDWORD(v70) = a8 + 21;
  LODWORD(v70) = ((HIDWORD(a45) + 235) ^ 0xC5F7750B) + a8;
  v71 = (v70 >> 5) - ((2 * (v70 >> 5)) & 0x954C8462) - 895073743;
  HIDWORD(v70) = v71 ^ 0x231;
  LODWORD(v70) = v71 ^ 0xCAA64000;
  v72 = (v70 >> 13) - ((2 * (v70 >> 13)) & 0x44C3D84C) - 1570640858;
  v73 = (((a8 - 973640199) >> 2) + 305686652 - (((a8 - 973640199) >> 1) & 0x2470D0F8)) ^ 0x1238687C;
  HIDWORD(v70) = v72 ^ 0x2C26;
  LODWORD(v70) = v72 ^ 0xA261C000;
  v74 = ((194 * v73) & 0xBD3F4EFE) + ((v73 * v68) ^ 0xDE9FA77F) + 559987073;
  v75 = v74 - (((v74 * (unint64_t)v64) >> 32) >> 10) * a4;
  v76 = ((v70 >> 14) - 1248845602 - ((2 * (v70 >> 14)) & 0x6B2041BC)) ^ 0xB59020DE;
  v77 = *(unsigned __int8 *)(a3 + 457 * a8 + 1723544708 - (457 * a8 + 1723544708) / 0x708u * a1) ^ v67 ^ *(unsigned __int8 *)((*(unsigned int *)(v66 + 4 * (a8 * v68 + 46274232 - ((((a8 * v68 + 46274232) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xFFE9B7F73600229DLL) + a63 + ((2 * (*(_DWORD *)(v66 + 4 * (a8 * v68 + 46274232 - ((((a8 * v68 + 46274232) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xCDEADFEE)) & 0x1F7D5FAE6) + 0x1648080415028DLL);
  v78 = ((194 * v76) & 0xFFFBDAFA) + 133418 + ((v76 * v68) ^ 0xFFFDED7D) + 2393;
  v79 = v77 - ((2 * v77) & 0xE0);
  v80 = *(unsigned __int8 *)(a3 + 457 * a8 + 1723543337 - (457 * a8 + 1723543337) / 0x708u * a1) ^ a6;
  v81 = *(_DWORD *)(v66 + 4 * (v78 - (((v78 * (unint64_t)v64) >> 32) >> 10) * (_DWORD)a4)) ^ 0xCDEADFEE;
  v82 = *(unsigned __int8 *)(a3 + 457 * a8 + 1723544251 - (457 * a8 + 1723544251) / 0x708u * a1) ^ v67 ^ *(unsigned __int8 *)((*(unsigned int *)(v66 + 4 * (a8 * v68 + 46274135 - ((((a8 * v68 + 46274135) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xFFE7FFB730352195) + a63 + ((2 * (*(_DWORD *)(v66 + 4 * (a8 * v68 + 46274135 - ((((a8 * v68 + 46274135) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xCDEADFEE)) & 0x1FBBFFCF6) + 0x18004802200185);
  v83 = (((v82 - ((2 * v82) & 0x50)) << 8) - 4904960) ^ 0xFFB52800;
  v84 = (v83 - 179460259 - ((2 * v83) & 0x6A9B4E00)) ^ 0xF54DA75D | ((((v79 << 16) + 108003328) ^ 0x6700000)
                                                                   - 2053040257
                                                                   - ((2 * (((v79 << 16) + 108003328) ^ 0x6700000)) & 0xB420000)) ^ 0x85A1177F;
  v85 = (2 * v84) & 0x659B691A;
  v86 = v84 - 221399923 - v85;
  v87 = *(unsigned __int8 *)(a3 + 457 * a8 + 1723543794 - (457 * a8 + 1723543794) / 0x708u * a1) ^ v67 ^ *(unsigned __int8 *)((*(unsigned int *)(v66 + 4 * (a8 * v68 + 46274038 - ((((a8 * v68 + 46274038) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xFDECEDA926176CB1) + a63 + ((2 * (*(_DWORD *)(v66 + 4 * (a8 * v68 + 46274038 - ((((a8 * v68 + 46274038) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xCDEADFEE)) & 0x1D7FB66BELL) + 0x213125614024CA1);
  v88 = v86 ^ 0xF2CDB48D | (v87 - 684293365 - ((2 * v87) & 0x16)) ^ 0xD736830B;
  LODWORD(v81) = *(unsigned __int8 *)((v81 ^ 0x7F757D6EFFB367FFLL)
                                    + a63
                                    + ((2 * v81) & 0x1FF66CFFELL)
                                    - 0x7F757D6EFFB367FFLL) ^ v65;
  v89 = (((v88 + 8958960 - ((2 * v88) & 0x1167A0)) << 8) - 0x2000) ^ 0x88B3D000;
  v90 = (v89 + 1553277056 - ((2 * v89) & 0xB92A4000)) ^ 0x5C952080 | (v80 - 919347685 - ((2 * v80) & 0x36)) ^ 0xC933DE1B;
  *(_DWORD *)(*a64
            + 4
            * (((((a8 - 973640199) >> 2) + 305686652 - (((a8 - 973640199) >> 1) & 0x2470D0F8)) ^ 0x3BB37CFBE4CF9EC7)
             + ((2 * v73) & 0x1EDEFED76))
            - 0x4AE128F05FF8F153) = (v81 - ((2 * v81) & 0x100) - 1307673216) ^ *(_DWORD *)(v66 + 4 * v75) ^ 0x9A56AF52 ^ (v90 - ((2 * v90) & 0x50B1A5A4) + 676909778);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 + 8 * ((47 * ((a8 - 973640195) < 0x60)) ^ HIDWORD(a45))) - 8))(a1, 3375619611, a3, a4, v86, a6, v85, (a8 + 4), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1002113E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  char a65;
  int v65;
  unsigned int v66;
  unint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  uint64_t v86;
  unint64_t v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v95;

  v95 = (((v65 - 983819217) >> 1) & 0x73FDBFFE) + (((v65 - 983819217) >> 2) ^ 0x79FEDFFF);
  HIDWORD(a45) = (457 * v65 + 1366781210) % 0x708u;
  v66 = (97 * v65 - 941073636) % 0x55Cu;
  v67 = &STACK[0x8D0];
  v68 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 941090514) % 0x55Cu) ^ 0xCDEADFEE;
  v69 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 941090611) % 0x55Cu) ^ 0xCDEADFEE;
  v70 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 941074719 + 590 * (a59 ^ 0x4BCu)) % 0x55C) ^ 0xCDEADFEE;
  LODWORD(v70) = *(unsigned __int8 *)((v70 ^ 0x765E1DFBBDCBFFB7)
                                    + a63
                                    + ((2 * v70) & 0x17B97FF6ELL)
                                    - 0x765E1DFBBDCBFFB7);
  v71 = *((_DWORD *)&STACK[0x8D0] + v66) ^ 0xCDEADFEE;
  v72 = *((unsigned int *)&STACK[0x8D0] + v66) ^ 0x76EFFFFF3317A029;
  v73 = *(unsigned __int8 *)((*((unsigned int *)v67 + (97 * v65 - 941073442) % 0x55Cu) ^ 0xF1EF7CBE930C0F10)
                           + ((2 * (*((_DWORD *)v67 + (97 * v65 - 941073442) % 0x55Cu) ^ 0xCDEADFEE)) & 0xBDCDA1FC)
                           + a63
                           + 0xE108341A1192F02);
  v74 = *(unsigned __int8 *)(v72 + a63 + ((2 * v71) & 0x1FDFAFF8ELL) - 0x76EFFFFFFEFD7FC7);
  v75 = (457 * v65 + 1366779839) % 0x708u;
  v76 = *(unsigned __int8 *)((*((unsigned int *)v67 + (97 * v65 - 941073733) % 0x55Cu) ^ 0x579BFFFFB210E157)
                           + ((2 * (*((_DWORD *)v67 + (97 * v65 - 941073733) % 0x55Cu) ^ 0xCDEADFEE)) & 0xFFF47D72)
                           + a63
                           - 0x579BFFFF7FFA3EB9);
  v77 = *(unsigned __int8 *)((v69 ^ 0x25E7FE1BFF2F7FDDLL) + a63 + ((2 * v69) & 0x1FE5EFFBALL) - 0x25E7FE1BFF2F7FDDLL) ^ *(&a65 + (457 * v65 + 1366700321) % 0x708u) ^ 0xAF;
  v78 = *(unsigned __int8 *)((v68 ^ 0xBC7FA9BAF77FFE27) + a63 + ((2 * v68) & 0x1EEFFFC4ELL) + 0x43805645088001D9) ^ *(&a65 + (457 * v65 + 1366700778) % 0x708u);
  v79 = *(&a65 + (457 * v65 + 1366699864) % 0x708u) ^ *(unsigned __int8 *)((*((unsigned int *)v67
                                                                                             + (97 * v65 - 941090708)
                                                                                             % 0x55Cu) ^ 0xC77EB7DBA2153033)
                                                                                          + ((2
                                                                                            * (*((_DWORD *)v67
                                                                                               + (97 * v65 - 941090708)
                                                                                               % 0x55Cu) ^ 0xCDEADFEE)) & 0xDFFFDFBA)
                                                                                          + a63
                                                                                          + 0x3881482490001023);
  v80 = ((((v78 ^ 0xAF) - ((2 * v78) & 0x20)) << 16) + 907018240) ^ 0x36100000;
  v81 = (((v77 - ((2 * v77) & 0x8C)) << 8) - 2082060800) ^ 0x83E64600;
  v82 = (v81 - 1155264805 - ((2 * v81) & 0x76481C00)) ^ 0xBB240EDB;
  v83 = (v80 + 469358098 - ((2 * v80) & 0x37F20000)) ^ 0x1BF9D612 | v82;
  v84 = v82 | ((v79 ^ 0xAF) - 1277821936 - ((2 * v79) & 0x20)) ^ 0xB3D5FC10;
  v85 = (v83 + 797155328 - ((2 * v83) & 0x5F0750C0) + 2144) ^ 0x2F83A000;
  v86 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 941090805) % 0x55Cu) ^ 0xCDEADFEE;
  HIDWORD(v87) = (v84 - ((2 * v84) & 0x5AC) + 2774) ^ 0xAD6;
  LODWORD(v87) = v85;
  v88 = (v87 >> 12) - ((2 * (v87 >> 12)) & 0x12C8F68C) + 157580102;
  HIDWORD(v87) = v88 ^ 0x47B46;
  LODWORD(v87) = v88 ^ 0x9600000;
  v89 = ((((v87 >> 20) - ((2 * (v87 >> 20)) & 0x4EC4EC)) << 8) + 660764160) ^ 0x27627600;
  v90 = (v89 - 744567601 - ((2 * v89) & 0xA73D9800)) ^ 0xD39ECCCF | *(&a65
                                                                                     + (457 * v65 + 1366699407) % 0x708u) ^ 0xAF ^ *(unsigned __int8 *)((v86 ^ 0x7CFFD05FCC5F4DBFLL) + a63 + ((2 * v86) & 0x198BE9B7ELL) - 0x7CFFD05FCC5F4DBFLL);
  v91 = *(&a65 + HIDWORD(a45));
  LODWORD(v86) = *(&a65 + (457 * v65 + 1366780753) % 0x708u);
  LODWORD(v68) = *(&a65 + (457 * v65 + 1366780296) % 0x708u);
  v92 = *(&a65 + v75);
  *(_DWORD *)(((4 * (v95 - 948176075)) | ((unint64_t)(v95 - 948176075 < 0x417ADB34) << 34))
            + *a64
            - 0x5C1335018A048337) = *((_DWORD *)&STACK[0x8D0] + (97 * (v95 - 948176075) + 812864076) % 0x55C) ^ 0x9DB1F96A ^ (v90 - 1649280662 - ((2 * v90) & 0x3B63F2D4));
  LODWORD(v70) = (v86 ^ 0xAF ^ v70) - ((2 * (v86 ^ 0xAF ^ v70)) & 0x54);
  v93 = ((((v91 ^ 0xAF ^ v73) - ((2 * (v91 ^ 0xAF ^ v73)) & 0x194)) << 16) - 775290880) ^ 0xD1CA0000;
  LODWORD(v70) = (((((_DWORD)v70 << 8) + 1284319744) ^ 0x4C8D2A00)
                - 964721240
                - ((2 * ((((_DWORD)v70 << 8) + 1284319744) ^ 0x4C8D2A00)) & 0xCFF0A00)) ^ 0xC67F85A8 | (v93 + 1537997168 - ((2 * v93) & 0x37560000)) ^ 0x5BABF970;
  LODWORD(v70) = (v70 - 971563414 - ((2 * v70) & 0xC2E3CD4)) ^ 0xC6171E6A | ((v68 ^ 0x35)
                                                                           - 1983866162
                                                                           - ((2 * (v68 ^ 0x35)) & 0x19C)) ^ 0x89C09ACE;
  LODWORD(v70) = ((((_DWORD)v70 - ((2 * (_DWORD)v70) & 0x716EB0) + 3716952) ^ ((v74 ^ 0x9A)
                                                                             - ((2 * (v74 ^ 0x9A)) & 0x60)
                                                                             + 14767920)) << 8) ^ 0xD9E06800;
  LODWORD(v70) = (v70 - 1236721392 + (~(2 * v70) | 0x936DBDFF) + 1) ^ 0xB6492110 | ((v76 ^ v92 ^ 0xAF)
                                                                                  + 1497875398
                                                                                  - ((2 * (v76 ^ v92 ^ 0xAF)) & 0x18C)) ^ 0x5947C3C6;
  *(_DWORD *)(((4 * (v95 - 466545364)) | ((unint64_t)(v95 - 466545364 < 0x5E2FE107) << 34))
            + *a64
            - 0x5C133501FCD89A83) = v70 - 840245266 - ((2 * v70) & 0x9BD5BFDC);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((641 * ((v65 - 983819213) < 0xB0)) ^ a59)) - 4))(1372, 1497875398, 1537997168, 2443359173, 2311101134, v74, v92, v75, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_100211C1C(int a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unint64_t v85;
  int v86;
  int v87;

  v74 = (((((v66 - 1015121341) & 0x3C81837F ^ 0xB0D56953) + v64) >> 2) ^ 0x7FB3FEFF)
      + (((((v66 - 1015121341) & 0x3C81837F ^ 0xB0D56953) + v64) >> 1) & 0x7F67FDFE);
  v75 = *(unsigned __int8 *)(v65
                           + 457 * v64
                           - 1392248410
                           - ((((457 * v64 - 1392248410) * (unint64_t)a4) >> 32) >> 10)
                           * v68) ^ v71 ^ *(unsigned __int8 *)((*(unsigned int *)(v69
                                                                                + 4
                                                                                * (v64 * v73
                                                                                 + 14613130
                                                                                 - ((((v64 * v73 + 14613130)
                                                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                                                 * a1)) ^ 0xEBBEBBDF295130D2)
                                                             + v70
                                                             + ((2
                                                               * (*(_DWORD *)(v69
                                                                            + 4
                                                                            * (v64 * v73
                                                                             + 14613130
                                                                             - ((((v64 * v73 + 14613130)
                                                                                              * (unint64_t)v67) >> 32) >> 10)
                                                                             * a1)) ^ 0xCDEADFEE)) & 0x1C977DE78)
                                                             + 0x144144201B4410C4);
  v76 = *(unsigned __int8 *)(v65
                           + 457 * v64
                           - 1392247953
                           - ((((457 * v64 - 1392247953) * (unint64_t)a4) >> 32) >> 10)
                           * v68) ^ v71 ^ *(unsigned __int8 *)((*(unsigned int *)(v69
                                                                                + 4
                                                                                * (v64 * v73
                                                                                 + 14613227
                                                                                 - ((((v64 * v73 + 14613227)
                                                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                                                 * a1)) ^ 0xCDEFFAEB772B3310)
                                                             + v70
                                                             + ((2
                                                               * (*(_DWORD *)(v69
                                                                            + 4
                                                                            * (v64 * v73
                                                                             + 14613227
                                                                             - ((((v64 * v73 + 14613227)
                                                                                              * (unint64_t)v67) >> 32) >> 10)
                                                                             * a1)) ^ 0xCDEADFEE)) & 0x17583D9FCLL)
                                                             + 0x32100514453E1302);
  v77 = *(unsigned __int8 *)(v65
                           + 457 * v64
                           - 1392248867
                           - ((((457 * v64 - 1392248867) * (unint64_t)a4) >> 32) >> 10)
                           * v68) ^ v71 ^ *(unsigned __int8 *)((*(unsigned int *)(v69
                                                                                + 4
                                                                                * (v64 * v73
                                                                                 + 14613033
                                                                                 - ((((v64 * v73 + 14613033)
                                                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                                                 * a1)) ^ 0x7FDFEFDF15FEE03BLL)
                                                             + v70
                                                             + ((2
                                                               * (*(_DWORD *)(v69
                                                                            + 4
                                                                            * (v64 * v73
                                                                             + 14613033
                                                                             - ((((v64 * v73 + 14613033)
                                                                                              * (unint64_t)v67) >> 32) >> 10)
                                                                             * a1)) ^ 0xCDEADFEE)) & 0x1B0287FAALL)
                                                             - 0x7FDFEFDFD8143FD5);
  v78 = (((v76 - ((2 * v76) & 0x1D4)) << 16) + 1391067136) ^ 0x52EA0000;
  v79 = (((v75 - ((2 * v75) & 0xFFFFFF87)) << 8) + 1536934656) ^ 0x5B9BC300;
  v80 = (v78 + 159748351 - ((2 * v78) & 0x130A0000)) ^ 0x98590FF | (v79 - 390378020 - ((2 * v79) & 0x51769A00)) ^ 0xE8BB4DDC;
  v81 = (v80 - 2058176291 - ((2 * v80) & 0xAA571BA)) ^ 0x8552B8DD | (v77 + 1183141481 - ((2 * v77) & 0xD2)) ^ 0x46854E69;
  v82 = *(unsigned __int8 *)(v65
                           + 457 * v64
                           - 1392249324
                           - ((((457 * v64 - 1392249324) * (unint64_t)a4) >> 32) >> 10)
                           * v68) ^ v71 ^ *(unsigned __int8 *)((*(unsigned int *)(v69
                                                                                + 4
                                                                                * (v64 * v73
                                                                                 + 14612936
                                                                                 - ((((v64 * v73 + 14612936)
                                                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                                                 * a1)) ^ 0x7ABFFA3F2AD40493)
                                                             + v70
                                                             + ((2
                                                               * (*(_DWORD *)(v69
                                                                            + 4
                                                                            * (v64 * v73
                                                                             + 14612936
                                                                             - ((((v64 * v73 + 14612936)
                                                                                              * (unint64_t)v67) >> 32) >> 10)
                                                                             * a1)) ^ 0xCDEADFEE)) & 0x1CE7DB6FALL)
                                                             - 0x7ABFFA3FE73EDB7DLL);
  v83 = (((((v81 - ((2 * v81) & 0xBC325C)) << 8) - 568775168) ^ 0xDE192E00)
       - 1515059021
       - ((2 * ((((v81 - ((2 * v81) & 0xBC325C)) << 8) - 568775168) ^ 0xDE192E00)) & 0x4B641000)) ^ 0xA5B208B3 | (v82 + 866642929 - ((2 * v82) & 0xFFFFFFE3)) ^ 0x33A7EBF1;
  v84 = (v83 + 2124698422 - ((2 * v83) & 0xFD48A98C) + 400) ^ *(_DWORD *)(v69
                                                                        + 4
                                                                        * (v74 * v73
                                                                         - 1664306375
                                                                         - ((((v74 * v73 - 1664306375)
                                                                                          * (unint64_t)v67) >> 32) >> 10)
                                                                         * a1));
  HIDWORD(v85) = v84 ^ 0x328;
  LODWORD(v85) = v84 ^ 0xB34E8800;
  v86 = (v85 >> 11) - ((2 * (v85 >> 11)) & 0x8C1EA08A) + 1175408709;
  HIDWORD(v85) = v86 ^ 0x60F5045;
  LODWORD(v85) = v86 ^ 0x40000000;
  v87 = (v85 >> 29) - ((2 * (v85 >> 29)) & 0xFBF5D946) + 2113596579;
  HIDWORD(v85) = v87 ^ 0xFAECA3;
  LODWORD(v85) = v87 ^ 0x7D000000;
  *(_DWORD *)(((4 * (v74 - 1143460493)) | ((unint64_t)(v74 - 1143460493 < 0x3B8C2C76) << 34))
            + *a64
            - 0x5C1335017249C83FLL) = (v85 >> 24) - 840245266 - ((2 * (v85 >> 24)) & 0x9BD5BFDC);
  return ((uint64_t (*)(void))(*(_QWORD *)(v72
                                        + 8
                                        * (((2 * ((v64 - 1328190704) < 0xE0)) | (32
                                                                                             * ((v64 - 1328190704) < 0xE0))) ^ v66))
                            - 4))();
}

uint64_t sub_1002120B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  char *v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;

  v68 = ((a46 + 30) + 1452221458 - ((2 * (a46 + 30)) & 0x24)) ^ 0x568F2412;
  v69 = &a65;
  v70 = *(&a65 + (((914 * v68) & 0x1BF7FE) + ((457 * v68) ^ 0x7FFDFBFFu) - 2147088319) % 0x708);
  v71 = *(_DWORD *)(v67 + 4 * ((1361 * (((2 * ~v70) & 0x1DEu) + v70) + 4459997) % 0x12E0));
  v72 = (2 * ((v71 ^ 0x8DE6BD5D) * (v71 ^ 0x8DE6BD5D) - ((2 * (v71 ^ 0x8DE6BD5D) * (v71 ^ 0x8DE6BD5D)) & 0x6AE2DF64))
       + 1793253220) ^ 0x6AE2DF64;
  v73 = (v72 - ((2 * v72) & 0x47A4833C) - 1546501729) ^ v71;
  v74 = (((v73 >> 15) & 8) + (BYTE2(v73) ^ 0xFFFFFFEC) + 2111900156) ^ 0x75E90DAB;
  v75 = (((2 * v74) & 0x1010141A) - v74 + 1431705074) ^ 0x5D5E11FA;
  v76 = (v73 & 0x21 ^ 0x9EC30001) + (v73 & 0xDE ^ 0x1089085);
  v77 = ((914 * (HIBYTE(v73) ^ 0xFD)) & 0x1E67A) + ((457 * (HIBYTE(v73) ^ 0xFD)) ^ 0x6AEEF33D) - 1793900293;
  LOWORD(v73) = ((2 * (BYTE1(v73) ^ 0x8F)) & 0x92) - (BYTE1(v73) ^ 0x8F) - 6218;
  v78 = (v73 & 0x2D15 ^ 0x2E720801) + (v73 & 0x12EA ^ 0x52A3);
  v79 = ((914 * v75) & 0xDDEF567A) + ((457 * v75) ^ 0xEEF7AB3D) + 285904899;
  v80 = 2443359173 * v79;
  v81 = v79 % 0x708;
  v82 = (((914 * ((v76 - 1) ^ 0x9FCB90E4)) & 0x69FBB6) + ((457 * ((v76 - 1) ^ 0x9FCB90E4)) ^ 0xDD74FDDB) + 579681637)
      % 0x708;
  v83 = (((914 * ((v78 - 1) ^ 0x2E727D27)) & 0xF7FD7F6) + ((457 * ((v78 - 1) ^ 0x2E727D27)) ^ 0x5FBFEBFBu) - 1606267067)
      % 0x708;
  v84 = *(&a65 + v81) ^ 0x35;
  v85 = ((((v69[v77 % 0x708] ^ 0x35) - ((2 * v69[v77 % 0x708]) & 0x94)) << 16)
       + 575275008) ^ 0x224A0000;
  v86 = (((v84 - ((2 * v84) & 0xFFFFFFEF)) << 8) - 170461440) ^ 0xF5D6F700;
  v87 = (v86 - 314174969 - ((2 * v86) & 0x100C2400)) ^ 0xED461207 | (v85 + 538835435 - ((2 * v85) & 0x403A0000)) ^ 0x201DF9EB;
  LODWORD(v69) = (v87 - 942465900 - ((2 * v87) & 0xFA63928)) ^ 0xC7D31C94 | ((v69[v83] ^ 0x35)
                                                                           - 1588985342
                                                                           - ((2 * v69[v83]) & 4)) ^ 0xA14A0202;
  LODWORD(v69) = ((((_DWORD)v69 - ((2 * (_DWORD)v69) & 0x5992D4)) << 8) - 1396086272) ^ 0xACC96A00;
  v88 = *(&a65 + v82) ^ 0x35;
  LODWORD(v69) = ((_DWORD)v69 + 1482264197 - ((2 * (_DWORD)v69) & 0xB0B31C00)) ^ 0x58598E85 | (v88
                                                                                             + 1901576646
                                                                                             - ((2 * v88) & 0x18C)) ^ 0x7157C1C6;
  LODWORD(v69) = a52 ^ 0xE67BC567 ^ ((_DWORD)v69 - 428096153 - ((2 * (_DWORD)v69) & 0xCCF78ACE));
  *((_DWORD *)&STACK[0x8D0] + (97 * a46 + 1431856222) % 0x55Cu) = (_DWORD)v69
                                                                - 840245266
                                                                - ((2 * (_DWORD)v69) & 0x9BD5BFDC);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * ((1731 * (a46 != 1623525345)) ^ v65)) - 4))(3352501396, 2705981954, 538835435, v82, 1606413307, 6945718, v80, (a46 + 1), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100212598@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  int v61;
  uint64_t v62;

  *(_DWORD *)(*a57 + 4 * (v59 + 127 * (v57 ^ 0x25A)) - 0x5C1335027F1EDB5BLL) = *(_DWORD *)(v58
                                                                                         + 4
                                                                                         * ((_DWORD)v59 * a1
                                                                                          - 122780726
                                                                                          - ((((v59 * a1 - 122780726) * (unint64_t)v60) >> 32) >> 10)
                                                                                          * v61));
  return ((uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * (((4 * (v59 == 2126610677)) | (32 * (v59 == 2126610677))) ^ v57))
                            - 4))();
}

uint64_t sub_100212618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;

  v70 = ((a47 + 25) + 808719906 - (((a47 + 25) << (((v67 + 100) & 0xE7) + 58)) & 0x44)) ^ 0x30341622;
  v71 = *(&a67 + (((914 * v70) & 0xF73B8) + ((457 * v70) ^ 0x5FFFB9DCu) - 1610331548) % 0x708);
  v72 = ((v71 ^ 0x35) - ((2 * v71) & 0x84) + 1444787522) ^ *(_DWORD *)(v69
                                                                     + 4
                                                                     * ((1361 * ((v71 ^ 0x7D3FFF3E) + 2 * (v71 ^ 0xC1u))
                                                                       + 521385583)
                                                                      % 0x12E0));
  v73 = (-484640518 - (BYTE1(v72) ^ 0xAE | 0xE31CF8FA) + (BYTE1(v72) ^ 0xAE | 0x1CE30705)) ^ 0xCE33744;
  v74 = ((914 * (HIBYTE(v72) ^ 0x95)) & 0x2ADBE) + ((457 * (HIBYTE(v72) ^ 0x95)) ^ 0x3F5F56DF) - 1063066527;
  v75 = BYTE2(v72) ^ 0x5A;
  v76 = ((914 * ((((2 * v73) | 0x52F70EBA) - v73 - 695961437) ^ 0x397BB757)) & 0x798677C6)
      + ((457 * ((((2 * v73) | 0x52F70EBA) - v73 - 695961437) ^ 0x397BB757)) ^ 0x3CC33BE3)
      - 1019281571;
  v77 = (((2 * (v72 ^ 0x75197)) & 0xAA37A) - (v72 ^ 0x75197) - 453892030) ^ 0xE4F57936;
  v78 = ((914 * v77) & 0x6BFDE7BC) + ((457 * v77) ^ 0x75FEF3DE) - 1979496606;
  v79 = *(&a67 + v74 % 0x708) ^ 0x35;
  v80 = *(&a67 + (((914 * v75) & 0x36D9C) + ((457 * v75) ^ 0xDCBFB6CE) + 591561842) % 0x708) ^ 0x35;
  v81 = *(&a67 + v76 % 0x708);
  v82 = *(&a67 + v78 % 0x708);
  v83 = (((v79 - ((2 * v79) & 0x130)) << 16) + 1217921024) ^ 0x48980000;
  v84 = (((v80 - 2 * (v80 & 7)) << 8) + 735053568) ^ 0x2BD00700;
  v85 = (v84 + 1053780282 - ((2 * v84) & 0x7D9ED200)) ^ 0x3ECF693A | (v83 - 1084725707 - ((2 * v83) & 0x7EB00000)) ^ 0xBF586635;
  v86 = (v85 + 1360643066 - ((2 * v85) & 0xA23387F4)) ^ 0x5119C3FA | ((v81 ^ 0x35)
                                                                    - 1143076202
                                                                    - ((2 * (v81 ^ 0x35)) & 0x12C)) ^ 0xBBDE0A96;
  v87 = (((v86 + 8958960 - ((2 * v86) & 0x11764E)) << 8) + 472832) ^ 0x88BB2700;
  v88 = (v87 + 980256466 - ((2 * v87) & 0x74DB0C00)) ^ 0x3A6D86D2 | ((v82 ^ 0x35)
                                                                   + 172615390
                                                                   - ((2 * (v82 ^ 0x35)) & 0x1BC)) ^ 0xA49E6DE;
  *((_DWORD *)&STACK[0x8D0] + (97 * a47 + 2061230201) % 0x55C) = a57 ^ 0xBB42FC3F ^ (v88
                                                                                   - ((2 * v88) & 0xAF30B892)
                                                                                   - 677880759);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((1376 * (a47 == 332974566)) ^ v67)) - 4))(172615390, 3151891094, 1360643066, 1053780282, 479639, 3810326778, a47, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100212AA8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  uint64_t v62;

  *(_DWORD *)(*a57 + 4 * v59 - 0x5C1335023DC1E8DFLL) = *(_DWORD *)(v57
                                                                 + 4
                                                                 * ((_DWORD)v59 * v60
                                                                  + 700181614
                                                                  - ((((v59 * v60 + 700181614)
                                                                                   * (unint64_t)v61) >> 32) >> 10)
                                                                  * v58));
  return ((uint64_t (*)(void))(*(_QWORD *)(v62
                                        + 8
                                        * (int)(((v59 != 1852458449) * ((a1 + 2135284022) & 0x80BA21CF ^ 0x1D1)) ^ a1))
                            - 12))();
}

uint64_t sub_100212B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;

  v69 = ((a47 + 71) - 841877590 - (((v66 - 180) ^ 0x4D) & (2 * (a47 + 71)))) ^ 0xCDD1F7AA;
  v70 = (((914 * v69) & 0xFEEFA) + ((457 * v69) ^ 0x2B87F77D) - 730067773) % 0x708;
  v71 = *(_DWORD *)(v68
                  + 4
                  * ((1361
                    * (((2 * (*(&a66 + v70) ^ 0x40)) & 0x1F8)
                     + (*(&a66 + v70) ^ 0xBAEDEEBE))
                    + 892682160)
                   % 0x12E0));
  v72 = ((HIWORD(v71) & 0x6C ^ 0x99012129) + (HIWORD(v71) & 0x93) - 1) ^ 0x990121E8;
  v73 = (479798241 - (v71 ^ 0x22C8412C | 0x1C9923E1) + (v71 ^ 0x22C8412C | 0xE366DC1E)) ^ 0xC1AE9D0A;
  v74 = (((v71 >> 8) & 0xA2 ^ 0xDCE04881) + ((v71 >> 8) & 0x5D) - 1) ^ 0xDCE048B8;
  v75 = *(&a66
                         + (((914 * (HIBYTE(v71) ^ 0x46)) & 0x3EEFE)
                          + ((457 * (HIBYTE(v71) ^ 0x46)) ^ 0xED9DF77F)
                          + 308560833)
                         % 0x708);
  v76 = *(&a66 + (((914 * v73) & 0xFC7ECF1E) + ((457 * v73) ^ 0xFE3F678F) + 29545393) % 0x708);
  v77 = *(&a66 + (((914 * v74) & 0x72F8B776) + ((457 * v74) ^ 0x397C5BBB) - 964305019) % 0x708);
  v78 = *(&a66 + (((914 * v72) & 0x6ECDCFA6) + ((457 * v72) ^ 0x3766E7D3) - 929344659) % 0x708);
  v79 = ((((v78 ^ 0x35) + 3816188 - ((2 * (v78 ^ 0x35)) & 0x1C4)) << 8) - 6656) ^ 0x3A3AE200;
  v80 = (v79 + 1641384672 - ((2 * v79) & 0x43AB1400)) ^ 0x61D58AE0 | ((((((v75 ^ 0x35) - ((2 * v75) & 0x84)) << 16)
                                                                      - 532545536) ^ 0xE0420000)
                                                                    + 370762824
                                                                    - ((2
                                                                      * ((((v75 ^ 0x35) - ((2 * v75) & 0x84)) << 16)
                                                                       - 532545536)) & 0x2C320000)) ^ 0x16196448;
  v81 = (v80 - 539035008 - ((2 * v80) & 0xBFBDF500)) ^ 0xDFDEFA80 | ((v77 ^ 0x35)
                                                                   - 1975319372
                                                                   - ((2 * (v77 ^ 0x35)) & 0x168)) ^ 0x8A4304B4;
  v82 = (((v81 + 431569 - ((2 * v81) & 0xD2B9A)) << 8) - 1024) ^ 0x695CD00;
  v83 = (v82 + 1859739939 + (~(2 * v82) | 0x224D3DFF) + 1) ^ 0x6ED96123 | ((v76 ^ 0x35)
                                                                         - 1061370192
                                                                         - ((2 * (v76 ^ 0x35)) & 0x160)) ^ 0xC0BCC6B0;
  *((_DWORD *)&STACK[0x8D0] + (97 * a47 - 1683758361) % 0x55C) = a54 ^ 0x2514F8A9 ^ (v83
                                                                                   - ((2 * v83) & 0xF18C4906)
                                                                                   - 121232253);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * ((29 * (a47 != 1168586936)) ^ v66)) - 8))(1859739939, 3755932288, 2319647924, 370762824, 3705686145, a47, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100212F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  *(_DWORD *)(*a64 + 4 * v69 - 0x5C1335022A15CB6BLL) = *(_DWORD *)(v68
                                                                 + 4
                                                                 * ((_DWORD)v69 * v65
                                                                  + 113932459
                                                                  - ((((v69 * v65 + 113932459)
                                                                                   * (unint64_t)v66) >> 32) >> 10)
                                                                  * v67));
  return ((uint64_t (*)(void))(*(_QWORD *)(v70 + 8 * (((v69 == 1769946228) * (v64 - 223)) ^ v64)) - 12))();
}

uint64_t sub_100213008@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  int v62;
  int v63;
  unint64_t v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  __int16 v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;

  v61 = ((a41 - 82) - 640464282 - ((2 * (a41 + 174)) & 0xCC)) ^ 0xD9D34A66;
  v62 = *(&a59 + (((914 * v61) & 0xD9CE6) + ((457 * v61) ^ 0x78FECE73) - 2029701683) % 0x708);
  v63 = *(_DWORD *)(v60 + 4 * ((1361 * (((2 * (v62 ^ 0x40)) & 0xF4) + (v62 ^ 0x75DAFF3Fu)) + 1861969566) % 0x12E0));
  HIDWORD(v64) = v63 ^ 0x8AB6;
  LODWORD(v64) = v63 ^ 0xB7AE0000;
  v65 = (v64 >> 16) - ((2 * (v64 >> 16)) & 0xF522EC88) - 91130300;
  v66 = ((16 * v65) & 0xED3E7FE0 ^ 0xA9166440) + ((8 * v65) ^ 0x22148DD7);
  v67 = (v66 - ((2 * v66 + 410605730) & 0x45EF2250) + 1865694587) ^ v65;
  v68 = (v67 ^ 0x27) + (v67 & 0xC1 ^ 0xC7C0) - ((v67 ^ 0x27) & 0xFFC1);
  v69 = ((v67 >> 23) & 0x15A ^ 0x52) + (HIBYTE(v67) ^ 0xE2F6994);
  v70 = (((2 * (((BYTE2(v67) ^ 0x49) + (HIWORD(v67) & 0xCD ^ 0x8C6CF084) - ((BYTE2(v67) ^ 0x49) & 0xCD)) ^ 0x8EE830C9)) | 0x127B090C)
       - (((BYTE2(v67) ^ 0x49) + (HIWORD(v67) & 0xCD ^ 0x8C6CF084) - ((BYTE2(v67) ^ 0x49) & 0xCD)) ^ 0x8EE830C9)
       + 1992457082) ^ 0x8BB944AC;
  v71 = (v69 - ((2 * v69 + 1671507750) & 0x5A200EA0) - 1629446429) ^ 0xAD100750;
  v72 = ((v68 & 0x40F5 ^ 0xC66F0030) + (v68 & 0x3F0A ^ 0x1000230B) - 1) ^ 0xD66F64F4;
  v73 = ((914 * v70) & 0x5AD6F3CA) + ((457 * v70) ^ 0x2D6B79E5) - 761872037;
  v74 = (((2 * (BYTE1(v67) ^ 4)) | 0x1B131354) - (BYTE1(v67) ^ 4) + 1651930710) & 0x1FFFFFFF ^ 0x1D898922;
  v75 = (457 * v74) ^ 0xFFF7FFE1;
  v76 = (914 * v74) & 0x7FEFFFC2;
  v77 = (((914 * v72) & 0x799BFFE) + ((457 * v72) ^ 0xFFCCDFFF) + 3496769) % 0x708;
  v78 = (v76 + v75 + 670559) % 0x708;
  v79 = *(&a59 + v73 % 0x708) ^ 0x35;
  v80 = *(&a59 + (((914 * v71) & 0xDF7BD3F6) + ((457 * v71) ^ 0x6FBDE9FB) - 1874717179) % 0x708) ^ 0x35;
  v81 = (((v80 - ((2 * v80) & 0x4A)) << 16) - 601554944) ^ 0xDC250000;
  v82 = (((v79 + (~(2 * v79) | 0xFFFE13)) << 8) + 1669789440) ^ 0x6386F600;
  v83 = (v81 + 2068773557 - ((2 * v81) & 0x769C0000)) ^ 0x7B4EFAB5 | (v82 + 2109369684 - ((2 * v82) & 0x4DA00)) ^ 0x7DBA6D54;
  v84 = *(&a59 + v78) ^ 0x35;
  v85 = (v83 - 1602716718 - ((2 * v83) & 0x40F0F7A4)) ^ 0xA0787BD2 | (v84 - 574143167 - ((2 * v84) & 0x82)) ^ 0xDDC74541;
  v86 = (((v85 - ((2 * v85) & 0x5D29B4)) << 8) - 1365976576) ^ 0xAE94DA00;
  v87 = *(&a59 + v77) ^ 0x35;
  v88 = (v86 - 1181128915 - ((2 * v86) & 0x7332CE00)) ^ 0xB999672D | (v87 + 535373732 - ((2 * v87) & 0x148)) ^ 0x1FE927A4;
  *((_DWORD *)&STACK[0x8D0] + (((a1 + 193) ^ 0x185u) * a41 + 1696379118) % 0x55C) = a48 ^ 0x5CD1F4ED ^ (v88 - ((2 * v88) & 0x6157F892) + 816577609);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * ((199 * (a41 == 1886466385)) ^ a1)) - 12))(v77, 3720824129, 2692250578, 2068773557, v73 / 0x708uLL, 2420250117, 3533095259, 1512050336, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_100213588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * v67 - 0x5C133501882B606BLL) = *(_DWORD *)(v68
                                                                 + 4
                                                                 * (v65
                                                                  + 132
                                                                  + 97 * (_DWORD)v67
                                                                  + 1564316931
                                                                  - ((((v65
                                                                                                  + 132
                                                                                                  + 97 * v67
                                                                                                  + 1564316931)
                                                                                   * (unint64_t)v64) >> 32) >> 10)
                                                                  * v66));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((908 * (v67 == 1090823604)) ^ v65)) - 12))();
}

uint64_t sub_100213600@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;

  v65 = ((a44 + 22) - 1101839811 - (((a44 + 22) << (a4 - 103)) & 0x7A)) ^ 0xBE53423D;
  v66 = (((914 * v65) & 0xEF8FA) + ((457 * v65) ^ 0xF67F7C7D) + 159680451) % 0x708;
  v67 = *(_DWORD *)(v64
                  + 4
                  * ((1361
                    * (((2 * (*(&a62 + v66) ^ 0x66666666)) & 0x16A)
                     + (*(&a62 + v66) ^ 0xBD77EDD1))
                    - 1250474674)
                   % 0x12E0)) ^ 0xB7AE8AB6;
  v68 = v67 - ((2 * v67 + 1468112052) & 0x944CF70A) - 169391649;
  v69 = ((BYTE1(v68) ^ 0x140A0A53) - ((2 * (BYTE1(v68) ^ 0x140A0A53)) & 0x40018) + 603423756) ^ 0x37FD8E48;
  v70 = ((914 * (HIBYTE(v68) ^ 0x40)) & 0x18FB6) + ((457 * (HIBYTE(v68) ^ 0x40)) ^ 0xFEFEC7DB) + 17003365;
  v71 = HIWORD(v68) & 0x77;
  v72 = ((BYTE2(v68) ^ 0x26) + (v71 ^ 0x551) - ((BYTE2(v68) ^ 0x26) & 0x77777777)) ^ 0x510;
  v73 = ((v68 ^ 0x82202D) - ((2 * (v68 ^ 0x82202D)) & 0x10441A8) + 1558148052) ^ 0x5C5D53D6;
  v74 = (457 * v73) ^ 0x67173B62;
  v75 = 914 * v73;
  v76 = *(&a62 + (((914 * v69) & 0xE3ABFFCE) + ((457 * v69) ^ 0xF1D5FFE7) + 237779801) % 0x708);
  v77 = *(&a62 + v70 % 0x708) ^ 0x35;
  v78 = *(&a62 + (((914 * v72) & 0xBED52) + ((457 * v72) ^ 0x2E75F6A9u) - 779336553) % 0x708);
  v79 = ((v75 & 0xCE2E76C4) + v74 - 1729429538) % 0x708;
  v80 = (((v77 - ((2 * v77) & 0x5E)) << 16) - 198246400) ^ 0xF42F0000;
  v81 = ((((v78 ^ 0x35) - ((2 * v78) & 0x180)) << 8) - 1624129536) ^ 0x9F31C000;
  v82 = (v81 - 1888522748 - ((2 * v81) & 0x1EDEDC00)) ^ 0x8F6F6E04 | (v80 - 2116520046 - ((2 * v80) & 0x3B00000)) ^ 0x81D87792;
  v83 = (v82 - 1425713834 - ((2 * v82) & 0x560AAAAC)) ^ 0xAB055556 | ((v76 ^ 0x35)
                                                                    + 1361851957
                                                                    - ((2 * (v76 ^ 0x35)) & 0x6A)) ^ 0x512C3635;
  v84 = *(&a62 + v79);
  v85 = (((v83 + 6548169 - ((2 * v83) & 0xC7D58A)) << 8) - 1024) ^ 0x63EAC500;
  v86 = (v85 - 1090744288 - ((2 * v85) & 0x7DF92000)) ^ 0xBEFC9020 | ((v84 ^ 0x35)
                                                                    + 2026043541
                                                                    - ((2 * (v84 ^ 0x35)) & 0x12A)) ^ 0x78C2F895;
  *((_DWORD *)&STACK[0x8D0] + (a44 * v62 - 1200114602) % 0x55Cu) = a57 ^ (v86 - ((2 * v86) & 0xCD102568) + 1720193716) ^ 0xF723962F;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * ((1881 * (a44 == 1916327145)) ^ a4)) - 12))(6548169, 2869253462, 1361851957, v71, (a44 + 1), a1, a2, a3, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_100213A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned int v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * v68 - 0x5C1335014B233957) = *(_DWORD *)(v66
                                                                 + 4
                                                                 * (97 * (_DWORD)v68
                                                                  + 625465104
                                                                  - ((((97 * v68 + 625465104)
                                                                                   * (unint64_t)v64) >> 32) >> 10)
                                                                  * v65));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((824 * (v68 == 834834415)) ^ v67))
                            - (v67 + 216)
                            + 1533))();
}

uint64_t sub_100213B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,unsigned int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;

  v70 = (((v67 + 46) ^ 0xC52EC4FC) + (a49 + 14) - ((2 * (a49 + 14)) & 0x196)) ^ 0xC52EC2CB;
  v71 = *(&a66 + (((914 * v70) & 0xC74F6) + ((457 * v70) ^ 0xAFFE3A7B) + 1342556613) % 0x708);
  v72 = ((v71 ^ 0x1B) - ((2 * (v71 ^ 0x1B)) & 0x170) - 695860552) ^ *(_DWORD *)(v69
                                                                              + 4
                                                                              * ((1361
                                                                                * (((2 * (v71 ^ 0x31)) & 0xFFFFFFE3)
                                                                                 + (v71 ^ 0x75D2FAC6))
                                                                                - 1720673467)
                                                                               % 0x12E0));
  v73 = (((2 * (v72 ^ 0x2F)) & 0x152) - (v72 ^ 0x2F) + 1568273238) ^ 0x5FD9F3F6;
  v74 = (v73 - ((2 * v73) & 0x4003D4C) + 726564518) ^ 0x29EE7EB6;
  v75 = (((v72 >> 8) & 0x64 ^ 0x241) + ((v72 >> 8) & 0x9B) - 1) ^ 0x2EE;
  v76 = *(&a66
                         + (((914 * (BYTE2(v72) ^ 0xB1)) & 0x1CDFE)
                          + ((457 * (BYTE2(v72) ^ 0xB1)) ^ 0x5FEEE6FFu)
                          - 1609345983)
                         % 0x708) ^ 0x35;
  v77 = *(&a66
                         + (((914 * (HIBYTE(v72) ^ 0xEF)) & 0x1FD7E)
                          + ((457 * (HIBYTE(v72) ^ 0xEF)) ^ 0xDF52FEBF)
                          + 548355201)
                         % 0x708) ^ 0x35;
  v78 = (((v77 - ((2 * v77) & 0xA6)) << 16) + 1985150976) ^ 0x76530000;
  v79 = (((v76 + 407983 - ((2 * v76) & 0x16E)) << 8) + 591872) ^ 0x642B700;
  v80 = (v78 - 1193866332 - ((2 * v78) & 0x71AE0000)) ^ 0xB8D70BA4 | (v79 - 494411640 - ((2 * v79) & 0x450FC000)) ^ 0xE287E088;
  v81 = *(&a66 + (((914 * v75) & 0xB2E16) + ((457 * v75) ^ 0x2FBD970Bu) - 800807883) % 0x708) ^ 0x35;
  v82 = a49 * v66 + 1229281870;
  v83 = (((((v80 + 1219128196 - ((2 * v80) & 0x1154D708)) ^ 0x48AA6B84 | (v81 - 409494593 - ((2 * v81) & 0xFFFFFF7F)) ^ 0xE7979BBF)
         - ((2
           * ((v80 + 1219128196 - ((2 * v80) & 0x1154D708)) ^ 0x48AA6B84 | (v81 - 409494593 - ((2 * v81) & 0xFFFFFF7F)) ^ 0xE7979BBF)) & 0xF61034)) << 8)
       - 83355136) ^ 0xFB081A00;
  v84 = *(&a66 + (((914 * v74) & 0xEEFBEEF4) + ((457 * v74) ^ 0xF77DF77A) + 142885830) % 0x708) ^ 0x35;
  v85 = (v83 + 1326814778 - ((2 * v83) & 0x9E2B2C00)) ^ 0x4F15963A | (v84 - 1737628850 - ((2 * v84) & 0x9C)) ^ 0x986DE34E;
  *((_DWORD *)&STACK[0x8D0] + v82 % 0x55C) = a56 ^ 0x9F9BDBE8 ^ (v85 - ((2 * v85) & 0x718A4D6C) + 952444598);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((318 * (a49 == 474385393)) ^ v67)) - 12))(1326814778, v82 / 0x55CuLL, 3885472703, 1219128196, 407983, a49, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_100213F8C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  uint64_t v57;
  unsigned int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;

  *(_DWORD *)(*a57 + 4 * v60 - 0x5C133501272E81B3) = *(_DWORD *)(v57
                                                                 + 4
                                                                 * (97 * (_DWORD)v60
                                                                  - 1925800615
                                                                  - ((((97 * v60 - 1925800615)
                                                                                   * (unint64_t)v58) >> 32) >> 10)
                                                                  * v59));
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * (((v60 == 684024070) * (a1 - 1488)) ^ a1)) - 8))();
}

uint64_t sub_100214000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49,uint64_t a50,uint64_t a51,int a52,int a53,int a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  char a68;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;

  v72 = ((a49 - 94) - 24552068 - (((a49 + 162) << (((v68 - 6) & 0xD5) - 20)) & 0xF8)) ^ 0xFE895D7C;
  v73 = (((914 * v72) & 0xAF3F6) + ((457 * v72) ^ 0x6FF579FB) - 1878095291) % 0x708;
  v74 = *(_DWORD *)(v71
                  + 4
                  * ((1361
                    * (2 * ((*(&a68 + v73) ^ 0x17) & 0x7F)
                     + (*(&a68 + v73) ^ 0x74FFDB68u))
                    - 68142032)
                   % 0x12E0));
  v75 = ((v74 ^ 0x2F) - ((2 * (v74 ^ 0x2F)) & 0x74) + 1338) ^ 0x58F;
  v76 = ((v74 >> 8) & 0xC5 ^ 0x4328A41) + ((v74 >> 8) & 0x3A ^ 0x80091011) - 1;
  v77 = (1084068179 - (BYTE2(v74) ^ 0xC9 | 0x409D9153) + (BYTE2(v74) ^ 0xC9 | 0xBF626EAC)) ^ 0xBF2A6EE6;
  v78 = HIBYTE(v74) ^ 0x44;
  v79 = (457 * v78) ^ 0xBBD1F75B;
  v80 = (((2 * v77) & 0x51F48868) - v77 + 386251723) ^ 0x174DBBEB;
  v81 = (457 * v80) ^ 0x6DE6EFEFu;
  v82 = *(&a68
                         + (((914 * v78) & 0x3EEB6)
                                        + v79
                                        + 1144013797
                                        - 1800
                                        * ((2386093
                                          * (unint64_t)(((914 * v78) & 0x3EEB6) + v79 + 1144013797)) >> 32))) ^ 0x35;
  v83 = *(&a68 + (((914 * v75) & 0xCF87FB5A) + ((457 * v75) ^ 0xE7C3FDAD) + 406732179) % 0x708);
  v84 = *(&a68 + (((914 * v80) & 0xDBCDDFDE) + v81 - 1843705007) % 0x708) ^ 0x35;
  v85 = *(&a68
                         + (((914 * (v76 ^ 0x843B9AD5)) & 0xFEFBE)
                          + ((457 * (v76 ^ 0x843B9AD5)) ^ 0xEBEFF7DF)
                          + 336741217)
                         % 0x708);
  v86 = (((v82 - ((2 * v82) & 0xAAAAAAAA)) << 16) - 749404160) ^ 0xD3550000;
  v87 = (((v84 - ((2 * v84) & 0xD8)) << 8) - 1641190400) ^ 0x9E2D6C00;
  v88 = (v87 - 112430904 - ((2 * v87) & 0x7298E000)) ^ 0xF94C70C8 | (v86 + 743852263 - ((2 * v86) & 0x58AC0000)) ^ 0x2C5648E7;
  v89 = (v88 - 1911980161 - ((2 * v88) & 0x1C12FEFE)) ^ 0x8E097F7F | ((v85 ^ 0x35)
                                                                    + 1108988491
                                                                    - ((2 * (v85 ^ 0x35)) & 0x96)) ^ 0x4219D24B;
  v90 = (((v89 - ((2 * v89) & 0xEBA4FE)) << 8) + 1976729344) ^ 0x75D27F00;
  v91 = (v90 - 1076322433 - ((2 * v90) & 0x7FB13E00)) ^ 0xBFD89F7F | ((v83 ^ 0x35) + 1747926527 - 2 * (v83 ^ 0x35)) ^ 0x682F3DFF;
  v92 = (v91 - 473245450 - ((2 * v91) & 0xC795B1EC)) ^ a52;
  *((_DWORD *)&STACK[0x8D0] + (a49 * v69 - 645055134) % 0x55C) = a55 ^ a63 ^ 0xC6E44C21 ^ ((v92 ^ 0xE3CAD8F6)
                                                                                         + 1199033214
                                                                                         - 2
                                                                                         * ((v92 ^ 0xE3CAD8F6) & 0x4777CB7F ^ v92 & 1));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 + 8 * ((1522 * (a49 != 1733492829)) ^ v68)) - 12))(743852263, v79, 2451262289, v81, 3958372319, a49, 1084068179, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1002144AC@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  unsigned int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_DWORD *)(*a57 + 4 * v60 - 0x5C1335017F6F2E3BLL) = *(_DWORD *)(v59
                                                                 + 4
                                                                 * (97 * (_DWORD)v60
                                                                  + 823394167
                                                                  - ((((97 * v60 + 823394167)
                                                                                   * (unint64_t)v57) >> 32) >> 10)
                                                                  * v58));
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * (((16 * (v60 != 1054183976)) | ((v60 != 1054183976) << 6)) ^ a1))
                            - 12))();
}

uint64_t sub_10021451C@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;

  v66 = ((a45 - 38) + 1151091266 - ((2 * (a45 + 218)) & 0x84)) ^ 0x449C4242;
  v67 = (((914 * v66) & 0xBFBB4) + ((v66 * (((a3 - 2035992864) & 0x795ACBDE) - 523)) ^ 0xF57DFDDA) + 176555622) % 0x708;
  v68 = *(_DWORD *)(v65
                  + 4
                  * ((1361
                    * ((*(&a63 + v67) ^ 0x97E6FD1D) + 2 * (*(&a63 + v67) ^ 0xE2))
                    + 1827907409)
                   % 0x12E0));
  v69 = ((v68 ^ 0x7EEAE864)
       + (v68 & 0x38 ^ 0x1001018)
       - ((v68 ^ 0x7EEAE864) & 0x5A006838)) ^ 0x8DEAB255;
  v70 = ((HIWORD(v68) & 0xCB ^ 0xB79F320A) + (HIWORD(v68) & 0x34 ^ 0x31) - 1) ^ 0x339F2ECA;
  v71 = v69 - ((2 * v69) & 0x50006720) - 1385237616;
  v72 = ((2 * v70) | 0xE086B2D8) - v70;
  v73 = (((2 * (BYTE1(v68) ^ 0x97500FB)) | 0xC2946B6C) - (BYTE1(v68) ^ 0x97500FB) + 515230282) ^ 0xE83F35B6;
  v74 = (((914 * (v71 ^ 0x56ED19B)) & 0xBB7EBDFE) + ((457 * (v71 ^ 0x56ED19B)) ^ 0xDDBF5EFF) + 574807105) % 0x708;
  v75 = *(&a63
                         + (((914 * (HIBYTE(v68) ^ 0xEA)) & 0x1FFEE)
                          + ((457 * (HIBYTE(v68) ^ 0xEA)) ^ 0xDEA2FFF7)
                          + 559889225)
                         % 0x708);
  v76 = *(&a63
                         + (((914 * ((v72 + 264021652) ^ 0x74434544)) & 0xCFFDBE9E)
                          + ((457 * ((v72 + 264021652) ^ 0x74434544)) ^ 0xE7FEDF4F)
                          + 402873329)
                         % 0x708) ^ 0x35;
  v77 = ((((v75 ^ 0x35) - ((2 * (v75 ^ 0x35)) & 0x4C)) << 16) + 1042677760) ^ 0x3E260000;
  v78 = a45 * v63 + 1975891610;
  v79 = (((v76 - ((2 * v76) & 0x168)) << 8) + 1381872640) ^ 0x525DB400;
  v80 = (v77 + 12511822 - ((2 * v77) & 0x17C0000)) ^ 0xBEEA4E | (v79 + 340940858 - ((2 * v79) & 0x28A4B000)) ^ 0x1452583A;
  v81 = *(&a63 + (((914 * v73) & 0x53373BFA) + ((457 * v73) ^ 0x299B9DFD) - 697918141) % 0x708) ^ 0x35;
  v82 = (v80 - 386125511 - ((2 * v80) & 0xD1F86272)) ^ 0xE8FC3139 | (v81 + 1729089414 - ((2 * v81) & 0x10C)) ^ 0x670FCF86;
  v83 = *(&a63 + v74);
  v84 = (((v82 - ((2 * v82) & 0x3AF5B4)) << 8) - 1652893184) ^ 0x9D7ADA00;
  v85 = (v84 + 623224051 - ((2 * v84) & 0x4A4B4800)) ^ 0x2525A4F3 | ((v83 ^ 0x35)
                                                                   - 556004128
                                                                   - ((2 * (v83 ^ 0x35)) & 0x1C0)) ^ 0xDEDC0CE0;
  *((_DWORD *)&STACK[0x8D0] + v78 % 0x55C) = a50 ^ a53 ^ a52 ^ 0x1823A641 ^ (v85 - ((2 * v85) & 0x7FBBE79A) - 1075973171);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * ((1071 * (a45 == 2016418853)) ^ a3)) - 12))(623224051, v78 / 0x55CuLL, 3908841785, 1729089414, 3489513118, a45, a1, a2, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1002149E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * ((((v65 - 963) | 0x32C) ^ 0x3FFFFFFF97C7D760) + v68) - 0x5C13350084191667) = *(_DWORD *)(v64 + 4 * (97 * (_DWORD)v68 - 2102084471 - ((((97 * v68 - 2102084471) * (unint64_t)v66) >> 32) >> 10) * v67));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((45 * (v68 != 1748513750)) ^ v65)) - 4))();
}

uint64_t sub_100214A78@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unsigned int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v62 = ((a1 ^ 0xA1A5E22E) + (a43 - 30) - ((2 * (a43 + 226)) & 0x26)) ^ 0xA1A5E113;
  v63 = (((914 * v62) & 0x73B62) + ((457 * v62) ^ 0xB7839DB1) + 1216374415) % 0x708;
  v64 = *(_DWORD *)(v61
                  + 4
                  * ((1361
                    * (((2 * (*(&a59 + v63) ^ 0x40)) & 0x1F0)
                     + (*(&a59 + v63) ^ 0xCF6FFDBF))
                    + 768497626)
                   % 0x12E0)) ^ 0xB7AE8AB6;
  v65 = (2 * v64 + 670994672) & 0x506FB300;
  v64 -= 63495688;
  v66 = v64;
  v67 = v64 - v65;
  v68 = (v66 ^ 0xB7) - ((2 * (v66 ^ 0xB7)) & 0xAAAAAAAA);
  v69 = ((v67 >> 8) & 0xE3 ^ 0x4C212360) + ((v67 >> 8) & 0x1C ^ 0x9210180D) - 1;
  v70 = ((v69 & 0x487 ^ 0x712A404) + (v69 & 0x378 ^ 0x8001271) - 1) ^ 0xF12B566;
  v71 = BYTE2(v67) ^ 0xAF;
  v72 = (457 * v71) ^ 0x496FDFFFu;
  v73 = ((914 * ((v68 + 4437) ^ 0x1131)) & 0x73EE3FEE) + ((457 * ((v68 + 4437) ^ 0x1131)) ^ 0x39F71FF7) - 972350647;
  v74 = (457 * v70) ^ 0x736FF1EFu;
  v75 = v73 / 0x708uLL;
  v76 = *(&a59 + (((914 * v71) & 0xFFFFBFFF) + v72 - 1231922367) % 0x708);
  v77 = *(&a59
                         + (((914 * (HIBYTE(v67) ^ 0xD1)) & 0xFE8E)
                          + ((457 * (HIBYTE(v67) ^ 0xD1)) ^ 0xC7F67F47)
                          + 940293113)
                         % 0x708) ^ 0x35;
  v78 = (((v77 - ((2 * v77) & 0x40)) << 16) + 1797259264) ^ 0x6B200000;
  v79 = ((((v76 ^ 0x35) + 8809915 - ((2 * (v76 ^ 0x35)) & 0x140)) << 8) - 6912) ^ 0x866DA000;
  v80 = (v79 + 1498213616 - ((2 * v79) & 0x3299D800)) ^ 0x594CECF0 | (v78 + 1520258136 + (~(2 * v78) | 0xCAC5FFFF) + 1) ^ 0x5A9D4C58;
  v81 = *(&a59 + (((914 * v70) & 0x5FE3DE) + v74 - 1936570031) % 0x708) ^ 0x35;
  v82 = (v80 - 1875812358 - ((2 * v80) & 0x2062BFF4)) ^ 0x90315FFA | (v81 - 338455566 - ((2 * v81) & 0x1E4)) ^ 0xEBD393F2;
  v83 = (((v82 - ((2 * v82) & 0xC1F5E8)) << 8) + 1627059200) ^ 0x60FAF400;
  v84 = *(&a59 + v73 % 0x708) ^ 0x35;
  v85 = (v83 - 617755273 - ((2 * v83) & 0xB65B9A00)) ^ 0xDB2DCD77 | (v84 + 41107854 - ((2 * v84) & 0x11C)) ^ 0x273418E;
  v86 = (a43 * v59 - 40533598) % 0x55C;
  v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * ((127 * (a43 != 841700381)) ^ a1)) - 8);
  *((_DWORD *)&STACK[0x8D0] + v86) = a51 ^ 0xCE5C7A17 ^ (v85 - ((2 * v85) & 0xFBB4ADDC) + 2111461102);
  return v87(v86, 2419154938, v74, v75, 940293113, v72, 6284254, a43, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_100214EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * v68 - 0x5C13350195072ADBLL) = *(_DWORD *)(v67
                                                                 + 4
                                                                 * (97 * (_DWORD)v68
                                                                  + 627788111
                                                                  - ((((97 * v68 + 627788111)
                                                                                   * (unint64_t)v64) >> 32) >> 10)
                                                                  * v66));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69
                                        + 8 * (v65 | (2 * ((((v65 - 423) | 0x18Cu) ^ 0x19FLL) + v68 != 1144756561))))
                            - 4))();
}

uint64_t sub_100214F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  uint64_t v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;

  v70 = ((a51 + 18) + 1006071527 - (((v66 ^ 0xF9) + 103) & (2 * (a51 + 18)))) ^ 0x3BF76EE7;
  v71 = (((914 * v70) & 0xF7F76) + ((457 * v70) ^ 0xEB77BFBB) + 344736901) % 0x708;
  v72 = *(_DWORD *)(v69
                  + 4
                  * ((1361
                    * (((2 * (*(&a66 + v71) ^ 0xE)) & 0x17C)
                     + (*(&a66 + v71) ^ 0xBF1EB3B1))
                    - 303795608)
                   % 0x12E0));
  v73 = (-1194579236 - (BYTE1(v72) ^ 0x62242027 | 0xB8CC2ADC) + (BYTE1(v72) ^ 0x62242027 | 0x4733D523)) ^ 0x2517F50B;
  v74 = (v72 ^ 0x29 | 0x67DFF1A2) - (v72 ^ 0x29 | 0x98200E5D) - 1742729635;
  v75 = HIBYTE(v72) ^ 0xC8;
  v76 = (914 * v75) & 0xC8EC;
  v77 = (BYTE2(v72) ^ 0xBC | 0xFE516D61) - (BYTE2(v72) ^ 0xBC | 0x1AE929E) + 28218014;
  v78 = ((v77 & 0x8451417D ^ 0x8421003C) + (v77 & 0x7A002E82 ^ 0x58040601) - 1) ^ 0x22746B60;
  v79 = ((v74 & 0x14733A0 ^ 0x80632721) + (v74 & 0x6698C05F) - 1) ^ 0xE7BCD6F9;
  v80 = ((914 * v79) & 0x93FEFCDE) + ((457 * v79) ^ 0xC9FF7E6F) + 906149073;
  v81 = *(&a66 + (v76 + ((457 * v75) ^ 0x7FFE6476) - 2147232054) % 0x708) ^ 0x35;
  v82 = *(&a66 + (((914 * v78) & 0xBFEFEAFA) + ((457 * v78) ^ 0xDFF7F57D) + 537544131) % 0x708) ^ 0x35;
  v83 = (((v81 - ((2 * v81) & 0xF4)) << 16) - 2122711040) ^ 0x817A0000;
  v84 = (((v82 - ((2 * v82) & 0x4C)) << 8) - 1757600256) ^ 0x973D2600;
  v85 = (v84 + 2057382854 - ((2 * v84) & 0x75425600)) ^ 0x7AA12BC6 | (v83 - 2141503146 - ((2 * v83) & 0xB60000)) ^ 0x805B4156;
  v86 = (a51 * v67 + 778232274) % 0x55Cu;
  v87 = *(&a66 + (((914 * v73) & 0x9AFE7DEA) + ((457 * v73) ^ 0xCD7F3EF5) + 847445067) % 0x708);
  v88 = *(&a66 + v80 % 0x708);
  v89 = (v85 + 1698606842 - ((2 * v85) & 0xCA7D5DF4)) ^ 0x653EAEFA | ((v87 ^ 0x35)
                                                                    - 368392541
                                                                    - ((2 * (v87 ^ 0x35)) & 0x146)) ^ 0xEA0AC6A3;
  v90 = (((v89 + 14232773 - ((2 * v89) & 0xB277FE)) << 8) + 997888) ^ 0xD93BFF00;
  v91 = (v90 - 1255311497 - ((2 * v90) & 0x6A5AEE00)) ^ 0xB52D7777 | ((v88 ^ 0x35)
                                                                    + 1272954585
                                                                    - ((2 * (v88 ^ 0x35)) & 0x1B2)) ^ 0x4BDFBED9;
  *((_DWORD *)&STACK[0x8D0] + v86) = a63 ^ 0x1A722258 ^ (v91 - ((2 * v91) & 0x71CB4B40) - 1192909408);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((39 * (a51 != 744703469)) ^ v66)) - 4))(3039655799, v86, 3926574755, 1698606842, 3220171514, v76, 2216755260, (a51 + 1), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100215434@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  uint64_t v57;
  int v58;
  unsigned int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;

  *(_DWORD *)(*a57 + 4 * v61 - 0x5C1335015CD0BA9BLL) = *(_DWORD *)(v57
                                                                 + 4
                                                                 * (97 * (_DWORD)v61
                                                                  + 2023324511
                                                                  - ((((97 * v61 + 2023324511)
                                                                                   * (unint64_t)v59) >> 32) >> 10)
                                                                  * v60));
  return ((uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * (((v61 != 908979520) * v58) ^ a1)) - 4))();
}

uint64_t sub_1002154A0@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  int v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;

  v63 = ((a46 - 124) - 636681204 - (((a46 + 132) & 0xD ^ a46 & 1) << ((a3 + 50) ^ 0x98))) ^ 0xDA0D040C;
  v64 = (((914 * v63) & 0x33BFFFC) + ((457 * v63) ^ 0x419DFFFE) - 1100610494) % 0x708;
  v65 = *(_DWORD *)(v62
                  + 4
                  * ((1361
                    * (((2 * (*(&a60 + v64) ^ 0x60)) & 0xFFFFFFDF)
                     + (*(&a60 + v64) ^ 0xADCFFD8F))
                    - 242656129)
                   % 0x12E0));
  v66 = ((BYTE2(v65) ^ 0xFB) - ((2 * (BYTE2(v65) ^ 0xFB)) & 0x77777777) + 527185851) ^ 0x7BEC558E;
  v67 = (((2 * v66) | 0xA8B626AE) - v66 + 732228777) ^ 0xB0DB7157;
  v68 = ((v65 ^ 0x7D) + (v65 & 0x5B ^ 0x502) - ((v65 ^ 0x7D) & 0x5B)) ^ 0x58A;
  v69 = ((914 * v68) & 0x1DBCEC) + ((457 * v68) ^ 0xAA6EDE76) + 1435720906;
  v70 = *(&a60
                         + (((914 * (HIBYTE(v65) ^ 0xD3)) & 0x21F9C)
                          + ((457 * (HIBYTE(v65) ^ 0xD3)) ^ 0xFFFF0FCE)
                          + 207730)
                         % 0x708) ^ 0x35;
  v71 = *(&a60 + (((914 * v67) & 0xFFEFFDEE) + ((457 * v67) ^ 0x7FF7FEF7) - 2146812855) % 0x708) ^ 0x35;
  v72 = (((v70 - ((2 * v70) & 0x16)) << 16) + 2047541248) ^ 0x7A0B0000;
  v73 = (((v71 - 2 * (v71 & 7)) << 8) - 321648896) ^ 0xECD40700;
  v74 = (v73 - 1931239961 - ((2 * v73) & 0x19C73A00)) ^ 0x8CE39DE7 | (v72 - 794575086 - ((2 * v72) & 0x21460000)) ^ 0xD0A3BF12;
  v75 = *(&a60
                         + (((914 * (BYTE1(v65) ^ 0xE7)) & 0x3FE54)
                          + ((457 * (BYTE1(v65) ^ 0xE7)) ^ 0xF6CBFF2A)
                          + 154549270)
                         % 0x708);
  v76 = *(&a60 + v69 % 0x708);
  v77 = (v74 - 1578985395 - ((2 * v74) & 0x43C5309A)) ^ 0xA1E2984D | ((v75 ^ 0x35)
                                                                    + 1920741411
                                                                    - ((2 * (v75 ^ 0x35)) & 0x46)) ^ 0x727C3023;
  v78 = (((v77 - ((2 * v77) & 0x7A35C8)) << 8) - 1122311168) ^ 0xBD1AE400;
  v79 = (v78 + 789470900 - ((2 * v78) & 0x5E1CBC00)) ^ 0x2F0E5EB4 | ((v76 ^ 0x35)
                                                                   + 713512248
                                                                   - ((2 * (v76 ^ 0x35)) & 0x70)) ^ 0x2A875538;
  *((_DWORD *)&STACK[0x8D0] + (a46 * v60 + 1249031940) % 0x55Cu) = a52 ^ (v79 - ((2 * v79) & 0x445137D6) - 1574396949) ^ 0x9FD83BD3;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * ((254 * (a46 == 961239931)) ^ a3)) - 4))(713512248, 1920741411, 53, 3500392210, 2363727335, (a46 + 1), a1, a2, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1002158E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  unsigned int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * (v67 + ((v64 + 2079757410) & 0x84096FD7)) - 0x5C1335020042EE4BLL) = *(_DWORD *)(v68 + 4 * (97 * (_DWORD)v67 - 49632282 - ((((97 * v67 - 49632282) * (unint64_t)v65) >> 32) >> 10) * v66));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((1098 * (v67 == 1594520409)) ^ v64)) - 4))();
}

uint64_t sub_10021596C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,unsigned int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unint64_t v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;

  v70 = ((a52 + 123) - 1745541839 - ((2 * (a52 + 123)) & 0x62)) ^ 0x97F52531;
  v71 = (((914 * v70) & 0x14BBBA) + (v66 ^ 0xFFDA580E ^ (457 * v70)) + 2729571) % 0x708;
  v72 = *(_DWORD *)(v69
                  + 4
                  * ((1361
                    * (((2 * (*(&a66 + v71) ^ 0x62)) & 0x1CC)
                     + (*(&a66 + v71) ^ 0xFF1FFF8C))
                    - 1493964177)
                   % 0x12E0));
  HIDWORD(v73) = v72 ^ 0x7AE8AB6;
  LODWORD(v73) = v72 ^ 0xB0000000;
  v74 = (v73 >> 27) - ((2 * (v73 >> 27)) & 0x2C81C10) - 2124149240;
  v75 = ((BYTE1(v74) ^ 0x10591E81) - ((2 * (BYTE1(v74) ^ 0x10591E81)) & 0x8210BA) + 1313311069) ^ 0x7E07972C;
  v76 = (((2 * (BYTE2(v74) ^ 0x47D18C9F)) | 0xE1EE1ABE) - (BYTE2(v74) ^ 0x47D18C9F) - 1895239007) ^ 0x3726815B;
  v77 = ((v73 >> 27) - ((2 * (v73 >> 27)) & 0x10) + 8) ^ 0x818542F6;
  v78 = ((2 * v77) & 0x30281A6) - v77 - 1367571924;
  v79 = (v75 - ((2 * v75) & 0x4072337A) + 981031357) ^ 0x1A6059B5;
  LOBYTE(v77) = (2 * ((v73 >> 27) - ((2 * (v73 >> 27)) & 0x10) + 8)) ^ 0x10;
  v80 = ((_BYTE)v77
       - 2 * (v77 & 0x7E ^ (2 * ((v73 >> 27) - ((2 * (v73 >> 27)) & 0x10) + 8)) & 0xA)
       + 116) & 0x80;
  v81 = v80 ^ 0xBD5D9DEE;
  v82 = (v78 ^ 0x2FF9C12C) + 2 * v80;
  v83 = v81 + 1117938194;
  v84 = (457 * v79) ^ 0xD75F46AF;
  v85 = *(&a66
                         + (((914 * (HIBYTE(v74) ^ 0xE6)) & 0x1F7FC)
                          + ((457 * (HIBYTE(v74) ^ 0xE6)) ^ 0x63FEFBFE)
                          - 1677508798)
                         % 0x708u) ^ 0x35;
  v86 = *(&a66 + (((914 * v76) & 0x737F778E) + ((457 * v76) ^ 0xB9BFBBC7) + 1178763129) % 0x708) ^ 0x35;
  v87 = (((v85 - ((2 * v85) & 0xCCCCCCCC)) << 16) + 1097203712) ^ 0x41660000;
  v88 = (((v86 + 1648088 - ((2 * v86) & 0x19A)) << 8) - 2816) ^ 0x1925CD00;
  v89 = (v88 - 365243164 - ((2 * v88) & 0x5475A800)) ^ 0xEA3AD4E4 | (v87 + 1793660153 - ((2 * v87) & 0x55D20000)) ^ 0x6AE914F9;
  v90 = *(&a66 + (((914 * v79) & 0xAEBE8D5E) + v84 + 681768081) % 0x708) ^ 0x35;
  v91 = *(&a66
                         + (457 * (((2 * (v82 + v83)) & 0xFBFFBFBE) + ((v82 + v83) ^ 0x7DFFDFDF)) + 305748713) % 0x708);
  v92 = (v89 - 493886803 - ((2 * v89) & 0x451FC55A)) ^ 0xE28FE2AD | (v90 + 1461435148 - ((2 * v90) & 0x18)) ^ 0x571BBB0C;
  v93 = (((v92 - ((2 * v92) & 0x801BA0)) << 8) - 1072836608) ^ 0xC00DD000;
  v94 = (v93 + 1587916908 - ((2 * v93) & 0xBD4B6000)) ^ 0x5EA5B06C | ((v91 ^ 0x35)
                                                                    + 662840948
                                                                    - ((2 * (v91 ^ 0x35)) & 0xE8)) ^ 0x27822674;
  *((_DWORD *)&STACK[0x8D0] + (a52 * v67 + 1877949339) % 0x55C) = a59 ^ (v94 - ((2 * v94) & 0x5828B634) + 739531546) ^ 0x27778039;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((722 * (a52 == 1264702340)) ^ v66)) - 4))(662840948, 1461435148, 1677655038, v84, 4227841982, a52, 46668816, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_100215E64@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  unsigned int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_DWORD *)(*a57 + 4 * v60 - 0x5C1335011AAA8817) = *(_DWORD *)(v59
                                                                 + 4
                                                                 * (97 * (_DWORD)v60
                                                                  - 1129055648
                                                                  - ((((97 * v60 - 1129055648)
                                                                                   * (unint64_t)v57) >> 32) >> 10)
                                                                  * v58));
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * (((16 * (v60 != 631532191)) | (32 * (v60 != 631532191))) ^ a1))
                            - 12))();
}

uint64_t sub_100215ED4@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;

  v64 = ((a47 - 12) - 760792028 - (((a47 + 244) << (a2 - 24)) & 0x48)) ^ 0xD2A73C24;
  v65 = *(&a61 + (((914 * v64) & 0x15DF3C) + ((457 * v64) ^ 0x795AEF9E) - 2035739486) % 0x708);
  v66 = (v65 ^ 0x35) - ((2 * (v65 ^ 0x35)) & 0x16);
  v67 = (*(_DWORD *)(v63 + 4
                         * ((1361 * (((2 * (v65 ^ 0x85)) & 0xFFFFFF3F) + (v65 ^ 0x77FEEE3A)) + 235303281) % 0x12E0)) ^ 0xB7AE8AB6)
      + ((((v66 - 32976373) ^ 0x1B6EC3A8) + 1) ^ 0x692EFABF)
      + ((2 * (((v66 - 32976373) ^ 0x1B6EC3A8) + 1)) & 0xD25DF57E)
      - 1764686527;
  v68 = v67 - ((2 * v67) & 0x93FB12FC) - 906131074;
  v69 = (((2 * (v68 ^ 0x62)) & 0xFFFFFFCF) - (v68 ^ 0x62) + 694198040) ^ 0x8C3087FD;
  v70 = ((BYTE1(v68) ^ 0x87) - ((2 * (BYTE1(v68) ^ 0x87)) & 0x134) - 876240486) ^ 0xC8C5A39E;
  v71 = ((BYTE2(v68) ^ 0x3B) - 1255536335 - ((2 * (BYTE2(v68) ^ 0x3B)) & 0x62)) ^ 0xB52A09F6;
  v72 = (v69 - ((2 * v69) & 0x4A00297A) + 1033901245) ^ 0x98F00CA5;
  v73 = (((2 * v70) & 0x20038B6) - v70 + 511419300) ^ 0x1D7BA1A6;
  v74 = ((914 * (HIBYTE(v68) ^ 0x89)) & 0x2CDFC) + ((457 * (HIBYTE(v68) ^ 0x89)) ^ 0xFFF766FE);
  v75 = ((914 * v73) & 0x39FFFF58) + ((457 * v73) ^ 0x9CFFFFAC) + 1661090708;
  v76 = *(&a61 + (((914 * v71) & 0xEE73B7FC) + ((457 * v71) ^ 0x7739DBFE) - 2000134334) % 0x708) ^ 0x35;
  v77 = *(&a61 + (v74 + 709698) % 0x708) ^ 0x35;
  v78 = (((914 * v72) & 0xEFD7C7DC) + ((457 * v72) ^ 0xF7EBE3EE) + 135681874) % 0x708;
  v79 = (a47 * v61 + 1720853876) % 0x55C;
  v80 = (((v77 - ((2 * v77) & 0x9A)) << 16) - 1437794304) ^ 0xAA4D0000;
  v81 = (((v76 - ((2 * v76) & 0xA0)) << 8) + 268914688) ^ 0x10075000;
  v82 = (v80 + 1267932940 - ((2 * v80) & 0x17260000)) ^ 0x4B931F0C | (v81 - 2138490775 - ((2 * v81) & 0x1127000)) ^ 0x80893869;
  v83 = *(&a61 + v75 % 0x708) ^ 0x35;
  v84 = (v82 + 709320451 - ((2 * v82) & 0x548EBE06)) ^ 0x2A475F03 | (v83 - 811963103 + (~(2 * v83) | 0xFFFFFFBD) + 1) ^ 0xCF9A6D21;
  v85 = (((v84 - ((2 * v84) & 0x866E36)) << 8) - 1019798784) ^ 0xC3371B00;
  v86 = *(&a61 + v78) ^ 0x35;
  v87 = (v85 - 945935628 - ((2 * v85) & 0x8F3C5400)) ^ 0xC79E2AF4 | (v86 - 310974384 - ((2 * v86) & 0xA0)) ^ 0xED76E850;
  *((_DWORD *)&STACK[0x8D0] + v79) = a52 ^ (v87 - ((2 * v87) & 0xCB0B12B4) - 444233382) ^ 0xD469275D;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * ((301 * (a47 == 425039627)) ^ a2)) - 12))(v78, 160, v79, 3483004193, 709320451, 1267932940, a47, a1, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1002163E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  int v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * v66 - 0x5C1335022767081BLL) = *(_DWORD *)(v65
                                                                 + 4
                                                                 * (((15 * (v64 ^ 0x64F)) ^ 0x47DDC63C)
                                                                  + 97 * (_DWORD)v66
                                                                  - ((((((15 * (v64 ^ 0x64F)) ^ 0x47DDC63Cu)
                                                                                    + 97 * (_DWORD)v66)
                                                                                   * (unint64_t)v67) >> 32) >> 10)
                                                                  * v68));
  return (*(uint64_t (**)(void))(v69 + 8 * ((204 * (v66 != 1758690720)) ^ v64)))();
}

uint64_t sub_100216460@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  unsigned int v62;
  char *v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  unsigned int v77;
  int v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;

  v61 = ((a46 + 78) + 1670447876 - ((2 * ((_BYTE)a46 + 78)) & 8)) ^ 0x63910304;
  v62 = (((914 * v61) & 0x7AE8FEE) + ((457 * v61) ^ 0x37D747F7u) - 936592311) % 0x708;
  v63 = &a58;
  v64 = *(_DWORD *)(v60
                  + 4
                  * ((1361
                    * (((2 * (v63[v62] ^ 0x24)) & 0xDE) + (v63[v62] ^ 0xCD9DDFCB))
                    - 603090796)
                   % 0x12E0));
  v65 = HIBYTE(v64) ^ 0x1D;
  v66 = -249984313 - (BYTE1(v64) ^ 0x3C) + ((2 * (BYTE1(v64) ^ 0x3C)) & 0x66666666);
  v67 = ((HIWORD(v64) & 0x45 ^ 0xBEFD1F01) + (HIWORD(v64) & 0xBA ^ 0x89) - 1) ^ 0xAAC797E5;
  v68 = ((2 * v67) & 0x8515C8E) - v67;
  v69 = (a46 * v58 - 311846350);
  v70 = *(_DWORD *)(v60
                                   + 4
                                   * ((1361
                                     * (((2 * (v63[v62] ^ 0x24)) & 0xDE)
                                      + (v63[v62] ^ 0xCD9DDFCB))
                                     - 603090796)
                                    % 0x12E0)) ^ 0x7D;
  v71 = (457 * v70) ^ 0xBEEDFEE1;
  v72 = ((914 * v65) & 0x14FFC) + ((457 * v65) ^ 0x3F96A7FE);
  v73 = (914 * v70) & 0x3FDC2;
  v74 = (v68 + 1372803512) ^ 0x45E9D9AA;
  v75 = v72 - 1066691774;
  v76 = (457 * v74) ^ 0x73DF737Fu;
  v77 = (v66 + 5) ^ 0xF1198AC7;
  v78 = 457 * v77;
  v79 = 914 * v77;
  v80 = (914 * v74) & 0xE7BEE6FE;
  v81 = v78 ^ 0xF6EA3B3F;
  if (v69 >= 0xFFFFFAA4)
    v82 = a46 * v58 - 122722185;
  else
    v82 = ((v69 % 0x55C) ^ 0x5F7DFDF9) - 1412969744 + ((2 * (v69 % 0x55C)) & 0xBF2);
  v83 = (v73 + v71 + 1091845215) % 0x708;
  v84 = *(&a58 + v75 % 0x708) ^ 0x35;
  v85 = *(&a58 + (v80 + v76 - 1943877695) % 0x708) ^ 0x35;
  v86 = (((v84 - ((2 * v84) & 0x66666666)) << 16) - 1607270400) ^ 0xA0330000;
  v87 = (((v85 - ((2 * v85) & 0xEC)) << 8) - 161909248) ^ 0xF6597600;
  v88 = (v87 - 763339104 - ((2 * v87) & 0x2500BC00)) ^ 0xD2805EA0 | (v86 - 365053012 - ((2 * v86) & 0x547A0000)) ^ 0xEA3DBBAC;
  v89 = *(&a58 + ((v79 & 0x4767E) + v81 + 152567809) % 0x708) ^ 0x35;
  v90 = (v88 + 1946026591 - ((2 * v88) & 0xE7FC04BE)) ^ 0x73FE025F | (v89 - 519183705 - ((2 * v89) & 0x14E)) ^ 0xE10DE2A7;
  v91 = (((v90 - ((2 * v90) & 0xC28A58)) << 8) + 1631923200) ^ 0x61452C00;
  v92 = *(&a58 + v83) ^ 0x35;
  v93 = (v91 - 1668916062 - ((2 * v91) & 0x390CB800)) ^ 0x9C865CA2 | (v92 + 2037799047 - ((2 * v92) & 0xFFFFFF0F)) ^ 0x79765887;
  *((_DWORD *)&STACK[0x8D0] + v82 - 189122793) = a54 ^ (v93 - ((2 * v93) & 0xCFBDF9E4) + 1742666994) ^ 0x44F4CDED;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * ((19 * (a46 != 2128559793)) ^ a1)) - 12))(3775783591, 3531628192, ((v69 % 0x55C) ^ 0x5F7DFDF9) - 1412969744 + ((2 * (v69 % 0x55C)) & 0xBF2), v81, v76, 1944023935, 86012, v69, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1002168EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  *(_DWORD *)(*a57 + 4 * v58 - 0x5C133501D81F3E5BLL) = *(_DWORD *)(v57
                                                                 + 4
                                                                 * ((97 * (int)v58 - 899229329)
                                                                  % (a1 + 1177)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v59 + 8 * ((1992 * (v58 == 1426167088)) ^ a1)) - 12))();
}

uint64_t sub_100216960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,unsigned int a55,uint64_t a56,int a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a68;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  uint64_t v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;

  v72 = *(&a68
                         + (((914 * (a55 - 46)) & 0x3DBEE)
                          + (v68 ^ 0xEA241435)
                          + ((457 * (a55 - 46)) ^ 0x15DFEDF7))
                         % 0x708);
  v73 = 1361 * (((2 * (v72 ^ 0x38)) & 0xD6) + (v72 ^ 0xFF3D7743)) + 175176823;
  v74 = ((2 * (v72 ^ 0x79)) & 0xFFFFFFF7) + (v72 ^ 0xFFD9DB86);
  v75 = (v74 - 1949388887 + ((2 * ((v74 + 392) & 0x623 ^ (v74 | 0x7FFFFFFC))) ^ 0x20A02007)) ^ *(_DWORD *)(v71 + 4 * (v73 % 0x12E0));
  v76 = (BYTE1(v75) ^ 0xD0 | 0x5E36B296) - (BYTE1(v75) ^ 0xD0 | 0xA1C94D69) - 1580642967;
  v77 = ((v76 & 0x1636B229 ^ 0x226E9201) + (v76 ^ 0x9D91643E) - ((v76 ^ 0x9D91643E) & 0xB6FFB629)) ^ 0x75586084;
  v78 = ((BYTE2(v75) ^ 0x46) - ((2 * (BYTE2(v75) ^ 0x46)) & 0x116) + 2443) ^ 0x9CA;
  v79 = HIBYTE(v75) ^ 0xF2;
  v80 = (457 * v79) ^ 0x77FB7FFDu;
  v81 = (1680566891 - (v75 ^ 0x39 | 0x642B6A6B) + (v75 ^ 0x39 | 0x9BD49594)) ^ 0x9FD65185;
  v82 = (((2 * v81) | 0xA21A186A) - v81 + 787674059) ^ 0xD50FC893;
  v83 = (457 * v82) ^ 0xFA8FFFFF;
  v84 = (914 * v79);
  v85 = (914 * v82) & 0xF51FFFFE;
  v86 = ((914 * v77) & 0x7DDB2E7A) + ((457 * v77) ^ 0xBEED973D) + 1091871747;
  v87 = (v84 & 0x2FFFA) + v80 - 2012824765;
  v88 = v85 + v83 + 91372353;
  v89 = *(&a68 + v87 % 0x708) ^ 0x35;
  v90 = *(&a68 + (((914 * v78) & 0xCFFDAEB6) + ((457 * v78) ^ 0x67FED75B) - 1744608283) % 0x708) ^ 0x35;
  v91 = (((v89 - ((2 * v89) & 0x19C)) << 16) + 701366272) ^ 0x29CE0000;
  v92 = (((v90 - ((2 * v90) & 0xC)) << 8) + 937035264) ^ 0x37DA0600;
  v93 = (v92 - 1741034385 - ((2 * v92) & 0x3073D800)) ^ 0x9839EC6F | (v91 + 517309215 - ((2 * v91) & 0x3DAA0000)) ^ 0x1ED5831F;
  v94 = *(&a68 + v88 % 0x708);
  v95 = *(&a68 + v86 % 0x708) ^ 0x35;
  v96 = (v93 - 2069248649 - ((2 * v93) & 0x9538AEE)) ^ 0x84A9C577 | (v95 - 2092275569 - ((2 * v95) & 0xFFFFFF1F)) ^ 0x834A688F;
  v97 = (((v96 - ((2 * v96) & 0xFAD9BA)) << 8) + 2104286464) ^ 0x7D6CDD00;
  v98 = (v97 + 645474418 - ((2 * v97) & 0x4CF25000)) ^ 0x26792872 | ((v94 ^ 0x35)
                                                                   - 2129978128
                                                                   - ((2 * (v94 ^ 0x35)) & 0x1E0)) ^ 0x810B1CF0;
  *((_DWORD *)&STACK[0x8D0] + (a55 * v69 + 761758610) % 0x55C) = a60 ^ a59 ^ a58 ^ 0x5BE98B82 ^ (v98
                                                                                               - ((2 * v98) & 0xC8E75288)
                                                                                               - 462182076);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 + 8 * ((353 * (a55 == 1409043501)) ^ v68)) - 4))(517309215, v87 / 0x708uLL, v80, v84, 4203741183, 1680566891, a55, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_100216E44@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_DWORD *)(*a57 + 4 * v60 - 0x5C1335026BF7B883) = *(_DWORD *)(v59
                                                                 + 4
                                                                 * (97 * (_DWORD)v60
                                                                  - 920427995
                                                                  - ((((97 * v60 - 920427995)
                                                                                   * (unint64_t)a1) >> 32) >> 10)
                                                                  * v58));
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * ((19 * (v60 != 2046277818)) ^ v57)) - 4))();
}

uint64_t sub_100216EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,uint64_t a57,int a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  char a66;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;

  v70 = ((a56 + ((v67 + 49) & 0xEB) + 120)
       - 49017277
       - ((2 * (a56 + ((v67 + 248501297) & 0xF1302FEB) - 1672)) & 0x86)) ^ 0xFD140E43;
  v71 = *(&a66 + (((914 * v70) & 0xEB37E) + ((457 * v70) ^ 0xFF5F59BF) + 10791553) % 0x708);
  v72 = (((v71 ^ 0x35) - ((2 * (v71 ^ 0x35)) & 0x7C) - 729250498) ^ 0x3B9E348D)
      + (*(_DWORD *)(v69 + 4 * ((1361 * (((2 * (v71 ^ 6)) & 0x15E) + (v71 ^ 0xED6ED3E9)) - 1240803354) % 0x12E0)) ^ 0xB7AE8AB6);
  v73 = v72 - ((2 * v72) & 0x7046D4E8) + 941845108;
  v74 = (((v73 >> 8) & 0x1D) + ((v73 >> 8) & 0xE2 ^ 0xFB59CC43) - 1) ^ 0xB9C9CEE2;
  v75 = ((BYTE2(v73) ^ 0x6F) - 2051377101 - ((2 * (BYTE2(v73) ^ 0x6F)) & 0x66666666)) ^ 0x85BA786E;
  v76 = (1653546848 - (v74 | 0x628F1F60) + (v74 | 0x9D70E09F)) ^ 0xDFE0E20F;
  v77 = ((914 * (HIBYTE(v73) ^ 0x43)) & 0x27F62) + ((457 * (HIBYTE(v73) ^ 0x43)) ^ 0x3FBB3FB1) - 1069089905;
  v78 = ((v73 ^ 0x20801148) - ((2 * (v73 ^ 0x20801148)) & 0x400020C2) - 149309855) ^ 0xD799A705;
  v79 = (((914 * v78) & 0xB7FDC8FC) + ((457 * v78) ^ 0xDBFEE47E) + 604198594) % 0x708;
  v80 = (((914 * v76) & 0xA3FBCEFE) + ((457 * v76) ^ 0x51FDE77F) - 1375448127) % 0x708;
  v81 = (a56 * v66 - 1819458621) % 0x55Cu;
  v82 = *(&a66 + v77 % 0x708) ^ 0x35;
  v83 = *(&a66 + (((914 * v75) & 0xF6D3DF3A) + ((457 * v75) ^ 0xFB69EF9D) + 77089699) % 0x708) ^ 0x35;
  v84 = (((v82 - ((2 * v82) & 0x2A)) << 16) + 1981087744) ^ 0x76150000;
  v85 = (((v83 - ((2 * v83) & 0xFFFFFFE3)) << 8) - 112398080) ^ 0xF94CF100;
  v86 = *(&a66 + v79);
  v87 = (v85 + 1009756207 - ((2 * v85) & 0x785F5000)) ^ 0x3C2FA82F | (v84 - 984618952 - ((2 * v84) & 0xA9E0000)) ^ 0xC54FE838;
  v88 = *(&a66 + v80) ^ 0x35;
  v89 = (v87 - 2012606486 - ((2 * v87) & 0x10141FD4)) ^ 0x880A0FEA | (v88 + 1536318011 - ((2 * v88) & 0x76)) ^ 0x5B925A3B;
  v90 = (((v89 - ((2 * v89) & 0x60A9B0)) << 8) + 810866688) ^ 0x3054D800;
  v91 = (v90 - 1197982648 - ((2 * v90) & 0x71307800)) ^ 0xB8983C48 | ((v86 ^ 0x35)
                                                                    + 2038238733
                                                                    - ((2 * (v86 ^ 0x35)) & 0x1A)) ^ 0x797D0E0D;
  *((_DWORD *)&STACK[0x8D0] + v81) = a58 ^ a63 ^ a61 ^ 0x9A2EEE72 ^ (v91
                                                                                 - ((2 * v91) & 0x21E1076C)
                                                                                 + 284197814);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((1361 * (a56 == 1568488028)) ^ v67)) - 4))(v81, 2038238733, v86, 2282360810, 3310348344, 1009756207, 3690914942, 2243590195, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_10021738C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  unsigned int v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  int v63;
  unsigned int v64;

  v62 = v58 - (((v58 + 509779112) & 0x3580F33E ^ v58 & 4) << (a1 - 42)) - 740061214;
  *(_DWORD *)(*a57 + 4 * ((v62 ^ 0x3F7FD8FF686FA4D5) + ((2 * (v62 ^ 0x3580F33A)) & 0xBBDEAFDE)) - 0x5A1298FDFBD67623) = *(_DWORD *)(v60 + 4 * (97 * v58 + 56246260 - ((((97 * v58 + 56246260) * (unint64_t)v57) >> 32) >> 10) * v59));
  v63 = ((2 * v62) ^ 0x6B01E674) - ((2 * ((2 * v62) ^ 0x6B01E674)) & 0x48B1765C) + 609794862;
  v64 = (v62 ^ 0xCA7F04F7) + 102810 + (v63 & 0xFFFFEF9A ^ 0xDBA6C56C) + ((2 * v63) & 0xFFFCDC04 ^ 0x48B05404);
  return ((uint64_t (*)(void))(*(_QWORD *)(v61
                                        + 8
                                        * (a1 + 4 * (((2 * v64) & 0xF73FFFF8) + (v64 ^ 0x7B9FFFFC) - 2074083324 < 0x100)))
                            - 8))();
}

uint64_t sub_10021750C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;

  v68 = byte_100263EF0[(((4424 * ((1805264682 - (((_BYTE)a3 + (_BYTE)v67 + 1) & 0x52)) ^ 0x6B9A2701)) & 0xCEDEB558)
                                       + ((2212 * ((1805264682 - (((_BYTE)a3 + (_BYTE)v67 + 1) & 0x52)) ^ 0x6B9A2701)) ^ 0x676F5AAC)
                                       - 1731345024)
                                      % 0x97F] ^ 0xFFFFFFF0;
  v69 = 23 * v68 - ((46 * (_BYTE)v68) & 0x3C) + 30;
  v70 = v69 ^ 0x5E ^ (((v69 >> 3) & 1 | 0x4A) - ((v69 >> 3) & 8 | 0x35) + 53);
  v71 = *(&a66
                         + (457 * (((2 * v70) & 0x1F6) + (v70 ^ 0xFC7FAEFB)) + 1074978093) % 0x708) ^ 0x35;
  v72 = (v71 - 1418784915 - ((2 * v71) & 0xDA)) ^ 0xAB6F0F6D | (((a33 + 969995687) & 0xFFFFFF00)
                                                              - ((2 * (a33 + 969995687)) & 0x891FE200)
                                                              + 1150284244) ^ 0x448FF1D4;
  *((_DWORD *)&STACK[0x8D0] + (580953523 * v66 - 517916883) % 0x55Cu) = v72 - 840245266 - ((2 * v72) & 0x9BD5BFDC);
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + a3 + v67 + 1090) - 12))();
}

void sub_10021772C()
{
  JUMPOUT(0x1002175D0);
}

uint64_t sub_100217734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;

  *(_DWORD *)(*a64 + 4 * a5 - 0x5C133501330DABFBLL) = *((_DWORD *)&STACK[0x8D0]
                                                      + ((int)a5 * (v64 - 997) + 1834047495) % 0x55Cu);
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((415 * (a5 == 733818776)) ^ v64)) - 12))();
}

uint64_t sub_1002177B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  unsigned int *v67;
  unsigned int v68;
  int v69;
  int v70;
  unint64_t v71;
  unsigned int v72;
  int v73;
  unsigned int v74;

  v68 = ((a34 & 0xFFFFFF00 ^ 0x3D616B00)
       + (a34 & 0xA834CF00 ^ 0x801484D1)
       - ((a34 & 0xFFFFFF00 ^ 0x3D616B00) & 0xA834CF00)) ^ 0x24744F11;
  v69 = *(&a66
                         + (((914 * ((1465642797 - ((((v66 - 24) ^ 0x8F) - 1095) & 0x427AEE00)) ^ 0x575BEF2D)) & 0xFBDB7E)
                          + ((457 * ((1465642797 - ((((v66 - 24) ^ 0x8F) - 1095) & 0x427AEE00)) ^ 0x575BEF2D)) ^ 0x4FFDEDBFu)
                          - 1341778303)
                         % 0x708);
  v70 = byte_100263EF0[(2212 * (((2 * (v69 ^ 8)) & 0xFFFFFF7F) + (v69 ^ 0x78CFFAF7)) + 451765668)
                                      % 0x97F];
  HIDWORD(v71) = v70 ^ 0x70;
  LODWORD(v71) = ~v70 << 24;
  v72 = ((v71 >> 31) - ((2 * (v71 >> 31)) & 0x4A) - 91);
  v73 = ((v71 >> 31) - ((2 * (v71 >> 31)) & 0x4A) - 91) ^ (v72 >> 6) ^ (v72 >> 4) ^ 0xAD;
  v74 = (v73 + 1844306738 - ((2 * v73) & 0x64)) ^ 0x6DEDE332 | (((2 * v68) & 0x31A10F80)
                                                                               - v68
                                                                               - 416319486) ^ 0xE7BA6CC2;
  *v67 = (v74 - ((2 * v74) & 0xCEEDDA32) - 411636455) ^ 0x2A9C3242;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_1002C8B50 + v66 - 24))(1844306738, 1465642797, 3471694386);
}

void sub_1002179E4()
{
  JUMPOUT(0x1002178ACLL);
}

uint64_t sub_1002179EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  uint64_t v65;
  uint64_t v66;

  *(_DWORD *)(*a64 + 4 * v65 - 0x5C13350086E20E27) = *((_DWORD *)&STACK[0x8D0] + (97 * (int)v65 - 1133385636) % 0x55Cu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v66 + 8 * (((v65 == 11684643) * (v64 - 1086)) ^ v64)) - 4))();
}

uint64_t sub_100217A70@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v58;
  uint64_t v59;
  uint64_t (*v60)(void);

  *(&a58 + (457 * v58 + 710719628) % 0x708u) = *(&a58
                                               + (457
                                                * (((2
                                                   * (*(&a58 + (457 * v58 + 710719628) % 0x708u) ^ 0x35)) & 0x1CA)
                                                 + ((a1 + 1696423598) & 0x9AE2A16F ^ 0xCF7FBCAA ^ *(&a58 + (457 * v58 + 710719628) % 0x708u) ^ 0x35))
                                                - 1795111301)
                                               % 0x708);
  v60 = *(uint64_t (**)(void))(v59 + 8 * ((126 * (v58 == 1614932243)) ^ a1));
  *(&a58 + (457 * v58 + 710840276) % 0x708u) = *(&a58
                                               + (457
                                                * (((2
                                                   * (*(&a58 + (457 * v58 + 710840276) % 0x708u) ^ 0x35)) & 0xBA)
                                                 + (*(&a58 + (457 * v58 + 710840276) % 0x708u) ^ 0xFDBFEF68))
                                                + 73395771)
                                               % 0x708);
  return v60();
}

uint64_t sub_100217B84()
{
  int v0;
  int v1;
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v4 + (v0 * v1 - 599737790) % (((2 * v5) ^ 0xECu) + 1174)) = *(_BYTE *)(v4
                                                                                  + v0 * v1
                                                                                  - 599500150
                                                                                  - ((((v0 * v1 - 599500150) * (unint64_t)v2) >> 32) >> 10)
                                                                                  * v3);
  return (*(uint64_t (**)(void))(v6 + 8 * ((990 * (v0 == 1420437773)) ^ v5)))();
}

uint64_t sub_100217BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  int v65;
  uint64_t v66;
  int v67;
  unsigned int v68;

  v67 = *(&a65 + (1210457682 * (((v65 + 334677385) & 0xEC0D3E75) - 1192) + 871766750) % 0x708) ^ 0x35;
  v68 = (v67 - 17367581 - ((2 * v67) & 0xFFFFFFC7)) ^ 0xFEF6FDE3 | (((1505110712 - a33) & 0xFFFFFF00)
                                                                  - ((2 * (1505110712 - a33)) & 0xD227F000)
                                                                  - 384567142) ^ 0xE913F89A;
  LODWORD(STACK[0x8D0]) = v68 - 840245266 - ((2 * v68) & 0x9BD5BFDC);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v66 + 8 * v65))(2443359173, 1800, &a65, 53, 2844689134, 3205573259, 1372, &STACK[0x8D0]);
}

void sub_100217D2C()
{
  JUMPOUT(0x100217CACLL);
}

uint64_t sub_100217D34@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  unint64_t v62;
  int v63;

  v60 = *((_DWORD *)&STACK[0x8D0] + (97 * v58 - 84510245) % 0x55Cu);
  HIDWORD(v62) = v58 + 89068783;
  LODWORD(v62) = v58 - 45148945;
  v61 = v62 >> 27;
  HIDWORD(v62) = v61;
  LODWORD(v62) = (v61 + a1 - ((v61 << ((-121 * (v57 ^ 0x72)) ^ 0x94)) & 0x67FE9940)) ^ a1;
  v63 = ((2 * (v62 >> 5)) & 0xF9DEDFDE) + ((v62 >> 5) ^ 0xFCEF6FEF);
  *(_DWORD *)(((4 * (v63 + 2080309207)) | ((unint64_t)((v63 + 2080309207) < 0x78EE6FC6) << 34))
            + *a57
            - 0x5C13350267D2D57FLL) = v60;
  return (*(uint64_t (**)(void))(v59 + 8 * ((7 * ((v63 + 51416798) > 0xFF)) ^ v57)))();
}

uint64_t sub_100217E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  int v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  unsigned int v72;

  v71 = v69 - 15;
  v72 = ((LOBYTE(STACK[0x370]) ^ 0x35) - 2035899548 - ((2 * (LOBYTE(STACK[0x370]) ^ 0x35)) & 0xC8)) ^ 0x86A6A364 | ((a34 & 0xFFFFFF00 ^ 0x6FBA3900 | 0xC1A1F19) - (v71 ^ 0xF3E5E160 | a34 & 0xFFFFFF00 ^ 0x6FBA3900) - 203038490) ^ 0xBFDB2319;
  *(_DWORD *)(v68
            + 4
            * (1502118999 * v65
             + 323345161
             - ((((1502118999 * v65 + 323345161) * (unint64_t)v66) >> 32) >> 10)
             * v67)) = v72 - 840245266 - ((2 * v72) & 0x9BD5BFDC);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(*(_QWORD *)(v70 + 8 * (v71 ^ 0x13))
                                                                                               - 4))(323345161, 726648049, 2443359173, 1800, &a65, 53, 200);
}

void sub_100217F70()
{
  JUMPOUT(0x100217EF0);
}

uint64_t sub_100217F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;

  *(_DWORD *)(*a64 + 4 * v66 - 0x5C1335025AA54797) = *((_DWORD *)&STACK[0x8D0]
                                                       + ((((v65 - 390) | 0x285) - 548) * v66 + 1832304512)
                                                       % 0x55C);
  return ((uint64_t (*)(void))(*(_QWORD *)(v67 + 8 * ((2013 * (v66 + 1 == v64 + 256)) ^ v65)) - 4))();
}

uint64_t sub_100217FFC@<X0>(unsigned int a1@<W8>, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  int v57;
  uint64_t v58;
  int v59;
  int v60;
  unsigned int v61;

  *a3 = 2047018587;
  v60 = byte_100263EF0[(((234 * (215 * (v59 ^ 0x286) + 1567)) ^ 0xFF734FDB) + 13059981) % 0x97F] ^ 0xFC;
  v61 = 97 * (((2 * v60) & 0x1F8) + (v60 ^ 0x7F67F1FC)) - 1180843728;
  *(_DWORD *)(v58 + 4 * (v61 - (((v61 * (unint64_t)a1) >> 32) >> 10) * v57)) = *(_DWORD *)(*a57 - 0x5C13350084191667);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50
                                                                                                 + ((62 * ((v59 ^ 0x4B00AE57u) + 2021437166 > 0xC37D5AC1)) ^ v59 ^ 0x4D1))
                                                                                       - 4))(0xA3ECCAFE3A71ABD9, 557509, 4294438887, 1348292464, 234);
}

void sub_1002181F0()
{
  JUMPOUT(0x1002180F4);
}

uint64_t sub_1002181FC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, int a5@<W4>, unsigned int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unsigned int a60,int a61,int a62,_QWORD *a63)
{
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  _BOOL4 v73;

  v70 = (v66 + (a62 + 18) - 2 * ((a62 - 673144558) & a5 ^ (a62 - 673144702) & 8)) ^ v66;
  v71 = ((v70 * v67) & v68) + ((v70 * v69) ^ a3) + a2;
  *(_DWORD *)(((4 * (a62 - 673144702)) | ((unint64_t)(a62 - 673144702 < a4) << 34)) + *a63 + a1) = *(_DWORD *)(v64 + 4 * (v71 - (((v71 * (unint64_t)a6) >> 32) >> 10) * v63));
  v73 = a60 <= 0xB0FD47F9 || a62 + 947952140 <= a60;
  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (v73 | (4 * v73) | (v65 + 341))) - 8))();
}

void sub_1002182B4()
{
  JUMPOUT(0x10021821CLL);
}

uint64_t sub_1002182C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int v63;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (v63 ^ (1129 * ((a63 - 1219898733) < 0x2FC69581))))
                            - 12))();
}

void sub_100218304()
{
  JUMPOUT(0x1002180B4);
}

void sub_100218328()
{
  int v0;
  uint64_t v1;
  void *v2;

  free(v2);
  *(_DWORD *)(v1 + 8) = v0;
}

uint64_t sub_100218378(uint64_t result)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;

  v1 = 1856021207 * ((((2 * result) | 0x4840409B3328D17ELL) - result + 0x5BDFDFB2666B9741) ^ 0x4934B7D6D7FDBE41);
  v2 = *(_DWORD *)(result + 12) - v1;
  v3 = *(_QWORD *)(result + 24) ^ v1;
  v4 = *(_QWORD *)(result + 16) + v1;
  v5 = *(_DWORD *)(result + 36) ^ v1;
  v6 = *(_DWORD *)(result + 4) ^ v1;
  v7 = *(_DWORD *)(result + 8) ^ v1;
  v8 = v4 == v3;
  v9 = v4 > v3;
  v10 = v8;
  if ((v5 & 1) == 0)
    v9 = v10;
  if (!v9)
    v2 = v6;
  *(_DWORD *)result = v7 ^ v2;
  return result;
}

uint64_t sub_100218414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[10];
  unsigned int v5;
  _QWORD *v6;
  unsigned int v7;
  uint64_t vars0;

  v4[0] = &loc_1001C69D8;
  v4[1] = a1;
  v4[2] = a2;
  v4[3] = a3;
  v5 = (230600693 * ((&vars0 + 1575738355 - 2 * ((&vars0 - 32) & 0x5DEBDC13)) ^ 0x8FD75A38)) ^ 0x54F58F50;
  v6 = v4;
  sub_1001C67A4((uint64_t)&v5);
  return v7;
}

void sub_1002184C8(uint64_t a1)
{
  __asm { BR              X13 }
}

void sub_100218584(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  _DWORD *v5;
  unsigned int v6;
  _BYTE v7[32];
  uint64_t v8;
  __int128 v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;

  v6 = ((v7 & 0xBE9DF940 | ~(v7 | 0xBE9DF940)) ^ 0x52F8FAFC) * v1;
  memset(v7, 0, sizeof(v7));
  v8 = v2;
  v9 = 0u;
  v11 = v6 ^ 0x1D49DC7F;
  v12 = (v3 + v4) ^ v6;
  v13 = a1;
  sub_1000EA3AC((uint64_t)v7);
  *v5 = v10;
}

void sub_100218684(_QWORD *a1)
{
  BOOL v1;
  int v3;

  if (a1[4])
    v1 = a1[1] == 0;
  else
    v1 = 1;
  v3 = !v1 && a1[2] != 0;
  __asm { BR              X12 }
}

void sub_10021872C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  _QWORD v7[4];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;

  v14 = 0x483CF90335B0B89FLL;
  v7[0] = 0;
  v7[1] = &v6;
  v9 = v2;
  v10 = 0;
  v5 = 562267567
     * (((v7 ^ 0x5A23AF60 | 0xAF18922F)
       - (v7 ^ 0x5A23AF60)
       + ((v7 ^ 0x5A23AF60) & 0x50E76DD0)) ^ 0xE6A1C10C);
  v7[3] = 0;
  v8 = v1;
  v12 = v5 ^ 0xCC933444;
  v13 = (v3 + 765) ^ v5;
  v7[2] = a1;
  sub_1000EA3AC((uint64_t)v7);
  *(_DWORD *)(v4 + 4) = v11;
}

void sub_1002187F8(_DWORD *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  char *v4;

  v1 = 230600693 * (a1 ^ 0xD23C862B);
  v2 = *a1 ^ v1;
  v3 = ((a1[7] + v1) & 0xFFFFFFF0) - 1926684720;
  v4 = (char *)*(&off_1002C8B50
               + ((120
                 * (malloc_type_malloc(((2 * v3) & 0x9D7F55E0) + (v3 ^ 0xCEBFAAF6) + 826299674, 0x6F4887E1uLL) != 0)) ^ v2))
     - (((v2 - 100) | 0x22u) ^ 0x27ELL);
  __asm { BR              X8 }
}

uint64_t sub_1002188D8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((250 * ((((23 * (v0 ^ 0x26E)) ^ (v1 == 1926684720)) & 1) == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_100218954@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = v7 < v6;
  *(_BYTE *)(v10 + (v1 + a1)) = *(_BYTE *)(v2 + ((v1 + a1) & 0xFLL)) ^ *(_BYTE *)(*(_QWORD *)(v9 + 16)
                                                                                              + (v1 + a1)) ^ *(_BYTE *)(v3 + ((v1 + a1) & 0xFLL)) ^ (-39 * ((v1 + a1) & 0xF)) ^ *(_BYTE *)(((v1 + a1) & 0xFLL) + v4 + 2);
  v13 = v1 + 1584200507 + ((4 * v5) ^ 0x824);
  v14 = v12 ^ (v13 < v6);
  v15 = v13 < v7;
  if (!v14)
    v12 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v12 * v8) ^ v5)) - 12))();
}

uint64_t sub_1002189E4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL4 v10;

  *(_BYTE *)(v7 + (v1 + a1)) = *(_BYTE *)(v2 + ((v1 + a1) & 0xFLL)) ^ *(_BYTE *)(v3 + ((v1 + a1) & 0xFLL)) ^ *(_BYTE *)(((v1 + a1) & 0xFLL) + v4 + 2) ^ (-39 * ((v1 + a1) & 0xF)) ^ 0x80;
  v9 = v6 - 1823612095 + (v5 ^ 0x350);
  if ((v1 + 1156333955) < 0x620D90C3 != v9 < 0x620D90C3)
    v10 = v9 < 0x620D90C3;
  else
    v10 = v1 + 1156333955 < v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((61 * v10) ^ v5)) - 4))();
}

uint64_t sub_100218A80@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;

  v13 = v3 + 1;
  v14 = (v13 + a3);
  v15 = (((v7 + 76) | 0x84) - 653) & v14;
  *(_BYTE *)(v11 + v14) = *(_BYTE *)(v5 + v15) ^ *(_BYTE *)(v4 + v15) ^ *(_BYTE *)(v15 + v6 + 2) ^ (v15 * v10);
  v16 = v13 + v9 < a1;
  if (a1 < v8 != v13 + v9 < v8)
    v16 = a1 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((v16 * a2) ^ v7)) - 4))();
}

uint64_t sub_100218AFC()
{
  int v0;
  void *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((54 * (((((v0 ^ 0x36) - 334) ^ (v1 == &unk_100256DD5)) & 1) == 0)) ^ v0))
                            - 8))();
}

void sub_100218B58(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v5;
  _BOOL4 v7;

  v5 = ((v2 + 11) & 0xF) - (((v2 + 11) << ((((v1 - 28) | 0x30) ^ 0x42) + v1 + 115)) & 4);
  v7 = v3 != a1 && v5 == 0;
  __asm { BR              X8 }
}

uint64_t sub_100218BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  int v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unint64_t v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  _BYTE *v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  _BOOL4 v107;
  unsigned int v108;
  uint64_t v109;
  char *v110;

  *(_QWORD *)(v35 - 200) = v33;
  v36 = (v31 - 17);
  v37 = v34[12];
  v38 = byte_100259FD0[v34[8] ^ 0x17] + 2 * ((v34[8] ^ 0xFFFFFFD6) + 1) + (((v34[8] ^ 0xFFFFFFD6) + 1) ^ 0x7F);
  v39 = (v38 - ((2 * v38 + 94) & (v36 ^ 5)) + 92) ^ 0x29;
  v40 = (((v39 - ((2 * v39) & 0x6E)) << 24) + 922746880) ^ 0x37000000;
  v41 = byte_10025B210[v34[9] ^ 0xECLL];
  v42 = byte_100268230[v34[11] ^ 0xFALL] + 49;
  v43 = (v40 - ((2 * v40) & 0x77777777) - 1156752054) ^ 0xBB0D5D4A | ((~(2 * v42) | 0xFFFFFE1D)
                                                                    + v42
                                                                    + 389486834) ^ 0x173718F1;
  HIDWORD(v44) = ~v41;
  LODWORD(v44) = (v41 ^ 0xFFFFFF9F) << 24;
  v45 = (((2 * ((v37 ^ 0x31) + 1)) & 0x84)
       + byte_100259FD0[v37 ^ 0xF0]
       + (((v37 ^ 0x31) + 1) ^ 0xFFFFFFC2)
       - 2 * ((byte_100259FD0[v37 ^ 0xF0] + (((v37 ^ 0x31) + 1) ^ 0xFFFFFFC2)) & 3)
       - 17) ^ 0x73;
  v46 = (((v45 - ((2 * v45) & 0xFFFFFFBF)) << 24) + 1593835520) ^ 0x5F000000;
  v47 = (v46 - ((2 * v46) & 0x78000000) + 1008995490) ^ 0x3C240CA2 | ((byte_100268230[v34[15] ^ 0xE1]
                                                                                      + 49)
                                                                    - ((2 * (byte_100268230[v34[15] ^ 0xE1] + 49)) & 0x19C)
                                                                    + 704363214) ^ 0x29FBBACE;
  LODWORD(v37) = ((((((v44 >> 27) - ((2 * (v44 >> 27)) & 0x88) - 60) ^ 0x5E)
                  - ((2 * (((v44 >> 27) - ((2 * (v44 >> 27)) & 0x88) - 60) ^ 0x5E)) & 0x1D4)) << 16)
                + 1961492480) ^ 0x74EA0000;
  v48 = (v37 - ((2 * v37) & 0x35340000) - 1701176168) ^ 0x9A9A1C98 | (v43 - ((2 * v43) & 0x43E6236E) + 569577911) ^ 0x21F311B7;
  v49 = v48 - ((2 * v48) & 0x47929CD2) + 600395369;
  v50 = byte_100259FD0[*v34 ^ 0x70] + (*v34 ^ 0xFFFFFFB1) - 82;
  v51 = (2 * (v50 & 0x3F) + (v50 ^ 0x3F) - ((2 * (2 * (v50 & 0x3F) + (v50 ^ 0x3F)) - 124) & 0x9E) - 111) ^ 0x12;
  v52 = (((v51 - ((2 * v51) & 0x20)) << 24) + 0x10000000) ^ 0x10000000;
  v53 = v34[4];
  v54 = byte_100268230[v34[3] ^ 0xABLL] + 49;
  v55 = (v52 - ((2 * v52) & 0x2E000000) - 1758781145) ^ 0x972B2127 | ((~(2 * v54) | 0xFFFFFE47)
                                                                    + v54
                                                                    - 472349475) ^ 0xE3D884DC;
  v56 = byte_10025B210[v34[5] ^ 0x86];
  LODWORD(v37) = v53 ^ ((v53 ^ 0x2B) - ((2 * (v53 ^ 0x2B) + 2) & 0x14) + 11) ^ ((v53 ^ 0x3B)
                                                                              + (~(2 * (v53 ^ 0x3B) + 2) | 0xFFFFFFF9)
                                                                              - 107);
  v57 = byte_100259FD0[v53 ^ 0xFA] + (((v37 ^ 0x5D) + 16) ^ 0x42) - ((2 * ((v37 ^ 0x5D) + 16)) & 0x7A) + 1;
  HIDWORD(v44) = ~v56;
  LODWORD(v44) = (v56 ^ 0xFFFFFF9F) << 24;
  LODWORD(v37) = ((((((v44 >> 27) - ((2 * (v44 >> 27)) & 0x72) + 57) ^ 0xA8)
                  - ((2 * (((v44 >> 27) - ((2 * (v44 >> 27)) & 0x72) + 57) ^ 0xA8)) & 0x158)) << 16)
                + 430702592) ^ 0x19AC0000;
  v58 = (v57 - ((2 * v57 - 42) & 0xE6) - 34) ^ 0xE8;
  v59 = (((v58 - ((2 * v58) & 0x1A)) << 24) + 218103808) ^ 0xD000000;
  v60 = (v59 - ((2 * v59) & 0xA000000) + 91689685) ^ 0x57712D5 | (v37 - ((2 * v37) & 0x7EDC0000) + 2137916019) ^ 0x7F6E0273;
  v61 = v60 - ((2 * v60) & 0xEF05AF2C) - 142420074;
  v62 = byte_100263BF0[v34[10] ^ 0x53] ^ 0x4E;
  v63 = (((v62 - ((2 * v62) & 0xE0)) << 8) + 726691840) ^ 0x2B507000;
  v64 = v49 ^ 0x23C94E69 | (v63 - ((2 * v63) & 0x60D4800) + 50767101) ^ 0x306A4FD;
  v65 = byte_100268230[v34[7] ^ 0x62];
  v66 = byte_10025B210[v34[13] ^ 0x77];
  v67 = (v65 - ((2 * (_BYTE)v65 + 34) & 0x30) - 55) ^ 0x62;
  v68 = v61 ^ 0xF782D796 | (v67 - ((2 * v67) & 0xDA) + 577796205) ^ 0x2270786D;
  HIDWORD(v44) = ~v66;
  LODWORD(v44) = (v66 ^ 0xFFFFFF9F) << 24;
  v69 = ((((((v44 >> 27) - ((2 * (v44 >> 27)) & 0xD8) - 20) ^ 0x4B)
         - ((2 * (((v44 >> 27) - ((2 * (v44 >> 27)) & 0xD8) - 20) ^ 0x4B)) & 0xD4)) << 16)
       + 409600000) ^ 0x186A0000;
  v70 = (v69 - ((2 * v69) & 0x1AB20000) + 223961334) ^ 0xD5960F6 | (v47 - ((2 * v47) & 0x93D280F4) - 907460486) ^ 0xC9E9407A;
  v71 = v70 - ((2 * v70) & 0xF741FEF4);
  v72 = byte_100263BF0[v34[6] ^ 0xCDLL] ^ 0x93;
  v73 = (((v72 - ((2 * v72) & 0x1A8)) << 8) - 688925696) ^ 0xD6EFD400;
  v74 = (v68 - ((2 * v68) & 0x148E6E50) - 1975044312) ^ 0x8A473728 | (v73 - ((2 * v73) & 0x17FDAC00) - 872491500) ^ 0xCBFED614;
  v75 = byte_100263BF0[v34[2] ^ 0xD4] ^ 0x47;
  v76 = (((v75 - ((2 * v75) & 0x11C)) << 8) + 1891995136) ^ 0x70C58E00;
  v77 = v34[1];
  LODWORD(v53) = -1468674499
               - ((v77 ^ 0x6DBAFAA2)
                + 2 * (v77 ^ 0x5D))
               - ((1534457496 - 2 * ((v77 ^ 0x6DBAFAA2) + 2 * (v77 ^ 0x5D))) & 0x7575A5E2);
  v78 = (v77 ^ 0x10) - ((2 * (v77 ^ 0x10)) & 0x74) - 2072438726;
  LODWORD(v53) = byte_10025B210[(v78 ^ v53 ^ 0xA18C5BE7 ^ ((v78 ^ 0x7B86E7C5)
                                                                       - ((2 * (v78 ^ 0x7B86E7C5) + 2) & 0x3E9F2258)
                                                                       + 525308205))
                              + 77];
  HIDWORD(v44) = ~(_DWORD)v53;
  LODWORD(v44) = (v53 ^ 0xFFFFFF9F) << 24;
  *(_QWORD *)(v35 - 208) = v34;
  LODWORD(v37) = (v44 >> 27) - ((2 * (v44 >> 27)) & 0x1A) - 115;
  v79 = (v76 - ((2 * v76) & 0x628CC200) + 826696125) ^ 0x314661BD | (v55 - ((2 * v55) & 0x36C949E2) - 1687902991) ^ 0x9B64A4F1;
  LODWORD(v37) = ((((v37 ^ 0x59) - ((2 * (_DWORD)v37) & 0x4C)) << 16) - 853147648) ^ 0xCD260000;
  v80 = (v37 - ((2 * v37) & 0x1AE60000) + 1299415180) ^ 0x4D73808C | (v79 - ((2 * v79) & 0x4FE5DC70) - 1477251528) ^ 0xA7F2EE38;
  LODWORD(v37) = byte_100263BF0[v34[14] ^ 0x4ELL] ^ 0xF6;
  LODWORD(v37) = ((((_DWORD)v37 - ((2 * (_DWORD)v37) & 0x1C8)) << 8) + 1425597440) ^ 0x54F8E400;
  HIDWORD(a24) = (v37 - ((2 * v37) & 0x58098200) - 1408974354) ^ 0xAC04C1EE;
  LODWORD(v37) = ((v71 - 73334918) ^ 0xFBA0FF7A | HIDWORD(a24))
               - ((2 * ((v71 - 73334918) ^ 0xFBA0FF7A | HIDWORD(a24))) & 0x84020B12)
               + 1107363209;
  LODWORD(v53) = ((2 * v37) ^ 0x9F25AE8A) - ((2 * ((2 * v37) ^ 0x9F25AE8A)) & 0x123D5378) + 958310844;
  *(_DWORD *)(v35 - 216) = (2 * v74) & 0xD03C0FA2;
  *(_DWORD *)(v35 - 224) = v74 + 1746798545;
  *(_DWORD *)(v35 - 232) = v80 - 2128846527;
  *(_DWORD *)(v35 - 228) = (2 * v80) & 0x238C282;
  *(_DWORD *)(v35 - 240) = (2
                          * ((((v37 ^ 0x4F92D745) + 227791549) ^ 0xBFAF4FEF)
                           + ((2 * ((v37 ^ 0x4F92D745) + 227791549)) & 0x7F5E9FDE)
                           + (v53 & 0x1B27A57A ^ 0x1906C25B)
                           + ((2 * v53) & 0x364F0830 ^ 0xCDF2FFCF))
                          + 10525022) & 0x958B50C;
  LODWORD(a22) = v32;
  v81 = *(_BYTE **)(v35 - 200);
  v82 = *v81;
  *v81 = v82 ^ 0x55;
  v83 = 2014341611 * ((v82 ^ 0x6FFBFF4E) + ((2 * v82) & 0x9C)) + 501705505;
  v84 = (v83 ^ 0xBD9D4F59) + 1113764007 + ((2 * v83) & 0x7B3A9EB2);
  v85 = v84 % 0x101 + 282271771 + (~(2 * (v84 % 0x101)) | 0xFFFFFFCB);
  v86 = (v85 & 0x28 ^ 9) - (v85 & 0x46) + 277211221;
  v87 = (((2 * (v85 & 0x191 ^ 0x110)) | 0x48497066) - (v85 & 0x191 ^ 0x110) + 1541097421) ^ 0x2D847813;
  v88 = ((v84 & 0x9C9C2391) - ((2 * v84) & 0x10084022) + 1761983513) ^ 0xBA280EA7 ^ (((2 * v87) & 0x4AE518C2)
                                                                                   - v87
                                                                                   + 1519219614) | ((v84 & 0x6363DC6E)
                                                                                                  - ((2 * v84) & 0xC686988C)
                                                                                                  + 2002480214) ^ 0x5DE3D5BF ^ ((v86 & 0x80AAF8 ^ 0x281810B9) + (v86 ^ 0x12A1AB44) - ((v86 ^ 0x12A1AB44) & 0x44AF8));
  v89 = ((v88 - ((2 * v88) & 0x5C380026) - 1373896685) ^ 0x5EFF4A7A) - 828153160;
  v90 = (v89 ^ 0x180FFF76) + 2078559509 + ((2 * v89) & 0x301FFEEC) - 403701622;
  v91 = v90 - ((2 * v90) & 0x9D1743AA) - 829709867;
  v92 = (v91 ^ 0xA2A5FF3) + 1970758880 - ((2 * ((v91 ^ 0xA2A5FF3) - 253539735)) & 0x92834EE);
  v93 = (v91 ^ 0xA2A5FF3) + 909559972 + (~(2 * ((v91 ^ 0xA2A5FF3) - 828153160)) | 0x30D93427);
  v94 = (((v91 ^ 0xA2A5FF3) + 520106715 - ((2 * (v91 ^ 0xA2A5FF3)) & 0x3E0065B6)) ^ 0x1F0032DB) >> 31;
  v95 = ((2 * v94) & 0xF7AFFF2A) + (v94 ^ 0x7BD7FF95);
  v96 = (((2 * (v95 + 107)) & 0x1F4) + ((v95 + 107) ^ 0x1CFFFFFA) - 486539258) % 0xBD;
  v97 = v95 + (v96 ^ 0xFFFFFF21) - ((2 * v96) & 0xBC) + 74;
  v98 = ((2 * v96) & 0xFE) + (v96 ^ 0x53FFCD7F) + ((2 * v97) & 0x1F0);
  v99 = v98
      + (v97 ^ 0xFD7FDDF8)
      - ((2 * (v98 + (v97 ^ 0xFD7FDDF8)) + 1560324370) & 0x92952C54)
      + 2009787059;
  v100 = v91 ^ 0x8F34A361;
  v101 = v99 ^ (((2 * v91) ^ 0x1454BFE6) - 2 * (((2 * v91) ^ 0x1454BFE6) & 0x69E6499C ^ (2 * v91) & 0x18) - 370783867);
  v102 = v92 ^ 0x84941A77;
  v103 = 2 * (((v101 ^ 0x20ACDFAF) & v102) - ((2 * ((v101 ^ 0x20ACDFAF) & v102)) & 0x1D95C880)) - 1651128192;
  v104 = (v92 ^ 0xA438C5D8 ^ v101) + (v103 ^ 0x63706F28) + 18503768 + ((2 * v103) & 0xFDCB4F50 ^ 0x390B0100);
  v105 = v100 ^ (v93 + 1) ^ 0x93AF4209 ^ (v104 - ((2 * v104) & 0x158D2CC4) + 180786786);
  v106 = v105 - ((2 * v105 + 2084372786) & 0xD319264A) + 665523134;
  v107 = (v32 + 1692156007) > 0x4C69B2FD;
  if ((v32 + 1692156007) < 0x4C69B2FC)
    v107 = 1;
  v108 = (((v106 ^ 0x698C9325) + v102) ^ 0xF7FAE7F9)
       + ((2 * v106) ^ 0x7E3B36FB)
       + ((4 * v106) & 0xA5BBDE9C ^ 0x5BCDB36B)
       + ((2 * ((v106 ^ 0x698C9325) + v102)) & 0xEFF5CFF2)
       + 1;
  v109 = v100 ^ 0x63A6CCD6 ^ v106;
  v110 = (char *)*(&off_1002C8B50 + (int)((47 * v107) ^ v36)) - 12;
  HIDWORD(a27) = (v64 - ((2 * v64) & 0xC5757562) - 491078991) ^ 0xF9769E05;
  return ((uint64_t (*)(uint64_t, uint64_t, char *, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v110)(902172332, v36, v110, v108 - ((2 * v108 + 902172332) & 0x59DDBC94) + 131196320, (v36 - 675), v109, 876751309, 47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

void sub_100219C34()
{
  JUMPOUT(0x100219634);
}

uint64_t sub_100219C40()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (28 * ((v2 ^ 0x3F6FDFD6) + (v0 & 0x7EDFBFA0) == 1064296406))))
                            - 8))();
}

uint64_t sub_100219C48(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;

  *(_DWORD *)(v6 - 228) = *(_DWORD *)(v6 - 232) - *(_DWORD *)(v6 - 228);
  v7 = **(unsigned __int8 **)(v6 - 200) ^ 0xB728133D;
  v8 = v7 & 0x65 ^ 0x25;
  v9 = ((v7 & 0xFFFFFF9A ^ 9) + 63) ^ 0x50 | v8;
  v10 = (v5 ^ 0x698C9325) + 1770820389 - ((2 * (v5 ^ 0x698C9325) + 2) & 0xD319264A) + 1;
  v11 = (v9 - 2 * (v9 & 0x17 ^ v8 & 1) - 106) ^ 0xC3;
  v12 = a4 ^ 0xE06DE71C ^ (v11 - ((2 * v11) & 0xAC) + 1283668310);
  v13 = ((4 * ((v10 >> 1) & 1)) | 0x309E6F21) - (v10 & 3);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))((char *)*(&off_1002C8B50
                                                                              + ((73
                                                                                * ((v13 & 0x1C ^ 0xC340800C)
                                                                                 + (v13 ^ 0x3C2D1910)
                                                                                 - ((v13 ^ 0x3C2D1910) & 0x800621C) != -940338132)) | (a5 + 104)))
                                                                    - 4))(23, 195, 172, v12 - ((2 * v12 + 332235984) & 0x59DDBC94) - 153771854);
}

void sub_100219DDC()
{
  JUMPOUT(0x100219CDCLL);
}

uint64_t sub_100219DEC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;

  v21 = (**(unsigned __int8 **)(v20 - 208) ^ 0x7FFFDDFB)
      + ((**(unsigned __int8 **)(v20 - 208) << ((a5 - 96) & 0xF3 ^ 0x51)) & 0x1F6)
      + 2026900469;
  v22 = v19 ^ 0xA007B287 ^ (1577634329 * v21 - ((-732535794 - 1139698638 * v21) & 0x93164344) - 1279896663);
  v23 = v22 + ((v22 % 0x101) ^ 0xEF17FABF) + ((2 * (v22 % 0x101)) & 0x17E) + 283641153;
  v24 = (a4 ^ 0xD4406501 ^ (v23 - ((2 * v23) & 0xF15D7696) + 2024717131)) + (a6 ^ 0xF4D0EE74);
  v25 = (v24 ^ 0x76FF23F1) + v18 + ((2 * v24) & 0xEDFE47E2);
  v26 = v25 - ((2 * v25 + 418544366) & 0xB1DDBC68) - 446162005;
  v27 = (v26 ^ 0x53EF10B8) + v18 - ((2 * ((v26 ^ 0x53EF10B8) + v18) + 116441810) & 0x214376DA);
  v28 = (v26 ^ 0xAC10EF47)
      + (a6 ^ 0xF4D0EE74)
      - 1849816599
      - ((2 * ((v26 ^ 0xAC10EF47) + (a6 ^ 0xF4D0EE74))) & 0x237C13D2);
  HIDWORD(v29) = v26 ^ 0xC10EF47;
  LODWORD(v29) = v26 ^ 0xA0000000;
  v30 = a4 ^ 0xFE310D ^ v26;
  v31 = ((v29 >> 29) ^ 0xFB372BF7)
      + ((2 * (v29 >> 29)) & 0xF66E57EE)
      + (((v28 ^ 0x91BE09E9) + v30) ^ 0xA0A00880)
      - ((2 * ((v28 ^ 0x91BE09E9) + v30)) & 0xBEBFEEFE)
      + 1;
  v32 = v31 - ((2 * v31 - 934177008) & 0xAC36DDCC) - 1169933714;
  v33 = v32 ^ (v27 - 1810228010);
  v34 = v33 ^ 0xB73167FB ^ v28;
  v35 = (char *)*(&off_1002C8B50 + (int)a5 + 92) - 4;
  return ((uint64_t (*)(char *, _UNKNOWN **, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v35)(v35, &off_1002C8B50, 4191141874, (v33 ^ 0xDEBDF4DE) + v30 - 1393631670 - ((2 * ((v33 ^ 0xDEBDF4DE) + v30)) & 0x59DDBC94), a5, v34, v32, 3562431502, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void sub_10021A118()
{
  JUMPOUT(0x100219EB8);
}

uint64_t sub_10021A128@<X0>(int a1@<W8>)
{
  char v1;

  return ((uint64_t (*)(void))((char *)*(&off_1002C8B50 + (a1 | (14 * (v1 & 1)))) - 8))();
}

uint64_t sub_10021A1C4@<X0>(int a1@<W8>)
{
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((14 * ((v1 + 1) & 1)) | a1)) - 8))();
}

uint64_t sub_10021A228(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unint64_t v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  void *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v194;
  unsigned int v195;

  v35 = (v32 - 402655048) & 0xFFFC755B;
  *(_DWORD *)(v34 - 232) = v35;
  v36 = (((v32 - 309) | 0x4C) ^ 0xCF1EB045)
      + 1016084021 * (a6 ^ 0xF8329ACC)
      - (((v35 ^ 0x9EDC1C33) * (a6 ^ 0xF8329ACC)) & 0x9E3D6232);
  v37 = (((-933363712 * (a4 ^ 0xACEEDE4A) - ((-1866727424 * (a4 ^ 0xACEEDE4A)) & 0xE4200000) - 233828719) ^ 0xF2100E91) & 0xFFFE0000 | ((1146020911 * (a4 ^ 0xACEEDE4A) - ((144558174 * (a4 ^ 0xACEEDE4A)) & 0x50DD21C8) + 678334692) >> 15)) ^ 0x50DD;
  v38 = v37 - ((2 * v37) & 0xF698E12A) + 2068607125;
  HIDWORD(v39) = v30 ^ 0x125;
  LODWORD(v39) = (-1610171903 * (v30 ^ 0x698C9325) + 1834706944 - ((1074623490 * (v30 ^ 0x698C9325)) & 0xDAB6D208) + 260) ^ 0x6D5B6800;
  v40 = ((-212945416 * v31 - ((1721592816 * v31 + 620180848) & 0x5D720E40) - 2127257124) ^ 0xAEB90724) & 0xFFFFFFF8 | ((-26618177 * v31 - ((-53236354 * v31 - 1264654674) & 0xE51587AE) + 1289369390) >> 29);
  v41 = ((2 * v40) & 0x9BFFCFFA ^ 2) + (v40 ^ 0xCDFFE7FE);
  v42 = (((-1875495680 * (a6 ^ 0xF8329ACC) - ((7105024 * (a6 ^ 0xF8329ACC)) & 0x14AE9800) + 173493346) ^ 0xA574C62) & 0xFFFFFF00 | HIBYTE(v36)) ^ 0xCF;
  v43 = v42 - ((2 * v42) & 0xEEC0EC5E) + 2002810415;
  v44 = 14579667 * (v43 ^ 0x7760762F) - ((29159334 * (v43 ^ 0x7760762F)) & 0xCB65EE62) + 1706227505;
  v45 = 1524019463 * v41 - ((900555278 * v41 + 507082282) & 0x55EA199C) - 1173239837;
  v46 = v38 ^ 0x7B4C7095;
  v47 = 1123232339 * (v38 ^ 0x7B4C7095) - ((-2048502618 * (v38 ^ 0x7B4C7095)) & 0xFD702862) + 2125993009;
  v48 = HIBYTE(v44);
  v49 = (v38 ^ v43 ^ 0x4049773 ^ ((v39 >> 9) - ((2 * (v39 >> 9)) & 0x10512392) + 136876489)) - v41 - 838866947;
  v50 = ((2 * v49) & 0xF7B3DCF6) + (v49 ^ 0xFBD9EE7B);
  v51 = 1087408779 * v50 - ((-2120149738 * v50 - 2074449298) & 0x910413C4) + 179257113;
  v52 = ((-1592453632 * v50 - ((1110060032 * v50 + 886365184) & 0x4194A400) + 2067054634) ^ 0x20CA522A) & 0xFFFFFE00 | (v51 >> 23);
  v53 = ((2 * v52) & 0x6BFC7A3A ^ 0x222) + (v52 ^ 0x35FE3C8C);
  v54 = ((710082560 * v46 - ((1420165120 * v46) & 0x85120000) - 1031169849) ^ 0xC28998C7) & 0xFFFF0000 | HIWORD(v47);
  v55 = ((-562572544 * (v43 ^ 0x7760762F) - ((485467648 * (v43 ^ 0x7760762F)) & 0x1EDBA000) + 258855165) ^ 0xF6DD0FD) & 0xFFFFFF00 | HIBYTE(v44);
  v56 = ((2 * v55) & 0xB76BFF36 ^ 2) + (v55 ^ 0xDBB5FFFE);
  v57 = (1800962944 * v41 - ((1454442240 * v41 + 482022656) & 0x50806E00) + 916308436) ^ 0x9E3F4AF7 ^ (((v45 >> 25) ^ 0x20000015) - ((2 * ((v45 >> 25) ^ 0x20000015)) & 0x46) + 377453987);
  v58 = -940840365 * v57 - ((265802918 * v57) & 0x15C56B36) - 1964853861;
  v59 = (v54 ^ 0x67E31166)
      + ((2 * v54) & 0xCFC6DFBC ^ 0xDD30)
      + v56
      + ((v57 - 905854237 + v53) ^ 0x8440A830)
      - ((2 * (v57 - 905854237 + v53)) & 0xF77EAF9E)
      + 1;
  HIDWORD(v39) = ~(v51 >> 23);
  LODWORD(v39) = (738402791 * v53 - ((1476805582 * v53 + 482229162) & 0x4789F02C) - 232516117) ^ 0x23C4F816;
  v60 = ((2 * (v39 >> 1)) & 0xD90F8BAE) + ((v39 >> 1) ^ 0x6C87C5D7);
  v61 = 696254464 * v57 - ((318767104 * v57) & 0x1D000000) - 1899990395;
  HIDWORD(v39) = v48 ^ 1;
  LODWORD(v39) = (1342801329 * v56 - ((-1609364638 * v56 + 970423722) & 0xBB88C2EE) + 2058362956) ^ 0x5DC46174;
  v62 = ((2 * (v39 >> 2)) & 0x37DBFFFC) + ((v39 >> 2) ^ 0x1BEDFFFE) + v60;
  v63 = 378602653 * v60 - ((757205306 * v60 - 1850040758) & 0x8BF31A9E) + 248962164;
  v64 = (((-423624704 * v59 - ((-847249408 * v59 + 150994944) & 0x85800000) + 1199003653) ^ 0xC2F75805) & 0xFFC00000 | ((-1077198949 * v59 - ((127303478 * v59 + 44411940) & 0x6BFD636) + 1018347821) >> 10)) ^ 0x20D7FA;
  v65 = v64 - ((2 * v64) & 0x9CCD0286) + 1315340611;
  v66 = ((2 * ((v61 ^ 0x8EC07285) & 0xFF800000 | (v58 >> 9))) & 0xA7BEFCB0 ^ 0x8AE0B0)
      + (((v61 ^ 0x8EC07285) & 0xFF800000 | (v58 >> 9)) ^ 0x539A0F02);
  v67 = (v65 ^ (v62 - 1318088276 + (~(2 * v62 + 1863611478) | 0x8C3550FF)) ^ 0x7783D6C3) - v66 + 1407155800;
  v68 = -1660944384 * v60 - ((973078528 * v60 + 1241513984) & 0x42000000) + 1188016200;
  v69 = (((800795648 * (((2 * v67) & 0xF83BFDFA) + (v67 ^ 0xFC1DFEFD))
         - ((1601591296 * (((2 * v67) & 0xF83BFDFA) + (v67 ^ 0xFC1DFEFD)) + 1153107968) & 0x9AF61800)
         - 271019840) ^ 0xCD7B0CC0) & 0xFFFFFC00 | ((1783361227 * (((2 * v67) & 0xF83BFDFA) + (v67 ^ 0xFC1DFEFD))
                                                   - ((345496982 * (((2 * v67) & 0xF83BFDFA) + (v67 ^ 0xFC1DFEFD))
                                                     + 907095746) & 0x23FC9F6A)
                                                   + 1292298006) >> 22)) ^ 0x247;
  v70 = v69 - ((2 * v69) & 0x169B4FB6) + 189638619;
  v71 = (-2089625072 * v66 - ((115717152 * v66 + 176313600) & 0x9F62BA0)) & 0xFFFFFFF0 | ((137833889 * v66
                                                                                         - ((275667778 * v66 + 614999376) & 0x801D2BE2)
                                                                                         - 765286247) >> 28);
  v72 = (((-2044743680 * (v65 ^ 0x4E668143) - ((205479936 * (v65 ^ 0x4E668143)) & 0x2C696000) - 1774928729) ^ 0x9634BCA7) & 0xFFFFF000 | ((-1160224261 * (v65 ^ 0x4E668143) - ((95470582 * (v65 ^ 0x4E668143)) & 0xAD86E1C) - 2056505586) >> 20)) ^ 0x856;
  v73 = v72 - ((2 * v72) & 0x57D929E2) - 1410558735;
  v74 = ((v68 ^ 0x21CFB048) & 0xFF000000 | (v63 >> 8)) ^ 0x45F98D;
  v75 = v74 - ((2 * v74) & 0x362838C4) + 454302818;
  v76 = ((2 * ((v75 ^ 0x1B141C62) + (v73 ^ 0x54136B0E) + 1)) & 0x4BFF21F6)
      + (((v75 ^ 0x1B141C62) + (v73 ^ 0x54136B0E) + 1) ^ 0xA5FF90FB);
  v77 = (v76 - ((2 * v76 + 642319456) & 0x968569D2) - 563661031) ^ v70;
  v78 = (((2 * v77) ^ 0x801E2664) - ((2 * ((2 * v77) ^ 0x801E2664)) & 0x7B20BCC) + 131663334) & 0x6839368 ^ 0x31228;
  v79 = v78 - ((2 * v78) & 0x70090) + 947104859;
  v80 = v75 ^ (((v71 - 1438891952) ^ 0x84FB15DC) - ((2 * ((v71 - 1438891952) ^ 0x84FB15DC)) & 0x5A50A8F4) - 1389865862) ^ v73;
  v81 = 2 * (((v79 ^ 0x3EF1BF13) & (v77 ^ 0xC34EDA86)) - ((2 * ((v79 ^ 0x3EF1BF13) & (v77 ^ 0xC34EDA86))) & 0x5681D74A))
      + 1451349834;
  LODWORD(a24) = v80;
  v82 = (v77 ^ 0xFDBF6595 ^ v79) + (v81 ^ 0xDDE62805) + 1956118705 + ((2 * v81) & 0x16CFFE9C ^ 0x403AE94);
  v83 = (v70 ^ v80 ^ 0xE96284CD) + (v82 ^ 0x7F5EBEFB) + ((2 * v82) & 0xFEBD7DF6) - 2136915706;
  v84 = ((2 * v83) & 0x3DBF3EEC) + (v83 ^ 0x1EDF9F76);
  LODWORD(a21) = v84 - 826046601;
  v85 = v84 - 826046601 - ((2 * v84 + 60208638) & 0x9F058F0);
  v86 = (v73 ^ 0xABEC94F1)
      + (v85 ^ 0x7B07D387)
      + 1839835111
      - ((2 * ((v73 ^ 0xABEC94F1) + (v85 ^ 0x7B07D387) + 1)) & 0xDB534FCC);
  v87 = 880936289 * (v85 ^ 0x84F82C78) - ((688130754 * (v85 ^ 0x84F82C78)) & 0x3688C150) - 1690017624;
  v88 = (v87 & 0xEAE83807 ^ 0x9F57E7F8) + 476427202 + ((2 * (v87 & 0xEAE83807 ^ 0x9F57E7F8)) & 0x10C06002 ^ 0xD7F4F87F);
  v89 = ((v87 & 0x1517C7F8 ^ 0x14174070) - ((2 * (v87 & 0x1517C7F8 ^ 0x14174070)) & 0x202B0EA0) - 126501033) ^ 0xF836AFDC;
  v90 = (v89 | 0xED61858E) - (v89 | 0x129E7A71) + 312375921;
  HIDWORD(v39) = v88 ^ 0x1B3C1;
  LODWORD(v39) = v88 ^ 0x1C640000;
  v91 = (v39 >> 18) - ((2 * (v39 >> 18)) & 0x7F310734) + 1066959770;
  HIDWORD(v39) = v90 ^ 0x195DD;
  LODWORD(v39) = v90 ^ 0xE8300000;
  v92 = ((v39 >> 18) - ((2 * (v39 >> 18)) & 0xDA2DE77E) - 317262913) ^ v91;
  HIDWORD(v39) = v92 ^ 0x911;
  LODWORD(v39) = v92 ^ 0xC46D4000;
  v93 = (v39 >> 14) - ((2 * (v39 >> 14)) & 0xDA41A0BE) + 1830867039;
  HIDWORD(v39) = v93 ^ 0xF08BD3;
  LODWORD(v39) = v93 ^ 0x89000000;
  v94 = (v39 >> 24) - ((2 * (v39 >> 24)) & 0xFFA6B290) - 2926264;
  HIDWORD(v39) = v94 ^ 0x5D;
  LODWORD(v39) = v94 ^ 0xE814A100;
  v95 = v39 >> 8;
  v96 = v95 + 2011399270;
  v97 = v95 + 2011399270 - ((2 * v95) & 0xEFC708CC);
  LODWORD(a23) = v85 ^ v70 ^ v80;
  LODWORD(a28) = v85 ^ v70;
  v98 = -1415786763 * (a28 ^ 0x8FB58BA3) - ((1463393770 * (a28 ^ 0x8FB58BA3)) & 0xB5817192) + 1522579657;
  v99 = -856731648 * (v85 ^ v70 ^ 0x8FB58BA3) - ((-1713463296 * (v85 ^ v70 ^ 0x8FB58BA3)) & 0xBF780000) + 1606156402;
  v100 = (((251002880 * (a23 ^ 0x9265574A) - ((502005760 * (a23 ^ 0x9265574A)) & 0xF2E40000) + 2037545418) ^ 0x797279CA) & 0xFFFE0000 | ((2068940667 * (a23 ^ 0x9265574A) - ((-157085962 * (a23 ^ 0x9265574A)) & 0xA9B9CA34) - 723720934) >> 15)) ^ 0x1A9B9;
  v101 = v100 - ((2 * v100) & 0xAFCE945A) - 672708051;
  v102 = ((2 * (v99 ^ 0x5FBC0072 | (v98 >> 20))) & 0xE5FEF7BC ^ 0x318) + ((v99 ^ 0x5FBC0072 | (v98 >> 20)) ^ 0x72FF7E72);
  HIDWORD(v39) = v96 ^ 2;
  LODWORD(v39) = v97 ^ 0x77E38464;
  v103 = (((((~(50331648 * (v86 ^ 0x6DA9A7E6)) | 0xF7FFFFFF) - 780140544 * (v86 ^ 0x6DA9A7E6) + 70333539) | 1) ^ 0x4313463) & 0xFF800000 | ((-1027952221 * (v86 ^ 0x6DA9A7E6) - ((91579206 * (v86 ^ 0x6DA9A7E6)) & 0x73C4ABF6) + 971134459) >> 9)) ^ 0x1CF12A;
  v104 = v103 - ((2 * v103) & 0x3D195EA8) + 512536404;
  v105 = (v104 ^ 0xA830A352 ^ ((v39 >> 2) - ((2 * (v39 >> 2)) & 0x6D78180C) - 1229190138)) - v102;
  v106 = v101 ^ 0x6D2144FC ^ (v105 - ((2 * v105 + 1711208380) & 0x758C1DA2) + 767920815);
  v107 = 1389985351 * v106 - ((632487054 * v106) & 0x2FD8BBAC) + 401366486;
  v108 = -1849688064 * v106 - ((595591168 * v106) & 0xE0FFFFFF) + 1886317990;
  v109 = v104 ^ 0x1E8CAF54;
  v110 = -79426321 * (v104 ^ 0x1E8CAF54) - ((914889182 * (v104 ^ 0x1E8CAF54)) & 0x2B87CE14) + 365160202;
  v111 = ((2 * (v108 ^ 0x706EEDA6 | (v107 >> 10))) & 0x97FBFDDE ^ 0xBF40E)
       + ((v108 ^ 0x706EEDA6 | (v107 >> 10)) ^ 0x4BF805F8);
  v112 = ((1753325024 * v109 - ((285424576 * v109) & 0x1D4B2480) - 1901751734) ^ 0x8EA5924A) & 0xFFFFFFE0 | (v110 >> 27);
  v113 = ((1224502400 * (v101 ^ 0xD7E74A2D) - ((-1845962496 * (v101 ^ 0xD7E74A2D)) & 0x93502300) - 911732259) ^ 0xC9A811DD) & 0xFFFFFF80 | ((-594413351 * (v101 ^ 0xD7E74A2D) - ((-1188826702 * (v101 ^ 0xD7E74A2D)) & 0xCF11CCA6) + 1737025107) >> 25);
  v114 = ((2 * v113) & 0x7E8DEF74 ^ 0x64) + (v113 ^ 0x3F46F789);
  v115 = ((911135744 * v102 - ((1822271488 * v102 + 932204544) & 0x5F377000) + 191094962) ^ 0x2F9BB8B2) & 0xFFFFFC00 | ((2005767093 * v102 - ((253437802 * v102 + 65922068) & 0x8E80030) + 376107554) >> 22);
  v116 = ((2 * v115) & 0xFFFDDF6E ^ 0x422) + (v115 ^ 0x7FFEEDA6);
  v117 = v114 - v116 + (v112 ^ 0xFBEDD76E) + ((2 * v112) & 0xF7DBAED8) - v111 - 292945305;
  v118 = 50301917 * v117 - ((100603834 * v117 - 291151062) & 0xC5E3B772) + 1514442062;
  v119 = 1946157056 * v117 - ((-402653184 * v117 - 1476395008) & 0xB0000000) - 1371008777;
  v120 = ((v118 >> 5) & 0x7BFFED4 ^ 0x3178ED4) + ((v118 >> 6) ^ 0xF6543804);
  v121 = v120
       + (((v120 + 136315030) | v119 ^ 0x5A4810F7) ^ 0x92A49000)
       - ((2 * ((v120 + 136315030) | v119 ^ 0x5A4810F7)) & 0xDAB6DFFE)
       + 1;
  v122 = (v119 ^ ((v119 ^ 0xA5B7EF08) - ((2 * (v119 ^ 0xA5B7EF08) + 2) & 0x60000000) + 805697192) ^ 0x6489A425 ^ (v121 - ((2 * v121 + 183951658) & 0x1D8884EA) - 2076200182))
       + v120
       + 136315030;
  v123 = ((2 * v122) & 0x77ACFF9A) + (v122 ^ 0x3BD67FCD);
  v124 = (((~(-1980411904 * v116 - 67907584) | 0x4DC38FFF) - 990205952 * v116 + 1461199573) ^ 0xD91E3AD4) & 0xFFFFF800 | ((850960213 * v116 - ((1701920426 * v116 + 1071611514) & 0x5C35B7D2) + 1309317926) >> 21);
  v125 = v124 ^ 0x3FAE6F8E;
  v126 = (2 * v124) & 0x7F5CDDFC ^ 0xE0;
  v127 = (((~(386451328 * v111 + 526172032) | 0xC5330B7F) - 880516160 * v111 + 1830083119) ^ 0x9D667A6E) & 0xFFFFFFC0 | ((-2094132849 * v111 - ((106701598 * v111 + 645755646) & 0xBED1A18E) + 1923582534) >> 26);
  v128 = ((2 * v127) & 0xB7752FEC ^ 0x6C) + (v127 ^ 0x5BBA97C1);
  v129 = (((543529984 * v114 - ((1087059968 * v114 - 1991159808) & 0xD655A800) + 802389429) ^ 0x6B2AD5B5) & 0xFFFFFC00 | ((-1077405337 * v114 - ((2140156622 * v114 - 1713220524) & 0x9890A0B8) - 1724286330) >> 22)) ^ 0x131;
  v130 = v129 - 377758255;
  v131 = v129
       - 377758255
       - 2
       * (v129 & 0x697BDDCF ^ ((-1077405337 * v114 - ((2140156622 * v114 - 1713220524) & 0x9890A0B8) - 1724286330) >> 22) & 0xC)
       - 14;
  v132 = (v125
        + v126
        + v128
        - v123
        - 70783884
        - ((2 * (v125 + v126 + v128 - v123 - 70783884) + 1229658314) & 0xC98CAFE2)
        + 158065750) ^ v131;
  v133 = -1223029457 * (v131 ^ 0xE97BDDC3) - ((775166558 * (v131 ^ 0xE97BDDC3)) & 0x2C48556E) + 371468983;
  v134 = ((v130 << 30) | 0xBFFFFFFF) + (v131 << 29) + 1586303823;
  v135 = ((1629226368 * v128 - ((37227264 * v128 + 296250880) & 0x1FB0F300) - 1196642073) ^ 0xFD879E7) & 0xFFFFFF80 | ((-893241333 * v128 - ((-1786482666 * v128 - 224177956) & 0xF4422212) - 210585225) >> 25);
  v136 = ((2 * v135) & 0x7C6B7DEE ^ 0xEA) + (v135 ^ 0xBE35BE8A);
  v137 = (v134 ^ 0xBE8D134E) & 0xE0000000 | (v133 >> 3);
  v138 = v137 ^ 0x652AB81D;
  v139 = (2 * v137) & 0xCFDC7A96 ^ 0x5880A84;
  v140 = (((v132 << 29) ^ 0xA0000000) + 728030612) & 0xE0000000 | ((1305977431 * (v132 ^ 0x8DBD8A32)
                                                                  - ((-1683012434 * (v132 ^ 0x8DBD8A32)) & 0xA70ACE92)
                                                                  + 1401251657) >> 3);
  v141 = ((2 * v140) & 0xEDDAF2A4 ^ 0x4C05080) + (v140 ^ 0x7C9DD5BB);
  HIDWORD(v39) = v123 + 3;
  LODWORD(v39) = (417622369 * v123 - ((835244738 * v123 - 1653277530) & 0xD74B4CEE) + 979379402) ^ 0xEBA5A670;
  v142 = (v39 >> 4) - ((2 * (v39 >> 4)) & 0x587A18E) + 46387399;
  v143 = ((v138 + v139 - 1743666507 + (v142 ^ 0x2C3D0C7)) ^ 0x6DFF5ED5)
       - v136
       + ((2 * (v138 + v139 - 1743666507 + (v142 ^ 0x2C3D0C7))) & 0xDBFEBDAA)
       - v141
       - 1778282080;
  v144 = v143 - ((2 * v143 + 1648660392) & 0x5CCB98A4) - 544730074;
  v145 = -1879407275
       * (((2 * (v136 + 1103773962 + (v142 ^ 0xFD3C2F38))) & 0xA9FCF4BE)
        + ((v136 + 1103773962 + (v142 ^ 0xFD3C2F38)) ^ 0xD4FE7A5F))
       - v141;
  v146 = (v145 - ((2 * v145 - 299173490) & 0xC6F4C878) + 1519378691) ^ v144;
  v147 = (v146 ^ 0x9A566A04) - 2 * (((v146 ^ 0x9A566A04) + 523163008) & 0x2F4A80FE ^ v146 & 0x10) + 242833006;
  v148 = v147 ^ 0x2F4A80EE;
  v149 = 2133795187 * (v147 ^ 0x2F4A80EE) - ((-27376922 * (v147 ^ 0x2F4A80EE)) & 0xABE2DB24) + 1441885586;
  v150 = v147 ^ v142;
  LODWORD(v194) = v147 ^ v144;
  HIDWORD(v194) = v147;
  v151 = v147 ^ v144 ^ 0x812F4CBC;
  v195 = (v147 ^ 0xD0B57F11) + v141 - ((2 * ((v147 ^ 0xD0B57F11) + v141) + 304418142) & 0xFBE3FF62) - 2029746592;
  LODWORD(a29) = v150;
  v152 = -536870912 * ((3 * (v150 ^ 0x29)) & 3) + 805306368 * (v150 ^ 0x2D895029);
  v153 = -712382909 * (v150 ^ 0x2D895029) - ((722717830 * (v150 ^ 0x2D895029)) & 0x3E2F3BE4) - 1625842190;
  v154 = (((374975488 * v151 - ((749950976 * v151) & 0x4BBB7000) - 1512195546) ^ 0xA5DDBA26) & 0xFFFFFC00 | ((205887083 * v151 - ((411774166 * v151) & 0x9744B484) - 878552510) >> 22)) ^ 0x32E;
  v155 = v154 - ((2 * v154) & 0x463739EC);
  v156 = ((-54753844 * v148 - ((-109507688 * v148) & 0xEC0D7100) - 167331711) ^ 0xF606B881) & 0xFFFFFFFC | (v149 >> 30);
  v157 = v156 ^ 0x41F7AFFC;
  v158 = (2 * v156) & 0x83EF5FFA;
  v159 = ((v152 + 1015287289) ^ 0x3C840DF9) & 0xF0000000 | (v153 >> 4);
  v160 = ((2 * v159) & 0xBFEF2FCE ^ 0x13E2238E) + (v159 ^ 0x5606EE38);
  v161 = v155 - 1558471434;
  v162 = v158 ^ 2;
  v163 = ((-113947008 * (v195 ^ 0xFDF1FFB1) - ((845847808 * (v195 ^ 0xFDF1FFB1)) & 0x344B6200) + 438677818) ^ 0x1A25B13A) & 0xFFFFFF80 | ((-1712166243 * (v195 ^ 0xFDF1FFB1) - ((870634810 * (v195 ^ 0xFDF1FFB1)) & 0x624C8126) + 824590483) >> 25);
  v164 = ((2 * v163) & 0xB3BF97EE ^ 0x20) + (v163 ^ 0xD9DFCBEF);
  v165 = v161 ^ (v157
               + v162
               - v160
               - v164
               - 1684432927
               - 2
               * ((v157 + v162 - v160 - v164 - 136334367) & 0x49A2E8DF ^ (v157 + v162 - v160 - v164 - 1684432927) & 0x19)
               - 1511455546);
  v166 = (((1744830464 * (v165 ^ 0xEAB97430) - ((-805306368 * v165) & 0xC0000000) - 536543939) ^ 0xE004FD3D) & 0xF8000000 | ((391565357 * (v165 ^ 0xEAB97430) - ((783130714 * (v165 ^ 0xEAB97430)) & 0xCFCE9532) - 404272487) >> 5)) ^ 0x73F3A54;
  v167 = v166 - ((2 * v166) & 0x3AE0755A) - 1653589331;
  v168 = (((-1526726656 * v160 - ((1241513984 * v160 + 973078528) & 0xF4000000) - 1747656280) ^ 0x7AD4E1A8) & 0xFF000000 | ((1924794533 * v160 - ((-445378230 * v160 + 1504428090) & 0x9EFA49BA) + 2085815546) >> 8)) ^ 0x4F7D24;
  v169 = v168 - ((2 * v168) & 0xEE614D0) - 2022503832;
  v170 = ((-1690698368 * (v161 ^ 0xA31B9CF6) - ((913570560 * (v161 ^ 0xA31B9CF6)) & 0x76727D00) + 993607334) ^ 0x3B393EA6) & 0xFFFFFF80 | ((-482970629 * (v161 ^ 0xA31B9CF6) - ((107800566 * (v161 ^ 0xA31B9CF6)) & 0x126BF3BE) - 1992951329) >> 25);
  v171 = ((2 * v170) & 0xFFDBB79A ^ 0x88) + (v170 ^ 0xFFEDDB89);
  v172 = (((36826112 * v164 - ((73652224 * v164 + 1868732416) & 0x8457E800) - 102940143) ^ 0x422BF611) & 0xFFFFFC00 | ((1312853115 * v164 - ((-1669261066 * v164 + 1549523110) & 0xEC560138) - 1537676049) >> 22)) ^ 0x3D8;
  v173 = v172 - ((2 * v172) & 0x2410BE00) - 1844945152;
  v174 = v173 ^ 0x92085F00;
  v175 = 1193314462 * (v173 ^ 0x92085F00);
  v176 = 596657231 * (v173 ^ 0x92085F00) - (v175 & 0x9C449476) + 1310870075;
  v177 = v171 + 1188915 + (v169 ^ v173 ^ 0x880B6FC5 ^ v167);
  v178 = ((v175 - ((239145276 * v174) & 0x2E7D84C4) - 1757494685) ^ 0x973EC263) & 0xFFFFFFFE | (v176 >> 31);
  v179 = ((2 * v178) & 0xBFBDF4FE) + (v178 ^ 0x5FDEFA7F);
  v180 = ((-762533440 * (v167 ^ 0x9D703AAD) - ((-1525066880 * (v167 ^ 0x9D703AAD)) & 0x949F8C00) + 1246742037) ^ 0x4A4FC615) & 0xFFFFFFC0 | ((1598698151 * (v167 ^ 0x9D703AAD) - ((-1097570994 * (v167 ^ 0x9D703AAD)) & 0x9508256C) + 1250169526) >> 26);
  v181 = (((v177 << 31) - ((v177 ^ 0x39ABFDBE) << 30) + 1094433429) ^ 0xC13BBA95) & 0xC0000000 | ((-457433129
                                                                                                 * (((2 * v177) & 0x7357FB7C)
                                                                                                  + (v177 ^ 0x39ABFDBE))
                                                                                                 - ((158875566 * (((2 * v177) & 0x7357FB7C) + (v177 ^ 0x39ABFDBE)) + 446154460) & 0x10FE4BF4)
                                                                                                 - 1244984984) >> 2);
  v182 = ((2 * v181) & 0xDFBD9FFC ^ 0x443D92FC) + (v181 ^ 0x4DC10680);
  v183 = v179 - (((2 * v180) & 0xEB2BC7BE ^ 0x24) + (v180 ^ 0xF595E3CD));
  v184 = 2
       * (((v182 - 1876873214) & (v183 - 1783174816)) - ((2 * ((v182 - 1876873214) & (v183 - 1783174816))) & 0x14F7BA0))
       - 2125497440;
  v185 = ((-1809575680 * v171 - ((675815936 * v171 + 254199296) & 0x2A8B0E00) - 589763983) ^ 0x15458771) & 0xFFFFFF00 | ((-1584126959 * v171 - ((1126713378 * v171 + 495920838) & 0x6D8BAA7C) - 980588383) >> 24);
  v186 = v183
       - (((2 * v185) & 0xF3FEDFEE ^ 0x6C)
        + (v185 ^ 0xF9FF6FC1))
       + v182
       + (v184 ^ 0xA7CF118B)
       - 1833662383
       + ((2 * v184) & 0xB2FF2BA8 ^ 0xFD61DCFF);
  v187 = ((-117440512 * v186 - ((1912602624 * v186 + 1543503872) & 0x66666666) + 566496594) ^ 0x33C40D52 | ((202176761 * v186 - ((404353522 * v186 - 1587045412) & 0xEADA602C) + 1176567300) >> 8)) ^ 0x756D30;
  HIDWORD(a30) = v187 - ((2 * v187) & 0xA660D478) - 751801796;
  v188 = malloc(0x408uLL);
  *(_QWORD *)(v34 - 216) = v188;
  return ((uint64_t (*)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * ((38 * (v188 != 0)) ^ v32)) - 8))(v188, 0, v189, v190, v191, v192, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v194,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10021C828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unsigned int a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unint64_t v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  uint64_t v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unsigned int v244;
  unsigned int v245;

  v48 = ((v44 ^ v45)
       - 214451299
       + v46
       - 2 * (((v44 ^ v45) - 214451299 + v46) & 0x2A64384F ^ (v44 ^ v45) & 2)
       - 1436272563) ^ (((v42 - 235327160) & 0xFFFFFF7F) - ((2 * (v42 - 235327160)) & 0x24CB2656) - 1838836821);
  v49 = v48 ^ 0x2B92D797 ^ HIDWORD(a30);
  v50 = v48 ^ 0x754B7817;
  v51 = 2 * (((v48 ^ 0x754B7817) & (v44 ^ v45)) - ((2 * ((v48 ^ 0x754B7817) & (v44 ^ v45))) & 0x50B4826)) - 2062858202;
  HIDWORD(v243) = v48 ^ 0x2B92D797;
  v52 = (v44 ^ 0x57D83033 ^ v48 ^ 0x2B92D797) + (v51 ^ 0xBEE7B6D3) - 1005387509 + ((2 * v51) & 0x77D9FDE8 ^ 0x2109048);
  v53 = v52 - ((2 * v52) & 0x7F25218C) - 1080913722;
  v54 = (-1337075410 * (v48 ^ 0x754B7817)) & 0xF137444C;
  v55 = -122347593 * (v53 ^ 0xBF9290C6) - ((-244695186 * (v53 ^ 0xBF9290C6)) & 0x9BAE90A2) - 841529263;
  *(_DWORD *)(v47 - 224) = HIBYTE(v48) ^ 0x26DC3A4C;
  HIDWORD(a13) = (v41 ^ v40)
               + (v48 ^ 0x8AB487E8)
               + 1
               - ((2 * ((v41 ^ v40) + (v48 ^ 0x8AB487E8) + 1)) & 0x161F5D78)
               - 1961906500;
  v56 = ((-657676288 * (HIDWORD(a13) ^ 0x8B0FAEBC)
        - ((832131072 * (HIDWORD(a13) ^ 0x8B0FAEBC)) & 0x4D3EE000)
        - 1499499548) ^ 0xA69F73E4) & 0xFFFFF800 | ((-1810163307 * (HIDWORD(a13) ^ 0x8B0FAEBC)
                                                   - ((674640682 * (HIDWORD(a13) ^ 0x8B0FAEBC)) & 0xE8C662F6)
                                                   + 1952657787) >> 21);
  v57 = ((2 * v56) & 0x766E5FFE ^ 0x746) + (v56 ^ 0x3B372C5C);
  HIDWORD(v241) = v49;
  v58 = ((81629920 * v50 - ((163259840 * v50) & 0xE2B42140) - 245755741) ^ 0xF15A10A3) & 0xFFFFFFE0 | ((v54 - 1478945943 * v50 + 124018137) >> 27);
  v59 = ((1752367280 * (v49 ^ 0x8DE9C5BC) - ((283509088 * (v49 ^ 0x8DE9C5BC)) & 0x1346B6C0) - 1985782936) ^ 0x89A35B68) & 0xFFFFFFF0 | ((-1232654325 * (v49 ^ 0x8DE9C5BC) - ((1829658646 * (v49 ^ 0x8DE9C5BC)) & 0x626F9450) - 1321743832) >> 28);
  v60 = ((2 * v59) & 0xE9DDDBDE ^ 0x16) + (v59 ^ 0x74EEEDE4);
  HIDWORD(v239) = v53;
  v61 = (((((v53 << 31) - ((v53 ^ 0xBF9290C6) << 28)) & 0x80000000) - 1207959552 * (v53 ^ 0xBF9290C6) + 1138455247) ^ 0x43DB72CF) & 0xF8000000 | (v55 >> 5);
  v62 = ((2 * v61) & 0xFFECBF6E ^ 0xCCC3404) + (v61 ^ 0xF998E5F5);
  v63 = 1342177280 * v60 - ((-1610612736 * v60 - 1610612736) & 0xC0000000) + 971672754;
  v64 = (v58 ^ 0xF27A7BE7)
      + ((2 * v58) & 0xE4F4F7CE)
      - v60
      + v57
      + ((2 * v57 - 1986945022) ^ 0x30421)
      - ((2 * (2 * v57 - 1986945022)) & 0xFFF9F7BC)
      - v62
      + 2095857638;
  v65 = 750347751 * v62 - ((1500695502 * v62 + 1801117118) & 0x422E0572) + 1455714712;
  v66 = ((1520435200 * v64 - ((-1254096896 * v64 + 994050048) & 0xB3000000) + 1999568499) ^ 0xD98EFE73) & 0xFFE00000 | ((-1219675435 * v64 - ((1855616426 * v64 + 1871038938) & 0x798695AE) + 1954951108) >> 11);
  v67 = ((2 * v66) & 0xFF97BF4A ^ 0x73042) + (v66 ^ 0x7FCC47CC);
  v68 = (v63 & 0xF8C28032 ^ 0x173D7FCD) + (v63 ^ 0x1615734D) + ((v63 >> 28 << 29) ^ 0xC0000002);
  v69 = (v68 - ((2 * v68) & 0xCDC980C2) - 421216159) ^ (207109717 * v60
                                                      - ((414219434 * v60 - 1580844214) & 0x844BE1E4)
                                                      - 1828122985);
  v70 = (v55 >> 5 << 31) - (v62 << 30);
  v71 = 104925595 * v67 - ((209851190 * v67 - 1684302798) & 0xC4271E58) - 1344186043;
  v72 = ((v63 ^ 0xE9EA8CB2) & 0xF0000000 | (v69 >> 4)) ^ 0xA4C1309;
  v73 = v72 - ((2 * v72) & 0x509CF448) + 676231716;
  v74 = ((-1524891648 * v57 - ((1245184000 * v57 + 1245184000) & 0x59980000) + 300569524) ^ 0xACCE53B4) & 0xFFFC0000 | ((-1730565817 * v57 - ((833835662 * v57 + 464958094) & 0xA0A2ECB4) - 567488607) >> 14);
  v75 = ((2 * v74) & 0xFFEB74B6 ^ 0x20082) + (v74 ^ 0x7FF6FB1E);
  v76 = 1915976565 * (v73 ^ 0x284E7A24) - ((610727658 * (v73 ^ 0x284E7A24)) & 0x2FBABB4C) + 400383398;
  v77 = v75 - v67 - ((2 * (v75 - v67) - 5485932) & 0xDFE2A74C) - 272140048;
  v78 = ((2 * (v70 & 0xC0000000 | (v65 >> 2))) & 0xFEFFEBFE ^ 0x908B815C)
      + ((v70 & 0xC0000000 | (v65 >> 2)) ^ 0x373A3551);
  v79 = ((2 * ((v73 ^ 0xC7BF2982 ^ v77) - v78 + 2139092479)) & 0xFDBFBFF6)
      + (((v73 ^ 0xC7BF2982 ^ v77) - v78 + 2139092479) ^ 0x7EDFDFFB);
  v80 = 1811939328 * v67 - ((1476395008 * v67 + 1207959552) & 0x48000000) - 1990799519;
  LOBYTE(v67) = (v76 >> 10) & 0x16;
  v81 = -583008256 * (v73 ^ 0x284E7A24) - ((-1166016512 * (v73 ^ 0x284E7A24)) & 0xEC800000) + 1987171941;
  v82 = (((1145044992 * v79 - ((142606336 * v79 + 713031680) & 0x50800000) - 41462555) ^ 0xA84754E5) & 0xFFC00000 | ((1383441681 * v79 - ((619399714 * v79 + 136098474) & 0x739E9864) - 1109547641) >> 10)) ^ 0xE73D3;
  v83 = v82 - ((2 * v82) & 0x3CE4666C) + 510800694;
  v84 = ((344057825 * v78 - ((688115650 * v78 + 807494594) & 0x2E843B2A) + 793956214) ^ 0x97421D95) >> (v67 ^ 0x16);
  v85 = v84 - ((2 * v84) & 0x2DE0B632);
  v86 = ((2 * ((v80 ^ 0x2556CF61) & 0xFC000000 | (v71 >> 6))) & 0xEF6DDF9E ^ 0x7009C18)
      + (((v80 ^ 0x2556CF61) & 0xFC000000 | (v71 >> 6)) ^ 0x743EA1F3);
  v87 = ((2 * ((v81 ^ 0x7671D665) & 0xFFC00000 | (v76 >> 10))) & 0x3F59FDFA ^ 0x9ECAA)
      + (((v81 ^ 0x7671D665) & 0xFFC00000 | (v76 >> 10)) ^ 0x1FA909AA)
      + v86;
  v88 = v87 - ((2 * v87 + 288891496) & 0x2C4A0076) - 20901521;
  v89 = v83 ^ 0x1E723336;
  v90 = -1539020255 * (v83 ^ 0x1E723336) - ((1216926786 * (v83 ^ 0x1E723336)) & 0x5E6C6488) - 1355402684;
  v91 = ((((v85 + 384850713) ^ 0x16F05B19) >> v67)
       - ((2 * (((v85 + 384850713) ^ 0x16F05B19) >> v67)) & 0x660120D0)
       - 1291808664) ^ (127894528 * v78 - ((255789056 * v78 + 93259776) & 0x55D10000) + 1840252716);
  v92 = 2 * (((v83 ^ 0x1E723336) & (v88 ^ 0x9625003B)) - ((2 * ((v83 ^ 0x1E723336) & (v88 ^ 0x9625003B))) & 0x64906152))
      - 460299950;
  v93 = (v88 ^ 0x8857330D ^ v83) + (v92 ^ 0x9D2FBCFD) - 2042617263 + ((2 * v92) & 0xF37FBB5C ^ 0xC1208204);
  v94 = (v91 ^ 0x6617ECBB) + (v93 ^ 0x5D7EEDF7) + ((2 * v93) & 0xBAFDDBEE) - 1568599542;
  v95 = ((2 * v94) & 0x9FF52F7E) + (v94 ^ 0x4FFA97BF);
  v96 = (((1359478784 * v89 - ((34603008 * v89) & 0xA000000) - 2063115840) ^ 0x850759C0) & 0xFFF80000 | (v90 >> 13)) ^ 0x579B1;
  v97 = v96 + 602140516 - 2 * (v96 & 0x23E3EF6E ^ (v90 >> 13) & 0xA);
  v98 = (((1895932224 * v86 - ((570638976 * v86 + 759675520) & 0x3B408700) + 1413751036) ^ 0x9DA043BC) & 0xFFFFFFC0 | ((-641464699 * v86 - ((-1282929398 * v86 - 441114902) & 0xDD245AE4) - 512967449) >> 26)) ^ 0x1B;
  v99 = v98 - ((2 * v98) & 0x5FE7150A) - 1342993787;
  v100 = (((-1013153792 * v95 - ((121176064 * v95 + 494469120) & 0x13B60000) + 1217910987) ^ 0x89DB58CB) & 0xFFFF8000 | ((1315276601 * v95 - ((-1664414094 * v95 - 173606158) & 0xB3D1FD74) - 725844941) >> 17)) ^ 0x6CF4;
  v101 = v100 - ((2 * v100) & 0xD35BAB5C) + 1773000110;
  v102 = (((v91 ^ 0x99E81344) * v43 - ((999817216 * (v91 ^ 0x99E81344)) & 0x97500000) + 1269468154) ^ 0x4BAA8BFA) & 0xFFFC0000 | ((-1396742285 * (v91 ^ 0x99E81344) - ((427740902 * (v91 ^ 0x99E81344)) & 0x1DB411E0) + 249170160) >> 14);
  v103 = (v99 ^ 0xAFF38A85) + (v102 ^ 0x7FD3CC52) - 2144597818 + ((2 * v102) & 0xFFA7EE74 ^ 0x6650);
  v104 = (((v99 ^ 0x8C1065E1 ^ v97) - 1128244245) ^ 0x54BFB36F)
       + ((2 * ((v99 ^ 0x8C1065E1 ^ v97) - 1128244245)) & 0xA97F66DE)
       - 1421849454
       + (v101 ^ 0x96522A51);
  v105 = (v103 ^ 0x4CF773D7) + ((2 * v103) & 0x99EEE7AE) - 1291285463 + (v97 ^ 0x23E3EF64);
  v106 = v101 ^ (v105 - ((2 * v105) & 0xCF0EA50E) + 1736921735);
  v107 = (((2 * v104) & 0x33CEBFF8)
        + (v104 ^ 0x99E75FFC)
        - ((2 * (((2 * v104) & 0x33CEBFF8) + (v104 ^ 0x99E75FFC)) - 1992222050) & 0xF79734F2)
        - 1066653752) ^ v106;
  v108 = (((2 * v107) ^ 0xEBC23AA0) - ((2 * ((2 * v107) ^ 0xEBC23AA0)) & 0x4E9DCF7C) + 1733224383) & 0x41614930;
  v109 = (v107 ^ 0xD551B9C8) + (v108 ^ 0xBEAFBA4F) + ((2 * v108) ^ 0x82808260) + 1049729;
  v110 = v109 - ((2 * v109) & 0xA5066162) - 763154255;
  v111 = (v101 ^ 0x69ADD5AE) + (v110 ^ 0x2D7CCF4E);
  HIDWORD(v240) = v110;
  v112 = v110 ^ 0xD28330B1;
  LODWORD(v238) = v110 ^ v97;
  v113 = v110 ^ v97 ^ 0xF160DFD5;
  v245 = (v110 ^ 0xD28330B1)
       + (v106 ^ 0xE2A8729)
       - ((2 * ((v110 ^ 0xD28330B1) + (v106 ^ 0xE2A8729))) & 0x5D800AA0)
       + 784336208;
  v114 = v245 ^ 0x2EC00550;
  v115 = -1346651313 * v114 - ((1601664670 * v114) & 0x9F5F8CCC) + 1336919654;
  LODWORD(v240) = v112;
  v116 = ((-1696595968 * v112 - ((901775360 * v112) & 0xD3C00000) - 370922461) ^ 0xE9E42C23) & 0xFFE00000 | ((1120222423 * v112 - ((-2054522450 * v112) & 0xC0144852) - 536206295) >> 11);
  v117 = ((2 * v116) & 0xDF7FFFFC ^ 0x380288) + (v116 ^ 0x6FA3FEBA);
  v118 = ++v111 + 660551338;
  v119 = v111 + 660551338 - ((2 * v111) & 0x4EBE6D54);
  *(_DWORD *)(v47 - 208) = v119;
  v120 = ((((v118 << 30) ^ 0x40000000) + 1618040473) & 0xC0000000 | ((1826555235 * (v119 ^ 0x275F36AA)
                                                                    - ((431884998 * (v119 ^ 0x275F36AA)) & 0x2E64D878u)
                                                                    + 389180476) >> 2)) ^ 0x5CC9B0F;
  v121 = ((-671391744 * v113 - ((804700160 * v113) & 0x2749C000) - 1817906746) ^ 0x93A4F1C6) & 0xFFFFE000 | ((1607909339 * (v238 ^ 0xF160DFD5) - ((1068335030 * (v238 ^ 0xF160DFD5)) & 0x3CF390CA) + 511297637) >> 19);
  v122 = ((2 * v121) & 0xF7FB76F2 ^ 0x692) + (v121 ^ 0x7BFDB8B6);
  v123 = (((-314834944 * v114 - ((444071936 * v114) & 0x3CE00000) - 1636775281) ^ 0x9E70CA8F) & 0xFFFC0000 | (v115 >> 14)) ^ 0x13EBF;
  v124 = v120 - ((2 * v120) & 0x96AEC442) - 883465695;
  v125 = v123 - ((2 * v123) & 0x11F46DF8) + 150615804;
  v126 = v125 ^ v124 ^ (v117 + v122 - ((2 * (v117 + v122) + 679774482) & 0x2DF29056) - 1422160716) ^ 0x55541CF6;
  v127 = 1072965527 * v122 - ((1072189230 * v122 + 1055258946) & 0x38AD913A) + 1539949886;
  v128 = 1215363459 * (v125 ^ 0x8FA36FC) + 1647470460 - ((-1864240378 * (v125 ^ 0x8FA36FC)) & 0xC464CEFA);
  v129 = -794928128 * v122 - ((-1589856256 * v122 - 1746597888) & 0xC50CB000) - 1367810707;
  v130 = ((2053472256 * v126 - ((-188022784 * v126) & 0xF8770000) - 63196846) ^ 0xFC3BB152) & 0xFFFF8000 | ((21558475 * v126 - ((43116950 * v126) & 0xCE768D8C) + 1731937990) >> 17);
  v131 = ((2 * v130) & 0xB1677B4E ^ 0x630A) + (v130 ^ 0x58B38E3A);
  v132 = ((-629145600 * (v124 ^ 0xCB576221) - ((-1258291200 * (v124 ^ 0xCB576221)) & 0x9B000000) - 844655893) ^ 0xCDA792EB) & 0xFF800000 | ((-1710066763 * (v124 ^ 0xCB576221) - ((874833770 * (v124 ^ 0xCB576221)) & 0x42ECEDB2) - 1586071847) >> 9);
  v133 = ((2 * v132) & 0x1A5BAF6E ^ 0x12666) + (v132 ^ 0x8D7D6C8C);
  v134 = (v129 ^ 0xE286596D) & 0xFFFFFC00 | (v127 >> 22);
  v135 = v134 ^ 0x7EBF9D0C;
  v136 = (2 * v134) & 0xFD7F3EFA ^ 0x4E3;
  v137 = 380182225 * v131 - ((760364450 * v131 - 275566254) & 0xE13053E4) - 396246373;
  HIDWORD(v138) = ~(v115 >> 14);
  LODWORD(v138) = (v128 + 1) ^ 0x6232677C;
  v139 = ((2 * (v138 >> 1)) & 0xEFFFFB7E) + ((v138 >> 1) ^ 0x77FFFDBF);
  v140 = v135 + v136 - v139 - v133 - v131 - 89319386;
  v141 = -1457598208 * v131 - ((37593600 * v131 + 53563904) & 0xB188C00) + 1327820763;
  v142 = -1729065245 * v139 - ((836836806 * v139 - 1671161018) & 0xF327B44A) + 1204152264;
  v143 = ((389545984 * v140 - ((779091968 * v140 + 49283072) & 0x2C300000) + 2006201228) ^ 0x961C338C) & 0xFFF80000 | ((-687930649 * v140 - ((771622350 * v140 + 627046494) & 0x2B724FE0u) - 395762657) >> 13);
  v144 = ((2 * v143) & 0xFECEBDFA ^ 0x1992) + (v143 ^ 0x7F67F334);
  v145 = -973078528 * v139 - ((201326592 * v139 + 201326592) & 0x38000000) + 1658733507;
  v146 = ((2 * ((v141 ^ 0x858C46DB) & 0xFFFFFF00 | HIBYTE(v137))) & 0xBFFEE6BA ^ 0xA0)
       + (((v141 ^ 0x858C46DB) & 0xFFFFFF00 | HIBYTE(v137)) ^ 0xDFFF73AD);
  v147 = ((314966016 * v133 - ((629932032 * v133 - 1796472832) & 0x9BB40000) - 1739559286) ^ 0x4DDA6E8A) & 0xFFFE0000 | ((1900120419 * v133 - ((-494726458 * v133 - 1531229578) & 0xF0CBF1A4) - 893149683) >> 15);
  v148 = 522275959 * v146 - ((1044551918 * v146 - 804681846) & 0xED38DE9E) + 1587622676;
  v149 = ((v145 ^ 0x1CDE43C3) & 0xFE000000 | (v142 >> 7)) ^ 0x1F327B4;
  v150 = (v147 ^ 0xDF5F8FBC) + ((2 * v147) & 0xBEBEFEEE ^ 0xE086) - v146 - v144 - 529915072;
  v151 = v149 - ((2 * v149) & 0xF52CC0E6) - 90808205;
  v152 = v151 ^ 0x666478AB ^ (v150 - ((2 * v150 + 1060790086) & 0x39E431B0) + 1016023163);
  v153 = 1476017789 * v152 - ((-1342931718 * v152) & 0xFC950332) - 28671591;
  v154 = -948961280 * v146 - ((-1897922560 * v146 + 2023751680) & 0x94800000) - 2036939979;
  v155 = 2096758784 * v152 - ((-101449728 * v152) & 0xD7640000);
  v156 = ((2 * ((v154 ^ 0x4A46C335) & 0xFFF00000 | (v148 >> 12))) & 0xFEF3FDFE ^ 0x2D18C)
       + (((v154 ^ 0x4A46C335) & 0xFFF00000 | (v148 >> 12)) ^ 0xFF7E9739);
  v157 = (-48234496 * (v151 ^ 0xFA966073) - ((171966464 * (v151 ^ 0xFA966073)) & 0x8000000) + 69115292) ^ 0x41E9D9C | ((-1100636183 * (v151 ^ 0xFA966073) - ((2093694930 * (v151 ^ 0xFA966073)) & 0xEC46F3FA) + 1982036477) >> 11);
  v158 = ((-436207616 * v144 - ((1275068416 * v144 + 1677721600) & 0x66666666) + 1681593348) ^ 0xB23B1404 | ((-2121011469 * v144 - ((52944358 * v144 + 1553285042) & 0x581CDB7C) - 1705439849) >> 7)) ^ 0x1581CDB;
  v159 = v158 - ((2 * v158) & 0x217BE26) + 17555219;
  v160 = (v157 ^ 0xF7AF2A80) + ((2 * v157) & 0xEF43DDDE ^ 0x188DE) + 140382482 + (v159 ^ 0xFEF420EC);
  v161 = (v160 ^ 0x1D7F157F) + v156 + ((2 * v160) & 0x3AFE2AFE);
  v162 = (((v155 + 1806853736) ^ 0x6BB26668) & 0xFFFE0000 | (v153 >> 15)) ^ 0x1FC95;
  v163 = ((2 * (v156 + 8782082 + (v159 ^ 0xFEF420EC))) & 0xFCFF9AFE)
       + ((v156 + 8782082 + (v159 ^ 0xFEF420EC)) ^ 0xFE7FCD7F);
  v164 = v162 - ((2 * v162) & 0xA92F5A88) + 1419226436;
  v165 = (v161 - ((2 * v161 + 1175312132) & 0x41DF9304) - 2080983804) ^ v164;
  v166 = v164 ^ 0x5497AD44;
  v167 = ((2 * ((v164 ^ 0x5497AD44) + 2135976919 * v163 - 1625926313)) & 0x77FD7D60)
       + (((v164 ^ 0x5497AD44) + 2135976919 * v163 - 1625926313) ^ 0xBBFEBEB0);
  v168 = v165 ^ 0xD189EB75 ^ (v167 - ((2 * v167 + 2137205210) & 0x4BE31F66) - 1516034912);
  v169 = v168 - ((2 * v168 + 818194472) & 0xA80F6EE0) + 1818889092;
  LODWORD(a12) = v159;
  HIDWORD(v237) = v169 ^ v159;
  v170 = v169 ^ v159 ^ 0xD50C6863;
  v171 = 1810017955 * v170 - ((130374982 * v170) & 0x53D8792) - 2103524407;
  LODWORD(v239) = (v169 ^ 0xD407B770)
                + (v165 ^ 0xF47864C6)
                - ((2 * ((v169 ^ 0xD407B770) + (v165 ^ 0xF47864C6))) & 0x596FDE0)
                - 2100592912;
  LODWORD(v242) = v166 + (v169 ^ 0x2BF8488F) + 1 - ((2 * (v166 + (v169 ^ 0x2BF8488F) + 1)) & 0x30B987AA) - 1738751019;
  v172 = (((1744830464 * (v169 ^ 0xD407B770) - ((-805306368 * v169) & 0xA0000000) + 1465398309) ^ 0x57583425) & 0xF8000000 | ((773267245 * (v169 ^ 0xD407B770) - ((1546534490 * (v169 ^ 0xD407B770)) & 0xACB27B28) - 698794604) >> 5)) ^ 0x6B2C9EC;
  v173 = (((-731906048 * v170 - ((146800640 * v170) & 0x1E800000) - 1890805744) ^ 0x8F4C9810) & 0xFFE00000 | (v171 >> 11)) ^ 0x1053D8;
  v174 = v173 - 2 * (v173 & 0x3275A0C5 ^ (v171 >> 11) & 4);
  v175 = ((112596424 * (v242 ^ 0x985CC3D5) - ((225192848 * (v242 ^ 0x985CC3D5)) & 0x6E2F49F0) + 924296441) ^ 0x3717A4F9) & 0xFFFFFFF8 | ((550945465 * (v242 ^ 0x985CC3D5) - ((1101890930 * (v242 ^ 0x985CC3D5)) & 0x713CCFA2) - 1197578287) >> 29);
  v176 = ((2 * v175) & 0x75576CEE ^ 0xA) + (v175 ^ 0x3AABB672);
  v177 = ((633339904 * (v239 ^ 0x82CB7EF0) - ((1266679808 * (v239 ^ 0x82CB7EF0)) & 0x90800000) - 932105261) ^ 0xC87133D3) & 0xFFC00000 | ((879101079 * (v239 ^ 0x82CB7EF0) - ((1758202158 * (v239 ^ 0x82CB7EF0)) & 0xFBE6BD64) - 34382158) >> 10);
  v178 = ((2 * v177) & 0x96EEFBFA ^ 0x6EF9AA) + (v177 ^ 0xCB48012A);
  v179 = ((v172 - ((2 * v172) & 0x337D998) - 2120487732) ^ (v174 - 1300913983) ^ 0x33EE4C0D) + 984331890 - v176 + 5;
  v180 = (v179 ^ 0xDF3367BE) + v178 + ((2 * v179) & 0xBE66CF7C);
  v181 = (~(50331648 * v176 + 452984832) | 0xB7FFFFFF) + 25165824 * v176;
  v182 = (((-1107559936 * v178 - ((2079847424 * v178 - 36709376) & 0xD83D6000) + 1795595967) ^ 0x6C1EB0BF) & 0xFFFFFE00 | ((-1931543043 * v178 - ((431881210 * v178 + 201254894) & 0x14D5107E) + 1080687670) >> 23)) ^ 0x14;
  v183 = v182 - ((2 * v182) & 0x4DCB3D2E);
  v184 = ((-1376911360 * ((v174 - 1300913983) ^ 0xB275A0C1)
         - ((1541144576 * ((v174 - 1300913983) ^ 0xB275A0C1)) & 0xC09C0000)
         - 531666505) ^ 0xE04F69B7) & 0xFFFE0000 | ((-298690825 * ((v174 - 1300913983) ^ 0xB275A0C1)
                                                   - ((1550101998 * ((v174 - 1300913983) ^ 0xB275A0C1)) & 0x5E3EE784)
                                                   - 1356893246) >> 15);
  v185 = ((2 * v184) & 0xFD97FD26 ^ 0x2BC24) + (v184 ^ 0x7ECAA0AD);
  v186 = ((-2124889280 * v180 - ((45188736 * v180 - 368951168) & 0xF4FCD480) + 1870629505) ^ 0x7A7E6A41) & 0xFFFFFFC0 | ((973431565 * (v180 - 1380007984) - ((1946863130 * (v180 - 1380007984) - 607277598) & 0xE7FB976E) - 505109848) >> 26);
  v187 = ((2 * v186) & 0xFE6D9D5E ^ 0x58) + (v186 ^ 0x7F36CE93);
  v188 = ((1124467203 * v176 - ((-2046032890 * v176 + 428596534) & 0xB6A25166) + 1746343758) >> 9) ^ 0x6DA894;
  v189 = v185 + v187 - ((2 * (v185 + v187) + 66741628) & 0x1ED800F0) - 1855376586;
  v190 = v183 - 1494901097;
  v191 = (v183 - 1494901097) ^ 0xA6E59E97;
  v192 = (v188 | (v181 + 1907684568) ^ 0x2434F4D7)
       - 2 * ((v188 | (v181 + 1907684568) ^ 0x2434F4D7) & 0x251A819F ^ v188 & 0x17)
       - 1524989560;
  v193 = v192 ^ 0xA51A8188;
  v194 = -1207959552 * (v192 ^ 0xA51A8188) - ((-268435456 * v192) & 0x40000000);
  v195 = v190 ^ v192 ^ 0x8C931F67 ^ v189;
  v196 = ((1963065344 * v187 - ((-368836608 * v187 - 817627136) & 0xCB500000) - 850663611) ^ 0x65A9E745) & 0xFFFE0000 | ((-690701695 * v187 - ((-1381403390 * v187 + 1083533218) & 0xF3966B62) - 1709839998) >> 15);
  v197 = ((2 * v196) & 0xEEEFFFE8 ^ 0x3E728) + (v196 ^ 0x77760C62);
  v198 = ((v194 + 552428860) ^ 0x20ED653C) & 0xF8000000 | ((65312375 * v193
                                                          - ((130624750 * v193) & 0xDE1D2318)
                                                          - 284257908) >> 5);
  v199 = v198 ^ 0xEABD2B22;
  v200 = (2 * v198) & 0xDB8ABF5C ^ 0xA80A918;
  v201 = 188298539 * v197 - 2 * ((188298539 * v197 + 495353348) & 0x1BDD9047 ^ (188298539 * v197) & 3) - 1184625080;
  v202 = ((705111040 * v195 - ((336480256 * v195) & 0x1B8FE000) + 231207757) ^ 0xDC7F34D) & 0xFFFFFC00 | ((986350025 * v195 - ((1972700050 * v195) & 0xFD5C5A8A) - 22139579) >> 22);
  v203 = ((2 * v202) & 0xEBBFFD8E ^ 0x584) + (v202 ^ 0xF5DFFD3D);
  v204 = (((1014923264 * v191 - ((2029846528 * v191) & 0x52080000) + 688137577) ^ 0x29042569) & 0xFFFF8000 | ((-1559987971 * v191 - ((1174991354 * v191) & 0xA0ADE2BC) + 1347875166) >> 17)) ^ 0x282B;
  v205 = v199
       + v200
       + v197
       - v203
       - 77814348
       - ((2 * (v199 + v200 + v197 - v203 - 77814348) + 713814754) & 0x243324B2)
       + 660573130;
  v206 = 1296744448 * v197 - ((446005248 * v197 + 1057095680) & 0x28520000) + 866790773;
  v207 = v204 - ((2 * v204) & 0xFC0AA19C) - 33206066;
  v208 = v207 ^ 0x6C1CC297 ^ v205;
  v209 = ((v206 ^ 0x94292D75) & 0xFFFFC000 | (v201 >> 18)) ^ 0x6F7;
  v210 = ((821788416 * (v207 ^ 0xFE0550CE) - ((1643576832 * (v207 ^ 0xFE0550CE)) & 0x4FC00200) + 668991752) ^ 0x27E00108) & 0xFFFFFF00 | ((875625343 * (v207 ^ 0xFE0550CE) - ((1751250686 * (v207 ^ 0xFE0550CE)) & 0x7336C0B2) + 966484057) >> 24);
  v211 = (((-1723287504 * v203 - ((848392288 * v203 - 1613601440) & 0x9AB074A0) - 1656656632) ^ 0x4D583A58) & 0xFFFFFFF0 | ((-1181447293 * v203 - ((858330886 * v203 + 704456278) & 0x3B4B3752) + 312749780) >> 28)) ^ 9;
  v212 = (((1342177280 * v208 - ((-1610612736 * v208) & 0xC0000000) - 377675876) ^ 0xE97D1F9C) & 0xF0000000 | ((-1193894635 * v208 - ((1907178026 * v208) & 0x5C058E46u) + 771933987) >> 4)) ^ 0x2E02C72;
  v213 = v211 - ((2 * v211) & 0x7805C170) + 1006821560;
  v214 = v213 ^ 0x3C02E0B8;
  v215 = (v210 ^ 0xDF6FFFD4) + ((2 * v210) & 0xBEDFFFDA ^ 0x52) + 546308115 + (v213 ^ 0x3C02E0B8);
  v216 = v209 - ((2 * v209) & 0x7F4D6B88) - 1079593532;
  v217 = v212 - ((2 * v212) & 0xE71753A8) - 208950828;
  v218 = (v215 ^ 0xBEF7DDBD)
       + ((2 * v215) & 0x7DEFBB7A)
       + (((v217 ^ 0xF38BA9D4) + (v216 ^ 0xBFA6B5C4)) ^ 0x90124109)
       - ((2 * ((v217 ^ 0xF38BA9D4) + (v216 ^ 0xBFA6B5C4))) & 0xDFDB7DEC)
       + 1;
  v219 = v218 - ((2 * v218 + 1642840690) & 0xA18544F4) - 2118614093;
  v220 = ((1461042146 * (v216 ^ 0x83A4557C ^ v213)) & 0xCEFBB7FE)
       + ((730521073 * (v216 ^ 0x83A4557C ^ v213)) ^ 0x677DDBFF)
       - 1736301567
       + (v217 ^ 0xF38BA9D4);
  v221 = (v220 - ((2 * v220) & 0x3DA7B956) + 517201067) ^ 0x42DAF7A5 ^ v219;
  v222 = v221 - ((2 * v221 + 51659550) & 0x496D7E0) + 265653631;
  v223 = 2
       * (((v222 ^ 0x24B6BF0) & (v219 ^ 0xD0C2A27A)) - ((2 * ((v222 ^ 0x24B6BF0) & (v219 ^ 0xD0C2A27A))) & 0x74F5B7AC))
       - 185223252;
  v244 = (v222 ^ 0x24B6BF0) + v214 - ((2 * ((v222 ^ 0x24B6BF0) + v214)) & 0x9897CE22) + 1280042769;
  v224 = (v219 ^ 0xD289C98A ^ v222) + (v223 ^ 0x6B7A7B30) + 1617965924 + ((2 * v223) & 0x3F1F9938 ^ 0x290B0918);
  *(_DWORD *)(v47 - 240) = v224 - ((2 * v224) & 0x2DA6F382) - 1764525631;
  v225 = *(_DWORD *)(v47 - 232) + 402887561;
  HIDWORD(v238) = v222 ^ a34;
  v226 = ((v222 ^ a34 ^ 0xB1FBFE03)
        - 420371833
        - ((2 * (v222 ^ a34 ^ 0xB1FBFE03) + 1900277970) & 0x5C9F543C)
        + v225
        - 994) ^ 0xB1FBFE03;
  v227 = (v226 - ((2 * v226 + 1900277970) & 0x5C9F543C) - 420371833) ^ 0xB1FBFE03;
  v228 = *(_DWORD *)(v47 - 228);
  LODWORD(v241) = v228 ^ 0xE1ACC49;
  LODWORD(a16) = v228 ^ 0x811C618F;
  v229 = ((v227 - ((2 * v227 + 1900277970) & 0x5C9F543C) - 420371833) ^ 0xAE4FAA1E) + (v228 ^ 0x811C618F);
  *(_DWORD *)(v47 - 228) = HIBYTE(a33) ^ 0x5827C53F;
  LODWORD(v243) = v169;
  *(_DWORD *)(v47 - 232) = HIBYTE(v169) ^ 0xEB3C2B48;
  v230 = -1095231619
       * ((((((2 * v229) & 0xDEF9FFAC) + (v229 ^ 0xEF7CFFD6)) & 0xFFFFFFFE)
         - ((2 * (((2 * v229) & 0xDEF9FFAC) + (v229 ^ 0xEF7CFFD6)) + 17170516) & 0x15B7F9E0)
         + 459210011) ^ 0x15D264D8);
  LODWORD(v237) = a31 + 19;
  HIDWORD(v242) = v222;
  LODWORD(a15) = v222 ^ v217;
  v231 = *(unsigned int *)(v47 - 240);
  v232 = (v230 - ((v230 << ((v225 - 74) ^ 0x99)) & 0x376231AC) + 464591062) ^ *(_DWORD *)(v47 - 224);
  v233 = -1117768823 - (v232 & 0x15 ^ 0x42A1881D | 0xBD603389) + (v232 & 0x15 ^ 0x42A1881D | 0x429FCC76);
  v234 = (((2 * (v232 & 0xEA ^ 0xF1412784)) & 0xC00044DC) - (v232 & 0xEA ^ 0xF1412784) + 424906113) ^ 0xEC96AA6F;
  v235 = (((2 * v234) & 0x84C) - v234 + 1154796504) ^ 0x4050CB58 | v233 ^ 0x3E446E;
  *(_DWORD *)(*(_QWORD *)(v47 - 216)
            + 4 * ((v230 - (((_BYTE)v230 << ((v225 - 74) ^ 0x99)) & 0xAC) - 42) ^ 0xD6u)) = a40 ^ a29 ^ a32 ^ v97 ^ v245 ^ *(_DWORD *)(v47 - 208) ^ v217 ^ v244 ^ v231 ^ 0xE5A6F535 ^ dword_100267E30[*(_DWORD *)(v47 - 232) ^ *(_DWORD *)(v47 - 228) ^ 0x3EB1427 ^ (v235 - ((2 * v235) & 0x61E1F410) - 1326384632)];
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002C8B50 + v225))(v231, v217, 1117768822, 4047579012, 3221243100, 424906113, 3969297007, 2124, a9, v237, v238, a12, a13, v239, a15, a16, v240, v241, v242,
           v243,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

void sub_10021F204()
{
  JUMPOUT(0x10021F100);
}

uint64_t sub_10021F210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v30 = malloc(0x408uLL);
  return ((uint64_t (*)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002C8B50 + ((((((v29 - 64) | 0x104) + 665) ^ 0x3D6) * (v30 == 0)) | v29)))(v30, 0, v31, v32, v33, v34, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_10021F274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,int a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,unsigned __int8 a42)
{
  int v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  unsigned __int8 v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;

  v45 = ((a36 ^ *(_DWORD *)(v44 - 240) ^ 0xFF70EBE9)
       - ((2 * (a36 ^ *(_DWORD *)(v44 - 240) ^ 0xFF70EBE9) + 2126621732) & 0x7D67C480)
       + 2115287122) ^ 0xFB14B186;
  LOBYTE(v45) = ((v45 - ((2 * v45 + 36) & 0x80) + 82) ^ 0x40) + (a33 ^ 0x86);
  LOBYTE(v45) = (v45 ^ 0x5F) - 95 + ((2 * v45) & 0xBE);
  HIDWORD(a9) = a22 ^ a23;
  v46 = 0x80 - -95 * (((v45 & 0xFE) - ((2 * v45) & 0xD0) + 104) ^ 0x55);
  v47 = ((unsigned __int16)(a22 ^ a23) >> 8) ^ 0x61 ^ a42 ^ v46;
  v48 = (((((((unsigned __int16)(a22 ^ a23) >> 8) ^ 0x61 ^ a42 ^ v46) & 0x20) + (v47 ^ 0xE2)) | 0xDDAFB800)
       - ((v47 ^ 0xE2) & 0x20)) ^ 0xF1A7BA24;
  v49 = ((((2 * ((v42 + 348) ^ 0x18AB584 ^ v47)) & 0x20001CA) - ((v42 + 348) ^ 0x18AB584 ^ v47) + 1993077018) ^ 0xDE1CC6D0)
      + 1;
  v50 = (v49 ^ 0x77343FFF)
      + ((2 * v49) & 0x6E287FFE)
      + dword_100262FB0[(((2 * v48) & 0x40000072) - v48 - 819257402) ^ 0xE3231D31];
  *(_DWORD *)(a1 + 4 * (v46 ^ 0x80u)) = a31 ^ a19 ^ a20 ^ 0x1AFEE87A ^ (v50
                                                                        - ((2 * v50 + 557565942) & 0x2898E628)
                                                                        + 82466575);
  return ((uint64_t (*)(uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * v42) - 12))(3475709894, 3810729265, dword_100262FB0, 3726427856, 1999912959, 1848147966, 557565942, 681109032, a9);
}

void sub_10021F4C4()
{
  JUMPOUT(0x10021F414);
}

uint64_t sub_10021F4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = malloc(0x408uLL);
  return ((uint64_t (*)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((201 * (v32 != 0)) ^ v29)) - ((((v29 - 1017) | 4u) + 506) ^ (v29 - 511))))(v32, 0, v33, v34, v35, v36, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           v31,
           a29);
}

uint64_t sub_10021F534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, int a19, char a20,unsigned int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;

  v46 = (((2 * ((v43 - 8) ^ 0x4A)) | 0xC8) - ((v43 - 8) ^ 0x4A) + 28) ^ 0xA3;
  v47 = (((2 * (a20 & 0x22 ^ 0x20)) | 0x48) - (a20 & 0x22 ^ 0x20) - 36) ^ 0x24;
  v48 = (v47 - ((2 * v47) & 0xA4) + 83) ^ ((v46 | 0xF4) - (v46 | 0xB) + 11) ^ 0xE0 | ((a20 & 0x45 ^ 7)
                                                                                    + (a20 & 0x98 ^ 0x99)
                                                                                    - 1) ^ 0x4F;
  v49 = v48 - ((2 * v48) & 0x7A) - 67;
  v50 = ((2 * v49) ^ 0xAE) - 2 * (((2 * v49) ^ 0xAE) & 0x58 ^ (2 * v49) & 0x10) + 72;
  v51 = (v50 & 0xFE ^ 0xAF)
      + (((v49 ^ 0x57) - 2 * ((v49 ^ 0x57) & 0xFD ^ v49 & 8) - 11) ^ 0xA)
      + ((2 * v50) & 0xCC ^ 0x80);
  v52 = v51 + 25 - ((2 * (v51 + 25)) & 0x7A) - 67;
  v53 = ((2 * v52) ^ 0xAE) - 2 * (((2 * v52) ^ 0xAE) & 0x58 ^ (2 * v52) & 0x10) + 72;
  v54 = (v53 & 0xFE ^ 0xAF)
      + (((v52 ^ 0x57) - 2 * ((v52 ^ 0x57) & 0xFD ^ v52 & 8) - 11) ^ 0xA)
      + ((2 * v53) & 0xCC ^ 0x80)
      + 25;
  v55 = v54 - ((2 * v54) & 0x7A) - 67;
  v56 = ((2 * v55) ^ 0xAE) - 2 * (((2 * v55) ^ 0xAE) & 0x58 ^ (2 * v55) & 0x10) + 72;
  v57 = (v56 & 0xFE ^ 0xAF)
      + (((v55 ^ 0x57) - 2 * ((v55 ^ 0x57) & 0xFD ^ v55 & 8) - 11) ^ 0xA)
      + ((2 * v56) & 0xCC ^ 0x80)
      + 25;
  v58 = ((v57 - ((2 * v57) & 0x7A) - 67) ^ 0xBD) + a16;
  v59 = (((((2 * v58) & 0x4C) + (v58 ^ 0x26)) & 0xFE) - ((2 * (((2 * v58) & 0x4C) + (v58 ^ 0x26)) - 76) & 0x88) + 30) ^ 0xB7;
  *(_DWORD *)(a1 + 4 * ((-13 - 29 * v59 - ((-58 * v59) & 0xE6)) ^ 0xF3u)) = a43 ^ a28 ^ *(_DWORD *)(v45 - 240) ^ (v43 - 1121606899) ^ dword_100255C40[((-13 - 29 * v59 - ((-58 * v59) & 0xE6)) ^ ((a22 ^ a35 ^ a21) >> 16) ^ 4) ^ 0xE6];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v44 + 8 * ((v43 - 8) ^ 0x18)) - 4))(243);
}

void sub_10021F99C()
{
  JUMPOUT(0x10021F954);
}

uint64_t sub_10021F9AC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  int v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v23 = a1 - 655;
  v24 = malloc(0x404uLL);
  return (*(uint64_t (**)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((1286 * (v24 != 0)) ^ v23)))(v24, 0, v25, v26, v27, v28, 0, 0, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22);
}

uint64_t sub_10021FA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,char a40)
{
  int v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;

  *(_QWORD *)(v44 - 240) = v42;
  v45 = ((a20 ^ a26 ^ 0x58) - ((2 * (a20 ^ a26 ^ 0x58) + 126) & 0xAE) - 106) ^ 0x10;
  v46 = (v45 - ((2 * v45 + 126) & 0xAE) - 106) ^ 0x10;
  v47 = (v46 - ((2 * v46 + 126) & 0xAE) - 106) & 0xFE ^ 0x64;
  v48 = (((2 * v47) & 0xD4) - v47 - 107) ^ 0xE6;
  v49 = -22 * v48;
  *(_DWORD *)(a1 + 4 * ((-70 - 11 * v48 - (v49 & (v40 - 63))) ^ 0xBAu)) = a33 ^ *(_DWORD *)(v44 - 208) ^ a15 ^ 0xE75DDD9C ^ dword_10025D290[(((2 * ((v41 ^ a40 ^ (-70 - 11 * v48 - (v49 & (v40 - 63)))) ^ 0x480541AF)) & 0x8262) - ((v41 ^ a40 ^ (-70 - 11 * v48 - (v49 & (v40 - 63)))) ^ 0x480541AF) + 1750572750) ^ 0x2052DFF2];
  return ((uint64_t (*)(uint64_t, _DWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * v40) - 12))(542302194, dword_10025D290, 3881688476, 186);
}

void sub_10021FBA0()
{
  JUMPOUT(0x10021FB3CLL);
}

uint64_t sub_10021FBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = malloc(0x404uLL);
  return (*(uint64_t (**)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((((((v29 + 69) ^ (v31 == 0)) & 1) == 0) * (v29 + 205)) ^ v29)))(v31, 0, v32, v33, v34, v35, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_10021FC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, int a13, int a14, unsigned int a15, int a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,int a35,int a36,int a37,int a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  int v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  char v51;
  char v52;
  char v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v50 = ((a34 ^ a46 ^ 0x4D) + 56 + (~(2 * (a34 ^ a46 ^ 0x4D) - 68) | 0x4D)) ^ 0x83;
  v51 = (v50 + 56 + (~(2 * v50 - 68) | 0x4D)) ^ 0x83;
  v52 = ((v51 + 56 + (~(2 * v51 - 68) | 0x4D)) ^ 0x59) + a28;
  v53 = (v52 ^ 0x67) - 103 + ((2 * v52) & 0xCE);
  v54 = *(_DWORD *)(v48 - 232) ^ *(_DWORD *)(v48 - 228) ^ *(_DWORD *)(v48 - 224) ^ (0x80 - -89 * (((v53 & 0xFE) - ((2 * v53) & 0x98) + 76) ^ 0x8B));
  v55 = dword_100267130[v54 ^ 0x95C7D49B];
  v56 = a16 ^ a22 ^ (v46 + 317) ^ 0x3BDu;
  v57 = a27 ^ a39 ^ a36 ^ a35 ^ a15 ^ a17 ^ a12 ^ v56;
  v58 = v57 ^ v54 ^ 0x55F27BB2 ^ v55;
  *(_DWORD *)(a1 + 4 * ((0x80 - -89 * (((v53 & 0xFE) - ((2 * v53) & 0x98) + 76) ^ 0x8B)) ^ 0x80u)) = v58;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v47 + 8 * (v46 + 317)) - 12))(v58, v55, v57, v56, a1, a15, a17, a12);
}

void sub_10021FDB8()
{
  JUMPOUT(0x10021FD50);
}

uint64_t sub_10021FDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = malloc(0x404uLL);
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (((v31 != 0) * ((v29 - 233) ^ (v29 - 169) ^ 0x128)) ^ v29)) - 8))(v31, a5, v32, v33, v34, v35, 0, 0, a9, a10, a11, a5, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_10021FE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,int a27)
{
  char v27;
  int v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  int v35;
  char v36;
  int v37;
  unsigned int v38;
  unsigned int v39;

  *(_QWORD *)(v29 - 208) = a1;
  v30 = ((a12 ^ 0xE9) - 2 * (((a12 ^ 0xE9) - 42) & 0x1F ^ (a12 ^ 0xE9) & 1) - 12) ^ 0xE9;
  v31 = (v30 - 2 * ((v30 - 42) & 0x1F ^ v30 & 1) - 12) ^ 0xE9;
  *(_DWORD *)(v29 - 228) = a27 ^ 0x681E07EF;
  v32 = ((v31 - 2 * ((v31 - 42) & 0x1F ^ v31 & 1) - 12) ^ 0x1E) + (a27 ^ 0xEF);
  v33 = (v32 ^ 0xFB) + 5 + ((2 * v32) & 0xF6);
  v34 = ((v33 & 0xFE) - ((2 * v33) & 0x7C) + 62) ^ 0xB1;
  v35 = 270 * (v28 ^ 0x199);
  *(_DWORD *)(v29 - 224) = v35;
  v36 = v35 ^ 0xC9;
  v37 = (((v36 - 30) * v34 - ((2 * (v36 - 30) * v34) & 0x9A) + 77) ^ v27);
  v38 = (-1195836327 - (v37 ^ 0x29 | 0xB8B8FC59) + (v37 ^ 0x29 | 0x474703A6)) ^ 0x7530AA2;
  v39 = ((v37 ^ 0x46) - ((2 * (v37 ^ 0x46)) & 0xFFFFFF8F) + 973793991) ^ 0x88C478E7;
  *(_DWORD *)(*(_QWORD *)(v29 - 208)
            + 4 * (((v36 - 30) * v34 - ((2 * (v36 - 30) * v34) & 0x9A) + 77) ^ 0x4Du)) = a25 ^ a16 ^ a15 ^ (((2 * v38) | 0x7C5FC0EE) - v38 - 1043325047) ^ 0xF46C6443 ^ dword_100266C30[(v39 - ((2 * v39) & 0x61842486) + 1020418627) ^ 0x8E1CC89D];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *))((char *)*(&off_1002C8B50 + v28) - 8))(2086650094, 3251642249, 70, 973793991, 2294577383, 1636050054, 1020418627, dword_100266C30);
}

void sub_10022008C()
{
  JUMPOUT(0x10021FFDCLL);
}

uint64_t sub_100220094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  int v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v30 = *(_DWORD *)(v29 - 224);
  v31 = malloc(0x404uLL);
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((23 * (v31 == 0)) ^ v30)) + -(unint64_t)(v30 - 1002) - (v30 ^ 0x1Eu) + 1712))(v31, a12, v32, v33, v34, v35, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1002200FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,__int16 a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,uint64_t a33,uint64_t a34,int a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  unsigned int v49;

  v45 = (((a28 ^ a16 ^ 0x1F) - ((2 * (a28 ^ a16 ^ 0x1F) - 78) & 0xFA) - 42) ^ 0xFD) + a26;
  v46 = ((v45 & 0xFE) + 122 - ((2 * v45) & 0x98) - 45) ^ 0x6E;
  v47 = -37 * v46 - 30;
  v48 = -74 * v46;
  v49 = dword_1002549B0[(v43 + 12) ^ 0x5A6 ^ ((v47 - (v48 & 0xC4)) ^ a10 ^ a36)]
      + (((v47 - (v48 & 0xC4)) ^ a10 ^ a36) ^ 0xD472026D)
      - 217264802;
  *(_DWORD *)(a1 + 4 * ((v47 - (v48 & 0xC4)) ^ 0xE2u)) = a32 ^ a12 ^ a43 ^ 0x8E7A6C13 ^ (v49 - ((2 * v49) & 0xB5682D2A) - 625731947);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * v43) - 4))(3043503402, 3669235349);
}

void sub_10022029C()
{
  JUMPOUT(0x100220238);
}

uint64_t sub_1002202AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = malloc(0x404uLL);
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((235 * (v31 != 0)) ^ v29)) - (((v29 + 252) | 0x91u) ^ 0x6FDLL)))(v31, a12, v32, v33, v34, v35, 0, a8, a9, a10, a11, a12, a13, a14, a8, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_100220310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned __int8 a10, int a11, int a12, int a13, int a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  char v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;

  *(_QWORD *)(v37 - 224) = a1;
  v38 = ((a14 ^ 0x8DAE91B0) - 2 * (((a14 ^ 0x8DAE91B0) + 991077342) & 0x2E4FAA1F ^ a14 & 1) + 1768050172) ^ 0x8DAE91B0;
  v39 = ((v38 - 2 * ((v38 + 991077342) & 0x2E4FAA1F ^ a14 & 1) + 1768050172) ^ 0xAE4FAA1E) + *(_DWORD *)(v37 - 228);
  LOBYTE(v39) = (v39 ^ 0x3F) - 63 + ((2 * v39) & 0x7E);
  LOBYTE(v39) = ((v39 & 0xFE) - ((2 * v39) & 0xC0) - 32) ^ 0x93;
  v40 = (((v36 & 0x7C ^ 0x36C447B) - 1) & 0x304447C | v36 & 0x80) ^ 0x30444F0 | (((2 * ((a10 ^ a25) & 3 ^ 0x6A06020A)) & 0x40C0004)
                                                                               - ((a10 ^ a25) & 3 ^ 0x6A06020A)
                                                                               - 333849799) ^ 0x861FD933;
  v41 = v40 - ((2 * v40) & 0x4480095E) - 1572690513;
  v42 = ((18 - a11) & 0x20000000 ^ 0x75DFFE77) + 2 * ((18 - a11) & 0x20000000);
  v43 = v42 - 1615610898;
  v44 = v42 - 1977613943;
  v45 = -1955350308 - v42;
  v46 = (57 * v39 + ((v35 + 66) ^ 0xAA) - ((114 * v39) & 0x32));
  v47 = dword_10025B310[v41 ^ 0xA242A5F8 ^ v46];
  v48 = v47 - ((2 * v47 + 314516916) & 0xF69D5E5C) + 78529032;
  v49 = a12 ^ a17 ^ v48 ^ (((8 * v48) ^ 0xDA757970)
                         + 1530482247
                         - 2 * (((8 * v48) ^ 0xDA757970) & 0x5B394E48 ^ (8 * v48) & 8));
  if ((v44 & ~v49) != 0)
    v50 = v45;
  else
    v50 = v43;
  *(_DWORD *)(*(_QWORD *)(v37 - 224) + 4 * (v46 ^ 0x99u)) = ((a35 & 0xDFFFFFFF ^ 0xFA984FF)
                                                             + (a35 & 0xC85EC106 ^ 0xE0564100)
                                                             - ((a35 & 0xDFFFFFFF ^ 0xFA984FF) & 0xC85EC106)) ^ 0x866482E8 ^ ((v49 ^ 0xFA0B09DD) - 362003045 + v50 - ((2 * ((v49 ^ 0xFA0B09DD) - 362003045 + v50)) & 0x35FE7028) - 1694549996);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1002C8B50 + v35) - 12))(1530482247);
}

void sub_10022062C()
{
  JUMPOUT(0x100220578);
}

uint64_t sub_10022063C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  int v36;
  unsigned __int8 *v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  __int16 v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  int v59;
  unsigned __int8 *v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  char v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  unint64_t v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  BOOL v246;
  int v247;
  int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  unint64_t v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  unsigned int v263;
  int v264;
  unint64_t v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  uint64_t v296;
  unsigned int v297;
  unsigned int v298;
  uint64_t v299;
  int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  _BYTE *v313;
  int v314;
  int v315;
  int v316;
  char v317;
  char v318;
  int v319;
  __int16 v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unint64_t v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  int v332;
  int v333;
  unsigned int v334;
  uint64_t v335;
  int v336;
  unsigned int v337;
  int v338;
  uint64_t v340;
  uint64_t v341;
  int v342;
  __int128 v343;

  v34 = (v32 - 1295) | 0x298;
  HIDWORD(v35) = HIDWORD(a32) ^ 0x82C78;
  LODWORD(v35) = HIDWORD(a32) ^ 0x84F00000;
  *(_DWORD *)(v33 - 228) = v34;
  HIDWORD(v341) = (v35 >> 20) + 1542605602 + ~((v34 - 1209756794) & (2 * (v35 >> 20)));
  HIDWORD(a13) = -396296192;
  HIDWORD(v340) = HIDWORD(a17) ^ 0xD82562EB;
  LODWORD(v340) = a17 + 1;
  v36 = 4 * *(_DWORD *)(v33 - 228);
  *(_DWORD *)(v33 - 232) = v36;
  LODWORD(a32) = (v36 ^ 0xFFFFF503) & 0x9E395B7B ^ 0x9E395B7F;
  v37 = *(unsigned __int8 **)(v33 - 200);
  v38 = (-18
       - 17 * ((a32 - 479180246 - ((2 * a32) & 0xC6E09454)) ^ 0x2A)
       - ((-34 * ((a32 - 479180246 - ((2 * a32) & 0xC6E09454)) ^ 0x2A)) & 0xFFFFFFDC)) ^ v37[((_DWORD)a32
                                                                                            - 479180246
                                                                                            - ((2 * (_DWORD)a32) & 0xC6E09454)) ^ 0xE3704A2A];
  v39 = (2 * v38) ^ 0xFFFFFF95;
  v40 = (4 * v38) & 0xFFFFFFB4 ^ 0xFFFFFFDF;
  v41 = byte_100259FD0[((-18
                                        - 17 * ((a32 + 42 - ((2 * a32) & 0x54)) ^ 0x2A)
                                        - ((-34 * ((a32 + 42 - ((2 * a32) & 0x54)) ^ 0x2A)) & 0xDC)) ^ v37[((_DWORD)a32 - 479180246 - ((2 * (_DWORD)a32) & 0xC6E09454)) ^ 0xE3704A2A]) ^ 0x26]
      + (v38 ^ 0x18)
      - 82;
  v42 = (v41 ^ 0xFFFFFFE7) + v39 + v40 + ((2 * v41) & 0xFFFFFFCF);
  v43 = (v42 + 1 - 2 * ((v42 + 117) & 0x76 ^ (v42 + 1) & 2) - 24) ^ 0x36;
  v44 = (((v43 - ((2 * v43) & 0x58)) << 24) + 738197504) ^ 0x2C000000;
  v45 = byte_100263BF0[v37[14] ^ 0xF0];
  v46 = ((((v45 ^ 0xA5) - ((2 * (v45 ^ 0xA5)) & 0x18A)) << 8) + 1308738816) ^ 0x4E01C500;
  v47 = byte_100268230[v37[15] ^ 0xFE];
  v48 = (v44 - 1943426145 - ((2 * v44) & 0x18000000)) ^ 0x8C29AB9F | (v46 + 195342960 - ((2 * v46) & 0x17496400)) ^ 0xBA4B270;
  v49 = v48 - 405896007 - ((2 * v48) & 0xCF9D0972);
  v50 = byte_100263BF0[v37[2] ^ 0x52];
  v51 = byte_10025B210[v37[5] ^ 0x98];
  HIDWORD(a30) = 9;
  v52 = v49 ^ 0xE7CE84B9 | ((v47 + 49) + 1422406617 - ((2 * (v47 + 49)) & 0x1B2)) ^ 0x54C833D9;
  *((_QWORD *)&v343 + 1) = v52 - 984106978 - ((2 * v52) & 0x8AAF703C);
  v53 = (v37[9] ^ 0x45) - ((2 * (v37[9] ^ 0x45)) & 0xC6) + 7011;
  v54 = ((((v50 ^ 0x8F) - ((2 * (v50 ^ 0x8F)) & 0xA6)) << 8) + 302142208) ^ 0x12025300;
  v342 = v54 + 1507997120 - ((2 * v54) & 0x33C46A00);
  v55 = byte_10025B210[((v53 & 0x112 ^ 0xD940CFEF) - ((2 * (v53 & 0x112 ^ 0xD940CFEF)) & 0x28181A6) - 1580216109) ^ 0x86BF5CDD ^ ((((v53 & 0xED ^ 0xFFFFFFFA) + 700074736) & 0x1F8 ^ 0x6E204223) - (((v53 & 0xED ^ 0xFFFFFFFA) + 700074736) & 0x8A0805) - 1868953596)];
  v56 = (((32 * ~v51) ^ 0xFFFFFFFB) - ((2 * ((32 * ~v51) ^ 0xFFFFFFFB) - 10) & 0xA8) - 41) ^ (v51 >> 3) ^ 0xCF;
  v57 = (((v56 - ((2 * v56) & 0xD4)) << 16) + 1533673472) ^ 0x5B6A0000;
  HIDWORD(v35) = ~v55;
  LODWORD(v35) = (v55 ^ 0xFFFFFF9F) << 24;
  v58 = (v37[8] - ((2 * v37[8]) & 0xC0) + 781263968) ^ 0xB21DCAC5;
  LODWORD(v58) = (((v58 ^ 0x5E) + 1) ^ 0x77)
               + ((2 * ((v58 ^ 0x5E) + 1)) & 0xFFFFFFEF)
               + byte_100259FD0[v58 ^ 0x9C8CEE9FLL];
  v59 = v58 + (~(2 * v58 + 46) | 0xDB);
  v60 = v37;
  v61 = ((((((v35 >> 27) + (~(2 * (v35 >> 27)) | 0xE3) + 15) ^ 0x57)
         - ((2 * (((v35 >> 27) + (~(2 * (v35 >> 27)) | 0xE3) + 15) ^ 0x57)) & 0x24)) << 16)
       + 219283456) ^ 0xD120000;
  v62 = (((((v59 + 74) ^ 0x16) - ((2 * ((v59 + 74) ^ 0x16)) & 0x8C)) << 24) - 973078528) ^ 0xC6000000;
  v63 = (v62 + 1641889331 - ((2 * v62) & 0xC2000000)) ^ 0x61DD3E33 | (v61 - 1063997856 - ((2 * v61) & 0x1280000)) ^ 0xC094AE60;
  v64 = v63 - 1209148241 - ((2 * v63) & 0x6FDBB95E);
  v65 = byte_100259FD0[v37[4] ^ 0x58] + 2 * ((v37[4] ^ 0x2AFF7A99) + 1) + (((v37[4] ^ 0x2AFF7A99) + 1) ^ 0x7F);
  LODWORD(v58) = (v65 - ((2 * v65 + 94) & 0xB2) - 120) ^ 4;
  LODWORD(v58) = ((((_DWORD)v58 - ((2 * (_DWORD)v58) & 0x38)) << 24) + 469762048) ^ 0x1C000000;
  v66 = (v58 - 1369534089 + (~(2 * v58) | 0xA3FFFFFF) + 1) ^ 0xAE5E9177 | (v57 + 1964826672 - ((2 * v57) & 0x6A380000)) ^ 0x751CE030;
  LODWORD(a26) = 6;
  LOBYTE(v63) = byte_100268230[(v37[3] - ((2 * v37[3]) & 0x1A2) - 308831023) ^ 0xED979C5E];
  v67 = v63 + 49 - ((2 * (v63 + 49)) & 0x8E) + 71;
  v68 = v37[11];
  v69 = ((2 * v68) & 0xFFFFFFCF) + (v68 ^ 0xABFF8FE7);
  v70 = 2 * ((v68 & 0x45) - ((2 * (v68 & 0x45)) & 0x42)) + 1525611842;
  v71 = byte_100263BF0[v37[6] ^ 0xB1] ^ 0x8C;
  v72 = (((v71 - ((2 * v71) & 0xFFFFFF8F)) << 8) - 1260665088) ^ 0xB4DBC700;
  v73 = (v70 ^ 0x95702805) - v69 - 1329429595 + ((2 * v70) & 0x951DAA8C ^ 0x951DAA84);
  v74 = (v69 + 1409314841) ^ (-2037693563 - v69 - ((1476337614 - 2 * v69) & 0xB517673C)) ^ 0xB0D49987 ^ (v73 - ((2 * v73 + 1463578102) & 0xD4BE5432) - 1778556652);
  v75 = ((v74 + 1417934642 - ((2 * v74) & 0xA907EE64)) ^ 0x5483F732) + 69;
  v76 = v75 - ((2 * v75) & 0x85920736) - 1027013733;
  HIDWORD(a18) = 13;
  HIDWORD(v35) = v76 ^ 0x3345;
  LODWORD(v35) = v76 ^ 0xCE608000;
  v77 = (v35 >> 14) - ((2 * (v35 >> 14)) & 0x1D32AF94) + 244930506;
  HIDWORD(v35) = v77 ^ 0x1656C;
  LODWORD(v35) = v77 ^ 0xCDE00000;
  LODWORD(v58) = (v66 + 1764188045 - ((2 * v66) & 0xD24EBF1A)) ^ 0x69275F8D | (v72 + 200661762 - ((2 * v72) & 0x17EBB600)) ^ 0xBF5DB02;
  v78 = v58 + 2031404941 - ((2 * v58) & 0xF2298F1A);
  LODWORD(v58) = v37[13] ^ 0xCB54DE2E;
  v79 = 2 * (v37[13] ^ 0xA61EE9E5);
  LODWORD(v37) = v79 & 0x194;
  v80 = (v79 ^ 2) - ((2 * (v79 ^ 2)) & 0x4C) - 90;
  v81 = (v80 & 0xFFFFFF9A) - ((2 * v80) & 0x30) - 68;
  v82 = ((v81 & 0xDE ^ 0xC3) + (v81 ^ 0x3C) - ((v81 ^ 0x3C) & 0xDA)) ^ 0xDD;
  v83 = byte_100268230[((v35 >> 18) - 783581695 - ((2 * (v35 >> 18)) & 0xA296FC02)) ^ 0xD14B7E88]
      + 49;
  v84 = v64 ^ 0xB7EDDCAF | (v83 - 255652208 - ((2 * v83) & 0x120)) ^ 0xF0C30E90;
  v85 = byte_10025B210[(_DWORD)v58 + (_DWORD)v37 + (v82 ^ 0x80200184) - ((2 * v82) & 0xF6) - 1265950721];
  LODWORD(v58) = v84 + 898281543 - ((2 * v84) & 0x6B15608E);
  HIDWORD(v35) = ~v85;
  LODWORD(v35) = (v85 ^ 0xFFFFFF9F) << 24;
  v86 = (v35 >> 27) - ((2 * (v35 >> 27)) & 0x4E) + 39;
  v87 = ((((v86 ^ 0x98) - ((2 * v86) & 0xC2)) << 16) - 396296192) ^ 0xE8610000;
  v88 = (v87 - 1065940664 - ((2 * v87) & 0xEE0000)) ^ 0xC0770948 | DWORD2(v343) ^ 0xC557B81E;
  v89 = byte_10025B210[v60[1] ^ 0xA0];
  HIDWORD(v35) = ~v89;
  LODWORD(v35) = (v89 ^ 0xFFFFFF9F) << 24;
  v90 = ((((((v35 >> 27) - ((2 * (v35 >> 27)) & 0xA) - 123) ^ 0x97)
         - ((2 * (((v35 >> 27) - ((2 * (v35 >> 27)) & 0xA) - 123) ^ 0x97)) & 0x52)) << 16)
       - 1423376384) ^ 0xAB290000;
  v91 = (v90 - 811650674 - ((2 * v90) & 0x1F3E0000)) ^ 0xCF9F318E;
  v92 = (((*v60 ^ 0x7E30F54D) + 1) ^ 0x7E) + byte_100259FD0[*v60 ^ 0x8CLL] + 4 * (((*v60 ^ 0x7E30F54Du) + 1) >> 1);
  v93 = v92 - 2 * ((v92 + 48) & 0x5F ^ v92 & 4) + 11;
  LODWORD(v343) = -1640408197;
  *(_QWORD *)((char *)&v343 + 4) = 7;
  v94 = (((2 * (v67 & 0xF7 ^ 0x90104B4F)) | 0xB629A0E4) - (v67 & 0xF7 ^ 0x90104B4F) + 619392910) ^ 0x4B049B7A | v342 ^ 0x59E235C0;
  v95 = ((((v93 ^ 0x60) - ((2 * (v93 ^ 0x60)) & 0xFFFFFFC3)) << 24) + 1627389952) ^ 0x61000000;
  v96 = ((v67 & 8) + v91 + 2090319108 - ((2 * v91) & 0x792F7A08)) ^ 0x7C97BD04 | (v94
                                                                                - 652887276
                                                                                - ((2 * v94) & 0x322B7628)) ^ 0xD915BB14;
  LODWORD(a19) = 10;
  v97 = v88 - ((2 * v88) & 0xAC39780A) + 1444723717;
  v98 = (v96 + 1621320562 - ((2 * v96) & 0xC146C6E4)) ^ 0x60A36372 | (v95 - 695386698 - ((2 * v95) & 0xAC000000)) ^ 0xD68D3DB6;
  LODWORD(v37) = byte_100268230[v60[7] ^ 0xBD] + 49;
  v99 = v78 ^ 0x7914C78D | (v37 - 1782331756 - ((2 * (_DWORD)v37) & 0x128)) ^ 0x95C3C694;
  v100 = byte_100263BF0[v60[10] ^ 0x17] ^ 0xCA;
  v101 = (((v100 - ((2 * v100) & 0x18A)) << 8) - 123222784) ^ 0xF8A7C500;
  LODWORD(v58) = v58 ^ 0x358AB047 | (v101 + 1404428473 - ((2 * v101) & 0x276BC000)) ^ 0x53B5E0B9;
  LODWORD(v37) = a20 ^ HIDWORD(a20) ^ a18 ^ (v98 - ((2 * v98) & 0x2A4A6FBE) + 354760671);
  v102 = HIDWORD(a20) ^ HIDWORD(a32) ^ a20;
  v103 = v102 ^ a27 ^ (v99 - ((2 * v99) & 0xA14DBD4C) - 794370394);
  v104 = v102 ^ HIDWORD(a27) ^ (v58 - ((2 * v58) & 0xA8D8ED42) + 1416394401);
  v105 = v102 ^ a30 ^ v97;
  HIDWORD(v35) = v37 ^ 0xD82E9;
  LODWORD(v35) = v37 ^ 0x10F00000;
  LODWORD(v58) = ((v35 >> 20) - ((2 * (v35 >> 20)) & 0xBCACF026) - 564758509) ^ HIDWORD(v341);
  HIDWORD(v35) = v58 ^ 0x8C;
  LODWORD(v35) = v58 ^ 0x5ECCB000;
  v106 = (v35 >> 12) - ((2 * (v35 >> 12)) & 0x9BAE241A) - 841543155;
  v107 = *(_QWORD *)(v33 - 224);
  v108 = *(_QWORD *)(v33 - 208);
  v109 = *(_DWORD *)(v107 + 4 * (v105 ^ 0xFBu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v104) ^ 0xA5u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v103) ^ 0xE1u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v106) ^ 0x58));
  v110 = *(_DWORD *)(a12 + 4 * (HIBYTE(v105) ^ 0xD5));
  v111 = (v110 & 0x2000 ^ 0xBF5BEFFF) + 2 * (v110 & 0x2000);
  v112 = *(_DWORD *)(v108 + 4 * (BYTE2(v106) ^ 0x32u)) ^ 0xFAEFD7B7;
  v113 = *(_DWORD *)(v108 + 4 * (BYTE2(v105) ^ 0x9Au));
  v114 = *(_DWORD *)(a12 + 4 * (HIBYTE(v104) ^ 0x21));
  v115 = *(_DWORD *)(v107 + 4 * (((v35 >> 12) - ((2 * (v35 >> 12)) & 0x1A) + 13) ^ 0x7Fu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v103) ^ 0xFC)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v104) ^ 0x83u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v105) ^ 0xA0u));
  LODWORD(v37) = v113 ^ *(_DWORD *)(v107 + 4 * (v103 ^ 0x85u));
  v116 = *(_DWORD *)(a28 + 4 * (BYTE1(v103) ^ 0xCu));
  v117 = HIWORD(v103);
  v118 = *(_DWORD *)(v107 + 4 * (v104 ^ 0x38u));
  v119 = v37 ^ v114;
  v120 = v111 + 1878980329;
  v121 = *(_DWORD *)(a28 + 4 * (BYTE1(v106) ^ 0xE4u)) ^ v119;
  if (((v111 + 1084493825) & v112) + 925332512 - ((2 * ((v111 + 1084493825) & v112)) & 0x6E4EC000) != 925332512)
    v120 = -290007321 - v111;
  v122 = v118 ^ v116 ^ (1608442227
                      - (v110 & 0xFFFFDFFF ^ 0xE1DF0DF0 | 0x5FDEE173)
                      + (v110 & 0xFFFFDFFF ^ 0xE1DF0DF0 | 0xA0211E8C)) ^ (v112
                                                                        - 794486504
                                                                        + v120
                                                                        - ((2 * (v112 - 794486504 + v120)) & 0xE2D80F20)
                                                                        + 1902905232);
  v123 = *(_DWORD *)(v108 + 4 * (BYTE2(v115) ^ 0x16u));
  v124 = v123 & 0x40000000 | ((v123 & 0x40000000u) >> 30 << 31);
  v125 = (v123 & 0xBFFFFFFF ^ 0x302F5F0E | 0x2EDAE1F4) - (v123 & 0xBFFFFFFF ^ 0x302F5F0E | 0xD1251E0B) - 786096629;
  v126 = ((v122 ^ 0xC1942911) >> (v117 & 0x18))
       + 1544136834
       - ((2 * ((v122 ^ 0xC1942911) >> (v117 & 0x18))) & 0xB8135104);
  v127 = ((v126 ^ 0x5C09A882) >> (v117 & 0x18 ^ 0x18))
       - ((2 * ((v126 ^ 0x5C09A882) >> (v117 & 0x18 ^ 0x18))) & 0x66666666);
  v128 = v124 - 2035095071;
  v129 = (v125 & 0x592DE0DD ^ 0x59258001) + (v125 & 0xA6D21F22 ^ 0x24920901) - 1;
  v130 = *(_DWORD *)(a12 + 4 * (HIBYTE(v109) ^ 0x72)) ^ 0xE5F6DC92;
  if (((v124 + 0x40000000) & v130) != 0)
    v128 = 1051388368 - (v124 | 0x37F7FFEF);
  v131 = *(_DWORD *)(a28 + 4 * (BYTE1(v121) ^ 0x18u)) ^ v129 ^ (v130
                                                                - 1186130401
                                                                + v128
                                                                - ((2 * (v130 - 1186130401 + v128)) & 0x82D0F612)
                                                                + 1097366281) ^ *(_DWORD *)(v107
                                                                                          + 4
                                                                                          * (v122 ^ 0x11u));
  v132 = *(_DWORD *)(v107 + 4 * (v109 ^ 0xABu));
  v133 = *(_DWORD *)(a28 + 4 * (BYTE1(v109) ^ 0xA0u)) ^ *(_DWORD *)(v107 + 4 * (v115 ^ 0x2Bu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v121) ^ 0xF9)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v122) ^ 0x94u));
  v134 = *(_DWORD *)(v108 + 4 * (BYTE2(v109) ^ 0xCDu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v115) ^ 0xF9u)) ^ *(_DWORD *)(v107 + 4 * (v121 ^ 0x4Bu)) ^ *(_DWORD *)(a12 + 4 * ((v127 - 77) ^ 0xB3u));
  v135 = *(_DWORD *)(a12 + 4 * (HIBYTE(v115) ^ 0x83)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v121) ^ 0x1Eu)) ^ v132 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v122) ^ 0x29u));
  v136 = (v134 ^ 0xB0B0836C) + 1;
  v134 ^= 0x860BDA91;
  v137 = v134 + (v136 ^ 0x57FFBF7D) + ((2 * v136) & 0xAFFF7EFA) - 1476378493;
  v138 = ((v137 + 1670917341 + (~(2 * v137) | 0x38CFA647)) ^ 0x9C67D320) + v134;
  v139 = v138 - ((2 * v138) & 0xA6ED3168) - 747202380;
  v140 = *(_DWORD *)(v108 + 4 * (BYTE2(v139) ^ 0x76u));
  v141 = *(_DWORD *)(v108 + 4 * (BYTE2(v135) ^ 0xB8u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v131) ^ 0x3F)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v133) ^ 0x4Cu)) ^ *(_DWORD *)(v107 + 4 * (v139 ^ 0xB4u));
  v142 = *(_DWORD *)(a12 + 4 * (HIBYTE(v139) ^ 0xD3));
  v143 = *(_DWORD *)(a28 + 4 * (BYTE1(v139) ^ 0x98u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v133) ^ 0xADu)) ^ *(_DWORD *)(v107 + 4 * (v131 ^ 0x48u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v135) ^ 0xBD));
  v144 = *(_DWORD *)(a12 + 4 * (HIBYTE(v133) ^ 0xC2)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v131) ^ 0x3Du)) ^ *(_DWORD *)(v107 + 4 * (v135 ^ 0x92u)) ^ v140;
  v145 = *(_DWORD *)(v107 + 4 * (v133 ^ 0x48u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v131) ^ 0x79u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v135) ^ 0x8Eu)) ^ v142;
  v146 = *(_DWORD *)(v107 + 4 * (v145 ^ 0x3Eu)) ^ 0xB6C558E3;
  v147 = *(_DWORD *)(a12 + 4 * (HIBYTE(v141) ^ 8)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v143) ^ 0x6Bu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v144) ^ 0x4Cu)) ^ 0x30CE8272;
  v148 = v146 + v147;
  v149 = (v147 & v146) - ((2 * (v147 & v146)) & 0x54BF9FC2);
  v150 = *(_DWORD *)(v107 + 4 * (v141 ^ 0xE6u));
  v151 = *(_DWORD *)(a12 + 4 * (HIBYTE(v143) ^ 0x33)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v144) ^ 0xCDu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v145) ^ 0xEAu));
  v152 = (((v151 & 0xA7993134 ^ 0x44CF1091) - 1) & 0xA0470134 ^ 0xB0008611)
       + (((v151 & 0xA7993134 ^ 0x44CF1091) - 1) ^ 0x45E719EC)
       - ((((v151 & 0xA7993134 ^ 0x44CF1091) - 1) ^ 0x45E719EC) & 0xA0010174);
  v153 = ((2 * (v151 & 0x5866CECB ^ 0x204EC2)) | 0x87AF79FC) - (v151 & 0x5866CECB ^ 0x204EC2) + 1009271554;
  v154 = ((v153 & 0x9433C1A ^ 0x8423C01) + (v153 & 0xF6BCC3E5) - 1) ^ 0xDBF34C7E | v152 ^ 0x91E78E39;
  v155 = v154 + 621843898 - ((2 * v154) & 0x4A212B74);
  v156 = v155 ^ 0x251095BA;
  v157 = (v150 ^ 0x6C2A32A6 ^ v155) + (v155 ^ 0x251095BA) + 1;
  v158 = v148 ^ 0x9FB7149D;
  v159 = (2 * v148) & 0x3F6E293A;
  v160 = v150 ^ ((v150 ^ 0x493AA71C) - ((2 * (v150 ^ 0x493AA71C) + 2) & 0xD33EE960) - 375425871) ^ 0x40A445F8 ^ (v157 - ((2 * v157) & 0x3FFCD356) + 536766891);
  v161 = *(_DWORD *)(a28 + 4 * (BYTE1(v141) ^ 0x8Eu));
  v162 = *(_DWORD *)(v108 + 4 * (BYTE2(v141) ^ 0xD8u));
  v163 = v160 + v156 - ((2 * (v160 + v156)) & 0x911C4F96) + 1217275851;
  v164 = v158
       + v159
       + ((2 * v149 - 725639230) ^ 0xD61F9EEB)
       + ((2 * (2 * v149 - 725639230)) & 0xFABFFDAC ^ 0x57C0C27B)
       + 1;
  v165 = v164 - ((2 * v164 + 55694452) & 0x6FC1ACA) + 1629943711;
  v166 = *(_DWORD *)(a28 + 4 * (BYTE1(v143) ^ 0xDAu));
  v167 = *(_DWORD *)(a12 + 4 * (HIBYTE(v144) ^ 0x77)) ^ v161 ^ *(_DWORD *)(v108 + 4 * (BYTE2(v145) ^ 0x89u)) ^ *(_DWORD *)(v107 + 4 * (v143 ^ 0xE5u));
  v168 = *(_DWORD *)(a12 + 4 * (HIBYTE(v145) ^ 0xBE)) ^ v162 ^ *(_DWORD *)(v107 + 4
                                                                                  * (v144 ^ 0x3Cu)) ^ v166;
  v169 = *(_DWORD *)(v108 + 4 * (BYTE2(v168) ^ 0x94u));
  v170 = *(_DWORD *)(a12 + 4 * (HIBYTE(v168) ^ 0x4C));
  v171 = *(_DWORD *)(v108 + 4 * (BYTE2(v163) ^ 0x55u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v167) ^ 0x75u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v165) ^ 0xB5)) ^ *(_DWORD *)(v107 + 4 * (v168 ^ 0x37u));
  v172 = *(_DWORD *)(a12 + 4 * (HIBYTE(v163) ^ 0x4B)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v167) ^ 0x16u)) ^ 0x1F190B25;
  v173 = *(_DWORD *)(a28 + 4 * (BYTE1(v168) ^ 0x45u)) ^ 0x2FD78957;
  v174 = 2 * ((v173 & v172) - ((2 * (v173 & v172)) & 0x24F32B4)) + 38744756;
  v175 = ((2 * (v173 + v172)) & 0x777FFCA6)
       + ((v173 + v172) ^ 0xBBBFFE53)
       + (v174 ^ 0x52472ABD)
       + ((2 * v174) & 0x5FEFCFEC ^ 0xFB71BA97);
  v176 = (v175 - ((2 * v175 + 678417226) & 0x23978A3A) + 100904642) ^ *(_DWORD *)(v107
                                                                                + 4 * (v165 ^ 0xB5u));
  v177 = *(_DWORD *)(a12 + 4 * (HIBYTE(v167) ^ 0x74)) ^ v169 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v165) ^ 0x34u)) ^ *(_DWORD *)(v107 + 4 * (v163 ^ 0x6Fu));
  v178 = *(_DWORD *)(a28 + 4 * (BYTE1(v163) ^ 0x1Eu)) ^ v170 ^ *(_DWORD *)(v107 + 4
                                                                                  * (v167 ^ 0x98u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v165) ^ 0xC5u));
  v179 = *(_DWORD *)(v108 + 4 * (BYTE2(v176) ^ 4u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v177) ^ 0xF9u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v171) ^ 0x47)) ^ *(_DWORD *)(v107 + 4 * (((v178 & 0x25) + 4456447 + (v178 & 0xDA ^ 0xB9B8D04B)) ^ 0xB9FCD005));
  v180 = *(_DWORD *)(v108 + 4 * (BYTE2(v171) ^ 0xDAu));
  v181 = *(_DWORD *)(a28 + 4 * (BYTE1(v171) ^ 0x6Fu));
  v182 = *(_DWORD *)(v108 + 4 * (BYTE2(v177) ^ 0x1Cu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v178) ^ 0x66u)) ^ *(_DWORD *)(v107 + 4 * (v171 ^ 0x44u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v176) ^ 0x65));
  v183 = *(_DWORD *)(a12 + 4 * (HIBYTE(v177) ^ 0xB6)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v178) ^ 0x83u)) ^ v181;
  v184 = *(_DWORD *)(a12 + 4 * (HIBYTE(v178) ^ 0x7C)) ^ v180;
  v185 = (-961932044 - (v183 & 0x6A9DFF5C ^ 0x628C4808 | 0xC6AA14F4) + (v183 & 0x6A9DFF5C ^ 0x628C4808 | 0x3955EB0B)) ^ 0xF9D13E41;
  v186 = (((2 * (v183 & 0x956200A3 ^ 0x56432222)) | 0xB6B794D8) - (v183 & 0x956200A3 ^ 0x56432222) + 614741396) ^ (((2 * v185) | 0x7B2CB484) - v185 - 1033263682) ^ *(_DWORD *)(v107 + 4 * (v176 ^ 0x8Fu));
  v187 = v184 ^ *(_DWORD *)(v107 + 4 * (v177 ^ 0xE9u)) ^ *(_DWORD *)(a28 + 4
                                                                                            * (BYTE1(v176) ^ 0x11u));
  v188 = *(_DWORD *)(v108 + 4 * (BYTE2(v187) ^ 0xDu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v186) ^ 0xAA));
  v189 = *(_DWORD *)(a28 + 4 * (BYTE1(v187) ^ 0x3Eu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v182) ^ 0x88)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v186) ^ 3u)) ^ *(_DWORD *)(v107 + 4 * (v179 ^ 0x99u));
  v190 = *(_DWORD *)(v107 + 4 * (v186 ^ 0xDEu));
  v191 = *(_DWORD *)(a12 + 4 * (HIBYTE(v179) ^ 0x4A)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v182) ^ 0x92u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v186) ^ 0xADu)) ^ *(_DWORD *)(v107 + 4 * (v187 ^ 0x4Eu));
  v192 = v188 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v179) ^ 0x2Du)) ^ *(_DWORD *)(v107 + 4
                                                                                  * (v182 ^ 0xE8u));
  v193 = *(_DWORD *)(a28 + 4 * (BYTE1(v182) ^ 0xA1u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v187) ^ 0x42)) ^ v190 ^ *(_DWORD *)(v108 + 4 * (BYTE2(v179) ^ 0x98u));
  v194 = *(_DWORD *)(a12 + 4 * (HIBYTE(v189) ^ 0xF6));
  v195 = *(_DWORD *)(v108 + 4 * (BYTE2(v192) ^ 0xD2u));
  v196 = (2 * (v194 & 0x100000)) ^ 0x200000 | v194 & 0x100000;
  v197 = (((2 * (v194 & 0xFFEFFFFF ^ 0x788712F3)) | 0xFAE40B80) - (v194 & 0xFFEFFFFF ^ 0x788712F3) - 2104624576) ^ 0xE4528DA0;
  v198 = ((2 * v197) & 0x553EDF16) - v197;
  v199 = *(_DWORD *)(a28 + 4 * (BYTE1(v191) ^ 0xFBu));
  v200 = *(_DWORD *)(a12 + 4 * (HIBYTE(v192) ^ 0xC8));
  v201 = *(_DWORD *)(v107 + 4 * (v193 ^ 0x8Au)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v192) ^ 0xD8u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v191) ^ 0xF8));
  v202 = v196 + 2087032425;
  v203 = *(_DWORD *)(v108 + 4 * (BYTE2(v193) ^ 0xD4u));
  if (((v196 - 0x100000) & (v195 ^ 0xFAE00000))
     - 75713350
     - ((2 * ((v196 - 0x100000) & (v195 ^ 0xFAE00000))) & 0xF6F96944) != -75713350)
    v202 = 2089129577 - v196;
  v204 = (v195 ^ 0xFAEFD7B7) - 2088081001 + v202 - ((2 * ((v195 ^ 0xFAEFD7B7) - 2088081001 + v202)) & 0xC13F5004);
  v205 = *(_DWORD *)(a28 + 4 * (BYTE1(v193) ^ 0x3Cu));
  v206 = v199 ^ 0x2FD78957;
  v207 = *(_DWORD *)(v107 + 4 * (v191 ^ 0x2Du));
  v208 = v207 ^ v205 ^ (v198 + 1432391796) ^ (v204 + 1621075970);
  v209 = (v203 ^ v200 ^ ((v203 ^ v200 ^ 0xE0E6F4DA) - ((2 * (v203 ^ v200 ^ 0xE0E6F4DA) + 2) & 0xC35B09B6) - 508721956) ^ (v206 + (v199 ^ 0xCF317D8D ^ v203 ^ v200) + 1 - ((2 * (v206 + (v199 ^ 0xCF317D8D ^ v203 ^ v200) + 1)) & 0x44E37CB4) + 577879642) ^ 0xDCC531A4)
       + v206;
  v210 = (v209 - ((2 * v209) & 0xC4ED5E76) + 1651945275) ^ *(_DWORD *)(v107 + 4 * (v189 ^ 0x54u));
  v211 = v192;
  v212 = *(_DWORD *)(v108 + 4 * (BYTE2(v191) ^ 0xC5u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v193) ^ 0xC));
  v213 = v212 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v189) ^ 0x80u)) ^ *(_DWORD *)(v107
                                                                           + 4
                                                                           * (((v211 ^ 0x56444288)
                                                                             + (v192 & 0xE2 ^ 0x8918AD62)
                                                                             - ((v211 ^ 0x56444288) & 0x440442E2)) ^ 0x9B58AD3F));
  v214 = 2 * v210;
  if ((v208 & 4) != 0)
    v216 = 252;
  else
    v216 = 4;
  v215 = (v214 ^ 0xA967EFB0) - ((2 * (v214 ^ 0xA967EFB0)) & 0x29C8C708);
  v217 = (v210 & 0x5DCB65B7 ^ 0x2F3CBA6F)
       + (v214 & 0xB3168B6E ^ 0xA1068B20)
       + ((v215 + 1424253828) & 0x2B00C04E ^ 0x22C05DD)
       + ((2 * (v215 + 1424253828)) & 0x5201000C ^ 0xFFFFFFF7)
       + 1;
  v218 = (v217 - ((2 * v217 + 254309534) & 0x1139ABC4) + 540086321) ^ ((v210 & 0xA2349A48 ^ 0x76800264)
                                                                     + (v210 & 0x22209800 ^ 0x162D903)
                                                                     - ((v210 & 0xA2349A48 ^ 0x76800264) & 0x26A09804));
  v219 = v201 ^ *(_DWORD *)(v108 + 4 * (BYTE2(v189) ^ 0x5Cu));
  v220 = (v201 ^ *(_BYTE *)(v108 + 4 * (BYTE2(v189) ^ 0x5Cu))) ^ 0x22F79828;
  v221 = (((2 * v220) & 0x448F00EA) - v220 - 1732740726) ^ 0xBE277DB1;
  v222 = *(_DWORD *)(v108 + 4 * (BYTE2(v218) ^ 0xDAu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v208) ^ 0x71)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v213) ^ 0x5Cu)) ^ *(_DWORD *)(v107 + 4 * ((((2 * v221) | 0xD6A725D8) - v221 - 1800639212) ^ 0x6F3B0E00));
  v223 = ((v216 + (v208 ^ 0x71E1CD68)) ^ 0x7C) + ((2 * (v216 + (v208 ^ 0x71E1CD68))) & 0xF8) + 132;
  v224 = *(_DWORD *)(a12 + 4 * (HIBYTE(v218) ^ 0xDB)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v219) ^ 0xE2u)) ^ *(_DWORD *)(v107 + 4 * ((v223 - 138262311 - ((2 * v223) & 0x1B2)) ^ 0xF7C248DD)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v213) ^ 0x40u));
  v225 = *(_DWORD *)(a12 + 4 * (HIBYTE(v213) ^ 0x9B)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v219) ^ 0x11u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v208) ^ 0xCDu)) ^ *(_DWORD *)(v107 + 4 * (v218 ^ 0x81u));
  HIDWORD(v226) = v189 ^ 0xBDA91;
  LODWORD(v226) = v189 ^ 0x86000000;
  v227 = (v226 >> 22) - ((2 * (v226 >> 22)) & 0xFF32561A) + 2140744461;
  HIDWORD(v226) = v227 ^ 0x138;
  LODWORD(v226) = v227 ^ 0x50A32400;
  v228 = (v226 >> 10) - ((2 * (v226 >> 10)) & 0xC6EB4E64) - 478828750;
  v229 = *(_DWORD *)(v107 + 4 * (((v226 >> 10) - ((2 * (v226 >> 10)) & 0x64) + 50) ^ 0x74u)) ^ 0xB6C558E3;
  v230 = v205 ^ v195 ^ v207 ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v228) ^ 0x1E));
  v231 = v201 ^ *(_DWORD *)(v108 + 4 * (BYTE2(v228) ^ 0x69u));
  v232 = ((v229 | v200 ^ 0xE5F6DC92) - ((2 * (v229 | v200 ^ 0xE5F6DC92)) & 0x47F0FB88) + 603487684) ^ ((v229 & (v200 ^ 0xE5F6DC92)) - ((2 * (v229 & (v200 ^ 0xE5F6DC92))) & 0xABA17DE0) + 1439743728) ^ ((v206 & (v203 ^ 0xFAEFD7B7)) - ((2 * (v206 & (v203 ^ 0xFAEFD7B7))) & 0xCD69A482) - 424357311) ^ ((v206 | v203 ^ 0xFAEFD7B7) - ((2 * (v206 | v203 ^ 0xFAEFD7B7)) & 0x288BAE46) - 1807362269);
  v233 = v212 ^ *(_DWORD *)(v107 + 4 * (v211 ^ 0x55u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v228) ^ 0x33u));
  v234 = ((v233 & 0xFCC100B0 ^ 0x80010091) + (v233 & 0x336FF4F) - 1) ^ (-(v233 & 0x80000) - 1958182113);
  v235 = *(_DWORD *)(v108 + 4 * (BYTE2(v230) ^ 0x46u)) ^ 0xFAEFD7B7;
  v236 = *(_DWORD *)(a12 + 4 * (HIBYTE(v231) ^ 0x2F)) ^ 0xE5F6DC92;
  v237 = (v236 & v235) - ((2 * (v236 & v235)) & 0x6457550A);
  v238 = ((v236 + v235) ^ 0xEF796BFE)
       + ((2 * (v236 + v235)) & 0xDEF2D7FC)
       + ((2 * v237 - 464038646) ^ 0x74D76509)
       + ((2 * (2 * v237 - 464038646)) & 0xDEFF9FF8 ^ 0x375175EF)
       + 1;
  v239 = *(_DWORD *)(a28 + 4 * (BYTE1(v232) ^ 0xA6u)) ^ *(_DWORD *)(v107 + 4 * (v234 ^ 0x6Au)) ^ (v238 - ((2 * v238 + 837630) & 0xA6ACE98) - 2059678901);
  v240 = *(_DWORD *)(a12 + 4 * (HIBYTE(v232) ^ 0x93)) ^ *(_DWORD *)(v108
                                                                    + 4
                                                                    * (((v234 ^ 0x320460C) >> 16) ^ 0x29u));
  v241 = *(_DWORD *)(v107 + 4 * ~(_BYTE)v231) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v230) ^ 0x5F)) ^ *(_DWORD *)(a28 + 4 * (((unsigned __int16)(v234 ^ 0x460C) >> 8) ^ 0x99u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v232) ^ 0x4Du));
  v242 = (v240 & 0x10 ^ 0x7FBFD5FF) + 2 * (v240 & 0x10);
  v243 = (-1527662033 - (v240 & 0xFFFFFFEF ^ 0xC378DA0B | 0xA4F1BA2F) + (v240 & 0xFFFFFFEF ^ 0xC378DA0B | 0x5B0E45D0)) ^ 0xC72F94F6;
  v244 = ((2 * v243) | 0xE82D317E) - v243;
  v245 = *(_DWORD *)(a28 + 4 * (BYTE1(v231) ^ 0xE2u));
  v246 = ((v242 - 2143278591) & (v245 ^ 0x2FD78950))
       - 1990096911
       - ((2 * ((v242 - 2143278591) & (v245 ^ 0x2FD78950))) & 0x12C30FC0) == -1990096911;
  v247 = v242 - 1310913;
  v248 = -9721027 - v242;
  if (v246)
    v248 = v247;
  v249 = (v244 + 199845697) ^ *(_DWORD *)(v107 + 4 * (v230 ^ 0x3Au)) ^ ((v245 ^ 0x2FD78957)
                                                                                         - 2141967678
                                                                                         + v248
                                                                                         - ((2
                                                                                           * ((v245 ^ 0x2FD78957)
                                                                                            - 2141967678
                                                                                            + v248)) & 0xF1E08F28)
                                                                                         + 2029012884);
  v250 = *(_DWORD *)(a28 + 4 * (BYTE1(v230) ^ 0xB8u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v234) ^ 0x90)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v231) ^ 0x11u)) ^ *(_DWORD *)(v107 + 4 * (v232 ^ 0x39u));
  v251 = (*(_DWORD *)(a12 + 4 * (HIBYTE(v219) ^ 0x2F)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v208) ^ 0xE1u)) ^ *(_DWORD *)(v107 + 4 * (v213 ^ 0xE5u)) ^ 0x9D3DED93 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v218) ^ 0x9Cu)))
       + 187173966;
  v252 = ((2 * v222) ^ 0xC17B522) - 2 * (((2 * v222) ^ 0xC17B522) & 0x21695A9E ^ (2 * v222) & 4) - 1586931046;
  HIDWORD(v253) = v224 ^ 0x3DA91;
  LODWORD(v253) = v224 ^ 0x86080000;
  v254 = (v253 >> 18) - ((2 * (v253 >> 18)) & 0x20CF1612) + 275221257;
  v255 = (((v252 & 0x4041002 | v252 & 0x8180E180 ^ 0x181) + 138543111) & 0x8584F18A ^ 0x584F008) + (v222 ^ 0x86B2F7F9);
  v256 = ((2 * v255) & 0xFFFA57FA) + (v255 ^ 0x7FFD2BFD);
  v257 = ((2 * v251) & 0xF3AE6B3C) + (v251 ^ 0xF9D7359E) + (v239 ^ 0x78EE7E05);
  v258 = v257 - ((2 * v257 + 206673094) & 0x2180449C) - 1763119951;
  v259 = v249 ^ 0x7A6387C0;
  if ((v249 & 2) != 0)
    v260 = -2;
  else
    v260 = 2;
  v261 = v260 + v259 - ((2 * (v260 + v259)) & 0x5DDEEA86) + 787445059;
  v262 = v258 ^ 0x4130CFCA;
  v263 = (-818646825 * v262) ^ 0xAFF9DFDF;
  v264 = (510189998 * v262) & 0x5FF3BFBE;
  HIDWORD(v265) = v254 ^ 0x61C;
  LODWORD(v265) = v254 ^ 0x99ADC000;
  v266 = ((2 * v261) & 0xDABEBBA6 ^ 0xD2008106) + (v261 ^ 0x165F1D54);
  v267 = (((v265 >> 14) - ((2 * (v265 >> 14)) & 0xA56B0DD0) - 759855384) ^ 0xB30C9407) - 1070568364;
  v268 = ((2 * v267) & 0xDDDC7BAC) + (v267 ^ 0x6EEE3DD6) - v266;
  v269 = ((2 * v241) & 0xB675FBEE ^ 0x80611A60) + (v241 ^ 0x1F4A72CF);
  v270 = (((2 * v225) ^ 0xC17B522) - ((2 * ((2 * v225) ^ 0xC17B522)) & 0xBF9DAF0) - 2047021703) & 0xBA6A0020 ^ 0x12620020;
  v271 = ((((v270 - ((2 * v270) & 0x60D00000) + 1961402712) & 0x59E80020 ^ 0x4C0273 | (v270
                                                                                     - ((2 * v270) & 0x60D00000)
                                                                                     + 1961402712) & 0xA6120000)
         - 1) ^ 0x76E60252)
       + (v225 ^ 0x139A6933);
  v272 = (v256 - v269 - ((2 * (v256 - v269) + 377201652) & 0x1BB23A9E) + 1763110729) ^ 0xE9121C04;
  v273 = ((1743057845 * v272) ^ 0xF1F97DF1) + ((-808851606 * v272) & 0xE3F2FBE2);
  v274 = ((2 * v271) & 0x77EFFCFA) + (v271 ^ 0x3BF7FE7D) + (v250 ^ 0x315096DC);
  v275 = (v274 - ((2 * v274 + 135267080) & 0x6C695364) + 2050796342) ^ 0x9B5AEC9;
  v276 = 292393685 * v275 - 1299677274 - ((584787370 * v275) & 0x6510FF4C);
  v277 = (v268 - ((2 * v268 - 52281350) & 0xC328156A) - 536532302) ^ 0x5DC92232;
  v278 = -1775446584 - 762590379 * v277 - ((622302890 * v277) & 0x2C59AB90);
  v279 = v264 - v273 + v263 + 1107271186;
  v280 = v279 + (v276 ^ 0xB2887FA6) - ((2 * (v279 + (v276 ^ 0xB2887FA6))) & 0x1A0533F4) + 218274298;
  v281 = v273 + 235307535 + (v278 ^ 0x962CD5C8);
  v282 = (v281 ^ 0xAFEC6F6F)
       + (v280 ^ 0xF2FD6605)
       + ((2 * v281) & 0x5FD8DEDE)
       - 2
       * (((v281 ^ 0xAFEC6F6F) + (v280 ^ 0xF2FD6605) + ((2 * v281) & 0x5FD8DEDE) + 1343459474) & 0x775C905F ^ ((v281 ^ 0xAFEC6F6F) + (v280 ^ 0xF2FD6605)) & 1)
       - 948952848;
  v283 = v282 ^ v280;
  v284 = v276 ^ v278 ^ 0x24A4AA6E;
  v285 = v279 + v284 + 550674412 - ((2 * (v279 + v284)) & 0x41A53FD8);
  v286 = ((2 * ((v285 ^ 0x20D29FEC) + v284)) & 0x7F2FD7F4) + (((v285 ^ 0x20D29FEC) + v284) ^ 0x3F97EBFA);
  v287 = (v285 ^ 0xA57369B7 ^ v283) + 1;
  v288 = ((2 * (v287 + (v282 ^ 0x775C905E))) & 0xFF7FDFEE) + ((v287 + (v282 ^ 0x775C905E)) ^ 0x7FBFEFF7);
  v289 = v286 - v288;
  v290 = v288 + v269 + ((2 * v288 + 8396818) ^ 0x9044D011) - ((2 * (2 * v288 + 8396818)) & 0xDF765FDC);
  v291 = ((2 * (v287 + (v239 ^ 0x871181FA))) & 0xFF3FFB34) + ((v287 + (v239 ^ 0x871181FA)) ^ 0xFF9FFD9A);
  v292 = v290 - ((2 * v290 + 2109256204) & 0xA61BB84C) + 300561708;
  v293 = (v250 ^ 0xCEAF6923)
       + (((v283 ^ 0x85A1F65B) + 1076364286 + v289) ^ 0x7DEECB6F)
       + ((2 * ((v283 ^ 0x85A1F65B) + 1076364286 + v289)) & 0xFBDD96DE)
       - 2112801647;
  v294 = ((2 * v293) & 0xBD37BB9E) + (v293 ^ 0x5E9BDDCF);
  v295 = v291 - ((2 * v291 + 1043298766) & 0xD4B2E262) + 158412312;
  v296 = *(_QWORD *)(v33 - 240);
  v297 = v266 - v289 - ((2 * (v266 - v289) + 1553177246) & 0xF757978C) - 1443522283;
  v298 = v294 - ((2 * v294 - 1918167714) & 0xF3118242) - 1067562032;
  v299 = *(_QWORD *)(v33 - 216);
  v300 = *(_DWORD *)(v296 + 4 * (BYTE2(v292) ^ 0xDu)) ^ HIDWORD(a19) ^ *(_DWORD *)(v299 + 4 * (HIBYTE(v295) ^ 0xEA)) ^ *(_DWORD *)(a16 + 4 * (BYTE1(v297) ^ 0xCBu)) ^ *(_DWORD *)(a15 + 4 * (v298 ^ 0x21u));
  HIDWORD(v265) = v300 ^ 0xFB53D;
  LODWORD(v265) = v300 ^ 0x50000000;
  v301 = (v265 >> 25) + 1559690815 + (~(2 * (v265 >> 25)) | 0x46120383);
  v302 = HIDWORD(a19) ^ HIDWORD(a26) ^ *(_DWORD *)(a16 + 4 * (BYTE1(v295) ^ 0x71u)) ^ *(_DWORD *)(v299
                                                                                                  + 4 * (HIBYTE(v297) ^ 0x7B)) ^ *(_DWORD *)(a15 + 4 * (v292 ^ 0x26u)) ^ *(_DWORD *)(v296 + 4 * (BYTE2(v298) ^ 0x88u));
  HIDWORD(v265) = v301 ^ 0xFFFFFFFB;
  LODWORD(v265) = v301 ^ 0x52BAC500;
  v303 = HIDWORD(a17) ^ HIDWORD(a26) ^ HIDWORD(a19);
  v304 = v303 ^ *(_DWORD *)(v296 + 4 * (BYTE2(v297) ^ 0xABu)) ^ *(_DWORD *)(v299 + 4 * (HIBYTE(v292) ^ 0xD3)) ^ *(_DWORD *)(a15 + 4 * (v295 ^ 0x31u)) ^ *(_DWORD *)(a16 + 4 * (BYTE1(v298) ^ 0xC1u));
  v305 = HIDWORD(a17) ^ HIDWORD(a26) ^ ((v265 >> 7) - ((2 * (v265 >> 7)) & 0xE4FCBD20) + 1920884368);
  v306 = v303 ^ *(_DWORD *)(a15 + 4 * (v297 ^ 0xC6u)) ^ *(_DWORD *)(v296 + 4
                                                                                            * (BYTE2(v295) ^ 0x59u)) ^ *(_DWORD *)(a16 + 4 * (BYTE1(v292) ^ 0xDCu)) ^ *(_DWORD *)(v299 + 4 * (HIBYTE(v298) ^ 0xF9));
  v307 = (v302 ^ (v340 + (HIDWORD(v340) ^ v302) - ((2 * (v340 + (HIDWORD(v340) ^ v302))) & 0x160A74A4) - 1962591662) ^ ((v302 ^ 0xAA6525A) - ((2 * (v302 ^ 0xAA6525A) + 2) & 0x75606C0) - 2085944479) ^ 0xFDF79497)
       + a17;
  v308 = v307 - ((2 * v307) & 0x7AA17186) - 1118783293;
  v309 = ((v308 & 0x64C6102B ^ 0x6052395B) + (v308 & 0x1801C484 ^ 0x10481) - 1) ^ 0x4493287B;
  v310 = (-159055418 - (v309 | 0xF68501C6) + (v309 | 0x97AFE39)) ^ ((v308 & 0x83382B50 ^ 0x7EEFD6FF)
                                                                  - ((2 * (v308 & 0x83382B50 ^ 0x7EEFD6FF)) & 0x6104220)
                                                                  - 1635708820);
  LOBYTE(v309) = byte_1002635D0[HIBYTE(v304) ^ 0xDALL];
  v311 = (((8 * v308) ^ 0xD77A17A0) - 1678651491 - ((2 * ((8 * v308) ^ 0xD77A17A0)) & 0x37E39F30)) ^ 0x9BF1CF9D | (((v308 >> 5) & 4 ^ 0x4C) - ((v308 >> 5) & 4) + ((v308 >> 5) ^ 1)) ^ 0x4A;
  v312 = v311 - ((2 * v311) & 0xB0) - 40;
  v313 = *(_BYTE **)(v33 - 200);
  v313[4] = HIBYTE(v304) ^ (((2 * (~(_BYTE)v309 & 0xD4)) | 0xC) - (~(_BYTE)v309 & 0xD4)) ^ 0x3B ^ ((v309 & 0x2B ^ 0xD5)
                                                                                                 - ((2 * (v309 & 0x2B ^ 0xD5)) & 0xCA)
                                                                                                 - 27);
  HIDWORD(v265) = v312 ^ 1;
  LODWORD(v265) = (v312 ^ 0xFFFFFFBF) << 24;
  v314 = byte_100256450[((v265 >> 27) - ((2 * (v265 >> 27)) & 0xC8) + 100) ^ 0xD4];
  HIDWORD(v265) = v314 ^ 8;
  LODWORD(v265) = ~v314 << 24;
  v315 = (v265 >> 28) - ((2 * (v265 >> 28)) & 0xFFFFFF9C);
  HIDWORD(v265) = (v315 - 50) ^ 0x4E;
  LODWORD(v265) = (49 - v315) << 24;
  HIDWORD(v265) = (95
                 - ((2 * ((((v315 - 50) >> 7) & 1 | 0x36) ^ ((v315 - 50) >> 4))) ^ 0x76)) ^ ((v265 >> 31) - ((2 * (v265 >> 31)) & 0xFFFFFFBC) - 34);
  LODWORD(v265) = (HIDWORD(v265) ^ 0xFFFFFFF7) << 24;
  v313[11] = ((v265 >> 25) - ((2 * (v265 >> 25)) & 0x34) + 26) ^ 0xCB;
  v316 = (HIWORD(v306) & 0xDE ^ 0x304A6307) - (HIWORD(v306) & 0x21) + 26220576;
  v317 = byte_10027E2C0[v316 ^ 0x31DA7B29] ^ 0x11;
  if ((v316 ^ 0x31DA7B00u) < 0x80)
    v318 = -4;
  else
    v318 = 4;
  v313[13] = (v318 + v317 - ((2 * (v318 + v317)) & 0xB4) + 90) ^ 0x89;
  v319 = byte_1002635D0[HIBYTE(v306) ^ 0x4ELL];
  v320 = (BYTE1(v306) ^ 0xC07C) + ((v306 >> 8) & 0x52 ^ 0x2F02) - ((BYTE1(v306) ^ 0xC07C) & 0x52);
  v321 = ((v306 >> 7) & 4) + (BYTE1(v306) ^ 0xFFFFFF8E) - 1893839362;
  v322 = (((v321 & 0xE0A0222 ^ 0x10603203) + (v321 & 0x10045DD) - 1) ^ 0xE09588DF) + 1;
  v323 = ((v320 & 0x7B3 ^ 0x96A20003) + (v320 & 0x384C ^ 0x8400841) - 1) ^ 0x9EE227C1;
  v324 = v323 + (v322 ^ 0xF3637D7F) + ((2 * v322) & 0xE6C6FAFE) + 211583617;
  HIDWORD(v325) = v319 ^ 1;
  LODWORD(v325) = (v319 ^ 0x80) << 24;
  v326 = (v325 >> 26) - ((2 * (v325 >> 26)) & 0xFFFFFFD0) + 104;
  v313[a32] = HIBYTE(v306) ^ ((v326 & 0xC0) >> 6) ^ (((4 * v326) ^ 0xA0)
                                                                                  - ((8 * v326) & 0xB0)
                                                                                  - 37) ^ 0x1F;
  LOBYTE(v326) = byte_100266B00[((v324 - ((2 * v324) & 0x4B8F4322) + 633840017) ^ 0xDA385E6D) + v323];
  v327 = (((2 * (BYTE1(v304) ^ 0x2A)) | 0xEB7B880A) - (BYTE1(v304) ^ 0x2A) + 172112891) ^ 0x74BD901C;
  v328 = (-2031792555 - (v327 | 0x86E54E55) + (v327 | 0x791AB1AA)) ^ 0x7E51A86;
  LOBYTE(v326) = v326 ^ ((v326 ^ 0x9C) - ((2 * (v326 ^ 0x9C) + 106) & 0x66) - 88) ^ ((v326 ^ 0x68)
                                                                                   - ((2 * (v326 ^ 0x68) + 2) & 0x50)
                                                                                   + 41) ^ 0xC;
  v313[14] = BYTE1(v306) ^ (v326 - ((2 * v326 + 40) & 0x20) - 124) ^ 0x8F;
  v329 = (BYTE1(v304) ^ 0xB51200F3) + ((v304 >> 8) & 0x4D ^ 0x4AA1100C) - ((BYTE1(v304) ^ 0xB51200F3) & 0x1502004D);
  v313[1] = byte_10027E2C0[((BYTE2(v305) ^ 0x5DB9470C) - ((2 * (BYTE2(v305) ^ 0x5DB9470C)) & 0x2B6086DEu) - 1213047953) ^ 0xEA0B1C4ALL] ^ 0x53;
  v330 = v329 ^ ((v329 ^ 0x154EEFA3) - ((2 * (v329 ^ 0x154EEFA3) + 2) & 0x55A5EAF0) + 718468473);
  v331 = ((v308 >> 23) & 0x12A ^ 0x20) + (HIBYTE(v308) ^ 0xBC7EE7CF);
  v313[6] = BYTE1(v304) ^ byte_100266B00[(v330 ^ 0xBFEC5893 ^ (v328 - ((2 * v328 + 6) & 0xFF1F7B6E) + 2140126650)) + 2] ^ 0xFB;
  v332 = (((v305 >> 8) & 3 ^ 0x1DA5B203) - ((v305 >> 8) & 3) + BYTE1(v305)) ^ 0x1F2CB227;
  v313[2] = BYTE1(v305) ^ 0x49 ^ byte_100266B00[(v332 - ((2 * v332) & 0x10000ACu) - 1048419242) ^ 0xC30B64C3];
  v313[9] = byte_10027E2C0[(((2 * (BYTE2(v310) ^ 0x454478D5)) & 0x8288A006) - (BYTE2(v310) ^ 0x454478D5) - 1400231684) ^ 0xE9CE505ALL] ^ 0xD5;
  v333 = 2 * v331 - ((4 * v331 + 172) & 0x9C) + 420;
  v334 = v331 + (v333 & 0xAE ^ 0xB1018B) + ((2 * v333) & 0x154 ^ 0xFFFFFEEB) + 1;
  v335 = v334 - 1752138146 + (~(2 * v334 - 2053099654) | 0x567F32BF);
  v313[8] = byte_1002635D0[v335 ^ 0x54C066AB] ^ v335 ^ 0x7A;
  LODWORD(v335) = BYTE1(v310) ^ 0x4E;
  v336 = v335
       + (((BYTE1(v310) ^ 0xFFFFFFC9) + 1) ^ 0x7FAFF2C6)
       + ((2 * ((BYTE1(v310) ^ 0xFFFFFFC9) + 1)) & 0xFF5FE58C)
       - 2142237382;
  LODWORD(v335) = ((v336 - ((2 * v336) & 0x40F025BA) + 544740061) ^ 0xDF87ED2D) + v335;
  LOBYTE(v335) = (((v335 + 64) & 0x7D ^ 0x8B) - ((v335 + 64 - ((2 * v335) & 0x80)) & 0x82)) ^ byte_100266B00[((_DWORD)v335 + 393947968 - ((2 * (_DWORD)v335) & 0x2EF65680)) ^ 0x177B2B42];
  LOBYTE(v335) = (26 - ((v335 & 0x11) + (v335 | 0x1B))) ^ 0x5A | (40 - ((v335 & 8) + (v335 | 0xFD))) ^ 0x21;
  v337 = (((v306 >> 3) ^ 0xD)
        + ((v306 >> 3) & 0x1C ^ 0x6EDFFD90)
        - (((v306 >> 3) ^ 0xD) & 0x1C)) ^ 0x6EDFFD92 | (((32 * v306) ^ 0x44DA0360)
                                                                       - 258508686
                                                                       - ((2 * ((32 * v306) ^ 0x44DA0360)) & 0xE12EF0C0)) ^ 0xF0977872;
  v338 = v337 - ((2 * v337) & 0x78) - 68;
  HIDWORD(v325) = v338 ^ 0xD;
  LODWORD(v325) = (v338 ^ 0x60) << 24;
  v313[10] = (v335 - ((2 * v335) & 0xDA) - 19) ^ 0xED;
  LODWORD(v335) = (BYTE2(v304) ^ 0xBF | 0x602DE03A) - (BYTE2(v304) ^ 0xBF | 0x9FD21FC5) - 1613619259;
  v313[5] = byte_10027E2C0[((v335 & 0x402C5BA9 ^ 0x9C01981) + (v335 & 0x2001A456 ^ 0x2132053) - 1) ^ 0x6BFED9F6] ^ 0x20;
  LODWORD(v335) = byte_100256450[((v325 >> 29) + (~(2 * (v325 >> 29)) | 0xF7) - 123) ^ 0xF0];
  HIDWORD(v325) = v335 ^ 8;
  LODWORD(v325) = ~(_DWORD)v335 << 24;
  LODWORD(v335) = (v325 >> 28) - ((2 * (v325 >> 28)) & 0xFFFFFFAE);
  LOBYTE(v338) = ((4 * ((v335 - 41) >> 1)) ^ 0xF6) + ((v335 - 41) & 0x7F ^ 0x85);
  v313[15] = (40 - v335) & 0x80 ^ (((((_DWORD)v335 - 41) & 0x80) != 0) | 0xBE) ^ ((v335 - 41) >> 4) ^ ((v338 & 0xF8 ^ 0xD0) + (v338 ^ 0x28) - ((v338 ^ 0x28) & 0xF8)) ^ 0xE3;
  v313[*((_QWORD *)&v343 + 1)] = HIBYTE(v305) ^ ~byte_1002635D0[HIBYTE(v305) ^ 0x46];
  LODWORD(v335) = ((v304 & 0xD4 ^ 0x9DBB5385) - (v304 | 0xFFFFFFD4) - 2) ^ 0xADB286DD;
  LODWORD(v335) = byte_100256450[(v335 - ((2 * (_DWORD)v335) & 0x40002756) - 489669717) ^ 0xD2D9EEA3];
  HIDWORD(v325) = v335 ^ 8;
  LODWORD(v325) = ~(_DWORD)v335 << 24;
  v313[7] = ((v325 >> 28) - ((2 * (v325 >> 28)) & 0xEA) + 117) ^ (((v325 >> 28)
                                                                                  - ((2 * (v325 >> 28)) & 0xEA)
                                                                                  + 117) >> 7) ^ (((v325 >> 28) - ((2 * (v325 >> 28)) & 0xEA) + 117) >> 4) ^ 0x2F;
  LODWORD(v335) = byte_100256450[(1052464094
                                - (v305 ^ 0xEA | 0x3EBB53DE)
                                + (v305 ^ 0xEA | 0xC144AC21)) ^ 0xC144AC09];
  HIDWORD(v325) = v335 ^ 8;
  LODWORD(v325) = ~(_DWORD)v335 << 24;
  LODWORD(v335) = (v325 >> 28) - ((2 * (v325 >> 28)) & 0xFFFFFF8C) + 70;
  v313[3] = v335 ^ (((v325 >> 28) - ((2 * (v325 >> 28)) & 0x8C) + 70) >> 4) ^ (((v335 & 0x80) != 0) | 0x3E) ^ 0x5D;
  LODWORD(v341) = a22 + 410160491;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_1002C8B50 + ((1596 * ((a22 + 410160491) > 0x10)) ^ (*(_DWORD *)(v33 - 228) - 119))) - 8))(13, a12, 4294967196, byte_1002635D0, 78, 218, v107, a15, a9, a10, v340, a12, a13, v341, a15, a16, a17, a18, a19,
           a20,
           11,
           1,
           4,
           v343,
           *((_QWORD *)&v343 + 1),
           a26,
           a27,
           a28,
           8,
           a30,
           3,
           a32);
}

void sub_10022472C()
{
  JUMPOUT(0x1002206DCLL);
}

void sub_100224770(int a1, void *a2, int a3, int a4, int a5, int a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,uint64_t a35,int a36,int a37,uint64_t a38,uint64_t a39)
{
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v47;

  v47 = v39;
  free(v40);
  free(a8);
  free(v41);
  free(a2);
  free(a7);
  free(v43);
  free(*(void **)(v42 - 216));
  free(v47);
  JUMPOUT(0x1002247E8);
}

uint64_t sub_100224890@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  _BYTE *v12;
  unsigned int v13;

  v11 = v6 < v4;
  if (v11 == v7 - 1908388312 < v4)
    v11 = v7 - 1908388312 < v6;
  v12 = (_BYTE *)(v9 + (v7 | ((unint64_t)(v7 < v5) << 32)) - 200210036);
  v13 = (((v9 + v7 - 200210036) ^ *(_DWORD *)(*(_QWORD *)(v3 + 2384) + (*(_DWORD *)(v2 + 2904) & a1))) & 0x7FFFFFFF)
      * v1;
  *v12 ^= byte_100265280[(v7 - 200210036) & (v8 ^ 0x2C0) | (16 * (((v13 ^ HIWORD(v13)) * v1) >> 24))] ^ (95 * (v13 ^ BYTE2(v13)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((28 * !v11) ^ v8)) - 8))();
}

uint64_t sub_100224964()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (23 * (v1 == 174210216)))) - 35 * (v0 ^ 0x17Bu) + 696))();
}

uint64_t sub_1002249A8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  unint64_t v11;

  v9 = (char *)(v7 + (v5 + 826299658));
  v10 = *v9;
  LODWORD(v9) = ((v9 ^ *(_DWORD *)(*(_QWORD *)(v3 + 2384) + (*(_DWORD *)(v2 + 2904) & a1))) & 0x7FFFFFFF)
              * v1;
  v11 = (v9 ^ (v9 >> 16)) * v1;
  **(_BYTE **)(v6 + 8) = byte_10027F7E0[v11 >> 24] ^ v10 ^ byte_10025A8F0[(v11 >> 24) + 2] ^ byte_10027CA50[(v11 >> 24) + 1] ^ v11 ^ (85 * BYTE3(v11));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * (v4 - 539)) - 4))(-1243892352);
}

void sub_100224A84()
{
  void *v0;

  free(v0);
  JUMPOUT(0x100224A8CLL);
}

char *sub_100224ACC(char *result, char *a2, unint64_t a3)
{
  unint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  BOOL v11;
  char v12;
  unint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
      return (char *)((uint64_t (*)(void))((char *)&loc_100224BA0 + 4 * byte_100254950[a3 & 7]))();
  }
  else
  {
    v3 = -(int)result & 7;
    switch((int)v3)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        v4 = *result++;
        *a2++ = v4;
LABEL_6:
        v5 = *result++;
        *a2++ = v5;
LABEL_7:
        v6 = *result++;
        *a2++ = v6;
LABEL_8:
        v7 = *result++;
        *a2++ = v7;
LABEL_9:
        v8 = *result++;
        *a2++ = v8;
LABEL_10:
        v9 = *result++;
        *a2++ = v9;
LABEL_11:
        v10 = *result++;
        *a2++ = v10;
        break;
      default:
        break;
    }
    v11 = a3 >= v3;
    v12 = a3 - v3;
    if (!v11)
      v12 = 0;
    v13 = v12 & 7;
    switch(v13)
    {
      case 0uLL:
        return result;
      case 1uLL:
        goto LABEL_24;
      case 2uLL:
        goto LABEL_23;
      case 3uLL:
        goto LABEL_22;
      case 4uLL:
        goto LABEL_21;
      case 5uLL:
        goto LABEL_20;
      case 6uLL:
        goto LABEL_19;
      case 7uLL:
        v14 = *result++;
        *a2++ = v14;
LABEL_19:
        v15 = *result++;
        *a2++ = v15;
LABEL_20:
        v16 = *result++;
        *a2++ = v16;
LABEL_21:
        v17 = *result++;
        *a2++ = v17;
LABEL_22:
        v18 = *result++;
        *a2++ = v18;
LABEL_23:
        v19 = *result++;
        *a2++ = v19;
LABEL_24:
        *a2 = *result;
        break;
      default:
        result = (char *)((uint64_t (*)(void))((char *)&loc_100224BEC + 4 * byte_10025495F[(v13 >> 3) & 7]))();
        break;
    }
  }
  return result;
}

_BYTE *sub_100224C8C(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_100224D1C + 4 * byte_100254976[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_100224D80()
{
  uint64_t result;

  if (qword_100306B68 != -1)
    dispatch_once(&qword_100306B68, &stru_1002CC6B0);
  dispatch_sync((dispatch_queue_t)qword_100306B70, &stru_1002CC670);
  result = dword_100306B60;
  if (!dword_100306B60)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStore");
    return dword_100306B60;
  }
  return result;
}

void sub_100224E08(id a1)
{
  if (!dword_100306B60)
    dword_100306B60 = sub_100224E6C("IOService:/IOResources/AppleKeyStore", "AppleKeyStore");
}

void sub_100224E44(id a1)
{
  qword_100306B70 = (uint64_t)dispatch_queue_create("aks-client-queue", 0);
}

uint64_t sub_100224E6C(char *path, const char *a2)
{
  io_service_t v3;
  io_object_t v4;
  kern_return_t v5;
  const __CFDictionary *v6;
  io_service_t MatchingService;
  io_object_t v8;
  uint64_t result;
  kern_return_t v10;
  io_connect_t connect;

  connect = 0;
  v3 = IORegistryEntryFromPath(kIOMasterPortDefault, path);
  if (!v3 || (v4 = v3, v5 = IOServiceOpen(v3, mach_task_self_, 0, &connect), IOObjectRelease(v4), v5))
  {
    v6 = IOServiceMatching(a2);
    MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v6);
    if (MatchingService)
    {
      v8 = MatchingService;
      IOServiceOpen(MatchingService, mach_task_self_, 0, &connect);
      IOObjectRelease(v8);
    }
  }
  result = connect;
  if (connect)
  {
    v10 = IOConnectCallMethod(connect, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    result = connect;
    if (v10)
    {
      IOServiceClose(connect);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100224F60(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, size_t *a7)
{
  uint64_t v7;
  mach_port_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  mach_port_t v17;
  size_t v19;
  int v20;
  char *v21;
  uint64_t input;

  v21 = 0;
  input = a1;
  v20 = 0;
  v7 = 3758097090;
  if (a2 && a6 && a7)
  {
    v11 = sub_100224D80();
    if (v11)
    {
      v17 = v11;
      sub_10022516C(&v21, (unsigned int *)&v20, 2, v12, v13, v14, v15, v16, a2);
      v19 = *a7;
      v7 = IOConnectCallMethod(v17, 0x51u, &input, 1u, v21, v20, 0, 0, a6, &v19);
      if (!(_DWORD)v7)
        *a7 = (int)v19;
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_absinthe_generate", ":", 3253, "", 0, "", "");
      v7 = 3758097084;
    }
  }
  free(v21);
  return v7;
}

char *sub_1002250E8(_DWORD *a1, const void *a2, int a3)
{
  char *v3;
  int v5;
  size_t v6;
  int __s;

  v3 = (char *)(a1 + 1);
  if (a2)
  {
    *a1 = a3;
    memcpy(a1 + 1, a2, a3);
    v3 += a3;
    v5 = -a3;
    v6 = -a3 & 3;
    if ((v5 & 3) != 0)
    {
      __s = 0;
      memset_s(&__s, 4uLL, 0, 4uLL);
      memcpy(v3, &__s, v6);
      v3 += v6;
    }
  }
  else
  {
    *a1 = 0;
  }
  return v3;
}

char *sub_10022516C(char **a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned int v12;
  int v13;
  uint64_t *v14;
  char *result;
  char *v16;
  int v17;
  uint64_t v18;
  const void **v19;
  const void *v20;
  uint64_t *v21;
  const void **v22;

  v21 = &a9;
  v12 = 4;
  if (a3)
  {
    v13 = a3;
    do
    {
      v14 = v21;
      v21 += 2;
      v12 += *((_DWORD *)v14 + 2) + (-*((_DWORD *)v14 + 2) & 3) + 4;
      --v13;
    }
    while (v13);
  }
  result = (char *)calloc(1uLL, v12);
  v16 = result;
  v22 = (const void **)&a9;
  v17 = 0;
  if (a3)
  {
    v18 = 4;
    do
    {
      v19 = v22;
      v20 = *v22;
      v22 += 2;
      result = sub_1002250E8(&v16[v18], v20, *((_DWORD *)v19 + 2));
      v18 = result - v16;
      ++v17;
    }
    while (a3 != v17);
  }
  *(_DWORD *)v16 = v17;
  *a1 = v16;
  *a2 = v12;
  return result;
}

void sub_100225248(int a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v8 = objc_retainBlock(a2);
  sub_100003900((void *)&_mh_execute_header, v2, v3, "%@ newRequest completionHandler: %@", v4, v5, v6, v7, 2u);

  sub_100003914();
}

void sub_1002252DC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "request"));
  sub_100003924();
  sub_100003900((void *)&_mh_execute_header, v2, v3, "%@ completed request.completionHandler: %@", v4, v5, v6, v7, v8);

  sub_100003914();
}

void sub_100225360(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "request"));
  sub_100003924();
  sub_100003900((void *)&_mh_execute_header, v2, v3, "%@ run old request completionHandler: %@", v4, v5, v6, v7, v8);

  sub_100003914();
}

void sub_1002253E4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Error occured while encoding array: %@", a5, a6, a7, a8, 2u);
}

void sub_10022544C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Error occured while decoding array: %@", a5, a6, a7, a8, 2u);
}

void sub_1002254B4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "Creating shared instance of FMDMessageMgr_iOS", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_1002254E4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "*** Trying to explicitly init FMDMessageMgr_iOS. Use 'sharedInstance'", v1, 2u);
  sub_1000075B8();
}

void sub_100225520(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "FMDMessageMgr_iOS: initialize", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_100225550(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v4 = 138412290;
  v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%@ deallocating...", (uint8_t *)&v4, 0xCu);

}

void sub_1002255E4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Error while creating a CFUserNotification : %lu", a5, a6, a7, a8, 0);
  sub_1000075B0();
}

void sub_10022564C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Error playing sound: %{public}@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_1002256B0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Error stopping XPC sound: %{public}@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100225714()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  sub_10000B4B8();
  v2 = (void *)objc_opt_class(v0, v1);
  v3 = sub_10000B44C(v2);
  sub_10000B488((void *)&_mh_execute_header, v4, v5, "%@ (0x%lX) Serializing error for request body : %@", v6, v7, v8, v9, v10);

  sub_10000B49C();
}

void sub_10022578C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  sub_10000B4B8();
  v2 = (void *)objc_opt_class(v0, v1);
  v3 = sub_10000B44C(v2);
  sub_10000B488((void *)&_mh_execute_header, v4, v5, "%@ (0x%lX) Error serializing into JSON : %@", v6, v7, v8, v9, v10);

  sub_10000B49C();
}

void sub_100225804(uint64_t a1, NSObject *a2)
{
  void *v3;
  id v4;
  uint8_t v5[24];

  v3 = (void *)objc_opt_class(a1, a2);
  v4 = sub_10000B470(v3);
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@ (0x%lX) serialization yielded NULL body data", v5, 0x16u);

  sub_10000B4AC();
}

void sub_10022588C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  v2 = (void *)objc_opt_class(a1, a2);
  v3 = sub_10000B470(v2);
  sub_100003900((void *)&_mh_execute_header, v4, v5, "%@ (0x%lX) cancelled before it could be sent", v6, v7, v8, v9, v10);

  sub_10000B4AC();
}

void sub_100225904(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  v2 = (void *)objc_opt_class(a1, a2);
  v3 = sub_10000B470(v2);
  sub_100003900((void *)&_mh_execute_header, v4, v5, "serverInteractionController completionHandler request - %@(0x%lX)", v6, v7, v8, v9, v10);

  sub_10000B4AC();
}

void sub_100225980()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  sub_10000B4B8();
  v2 = (void *)objc_opt_class(v0, v1);
  v3 = sub_10000B44C(v2);
  sub_10000B488((void *)&_mh_execute_header, v4, v5, "%@ (0x%lX) Error trying to deserialize JSON response into dictionary: %@", v6, v7, v8, v9, v10);

  sub_10000B49C();
}

void sub_1002259FC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Could not obtain the PCRT Token %@", (uint8_t *)&v2, 0xCu);
}

void sub_100225A70(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  void *v9;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "alertFromServerResponse"));
  v6 = 138412546;
  v7 = v4;
  v8 = 2112;
  v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@ V3Signing Session Found alert but cannot present it : %@", (uint8_t *)&v6, 0x16u);

}

void sub_100225B30(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "LAContext already evaluating.", v1, 2u);
}

void sub_100225B70(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  void *v9;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "localizedDescription"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "underlyingErrors"));
  v6 = 138412546;
  v7 = v4;
  v8 = 2112;
  v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failure to evaluate policy %@, %@.", (uint8_t *)&v6, 0x16u);

}

void sub_100225C30(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "Creating shared instance of FMDLostModeManager", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_100225C60(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "*** Trying to explicitly init FMDLostModeManager. Use 'sharedInstance'", v1, 2u);
  sub_1000075B8();
}

void sub_100225C9C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "FMDLostModeManager: initialize", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_100225CCC(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDLostModeManager unable to obtain iCloud account credential %@ %@", (uint8_t *)&v3, 0x16u);
}

void sub_100225D50(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error disabling biometric ID : %@", (uint8_t *)&v2, 0xCu);
}

void sub_100225DC4(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error opening URL - %@", (uint8_t *)&v2, 0xCu);
}

void sub_100225E38(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDSupportedAccessoryTypesRequest does not support %@ account", (uint8_t *)&v2, 0xCu);
}

void sub_100225EAC(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Creating shared instance of FMDBAStatusUtil", v1, 2u);
}

void sub_100225EEC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Connected External Accessories : %@", (uint8_t *)&v2, 0xCu);
}

void sub_100225F60(NSObject *a1)
{
  void *v2;
  void *v3;
  uint8_t v4[24];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSProcessInfo processInfo](NSProcessInfo, "processInfo"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "environment"));
  sub_1000189B0();
  _os_log_debug_impl((void *)&_mh_execute_header, a1, OS_LOG_TYPE_DEBUG, "Environment:\n%@", v4, 0xCu);

}

void sub_100226010()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Bug in findmydeviced configuration. Please raise a radar with this message - %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100226070(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Verifiying launch events", v1, 2u);
}

void sub_1002260B0(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "A nil environment was received in apsHandlerForEnvironment", v1, 2u);
}

void sub_1002260F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Error from MAEGetActivationStateWithError: %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100226150()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;

  sub_1000189B0();
  v3 = 2112;
  v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "BUG: oldVersion: [%@] and newVersion: [%@] are the same!", v2, 0x16u);
  sub_1000075B0();
}

void sub_1002261CC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Unable to save data %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100226230(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Reading configurations from disk failed with error %@ %@", (uint8_t *)&v3, 0x16u);
  sub_1000075B0();
}

void sub_1002262B0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Accesory added but empty configuration for accessoryType %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100226318(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Tried to get configuration for unsupported accessory type %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100226380(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not find class %@ in the automation bundle", (uint8_t *)&v2, 0xCu);
}

void sub_1002263F4(void *a1, NSObject *a2)
{
  void *v3;
  uint8_t v4[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "contextKey"));
  sub_1000189B0();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDProtectedContext could not generate file path for key %@", v4, 0xCu);

  sub_10000B4AC();
}

void sub_10022647C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "Root context directory URL %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_1002264DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "Constructed protected context file url %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022653C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "Attempt to read protected context from file %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022659C(void *a1, NSObject *a2)
{
  int v3;
  void *v4;
  __int16 v5;
  id v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2048;
  v6 = objc_msgSend(a1, "code");
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to save protected context file %@ %li", (uint8_t *)&v3, 0x16u);
  sub_10000B4AC();
}

void sub_10022662C(void *a1, NSObject *a2)
{
  void *v3;
  uint8_t v4[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "contextKey"));
  sub_1000189B0();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Creating protected context file for key %@", v4, 0xCu);

  sub_10000B4AC();
}

void sub_1002266B4(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Digest: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100226728(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v6 = 138412546;
  v7 = v5;
  v8 = 2112;
  v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Error serializing volatile accessory info into JSON for %@ : %@", (uint8_t *)&v6, 0x16u);

}

void sub_1002267D4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "File download completed without file location.", v1, 2u);
}

void sub_100226814(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "Creating shared instance of FMIPConfig", a5, a6, a7, a8, 0);
}

void sub_100226848(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "FMIPConfig: initialize", a5, a6, a7, a8, 0);
}

void sub_10022687C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Could not set new passcode - unknown error", v1, 2u);
}

void sub_1002268BC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not set new passcode - error received:  %@", (uint8_t *)&v2, 0xCu);
}

void sub_100226930(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Found activation lock status key with invalid value %@", (uint8_t *)&v2, 0xCu);
}

void sub_1002269A4(void *a1, uint64_t a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412802;
  *(_QWORD *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2080;
  *(_QWORD *)(buf + 14) = "IOPMUBootLPMCtrl";
  *((_WORD *)buf + 11) = 2048;
  *((_QWORD *)buf + 3) = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%@ _readIODeviceSupportsFindMy: Failed to fetch property: %s. dict=%p", buf, 0x20u);

}

void sub_100226A1C(void *a1, uint64_t a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(_QWORD *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(_QWORD *)(buf + 14) = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%@ _readIODeviceSupportsFindMy: Failed to decode PMU data %@", buf, 0x16u);

}

void sub_100226A80(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDTrackedLocationPublisher must call startPublishingWithBlock: before updating locations", v1, 2u);
}

void sub_100226AC0()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_1000189B0();
  sub_10002A350((void *)&_mh_execute_header, v0, v1, "FMDAccessoryPlaySoundAction (0x%lX) discovery could not initialize", v2);
  sub_1000075B0();
}

void sub_100226B24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_10002A37C();
  sub_10002A35C(v0, v1);
  sub_10002A32C();
  sub_10000B488((void *)&_mh_execute_header, v2, v3, "Error while stopping a sound on accessory: %@ [%@], %li", v4, v5, v6, v7, v8);
  sub_10000B49C();
}

void sub_100226B90()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_1000189B0();
  sub_10002A350((void *)&_mh_execute_header, v0, v1, "statusController stopDiscovery return with error %@", v2);
  sub_1000075B0();
}

void sub_100226BF4()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;

  sub_1000189B0();
  v3 = 2112;
  v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "play sound not supported accessory connectionFlavor = %@ can soundflavor %@", v2, 0x16u);
  sub_1000075B0();
}

void sub_100226C70()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "Error while stopping a sound not able to get the sound controller", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100226C9C(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 138412290;
  *(_QWORD *)(a2 + 4) = a1;
  sub_10002A350((void *)&_mh_execute_header, a3, (uint64_t)a3, "unable to get connectionController for accessory %@", (uint8_t *)a2);

}

void sub_100226CE8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "Error while playing a sound not able to get the sound controller", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100226D14(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 138412290;
  *(_QWORD *)(a2 + 4) = a1;
  sub_10002A350((void *)&_mh_execute_header, a3, (uint64_t)a3, "unable to get safetyCheckController for accessoory %@", (uint8_t *)a2);

}

void sub_100226D60()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_1000189B0();
  sub_10002A350((void *)&_mh_execute_header, v0, v1, "failed to wait for safety check %ld", v2);
  sub_1000075B0();
}

void sub_100226DC4()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_1000189B0();
  sub_10002A350((void *)&_mh_execute_header, v0, v1, "Waiting for connection timeout with error %ld", v2);
  sub_1000075B0();
}

void sub_100226E28()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "Unable to connect to accessory", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100226E54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "Play sound failed retrying", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100226E80()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_10002A37C();
  sub_10002A35C(v0, v1);
  sub_10002A32C();
  sub_10000B488((void *)&_mh_execute_header, v2, v3, "Error while playing a sound on accessory: %@ [%@], %li", v4, v5, v6, v7, v8);
  sub_10000B49C();
}

void sub_100226EEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_10002A37C();
  sub_10002A35C(v0, v1);
  sub_10002A32C();
  sub_10000B488((void *)&_mh_execute_header, v2, v3, "Error while picking audio route accessory: %@ [%@], %li", v4, v5, v6, v7, v8);
  sub_10000B49C();
}

void sub_100226F58()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t v9;

  sub_10002A37C();
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "accessory"));
  objc_msgSend(v0, "code");
  sub_10002A32C();
  sub_10000B488((void *)&_mh_execute_header, v3, v4, "Error while stopping a sound on accessory: %@ [%@], %li", v5, v6, v7, v8, v9);

  sub_10000B49C();
}

void sub_100226FE0(int a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unhandled ADIOTPRequest error: %u", (uint8_t *)v2, 8u);
}

void sub_100227054(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "IDS identifier not available.", v1, 2u);
}

void sub_100227094(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error occured while decoding dictionary: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100227108(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Error encoding NSNull: %@", a5, a6, a7, a8, 2u);
}

void sub_100227170(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Error while decoding NSNull: %@", a5, a6, a7, a8, 2u);
}

void sub_1002271D8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "Creating shared instance of FMDXPCManager", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_100227208(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "*** Trying to explicitly init FMDXPCManager. Use 'sharedInstance'", v1, 2u);
  sub_1000075B8();
}

void sub_100227244(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "FMDXPCManager: initialize", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_100227274(uint64_t a1, NSObject *a2)
{
  id v4;
  int v5;
  id v6;
  __int16 v7;
  uint64_t v8;

  v5 = 138412546;
  v6 = (id)objc_opt_class(a1, a2);
  v7 = 2048;
  v8 = a1;
  v4 = v6;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%@ (0x%lX) deallocating...", (uint8_t *)&v5, 0x16u);

}

void sub_100227318(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error reading server context %@", (uint8_t *)&v2, 0xCu);
}

void sub_10022738C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "unencodedAuthString is:  %@", (uint8_t *)&v2, 0xCu);
}

void sub_100227400(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002EC14((void *)&_mh_execute_header, a2, a3, "Hex strings should have an even number of digits (%@)", a5, a6, a7, a8, 2u);
}

void sub_100227468(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002EC14((void *)&_mh_execute_header, a2, a3, "MAC address should be 6 bytes (%@)", a5, a6, a7, a8, 2u);
}

void sub_1002274D0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ratchetIdentifier"));
  sub_100030E74((void *)&_mh_execute_header, v2, v3, "Failure to arm ratchet %@ with no error and no result.", v4, v5, v6, v7, 2u);

  sub_10000B4AC();
}

void sub_100227550(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ratchetIdentifier"));
  sub_100030E74((void *)&_mh_execute_header, v2, v3, "Failure to arm ratchet %@, no context found.", v4, v5, v6, v7, 2u);

  sub_10000B4AC();
}

void sub_1002275D0(void *a1, void *a2, NSObject *a3)
{
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  void *v11;
  __int16 v12;
  void *v13;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "ratchetIdentifier"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "localizedDescription"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "underlyingErrors"));
  v8 = 138412802;
  v9 = v5;
  v10 = 2112;
  v11 = v6;
  v12 = 2112;
  v13 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to arm ratchet %@ no stateInfo, error: %@, %@.", (uint8_t *)&v8, 0x20u);

}

void sub_1002276AC(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDLocator didUpdateLocations before setting locatorPublisher.", v1, 2u);
}

void sub_1002276EC(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Creating shared instance of ServerDeviceInfo", v1, 2u);
}

void sub_10022772C(uint64_t a1, void *a2, NSObject *a3)
{
  void *v6;
  id v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  void *v14;

  v6 = (void *)objc_opt_class(a1, a2);
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "nextRetryTime"));
  v9 = 138412802;
  v10 = v6;
  v11 = 2048;
  v12 = a1;
  v13 = 2112;
  v14 = v8;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "%@ (0x%lX) An earlier retry is already scheduled for %@", (uint8_t *)&v9, 0x20u);

}

void sub_100227808(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100036E5C((void *)&_mh_execute_header, a2, a3, "NSData (FMDEncryptable) could not encrypt %i", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_10022786C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100036E5C((void *)&_mh_execute_header, a2, a3, "NSData (FMDEncryptable) could not decrypt %i", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_1002278D0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100036E5C((void *)&_mh_execute_header, a2, a3, "NSData (FMDEncryptable) could not generate random bytes. %i", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_100227934(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  void *v9;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "commandID"));
  v6 = 138412546;
  v7 = v4;
  v8 = 2112;
  v9 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Handling %@ with command id %@", (uint8_t *)&v6, 0x16u);

}

void sub_1002279F4(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDEventLoggerFacilityOnDiskStats Unable to write %@", (uint8_t *)&v2, 0xCu);
}

void sub_100227A68(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "FMDEventLoggerFacilityOnDiskStats Wrinting events to disk %@", (uint8_t *)&v2, 0xCu);
}

void sub_100227ADC(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "cachedLogFileURL"));
  v6 = 138412546;
  v7 = v5;
  v8 = 2112;
  v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could not delete logs %@ %@", (uint8_t *)&v6, 0x16u);

}

void sub_100227B88(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100036E5C((void *)&_mh_execute_header, a2, a3, "#nvram - Error clearing out nvram property - result code %d", a5, a6, a7, a8, 0);
}

void sub_100227BF0(uint64_t a1, void *a2, NSObject *a3)
{
  int v4;
  uint64_t v5;
  __int16 v6;
  id v7;

  v4 = 138412546;
  v5 = a1;
  v6 = 2048;
  v7 = objc_msgSend(a2, "length");
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "#nvram - Error saving data property to NVRAM key %@ datalen %ld", (uint8_t *)&v4, 0x16u);
}

void sub_100227C8C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100036E5C((void *)&_mh_execute_header, a2, a3, "#nvram - Error retrieving data value from nvrm. result code %d", a5, a6, a7, a8, 0);
}

void sub_100227CF4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(a1, "pscSessionRef");
  sub_10003D208((void *)&_mh_execute_header, v1, v2, "AbsintheV3 Request created psc session ref %p", v3, v4, v5, v6, 0);
  sub_10000B4AC();
}

void sub_100227D64(int a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 134217984;
  v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Error generating data for sessionCreationRequest body: %ld", (uint8_t *)&v2, 0xCu);
  sub_1000075B0();
}

void sub_100227DD8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "Absinth V3 Signaling sync", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100227E04(void *a1, NSObject *a2)
{
  void *v4;
  id v5;
  void *v6;
  int v7;
  void *v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v5 = objc_msgSend(a1, "httpResponseStatus");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "httpResponseError"));
  v7 = 138412802;
  v8 = v4;
  v9 = 2048;
  v10 = v5;
  v11 = 2112;
  v12 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@: Error (%ld) %@", (uint8_t *)&v7, 0x20u);

}

void sub_100227EDC()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_10002A388();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "nil response for sessionCreationRequest", v1, 2u);
  sub_1000075B8();
}

void sub_100227F14(char a1, char a2, os_log_t log)
{
  const __CFString *v3;
  const __CFString *v4;
  int v5;
  const __CFString *v6;
  __int16 v7;
  const __CFString *v8;

  v3 = CFSTR("none");
  if ((a1 & 1) != 0)
    v4 = CFSTR("found");
  else
    v4 = CFSTR("none");
  if ((a2 & 1) != 0)
    v3 = CFSTR("found");
  v5 = 138412546;
  v6 = v4;
  v7 = 2112;
  v8 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "sessionCreationRequest did not return all the data. message1: %@, message2 : %@", (uint8_t *)&v5, 0x16u);
  sub_1000075B0();
}

void sub_100227FB4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10003D21C((void *)&_mh_execute_header, a2, a3, "Error in establising the key: %d", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_100228018(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(*(id *)(a1 + 32), "pscSessionRef");
  sub_10003D208((void *)&_mh_execute_header, v1, v2, "AbsinthV3 PSCSessionref %p", v3, v4, v5, v6, 0);
  sub_10000B4AC();
}

void sub_10022808C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "Initialized session, establishing key...", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_1002280B8(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "sessionCreationRequest response body : %@", (uint8_t *)&v2, 0xCu);
  sub_1000075B0();
}

void sub_100228128(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10003D21C((void *)&_mh_execute_header, a2, a3, "Error in signing the data: %d", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_10022818C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "AbsinthV3 attempt to invalidate session", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_1002281B8()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_10002A388();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Creating shared instance of FMDAppleAccountManager", v1, 2u);
  sub_1000075B8();
}

void sub_1002281F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "*** Trying to explicitly init FMDAppleAccountManager. Use 'sharedInstance'", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022821C(char a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1 & 1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Sync FMIP Account deviceLocator provisioned: %i", (uint8_t *)v2, 8u);
  sub_1000075B8();
}

void sub_100228290()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "iCloud account disappeared without turning FMIP off", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_1002282BC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "iCloud account is different from the previously configured FMIP account", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_1002282E8(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Attempting to set new passcode: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10022835C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "SaveDataProperty called with NULL property name or value.", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100228388()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "IORegistryEntryFromPath returned MACH_PORT_NULL", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_1002283B4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "copyPropertyAsCFString called with NULL variableNameRef or value.", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_1002283E0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "Inconsistent state: FMIP is not enabled but the paired device is asking for a signature. Sending back an error", a5, a6, a7, a8, 0);
}

void sub_100228414(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  uint64_t v6;
  int v7;
  void *v8;
  __int16 v9;
  uint64_t v10;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "dsid"));
  v7 = 138412546;
  v8 = v5;
  v9 = 2112;
  v10 = a2;
  sub_100041B48((void *)&_mh_execute_header, a3, v6, "Inconsistent state: FMIP is enabled for dsid %@ but the paired device is asking for a signature for dsid %@. Sending back an error", (uint8_t *)&v7);

}

void sub_1002284B8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "Request DSID is null!", a5, a6, a7, a8, 0);
}

void sub_1002284EC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error deserializing the json from the v5 signature request : %@", (uint8_t *)&v2, 0xCu);
}

void sub_100228560(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  sub_100041B48((void *)&_mh_execute_header, a3, (uint64_t)a3, "Error while initiating lost mode exit request %@ for watch %@", (uint8_t *)&v4);
}

void sub_1002285E0(void *a1, NSObject *a2)
{
  int v3;
  id v4;

  v3 = 134217984;
  v4 = objc_msgSend(a1, "length");
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Signing data of length %lu", (uint8_t *)&v3, 0xCu);
}

void sub_10022866C(void *a1, NSObject *a2)
{
  void *v3;
  uint8_t v4[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "account"));
  sub_1000189B0();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMIP account %@ known by findmydeviced has gone missing from Accounts. Removing findmydeviced's record of this account", v4, 0xCu);

  sub_10000B4AC();
}

void sub_1002286F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not read not-backedup persistance accounts file from disk %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100228754()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "Attempting read of persistance accounts file (notbackedup)", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100228780()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not read backedup persistance accounts file from disk %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_1002287E0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "Attempting read of persistance accounts file", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022880C(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fmipStateChangeCriteria"));
  v6 = 138412546;
  v7 = v5;
  v8 = 2112;
  v9 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "Old stateChangeCriteria:%@, New stateChangeCriteria:%@", (uint8_t *)&v6, 0x16u);

}

void sub_1002288B8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not delete FMIP account notbackedup file (persistance) %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100228918()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not delete FMIP account backedup file (persistance) %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100228978()
{
  uint64_t v0;
  os_log_t v1;

  sub_100043B10();
  sub_100043AFC((void *)&_mh_execute_header, v0, v1, "Could not delete FMIP account notbackedup file (%@): %@");
  sub_1000075B0();
}

void sub_1002289D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "Removing old FMIP accounts notbackedup file", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100228A04()
{
  uint64_t v0;
  os_log_t v1;

  sub_100043B10();
  sub_100043AFC((void *)&_mh_execute_header, v0, v1, "Could not delete FMIP account backedup file (%@): %@");
  sub_1000075B0();
}

void sub_100228A64()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "Removing old FMIP accounts backedup file", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100228A90()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Unable to save data %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100228AF0(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "description"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v2, v3, "Storing not-backedup FMIP account dict to file: %@", v4, v5, v6, v7, v8);

  sub_10000B4AC();
}

void sub_100228B68(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "description"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v2, v3, "Storing backedup FMIP account dict to file: %@", v4, v5, v6, v7, v8);

  sub_10000B4AC();
}

void sub_100228BE0(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "No error evaluating the trust policies, but pinning was not successful either.", v1, 2u);
}

void sub_100228C20(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Configuring IDS Manager", v1, 2u);
}

void sub_100228C60(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Could not get ephemeral token for repair device: %@.", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100228CC4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Could not find paired device with UDID %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100228D28(void *a1, NSObject *a2)
{
  id v4;
  void *v5;
  int v6;
  id v7;
  __int16 v8;
  void *v9;

  v4 = objc_msgSend(a1, "httpResponseStatus");
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "httpResponseError"));
  v6 = 134218242;
  v7 = v4;
  v8 = 2112;
  v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error %ld trying to turn off Find My iPhone: %@", (uint8_t *)&v6, 0x16u);

}

void sub_100228DE0(char a1, NSObject *a2)
{
  const __CFString *v2;
  int v3;
  const __CFString *v4;

  v2 = CFSTR("NO");
  if ((a1 & 1) != 0)
    v2 = CFSTR("YES");
  v3 = 138412290;
  v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "prefsAppBackgrounded = %@", (uint8_t *)&v3, 0xCu);
  sub_1000075B0();
}

void sub_100228E68(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  sub_10004F4D8();
  sub_10004F4C4((void *)&_mh_execute_header, v2, v3, "%@ Serializing error for request body : %@", v4, v5, v6, v7, v8);

  sub_100003914();
}

void sub_100228EEC(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  sub_10004F4D8();
  sub_10004F4C4((void *)&_mh_execute_header, v2, v3, "%@ Error serializing into JSON : %@", v4, v5, v6, v7, v8);

  sub_100003914();
}

void sub_100228F70(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v4 = 138412290;
  v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@ serialization yielded NULL body data", (uint8_t *)&v4, 0xCu);

}

void sub_100229008()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "Nil object for key: %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100229068()
{
  NSObject *v0;
  uint8_t v1[24];

  sub_100043B10();
  sub_1000510C4((void *)&_mh_execute_header, v0, (uint64_t)v0, "encodeObject:%@ forKey:%@", v1);
  sub_1000075B0();
}

void sub_1002290D0()
{
  NSObject *v0;
  uint8_t v1[24];

  sub_100043B10();
  sub_1000510C4((void *)&_mh_execute_header, v0, (uint64_t)v0, "encodeObjects:%@ forKey:%@", v1);
  sub_1000075B0();
}

void sub_100229138(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "object is a codable collection", a5, a6, a7, a8, 0);
}

void sub_10022916C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "object is a codable", a5, a6, a7, a8, 0);
}

void sub_1002291A0(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  int v7;
  void *v8;
  __int16 v9;
  void *v10;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "container"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "stack"));
  v7 = 138412546;
  v8 = v4;
  v9 = 2112;
  v10 = v5;
  sub_1000510C4((void *)&_mh_execute_header, a2, v6, "processObject container:%@ stack:%@", (uint8_t *)&v7);

}

void sub_100229258()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "encodeCollectionObject:%@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_1002292B8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "encodeArrayCollectionObject:%@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100229318()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_1000189B0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Error while encoding: %@", v1, 0xCu);
  sub_1000075B0();
}

void sub_100229384(void *a1, NSObject *a2)
{
  id v4;
  void *v5;
  int v6;
  id v7;
  __int16 v8;
  void *v9;

  v4 = objc_msgSend(a1, "httpResponseStatus");
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "httpResponseError"));
  v6 = 134218242;
  v7 = v4;
  v8 = 2112;
  v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error %ld trying to unregister accessories : %@", (uint8_t *)&v6, 0x16u);

}

void sub_10022943C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "No command handler found for commandType: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1002294B0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "#ext Unable to get connection to extension %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100229514()
{
  __int16 v0;
  uint64_t v1;
  os_log_t v2;
  uint8_t v3[22];
  __int16 v4;
  uint64_t v5;

  sub_100056050();
  v4 = v0;
  v5 = v1;
  _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "remoteObjectProxy on connection %p for extension id %@ failed with error = %@", v3, 0x20u);
}

void sub_100229594(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "#ext beginExtensionRequestWithOptions failed with error  %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_1002295F8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "#ext Extension with id = %@ not found", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022965C()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_100056050();
  sub_100041B48((void *)&_mh_execute_header, v0, v1, "XPC connection interrupted for identifier %@ and  connection = %@", v2);
  sub_1000075B0();
}

void sub_1002296C4()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_100056050();
  sub_100041B48((void *)&_mh_execute_header, v0, v1, "XPC connection invalidated for identifier %@ and conection = %@", v2);
  sub_1000075B0();
}

void sub_10022972C()
{
  NSObject *v0;
  uint8_t v1[24];

  sub_100043B10();
  sub_100041B48((void *)&_mh_execute_header, v0, (uint64_t)v0, "Unsupported feature flavor combination %@__%@", v1);
  sub_1000075B0();
}

void sub_100229794()
{
  NSObject *v0;
  uint8_t v1[24];

  sub_100043B10();
  sub_100041B48((void *)&_mh_execute_header, v0, (uint64_t)v0, "Unable to get remoteObjectProxy for %@ %@", v1);
  sub_1000075B0();
}

void sub_1002297FC(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "There was no error evaluating the trust policies, but pinning was not successful either.", v1, 2u);
}

void sub_10022983C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "FMDBluetoothManager the BluetoothManager is not available.", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100229868(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BluetoothManager.pairedDevices unexpected object type %@", (uint8_t *)&v2, 0xCu);
}

void sub_1002298DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "BluetoothMagicPairedDeviceNameChangedNotification unexpected object type", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100229908()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "BluetoothDeviceConnectSuccessNotification unexpected object type", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100229934()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "BluetoothDeviceDisconnectSuccessNotification unexpected object type", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_100229960(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "audioChannelInfo"));
  v4 = 138412290;
  v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "FMDBluetoothAccessory setting channels %@", (uint8_t *)&v4, 0xCu);

}

void sub_1002299F4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "For devices with extension this method is not fully supported", a5, a6, a7, a8, 0);
}

void sub_100229A28(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "Comparing two different accessories", a5, a6, a7, a8, 0);
}

void sub_100229A5C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDAccessoryRegistry initialized", v1, 2u);
}

void sub_100229A9C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001C928((void *)&_mh_execute_header, a2, a3, "FMDAccessoryRegistry registerDelegate %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100229B04(void *a1, NSObject *a2)
{
  uint64_t v3;
  int v4;
  void *v5;
  __int16 v6;
  id v7;

  v4 = 138412546;
  v5 = a1;
  v6 = 2048;
  v7 = objc_msgSend(a1, "code");
  sub_100041B48((void *)&_mh_execute_header, a2, v3, "Could not delete accessory registry %@ %li", (uint8_t *)&v4);
}

void sub_100229B94(uint64_t a1, NSObject *a2, uint64_t a3, double a4)
{
  uint64_t v4;
  int v5;
  double v6;
  __int16 v7;
  uint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = 134218242;
  v6 = a4;
  v7 = 2112;
  v8 = v4;
  sub_100041B48((void *)&_mh_execute_header, a2, a3, "FMDAccessoryRegistry timeout / error waiting for dataSources. Retrying in %f %@", (uint8_t *)&v5);
  sub_1000075B0();
}

void sub_100229C10(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDAccessoryRegistry no identifier given", v1, 2u);
}

void sub_100229C50()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "FMDAccessoryRegistry no identifier for accessory %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100229CB0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not read accessory registry from disk %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100229D10()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "setting lastStatusUpdateTime to %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_100229D70(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "got lostModeInfoVersion = %@ accessoriesInLostMode = %@", (uint8_t *)&v3, 0x16u);
}

void sub_100229DF4(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "commandParams"));
  v4 = 138412290;
  v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "got commandParams = %@", (uint8_t *)&v4, 0xCu);

}

void sub_100229E88(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 8) + 40);
  v5 = 138412546;
  v6 = v3;
  v7 = 2112;
  v8 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Fetching protected context %@ : %@", (uint8_t *)&v5, 0x16u);
  sub_1000075B0();
}

void sub_100229F18(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001C928((void *)&_mh_execute_header, a2, a3, "Removing all protected contexts for key %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100229F80(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001C928((void *)&_mh_execute_header, a2, a3, "Deleted protected context file %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_100229FE4(uint64_t a1, int a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  int v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 1024;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error fetching %@: %d", (uint8_t *)&v3, 0x12u);
}

void sub_10022A068(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10006EDF0((void *)&_mh_execute_header, a2, a3, "Unlock state is %i", a5, a6, a7, a8, 0);
}

void sub_10022A0D0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10006EDF0((void *)&_mh_execute_header, a2, a3, "Unlock since boot state is %i", a5, a6, a7, a8, 0);
}

void sub_10022A138(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Could not obtain the last modified date of PSC.sui %@ %@", (uint8_t *)&v3, 0x16u);
}

void sub_10022A1BC(void *a1, void *a2, NSObject *a3)
{
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  void *v9;
  __int16 v10;
  id v11;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "url"));
  v6 = 138412802;
  v7 = v5;
  v8 = 2112;
  v9 = a2;
  v10 = 2048;
  v11 = objc_msgSend(a2, "code");
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could Not read file %@ %@ %li", (uint8_t *)&v6, 0x20u);

}

void sub_10022A27C(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138412290;
  v4 = a1;
  sub_10002A350((void *)&_mh_execute_header, a2, a3, "Error creating OTControl object: %@", (uint8_t *)&v3);
}

void sub_10022A2E8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "OT status does not have a self", a5, a6, a7, a8, 0);
}

void sub_10022A31C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "OTStatus: success", a5, a6, a7, a8, 0);
}

void sub_10022A350(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  void *v15;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "objectForKeyedSubscript:", CFSTR("contextDump")));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("self")));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("peerID")));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "objectForKeyedSubscript:", CFSTR("contextDump")));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("self")));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("dynamicInfo")));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("included")));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "componentsJoinedByString:", CFSTR(",")));
  v12 = 138412546;
  v13 = v6;
  v14 = 2112;
  v15 = v11;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "OT status self is not included in the peer list - selfID : %@, peerIDs: %@", (uint8_t *)&v12, 0x16u);

}

void sub_10022A4C8(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5;
  void *v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "objectForKeyedSubscript:", CFSTR("state")));
  v5 = 138412290;
  v6 = v3;
  sub_10002A350((void *)&_mh_execute_header, a2, v4, "OT status is not 'ready': %@", (uint8_t *)&v5);

}

void sub_10022A55C(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138412290;
  v4 = a1;
  sub_10002A350((void *)&_mh_execute_header, a2, a3, "OTControl status fetch error: %@", (uint8_t *)&v3);
}

void sub_10022A5C8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "%@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022A638(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "%@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022A6A8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "%@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022A718()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "%@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022A778()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "disableLostMode called even though the keybag is still locked. Ignoring this command. Lost mode stays active", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022A7A4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "disableLostMode called while device is in managed lost mode. Ignoring this command. Lost mode stays active", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022A7D0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not find paired device with UDID %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022A830(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "%@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022A8A0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "%@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022A910()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Faild to serialize device identifiers %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022A970()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "signatureHeadersWithData : Absinth signing failed", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022A99C(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "name"));
  sub_1000189B0();
  sub_10002A350((void *)&_mh_execute_header, a2, v4, "Accessory %@ does not support setPhoneNumber operation", v5);

  sub_10000B4AC();
}

void sub_10022AA1C()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_1000189B0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "scd flavor = %@", v1, 0xCu);
  sub_1000075B0();
}

void sub_10022AA88()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_10002A36C((void *)&_mh_execute_header, v0, v1, "requireDisableLocationWithCompletion could not find provider.", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022AAB4(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "localizedDescription"));
  sub_1000189B0();
  sub_10002A350((void *)&_mh_execute_header, a2, v4, "requireDisableLocationWithCompletion finished with error %@.", v5);

  sub_10000B4AC();
}

void sub_10022AB34(char a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1 & 1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "retry XPC activity triggered. Updating to done so that it can be cleaned. success : %d", (uint8_t *)v2, 8u);
  sub_1000075B8();
}

void sub_10022ABA8(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 134218240;
  v4 = a2;
  v5 = 2048;
  v6 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "retry XPC activity XPC activity changed to state %ld with criteria %p", (uint8_t *)&v3, 0x16u);
  sub_1000075B0();
}

void sub_10022AC28(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v2, v3, "%@ deallocating...", v4, v5, v6, v7, v8);

  sub_10000B4AC();
}

void sub_10022ACA0()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_1000189B0();
  sub_10007CF8C((void *)&_mh_execute_header, v0, v1, "Tracked locations cache URL %@", v2);
  sub_1000075B0();
}

void sub_10022AD04()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_10002A388();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "Could not find a Library directory", v1, 2u);
  sub_1000075B8();
}

void sub_10022AD3C(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "description"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v2, v3, "Read the following tracked locations from persistent cache:  %@", v4, v5, v6, v7, v8);

  sub_10000B4AC();
}

void sub_10022ADB4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  objc_msgSend(a1, "count");
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v1, v2, "Read %ld tracked locations from persistent cache", v3, v4, v5, v6, v7);
  sub_10000B4AC();
}

void sub_10022AE20()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not read tracked locations from disk %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022AE80(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v2, v3, "Removing tracked locations file for %@", v4, v5, v6, v7, v8);

  sub_10000B4AC();
}

void sub_10022AEF8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "No tracked locations. Not setting up a location purge timer now", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022AF24()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "There seem to be some locations already eligible for purge. Scheduling a purge onto the queue", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022AF50()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_1000189B0();
  sub_10007CF8C((void *)&_mh_execute_header, v0, v1, "Scheduling the location purge timer to next fire at %@", v2);
  sub_1000075B0();
}

void sub_10022AFB4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "Rescheduling location purge timer", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022AFE0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002A388();
  sub_1000075A0((void *)&_mh_execute_header, v0, v1, "Checking for old tracked locations", v2, v3, v4, v5, v6);
  sub_1000075B8();
}

void sub_10022B00C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t v9;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fileURL"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "lastPathComponent"));
  sub_1000189B0();
  sub_10004F4C4((void *)&_mh_execute_header, v3, v4, "Error excluding %@ from backup %@", v5, v6, v7, v8, v9);

}

void sub_10022B0B4(void *a1, char a2, NSObject *a3)
{
  int v5;
  void *v6;
  __int16 v7;
  id v8;
  __int16 v9;
  int v10;

  v5 = 138412802;
  v6 = a1;
  v7 = 2048;
  v8 = objc_msgSend(a1, "code");
  v9 = 1024;
  v10 = a2 & 1;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could not copy the downloaded file %@ %li (%i)", (uint8_t *)&v5, 0x1Cu);
}

void sub_10022B168(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(a1, "code");
  sub_10004F4C4((void *)&_mh_execute_header, v1, v2, "Could not delete asset registry %@ %li", v3, v4, v5, v6, 2u);
}

void sub_10022B1F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not read asset from disk %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022B250(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to fetch accessory from %@ with error %@", (uint8_t *)&v4, 0x16u);
}

void sub_10022B2D8(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 134217984;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Counld not get the color, timeout error %ld", (uint8_t *)&v2, 0xCu);
}

void sub_10022B34C(void *a1, NSObject *a2)
{
  int v3;
  void *v4;
  __int16 v5;
  id v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2048;
  v6 = objc_msgSend(a1, "code");
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not delete accessory location store %@ %li", (uint8_t *)&v3, 0x16u);
  sub_10000B4AC();
}

void sub_10022B3DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "AccessoryLocationStore ERROR : deleting orphaned record %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022B43C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not read accessory locations from disk %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022B49C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDAccessoryLocationStore deactivating janitor", v1, 2u);
}

void sub_10022B4DC()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_1000189B0();
  sub_10007CF8C((void *)&_mh_execute_header, v0, v1, "FMDAccessoryLocationStore scheduling janitor %@", v2);
  sub_1000075B0();
}

void sub_10022B540(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDAccessoryLocationStore invalid cleanup date specified.", v1, 2u);
}

void sub_10022B580(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "nextScheduledJanitorDate"));
  sub_1000189B0();
  sub_10007CF8C((void *)&_mh_execute_header, a2, v4, "FMDAccessoryLocationStore janitor already scheduled %@", v5);

  sub_10000B4AC();
}

void sub_10022B600(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDEventLoggerFacilityOnDisk Unable to write %@", (uint8_t *)&v2, 0xCu);
}

void sub_10022B674(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Wrinting events to disk %@", (uint8_t *)&v2, 0xCu);
}

void sub_10022B6E8(os_log_t log)
{
  _DWORD v1[2];

  v1[0] = 67109120;
  v1[1] = byte_100306850;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDAutomationDeviceIdentity: isAutomationActive: %d", (uint8_t *)v1, 8u);
  sub_1000075B8();
}

void sub_10022B764(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "Mock device identity class found. Try to create the mock device identity proxy.", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_10022B794(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "Mock device identity not enabled. Getting real device identity proxy.", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_10022B7C4(uint64_t a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[FMDSecureLocationInfo stringFromPublishReason:](FMDSecureLocationInfo, "stringFromPublishReason:", a1));
  v4 = 138412290;
  v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "SecureLocationMonitor - didUpdateLocations from %@", (uint8_t *)&v4, 0xCu);

}

void sub_10022B864(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "locationManager didFailWithError %@", (uint8_t *)&v2, 0xCu);
}

void sub_10022B8D8(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "SecureLocationMonitor: Tried to defer activity, but failed", v1, 2u);
}

void sub_10022B918()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10008DE94();
  sub_10008DE84((void *)&_mh_execute_header, v0, v1, "%@ Error reading config data %@", v2, v3, v4, v5, 2u);
  sub_1000075B0();
}

void sub_10022B984(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "%@ _archiveConfigFile unable to convert config data to dictionary!", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022B9F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10008DE94();
  sub_10008DE84((void *)&_mh_execute_header, v0, v1, "%@ Error saving config data err %@", v2, v3, v4, v5, 2u);
  sub_1000075B0();
}

void sub_10022BA60()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10008DE94();
  sub_10008DE84((void *)&_mh_execute_header, v0, v1, "%@ Error parsing config JSON %@", v2, v3, v4, v5, 2u);
  sub_1000075B0();
}

void sub_10022BACC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "%@ Error parsing config JSON", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022BB3C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "%@ No active policy to remove!", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022BBAC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "%@ Cannot remove FMDSecureLocationContext without mode and findmyId!", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022BC1C(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(_QWORD *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to open %@", buf, 0xCu);

}

void sub_10022BC70(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "directoryURL"));
  v6 = 138412546;
  v7 = v5;
  v8 = 2112;
  v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Error while trying to read the contents of directory %@: %@", (uint8_t *)&v6, 0x16u);

}

void sub_10022BD1C(id *a1, NSObject *a2)
{
  void *v3;
  void *v4;
  int v5;
  void *v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*a1, "standardLocator"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fm_logID"));
  v5 = 138412290;
  v6 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Removing standard locator %@", (uint8_t *)&v5, 0xCu);

}

void sub_10022BDCC(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Publishing location now", v1, 2u);
}

void sub_10022BE0C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "FMDBluetoothDiscovery Scanning timer fired.", a5, a6, a7, a8, 0);
}

void sub_10022BE40(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "FMDBluetoothDiscoveryCoordinator discovery terminating - no active tokens", a5, a6, a7, a8, 0);
}

void sub_10022BE74(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not load notification manager from disk %@", (uint8_t *)&v2, 0xCu);
}

void sub_10022BEE8(void *a1, NSObject *a2)
{
  int v4;
  id v5;
  __int16 v6;
  void *v7;

  v4 = 134218242;
  v5 = objc_msgSend(a1, "count");
  v6 = 2112;
  v7 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDAccessorySerialNumbers invalid info. Count: %lu, Values: %@", (uint8_t *)&v4, 0x16u);
}

void sub_10022BF80()
{
  uint64_t v0;
  os_log_t v1;

  sub_10009946C();
  sub_100099458((void *)&_mh_execute_header, v0, v1, "Now disabling the old assertion %@ with ID 0x%x");
  sub_1000075B0();
}

void sub_10022BFE0(uint64_t a1, _DWORD *a2, NSObject *a3)
{
  _BYTE v3[18];

  *(_DWORD *)v3 = 138412546;
  *(_QWORD *)&v3[4] = a1;
  *(_WORD *)&v3[12] = 1024;
  *(_DWORD *)&v3[14] = *a2;
  sub_100099458((void *)&_mh_execute_header, (uint64_t)a2, a3, "Successfully created assertion %@ with ID 0x%x", *(_QWORD *)v3, *(_QWORD *)&v3[8], *(_WORD *)&v3[16]);
  sub_1000075B0();
}

void sub_10022C054()
{
  uint64_t v0;
  os_log_t v1;

  sub_10009946C();
  sub_100099458((void *)&_mh_execute_header, v0, v1, "Found existing assertion named %@ with ID 0x%x - will disable it after getting the new one");
  sub_1000075B0();
}

void sub_10022C0B4()
{
  uint64_t v0;
  os_log_t v1;

  sub_10009946C();
  sub_100099458((void *)&_mh_execute_header, v0, v1, "Successfully released power assertion %@ with ID 0x%x");
  sub_1000075B0();
}

void sub_10022C114()
{
  uint64_t v0;
  os_log_t v1;

  sub_10009946C();
  sub_100099458((void *)&_mh_execute_header, v0, v1, "Disable power assertion with name: %@ and ID 0x%x");
  sub_1000075B0();
}

void sub_10022C174(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v4 = 138412290;
  v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%@: successful - wiping now!", (uint8_t *)&v4, 0xCu);

}

void sub_10022C208(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "#PARSING invalid or no pattern in maskInfo %@", a5, a6, a7, a8, 2u);
}

void sub_10022C270(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "#PARSING invalid or no mask in maskInfo %@", a5, a6, a7, a8, 2u);
}

void sub_10022C2D8(void *a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t v11;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "username"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "username"));
  sub_1000A2D6C();
  sub_10004F4C4((void *)&_mh_execute_header, v5, v6, "Account %@ being switched with account %@ using updateAccount without an unregister", v7, v8, v9, v10, v11);

  sub_100003914();
}

void sub_10022C36C(void *a1, NSObject *a2)
{
  void *v3;
  uint8_t v4[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "username"));
  sub_1000189B0();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Trying to remove account %@ when findmydeviced has no previous record of it", v4, 0xCu);

}

void sub_10022C3FC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "username"));
  sub_10004F4C4((void *)&_mh_execute_header, v2, v3, "Error removing account: %@ with error: %@", v4, v5, v6, v7, 2u);

  sub_100003914();
}

void sub_10022C490(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "AppleIDSecurityLevel is Unknown. Returning error", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_10022C4C0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "accountSecurityLevel - failed to get altDSID", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_10022C4F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "Showing alert : %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022C550(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  uint8_t v6[24];

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "alertFromServerResponse"));
  sub_1000A2D6C();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%@ Found alert : %@", v6, 0x16u);

  sub_100003914();
}

void sub_10022C5F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "accessoryDidUpdate: %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022C654()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_10001C928((void *)&_mh_execute_header, v0, v1, "Asking the supportedAccessoryRegistry whether we support %@.", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022C6B4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "Received a non-secureLocations push but we don't have a FMIP account. Ignoring", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_10022C6E4()
{
  uint64_t v0;
  os_log_t v1;

  sub_100043B10();
  sub_1000A2D58((void *)&_mh_execute_header, v0, v1, "Ignoring duplicate old style intent of type %@ with command id %@");
  sub_1000075B0();
}

void sub_10022C744(int a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "CLLocation+FMGeoLocatable unhandled location type %i", (uint8_t *)v2, 8u);
}

void sub_10022C7B8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "FMDCipherKeychainItemAdaptor failed to read data. Error - %@", a5, a6, a7, a8, 2u);
}

void sub_10022C820(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "FMDCipherKeychainItemAdaptor failed to archive data. Error - %@", a5, a6, a7, a8, 2u);
}

void sub_10022C888(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Logger Session became invalid %@", (uint8_t *)&v2, 0xCu);
}

void sub_10022C8FC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "SecureLocationPublisher: shouldPublish is false. lastPublished %@", (uint8_t *)&v2, 0xCu);
}

void sub_10022C970(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "SecureLocationPublisher: new location does not meet publish criteria", v1, 2u);
}

void sub_10022C9B0(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "SecureLocationPublisher: must call startPublishingWithBlock: before updating locations", v1, 2u);
}

void sub_10022C9F0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "Error creating CKKSControl object : %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022CA54(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "CKKSControl status - No Manatee status found", v1, 2u);
}

void sub_10022CA94(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "CKKSStatus d2dEnc is not available. Tracker : %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022CAF8(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  void *v11;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "objectAtIndexedSubscript:", 1));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("keystate")));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "objectAtIndexedSubscript:", 1));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("keyStateError")));
  v8 = 138412546;
  v9 = v5;
  v10 = 2112;
  v11 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "CKKSStatus bad key state. KeyState: %@. Error: %@", (uint8_t *)&v8, 0x16u);

}

void sub_10022CBF8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "CKKSControl status fetch error: %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022CC5C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "FMDBluetoothDiscoveryXPCProxy service terminated with error : %li", a5, a6, a7, a8, 0);
}

void sub_10022CCC4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "FMDBluetoothDiscoveryXPCProxy didEndDiscoveryWithError : %@", a5, a6, a7, a8, 2u);
}

void sub_10022CD2C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Cannot disable biometry - (Missing Framework)", v1, 2u);
}

void sub_10022CD6C(void *a1, uint64_t a2, NSObject *a3, void *a4)
{
  *(_DWORD *)a2 = 138412290;
  *(_QWORD *)(a2 + 4) = a1;
  sub_10007CF8C((void *)&_mh_execute_header, a3, (uint64_t)a3, "Started SLC refinement using %@", (uint8_t *)a2);

}

void sub_10022CDC0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "SLC location had a very bad accuracy. Starting off a regular location cycle to refine the SLC location...", a5, a6, a7, a8, 0);
}

void sub_10022CDF4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000075A0((void *)&_mh_execute_header, a1, a3, "Received SLC, but already have a previous locate cycle for tracked locations in-progress. So, ignoring this SLC", a5, a6, a7, a8, 0);
}

void sub_10022CE28(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "description"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v2, v3, "Received SLC location %@", v4, v5, v6, v7, v8);

  sub_10000B4AC();
}

void sub_10022CEA4()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_1000189B0();
  sub_10007CF8C((void *)&_mh_execute_header, v0, v1, "BUG: Received SLC location for %@ tracking when locator was not supposed to be running. Stopping locator now", v2);
}

void sub_10022CF0C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t v9;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "locator"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "fm_logID"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v3, v4, "Obtained final location for SLC refinement using %@", v5, v6, v7, v8, v9);

  sub_100003914();
}

void sub_10022CF98(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t v9;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "locator"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "fm_logID"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v3, v4, "Stopped SLC refinement using %@", v5, v6, v7, v8, v9);

  sub_100003914();
}

void sub_10022D024()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_1000189B0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "SLC Location update failed with error: %@.", v1, 0xCu);
}

void sub_10022D094(void *a1, uint64_t a2, NSObject *a3, void *a4)
{
  *(_DWORD *)a2 = 138412290;
  *(_QWORD *)(a2 + 4) = a1;
  sub_10007CF8C((void *)&_mh_execute_header, a3, (uint64_t)a3, "Started SLC fallback using %@", (uint8_t *)a2);

}

void sub_10022D0E8(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t v9;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "locator"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "fm_logID"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v3, v4, "Obtained final location for SLC fallback using %@", v5, v6, v7, v8, v9);

  sub_100003914();
}

void sub_10022D174(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t v9;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "locator"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "fm_logID"));
  sub_1000189B0();
  sub_10003D208((void *)&_mh_execute_header, v3, v4, "Stopped SLC fallback using %@", v5, v6, v7, v8, v9);

  sub_100003914();
}

void sub_10022D200(uint64_t a1, NSObject *a2)
{
  id v3;
  void *v4;
  uint8_t v5[24];

  v3 = objc_msgSend((id)objc_opt_class(a1, a2), "defaultStorageLocation");
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  sub_1000189B0();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "read magSafe data store from %@", v5, 0xCu);

}

void sub_10022D294()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not read magSafe accessories list from disk %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022D2F4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a1, a3, "trying to udpate key roll time for non exisiting accessory %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022D35C(id *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*a1, "audioChannelInfo"));
  v4 = 138412290;
  v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "FMDBluetoothAccessory setting channels %@", (uint8_t *)&v4, 0xCu);

}

void sub_10022D3F4(void *a1, void *a2, NSObject *a3)
{
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v6 = objc_msgSend(a2, "locationType");
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "horizontalAccuracy"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "latitude"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "longitude"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "timestamp"));
  v11 = 138413571;
  v12 = v5;
  v13 = 2048;
  v14 = v6;
  v15 = 2113;
  v16 = v7;
  v17 = 2113;
  v18 = v8;
  v19 = 2113;
  v20 = v9;
  v21 = 2112;
  v22 = v10;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "%@ Received location with Position Type = (%ld), Accuracy = %{private}@, Latitude = %{private}@, Longitude = %{private}@, Timestamp = %@", (uint8_t *)&v11, 0x3Eu);

}

void sub_10022D538(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDConservativeLocatorPublisher must call startPublishingWithBlock: before updating locations", v1, 2u);
}

void sub_10022D578(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "Provider not found, cancelling AL falire reporting request", a5, a6, a7, a8, 0);
}

void sub_10022D5AC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "Account not found, cancelling AL falire reporting request", a5, a6, a7, a8, 0);
}

void sub_10022D5E0(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Encountered a serializing error for the volatile device info : %@", (uint8_t *)&v2, 0xCu);
}

void sub_10022D654(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "fm_logID"));
  v6 = 138412546;
  v7 = v5;
  v8 = 2112;
  v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Error serializing volatile device info into JSON for %@ : %@", (uint8_t *)&v6, 0x16u);

}

void sub_10022D700()
{
  uint64_t v0;
  os_log_t v1;

  sub_100043B10();
  sub_1000A2D58((void *)&_mh_execute_header, v0, v1, "decodeObjectOfClass:%@ forKey:%@");
  sub_1000075B0();
}

void sub_10022D760()
{
  uint64_t v0;
  os_log_t v1;

  sub_100043B10();
  sub_1000A2D58((void *)&_mh_execute_header, v0, v1, "decodeObjectOfProtocols:%@ forKey:%@");
  sub_1000075B0();
}

void sub_10022D7C0()
{
  uint64_t v0;
  os_log_t v1;

  sub_100043B10();
  sub_1000A2D58((void *)&_mh_execute_header, v0, v1, "decodeObjectUsingFactories:%@ forKey:%@");
  sub_1000075B0();
}

void sub_10022D820()
{
  uint64_t v0;
  os_log_t v1;

  sub_100043B10();
  sub_1000A2D58((void *)&_mh_execute_header, v0, v1, "isValidObject:%@ usingProtocols:%@");
  sub_1000075B0();
}

void sub_10022D880(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  void *v9;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "container"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "stack"));
  v6 = 138412546;
  v7 = v4;
  v8 = 2112;
  v9 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "container:%@ stack:%@ ", (uint8_t *)&v6, 0x16u);

}

void sub_10022D940()
{
  uint64_t v0;
  os_log_t v1;

  sub_100043B10();
  sub_1000A2D58((void *)&_mh_execute_header, v0, v1, "decodeArrayCollection:%@ usingFactory:%@");
  sub_1000075B0();
}

void sub_10022D9A0(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error while encoding: %@", (uint8_t *)&v2, 0xCu);
  sub_1000075B0();
}

void sub_10022DA10(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Background requests cannot be cancelled by ID.", v1, 2u);
}

void sub_10022DA50()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_1000189B0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "FMDUnregisterTokenStore no unregister token: %@", v1, 0xCu);
  sub_1000075B0();
}

void sub_10022DABC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "FMDUnregisterTokenStore failed to convert string to data %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022DB1C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "FMDUnregisterTokenStore timeout decrypting unregister token %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022DB7C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "FMDUnregisterTokenStore failed to decrypt token %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022DBDC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004044((void *)&_mh_execute_header, a2, a3, "FMDUnregisterTokenStore could not save cipher for %@", a5, a6, a7, a8, 2u);
  sub_1000075B0();
}

void sub_10022DC44(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDUnregisterTokenStore reading expiry date failed (device locked).", v1, 2u);
  sub_1000075B8();
}

void sub_10022DC80(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "FMDUnregisterTokenStore Invalid token. No expiry date found.", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_10022DCB0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002A36C((void *)&_mh_execute_header, a1, a3, "FMDUnregisterTokenStore removeKeychainItemForKey : nil key given", a5, a6, a7, a8, 0);
  sub_1000075B8();
}

void sub_10022DCE0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "FMDUnregisterTokenStore could not delete keychain item for key %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022DD40(void *a1, NSObject *a2)
{
  int v3;
  void *v4;
  __int16 v5;
  id v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2048;
  v6 = objc_msgSend(a1, "code");
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not delete supported accessory registry %@ %li", (uint8_t *)&v3, 0x16u);
}

void sub_10022DDD8(void *a1, NSObject *a2)
{
  void *v4;
  int v5;
  void *v6;
  __int16 v7;
  void *v8;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "supportedAccessory"));
  v5 = 138412546;
  v6 = a1;
  v7 = 2112;
  v8 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "supportedAccessory %@ %@", (uint8_t *)&v5, 0x16u);

}

void sub_10022DE84()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000189B0();
  sub_100004044((void *)&_mh_execute_header, v0, v1, "Could not read supported accessories registry from disk %@", v2, v3, v4, v5, v6);
  sub_1000075B0();
}

void sub_10022DEE4()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignatureV4 writeTo:]", "FMDNanoSupportProtoNeedSignatureV4.m", 87, "nil != self->_requestJsonData");
}

void sub_10022DF0C()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignatureV5 writeTo:]", "FMDNanoSupportProtoNeedSignatureV5.m", 87, "nil != self->_requestJsonData");
}

void sub_10022DF34()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignature writeTo:]", "FMDNanoSupportProtoNeedSignature.m", 105, "nil != self->_dsid");
}

void sub_10022DF5C()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignature writeTo:]", "FMDNanoSupportProtoNeedSignature.m", 110, "nil != self->_udid");
}

void sub_10022DF84()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignature writeTo:]", "FMDNanoSupportProtoNeedSignature.m", 115, "nil != self->_serialNumber");
}

void sub_10022DFAC()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignature writeTo:]", "FMDNanoSupportProtoNeedSignature.m", 120, "nil != self->_productType");
}

void sub_10022DFD4()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignatureV3 writeTo:]", "FMDNanoSupportProtoNeedSignatureV3.m", 87, "nil != self->_requestJsonData");
}

id objc_msgSend_CKKSControlObject_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CKKSControlObject:error:");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLByDeletingLastPathComponent");
}

id objc_msgSend_URLByReplacingHost_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLByReplacingHost:");
}

id objc_msgSend_URLSession_didBecomeInvalidWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLSession:didBecomeInvalidWithError:");
}

id objc_msgSend_URLSession_didReceiveChallenge_completionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLSession:didReceiveChallenge:completionHandler:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UUIDString");
}

id objc_msgSend__abortWipe(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_abortWipe");
}

id objc_msgSend__accessoryConfigurationDeviceInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessoryConfigurationDeviceInfo");
}

id objc_msgSend__accountFromBackedUpDictionary_andNotBackedUpDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accountFromBackedUpDictionary:andNotBackedUpDictionary:");
}

id objc_msgSend__accountSecurityLevel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accountSecurityLevel");
}

id objc_msgSend__ackWipeCommand_withStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_ackWipeCommand:withStatus:");
}

id objc_msgSend__actionStateString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_actionStateString");
}

id objc_msgSend__addAccessory_previouslyPaired_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_addAccessory:previouslyPaired:");
}

id objc_msgSend__addContext_withExpiration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_addContext:withExpiration:");
}

id objc_msgSend__addLocalizedStrings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_addLocalizedStrings:");
}

id objc_msgSend__addOctagonStatusToDict_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_addOctagonStatusToDict:");
}

id objc_msgSend__allAccessories(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_allAccessories");
}

id objc_msgSend__allowedExtensionsIDForDataSource(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_allowedExtensionsIDForDataSource");
}

id objc_msgSend__archiveConfigFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_archiveConfigFile:");
}

id objc_msgSend__auxiliaryConnection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_auxiliaryConnection");
}

id objc_msgSend__backedUpDictionaryFromAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_backedUpDictionaryFromAccount:");
}

id objc_msgSend__beginXPCTransactionForRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_beginXPCTransactionForRequest:");
}

id objc_msgSend__bluetoothManagerDeviceForBluetoothDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_bluetoothManagerDeviceForBluetoothDevice:");
}

id objc_msgSend__BOOLGestaltQueryForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_BOOLGestaltQueryForKey:");
}

id objc_msgSend__cacheLocalState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_cacheLocalState");
}

id objc_msgSend__calculateSignatureForBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_calculateSignatureForBody:");
}

id objc_msgSend__canSendDeviceIdentityNow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_canSendDeviceIdentityNow");
}

id objc_msgSend__cancelPublishTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_cancelPublishTimer");
}

id objc_msgSend__checkForBuddyCompletionAndReinitialize_withBuddyStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_checkForBuddyCompletionAndReinitialize:withBuddyStatus:");
}

id objc_msgSend__checkOSVersionHistoryUsingBackedUpVersion_nonBackedUpVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_checkOSVersionHistoryUsingBackedUpVersion:nonBackedUpVersion:");
}

id objc_msgSend__clLocationAccuracyFromConfigValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_clLocationAccuracyFromConfigValue:");
}

id objc_msgSend__cleanupFMIPPreferences(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_cleanupFMIPPreferences");
}

id objc_msgSend__clearAllInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_clearAllInfo");
}

id objc_msgSend__clearQCPendingEpoch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_clearQCPendingEpoch");
}

id objc_msgSend__commandHandlers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_commandHandlers");
}

id objc_msgSend__completeLocate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_completeLocate");
}

id objc_msgSend__computehash_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_computehash:");
}

id objc_msgSend__consecutiveRetryCountForType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_consecutiveRetryCountForType:");
}

id objc_msgSend__constructPairedDevicesInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_constructPairedDevicesInfo");
}

id objc_msgSend__copyHandlerForCommand_params_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_copyHandlerForCommand:params:");
}

id objc_msgSend__createLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_createLocationManager");
}

id objc_msgSend__createLocationManagerForStewie(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_createLocationManagerForStewie");
}

id objc_msgSend__createLocationManagerWithQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_createLocationManagerWithQueue:");
}

id objc_msgSend__currentFMDFMIPAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_currentFMDFMIPAccount");
}

id objc_msgSend__decayedWaitIntervalForRetryCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_decayedWaitIntervalForRetryCount:");
}

id objc_msgSend__defaultClassTypeMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_defaultClassTypeMap");
}

id objc_msgSend__defaultObjectTypeKeys(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_defaultObjectTypeKeys");
}

id objc_msgSend__descriptionForEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_descriptionForEvent:");
}

id objc_msgSend__destroySession(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_destroySession");
}

id objc_msgSend__deviceIdentifiersForSignature(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_deviceIdentifiersForSignature");
}

id objc_msgSend__deviceMotionFrom_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_deviceMotionFrom:");
}

id objc_msgSend__deviceRestartRegisterIntervalConfigPrefKeyForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_deviceRestartRegisterIntervalConfigPrefKeyForAccount:");
}

id objc_msgSend__deviceTypeFromVendorId_productId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_deviceTypeFromVendorId:productId:");
}

id objc_msgSend__dictionaryFromConfigData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_dictionaryFromConfigData:");
}

id objc_msgSend__didCompleteQueueCheckRequest_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_didCompleteQueueCheckRequest:completion:");
}

id objc_msgSend__didEndDiscoveryWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_didEndDiscoveryWithError:");
}

id objc_msgSend__digestObject_withExclusionKeys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_digestObject:withExclusionKeys:");
}

id objc_msgSend__directoryNamesWithURL_enumerationOption_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_directoryNamesWithURL:enumerationOption:");
}

id objc_msgSend__disableAssertion_withName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_disableAssertion:withName:");
}

id objc_msgSend__disablePowerAssertionForRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_disablePowerAssertionForRequest:");
}

id objc_msgSend__discardLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_discardLocationManager:");
}

id objc_msgSend__dumpInfoForDevice_into_host_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_dumpInfoForDevice:into:host:");
}

id objc_msgSend__emptyFolderURLs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_emptyFolderURLs");
}

id objc_msgSend__enablePowerAssertionForRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_enablePowerAssertionForRequest:");
}

id objc_msgSend__enableRepairWithContext_callingClient_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_enableRepairWithContext:callingClient:completion:");
}

id objc_msgSend__endXPCTransactionForRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_endXPCTransactionForRequest:");
}

id objc_msgSend__enqueueIdentityOperation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_enqueueIdentityOperation:");
}

id objc_msgSend__enqueueQCAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_enqueueQCAction");
}

id objc_msgSend__enumeratorForDirectoryURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_enumeratorForDirectoryURL:");
}

id objc_msgSend__errorForCode_message_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_errorForCode:message:");
}

id objc_msgSend__evaluateRetriesForRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_evaluateRetriesForRequest:");
}

id objc_msgSend__executePlaySoundUsingExtensions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_executePlaySoundUsingExtensions");
}

id objc_msgSend__extensionContextForUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_extensionContextForUUID:");
}

id objc_msgSend__extraRegistrationInformation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_extraRegistrationInformation");
}

id objc_msgSend__fetchOfflineFindingInfoInternal(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_fetchOfflineFindingInfoInternal");
}

id objc_msgSend__fillVibrationPattern_toDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_fillVibrationPattern:toDuration:");
}

id objc_msgSend__finishAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_finishAction");
}

id objc_msgSend__fmDataProtectionClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_fmDataProtectionClass");
}

id objc_msgSend__getConnectionForID_withDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_getConnectionForID:withDelegate:");
}

id objc_msgSend__handleGestaltError_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_handleGestaltError:forKey:");
}

id objc_msgSend__handleLocateIntent_serverContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_handleLocateIntent:serverContext:");
}

id objc_msgSend__handlePushWithoutIntents_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_handlePushWithoutIntents:");
}

id objc_msgSend__handleQCIntent_serverContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_handleQCIntent:serverContext:");
}

id objc_msgSend__handleQueueCheckResponseWithStatus_andBody_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_handleQueueCheckResponseWithStatus:andBody:completion:");
}

id objc_msgSend__handleResponseForRequest_withStatus_headers_body_location_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_handleResponseForRequest:withStatus:headers:body:location:error:");
}

id objc_msgSend__handleSecureLocationsPush_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_handleSecureLocationsPush:");
}

id objc_msgSend__handleSoundIntent_serverContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_handleSoundIntent:serverContext:");
}

id objc_msgSend__hasAuthAccessEntitlement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_hasAuthAccessEntitlement");
}

id objc_msgSend__hasClientAccessEntitlement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_hasClientAccessEntitlement");
}

id objc_msgSend__hasRepairDeviceAccessEntitlement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_hasRepairDeviceAccessEntitlement");
}

id objc_msgSend__incrementRetryCountForType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_incrementRetryCountForType:");
}

id objc_msgSend__initWithCFHTTPCookieStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_initWithCFHTTPCookieStorage:");
}

id objc_msgSend__initWithDefaults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_initWithDefaults");
}

id objc_msgSend__isBeneficiaryAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_isBeneficiaryAccount");
}

id objc_msgSend__isFeatureEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_isFeatureEnabled");
}

id objc_msgSend__isValidIntentAccountId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_isValidIntentAccountId:");
}

id objc_msgSend__isWithinDaemonStartupThreshold(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_isWithinDaemonStartupThreshold");
}

id objc_msgSend__lastDeviceRestartRegisterTimePrefKeyForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_lastDeviceRestartRegisterTimePrefKeyForAccount:");
}

id objc_msgSend__lastForcedRegisterTimePrefKeyForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_lastForcedRegisterTimePrefKeyForAccount:");
}

id objc_msgSend__loadFromDisk(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_loadFromDisk");
}

id objc_msgSend__loadLostModeInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_loadLostModeInfo");
}

id objc_msgSend__loadTestAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_loadTestAccount");
}

id objc_msgSend__loadTrackingInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_loadTrackingInfo");
}

id objc_msgSend__locKeyForALEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_locKeyForALEnabled");
}

id objc_msgSend__locKeyForOfflineFindingEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_locKeyForOfflineFindingEnabled");
}

id objc_msgSend__locationCacheFileName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_locationCacheFileName");
}

id objc_msgSend__logEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_logEvent:");
}

id objc_msgSend__logRequestError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_logRequestError:");
}

id objc_msgSend__markRequestCancelled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_markRequestCancelled:");
}

id objc_msgSend__monitorWatchBLEStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_monitorWatchBLEStatus");
}

id objc_msgSend__networkCameUp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_networkCameUp");
}

id objc_msgSend__newCLLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_newCLLocationManager");
}

id objc_msgSend__nonCriticalDeviceInfoForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_nonCriticalDeviceInfoForAccount:");
}

id objc_msgSend__nonVolatileDeviceInfoForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_nonVolatileDeviceInfoForAccount:");
}

id objc_msgSend__notBackedUpDictionaryFromAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_notBackedUpDictionaryFromAccount:");
}

id objc_msgSend__notifyAboutLocatingState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_notifyAboutLocatingState");
}

id objc_msgSend__numberGestaltQueryForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_numberGestaltQueryForKey:");
}

id objc_msgSend__parseConfigFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_parseConfigFile:");
}

id objc_msgSend__performAction_waitForConnection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_performAction:waitForConnection:");
}

id objc_msgSend__performPostStartupTasks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_performPostStartupTasks");
}

id objc_msgSend__persistLastPublishedTimestamp_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_persistLastPublishedTimestamp:");
}

id objc_msgSend__persistedLastPublishedTimestamp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_persistedLastPublishedTimestamp");
}

id objc_msgSend__playSoundEnd_withCode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_playSoundEnd:withCode:");
}

id objc_msgSend__playSoundFor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_playSoundFor:");
}

id objc_msgSend__playSoundNow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_playSoundNow:");
}

id objc_msgSend__policyRequested_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_policyRequested:");
}

id objc_msgSend__postLocalActivationLockInfoChangedNotification(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_postLocalActivationLockInfoChangedNotification");
}

id objc_msgSend__publishHeartbeatIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_publishHeartbeatIfNeeded");
}

id objc_msgSend__publishLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_publishLocation:");
}

id objc_msgSend__publishPeriodicShallowIfNeeded_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_publishPeriodicShallowIfNeeded:");
}

id objc_msgSend__publishResultLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_publishResultLocation:");
}

id objc_msgSend__publishResultLocation_reason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_publishResultLocation:reason:");
}

id objc_msgSend__readConfigFromDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_readConfigFromDictionary:");
}

id objc_msgSend__readExistingConfigFile(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_readExistingConfigFile");
}

id objc_msgSend__readIODeviceSupportsFindMy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_readIODeviceSupportsFindMy");
}

id objc_msgSend__readInternalPreference_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_readInternalPreference:");
}

id objc_msgSend__readValuesFromDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_readValuesFromDictionary:");
}

id objc_msgSend__reasonForStartupRegister(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_reasonForStartupRegister");
}

id objc_msgSend__refreshDetailedStats_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_refreshDetailedStats:");
}

id objc_msgSend__registerDeviceWithCause_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_registerDeviceWithCause:");
}

id objc_msgSend__registerDeviceWithCause_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_registerDeviceWithCause:completion:");
}

id objc_msgSend__registerDigestPrefKeyForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_registerDigestPrefKeyForAccount:");
}

id objc_msgSend__registerForOnDemandPublishRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_registerForOnDemandPublishRequest");
}

id objc_msgSend__registerForStewiePublishRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_registerForStewiePublishRequest");
}

id objc_msgSend__registerIDSHandlers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_registerIDSHandlers");
}

id objc_msgSend__registrationInformationDigest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_registrationInformationDigest:");
}

id objc_msgSend__removeAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_removeAccessory:");
}

id objc_msgSend__removeContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_removeContext:");
}

id objc_msgSend__removeInfoForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_removeInfoForKey:");
}

id objc_msgSend__removeUntrackedAssets_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_removeUntrackedAssets:");
}

id objc_msgSend__retrieveLocationNow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_retrieveLocationNow");
}

id objc_msgSend__retryCountForType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_retryCountForType:");
}

id objc_msgSend__retryNow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_retryNow");
}

id objc_msgSend__sanitizeArray_withExclusionKeys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sanitizeArray:withExclusionKeys:");
}

id objc_msgSend__sanitizeDictionary_withExclusionKeys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sanitizeDictionary:withExclusionKeys:");
}

id objc_msgSend__saveAsset_fromLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_saveAsset:fromLocation:");
}

id objc_msgSend__saveChanges(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_saveChanges");
}

id objc_msgSend__saveDictionaryForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_saveDictionaryForAccount:");
}

id objc_msgSend__saveInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_saveInfo");
}

id objc_msgSend__scheduleRetryAfterTimeInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_scheduleRetryAfterTimeInterval:");
}

id objc_msgSend__scheduleXPCActivity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_scheduleXPCActivity");
}

id objc_msgSend__sendAccessoryCurrentLocationsForCmd_reason_locator_accessoryIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendAccessoryCurrentLocationsForCmd:reason:locator:accessoryIdentifier:");
}

id objc_msgSend__sendCurrentLocation_isFinished_forCmd_withReason_andAccuracyChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendCurrentLocation:isFinished:forCmd:withReason:andAccuracyChange:");
}

id objc_msgSend__sendDeviceIdentityNowWithIdentityInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendDeviceIdentityNowWithIdentityInfo:");
}

id objc_msgSend__sendRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendRequest:");
}

id objc_msgSend__sendStartupRegister(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendStartupRegister");
}

id objc_msgSend__sendTrackedLocations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendTrackedLocations");
}

id objc_msgSend__sendWipeAck(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendWipeAck");
}

id objc_msgSend__serialQueue_addTrackedLocationNow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_addTrackedLocationNow:");
}

id objc_msgSend__serialQueue_checkAndSendPendingDeviceIdentityWithIdentityInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_checkAndSendPendingDeviceIdentityWithIdentityInfo:");
}

id objc_msgSend__serialQueue_deleteTrackedLocationsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_deleteTrackedLocationsCache");
}

id objc_msgSend__serialQueue_purgeOldTrackedLocationsNow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_purgeOldTrackedLocationsNow");
}

id objc_msgSend__serialQueue_readTrackedLocationsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_readTrackedLocationsCache");
}

id objc_msgSend__serialQueue_refreshBeaconStats(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_refreshBeaconStats");
}

id objc_msgSend__serialQueue_scheduleLocationPurgeTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_scheduleLocationPurgeTimer");
}

id objc_msgSend__serialQueue_scheduleLocationPurgeTimer_internal(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_scheduleLocationPurgeTimer_internal");
}

id objc_msgSend__serialQueue_sendDeviceIdentityIfEligibleWithIdentityInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_sendDeviceIdentityIfEligibleWithIdentityInfo:");
}

id objc_msgSend__serialQueue_updateTrackedLocationsCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_serialQueue_updateTrackedLocationsCache:");
}

id objc_msgSend__setCompleteionBlocksForExtension_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setCompleteionBlocksForExtension:");
}

id objc_msgSend__setDependenciesForNewAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setDependenciesForNewAction:");
}

id objc_msgSend__setInfo_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setInfo:forKey:");
}

id objc_msgSend__setupRegions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupRegions");
}

id objc_msgSend__setupSKUs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupSKUs");
}

id objc_msgSend__setupSPStatusListener(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupSPStatusListener");
}

id objc_msgSend__shouldThrottleDeviceRestartRegister(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_shouldThrottleDeviceRestartRegister");
}

id objc_msgSend__showAlertAfterUnlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_showAlertAfterUnlock:");
}

id objc_msgSend__showMarkAsMissingErrorForResponseError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_showMarkAsMissingErrorForResponseError:");
}

id objc_msgSend__showPairedDeviceDisableFMIPErrorForResponseError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_showPairedDeviceDisableFMIPErrorForResponseError:");
}

id objc_msgSend__showUnregisterDeviceErrorForResponseError_inContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_showUnregisterDeviceErrorForResponseError:inContext:");
}

id objc_msgSend__spMotionStateFrom_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_spMotionStateFrom:");
}

id objc_msgSend__spPublishReasonFrom_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_spPublishReasonFrom:");
}

id objc_msgSend__startCleaningEmptyFolders(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_startCleaningEmptyFolders");
}

id objc_msgSend__startLocateCycleWithLocatorPublishingBlock_andStoppedLocatingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_startLocateCycleWithLocatorPublishingBlock:andStoppedLocatingBlock:");
}

id objc_msgSend__stateChangeCriteriaForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stateChangeCriteriaForAccount:");
}

id objc_msgSend__statusFromStringValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_statusFromStringValue:");
}

id objc_msgSend__stopDiscoveryForExtAccessory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stopDiscoveryForExtAccessory");
}

id objc_msgSend__stopFallbackRetryTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stopFallbackRetryTimer");
}

id objc_msgSend__stopLocator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stopLocator");
}

id objc_msgSend__stopTracking(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stopTracking");
}

id objc_msgSend__storeLostModeInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_storeLostModeInfo");
}

id objc_msgSend__storeTrackingInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_storeTrackingInfo");
}

id objc_msgSend__stringGestaltQueryForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stringGestaltQueryForKey:");
}

id objc_msgSend__substituteNonAuthenticatedURLPlaceholders_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_substituteNonAuthenticatedURLPlaceholders:");
}

id objc_msgSend__substituteStandardURLPlaceholders_account_udid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_substituteStandardURLPlaceholders:account:udid:");
}

id objc_msgSend__trackedLocationTypeAsString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_trackedLocationTypeAsString:");
}

id objc_msgSend__trackedLocationsCacheFileURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_trackedLocationsCacheFileURL");
}

id objc_msgSend__unregisterDeviceErrorForResponseError_inContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_unregisterDeviceErrorForResponseError:inContext:");
}

id objc_msgSend__unregisterFromOnDemandPublishRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_unregisterFromOnDemandPublishRequest");
}

id objc_msgSend__unregisterFromStewiePublishRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_unregisterFromStewiePublishRequest");
}

id objc_msgSend__updateAccessory_previouslyPaired_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateAccessory:previouslyPaired:");
}

id objc_msgSend__updateAudioChannelPlayingState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateAudioChannelPlayingState:");
}

id objc_msgSend__updateBLEStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateBLEStatus");
}

id objc_msgSend__updateDisk(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateDisk");
}

id objc_msgSend__updateFallbackRetryTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateFallbackRetryTimer");
}

id objc_msgSend__updateFallbackRetryTimerUsingLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateFallbackRetryTimerUsingLocation:");
}

id objc_msgSend__updateLocationServicesState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateLocationServicesState");
}

id objc_msgSend__updateRealmPrefs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateRealmPrefs");
}

id objc_msgSend__v5SignedResponseForRequestBody_activationLockRequestUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_v5SignedResponseForRequestBody:activationLockRequestUUID:");
}

id objc_msgSend__vibrationPattern(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_vibrationPattern");
}

id objc_msgSend__volatileDeviceInfoForAccount_completedFirstRegister_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_volatileDeviceInfoForAccount:completedFirstRegister:");
}

id objc_msgSend__wipeNow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_wipeNow");
}

id objc_msgSend__writeAccessoriesToDisk_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_writeAccessoriesToDisk:");
}

id objc_msgSend__writeToDisk(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_writeToDisk");
}

id objc_msgSend__xpcSafeAdvertisementKeys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_xpcSafeAdvertisementKeys:");
}

id objc_msgSend__xpcTransactionNameFor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_xpcTransactionNameFor:");
}

id objc_msgSend_aa_altDSID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "aa_altDSID");
}

id objc_msgSend_aa_authToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "aa_authToken");
}

id objc_msgSend_aa_fmipAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "aa_fmipAccount");
}

id objc_msgSend_aa_fmipToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "aa_fmipToken");
}

id objc_msgSend_aa_personID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "aa_personID");
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "aa_primaryAppleAccount");
}

id objc_msgSend_aa_setPassword_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "aa_setPassword:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_accessibilityFontSizeEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityFontSizeEnabled");
}

id objc_msgSend_accessories_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessories:");
}

id objc_msgSend_accessoriesByExtension(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoriesByExtension");
}

id objc_msgSend_accessoriesByIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoriesByIdentifier");
}

id objc_msgSend_accessoriesNeedUnregister(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoriesNeedUnregister");
}

id objc_msgSend_accessoriesQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoriesQueue");
}

id objc_msgSend_accessoriesWithProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoriesWithProperty:");
}

id objc_msgSend_accessory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessory");
}

id objc_msgSend_accessoryDidConnect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryDidConnect:");
}

id objc_msgSend_accessoryDidDisconnect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryDidDisconnect:");
}

id objc_msgSend_accessoryDidPair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryDidPair:");
}

id objc_msgSend_accessoryDidUnpair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryDidUnpair:");
}

id objc_msgSend_accessoryDidUpdate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryDidUpdate:");
}

id objc_msgSend_accessoryForIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryForIdentifier:");
}

id objc_msgSend_accessoryIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryIdentifier");
}

id objc_msgSend_accessoryInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryInfo");
}

id objc_msgSend_accessoryInfoChanged_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryInfoChanged:");
}

id objc_msgSend_accessoryIsConnected_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryIsConnected:");
}

id objc_msgSend_accessoryLocationStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryLocationStore");
}

id objc_msgSend_accessoryLocations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryLocations");
}

id objc_msgSend_accessoryPairingURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryPairingURL");
}

id objc_msgSend_accessoryQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryQueue");
}

id objc_msgSend_accessoryRSSI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryRSSI");
}

id objc_msgSend_accessoryRegisterDigestForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryRegisterDigestForKey:");
}

id objc_msgSend_accessoryRegistry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryRegistry");
}

id objc_msgSend_accessoryRegistryDelegateAdaptor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryRegistryDelegateAdaptor");
}

id objc_msgSend_accessoryType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryType");
}

id objc_msgSend_accessoryTypes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryTypes");
}

id objc_msgSend_accessoryUpdateFuture(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryUpdateFuture");
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "account");
}

id objc_msgSend_accountAddTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountAddTime");
}

id objc_msgSend_accountAdded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountAdded");
}

id objc_msgSend_accountForRepair(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountForRepair");
}

id objc_msgSend_accountForServerInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountForServerInteractionController:");
}

id objc_msgSend_accountInfoDidChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountInfoDidChange");
}

id objc_msgSend_accountReadWriteLock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountReadWriteLock");
}

id objc_msgSend_accountRemoveRequestedWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountRemoveRequestedWithCompletion:");
}

id objc_msgSend_accountStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountStore");
}

id objc_msgSend_accountsFileURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountsFileURL");
}

id objc_msgSend_accountsNotBackedUpFileURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accountsNotBackedUpFileURL");
}

id objc_msgSend_accuracyChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accuracyChange");
}

id objc_msgSend_ackDataForCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ackDataForCommand");
}

id objc_msgSend_actOnTrackedLocationsUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actOnTrackedLocationsUsingBlock:");
}

id objc_msgSend_actionCompletion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionCompletion");
}

id objc_msgSend_actionExecutionQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionExecutionQueue");
}

id objc_msgSend_actionId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionId");
}

id objc_msgSend_actionQueueMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionQueueMap");
}

id objc_msgSend_actionType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionType");
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activate");
}

id objc_msgSend_activateAlert_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activateAlert:");
}

id objc_msgSend_activateMessage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activateMessage:");
}

id objc_msgSend_activationLockAuthInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activationLockAuthInfo:");
}

id objc_msgSend_activationLockBypassHash(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activationLockBypassHash");
}

id objc_msgSend_activationLockInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activationLockInfoWithCompletion:");
}

id objc_msgSend_activationLockRequestUUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activationLockRequestUUID");
}

id objc_msgSend_activationLockRequestUUIDString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activationLockRequestUUIDString");
}

id objc_msgSend_activationLockStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activationLockStatus");
}

id objc_msgSend_active(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "active");
}

id objc_msgSend_activeConfig(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeConfig");
}

id objc_msgSend_activeConfigChanged_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeConfigChanged:");
}

id objc_msgSend_activeConfigExtended_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeConfigExtended:");
}

id objc_msgSend_activeMessage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeMessage");
}

id objc_msgSend_activePairedDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activePairedDevice");
}

id objc_msgSend_activePairedDeviceSelectorBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activePairedDeviceSelectorBlock");
}

id objc_msgSend_activePolicies(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activePolicies");
}

id objc_msgSend_activeServiceProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeServiceProvider");
}

id objc_msgSend_activeTokens(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeTokens");
}

id objc_msgSend_activityHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityHandler");
}

id objc_msgSend_activityStartDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityStartDate");
}

id objc_msgSend_activityState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityState");
}

id objc_msgSend_activityUpdateQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityUpdateQueue");
}

id objc_msgSend_addAccessoryIfSupported_previouslyPaired_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAccessoryIfSupported:previouslyPaired:");
}

id objc_msgSend_addAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAccount:");
}

id objc_msgSend_addAction_forIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAction:forIdentifier:");
}

id objc_msgSend_addAudioChannelStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAudioChannelStatus:");
}

id objc_msgSend_addBLEBeacon_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addBLEBeacon:");
}

id objc_msgSend_addCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addCompletionBlock:");
}

id objc_msgSend_addDataSources_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addDataSources:");
}

id objc_msgSend_addDependency_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addDependency:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addFailureBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addFailureBlock:");
}

id objc_msgSend_addKVOBlockForKeyPath_options_handler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addKVOBlockForKeyPath:options:handler:");
}

id objc_msgSend_addNotificationRequest_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addNotificationRequest:completion:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addObservers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObservers");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addPointer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPointer:");
}

id objc_msgSend_addRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addRequest:");
}

id objc_msgSend_addSuccessBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addSuccessBlock:");
}

id objc_msgSend_addVertex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addVertex:");
}

id objc_msgSend_additionalInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "additionalInfo");
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "address");
}

id objc_msgSend_adsid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adsid");
}

id objc_msgSend_advertisementFields(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "advertisementFields");
}

id objc_msgSend_advertisementStatusKeyForProfile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "advertisementStatusKeyForProfile:");
}

id objc_msgSend_airPodsConfigurationDictWithBleDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "airPodsConfigurationDictWithBleDevice:");
}

id objc_msgSend_alCapability(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alCapability");
}

id objc_msgSend_alertActionInfoForAction_andURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alertActionInfoForAction:andURL:");
}

id objc_msgSend_alertFromServerResponse(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alertFromServerResponse");
}

id objc_msgSend_allAccessories(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allAccessories");
}

id objc_msgSend_allAccountsForService_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allAccountsForService:");
}

id objc_msgSend_allHeaderFields(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allHeaderFields");
}

id objc_msgSend_allKeychainLookupKeys(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allKeychainLookupKeys");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allKeys");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allTokenKeys(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allTokenKeys");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allValues");
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowsActivationLock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowsActivationLock");
}

id objc_msgSend_alternateButtonAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alternateButtonAction");
}

id objc_msgSend_alternateButtonTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alternateButtonTitle");
}

id objc_msgSend_alternateSerialNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alternateSerialNumber");
}

id objc_msgSend_altitude(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "altitude");
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendBytes:length:");
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendMetaData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendMetaData:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appleAccountIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appleAccountIdentifier");
}

id objc_msgSend_applicationStateForApplication_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applicationStateForApplication:");
}

id objc_msgSend_applyPropertiesFromACAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applyPropertiesFromACAccount:");
}

id objc_msgSend_apsEnv(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "apsEnv");
}

id objc_msgSend_apsEnvironment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "apsEnvironment");
}

id objc_msgSend_apsEnvironmentConstant(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "apsEnvironmentConstant");
}

id objc_msgSend_apsHandlerForEnvironment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "apsHandlerForEnvironment:");
}

id objc_msgSend_apsHandlers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "apsHandlers");
}

id objc_msgSend_apsHandlersModQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "apsHandlersModQueue");
}

id objc_msgSend_apsToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "apsToken");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_archiver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "archiver");
}

id objc_msgSend_armRatchetIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "armRatchetIfNeeded");
}

id objc_msgSend_armWithOptions_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "armWithOptions:completion:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_assertionsDict(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assertionsDict");
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "asset");
}

id objc_msgSend_assetForProfile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetForProfile:");
}

id objc_msgSend_assetForURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetForURL:");
}

id objc_msgSend_assetRegistry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetRegistry");
}

id objc_msgSend_assetType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetType");
}

id objc_msgSend_assetTypeForString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetTypeForString:");
}

id objc_msgSend_assets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assets");
}

id objc_msgSend_assetsByURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetsByURL");
}

id objc_msgSend_assetsForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetsForAccessory:");
}

id objc_msgSend_attestation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attestation");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_audioAsset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioAsset");
}

id objc_msgSend_audioChannelInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioChannelInfo");
}

id objc_msgSend_audioChannelsByName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioChannelsByName");
}

id objc_msgSend_audioRoutingIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioRoutingIdentifier");
}

id objc_msgSend_audioSafetyStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioSafetyStatus");
}

id objc_msgSend_audioSafetyStatusForAirPods_knownStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioSafetyStatusForAirPods:knownStatus:");
}

id objc_msgSend_audioSafetyStatusForStereoPair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioSafetyStatusForStereoPair:");
}

id objc_msgSend_audioState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioState");
}

id objc_msgSend_audioStateStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioStateStatus");
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "auditToken");
}

id objc_msgSend_authHeaderValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authHeaderValue");
}

id objc_msgSend_authId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authId");
}

id objc_msgSend_authInvalidError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authInvalidError");
}

id objc_msgSend_authKitAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authKitAccountWithAltDSID:");
}

id objc_msgSend_authNonce(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authNonce");
}

id objc_msgSend_authToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authToken");
}

id objc_msgSend_authTokenHealingQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authTokenHealingQueue");
}

id objc_msgSend_authenticateWithContext_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authenticateWithContext:completion:");
}

id objc_msgSend_authenticationMethod(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authenticationMethod");
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authorizationStatus");
}

id objc_msgSend_authorizationStatusForBundle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authorizationStatusForBundle:");
}

id objc_msgSend_automationHelperBundle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "automationHelperBundle");
}

id objc_msgSend_automationHelperClassWithName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "automationHelperClassWithName:");
}

id objc_msgSend_automotive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "automotive");
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoupdatingCurrentLocale");
}

id objc_msgSend_availability(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "availability");
}

id objc_msgSend_available(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "available");
}

id objc_msgSend_availableDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "availableDevices");
}

id objc_msgSend_baRegistrationStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baRegistrationStatus");
}

id objc_msgSend_baUUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baUUID");
}

id objc_msgSend_baaAttestationHeader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baaAttestationHeader");
}

id objc_msgSend_baaError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baaError");
}

id objc_msgSend_baaErrorDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baaErrorDescription");
}

id objc_msgSend_baaIdentityAttestationForSigningRequest_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baaIdentityAttestationForSigningRequest:completion:");
}

id objc_msgSend_baaIdentityTimeoutIntervalInSec(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baaIdentityTimeoutIntervalInSec");
}

id objc_msgSend_baaSignatureHeader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baaSignatureHeader");
}

id objc_msgSend_backOfEnclosureColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backOfEnclosureColor");
}

id objc_msgSend_backedUpDataArchiver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backedUpDataArchiver");
}

id objc_msgSend_base64EncodedString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "base64EncodedString");
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_baseIdentifierKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baseIdentifierKey");
}

id objc_msgSend_baseStoragePath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baseStoragePath");
}

id objc_msgSend_baseURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baseURL");
}

id objc_msgSend_batteryInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "batteryInfo");
}

id objc_msgSend_batteryLevel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "batteryLevel");
}

id objc_msgSend_batteryStatusForState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "batteryStatusForState:");
}

id objc_msgSend_beaconIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beaconIdentifier");
}

id objc_msgSend_beaconLastKeyRollDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beaconLastKeyRollDate");
}

id objc_msgSend_beaconZoneCreationDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beaconZoneCreationDate");
}

id objc_msgSend_beaconZoneCreationErrorCode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beaconZoneCreationErrorCode");
}

id objc_msgSend_beaconingIdentifierForMACAddress_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beaconingIdentifierForMACAddress:completion:");
}

id objc_msgSend_beacons(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beacons");
}

id objc_msgSend_beaconsByIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beaconsByIdentifier");
}

id objc_msgSend_beginExtensionRequestWithOptions_inputItems_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginExtensionRequestWithOptions:inputItems:error:");
}

id objc_msgSend_beginMatchingExtensionsWithAttributes_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginMatchingExtensionsWithAttributes:completion:");
}

id objc_msgSend_beginRefreshingServiceStateWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginRefreshingServiceStateWithBlock:");
}

id objc_msgSend_beginTransaction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginTransaction:");
}

id objc_msgSend_bioLockState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bioLockState");
}

id objc_msgSend_bioLockoutState_forUser_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bioLockoutState:forUser:error:");
}

id objc_msgSend_blePowerStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blePowerStatus");
}

id objc_msgSend_block(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "block");
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blockOperationWithBlock:");
}

id objc_msgSend_bluetoothAddress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothAddress");
}

id objc_msgSend_bluetoothColorCode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothColorCode");
}

id objc_msgSend_bluetoothConnected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothConnected");
}

id objc_msgSend_bluetoothDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothDevice");
}

id objc_msgSend_bluetoothDeviceForBLEDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothDeviceForBLEDevice:");
}

id objc_msgSend_bluetoothDeviceProductId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothDeviceProductId");
}

id objc_msgSend_bluetoothDeviceVendor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothDeviceVendor");
}

id objc_msgSend_bluetoothDiscoveryQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothDiscoveryQueue");
}

id objc_msgSend_bluetoothMajorDeviceClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothMajorDeviceClass");
}

id objc_msgSend_bluetoothManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothManager");
}

id objc_msgSend_bluetoothManagerDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothManagerDevice");
}

id objc_msgSend_bluetoothManagerDeviceForBluetoothDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothManagerDeviceForBluetoothDevice:");
}

id objc_msgSend_bluetoothManagerDevicesByAddress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothManagerDevicesByAddress");
}

id objc_msgSend_bluetoothManagerDidUpdateDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothManagerDidUpdateDevice:");
}

id objc_msgSend_bluetoothManagerQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothManagerQueue");
}

id objc_msgSend_bluetoothManagerQueueSynchronizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothManagerQueueSynchronizer");
}

id objc_msgSend_bluetoothManagerWithQueue_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothManagerWithQueue:delegate:");
}

id objc_msgSend_bluetoothMinorDeviceClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bluetoothMinorDeviceClass");
}

id objc_msgSend_body(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "body");
}

id objc_msgSend_BOOLForCaseInsensitiveStringKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BOOLForCaseInsensitiveStringKey:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLForKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BOOLForKey:inDomain:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_btAddress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "btAddress");
}

id objc_msgSend_btDiscoveryConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "btDiscoveryConfiguration");
}

id objc_msgSend_btMacAddress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "btMacAddress");
}

id objc_msgSend_buddyWaitTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buddyWaitTimer");
}

id objc_msgSend_build(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "build");
}

id objc_msgSend_buildVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buildVersion");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_bundleWithPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bundleWithPath:");
}

id objc_msgSend_bypassInEarCheck(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bypassInEarCheck");
}

id objc_msgSend_bystanderLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bystanderLocationManager");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bytes");
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_cacheValidityDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheValidityDuration");
}

id objc_msgSend_cachedLocValidityDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedLocValidityDuration");
}

id objc_msgSend_cachedLocationValidityTimeInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedLocationValidityTimeInterval");
}

id objc_msgSend_cachedLogFileURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedLogFileURL");
}

id objc_msgSend_calculateFirstRunStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calculateFirstRunStatus");
}

id objc_msgSend_canHandleLocates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canHandleLocates");
}

id objc_msgSend_canReplace_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canReplace:");
}

id objc_msgSend_canRequestBeRetriedNow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canRequestBeRetriedNow");
}

id objc_msgSend_canRetrieveLockedRecords(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canRetrieveLockedRecords");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancel");
}

id objc_msgSend_cancelAction_forIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelAction:forIdentifier:");
}

id objc_msgSend_cancelAllActions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelAllActions");
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelAllOperations");
}

id objc_msgSend_cancelAllRequests(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelAllRequests");
}

id objc_msgSend_cancelRefresh(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelRefresh");
}

id objc_msgSend_cancelRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelRequest:");
}

id objc_msgSend_cancelRequestWithId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelRequestWithId:");
}

id objc_msgSend_cancelTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelTimer");
}

id objc_msgSend_cancelled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelled");
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "category");
}

id objc_msgSend_categoryIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "categoryIdentifier");
}

id objc_msgSend_cause(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cause");
}

id objc_msgSend_cfNotification(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfNotification");
}

id objc_msgSend_changePasscodeFrom_to_outError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "changePasscodeFrom:to:outError:");
}

id objc_msgSend_channelName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "channelName");
}

id objc_msgSend_channelNamesForProfile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "channelNamesForProfile:");
}

id objc_msgSend_channels(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "channels");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterSetWithCharactersInString:");
}

id objc_msgSend_checkAndScheduleRetries(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkAndScheduleRetries");
}

id objc_msgSend_checkAndSendPendingDeviceIdentityWithIdentityInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkAndSendPendingDeviceIdentityWithIdentityInfo:");
}

id objc_msgSend_checkAndSetOutError_WithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkAndSetOutError:WithError:");
}

id objc_msgSend_checkInAllAPSHandlers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkInAllAPSHandlers");
}

id objc_msgSend_checkShutdownSoonRegistration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkShutdownSoonRegistration");
}

id objc_msgSend_chipId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chipId");
}

id objc_msgSend_cipher(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cipher");
}

id objc_msgSend_classForObjectInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "classForObjectInfo:");
}

id objc_msgSend_classNamed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "classNamed:");
}

id objc_msgSend_classTypeMapping(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "classTypeMapping");
}

id objc_msgSend_cleanAccountKeys(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanAccountKeys");
}

id objc_msgSend_cleanOutCurrentContextDirectoryURL_preservingContextUUID_obliterateDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanOutCurrentContextDirectoryURL:preservingContextUUID:obliterateDirectory:");
}

id objc_msgSend_cleanupAllContextsForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanupAllContextsForKey:");
}

id objc_msgSend_cleanupContextForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanupContextForAccessory:");
}

id objc_msgSend_cleanupContexts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanupContexts");
}

id objc_msgSend_cleanupContextsForKey_contextUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanupContextsForKey:contextUUID:");
}

id objc_msgSend_cleanupContextsForKey_contextUUID_obliterate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanupContextsForKey:contextUUID:obliterate:");
}

id objc_msgSend_cleanupEmptyFolders(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanupEmptyFolders");
}

id objc_msgSend_cleanupPostWipe(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanupPostWipe");
}

id objc_msgSend_cleanupTask(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanupTask");
}

id objc_msgSend_clearAccessoryLocationStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearAccessoryLocationStore");
}

id objc_msgSend_clearAccessoryRegistry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearAccessoryRegistry");
}

id objc_msgSend_clearAllRecords(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearAllRecords");
}

id objc_msgSend_clearAllState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearAllState");
}

id objc_msgSend_clearAssetRegistry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearAssetRegistry");
}

id objc_msgSend_clearCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearCache");
}

id objc_msgSend_clearCachedHostsWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearCachedHostsWithContext:");
}

id objc_msgSend_clearDataStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearDataStore");
}

id objc_msgSend_clearFutures(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearFutures");
}

id objc_msgSend_clearMaskedAppleID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearMaskedAppleID");
}

id objc_msgSend_clearMaskedAppleIDValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearMaskedAppleIDValue");
}

id objc_msgSend_clearOfflineFindingInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearOfflineFindingInfo");
}

id objc_msgSend_clearOfflineFindingInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearOfflineFindingInfoWithCompletion:");
}

id objc_msgSend_clearPropertyWithKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearPropertyWithKey:");
}

id objc_msgSend_clearSupportedAccessoryRegistry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearSupportedAccessoryRegistry");
}

id objc_msgSend_clearUnregisterTokens(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearUnregisterTokens");
}

id objc_msgSend_cmdStatusCode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cmdStatusCode");
}

id objc_msgSend_cmdStatusMsg(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cmdStatusMsg");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "code");
}

id objc_msgSend_collectionObjectClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "collectionObjectClass");
}

id objc_msgSend_collectionObjectKeyType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "collectionObjectKeyType");
}

id objc_msgSend_colorCode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorCode");
}

id objc_msgSend_colorCodeCase(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorCodeCase");
}

id objc_msgSend_colorCodeLeft(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorCodeLeft");
}

id objc_msgSend_colorCodeRight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorCodeRight");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_commandContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandContext");
}

id objc_msgSend_commandContextUUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandContextUUID");
}

id objc_msgSend_commandID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandID");
}

id objc_msgSend_commandName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandName");
}

id objc_msgSend_commandParams(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandParams");
}

id objc_msgSend_commandStatusForInternalAccessoryAudioSafetyStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandStatusForInternalAccessoryAudioSafetyStatus:");
}

id objc_msgSend_companionRegistryDidUpdateAccessories_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "companionRegistryDidUpdateAccessories:");
}

id objc_msgSend_companionRegistryWithDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "companionRegistryWithDelegate:");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_comparisonPublishers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "comparisonPublishers");
}

id objc_msgSend_completeDeviceInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "completeDeviceInfo");
}

id objc_msgSend_completeDeviceInfoForAccount_accessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "completeDeviceInfoForAccount:accessory:");
}

id objc_msgSend_completed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "completed");
}

id objc_msgSend_completedStartupRegister(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "completedStartupRegister");
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "completion");
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "completionHandler");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_computeAccessoryIdentifierWithIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "computeAccessoryIdentifierWithIdentifier:");
}

id objc_msgSend_computeAccessoryRegistry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "computeAccessoryRegistry");
}

id objc_msgSend_conditionalSync_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "conditionalSync:");
}

id objc_msgSend_config(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "config");
}

id objc_msgSend_configForAccessoryType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configForAccessoryType:");
}

id objc_msgSend_configForPolicy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configForPolicy:");
}

id objc_msgSend_configManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configManager");
}

id objc_msgSend_configurationDictWithBleDevice_supportedAccessoryProfile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configurationDictWithBleDevice:supportedAccessoryProfile:");
}

id objc_msgSend_configurationUpdated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configurationUpdated:");
}

id objc_msgSend_configurations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configurations");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "connectDevice:");
}

id objc_msgSend_connectToDeviceAddress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "connectToDeviceAddress:");
}

id objc_msgSend_connected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "connected");
}

id objc_msgSend_connectedAccessories(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "connectedAccessories");
}

id objc_msgSend_connectedAccessoryIdentifiers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "connectedAccessoryIdentifiers");
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "connection");
}

id objc_msgSend_connectionState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "connectionState");
}

id objc_msgSend_connectionStatusForAccessory_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "connectionStatusForAccessory:withCompletion:");
}

id objc_msgSend_connectionStatusString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "connectionStatusString");
}

id objc_msgSend_consecutiveRetriesByType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "consecutiveRetriesByType");
}

id objc_msgSend_constantForEnvironmentString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constantForEnvironmentString:");
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "container");
}

id objc_msgSend_containsCoordinate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsCoordinate:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsString:");
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "context");
}

id objc_msgSend_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "context:");
}

id objc_msgSend_contextDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextDictionary");
}

id objc_msgSend_contextForContextKey_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextForContextKey:error:");
}

id objc_msgSend_contextForKey_contextUUID_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextForKey:contextUUID:error:");
}

id objc_msgSend_contextKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextKey");
}

id objc_msgSend_contextKeyForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextKeyForAccessory:");
}

id objc_msgSend_contextKeyForAccessory_protectionClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextKeyForAccessory:protectionClass:");
}

id objc_msgSend_contextKeysForType_enumerationOption_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextKeysForType:enumerationOption:");
}

id objc_msgSend_contextUUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextUUID");
}

id objc_msgSend_controlObject_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlObject:error:");
}

id objc_msgSend_convertToNSJSONWritingOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertToNSJSONWritingOptions:");
}

id objc_msgSend_convertToSecureLocationObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertToSecureLocationObject");
}

id objc_msgSend_cookieStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cookieStorage");
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "coordinate");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copy");
}

id objc_msgSend_copyAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyAccessory:");
}

id objc_msgSend_copyInfoFromAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyInfoFromAccount:");
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyItemAtURL:toURL:error:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_course(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "course");
}

id objc_msgSend_coverGlassColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "coverGlassColor");
}

id objc_msgSend_createLocatorWithParams_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createLocatorWithParams:");
}

id objc_msgSend_creationDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "creationDate");
}

id objc_msgSend_credentialForAccount_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "credentialForAccount:error:");
}

id objc_msgSend_credentialForTrust_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "credentialForTrust:");
}

id objc_msgSend_credentialWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "credentialWithError:");
}

id objc_msgSend_criteriaMetBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "criteriaMetBlock");
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentConnection");
}

id objc_msgSend_currentDeviceSKURegion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentDeviceSKURegion");
}

id objc_msgSend_currentLastActiveTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentLastActiveTime");
}

id objc_msgSend_currentLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentLocation");
}

id objc_msgSend_currentPasscodeConstraint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPasscodeConstraint");
}

id objc_msgSend_currentPasscodeConstraintStr(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPasscodeConstraintStr");
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentRunLoop");
}

id objc_msgSend_currentTask(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentTask");
}

id objc_msgSend_currentlyPicked(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentlyPicked");
}

id objc_msgSend_cycling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cycling");
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "data");
}

id objc_msgSend_dataArchiver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataArchiver");
}

id objc_msgSend_dataForKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataForKey:inDomain:");
}

id objc_msgSend_dataPeekEventName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataPeekEventName");
}

id objc_msgSend_dataSourceErrorBackoffCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataSourceErrorBackoffCount");
}

id objc_msgSend_dataSourceRetryTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataSourceRetryTimer");
}

id objc_msgSend_dataSources(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataSources");
}

id objc_msgSend_dataTaskWithRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataTaskWithRequest:");
}

id objc_msgSend_dataTaskWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataTaskWithRequest:completionHandler:");
}

id objc_msgSend_dataUpdateCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataUpdateCommand");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataValueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataValueForKey:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithHexString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithHexString:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dataWithLength_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithLength:");
}

id objc_msgSend_dataWithMACAddressString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithMACAddressString:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_dataclassProperties(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataclassProperties");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "date");
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateForKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dateForKey:inDomain:");
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_deactivate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deactivate");
}

id objc_msgSend_decayFactor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decayFactor");
}

id objc_msgSend_decodeArrayCollection_usingFactory_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeArrayCollection:usingFactory:error:");
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeCodableClass_withJSONObject_usingFactory_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeCodableClass:withJSONObject:usingFactory:error:");
}

id objc_msgSend_decodeCodableClass_withJSONObject_usingObjectKeyType_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeCodableClass:withJSONObject:usingObjectKeyType:error:");
}

id objc_msgSend_decodeCollectionOfClass_fromJSONObject_usingFactory_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeCollectionOfClass:fromJSONObject:usingFactory:error:");
}

id objc_msgSend_decodeDictionaryCollection_usingFactory_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeDictionaryCollection:usingFactory:error:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeDoubleForKey:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeNumberForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeNumberForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObjectOfClass:forKey:error:");
}

id objc_msgSend_decodeObjectOfClass_fromData_usingFactory_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObjectOfClass:fromData:usingFactory:error:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_decodeObjectOfProtocols_forKey_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObjectOfProtocols:forKey:error:");
}

id objc_msgSend_decodeStringForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeStringForKey:");
}

id objc_msgSend_decorator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decorator");
}

id objc_msgSend_decryptWithCipher_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decryptWithCipher:completion:");
}

id objc_msgSend_deepLinkURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deepLinkURL");
}

id objc_msgSend_defaultAccessoriesEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultAccessoriesEnabled");
}

id objc_msgSend_defaultAudioSafetyStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultAudioSafetyStatus");
}

id objc_msgSend_defaultButtonAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultButtonAction");
}

id objc_msgSend_defaultButtonTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultButtonTitle");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultCipherWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultCipherWithError:");
}

id objc_msgSend_defaultConfigurations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultConfigurations");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultSession(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultSession");
}

id objc_msgSend_defaultSessionConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultSessionConfiguration");
}

id objc_msgSend_defaultStorageLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultStorageLocation");
}

id objc_msgSend_defaultSupportedAccessoriesIfEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultSupportedAccessoriesIfEnabled:");
}

id objc_msgSend_defaultTimeoutAudioSafetyStatusForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultTimeoutAudioSafetyStatusForAccessory:");
}

id objc_msgSend_defaultTimeoutAudioSafetyStatusForProfile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultTimeoutAudioSafetyStatusForProfile:");
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultWorkspace");
}

id objc_msgSend_definitionWithCAPackagePath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "definitionWithCAPackagePath:");
}

id objc_msgSend_definitionWithColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "definitionWithColor:");
}

id objc_msgSend_deinitializeHelper(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deinitializeHelper");
}

id objc_msgSend_deinitializeRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deinitializeRequest");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delegate");
}

id objc_msgSend_delegateQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delegateQueue");
}

id objc_msgSend_delegates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delegates");
}

id objc_msgSend_deleteAllTrackedLocations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteAllTrackedLocations");
}

id objc_msgSend_deleteDataForAccount_service_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteDataForAccount:service:");
}

id objc_msgSend_deleteFilesAtURLs_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteFilesAtURLs:");
}

id objc_msgSend_deleteLocationTrackingInfoAndStopTracking(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteLocationTrackingInfoAndStopTracking");
}

id objc_msgSend_deleteRegisterDigestForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteRegisterDigestForAccount:");
}

id objc_msgSend_deniedOperationBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deniedOperationBlock");
}

id objc_msgSend_dependencies(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dependencies");
}

id objc_msgSend_deregisterCommonNotifications(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deregisterCommonNotifications");
}

id objc_msgSend_deregisterDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deregisterDelegate:");
}

id objc_msgSend_deregisterHandlerForDarwinNotification_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deregisterHandlerForDarwinNotification:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "description");
}

id objc_msgSend_desiredAccuracy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "desiredAccuracy");
}

id objc_msgSend_detachNotificaitonsWaitTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detachNotificaitonsWaitTime");
}

id objc_msgSend_detachNotificationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detachNotificationManager");
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "device");
}

id objc_msgSend_deviceClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceClass");
}

id objc_msgSend_deviceClassString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceClassString");
}

id objc_msgSend_deviceColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceColor");
}

id objc_msgSend_deviceContextGenerator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceContextGenerator");
}

id objc_msgSend_deviceDiscoveryId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceDiscoveryId");
}

id objc_msgSend_deviceEligibleForRepairWithContext_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceEligibleForRepairWithContext:completion:");
}

id objc_msgSend_deviceEnclosureColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceEnclosureColor");
}

id objc_msgSend_deviceIDFromAddress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceIDFromAddress:");
}

id objc_msgSend_deviceId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceId");
}

id objc_msgSend_deviceIdentityPendingXpcTransactionName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceIdentityPendingXpcTransactionName");
}

id objc_msgSend_deviceInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceInfo");
}

id objc_msgSend_deviceInfoForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceInfoForAccount:");
}

id objc_msgSend_deviceInfoForAccount_accessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceInfoForAccount:accessory:");
}

id objc_msgSend_deviceInfoForHostRegister(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceInfoForHostRegister");
}

id objc_msgSend_deviceInfoGenerator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceInfoGenerator");
}

id objc_msgSend_deviceInfoOverrides(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceInfoOverrides");
}

id objc_msgSend_deviceModel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceModel");
}

id objc_msgSend_deviceName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceName");
}

id objc_msgSend_deviceProductId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceProductId");
}

id objc_msgSend_deviceRegion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceRegion");
}

id objc_msgSend_deviceTypeStringForDeviceClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceTypeStringForDeviceClass:");
}

id objc_msgSend_deviceUDID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceUDID");
}

id objc_msgSend_deviceVendor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceVendor");
}

id objc_msgSend_deviceWithDescriptor_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceWithDescriptor:error:");
}

id objc_msgSend_device_unlock_actions_queue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "device_unlock_actions_queue");
}

id objc_msgSend_dictModQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictModQueue");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryForError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryForError:");
}

id objc_msgSend_dictionaryForKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryForKey:inDomain:");
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryRepresentation");
}

id objc_msgSend_dictionaryValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryValue");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didAddNewTrackedLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didAddNewTrackedLocation:");
}

id objc_msgSend_didDiscoverDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didDiscoverDevice");
}

id objc_msgSend_didDiscoverDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didDiscoverDevice:");
}

id objc_msgSend_didEndDiscovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didEndDiscovery");
}

id objc_msgSend_didEndDiscoveryWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didEndDiscoveryWithError:");
}

id objc_msgSend_didHandleCommandWithAckData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didHandleCommandWithAckData:");
}

id objc_msgSend_didLoseDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didLoseDevice");
}

id objc_msgSend_didLoseDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didLoseDevice:");
}

id objc_msgSend_didMakeProviderActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didMakeProviderActive");
}

id objc_msgSend_didMakeProviderInactive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didMakeProviderInactive");
}

id objc_msgSend_didReceiveAuthFailureForRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didReceiveAuthFailureForRequest:");
}

id objc_msgSend_didReceiveServerAlertForRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didReceiveServerAlertForRequest:");
}

id objc_msgSend_didStartDiscovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didStartDiscovery");
}

id objc_msgSend_digestData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "digestData");
}

id objc_msgSend_digestKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "digestKey");
}

id objc_msgSend_digestWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "digestWithDeviceInfo:");
}

id objc_msgSend_directoryChanged(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "directoryChanged");
}

id objc_msgSend_directoryURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "directoryURL");
}

id objc_msgSend_directoryURLForContextKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "directoryURLForContextKey:");
}

id objc_msgSend_disableBiometricID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableBiometricID");
}

id objc_msgSend_disableContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableContext");
}

id objc_msgSend_disableFMIPForPairedDeviceWithUDID_account_andCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableFMIPForPairedDeviceWithUDID:account:andCompletion:");
}

id objc_msgSend_disableIntents(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableIntents");
}

id objc_msgSend_disableLocationDisplayWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableLocationDisplayWithCompletion:");
}

id objc_msgSend_disableLostMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableLostMode");
}

id objc_msgSend_disablePush(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disablePush");
}

id objc_msgSend_discardEarlyDiscovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discardEarlyDiscovery");
}

id objc_msgSend_discovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discovery");
}

id objc_msgSend_discoveryCoordinator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discoveryCoordinator");
}

id objc_msgSend_discoveryEndDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discoveryEndDate");
}

id objc_msgSend_discoveryRequestedStart_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discoveryRequestedStart:");
}

id objc_msgSend_discoveryRequestedStop_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discoveryRequestedStop:");
}

id objc_msgSend_discoveryTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discoveryTimer");
}

id objc_msgSend_discoveryWaitTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discoveryWaitTimer");
}

id objc_msgSend_dismissMsgOnLock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissMsgOnLock");
}

id objc_msgSend_dismissMsgOnUnlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissMsgOnUnlock");
}

id objc_msgSend_dispatchSourceAbort(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dispatchSourceAbort");
}

id objc_msgSend_dispatchSourceChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dispatchSourceChange");
}

id objc_msgSend_dispatchTransactionAsync_transactionName_block_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dispatchTransactionAsync:transactionName:block:");
}

id objc_msgSend_dispatchTransactionSync_transactionName_block_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dispatchTransactionSync:transactionName:block:");
}

id objc_msgSend_distanceFilter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "distanceFilter");
}

id objc_msgSend_distanceFromLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "distanceFromLocation:");
}

id objc_msgSend_doesNotRecognizeSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doesNotRecognizeSelector:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "domain");
}

id objc_msgSend_dontUseSLC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dontUseSLC");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_downloadAssets_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "downloadAssets:");
}

id objc_msgSend_downloadAssetsIfNeededForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "downloadAssetsIfNeededForAccessory:");
}

id objc_msgSend_downloadTaskWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "downloadTaskWithRequest:completionHandler:");
}

id objc_msgSend_dsid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dsid");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "duration");
}

id objc_msgSend_earlierDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "earlierDate:");
}

id objc_msgSend_earlyDiscovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "earlyDiscovery");
}

id objc_msgSend_ecid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ecid");
}

id objc_msgSend_effectiveValueForSetting_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "effectiveValueForSetting:");
}

id objc_msgSend_embeddedAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "embeddedAction");
}

id objc_msgSend_enableFMIPLocationServices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enableFMIPLocationServices");
}

id objc_msgSend_enableLocationServices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enableLocationServices");
}

id objc_msgSend_enableLostModeWithMessage_ownerNumber_facetimeCapable_enableLocationServices_turnOffStatusBarIconAfterLostMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enableLostModeWithMessage:ownerNumber:facetimeCapable:enableLocationServices:turnOffStatusBarIconAfterLostMode:");
}

id objc_msgSend_enableRepairWithContext_callingClient_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enableRepairWithContext:callingClient:completion:");
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enabled");
}

id objc_msgSend_encodeArrayCollectionObject_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeArrayCollectionObject:error:");
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeCollectionObject_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeCollectionObject:error:");
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeDouble:forKey:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeNumber_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeNumber:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodeObject_forKey_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeObject:forKey:error:");
}

id objc_msgSend_encodeObjectTypeUsingClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeObjectTypeUsingClass:");
}

id objc_msgSend_encodeObjects_forKey_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeObjects:forKey:error:");
}

id objc_msgSend_encodeString_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeString:forKey:");
}

id objc_msgSend_encodeStringKeysDictionaryCollectionObject_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeStringKeysDictionaryCollectionObject:error:");
}

id objc_msgSend_encodeWithFMDCoder_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeWithFMDCoder:error:");
}

id objc_msgSend_encodedDataWithRootObject_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodedDataWithRootObject:options:error:");
}

id objc_msgSend_encryptWithcompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encryptWithcompletion:");
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endDate");
}

id objc_msgSend_endMatchingExtensions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endMatchingExtensions:");
}

id objc_msgSend_endThreshold(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endThreshold");
}

id objc_msgSend_endTransaction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endTransaction:");
}

id objc_msgSend_enqueueAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enqueueAction:");
}

id objc_msgSend_enqueueRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enqueueRequest:");
}

id objc_msgSend_enqueueRequest_account_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enqueueRequest:account:");
}

id objc_msgSend_enqueueRequest_forAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enqueueRequest:forAccessory:");
}

id objc_msgSend_enqueuedQC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enqueuedQC");
}

id objc_msgSend_enumerateByteRangesUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateByteRangesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "environment");
}

id objc_msgSend_ephemeralSessionConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ephemeralSessionConfiguration");
}

id objc_msgSend_ephemeralToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ephemeralToken");
}

id objc_msgSend_ephemeralTokenForUserWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ephemeralTokenForUserWithCompletion:");
}

id objc_msgSend_eraseDeviceWithOptions_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eraseDeviceWithOptions:completion:");
}

id objc_msgSend_eraseKeyType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eraseKeyType");
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "error");
}

id objc_msgSend_errorContextStringForDisableContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "errorContextStringForDisableContext:");
}

id objc_msgSend_errorForMarkAsMissing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "errorForMarkAsMissing");
}

id objc_msgSend_errorForUnregister(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "errorForUnregister");
}

id objc_msgSend_errorTypeString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "errorTypeString");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_escrowHash(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "escrowHash");
}

id objc_msgSend_essentialServerInfoMissingError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "essentialServerInfoMissingError");
}

id objc_msgSend_establishSessionWithServerInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "establishSessionWithServerInteractionController:");
}

id objc_msgSend_etag(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "etag");
}

id objc_msgSend_evaluateOperation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "evaluateOperation");
}

id objc_msgSend_evaluatePolicy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "evaluatePolicy");
}

id objc_msgSend_evaluatePolicy_options_reply_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "evaluatePolicy:options:reply:");
}

id objc_msgSend_evaluationOptions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "evaluationOptions");
}

id objc_msgSend_event(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "event");
}

id objc_msgSend_eventDidOccur_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eventDidOccur:");
}

id objc_msgSend_eventName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eventName");
}

id objc_msgSend_eventType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eventType");
}

id objc_msgSend_executeCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "executeCommand");
}

id objc_msgSend_executePlaySound(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "executePlaySound");
}

id objc_msgSend_executionDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "executionDate");
}

id objc_msgSend_expirationInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expirationInterval");
}

id objc_msgSend_expirationTimeFor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expirationTimeFor:");
}

id objc_msgSend_expungeAccessoryLocationStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expungeAccessoryLocationStore");
}

id objc_msgSend_expungeRecordsForAccessory_allRecords_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expungeRecordsForAccessory:allRecords:");
}

id objc_msgSend_expungeUnregisterTokens_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expungeUnregisterTokens:");
}

id objc_msgSend_extAccessoryConfigURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "extAccessoryConfigURL");
}

id objc_msgSend_extAccessoryManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "extAccessoryManager");
}

id objc_msgSend_extensionId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "extensionId");
}

id objc_msgSend_extensionMatchToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "extensionMatchToken");
}

id objc_msgSend_extensionforFeature_flavor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "extensionforFeature:flavor:");
}

id objc_msgSend_extensions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "extensions");
}

id objc_msgSend_extensionsAlreadySynced(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "extensionsAlreadySynced");
}

id objc_msgSend_externalAccessoryForMacAddress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "externalAccessoryForMacAddress:");
}

id objc_msgSend_facetimeCapable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "facetimeCapable");
}

id objc_msgSend_facilitiesDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "facilitiesDictionary");
}

id objc_msgSend_facilityName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "facilityName");
}

id objc_msgSend_factory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "factory");
}

id objc_msgSend_failureDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "failureDescription");
}

id objc_msgSend_failureReason(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "failureReason");
}

id objc_msgSend_fallbackRetryTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fallbackRetryTimer");
}

id objc_msgSend_fallbackTimerXPCTransactionName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fallbackTimerXPCTransactionName");
}

id objc_msgSend_fallbackToNoAuthentication(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fallbackToNoAuthentication");
}

id objc_msgSend_fd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fd");
}

id objc_msgSend_features(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "features");
}

id objc_msgSend_fetchAllAccessoriesInfoWithInfo_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fetchAllAccessoriesInfoWithInfo:withCompletion:");
}

id objc_msgSend_fetchBaUUIDBeforeFirstRegister(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fetchBaUUIDBeforeFirstRegister");
}

id objc_msgSend_fetchConfigForAccessoryTypes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fetchConfigForAccessoryTypes:");
}

id objc_msgSend_fetchMteStatusWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fetchMteStatusWithCompletion:");
}

id objc_msgSend_fetchOctStatusWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fetchOctStatusWithCompletion:");
}

id objc_msgSend_fetchOfflineFindingInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fetchOfflineFindingInfoWithCompletion:");
}

id objc_msgSend_fetchSupportedAccessoryTypes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fetchSupportedAccessoryTypes");
}

id objc_msgSend_fileDiscovered(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileDiscovered");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileLocation");
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileSystemRepresentation");
}

id objc_msgSend_fileURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileURL");
}

id objc_msgSend_fileURLForContextKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileURLForContextKey:");
}

id objc_msgSend_fileURLWithFileSystemRepresentation_isDirectory_relativeToURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:");
}

id objc_msgSend_fileURLWithPath_isDirectory_relativeToURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileURLWithPath:isDirectory:relativeToURL:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_finalLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finalLocation");
}

id objc_msgSend_findMyEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "findMyEnabled");
}

id objc_msgSend_findMyId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "findMyId");
}

id objc_msgSend_fineKoreaRegion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fineKoreaRegion");
}

id objc_msgSend_finishTasksAndInvalidate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finishTasksAndInvalidate");
}

id objc_msgSend_finishWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finishWithError:");
}

id objc_msgSend_finishWithNoResult(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finishWithNoResult");
}

id objc_msgSend_finishWithResult_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finishWithResult:");
}

id objc_msgSend_finishedTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finishedTimer");
}

id objc_msgSend_firmwareRevision(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firmwareRevision");
}

id objc_msgSend_firmwareVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firmwareVersion");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstObject");
}

id objc_msgSend_firstRetryInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstRetryInterval");
}

id objc_msgSend_fixFMIPAuthTokenShouldForce_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fixFMIPAuthTokenShouldForce:");
}

id objc_msgSend_flattenedArrayFromObject_parentIndices_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flattenedArrayFromObject:parentIndices:");
}

id objc_msgSend_flavorForFeature_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flavorForFeature:");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatValue");
}

id objc_msgSend_floor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floor");
}

id objc_msgSend_flushLocations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flushLocations");
}

id objc_msgSend_fm_MACAddressString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_MACAddressString");
}

id objc_msgSend_fm_commaSeparatedString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_commaSeparatedString");
}

id objc_msgSend_fm_dateFromEpoch_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_dateFromEpoch:");
}

id objc_msgSend_fm_epoch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_epoch");
}

id objc_msgSend_fm_epochObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_epochObject");
}

id objc_msgSend_fm_filter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_filter:");
}

id objc_msgSend_fm_flattenedArrayWithParentIndices_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_flattenedArrayWithParentIndices:");
}

id objc_msgSend_fm_genericError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_genericError");
}

id objc_msgSend_fm_hexString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_hexString");
}

id objc_msgSend_fm_isEqualToNumber_withPrecision_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_isEqualToNumber:withPrecision:");
}

id objc_msgSend_fm_isFileNotFoundError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_isFileNotFoundError");
}

id objc_msgSend_fm_logID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_logID");
}

id objc_msgSend_fm_nullToNil(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_nullToNil");
}

id objc_msgSend_fm_preferencesPathURLForDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_preferencesPathURLForDomain:");
}

id objc_msgSend_fm_safeAddObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_safeAddObject:");
}

id objc_msgSend_fm_safeSetObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_safeSetObject:forKey:");
}

id objc_msgSend_fm_safelyMapKey_toObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_safelyMapKey:toObject:");
}

id objc_msgSend_fm_safelySetObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_safelySetObject:forKey:");
}

id objc_msgSend_fm_sha256Hash(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_sha256Hash");
}

id objc_msgSend_fm_stringByReplacingNonBreakingSpaces(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fm_stringByReplacingNonBreakingSpaces");
}

id objc_msgSend_fmdXPCListener(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmdXPCListener");
}

id objc_msgSend_fmd_localizedString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmd_localizedString");
}

id objc_msgSend_fmd_localizedStringInTable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmd_localizedStringInTable:");
}

id objc_msgSend_fmipACAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmipACAccount");
}

id objc_msgSend_fmipAccountInfoWithTokens_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmipAccountInfoWithTokens:");
}

id objc_msgSend_fmipAuthToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmipAuthToken");
}

id objc_msgSend_fmipConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmipConfiguration");
}

id objc_msgSend_fmipDisableContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmipDisableContext");
}

id objc_msgSend_fmipEnableContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmipEnableContext");
}

id objc_msgSend_fmipRegisterInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmipRegisterInfo");
}

id objc_msgSend_fmipState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmipState");
}

id objc_msgSend_fmipStateChangeCriteria(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fmipStateChangeCriteria");
}

id objc_msgSend_force(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "force");
}

id objc_msgSend_forceBioLockoutForAllUsersWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceBioLockoutForAllUsersWithError:");
}

id objc_msgSend_forceConnectToAccessory_info_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceConnectToAccessory:info:withCompletion:");
}

id objc_msgSend_forceConnection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceConnection");
}

id objc_msgSend_forcePublishOndemandLocationIfNeeded_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forcePublishOndemandLocationIfNeeded:");
}

id objc_msgSend_forcePushOndemandLocationQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forcePushOndemandLocationQueue");
}

id objc_msgSend_forcePushOndemandlocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forcePushOndemandlocation");
}

id objc_msgSend_forceShallowLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceShallowLocationManager");
}

id objc_msgSend_forceUpdateAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceUpdateAccessory:");
}

id objc_msgSend_forceUserAuthForiCloudAccountForApp_message_really_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceUserAuthForiCloudAccountForApp:message:really:withCompletion:");
}

id objc_msgSend_future(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "future");
}

id objc_msgSend_futureForCommandId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "futureForCommandId:");
}

id objc_msgSend_futuresByCommandId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "futuresByCommandId");
}

id objc_msgSend_generateAssetURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "generateAssetURL");
}

id objc_msgSend_geoLocatableLocationTypeForLocationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "geoLocatableLocationTypeForLocationType:");
}

id objc_msgSend_getAccessoriesWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAccessoriesWithCompletion:");
}

id objc_msgSend_getAccessoryControllerForFeature_flavor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAccessoryControllerForFeature:flavor:");
}

id objc_msgSend_getAccessoryControllerForFeature_flavor_withDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAccessoryControllerForFeature:flavor:withDelegate:");
}

id objc_msgSend_getAccessoryProxyForId_withDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAccessoryProxyForId:withDelegate:");
}

id objc_msgSend_getActivePairedDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getActivePairedDevice");
}

id objc_msgSend_getAllDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAllDevices");
}

id objc_msgSend_getAllDevicesWithArchivedAltAccountDevicesMatching_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAllDevicesWithArchivedAltAccountDevicesMatching:");
}

id objc_msgSend_getAllExtensions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAllExtensions");
}

id objc_msgSend_getAllTasksWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAllTasksWithCompletionHandler:");
}

id objc_msgSend_getLocalPairingDataWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getLocalPairingDataWithCompletion:");
}

id objc_msgSend_getLocationFor_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getLocationFor:withCompletion:");
}

id objc_msgSend_getPairedDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getPairedDevices");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getStyleForAccessory_info_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getStyleForAccessory:info:withCompletion:");
}

id objc_msgSend_gracePeriod(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gracePeriod");
}

id objc_msgSend_groupByKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "groupByKey");
}

id objc_msgSend_groupValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "groupValue");
}

id objc_msgSend_handleActivity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleActivity");
}

id objc_msgSend_handleAlertAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleAlertAction:");
}

id objc_msgSend_handleCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleCommand");
}

id objc_msgSend_handleRatchetError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleRatchetError:");
}

id objc_msgSend_handleRequestsOfType_withHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleRequestsOfType:withHandler:");
}

id objc_msgSend_hardwareRevision(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hardwareRevision");
}

id objc_msgSend_hasArrivalDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasArrivalDate");
}

id objc_msgSend_hasAttemptedLoad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasAttemptedLoad");
}

id objc_msgSend_hasCellularCapability(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasCellularCapability");
}

id objc_msgSend_hasDepartureDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasDepartureDate");
}

id objc_msgSend_hasNFC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasNFC");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasSecureElement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasSecureElement");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hash");
}

id objc_msgSend_headAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headAction");
}

id objc_msgSend_headbandType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headbandType");
}

id objc_msgSend_heartbeatLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "heartbeatLocationManager");
}

id objc_msgSend_heartbeatPublish(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "heartbeatPublish");
}

id objc_msgSend_hexString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hexString");
}

id objc_msgSend_historicalLocationForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "historicalLocationForAccessory:");
}

id objc_msgSend_horizontalAccuracy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "horizontalAccuracy");
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "host");
}

id objc_msgSend_hostportOverride(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hostportOverride");
}

id objc_msgSend_housingColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "housingColor");
}

id objc_msgSend_httpRequestHeaders(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "httpRequestHeaders");
}

id objc_msgSend_httpResponseBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "httpResponseBody");
}

id objc_msgSend_httpResponseError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "httpResponseError");
}

id objc_msgSend_httpResponseHeaders(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "httpResponseHeaders");
}

id objc_msgSend_httpResponseStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "httpResponseStatus");
}

id objc_msgSend_iCloudACAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "iCloudACAccount");
}

id objc_msgSend_iCloudAuthToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "iCloudAuthToken");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identifier");
}

id objc_msgSend_identifierBLEDevice_other_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identifierBLEDevice:other:");
}

id objc_msgSend_identities_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identities:");
}

id objc_msgSend_identityCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identityCommand");
}

id objc_msgSend_identityDeviceInfoForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identityDeviceInfoForAccount:");
}

id objc_msgSend_identityURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identityURL");
}

id objc_msgSend_identity_wait_queue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identity_wait_queue");
}

id objc_msgSend_idsDeviceID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "idsDeviceID");
}

id objc_msgSend_idsManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "idsManager");
}

id objc_msgSend_imei(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imei");
}

id objc_msgSend_imei2(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imei2");
}

id objc_msgSend_importedAosnotifydData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "importedAosnotifydData");
}

id objc_msgSend_inCase(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inCase");
}

id objc_msgSend_inCaseStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inCaseStatus");
}

id objc_msgSend_inEar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inEar");
}

id objc_msgSend_inEarDetectionTimeout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inEarDetectionTimeout");
}

id objc_msgSend_inEarStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inEarStatus");
}

id objc_msgSend_inEarTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inEarTimer");
}

id objc_msgSend_inFieldCollectionReceipt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inFieldCollectionReceipt:");
}

id objc_msgSend_inProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inProgress");
}

id objc_msgSend_inTestingMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inTestingMode");
}

id objc_msgSend_includeDeviceState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "includeDeviceState");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_info(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "info");
}

id objc_msgSend_infoAtStartup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoAtStartup");
}

id objc_msgSend_infoChangeQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoChangeQueue");
}

id objc_msgSend_infoForFeature_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoForFeature:");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "init");
}

id objc_msgSend_initFileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initFileURLWithPath:isDirectory:");
}

id objc_msgSend_initSingleton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initSingleton");
}

id objc_msgSend_initWithAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccessory:");
}

id objc_msgSend_initWithAccessory_accessoryRegistry_channels_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccessory:accessoryRegistry:channels:");
}

id objc_msgSend_initWithAccessory_locator_event_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccessory:locator:event:completion:");
}

id objc_msgSend_initWithAccessory_unregisterToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccessory:unregisterToken:");
}

id objc_msgSend_initWithAccessoryInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccessoryInfo:");
}

id objc_msgSend_initWithAccessoryRegistry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccessoryRegistry:");
}

id objc_msgSend_initWithAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:");
}

id objc_msgSend_initWithAccount_accessory_cause_force_serverInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:accessory:cause:force:serverInteractionController:");
}

id objc_msgSend_initWithAccount_accessory_requiresConnectivity_serverInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:accessory:requiresConnectivity:serverInteractionController:");
}

id objc_msgSend_initWithAccount_accessoryLocations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:accessoryLocations:");
}

id objc_msgSend_initWithAccount_currentLocation_trackedLocations_locationTracker_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:currentLocation:trackedLocations:locationTracker:");
}

id objc_msgSend_initWithAccount_dataUpdateCommand_ackURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:dataUpdateCommand:ackURL:");
}

id objc_msgSend_initWithAccount_device_otherDevices_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:device:otherDevices:");
}

id objc_msgSend_initWithAccount_locateCommand_ackURL_cmdStatusCode_cmdStatusMessage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:locateCommand:ackURL:cmdStatusCode:cmdStatusMessage:");
}

id objc_msgSend_initWithAccount_location_finalLocation_reason_accuracyChange_cacheValidityDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:location:finalLocation:reason:accuracyChange:cacheValidityDuration:");
}

id objc_msgSend_initWithAccount_messageCommand_cmdStatusCode_ackURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:messageCommand:cmdStatusCode:ackURL:");
}

id objc_msgSend_initWithAccount_pairingCheckRequestInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:pairingCheckRequestInfo:");
}

id objc_msgSend_initWithAccount_registerCommand_ackURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:registerCommand:ackURL:");
}

id objc_msgSend_initWithAccount_registerRequestInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:registerRequestInfo:");
}

id objc_msgSend_initWithAccount_registry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:registry:");
}

id objc_msgSend_initWithAccount_registry_accessoryTypes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:registry:accessoryTypes:");
}

id objc_msgSend_initWithAccount_registry_accessoryTypes_serverInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:registry:accessoryTypes:serverInteractionController:");
}

id objc_msgSend_initWithAccount_registry_serverInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:registry:serverInteractionController:");
}

id objc_msgSend_initWithAccount_shutdownActivityPending_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:shutdownActivityPending:");
}

id objc_msgSend_initWithAccount_shutdownActivityPending_serverInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:shutdownActivityPending:serverInteractionController:");
}

id objc_msgSend_initWithAccount_token_andMissingDeviceInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:token:andMissingDeviceInfo:");
}

id objc_msgSend_initWithAccount_trackCommand_ackURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:trackCommand:ackURL:");
}

id objc_msgSend_initWithAccount_updateRequestInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccount:updateRequestInfo:");
}

id objc_msgSend_initWithAccountAndError_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccountAndError:error:");
}

id objc_msgSend_initWithAction_executeAt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAction:executeAt:");
}

id objc_msgSend_initWithAction_id_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAction:id:");
}

id objc_msgSend_initWithAction_usingCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAction:usingCompletion:");
}

id objc_msgSend_initWithAddress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAddress:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithArray_copyItems_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithArray:copyItems:");
}

id objc_msgSend_initWithAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAsset:");
}

id objc_msgSend_initWithAsset_serverInteractionController_assetRegistry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAsset:serverInteractionController:assetRegistry:");
}

id objc_msgSend_initWithBLEDevice_other_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBLEDevice:other:");
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBase64EncodedString:options:");
}

id objc_msgSend_initWithBluetoothManagerDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBluetoothManagerDevice:");
}

id objc_msgSend_initWithBundleIDs_states_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBundleIDs:states:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithChannels_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithChannels:delegate:");
}

id objc_msgSend_initWithCipher_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCipher:");
}

id objc_msgSend_initWithClientIdentifier_isThisDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithClientIdentifier:isThisDevice:");
}

id objc_msgSend_initWithCompanionRegistry_unregisterTokenStore_serverInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCompanionRegistry:unregisterTokenStore:serverInteractionController:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConfiguration_delegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithConfiguration:delegate:delegateQueue:");
}

id objc_msgSend_initWithConfiguration_exportedObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithConfiguration:exportedObject:");
}

id objc_msgSend_initWithConfigurationInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithConfigurationInfo:");
}

id objc_msgSend_initWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentsOfURL:options:error:");
}

id objc_msgSend_initWithContextKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContextKey:");
}

id objc_msgSend_initWithContextKey_contextUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContextKey:contextUUID:");
}

id objc_msgSend_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:");
}

id objc_msgSend_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithData_usingCollectionObjectKeyType_andCollectionObjectClass_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithData:usingCollectionObjectKeyType:andCollectionObjectClass:error:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDescription_andTimeout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDescription:andTimeout:");
}

id objc_msgSend_initWithDeviceContextGenerator_deviceInfoGenerator_serverContextGenerator_requestHeaderGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDeviceContextGenerator:deviceInfoGenerator:serverContextGenerator:requestHeaderGenerator:");
}

id objc_msgSend_initWithDeviceIdentifier_ephemeralToken_dsid_callingClient_mode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDeviceIdentifier:ephemeralToken:dsid:callingClient:mode:");
}

id objc_msgSend_initWithDeviceUDID_unregisterToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDeviceUDID:unregisterToken:");
}

id objc_msgSend_initWithDeviceVendor_deviceProductId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDeviceVendor:deviceProductId:");
}

id objc_msgSend_initWithDeviceVendor_deviceProductId_profile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDeviceVendor:deviceProductId:profile:");
}

id objc_msgSend_initWithDeviceVendor_deviceProductId_profile_assets_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDeviceVendor:deviceProductId:profile:assets:");
}

id objc_msgSend_initWithDict_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDict:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDictionary_assetRegistry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDictionary:assetRegistry:");
}

id objc_msgSend_initWithDiscovery_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDiscovery:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDomain_pairingID_pairingDataStore_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDomain:pairingID:pairingDataStore:");
}

id objc_msgSend_initWithEffectiveBundle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEffectiveBundle:");
}

id objc_msgSend_initWithEffectiveBundle_delegate_onQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEffectiveBundle:delegate:onQueue:");
}

id objc_msgSend_initWithEligibleDevices_devicesInRepairMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEligibleDevices:devicesInRepairMode:");
}

id objc_msgSend_initWithEnvironmentName_launchOnDemandPort_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEnvironmentName:launchOnDemandPort:");
}

id objc_msgSend_initWithEventName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEventName:");
}

id objc_msgSend_initWithExtAccessoryInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithExtAccessoryInfo:");
}

id objc_msgSend_initWithFMDCoder_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFMDCoder:error:");
}

id objc_msgSend_initWithFileURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFileURL:");
}

id objc_msgSend_initWithFileURL_lastModified_etag_type_url_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFileURL:lastModified:etag:type:url:");
}

id objc_msgSend_initWithFireDate_serviceIdentifier_target_selector_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFireDate:serviceIdentifier:target:selector:userInfo:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithInt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInt:");
}

id objc_msgSend_initWithKeychainItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithKeychainItem:");
}

id objc_msgSend_initWithLatitude_longitude_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLatitude:longitude:");
}

id objc_msgSend_initWithLocalFindableAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocalFindableAccessory:");
}

id objc_msgSend_initWithLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocation:");
}

id objc_msgSend_initWithLocation_eventType_positionType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocation:eventType:positionType:");
}

id objc_msgSend_initWithLocation_motion_publishReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocation:motion:publishReason:");
}

id objc_msgSend_initWithLocation_timeStamp_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocation:timeStamp:");
}

id objc_msgSend_initWithLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocationManager:");
}

id objc_msgSend_initWithLocationTracker_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocationTracker:");
}

id objc_msgSend_initWithLockName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLockName:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithManager:");
}

id objc_msgSend_initWithNRDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithNRDevice:");
}

id objc_msgSend_initWithName_active_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithName:active:");
}

id objc_msgSend_initWithName_gracePeriod_cleanupTask_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithName:gracePeriod:cleanupTask:");
}

id objc_msgSend_initWithName_values_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithName:values:");
}

id objc_msgSend_initWithObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithObject:");
}

id objc_msgSend_initWithParams_provider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithParams:provider:");
}

id objc_msgSend_initWithPrimaryPublisher_compareToPublishers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPrimaryPublisher:compareToPublishers:");
}

id objc_msgSend_initWithProtobufData_type_isResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProtobufData:type:isResponse:");
}

id objc_msgSend_initWithProvider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:");
}

id objc_msgSend_initWithProvider_activationLockRequestUUID_pscHelloMsg_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:activationLockRequestUUID:pscHelloMsg:");
}

id objc_msgSend_initWithProvider_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:context:");
}

id objc_msgSend_initWithProvider_identityCommand_commandFailureReason_ackURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:identityCommand:commandFailureReason:ackURL:");
}

id objc_msgSend_initWithProvider_identityInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:identityInfo:");
}

id objc_msgSend_initWithProvider_lockCommand_cmdStatusCode_ackURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:lockCommand:cmdStatusCode:ackURL:");
}

id objc_msgSend_initWithProvider_lostCommand_cmdStatusCode_locationServicesStateChanged_ackURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:lostCommand:cmdStatusCode:locationServicesStateChanged:ackURL:");
}

id objc_msgSend_initWithProvider_lostModeExitAuthToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:lostModeExitAuthToken:");
}

id objc_msgSend_initWithProvider_pairingCheckRequestInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:pairingCheckRequestInfo:");
}

id objc_msgSend_initWithProvider_registerRequestInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:registerRequestInfo:");
}

id objc_msgSend_initWithProvider_updateRequestInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:updateRequestInfo:");
}

id objc_msgSend_initWithProvider_wipeCommand_cmdStatusCode_ackURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProvider:wipeCommand:cmdStatusCode:ackURL:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithQueue_timeout_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithQueue:timeout:completion:");
}

id objc_msgSend_initWithReason_force_provider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithReason:force:provider:");
}

id objc_msgSend_initWithRecordName_contextUUID_creationDate_protection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRecordName:contextUUID:creationDate:protection:");
}

id objc_msgSend_initWithRequest_andServerInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRequest:andServerInteractionController:");
}

id objc_msgSend_initWithRequest_retryAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRequest:retryAction:");
}

id objc_msgSend_initWithRootObject_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRootObject:error:");
}

id objc_msgSend_initWithServiceId_minimumVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithServiceId:minimumVersion:");
}

id objc_msgSend_initWithStorageLocation_identifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStorageLocation:identifier:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithSupportDelete_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSupportDelete:");
}

id objc_msgSend_initWithSupportedAccessoryRegistry_accessoryRegistry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSupportedAccessoryRegistry:accessoryRegistry:");
}

id objc_msgSend_initWithSystemSerialNumber_leftSerialNumber_rightSerialNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSystemSerialNumber:leftSerialNumber:rightSerialNumber:");
}

id objc_msgSend_initWithTimeInterval_serviceIdentifier_target_selector_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTimeInterval:serviceIdentifier:target:selector:userInfo:");
}

id objc_msgSend_initWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTimeIntervalSince1970:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithType_locationInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithType:locationInfo:");
}

id objc_msgSend_initWithURL_action_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithURL:action:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUnregisterError_context_deviceClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithUnregisterError:context:deviceClass:");
}

id objc_msgSend_initWithVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithVersion:");
}

id objc_msgSend_initWithVersion_timeoutIntervalInSec_commandID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithVersion:timeoutIntervalInSec:commandID:");
}

id objc_msgSend_initWithVersion_timeoutIntervalInSec_commandID_identityURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithVersion:timeoutIntervalInSec:commandID:identityURL:");
}

id objc_msgSend_initialLaunchProcessing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initialLaunchProcessing");
}

id objc_msgSend_initializationVector(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initializationVector");
}

id objc_msgSend_initialize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initialize");
}

id objc_msgSend_initializeSystemConfig(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initializeSystemConfig");
}

id objc_msgSend_initializeXPC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initializeXPC");
}

id objc_msgSend_initialized(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initialized");
}

id objc_msgSend_initiateLostModeExitAuthForIDSDeviceID_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initiateLostModeExitAuthForIDSDeviceID:withCompletion:");
}

id objc_msgSend_innerAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "innerAction");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerForKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "integerForKey:inDomain:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "integerValue");
}

id objc_msgSend_intentContextKeyForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "intentContextKeyForAccessory:");
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_internationalMobileEquipmentIdentity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "internationalMobileEquipmentIdentity");
}

id objc_msgSend_internationalMobileEquipmentIdentityTwo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "internationalMobileEquipmentIdentityTwo");
}

id objc_msgSend_interruptionLevel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interruptionLevel");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidate");
}

id objc_msgSend_invalidateAndCancel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateAndCancel");
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invertedSet");
}

id objc_msgSend_invokeWithTarget_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invokeWithTarget:");
}

id objc_msgSend_irkData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "irkData");
}

id objc_msgSend_isAccessorySupported_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAccessorySupported:");
}

id objc_msgSend_isAccountHSA2(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAccountHSA2");
}

id objc_msgSend_isActivationLockAllowed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isActivationLockAllowed");
}

id objc_msgSend_isActivationLocked(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isActivationLocked");
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isActive");
}

id objc_msgSend_isAutomationActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAutomationActive");
}

id objc_msgSend_isBeneficiaryForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBeneficiaryForAccount:");
}

id objc_msgSend_isBuddyDone(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBuddyDone");
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCancelled");
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isConnected");
}

id objc_msgSend_isDiscoveryActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDiscoveryActive");
}

id objc_msgSend_isDiscoveryActive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDiscoveryActive:");
}

id objc_msgSend_isEnabledForDataclass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEnabledForDataclass:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToData:");
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToDictionary:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExecuting(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isExecuting");
}

id objc_msgSend_isFMIPLocationServicesEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFMIPLocationServicesEnabled");
}

id objc_msgSend_isFeatureEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFeatureEnabled");
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFinished");
}

id objc_msgSend_isFirstRunAfterBoot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFirstRunAfterBoot");
}

id objc_msgSend_isHandlerRegisteredForDarwinNotification_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isHandlerRegisteredForDarwinNotification:");
}

id objc_msgSend_isInternalBuild(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isInternalBuild");
}

id objc_msgSend_isKnownFMIPAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isKnownFMIPAccount:");
}

id objc_msgSend_isLocationServicesCapable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLocationServicesCapable");
}

id objc_msgSend_isLocationServicesEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLocationServicesEnabled");
}

id objc_msgSend_isLocationServicesEnabledForShareMyLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLocationServicesEnabledForShareMyLocation");
}

id objc_msgSend_isLocationValid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLocationValid");
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLocked");
}

id objc_msgSend_isLocking(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLocking");
}

id objc_msgSend_isLowPowerModeEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLowPowerModeEnabled");
}

id objc_msgSend_isMF4i(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMF4i");
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMainThread");
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isMonitoring(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMonitoring");
}

id objc_msgSend_isMonitoringPendingDeviceIdentity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMonitoringPendingDeviceIdentity");
}

id objc_msgSend_isNetworkUp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isNetworkUp");
}

id objc_msgSend_isOfflineFindingEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isOfflineFindingEnabled");
}

id objc_msgSend_isPasscodeChangeRestricted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPasscodeChangeRestricted");
}

id objc_msgSend_isPasscodeModificationAllowed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPasscodeModificationAllowed");
}

id objc_msgSend_isPasscodeSet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPasscodeSet");
}

id objc_msgSend_isPaused(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPaused");
}

id objc_msgSend_isPreviouslyHandledCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPreviouslyHandledCommand");
}

id objc_msgSend_isProvisionedForDataclass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isProvisionedForDataclass:");
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isReady");
}

id objc_msgSend_isRestrictedLocationWithLatitude_longitude_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRestrictedLocationWithLatitude:longitude:");
}

id objc_msgSend_isRestrictedSKU(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRestrictedSKU");
}

id objc_msgSend_isRoseCapable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRoseCapable");
}

id objc_msgSend_isRunning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRunning");
}

id objc_msgSend_isRunningInRecovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRunningInRecovery");
}

id objc_msgSend_isStatusBarIconEnabledForLocationEntityClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isStatusBarIconEnabledForLocationEntityClass:");
}

id objc_msgSend_isTemporaryPaired(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTemporaryPaired");
}

id objc_msgSend_isThisDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isThisDevice");
}

id objc_msgSend_isTinkerPaired(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTinkerPaired");
}

id objc_msgSend_isTokenDictionaryValid_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTokenDictionaryValid:error:");
}

id objc_msgSend_isTrackingOn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTrackingOn");
}

id objc_msgSend_isUnittest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isUnittest");
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isValid");
}

id objc_msgSend_isValidObject_usingProtocols_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isValidObject:usingProtocols:");
}

id objc_msgSend_itemForAccount_service_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "itemForAccount:service:error:");
}

id objc_msgSend_janitor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "janitor");
}

id objc_msgSend_keepAlive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keepAlive");
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "key");
}

id objc_msgSend_keychainLookupKeyForIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keychainLookupKeyForIdentifier:");
}

id objc_msgSend_lastActiveTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastActiveTime");
}

id objc_msgSend_lastCompletedIntentDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastCompletedIntentDictionary");
}

id objc_msgSend_lastDiscoveryDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastDiscoveryDate");
}

id objc_msgSend_lastFallbackRetryTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastFallbackRetryTime");
}

id objc_msgSend_lastIdentityTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastIdentityTime");
}

id objc_msgSend_lastKeyRollDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastKeyRollDate");
}

id objc_msgSend_lastKnownDeviceMotion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastKnownDeviceMotion");
}

id objc_msgSend_lastKnownLocationDeviceInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastKnownLocationDeviceInfo");
}

id objc_msgSend_lastLaunchVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastLaunchVersion");
}

id objc_msgSend_lastLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastLocation");
}

id objc_msgSend_lastLoggedInDsid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastLoggedInDsid");
}

id objc_msgSend_lastLostModeKeyRollTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastLostModeKeyRollTime");
}

id objc_msgSend_lastModified(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastModified");
}

id objc_msgSend_lastModifyDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastModifyDate");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastOnDemandPublishTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastOnDemandPublishTime");
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPathComponent");
}

id objc_msgSend_lastPublishedAccuracy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPublishedAccuracy");
}

id objc_msgSend_lastPublishedLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPublishedLocation");
}

id objc_msgSend_lastPublishedTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPublishedTime");
}

id objc_msgSend_lastPublishedVisit(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPublishedVisit");
}

id objc_msgSend_lastReceivedLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastReceivedLocation");
}

id objc_msgSend_lastRetryTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastRetryTime");
}

id objc_msgSend_lastRetryType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastRetryType");
}

id objc_msgSend_lastScheduledJanitorDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastScheduledJanitorDate");
}

id objc_msgSend_lastShallowPublishTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastShallowPublishTime");
}

id objc_msgSend_lastStatusUpdateTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastStatusUpdateTime");
}

id objc_msgSend_lastUnregisterFailedTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastUnregisterFailedTime");
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_latitude(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "latitude");
}

id objc_msgSend_launchDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "launchDate");
}

id objc_msgSend_launchSetupModuleWithInfo_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "launchSetupModuleWithInfo:withCompletion:");
}

id objc_msgSend_leewayTimeInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "leewayTimeInterval");
}

id objc_msgSend_leftBudSerialNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "leftBudSerialNumber");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "length");
}

id objc_msgSend_level(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "level");
}

id objc_msgSend_lidClosed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lidClosed");
}

id objc_msgSend_lidClosedStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lidClosedStatus");
}

id objc_msgSend_listner(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "listner");
}

id objc_msgSend_liveLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "liveLocationManager");
}

id objc_msgSend_loadAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadAccount");
}

id objc_msgSend_loadLogs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadLogs");
}

id objc_msgSend_locManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locManager");
}

id objc_msgSend_localFindableAccessory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localFindableAccessory");
}

id objc_msgSend_locale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locale");
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localeIdentifier");
}

id objc_msgSend_localizations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizations");
}

id objc_msgSend_localizedBeginBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedBeginBody");
}

id objc_msgSend_localizedBeginTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedBeginTitle");
}

id objc_msgSend_localizedCalloutReason(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedCalloutReason");
}

id objc_msgSend_localizedCaseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedCaseInsensitiveCompare:");
}

id objc_msgSend_localizedCountdownBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedCountdownBody");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_localizedDescriptionOfCurrentPasscodeConstraints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedDescriptionOfCurrentPasscodeConstraints");
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedFailureReason");
}

id objc_msgSend_localizedReason(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedReason");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringForKey_value_table_localization_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedStringForKey:value:table:localization:");
}

id objc_msgSend_locateCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locateCommand");
}

id objc_msgSend_locateNotificationsEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locateNotificationsEnabled");
}

id objc_msgSend_locateParams(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locateParams");
}

id objc_msgSend_locateStats(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locateStats");
}

id objc_msgSend_locateTimeout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locateTimeout");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "location");
}

id objc_msgSend_locationDeviceInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationDeviceInfo");
}

id objc_msgSend_locationDeviceInfoForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationDeviceInfoForAccount:");
}

id objc_msgSend_locationDeviceInfoForAccount_accessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationDeviceInfoForAccount:accessory:");
}

id objc_msgSend_locationDeviceInfoOverrides(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationDeviceInfoOverrides");
}

id objc_msgSend_locationForAccessory_locator_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationForAccessory:locator:completion:");
}

id objc_msgSend_locationInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationInfo");
}

id objc_msgSend_locationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationManager");
}

id objc_msgSend_locationManagerWeakWrapper(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationManagerWeakWrapper");
}

id objc_msgSend_locationManagers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationManagers");
}

id objc_msgSend_locationMessage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationMessage");
}

id objc_msgSend_locationMonitor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationMonitor");
}

id objc_msgSend_locationPublishQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationPublishQueue");
}

id objc_msgSend_locationPublisher(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationPublisher");
}

id objc_msgSend_locationPublisherWithParams_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationPublisherWithParams:");
}

id objc_msgSend_locationPurgeTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationPurgeTimer");
}

id objc_msgSend_locationPurgeTimerXPCTransactionName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationPurgeTimerXPCTransactionName");
}

id objc_msgSend_locationServicesAssertion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationServicesAssertion");
}

id objc_msgSend_locationServicesEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationServicesEnabled");
}

id objc_msgSend_locationServicesStateChanged(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationServicesStateChanged");
}

id objc_msgSend_locationStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationStore");
}

id objc_msgSend_locationThrottleRatio(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationThrottleRatio");
}

id objc_msgSend_locationThrottleTimeIntervalForAccessory_speed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationThrottleTimeIntervalForAccessory:speed:");
}

id objc_msgSend_locationTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationTitle");
}

id objc_msgSend_locationTracker(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationTracker");
}

id objc_msgSend_locationTrackerType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationTrackerType");
}

id objc_msgSend_locationType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationType");
}

id objc_msgSend_locator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locator");
}

id objc_msgSend_locatorForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locatorForAccessory:");
}

id objc_msgSend_locatorPublisher(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locatorPublisher");
}

id objc_msgSend_locatorRunning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locatorRunning");
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lock");
}

id objc_msgSend_lockCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lockCommand");
}

id objc_msgSend_lockDeviceImmediately_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lockDeviceImmediately:");
}

id objc_msgSend_lockScreenFacetimeCapable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lockScreenFacetimeCapable");
}

id objc_msgSend_lockScreenMessage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lockScreenMessage");
}

id objc_msgSend_lockScreenOwnerNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lockScreenOwnerNumber");
}

id objc_msgSend_lockStateNotifyToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lockStateNotifyToken");
}

id objc_msgSend_logEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logEvent:");
}

id objc_msgSend_logEvent_toFacilitiesNamed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logEvent:toFacilitiesNamed:");
}

id objc_msgSend_logLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logLocation:");
}

id objc_msgSend_logPublishedLocation_reason_publisher_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logPublishedLocation:reason:publisher:");
}

id objc_msgSend_logQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logQueue");
}

id objc_msgSend_loggedEvents(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loggedEvents");
}

id objc_msgSend_loggedEventsForEventName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loggedEventsForEventName:");
}

id objc_msgSend_logs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logs");
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "longLongValue");
}

id objc_msgSend_longTermLocationExpiryTimeIntervalForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "longTermLocationExpiryTimeIntervalForAccessory:");
}

id objc_msgSend_longTermlocationExpiryTimeInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "longTermlocationExpiryTimeInterval");
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "longValue");
}

id objc_msgSend_longitude(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "longitude");
}

id objc_msgSend_lostCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lostCommand");
}

id objc_msgSend_lostModeDataArchiver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lostModeDataArchiver");
}

id objc_msgSend_lostModeEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lostModeEnabled");
}

id objc_msgSend_lostModeExitAuthForPairedDeviceID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lostModeExitAuthForPairedDeviceID");
}

id objc_msgSend_lostModeInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lostModeInfo");
}

id objc_msgSend_lostModeIsActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lostModeIsActive");
}

id objc_msgSend_lostModePubKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lostModePubKey");
}

id objc_msgSend_lostModeStorageLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lostModeStorageLocation");
}

id objc_msgSend_lostModeType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lostModeType");
}

id objc_msgSend_lowBatteryLocateEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lowBatteryLocateEnabled");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_macAddress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "macAddress");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mainRunLoop");
}

id objc_msgSend_majorClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "majorClass");
}

id objc_msgSend_majorDeviceClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "majorDeviceClass");
}

id objc_msgSend_makeProviderActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeProviderActive");
}

id objc_msgSend_makeProviderInactive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeProviderInactive");
}

id objc_msgSend_manager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "manager");
}

id objc_msgSend_markPairedDeviceWithUdid_asMissingUsingToken_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "markPairedDeviceWithUdid:asMissingUsingToken:withCompletion:");
}

id objc_msgSend_maskedAppleID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maskedAppleID");
}

id objc_msgSend_maskedAppleIDValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maskedAppleIDValue");
}

id objc_msgSend_maxConsecutiveNetworkNotificationRetries(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxConsecutiveNetworkNotificationRetries");
}

id objc_msgSend_maxDelayInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxDelayInterval");
}

id objc_msgSend_maxLocations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxLocations");
}

id objc_msgSend_maxNonNetworkRelatedRetries(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxNonNetworkRelatedRetries");
}

id objc_msgSend_maxRetryInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxRetryInterval");
}

id objc_msgSend_maxTimerBasedNetworkRetries(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxTimerBasedNetworkRetries");
}

id objc_msgSend_maximumHistoricalLocations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumHistoricalLocations");
}

id objc_msgSend_maximumHistoricalLocationsForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumHistoricalLocationsForAccessory:");
}

id objc_msgSend_meid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "meid");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "message");
}

id objc_msgSend_messageCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "messageCommand");
}

id objc_msgSend_metaDataRecord(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metaDataRecord");
}

id objc_msgSend_metadataModsQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metadataModsQueue");
}

id objc_msgSend_methodSignatureForSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "methodSignatureForSelector:");
}

id objc_msgSend_migratableAccessoriesByIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "migratableAccessoriesByIdentifier");
}

id objc_msgSend_migratableDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "migratableDevices");
}

id objc_msgSend_migratableDevicesRequiringConsent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "migratableDevicesRequiringConsent");
}

id objc_msgSend_migrateAosnotifydStuff(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "migrateAosnotifydStuff");
}

id objc_msgSend_migrateFromVersion_toVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "migrateFromVersion:toVersion:");
}

id objc_msgSend_migrationConfirmed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "migrationConfirmed");
}

id objc_msgSend_migrationPossible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "migrationPossible");
}

id objc_msgSend_minDistanceBetweenLocations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minDistanceBetweenLocations");
}

id objc_msgSend_minDistanceBetweenPublish(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minDistanceBetweenPublish");
}

id objc_msgSend_minSLCAccuracyThreshold(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minSLCAccuracyThreshold");
}

id objc_msgSend_minTimeBetweenLocations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minTimeBetweenLocations");
}

id objc_msgSend_minTimeBetweenPublish(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minTimeBetweenPublish");
}

id objc_msgSend_minTimeBetweenServerCalls(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minTimeBetweenServerCalls");
}

id objc_msgSend_minTimeBetweenVisitPublish(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minTimeBetweenVisitPublish");
}

id objc_msgSend_minimumDistance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minimumDistance");
}

id objc_msgSend_minorClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minorClass");
}

id objc_msgSend_minorDeviceClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minorDeviceClass");
}

id objc_msgSend_missingDeviceInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "missingDeviceInfo");
}

id objc_msgSend_mlbSerialNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mlbSerialNumber");
}

id objc_msgSend_mmeClientInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mmeClientInfo");
}

id objc_msgSend_mobileEquipmentIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mobileEquipmentIdentifier");
}

id objc_msgSend_mockBluetoothManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mockBluetoothManager");
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mode");
}

id objc_msgSend_monitorAndSendDeviceIdentityLaterWithIdentityInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "monitorAndSendDeviceIdentityLaterWithIdentityInfo:");
}

id objc_msgSend_motionActivityManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "motionActivityManager");
}

id objc_msgSend_motionInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "motionInfo");
}

id objc_msgSend_motionMonitor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "motionMonitor");
}

id objc_msgSend_moveItemAtPath_toPath_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveItemAtPath:toPath:error:");
}

id objc_msgSend_msgText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "msgText");
}

id objc_msgSend_msgTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "msgTitle");
}

id objc_msgSend_mteStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mteStatus");
}

id objc_msgSend_mteStatusError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mteStatusError");
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutableBytes");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_mutableDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutableDictionary");
}

id objc_msgSend_muted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "muted");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "name");
}

id objc_msgSend_nanoMigrator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nanoMigrator");
}

id objc_msgSend_networkAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "networkAction");
}

id objc_msgSend_newAssertionForBundle_withReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAssertionForBundle:withReason:");
}

id objc_msgSend_newAssetForURL_type_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAssetForURL:type:");
}

id objc_msgSend_newAssetWithDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAssetWithDictionary:");
}

id objc_msgSend_newDiscovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newDiscovery");
}

id objc_msgSend_newLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newLocationManager");
}

id objc_msgSend_nextActionIdNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextActionIdNumber");
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextObject");
}

id objc_msgSend_nextPublishTimerFireDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextPublishTimerFireDate");
}

id objc_msgSend_nextRegisterDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextRegisterDate");
}

id objc_msgSend_nextRetryTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextRetryTime");
}

id objc_msgSend_nextRetryType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextRetryType");
}

id objc_msgSend_nextScheduledJanitorDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextScheduledJanitorDate");
}

id objc_msgSend_nonAuthenticatedHostNameInURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonAuthenticatedHostNameInURL");
}

id objc_msgSend_nonAuthenticatedSchemeInURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonAuthenticatedSchemeInURL");
}

id objc_msgSend_nonAuthenticatedServiceInURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonAuthenticatedServiceInURL");
}

id objc_msgSend_notBackedUpDataArchiver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notBackedUpDataArchiver");
}

id objc_msgSend_notifWhenDetachedListVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifWhenDetachedListVersion");
}

id objc_msgSend_notificationIdbyAccessoryIds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notificationIdbyAccessoryIds");
}

id objc_msgSend_notifyCompletionWithStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyCompletionWithStatus:");
}

id objc_msgSend_notifyOnShutdownSoon(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyOnShutdownSoon");
}

id objc_msgSend_notifyWhenDetachedAccessoryIds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyWhenDetachedAccessoryIds");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "now");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "null");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithUnsignedChar:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_oauthToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "oauthToken");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForCaseInsensitiveStringKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForCaseInsensitiveStringKey:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForKey:inDomain:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectType");
}

id objc_msgSend_objectTypeKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectTypeKey");
}

id objc_msgSend_objectTypeKeys(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectTypeKeys");
}

id objc_msgSend_octStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "octStatus");
}

id objc_msgSend_octStatusError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "octStatusError");
}

id objc_msgSend_offlineFindingInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "offlineFindingInfo");
}

id objc_msgSend_offlineFindingStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "offlineFindingStatus");
}

id objc_msgSend_okButtonKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "okButtonKey");
}

id objc_msgSend_oldLowBatteryState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "oldLowBatteryState");
}

id objc_msgSend_onCompletionHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onCompletionHandler");
}

id objc_msgSend_onDemandPublishThreshold(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onDemandPublishThreshold");
}

id objc_msgSend_onHeadStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onHeadStatus");
}

id objc_msgSend_ondemandLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ondemandLocationManager");
}

id objc_msgSend_oneTimeRemoveAuthToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "oneTimeRemoveAuthToken");
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openSensitiveURL:withOptions:");
}

id objc_msgSend_openURL_configuration_completionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openURL:configuration:completionHandler:");
}

id objc_msgSend_operationQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "operationQueue");
}

id objc_msgSend_operationTransactionActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "operationTransactionActive");
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "operations");
}

id objc_msgSend_osBuildVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "osBuildVersion");
}

id objc_msgSend_osVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "osVersion");
}

id objc_msgSend_otherDeviceInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "otherDeviceInfo");
}

id objc_msgSend_otherDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "otherDevices");
}

id objc_msgSend_overriddenBuildVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overriddenBuildVersion");
}

id objc_msgSend_overriddenOSVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overriddenOSVersion");
}

id objc_msgSend_overriddenTrackNotifyEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overriddenTrackNotifyEnabled");
}

id objc_msgSend_ownerAuthenticationManagerEraseAllContentsAndSettings(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ownerAuthenticationManagerEraseAllContentsAndSettings");
}

id objc_msgSend_ownerSession(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ownerSession");
}

id objc_msgSend_paired(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paired");
}

id objc_msgSend_pairedAccessories(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pairedAccessories");
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pairedDevices");
}

id objc_msgSend_pairedDevicesSelectorBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pairedDevicesSelectorBlock");
}

id objc_msgSend_pairingCheckRequestInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pairingCheckRequestInfo");
}

id objc_msgSend_pairingCheckToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pairingCheckToken");
}

id objc_msgSend_pairingId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pairingId");
}

id objc_msgSend_passcode_meetsCurrentConstraintsOutError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "passcode:meetsCurrentConstraintsOutError:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "path");
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pendingAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pendingAction");
}

id objc_msgSend_pendingActionKeyForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pendingActionKeyForAccessory:");
}

id objc_msgSend_pendingActionUUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pendingActionUUID");
}

id objc_msgSend_pendingDeviceIdentityMonitor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pendingDeviceIdentityMonitor");
}

id objc_msgSend_pendingLocateAlert(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pendingLocateAlert");
}

id objc_msgSend_pendingSecureMessage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pendingSecureMessage");
}

id objc_msgSend_performAnalytics_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "performAnalytics:");
}

id objc_msgSend_performOnActionCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "performOnActionCompletion:");
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performWipe(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "performWipe");
}

id objc_msgSend_performWithReadLock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "performWithReadLock:");
}

id objc_msgSend_performWithWriteLock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "performWithWriteLock:");
}

id objc_msgSend_performWork(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "performWork");
}

id objc_msgSend_periodicCheckInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "periodicCheckInterval");
}

id objc_msgSend_permittedOperationBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "permittedOperationBlock");
}

id objc_msgSend_persistedValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "persistedValue");
}

id objc_msgSend_petForUserWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "petForUserWithCompletion:");
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "phoneNumber");
}

id objc_msgSend_platform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "platform");
}

id objc_msgSend_playSound(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "playSound");
}

id objc_msgSend_playSoundForAccessory_info_duration_rampUpDuration_channels_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "playSoundForAccessory:info:duration:rampUpDuration:channels:withCompletion:");
}

id objc_msgSend_playSoundRetryCounter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "playSoundRetryCounter");
}

id objc_msgSend_playSoundWithMessage_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "playSoundWithMessage:completion:");
}

id objc_msgSend_playbackChannelNamesForAccessory_commandChannels_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "playbackChannelNamesForAccessory:commandChannels:");
}

id objc_msgSend_playbackChannels(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "playbackChannels");
}

id objc_msgSend_playingSound(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "playingSound");
}

id objc_msgSend_policyExpirationTimes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "policyExpirationTimes");
}

id objc_msgSend_policyExpired_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "policyExpired:");
}

id objc_msgSend_policyManagerQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "policyManagerQueue");
}

id objc_msgSend_policyName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "policyName");
}

id objc_msgSend_populateBatterStatsForCurrentDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "populateBatterStatsForCurrentDevice");
}

id objc_msgSend_populateiCloudAccountInfoIntoAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "populateiCloudAccountInfoIntoAccount:");
}

id objc_msgSend_positionType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "positionType");
}

id objc_msgSend_postConnectionStatusChangeNotification(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "postConnectionStatusChangeNotification");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_powerAssertionDisableWithReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "powerAssertionDisableWithReason:");
}

id objc_msgSend_powerAssertionEnableWithReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "powerAssertionEnableWithReason:");
}

id objc_msgSend_powerAssertionEnableWithReason_timeout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "powerAssertionEnableWithReason:timeout:");
}

id objc_msgSend_powerAssertionEnableWithReason_type_timeout_appliesOnLidClose_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "powerAssertionEnableWithReason:type:timeout:appliesOnLidClose:");
}

id objc_msgSend_powerAssertionName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "powerAssertionName");
}

id objc_msgSend_precision(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "precision");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_prepareForAccessoryType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "prepareForAccessoryType:");
}

id objc_msgSend_primary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "primary");
}

id objc_msgSend_primaryBeacon(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "primaryBeacon");
}

id objc_msgSend_primaryBeaconForBeacons_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "primaryBeaconForBeacons:");
}

id objc_msgSend_primaryPublisher(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "primaryPublisher");
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "priority");
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "processIdentifier");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "processInfo");
}

id objc_msgSend_processJSON_forCodableType_usingFactory_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "processJSON:forCodableType:usingFactory:error:");
}

id objc_msgSend_processObject_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "processObject:error:");
}

id objc_msgSend_processRequests(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "processRequests");
}

id objc_msgSend_processUpdatedLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "processUpdatedLocation:");
}

id objc_msgSend_productId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "productId");
}

id objc_msgSend_productName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "productName");
}

id objc_msgSend_productType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "productType");
}

id objc_msgSend_productVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "productVersion");
}

id objc_msgSend_profile(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "profile");
}

id objc_msgSend_profileForAccessoryIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "profileForAccessoryIdentifier:");
}

id objc_msgSend_profileForBluetoothManagerDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "profileForBluetoothManagerDevice:");
}

id objc_msgSend_profileForProfileName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "profileForProfileName:");
}

id objc_msgSend_protectedContextLock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "protectedContextLock");
}

id objc_msgSend_protectedIDSManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "protectedIDSManager");
}

id objc_msgSend_protection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "protection");
}

id objc_msgSend_protectionSpace(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "protectionSpace");
}

id objc_msgSend_protocolSchemeOverride(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "protocolSchemeOverride");
}

id objc_msgSend_protocols(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "protocols");
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "provider");
}

id objc_msgSend_proxyDeallocationBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "proxyDeallocationBlock");
}

id objc_msgSend_pscError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pscError");
}

id objc_msgSend_pscHelloMsg(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pscHelloMsg");
}

id objc_msgSend_pscSUIURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pscSUIURL");
}

id objc_msgSend_pscSessionRef(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pscSessionRef");
}

id objc_msgSend_publishCriteriaMetBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishCriteriaMetBlock:");
}

id objc_msgSend_publishLocation_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishLocation:completion:");
}

id objc_msgSend_publishLocationToStewie_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishLocationToStewie:");
}

id objc_msgSend_publishOnDemandLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishOnDemandLocation:");
}

id objc_msgSend_publishOneTimeShallowLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishOneTimeShallowLocation:");
}

id objc_msgSend_publishPolicies(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishPolicies");
}

id objc_msgSend_publishPreviouslyReceivedLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishPreviouslyReceivedLocation");
}

id objc_msgSend_publishQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishQueue");
}

id objc_msgSend_publishReason(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishReason");
}

id objc_msgSend_publishTimeInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishTimeInterval");
}

id objc_msgSend_publishTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishTimer");
}

id objc_msgSend_publishers_performBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishers:performBlock:");
}

id objc_msgSend_publishingBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "publishingBlock");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "queue");
}

id objc_msgSend_queueCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "queueCount");
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_rampDownDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rampDownDuration");
}

id objc_msgSend_rampUpDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rampUpDuration");
}

id objc_msgSend_randomBytesWithLength_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "randomBytesWithLength:error:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_ratchet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ratchet");
}

id objc_msgSend_ratchetErrorDeniedWithUnderlyingError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ratchetErrorDeniedWithUnderlyingError:");
}

id objc_msgSend_ratchetIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ratchetIdentifier");
}

id objc_msgSend_ratchetManagerTurnOffFMIP(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ratchetManagerTurnOffFMIP");
}

id objc_msgSend_ratchetManageriCloudSignOut(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ratchetManageriCloudSignOut");
}

id objc_msgSend_ratchetOptions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ratchetOptions");
}

id objc_msgSend_rawData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rawData");
}

id objc_msgSend_rawStats(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rawStats");
}

id objc_msgSend_rawValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rawValue");
}

id objc_msgSend_readAccessoriesFromDisk(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readAccessoriesFromDisk");
}

id objc_msgSend_readAllAccessoriesFromDisk(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readAllAccessoriesFromDisk");
}

id objc_msgSend_readArrayAndClasses_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readArrayAndClasses:error:");
}

id objc_msgSend_readDefaultConfigurations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readDefaultConfigurations");
}

id objc_msgSend_readDictionaryAndClasses_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readDictionaryAndClasses:error:");
}

id objc_msgSend_readLocationsFromDisk(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readLocationsFromDisk");
}

id objc_msgSend_readLostModeAccessoriesListVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readLostModeAccessoriesListVersion");
}

id objc_msgSend_readSupportedAccessoriesFromDisk(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readSupportedAccessoriesFromDisk");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "reason");
}

id objc_msgSend_recalculateLostMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "recalculateLostMode");
}

id objc_msgSend_receivedLocationCommand_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "receivedLocationCommand:completion:");
}

id objc_msgSend_receivedLocationPayload_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "receivedLocationPayload:completion:");
}

id objc_msgSend_recordLocation_ofType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "recordLocation:ofType:");
}

id objc_msgSend_recordName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "recordName");
}

id objc_msgSend_recordsByAccessoryIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "recordsByAccessoryIdentifier");
}

id objc_msgSend_redirectedHostForHost_withContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "redirectedHostForHost:withContext:");
}

id objc_msgSend_redirectedRequestURLForType_udid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "redirectedRequestURLForType:udid:");
}

id objc_msgSend_redirectedURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "redirectedURL:");
}

id objc_msgSend_refreshBeaconStats(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "refreshBeaconStats");
}

id objc_msgSend_refreshTransactionState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "refreshTransactionState:");
}

id objc_msgSend_regions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "regions");
}

id objc_msgSend_registerAccessory_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerAccessory:completion:");
}

id objc_msgSend_registerCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerCommand");
}

id objc_msgSend_registerCommonNotifications(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerCommonNotifications");
}

id objc_msgSend_registerDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerDelegate:");
}

id objc_msgSend_registerDelegate_forTopic_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerDelegate:forTopic:");
}

id objc_msgSend_registerDeviceContextForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerDeviceContextForAccount:");
}

id objc_msgSend_registerDeviceWithCause_force_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerDeviceWithCause:force:");
}

id objc_msgSend_registerDidFail(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerDidFail");
}

id objc_msgSend_registerDidSucceed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerDidSucceed");
}

id objc_msgSend_registerHandler_forDarwinNotification_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerHandler:forDarwinNotification:");
}

id objc_msgSend_registerRequestInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registerRequestInfo");
}

id objc_msgSend_registeredDelegates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registeredDelegates");
}

id objc_msgSend_registrationDigestDeviceInfoForAccount_completedFirstRegister_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registrationDigestDeviceInfoForAccount:completedFirstRegister:");
}

id objc_msgSend_registry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registry");
}

id objc_msgSend_registryFileURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "registryFileURL");
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "regularExpressionWithPattern:options:error:");
}

id objc_msgSend_reinitializeProviderWithAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "reinitializeProviderWithAccount:");
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "reloadData");
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "remoteObjectProxy");
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "remoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_removeAccesoryWithSerialNumber_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeAccesoryWithSerialNumber:completion:");
}

id objc_msgSend_removeAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeAccessory:");
}

id objc_msgSend_removeAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeAccount");
}

id objc_msgSend_removeAccount_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeAccount:completion:");
}

id objc_msgSend_removeAccountPreferences(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeAccountPreferences");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeFutureForCommandId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeFutureForCommandId:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeKey:inDomain:");
}

id objc_msgSend_removeKeychainItemForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeKeychainItemForKey:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeLastObject");
}

id objc_msgSend_removeMonitorWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeMonitorWithContext:");
}

id objc_msgSend_removeNotificationWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeNotificationWithIdentifier:completion:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObjectsForKeys:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObserver:forKeyPath:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeOrphanedLocationFiles(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeOrphanedLocationFiles");
}

id objc_msgSend_removeUnregisterTokenForIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeUnregisterTokenForIdentifier:");
}

id objc_msgSend_removeUnregisterTokenForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeUnregisterTokenForKey:");
}

id objc_msgSend_removeUntrackedAssets_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeUntrackedAssets:");
}

id objc_msgSend_renewCredentialsForAccount_force_reason_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "renewCredentialsForAccount:force:reason:completion:");
}

id objc_msgSend_renewCredentialsForAccount_options_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "renewCredentialsForAccount:options:completion:");
}

id objc_msgSend_repairContextString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "repairContextString:");
}

id objc_msgSend_repairDeviceMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "repairDeviceMode");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_replacedExsitingAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "replacedExsitingAction:");
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "request");
}

id objc_msgSend_requestAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestAccount");
}

id objc_msgSend_requestBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestBody");
}

id objc_msgSend_requestBodyData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestBodyData");
}

id objc_msgSend_requestBodyDataForSignature(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestBodyDataForSignature");
}

id objc_msgSend_requestDecorator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestDecorator");
}

id objc_msgSend_requestForcedShallowLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestForcedShallowLocation");
}

id objc_msgSend_requestHeaders(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestHeaders");
}

id objc_msgSend_requestId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestId");
}

id objc_msgSend_requestJsonData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestJsonData");
}

id objc_msgSend_requestLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestLocation");
}

id objc_msgSend_requestModifierLock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestModifierLock");
}

id objc_msgSend_requestMonitorWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestMonitorWithContext:");
}

id objc_msgSend_requestUrl(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestUrl");
}

id objc_msgSend_requestUrlForType_udid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestUrlForType:udid:");
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requestWithURL_cachePolicy_timeoutInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestWithURL:cachePolicy:timeoutInterval:");
}

id objc_msgSend_requests(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requests");
}

id objc_msgSend_requestsOperationQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestsOperationQueue");
}

id objc_msgSend_requiresAsynchronousAck(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requiresAsynchronousAck");
}

id objc_msgSend_requiresAuthentication(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requiresAuthentication");
}

id objc_msgSend_requiresConnectivity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requiresConnectivity");
}

id objc_msgSend_resetSupportedAccessoriesVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resetSupportedAccessoriesVersion");
}

id objc_msgSend_responseErrorType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "responseErrorType");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resume");
}

id objc_msgSend_resumeBackgroundAssetDownloads_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resumeBackgroundAssetDownloads:");
}

id objc_msgSend_resumeBackgroundTasks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resumeBackgroundTasks");
}

id objc_msgSend_resumeRegistrations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resumeRegistrations");
}

id objc_msgSend_retreiveLocationForAccessory_forEvent_locator_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retreiveLocationForAccessory:forEvent:locator:completion:");
}

id objc_msgSend_retrieveActivationLockStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retrieveActivationLockStatus");
}

id objc_msgSend_retrieveMaskedAppleID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retrieveMaskedAppleID");
}

id objc_msgSend_retrieveOfflineFindingInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retrieveOfflineFindingInfo");
}

id objc_msgSend_retrieveOfflineFindingStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retrieveOfflineFindingStatus");
}

id objc_msgSend_retryAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retryAction");
}

id objc_msgSend_retryHelper(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retryHelper");
}

id objc_msgSend_retryIntervalDecayFactor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retryIntervalDecayFactor");
}

id objc_msgSend_retryTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retryTimer");
}

id objc_msgSend_rightBudSerialNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rightBudSerialNumber");
}

id objc_msgSend_rootDirectoryURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rootDirectoryURL");
}

id objc_msgSend_rootType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rootType");
}

id objc_msgSend_routeID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "routeID");
}

id objc_msgSend_routeSubType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "routeSubType");
}

id objc_msgSend_routeType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "routeType");
}

id objc_msgSend_rpcStatus_reply_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rpcStatus:reply:");
}

id objc_msgSend_rssi(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rssi");
}

id objc_msgSend_rssiUpdateDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rssiUpdateDate");
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "run");
}

id objc_msgSend_runWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "runWithCompletion:");
}

id objc_msgSend_running(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "running");
}

id objc_msgSend_safetyAlertForAccessory_info_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "safetyAlertForAccessory:info:withCompletion:");
}

id objc_msgSend_safetyAlertType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "safetyAlertType");
}

id objc_msgSend_sanitizeDictionary_withExclusionKeys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sanitizeDictionary:withExclusionKeys:");
}

id objc_msgSend_sanitizedHexString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sanitizedHexString:");
}

id objc_msgSend_saveAccessoriesToDisk(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveAccessoriesToDisk");
}

id objc_msgSend_saveAccessoryRegisterDigest_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveAccessoryRegisterDigest:forKey:");
}

id objc_msgSend_saveAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveAccount:");
}

id objc_msgSend_saveArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveArray:");
}

id objc_msgSend_saveAssetMetadata_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveAssetMetadata:");
}

id objc_msgSend_saveContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveContext:");
}

id objc_msgSend_saveContext_forContextKey_dataProtectionClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveContext:forContextKey:dataProtectionClass:");
}

id objc_msgSend_saveDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveDictionary:");
}

id objc_msgSend_saveForContextKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveForContextKey:");
}

id objc_msgSend_saveLocation_forAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveLocation:forAccessory:");
}

id objc_msgSend_saveLocationToDisk_accessory_protection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveLocationToDisk:accessory:protection:");
}

id objc_msgSend_saveUnregisterToken_identifier_expiryDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveUnregisterToken:identifier:expiryDate:");
}

id objc_msgSend_saveVerifiedAccount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "saveVerifiedAccount:withCompletionHandler:");
}

id objc_msgSend_scanHexInt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanHexInt:");
}

id objc_msgSend_scanUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanUnsignedLongLong:");
}

id objc_msgSend_scannerWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scannerWithString:");
}

id objc_msgSend_scanningTimerFired(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanningTimerFired");
}

id objc_msgSend_schedule_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "schedule:");
}

id objc_msgSend_schedule_requireClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "schedule:requireClass:");
}

id objc_msgSend_scheduleDailyLocateReportXPCActivity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduleDailyLocateReportXPCActivity");
}

id objc_msgSend_scheduleInQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduleInQueue:");
}

id objc_msgSend_scheduleInRunLoop_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduleInRunLoop:");
}

id objc_msgSend_scheduleJanitor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduleJanitor:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheme");
}

id objc_msgSend_scoUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scoUID");
}

id objc_msgSend_searchIdentifiers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "searchIdentifiers");
}

id objc_msgSend_secureElementId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "secureElementId");
}

id objc_msgSend_secureLocationsManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "secureLocationsManager");
}

id objc_msgSend_securityLevelForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "securityLevelForAccount:");
}

id objc_msgSend_selectedDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "selectedDevices");
}

id objc_msgSend_selector(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "selector");
}

id objc_msgSend_sendAckWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sendAckWithCompletion:");
}

id objc_msgSend_sendDeviceIdentityIfEligibleWithIdentityInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sendDeviceIdentityIfEligibleWithIdentityInfo:");
}

id objc_msgSend_sendDeviceIdentityWithIdentityInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sendDeviceIdentityWithIdentityInfo:");
}

id objc_msgSend_sendError_forEventName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sendError:forEventName:");
}

id objc_msgSend_sendLostModeExitAuthWithToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sendLostModeExitAuthWithToken:");
}

id objc_msgSend_sendMessageWithProtobuf_inResponseToRequest_withPriority_timeout_bypassingDuet_deviceID_requestAcceptedHandler_responseHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sendMessageWithProtobuf:inResponseToRequest:withPriority:timeout:bypassingDuet:deviceID:requestAcceptedHandler:responseHandler:");
}

id objc_msgSend_sendPairedDeviceLostModeExitAuthToken_deviceID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sendPairedDeviceLostModeExitAuthToken:deviceID:");
}

id objc_msgSend_sendRequestWithId_toURL_withHeaders_body_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sendRequestWithId:toURL:withHeaders:body:completion:");
}

id objc_msgSend_sendTrackedLocations_withCurrentLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sendTrackedLocations:withCurrentLocation:");
}

id objc_msgSend_serialNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serialNumber");
}

id objc_msgSend_serialNumbers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serialNumbers");
}

id objc_msgSend_serialQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serialQueue");
}

id objc_msgSend_serverContextGenerator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverContextGenerator");
}

id objc_msgSend_serverHost(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverHost");
}

id objc_msgSend_serverInteractionController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverInteractionController");
}

id objc_msgSend_serverInteractionControllerByAccessory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverInteractionControllerByAccessory");
}

id objc_msgSend_serverInteractionControllerByAccount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverInteractionControllerByAccount");
}

id objc_msgSend_serverInteractionControllerForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverInteractionControllerForAccessory:");
}

id objc_msgSend_serverInteractionControllerForAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverInteractionControllerForAccount:");
}

id objc_msgSend_serverProtocolScheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverProtocolScheme");
}

id objc_msgSend_serverTrust(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverTrust");
}

id objc_msgSend_serverURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serverURL");
}

id objc_msgSend_serviceIdentifierInURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serviceIdentifierInURL");
}

id objc_msgSend_serviceName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serviceName");
}

id objc_msgSend_serviceState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serviceState");
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "session");
}

id objc_msgSend_sessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sessionWithConfiguration:");
}

id objc_msgSend_sessionWithConfiguration_delegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sessionWithConfiguration:delegate:delegateQueue:");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "set");
}

id objc_msgSend_setAccessoriesByExtension_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoriesByExtension:");
}

id objc_msgSend_setAccessoriesByIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoriesByIdentifier:");
}

id objc_msgSend_setAccessoriesQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoriesQueue:");
}

id objc_msgSend_setAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessory:");
}

id objc_msgSend_setAccessoryDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryDelegate:");
}

id objc_msgSend_setAccessoryIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryIdentifier:");
}

id objc_msgSend_setAccessoryLocationStore_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryLocationStore:");
}

id objc_msgSend_setAccessoryLocations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryLocations:");
}

id objc_msgSend_setAccessoryPairingURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryPairingURL:");
}

id objc_msgSend_setAccessoryQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryQueue:");
}

id objc_msgSend_setAccessoryRSSI_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryRSSI:");
}

id objc_msgSend_setAccessoryRegistry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryRegistry:");
}

id objc_msgSend_setAccessoryRegistryDelegateAdaptor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryRegistryDelegateAdaptor:");
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryType:");
}

id objc_msgSend_setAccessoryTypes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryTypes:");
}

id objc_msgSend_setAccessoryUpdateFuture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccessoryUpdateFuture:");
}

id objc_msgSend_setAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccount:");
}

id objc_msgSend_setAccountAddTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccountAddTime:");
}

id objc_msgSend_setAccountReadWriteLock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccountReadWriteLock:");
}

id objc_msgSend_setAccountStore_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccountStore:");
}

id objc_msgSend_setAccuracyChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAccuracyChange:");
}

id objc_msgSend_setAckDataForCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAckDataForCommand:");
}

id objc_msgSend_setAckURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAckURL:");
}

id objc_msgSend_setActionCompleted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActionCompleted:");
}

id objc_msgSend_setActionCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActionCompletion:");
}

id objc_msgSend_setActionExecutionQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActionExecutionQueue:");
}

id objc_msgSend_setActionId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActionId:");
}

id objc_msgSend_setActionQueueMap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActionQueueMap:");
}

id objc_msgSend_setActivationLockRequestUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActivationLockRequestUUID:");
}

id objc_msgSend_setActivationLockRequestUUIDString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActivationLockRequestUUIDString:");
}

id objc_msgSend_setActivationLockStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActivationLockStatus:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActiveConfig_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActiveConfig:");
}

id objc_msgSend_setActiveMessage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActiveMessage:");
}

id objc_msgSend_setActiveServiceProvider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActiveServiceProvider:");
}

id objc_msgSend_setActiveTokens_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActiveTokens:");
}

id objc_msgSend_setActivityStartDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActivityStartDate:");
}

id objc_msgSend_setActivityState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActivityState:");
}

id objc_msgSend_setActivityUpdateQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActivityUpdateQueue:");
}

id objc_msgSend_setAdditionalInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAdditionalInfo:");
}

id objc_msgSend_setAddress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAddress:");
}

id objc_msgSend_setAdsid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAdsid:");
}

id objc_msgSend_setAdvertisementFields_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAdvertisementFields:");
}

id objc_msgSend_setAdvertisementStatusKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAdvertisementStatusKey:");
}

id objc_msgSend_setAlertFromServerResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAlertFromServerResponse:");
}

id objc_msgSend_setAlertHeader_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAlertHeader:");
}

id objc_msgSend_setAlertMessage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAlertMessage:");
}

id objc_msgSend_setAllAudioChannelsActive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAllAudioChannelsActive:");
}

id objc_msgSend_setAllHTTPHeaderFields_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAllHTTPHeaderFields:");
}

id objc_msgSend_setAltDSID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAltDSID:");
}

id objc_msgSend_setAltDsid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAltDsid:");
}

id objc_msgSend_setAlternateButtonAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAlternateButtonAction:");
}

id objc_msgSend_setAlternateButtonTitle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAlternateButtonTitle:");
}

id objc_msgSend_setAlternateSerialNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAlternateSerialNumber:");
}

id objc_msgSend_setAltitude_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAltitude:");
}

id objc_msgSend_setAppleAccountIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAppleAccountIdentifier:");
}

id objc_msgSend_setApsEnvironment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setApsEnvironment:");
}

id objc_msgSend_setArchiver_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setArchiver:");
}

id objc_msgSend_setAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAsset:");
}

id objc_msgSend_setAssetRegistry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAssetRegistry:");
}

id objc_msgSend_setAssetType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAssetType:");
}

id objc_msgSend_setAssets_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAssets:");
}

id objc_msgSend_setAudioAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAudioAsset:");
}

id objc_msgSend_setAudioChannelInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAudioChannelInfo:");
}

id objc_msgSend_setAudioChannelsByName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAudioChannelsByName:");
}

id objc_msgSend_setAudioRoutingIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAudioRoutingIdentifier:");
}

id objc_msgSend_setAudioState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAudioState:");
}

id objc_msgSend_setAudioStateStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAudioStateStatus:");
}

id objc_msgSend_setAuthTokenHealingQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAuthTokenHealingQueue:");
}

id objc_msgSend_setAuthenticationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAuthenticationType:");
}

id objc_msgSend_setAuthorizationStatusByType_forBundle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAuthorizationStatusByType:forBundle:");
}

id objc_msgSend_setAutomationHelperBundle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAutomationHelperBundle:");
}

id objc_msgSend_setAvailability_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAvailability:");
}

id objc_msgSend_setBaUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaUUID:");
}

id objc_msgSend_setBaaAttestation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaaAttestation:");
}

id objc_msgSend_setBaaAttestationHeader_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaaAttestationHeader:");
}

id objc_msgSend_setBaaError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaaError:");
}

id objc_msgSend_setBaaErrorDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaaErrorDescription:");
}

id objc_msgSend_setBaaIdentityTimeoutIntervalInSec_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaaIdentityTimeoutIntervalInSec:");
}

id objc_msgSend_setBaaSignature_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaaSignature:");
}

id objc_msgSend_setBaaSignatureHeader_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaaSignatureHeader:");
}

id objc_msgSend_setBackedUp_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBackedUp:");
}

id objc_msgSend_setBackedUpDataArchiver_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBackedUpDataArchiver:");
}

id objc_msgSend_setBaseIdentifierKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaseIdentifierKey:");
}

id objc_msgSend_setBaseStoragePath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBaseStoragePath:");
}

id objc_msgSend_setBatteryInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBatteryInfo:");
}

id objc_msgSend_setBeaconIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBeaconIdentifier:");
}

id objc_msgSend_setBeacons_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBeacons:");
}

id objc_msgSend_setBeaconsByIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBeaconsByIdentifier:");
}

id objc_msgSend_setBlePowerStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBlePowerStatus:");
}

id objc_msgSend_setBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBlock:");
}

id objc_msgSend_setBluetoothAddress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBluetoothAddress:");
}

id objc_msgSend_setBluetoothColorCode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBluetoothColorCode:");
}

id objc_msgSend_setBluetoothDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBluetoothDevice:");
}

id objc_msgSend_setBluetoothDiscoveryQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBluetoothDiscoveryQueue:");
}

id objc_msgSend_setBluetoothManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBluetoothManager:");
}

id objc_msgSend_setBluetoothManagerDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBluetoothManagerDevice:");
}

id objc_msgSend_setBluetoothManagerDevicesByAddress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBluetoothManagerDevicesByAddress:");
}

id objc_msgSend_setBluetoothManagerQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBluetoothManagerQueue:");
}

id objc_msgSend_setBluetoothManagerQueueSynchronizer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBluetoothManagerQueueSynchronizer:");
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBody:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBool_forKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBool:forKey:inDomain:");
}

id objc_msgSend_setBrickDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBrickDevice:");
}

id objc_msgSend_setBtAddress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBtAddress:");
}

id objc_msgSend_setBuddyWaitTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBuddyWaitTimer:");
}

id objc_msgSend_setBuildVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBuildVersion:");
}

id objc_msgSend_setBundleIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBundleIdentifier:");
}

id objc_msgSend_setByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setByAddingObjectsFromArray:");
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setByAddingObjectsFromSet:");
}

id objc_msgSend_setBypassInEarCheck_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBypassInEarCheck:");
}

id objc_msgSend_setBystanderLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setBystanderLocationManager:");
}

id objc_msgSend_setCacheValidityDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCacheValidityDuration:");
}

id objc_msgSend_setCachedLocValidityDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCachedLocValidityDuration:");
}

id objc_msgSend_setCachedLocationValidityTimeInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCachedLocationValidityTimeInterval:");
}

id objc_msgSend_setCachedLogFileURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCachedLogFileURL:");
}

id objc_msgSend_setCancelled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCancelled:");
}

id objc_msgSend_setCategory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCategory:");
}

id objc_msgSend_setCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCategoryIdentifier:");
}

id objc_msgSend_setCause_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCause:");
}

id objc_msgSend_setCfNotification_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCfNotification:");
}

id objc_msgSend_setChannelName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setChannelName:");
}

id objc_msgSend_setChannels_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setChannels:");
}

id objc_msgSend_setCipher_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCipher:");
}

id objc_msgSend_setCleanupTask_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCleanupTask:");
}

id objc_msgSend_setClientLostModeInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setClientLostModeInfo:");
}

id objc_msgSend_setCmdStatusCode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCmdStatusCode:");
}

id objc_msgSend_setCmdStatusMsg_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCmdStatusMsg:");
}

id objc_msgSend_setColorCode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setColorCode:");
}

id objc_msgSend_setColorCodeCase_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setColorCodeCase:");
}

id objc_msgSend_setColorCodeLeft_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setColorCodeLeft:");
}

id objc_msgSend_setColorCodeRight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setColorCodeRight:");
}

id objc_msgSend_setCommandContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCommandContext:");
}

id objc_msgSend_setCommandContextUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCommandContextUUID:");
}

id objc_msgSend_setCommandID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCommandID:");
}

id objc_msgSend_setCommandParams_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCommandParams:");
}

id objc_msgSend_setComparisonPublishers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setComparisonPublishers:");
}

id objc_msgSend_setCompleted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCompleted:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setCompletionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCompletionHandler:");
}

id objc_msgSend_setCompletionHandlerForRepairDeviceRequest_thisDevice_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCompletionHandlerForRepairDeviceRequest:thisDevice:completion:");
}

id objc_msgSend_setConfigurations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setConfigurations:");
}

id objc_msgSend_setConnectedAccessoryIdentifiers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setConnectedAccessoryIdentifiers:");
}

id objc_msgSend_setConnection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setConnection:");
}

id objc_msgSend_setConsecutiveRetriesByType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setConsecutiveRetriesByType:");
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setContext:");
}

id objc_msgSend_setContextDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setContextDictionary:");
}

id objc_msgSend_setContextKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setContextKey:");
}

id objc_msgSend_setContextUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setContextUUID:");
}

id objc_msgSend_setCookieStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCookieStorage:");
}

id objc_msgSend_setCourse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCourse:");
}

id objc_msgSend_setCreateDirectories_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCreateDirectories:");
}

id objc_msgSend_setCreationDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCreationDate:");
}

id objc_msgSend_setCredentialItem_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCredentialItem:forKey:");
}

id objc_msgSend_setCriteriaMetBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCriteriaMetBlock:");
}

id objc_msgSend_setCurrentDeviceSKURegion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCurrentDeviceSKURegion:");
}

id objc_msgSend_setCurrentLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCurrentLocation:");
}

id objc_msgSend_setCurrentTask_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCurrentTask:");
}

id objc_msgSend_setCurrentThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCurrentThreshold:");
}

id objc_msgSend_setCustomDelay_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCustomDelay:");
}

id objc_msgSend_setData_forAccount_service_synchronizable_dataProtectionClass_migratable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setData:forAccount:service:synchronizable:dataProtectionClass:migratable:");
}

id objc_msgSend_setData_forKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setData:forKey:inDomain:");
}

id objc_msgSend_setDataArchiver_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDataArchiver:");
}

id objc_msgSend_setDataPeekEventName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDataPeekEventName:");
}

id objc_msgSend_setDataPropertyWithKey_value_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDataPropertyWithKey:value:");
}

id objc_msgSend_setDataProtectionClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDataProtectionClass:");
}

id objc_msgSend_setDataSourceErrorBackoffCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDataSourceErrorBackoffCount:");
}

id objc_msgSend_setDataSourceRetryTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDataSourceRetryTimer:");
}

id objc_msgSend_setDataSources_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDataSources:");
}

id objc_msgSend_setDataUpdateCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDataUpdateCommand:");
}

id objc_msgSend_setDate_forKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDate:forKey:inDomain:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDecayFactor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDecayFactor:");
}

id objc_msgSend_setDecorator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDecorator:");
}

id objc_msgSend_setDeepLinkURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeepLinkURL:");
}

id objc_msgSend_setDefaultAccessoriesEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDefaultAccessoriesEnabled:");
}

id objc_msgSend_setDefaultAudioSafetyStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDefaultAudioSafetyStatus:");
}

id objc_msgSend_setDefaultButtonAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDefaultButtonAction:");
}

id objc_msgSend_setDefaultButtonString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDefaultButtonString:");
}

id objc_msgSend_setDefaultButtonTitle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDefaultButtonTitle:");
}

id objc_msgSend_setDefaultConfigurations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDefaultConfigurations:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDelegateQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDelegateQueue:");
}

id objc_msgSend_setDelegates_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDelegates:");
}

id objc_msgSend_setDeniedOperationBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeniedOperationBlock:");
}

id objc_msgSend_setDesiredAccuracy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDesiredAccuracy:");
}

id objc_msgSend_setDetachNotificationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDetachNotificationManager:");
}

id objc_msgSend_setDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDevice:");
}

id objc_msgSend_setDeviceClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeviceClass:");
}

id objc_msgSend_setDeviceContextGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeviceContextGenerator:");
}

id objc_msgSend_setDeviceDiscoveryId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeviceDiscoveryId:");
}

id objc_msgSend_setDeviceId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeviceId:");
}

id objc_msgSend_setDeviceIdentityPendingXpcTransactionName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeviceIdentityPendingXpcTransactionName:");
}

id objc_msgSend_setDeviceInfoGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeviceInfoGenerator:");
}

id objc_msgSend_setDeviceProductId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeviceProductId:");
}

id objc_msgSend_setDeviceVendor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeviceVendor:");
}

id objc_msgSend_setDevice_unlock_actions_queue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDevice_unlock_actions_queue:");
}

id objc_msgSend_setDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDictionary:");
}

id objc_msgSend_setDictionary_forKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDictionary:forKey:inDomain:");
}

id objc_msgSend_setDidDiscoverDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDidDiscoverDevice:");
}

id objc_msgSend_setDidEndDiscovery_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDidEndDiscovery:");
}

id objc_msgSend_setDidLoseDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDidLoseDevice:");
}

id objc_msgSend_setDidStartDiscovery_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDidStartDiscovery:");
}

id objc_msgSend_setDigestData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDigestData:");
}

id objc_msgSend_setDigestKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDigestKey:");
}

id objc_msgSend_setDirectoryURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDirectoryURL:");
}

id objc_msgSend_setDisableContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDisableContext:");
}

id objc_msgSend_setDiscovery_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDiscovery:");
}

id objc_msgSend_setDiscoveryCoordinator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDiscoveryCoordinator:");
}

id objc_msgSend_setDiscoveryEndDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDiscoveryEndDate:");
}

id objc_msgSend_setDiscoveryTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDiscoveryTimer:");
}

id objc_msgSend_setDiscoveryWaitTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDiscoveryWaitTimer:");
}

id objc_msgSend_setDismissMsgOnLock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDismissMsgOnLock:");
}

id objc_msgSend_setDismissMsgOnUnlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDismissMsgOnUnlock:");
}

id objc_msgSend_setDispatchSourceAbort_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDispatchSourceAbort:");
}

id objc_msgSend_setDispatchSourceChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDispatchSourceChange:");
}

id objc_msgSend_setDistanceFilter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDistanceFilter:");
}

id objc_msgSend_setDsid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDsid:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setEarlyDiscovery_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEarlyDiscovery:");
}

id objc_msgSend_setEmbeddedAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEmbeddedAction:");
}

id objc_msgSend_setEnableLocationServices_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEnableLocationServices:");
}

id objc_msgSend_setEnabled_forDataclass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEnabled:forDataclass:");
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEndDate:");
}

id objc_msgSend_setEndThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEndThreshold:");
}

id objc_msgSend_setEnqueuedQC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEnqueuedQC:");
}

id objc_msgSend_setEphemeralToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEphemeralToken:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setError:");
}

id objc_msgSend_setErrorOccurred_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setErrorOccurred:");
}

id objc_msgSend_setEtag_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEtag:");
}

id objc_msgSend_setEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEvent:");
}

id objc_msgSend_setEventName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEventName:");
}

id objc_msgSend_setEventType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEventType:");
}

id objc_msgSend_setExecutionDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExecutionDate:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setExtAccessoryConfigURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExtAccessoryConfigURL:");
}

id objc_msgSend_setExtAccessoryManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExtAccessoryManager:");
}

id objc_msgSend_setExtensionId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExtensionId:");
}

id objc_msgSend_setExtensionManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExtensionManager:");
}

id objc_msgSend_setExtensionMatchToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExtensionMatchToken:");
}

id objc_msgSend_setExtensionsAlreadySynced_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExtensionsAlreadySynced:");
}

id objc_msgSend_setFMIPDataclass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFMIPDataclass:");
}

id objc_msgSend_setFMIPWipeLostModeInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFMIPWipeLostModeInfo:");
}

id objc_msgSend_setFMiPActive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFMiPActive:");
}

id objc_msgSend_setFacilitiesDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFacilitiesDictionary:");
}

id objc_msgSend_setFactory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFactory:");
}

id objc_msgSend_setFailureReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFailureReason:");
}

id objc_msgSend_setFallbackRetryTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFallbackRetryTimer:");
}

id objc_msgSend_setFallbackToNoAuthentication_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFallbackToNoAuthentication:");
}

id objc_msgSend_setFd_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFd:");
}

id objc_msgSend_setFileURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFileURL:");
}

id objc_msgSend_setFinalLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFinalLocation:");
}

id objc_msgSend_setFinalRequestJsonData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFinalRequestJsonData:");
}

id objc_msgSend_setFindMyEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFindMyEnabled:");
}

id objc_msgSend_setFindMyId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFindMyId:");
}

id objc_msgSend_setFinishedTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFinishedTimer:");
}

id objc_msgSend_setFirmwareRevision_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFirmwareRevision:");
}

id objc_msgSend_setFirmwareVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFirmwareVersion:");
}

id objc_msgSend_setFloor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFloor:");
}

id objc_msgSend_setFmdXPCListener_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFmdXPCListener:");
}

id objc_msgSend_setFmipAuthToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFmipAuthToken:");
}

id objc_msgSend_setFmipDisableContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFmipDisableContext:");
}

id objc_msgSend_setFmipEnableContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFmipEnableContext:");
}

id objc_msgSend_setFmipStateChangeCriteria_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFmipStateChangeCriteria:");
}

id objc_msgSend_setForce_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setForce:");
}

id objc_msgSend_setForceConnection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setForceConnection:");
}

id objc_msgSend_setForcePushOndemandlocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setForcePushOndemandlocation:");
}

id objc_msgSend_setForceShallowLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setForceShallowLocationManager:");
}

id objc_msgSend_setFuture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFuture:");
}

id objc_msgSend_setFuture_commandId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFuture:commandId:");
}

id objc_msgSend_setFuturesByCommandId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFuturesByCommandId:");
}

id objc_msgSend_setGracePeriod_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setGracePeriod:");
}

id objc_msgSend_setGroupByKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setGroupByKey:");
}

id objc_msgSend_setGroupValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setGroupValue:");
}

id objc_msgSend_setHTTPBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHTTPBody:");
}

id objc_msgSend_setHTTPCookieStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHTTPCookieStorage:");
}

id objc_msgSend_setHTTPMethod_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHTTPMethod:");
}

id objc_msgSend_setHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHandler:");
}

id objc_msgSend_setHardwareRevision_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHardwareRevision:");
}

id objc_msgSend_setHasAttemptedLoad_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHasAttemptedLoad:");
}

id objc_msgSend_setHeadAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHeadAction:");
}

id objc_msgSend_setHeadbandType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHeadbandType:");
}

id objc_msgSend_setHeartbeatLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHeartbeatLocationManager:");
}

id objc_msgSend_setHorizontalAccuracy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHorizontalAccuracy:");
}

id objc_msgSend_setHttpResponseBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHttpResponseBody:");
}

id objc_msgSend_setHttpResponseError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHttpResponseError:");
}

id objc_msgSend_setHttpResponseHeaders_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHttpResponseHeaders:");
}

id objc_msgSend_setHttpResponseStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHttpResponseStatus:");
}

id objc_msgSend_setICloudAuthToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setICloudAuthToken:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdentityCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIdentityCommand:");
}

id objc_msgSend_setIdentity_wait_queue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIdentity_wait_queue:");
}

id objc_msgSend_setIdsListener_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIdsListener:");
}

id objc_msgSend_setImei2_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setImei2:");
}

id objc_msgSend_setImei_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setImei:");
}

id objc_msgSend_setImportedAosnotifydData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setImportedAosnotifydData:");
}

id objc_msgSend_setInCase_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInCase:");
}

id objc_msgSend_setInCaseStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInCaseStatus:");
}

id objc_msgSend_setInEar_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInEar:");
}

id objc_msgSend_setInEarDetectionTimeout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInEarDetectionTimeout:");
}

id objc_msgSend_setInEarStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInEarStatus:");
}

id objc_msgSend_setInEarTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInEarTimer:");
}

id objc_msgSend_setInProgress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInProgress:");
}

id objc_msgSend_setIncludeDeviceState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIncludeDeviceState:");
}

id objc_msgSend_setInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInfo:");
}

id objc_msgSend_setInfoAtStartup_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInfoAtStartup:");
}

id objc_msgSend_setInfoChangeQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInfoChangeQueue:");
}

id objc_msgSend_setInitializationVector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInitializationVector:");
}

id objc_msgSend_setInitialized_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInitialized:");
}

id objc_msgSend_setInnerAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInnerAction:");
}

id objc_msgSend_setInteger_forKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInteger:forKey:inDomain:");
}

id objc_msgSend_setInternalDeviceAudioChannels_profile_active_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInternalDeviceAudioChannels:profile:active:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInterruptionLevel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInterruptionLevel:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setIrkData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIrkData:");
}

id objc_msgSend_setIsAccountHSA2_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsAccountHSA2:");
}

id objc_msgSend_setIsActivationLockEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsActivationLockEnabled:");
}

id objc_msgSend_setIsActivationLocked_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsActivationLocked:");
}

id objc_msgSend_setIsDiscoveryActive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsDiscoveryActive:");
}

id objc_msgSend_setIsEphemeral_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsEphemeral:");
}

id objc_msgSend_setIsFindMyLPEMEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsFindMyLPEMEnabled:");
}

id objc_msgSend_setIsFindMyON_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsFindMyON:");
}

id objc_msgSend_setIsFirstRunAfterBoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsFirstRunAfterBoot:");
}

id objc_msgSend_setIsFmipSound_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsFmipSound:");
}

id objc_msgSend_setIsHighPrioritySound_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsHighPrioritySound:");
}

id objc_msgSend_setIsMonitoringPendingDeviceIdentity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsMonitoringPendingDeviceIdentity:");
}

id objc_msgSend_setIsOfflineFindingEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsOfflineFindingEnabled:");
}

id objc_msgSend_setIsPaused_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsPaused:");
}

id objc_msgSend_setIsRestrictedSKU_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsRestrictedSKU:");
}

id objc_msgSend_setIsSignedIntoICloud_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsSignedIntoICloud:");
}

id objc_msgSend_setIsUsernameEditable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIsUsernameEditable:");
}

id objc_msgSend_setJanitor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setJanitor:");
}

id objc_msgSend_setJanitorScheduledDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setJanitorScheduledDate:");
}

id objc_msgSend_setKeepAlive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setKeepAlive:");
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setKey:");
}

id objc_msgSend_setKeyColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setKeyColor:");
}

id objc_msgSend_setLastActiveTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastActiveTime:");
}

id objc_msgSend_setLastDiscoveryDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastDiscoveryDate:");
}

id objc_msgSend_setLastFallbackRetryTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastFallbackRetryTime:");
}

id objc_msgSend_setLastIdentityTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastIdentityTime:");
}

id objc_msgSend_setLastKnownDeviceMotion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastKnownDeviceMotion:");
}

id objc_msgSend_setLastLaunchVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastLaunchVersion:");
}

id objc_msgSend_setLastLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastLocation:");
}

id objc_msgSend_setLastLoggedInDsid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastLoggedInDsid:");
}

id objc_msgSend_setLastLostModeKeyRollTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastLostModeKeyRollTime:");
}

id objc_msgSend_setLastModified_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastModified:");
}

id objc_msgSend_setLastModifyDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastModifyDate:");
}

id objc_msgSend_setLastOnDemandPublishTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastOnDemandPublishTime:");
}

id objc_msgSend_setLastPublishedAccuracy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastPublishedAccuracy:");
}

id objc_msgSend_setLastPublishedLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastPublishedLocation:");
}

id objc_msgSend_setLastPublishedTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastPublishedTime:");
}

id objc_msgSend_setLastPublishedVisit_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastPublishedVisit:");
}

id objc_msgSend_setLastReceivedLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastReceivedLocation:");
}

id objc_msgSend_setLastRetryTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastRetryTime:");
}

id objc_msgSend_setLastShallowPublishTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastShallowPublishTime:");
}

id objc_msgSend_setLastStatusUpdateTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastStatusUpdateTime:");
}

id objc_msgSend_setLastUnregisterFailedTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastUnregisterFailedTime:");
}

id objc_msgSend_setLatitude_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLatitude:");
}

id objc_msgSend_setLaunchDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLaunchDate:");
}

id objc_msgSend_setLaunchOnRebootActivity_keepAliveActivity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLaunchOnRebootActivity:keepAliveActivity:");
}

id objc_msgSend_setLaunchReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLaunchReason:");
}

id objc_msgSend_setLeadingAssetDefinition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLeadingAssetDefinition:");
}

id objc_msgSend_setLeftBudSerialNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLeftBudSerialNumber:");
}

id objc_msgSend_setLidClosed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLidClosed:");
}

id objc_msgSend_setLidClosedStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLidClosedStatus:");
}

id objc_msgSend_setListner_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setListner:");
}

id objc_msgSend_setLiveLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLiveLocationManager:");
}

id objc_msgSend_setLocManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocManager:");
}

id objc_msgSend_setLocaleStrings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocaleStrings:");
}

id objc_msgSend_setLocalizedBeginBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocalizedBeginBody:");
}

id objc_msgSend_setLocalizedBeginTitle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocalizedBeginTitle:");
}

id objc_msgSend_setLocalizedCalloutReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocalizedCalloutReason:");
}

id objc_msgSend_setLocalizedCountdownBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocalizedCountdownBody:");
}

id objc_msgSend_setLocalizedReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocalizedReason:");
}

id objc_msgSend_setLocateCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocateCommand:");
}

id objc_msgSend_setLocateParams_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocateParams:");
}

id objc_msgSend_setLocateTimeout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocateTimeout:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLocation_reason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocation:reason:");
}

id objc_msgSend_setLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationManager:");
}

id objc_msgSend_setLocationManagerStarted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationManagerStarted:");
}

id objc_msgSend_setLocationManagerWeakWrapper_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationManagerWeakWrapper:");
}

id objc_msgSend_setLocationManagers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationManagers:");
}

id objc_msgSend_setLocationMessage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationMessage:");
}

id objc_msgSend_setLocationMonitor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationMonitor:");
}

id objc_msgSend_setLocationPublisher_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationPublisher:");
}

id objc_msgSend_setLocationPurgeTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationPurgeTimer:");
}

id objc_msgSend_setLocationServicesAssertion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationServicesAssertion:");
}

id objc_msgSend_setLocationServicesStateChanged_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationServicesStateChanged:");
}

id objc_msgSend_setLocationStore_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationStore:");
}

id objc_msgSend_setLocationThrottleRatio_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationThrottleRatio:");
}

id objc_msgSend_setLocationTitle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationTitle:");
}

id objc_msgSend_setLocationTracker_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationTracker:");
}

id objc_msgSend_setLocationTrackerType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationTrackerType:");
}

id objc_msgSend_setLocationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationType:");
}

id objc_msgSend_setLocator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocator:");
}

id objc_msgSend_setLocatorPublisher_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocatorPublisher:");
}

id objc_msgSend_setLocatorRunning_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocatorRunning:");
}

id objc_msgSend_setLockCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLockCommand:");
}

id objc_msgSend_setLockScreenFacetimeCapable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLockScreenFacetimeCapable:");
}

id objc_msgSend_setLockScreenMessage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLockScreenMessage:");
}

id objc_msgSend_setLockScreenOwnerNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLockScreenOwnerNumber:");
}

id objc_msgSend_setLockStateNotifyToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLockStateNotifyToken:");
}

id objc_msgSend_setLogQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLogQueue:");
}

id objc_msgSend_setLoggedEvents_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLoggedEvents:");
}

id objc_msgSend_setLogs_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLogs:");
}

id objc_msgSend_setLongTermlocationExpiryTimeInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLongTermlocationExpiryTimeInterval:");
}

id objc_msgSend_setLongitude_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLongitude:");
}

id objc_msgSend_setLostCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLostCommand:");
}

id objc_msgSend_setLostModeDataArchiver_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLostModeDataArchiver:");
}

id objc_msgSend_setLostModeEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLostModeEnabled:");
}

id objc_msgSend_setLostModeExitAuthForPairedDeviceID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLostModeExitAuthForPairedDeviceID:");
}

id objc_msgSend_setLostModeExitAuthToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLostModeExitAuthToken:");
}

id objc_msgSend_setLostModeInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLostModeInfo:");
}

id objc_msgSend_setLowBatteryLocateEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLowBatteryLocateEnabled:");
}

id objc_msgSend_setMajorDeviceClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMajorDeviceClass:");
}

id objc_msgSend_setMaskedAppleID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMaskedAppleID:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMaxDelayInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMaxDelayInterval:");
}

id objc_msgSend_setMaxLocations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMaxLocations:");
}

id objc_msgSend_setMaximumHistoricalLocations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMaximumHistoricalLocations:");
}

id objc_msgSend_setMeid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMeid:");
}

id objc_msgSend_setMessageCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMessageCommand:");
}

id objc_msgSend_setMetadataModsQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMetadataModsQueue:");
}

id objc_msgSend_setMigrationConfirmed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMigrationConfirmed:");
}

id objc_msgSend_setMigrationPossible_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMigrationPossible:");
}

id objc_msgSend_setMinDistanceBetweenLocations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMinDistanceBetweenLocations:");
}

id objc_msgSend_setMinSLCAccuracyThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMinSLCAccuracyThreshold:");
}

id objc_msgSend_setMinTimeBetweenLocations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMinTimeBetweenLocations:");
}

id objc_msgSend_setMinTimeBetweenServerCalls_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMinTimeBetweenServerCalls:");
}

id objc_msgSend_setMinimumDistance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMinimumDistance:");
}

id objc_msgSend_setMinimumEarlyFireProportion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMinimumEarlyFireProportion:");
}

id objc_msgSend_setMinorDeviceClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMinorDeviceClass:");
}

id objc_msgSend_setMmeClientInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMmeClientInfo:");
}

id objc_msgSend_setMockBluetoothManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMockBluetoothManager:");
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMode:");
}

id objc_msgSend_setMotionActivityManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMotionActivityManager:");
}

id objc_msgSend_setMotionActivityState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMotionActivityState:");
}

id objc_msgSend_setMotionMonitor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMotionMonitor:");
}

id objc_msgSend_setMsgText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMsgText:");
}

id objc_msgSend_setMsgTitle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMsgTitle:");
}

id objc_msgSend_setMutableDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMutableDictionary:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNanoMigrator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNanoMigrator:");
}

id objc_msgSend_setNeedsLostModeExitAuth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNeedsLostModeExitAuth:");
}

id objc_msgSend_setNetworkAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNetworkAction:");
}

id objc_msgSend_setNextActionIdNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNextActionIdNumber:");
}

id objc_msgSend_setNextPublishTimerFireDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNextPublishTimerFireDate:");
}

id objc_msgSend_setNextRegisterDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNextRegisterDate:");
}

id objc_msgSend_setNextRetryTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNextRetryTime:");
}

id objc_msgSend_setNextRetryType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNextRetryType:");
}

id objc_msgSend_setNextScheduledJanitorDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNextScheduledJanitorDate:");
}

id objc_msgSend_setNotBackedUpDataArchiver_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNotBackedUpDataArchiver:");
}

id objc_msgSend_setNotifWhenDetachedListVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNotifWhenDetachedListVersion:");
}

id objc_msgSend_setNotificationIdbyAccessoryIds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNotificationIdbyAccessoryIds:");
}

id objc_msgSend_setNotifyWhenDetachedAccessoryIds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNotifyWhenDetachedAccessoryIds:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setObject:forKey:inDomain:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOfflineFindingInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOfflineFindingInfo:");
}

id objc_msgSend_setOfflineFindingStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOfflineFindingStatus:");
}

id objc_msgSend_setOldLowBatteryState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOldLowBatteryState:");
}

id objc_msgSend_setOnHeadStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOnHeadStatus:");
}

id objc_msgSend_setOndemandLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOndemandLocationManager:");
}

id objc_msgSend_setOneTimeRemoveAuthToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOneTimeRemoveAuthToken:");
}

id objc_msgSend_setOperationQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOperationQueue:");
}

id objc_msgSend_setOperationTransactionActive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOperationTransactionActive:");
}

id objc_msgSend_setOtherDevices_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOtherDevices:");
}

id objc_msgSend_setPaired_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPaired:");
}

id objc_msgSend_setPairingId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPairingId:");
}

id objc_msgSend_setPairingToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPairingToken:");
}

id objc_msgSend_setPasscodeLock_statusCode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPasscodeLock:statusCode:");
}

id objc_msgSend_setPendingActionIntent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPendingActionIntent:");
}

id objc_msgSend_setPendingDeviceIdentityMonitor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPendingDeviceIdentityMonitor:");
}

id objc_msgSend_setPendingLocateAlert_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPendingLocateAlert:");
}

id objc_msgSend_setPendingSecureMessage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPendingSecureMessage:");
}

id objc_msgSend_setPeriodicCheckInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPeriodicCheckInterval:");
}

id objc_msgSend_setPermittedOperationBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPermittedOperationBlock:");
}

id objc_msgSend_setPersistedValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPersistedValue:");
}

id objc_msgSend_setPet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPet:");
}

id objc_msgSend_setPhoneNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPhoneNumber:");
}

id objc_msgSend_setPhoneNumberForAccessoryId_phoneNumber_info_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPhoneNumberForAccessoryId:phoneNumber:info:completion:");
}

id objc_msgSend_setPlaySound_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPlaySound:");
}

id objc_msgSend_setPlaySoundRetryCounter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPlaySoundRetryCounter:");
}

id objc_msgSend_setPlaybackChannels_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPlaybackChannels:");
}

id objc_msgSend_setPlayingSound_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPlayingSound:");
}

id objc_msgSend_setPositionType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPositionType:");
}

id objc_msgSend_setPrecision_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrecision:");
}

id objc_msgSend_setPreventsAutomaticDismissal_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPreventsAutomaticDismissal:");
}

id objc_msgSend_setPrimary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrimary:");
}

id objc_msgSend_setPrimaryPublisher_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrimaryPublisher:");
}

id objc_msgSend_setProductId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProductId:");
}

id objc_msgSend_setProductType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProductType:");
}

id objc_msgSend_setProductVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProductVersion:");
}

id objc_msgSend_setProfile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProfile:");
}

id objc_msgSend_setProtectedContextLock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProtectedContextLock:");
}

id objc_msgSend_setProtectedIDSManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProtectedIDSManager:");
}

id objc_msgSend_setProtection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProtection:");
}

id objc_msgSend_setProtectionClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProtectionClass:");
}

id objc_msgSend_setProvider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProvider:");
}

id objc_msgSend_setProxyDeallocationBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProxyDeallocationBlock:");
}

id objc_msgSend_setPscError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPscError:");
}

id objc_msgSend_setPscHelloMsg_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPscHelloMsg:");
}

id objc_msgSend_setPscSessionRef_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPscSessionRef:");
}

id objc_msgSend_setPublishReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPublishReason:");
}

id objc_msgSend_setPublishTimeInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPublishTimeInterval:");
}

id objc_msgSend_setPublishTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPublishTimer:");
}

id objc_msgSend_setPublishingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPublishingBlock:");
}

id objc_msgSend_setQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setQueue:");
}

id objc_msgSend_setQueueAddedDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setQueueAddedDate:");
}

id objc_msgSend_setQueueCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setQueueCount:");
}

id objc_msgSend_setRampDownDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRampDownDuration:");
}

id objc_msgSend_setRampUpDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRampUpDuration:");
}

id objc_msgSend_setRatchet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRatchet:");
}

id objc_msgSend_setRawData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRawData:");
}

id objc_msgSend_setRawStats_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRawStats:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setRecordName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRecordName:");
}

id objc_msgSend_setRecordsByAccessoryIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRecordsByAccessoryIdentifier:");
}

id objc_msgSend_setRedirectedHost_forHost_withContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRedirectedHost:forHost:withContext:");
}

id objc_msgSend_setRefKeyAttestation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRefKeyAttestation:");
}

id objc_msgSend_setRefKeyError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRefKeyError:");
}

id objc_msgSend_setRefKeySignature_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRefKeySignature:");
}

id objc_msgSend_setRegisterCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRegisterCommand:");
}

id objc_msgSend_setRegistry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRegistry:");
}

id objc_msgSend_setRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequest:");
}

id objc_msgSend_setRequestAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestAccount:");
}

id objc_msgSend_setRequestBodyDataForSignature_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestBodyDataForSignature:");
}

id objc_msgSend_setRequestCachePolicy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestCachePolicy:");
}

id objc_msgSend_setRequestCancellationBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestCancellationBlock:");
}

id objc_msgSend_setRequestCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestCompletionBlock:");
}

id objc_msgSend_setRequestDecorator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestDecorator:");
}

id objc_msgSend_setRequestHeaderGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestHeaderGenerator:");
}

id objc_msgSend_setRequestInterruptionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestInterruptionBlock:");
}

id objc_msgSend_setRequestJsonData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestJsonData:");
}

id objc_msgSend_setRequestTimeout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestTimeout:");
}

id objc_msgSend_setRequests_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequests:");
}

id objc_msgSend_setRequestsOperationQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestsOperationQueue:");
}

id objc_msgSend_setRequiresAsynchronousAck_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequiresAsynchronousAck:");
}

id objc_msgSend_setRequiresAuthentication_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequiresAuthentication:");
}

id objc_msgSend_setRequiresConnectivity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequiresConnectivity:");
}

id objc_msgSend_setResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setResourceValue:forKey:error:");
}

id objc_msgSend_setResponseErrorType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setResponseErrorType:");
}

id objc_msgSend_setRetryAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRetryAction:");
}

id objc_msgSend_setRetryHelper_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRetryHelper:");
}

id objc_msgSend_setRetryTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRetryTimer:");
}

id objc_msgSend_setRightBudSerialNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRightBudSerialNumber:");
}

id objc_msgSend_setRootType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRootType:");
}

id objc_msgSend_setRssi_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRssi:");
}

id objc_msgSend_setRssiUpdateDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRssiUpdateDate:");
}

id objc_msgSend_setSafetyAlertType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSafetyAlertType:");
}

id objc_msgSend_setScoUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setScoUID:");
}

id objc_msgSend_setSerialNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSerialNumber:");
}

id objc_msgSend_setSerialNumbers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSerialNumbers:");
}

id objc_msgSend_setSerialQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSerialQueue:");
}

id objc_msgSend_setServerContextGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setServerContextGenerator:");
}

id objc_msgSend_setServerHost_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setServerHost:");
}

id objc_msgSend_setServerInteractionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setServerInteractionController:");
}

id objc_msgSend_setServerInteractionControllerByAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setServerInteractionControllerByAccessory:");
}

id objc_msgSend_setServerInteractionControllerByAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setServerInteractionControllerByAccount:");
}

id objc_msgSend_setServerNonce_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setServerNonce:");
}

id objc_msgSend_setServerProtocolScheme_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setServerProtocolScheme:");
}

id objc_msgSend_setServiceType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setServiceType:");
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSession:");
}

id objc_msgSend_setSetupAgent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSetupAgent:");
}

id objc_msgSend_setShallowLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setShallowLocationManager:");
}

id objc_msgSend_setShortTermlocationExpiryTimeInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setShortTermlocationExpiryTimeInterval:");
}

id objc_msgSend_setShouldPromptForPasswordOnly_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setShouldPromptForPasswordOnly:");
}

id objc_msgSend_setShouldSkipSettingsLaunchAlert_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setShouldSkipSettingsLaunchAlert:");
}

id objc_msgSend_setShouldUpdatePersistentServiceTokens_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setShouldUpdatePersistentServiceTokens:");
}

id objc_msgSend_setShowMessage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setShowMessage:");
}

id objc_msgSend_setShowMsgInLockScreen_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setShowMsgInLockScreen:");
}

id objc_msgSend_setShutdownActivityPending_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setShutdownActivityPending:");
}

id objc_msgSend_setSignature_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSignature:");
}

id objc_msgSend_setSignatureError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSignatureError:");
}

id objc_msgSend_setSignatureHeader_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSignatureHeader:");
}

id objc_msgSend_setSignedData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSignedData:");
}

id objc_msgSend_setSkAuth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSkAuth:");
}

id objc_msgSend_setSkAuthHeader_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSkAuthHeader:");
}

id objc_msgSend_setSlcLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSlcLocationManager:");
}

id objc_msgSend_setSoundDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSoundDuration:");
}

id objc_msgSend_setSoundName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSoundName:");
}

id objc_msgSend_setSpeed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSpeed:");
}

id objc_msgSend_setStandardLocator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStandardLocator:");
}

id objc_msgSend_setStartThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStartThreshold:");
}

id objc_msgSend_setStartTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStartTime:");
}

id objc_msgSend_setStartedPublishing_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStartedPublishing:");
}

id objc_msgSend_setStartupComplete_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStartupComplete:");
}

id objc_msgSend_setStatValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStatValue:");
}

id objc_msgSend_setStateCapture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStateCapture:");
}

id objc_msgSend_setStateCaptureBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStateCaptureBlock:");
}

id objc_msgSend_setStatsChangeHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStatsChangeHandler:");
}

id objc_msgSend_setStatusBarIconEnabled_forLocationEntityClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStatusBarIconEnabled:forLocationEntityClass:");
}

id objc_msgSend_setStatusCode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStatusCode:");
}

id objc_msgSend_setStatusController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStatusController:");
}

id objc_msgSend_setStewieLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStewieLocationManager:");
}

id objc_msgSend_setStoppedLocatorBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStoppedLocatorBlock:");
}

id objc_msgSend_setStoreIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStoreIdentifier:");
}

id objc_msgSend_setStore_ops_queue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStore_ops_queue:");
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setString:");
}

id objc_msgSend_setString_forKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setString:forKey:inDomain:");
}

id objc_msgSend_setStringPropertyWithKey_value_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStringPropertyWithKey:value:");
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStyle:");
}

id objc_msgSend_setStyleDescriptor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStyleDescriptor:");
}

id objc_msgSend_setSupportDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSupportDelegate:");
}

id objc_msgSend_setSupportedAccessories_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSupportedAccessories:");
}

id objc_msgSend_setSupportedAccessoryRegistry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSupportedAccessoryRegistry:");
}

id objc_msgSend_setSynchronizer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSynchronizer:");
}

id objc_msgSend_setSystemInfoQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSystemInfoQueue:");
}

id objc_msgSend_setSystemSerialNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSystemSerialNumber:");
}

id objc_msgSend_setTag_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTag:");
}

id objc_msgSend_setTargetFilename_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTargetFilename:");
}

id objc_msgSend_setTerminated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTerminated:");
}

id objc_msgSend_setTimeStamp_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimeStamp:");
}

id objc_msgSend_setTimeStampMillis_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimeStampMillis:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTimeout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimeout:");
}

id objc_msgSend_setTimeoutDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimeoutDate:");
}

id objc_msgSend_setTimeoutError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimeoutError:");
}

id objc_msgSend_setTimeoutTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimeoutTimer:");
}

id objc_msgSend_setTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimer:");
}

id objc_msgSend_setTimerSource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimerSource:");
}

id objc_msgSend_setTimestamp_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimestamp:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setToken:");
}

id objc_msgSend_setTotalRetriesByType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTotalRetriesByType:");
}

id objc_msgSend_setTrackCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTrackCommand:");
}

id objc_msgSend_setTrackNotifyEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTrackNotifyEnabled:");
}

id objc_msgSend_setTrackedLocations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTrackedLocations:");
}

id objc_msgSend_setTrackedLocationsStore_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTrackedLocationsStore:");
}

id objc_msgSend_setTrackingInfo_forType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTrackingInfo:forType:");
}

id objc_msgSend_setTrackingStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTrackingStatus:");
}

id objc_msgSend_setTransactionSerialQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTransactionSerialQueue:");
}

id objc_msgSend_setTriggered_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTriggered:");
}

id objc_msgSend_setTurnStatusBarIconOffAfterLostMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTurnStatusBarIconOffAfterLostMode:");
}

id objc_msgSend_setURLCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setURLCache:");
}

id objc_msgSend_setUdid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUdid:");
}

id objc_msgSend_setUnregisterState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUnregisterState:");
}

id objc_msgSend_setUnregisterToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUnregisterToken:");
}

id objc_msgSend_setUnregisterTokenStore_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUnregisterTokenStore:");
}

id objc_msgSend_setUpdateDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUpdateDate:");
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUrl:");
}

id objc_msgSend_setUrlTemplates_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUrlTemplates:");
}

id objc_msgSend_setUseEraseKeyType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUseEraseKeyType:");
}

id objc_msgSend_setUseSimpleFilePath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUseSimpleFilePath:");
}

id objc_msgSend_setUserAgent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUserAgent:");
}

id objc_msgSend_setUsername_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUsername:");
}

id objc_msgSend_setUtpConnected_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUtpConnected:");
}

id objc_msgSend_setUuid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUuid:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValuesForKeysWithDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setValuesForKeysWithDictionary:");
}

id objc_msgSend_setVendorId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setVendorId:");
}

id objc_msgSend_setVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setVersion:");
}

id objc_msgSend_setVersionHistory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setVersionHistory:");
}

id objc_msgSend_setVerticalAccuracy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setVerticalAccuracy:");
}

id objc_msgSend_setVibrate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setVibrate:");
}

id objc_msgSend_setVisitsLocationManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setVisitsLocationManager:");
}

id objc_msgSend_setWaitingForBuddy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWaitingForBuddy:");
}

id objc_msgSend_setWaitingForDetailedStats_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWaitingForDetailedStats:");
}

id objc_msgSend_setWaitingToMakeProviderActive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWaitingToMakeProviderActive:");
}

id objc_msgSend_setWeakActions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWeakActions:");
}

id objc_msgSend_setWillRetry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWillRetry:");
}

id objc_msgSend_setWillSendHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWillSendHandler:");
}

id objc_msgSend_setWipeCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWipeCommand:");
}

id objc_msgSend_setWipeInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWipeInfo:");
}

id objc_msgSend_setWipeState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWipeState:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_set_appleIDContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "set_appleIDContext:");
}

id objc_msgSend_settingsConfig(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "settingsConfig");
}

id objc_msgSend_settingsConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "settingsConfiguration");
}

id objc_msgSend_setup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setup");
}

id objc_msgSend_setupAgent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setupAgent");
}

id objc_msgSend_setupDataArchiverWithURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setupDataArchiverWithURL:");
}

id objc_msgSend_setupDiscovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setupDiscovery");
}

id objc_msgSend_shallowLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shallowLocationManager");
}

id objc_msgSend_sharedAccessoryManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedAccessoryManager");
}

id objc_msgSend_sharedAccessoryRegisterDigestSerialQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedAccessoryRegisterDigestSerialQueue");
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedConnection");
}

id objc_msgSend_sharedFactory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedFactory");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedInterface(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedInterface");
}

id objc_msgSend_sharedLogger(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedLogger");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedManager");
}

id objc_msgSend_sharedMigrator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedMigrator");
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedMonitor");
}

id objc_msgSend_sharedregisterDigestSerialQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedregisterDigestSerialQueue");
}

id objc_msgSend_shortTermLocationExpiryTimeIntervalForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shortTermLocationExpiryTimeIntervalForAccessory:");
}

id objc_msgSend_shortTermlocationExpiryTimeInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shortTermlocationExpiryTimeInterval");
}

id objc_msgSend_shouldCancelAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldCancelAction:");
}

id objc_msgSend_shouldForceRegisterOnStartup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldForceRegisterOnStartup");
}

id objc_msgSend_shouldHonorSecureMessage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldHonorSecureMessage");
}

id objc_msgSend_shouldLog(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldLog");
}

id objc_msgSend_shouldRetrieveLocationForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldRetrieveLocationForAccessory:");
}

id objc_msgSend_shouldShowLockScreenMessage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldShowLockScreenMessage");
}

id objc_msgSend_shouldShowSecureMessageOnLockScreen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldShowSecureMessageOnLockScreen");
}

id objc_msgSend_shouldStopSoundNow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldStopSoundNow");
}

id objc_msgSend_shouldWaitForAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldWaitForAction:");
}

id objc_msgSend_shouldWakeDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldWakeDevice");
}

id objc_msgSend_showAlertFromServerResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "showAlertFromServerResponse:");
}

id objc_msgSend_showAuthFailedMessage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "showAuthFailedMessage");
}

id objc_msgSend_showMessage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "showMessage");
}

id objc_msgSend_showMsgInLockScreen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "showMsgInLockScreen");
}

id objc_msgSend_showSecureMessage_andLockScreenMessage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "showSecureMessage:andLockScreenMessage:");
}

id objc_msgSend_shutdownActivityPending(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shutdownActivityPending");
}

id objc_msgSend_signal(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "signal");
}

id objc_msgSend_signature(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "signature");
}

id objc_msgSend_signatureError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "signatureError");
}

id objc_msgSend_signatureForData_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "signatureForData:error:");
}

id objc_msgSend_signatureForData_requestUUID_mode_cause_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "signatureForData:requestUUID:mode:cause:completion:");
}

id objc_msgSend_signatureForData_requestUUID_mode_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "signatureForData:requestUUID:mode:error:");
}

id objc_msgSend_signatureHeader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "signatureHeader");
}

id objc_msgSend_signedData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "signedData");
}

id objc_msgSend_simulateLocateNotification(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "simulateLocateNotification");
}

id objc_msgSend_simulateWipe(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "simulateWipe");
}

id objc_msgSend_skAuth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "skAuth");
}

id objc_msgSend_skAuthHeader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "skAuthHeader");
}

id objc_msgSend_sku(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sku");
}

id objc_msgSend_slcLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "slcLocationManager");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_soundDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "soundDuration");
}

id objc_msgSend_soundName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "soundName");
}

id objc_msgSend_spFmipRegisterInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "spFmipRegisterInfo");
}

id objc_msgSend_speed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "speed");
}

id objc_msgSend_splunkifyDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "splunkifyDictionary:");
}

id objc_msgSend_splunkifyObject_eventName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "splunkifyObject:eventName:");
}

id objc_msgSend_stack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stack");
}

id objc_msgSend_stalenessThreshold(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stalenessThreshold");
}

id objc_msgSend_standardDeviceContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "standardDeviceContext");
}

id objc_msgSend_standardLocator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "standardLocator");
}

id objc_msgSend_standardizedURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "standardizedURL");
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "start");
}

id objc_msgSend_startActivityUpdatesToQueue_withHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startActivityUpdatesToQueue:withHandler:");
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startDate");
}

id objc_msgSend_startDiscoveringExtensionsWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startDiscoveringExtensionsWithCompletion:");
}

id objc_msgSend_startDiscovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startDiscovery");
}

id objc_msgSend_startDiscoveryForAccessory_duration_info_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startDiscoveryForAccessory:duration:info:withCompletion:");
}

id objc_msgSend_startDiscoveryForDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startDiscoveryForDuration:");
}

id objc_msgSend_startDiscoveryTimerWithDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startDiscoveryTimerWithDuration:");
}

id objc_msgSend_startLocationMonitor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startLocationMonitor:");
}

id objc_msgSend_startLocationMonitorAfterRestart(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startLocationMonitorAfterRestart");
}

id objc_msgSend_startLocationMonitorWithContext_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startLocationMonitorWithContext:completion:");
}

id objc_msgSend_startLocationMonitorWithContext_forcePublish_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startLocationMonitorWithContext:forcePublish:completion:");
}

id objc_msgSend_startLocationMonitoringIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startLocationMonitoringIfNeeded");
}

id objc_msgSend_startLocator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startLocator");
}

id objc_msgSend_startMonitoring(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startMonitoring");
}

id objc_msgSend_startMonitoringAccessories(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startMonitoringAccessories");
}

id objc_msgSend_startMonitoringDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startMonitoringDevices");
}

id objc_msgSend_startMonitoringSignificantLocationChanges(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startMonitoringSignificantLocationChanges");
}

id objc_msgSend_startMonitoringVisits(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startMonitoringVisits");
}

id objc_msgSend_startMotionMonitoring(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startMotionMonitoring");
}

id objc_msgSend_startPlayingSoundForAccessory_duration_rampUpDuration_channels_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startPlayingSoundForAccessory:duration:rampUpDuration:channels:completion:");
}

id objc_msgSend_startPublisherWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startPublisherWithBlock:");
}

id objc_msgSend_startPublishingWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startPublishingWithBlock:");
}

id objc_msgSend_startServiceProviders(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startServiceProviders");
}

id objc_msgSend_startThreshold(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startThreshold");
}

id objc_msgSend_startTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startTime");
}

id objc_msgSend_startUpdatingLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startUpdatingLocation");
}

id objc_msgSend_startedPublishing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startedPublishing");
}

id objc_msgSend_startupComplete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startupComplete");
}

id objc_msgSend_statValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "statValue");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "state");
}

id objc_msgSend_stateCapture(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stateCapture");
}

id objc_msgSend_stationary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stationary");
}

id objc_msgSend_statsChangeHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "statsChangeHandler");
}

id objc_msgSend_status_context_reply_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "status:context:reply:");
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "statusCode");
}

id objc_msgSend_statusController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "statusController");
}

id objc_msgSend_stereoPairConfigurationDictWithBleDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stereoPairConfigurationDictWithBleDevice:");
}

id objc_msgSend_stewieLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stewieLocationManager");
}

id objc_msgSend_stopActivityUpdates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopActivityUpdates");
}

id objc_msgSend_stopAllSounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopAllSounds");
}

id objc_msgSend_stopDiscovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopDiscovery");
}

id objc_msgSend_stopDiscoveryForAccessory_info_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopDiscoveryForAccessory:info:withCompletion:");
}

id objc_msgSend_stopLocationMonitor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopLocationMonitor:");
}

id objc_msgSend_stopLocationMonitorWithContext_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopLocationMonitorWithContext:completion:");
}

id objc_msgSend_stopLocator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopLocator");
}

id objc_msgSend_stopMonitoringActivePolicy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopMonitoringActivePolicy");
}

id objc_msgSend_stopMonitoringPendingDeviceIdentity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopMonitoringPendingDeviceIdentity");
}

id objc_msgSend_stopMonitoringSignificantLocationChanges(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopMonitoringSignificantLocationChanges");
}

id objc_msgSend_stopMonitoringVisits(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopMonitoringVisits");
}

id objc_msgSend_stopMotionMonitoring(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopMotionMonitoring");
}

id objc_msgSend_stopPlayingSoundForAccessory_rampDownDuration_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopPlayingSoundForAccessory:rampDownDuration:completion:");
}

id objc_msgSend_stopSoundForAccessory_info_rampDownDuration_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopSoundForAccessory:info:rampDownDuration:withCompletion:");
}

id objc_msgSend_stopSoundFromUnexpectedPanning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopSoundFromUnexpectedPanning");
}

id objc_msgSend_stopSoundMessageWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopSoundMessageWithCompletion:");
}

id objc_msgSend_stopUpdatingLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopUpdatingLocation");
}

id objc_msgSend_store(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "store");
}

id objc_msgSend_storeAccessQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "storeAccessQueue");
}

id objc_msgSend_storeAsset_fromLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "storeAsset:fromLocation:");
}

id objc_msgSend_storeIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "storeIdentifier");
}

id objc_msgSend_storeOfflineFindingInfo_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "storeOfflineFindingInfo:completion:");
}

id objc_msgSend_store_ops_queue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "store_ops_queue");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "string");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByReplacingCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringByReplacingCharactersInRange:withString:");
}

id objc_msgSend_stringByReplacingMatchesInString_options_range_withTemplate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringByReplacingMatchesInString:options:range:withTemplate:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringForCaseInsensitiveStringKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringForCaseInsensitiveStringKey:");
}

id objc_msgSend_stringForKey_inDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringForKey:inDomain:");
}

id objc_msgSend_stringForLocationTrackerType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringForLocationTrackerType:");
}

id objc_msgSend_stringForLocationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringForLocationType:");
}

id objc_msgSend_stringFromActivityState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringFromActivityState:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringFromPublishReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringFromPublishReason:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringValue");
}

id objc_msgSend_stringValueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringValueForKey:");
}

id objc_msgSend_stringValueForServer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringValueForServer");
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithCapacity:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithFourCC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithFourCC:");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "style");
}

id objc_msgSend_styleDescriptor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "styleDescriptor");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_suinfoLastModifiedTimestamp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "suinfoLastModifiedTimestamp");
}

id objc_msgSend_supportDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportDelegate");
}

id objc_msgSend_supportedAccessories(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportedAccessories");
}

id objc_msgSend_supportedAccessoriesVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportedAccessoriesVersion");
}

id objc_msgSend_supportedAccessory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportedAccessory");
}

id objc_msgSend_supportedAccessoryForAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportedAccessoryForAccessory:");
}

id objc_msgSend_supportedAccessoryForIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportedAccessoryForIdentifier:");
}

id objc_msgSend_supportedAccessoryRegistry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportedAccessoryRegistry");
}

id objc_msgSend_supportedAccessoryTypesUpdated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportedAccessoryTypesUpdated");
}

id objc_msgSend_supportsAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportsAccessory:");
}

id objc_msgSend_supportsAccessoryType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportsAccessoryType:");
}

id objc_msgSend_supportsCapability_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportsCapability:");
}

id objc_msgSend_supportsRequestType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportsRequestType:");
}

id objc_msgSend_suspendRegistrations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "suspendRegistrations");
}

id objc_msgSend_syncFMIPAccountInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "syncFMIPAccountInfo");
}

id objc_msgSend_syncFMIPStateToWatch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "syncFMIPStateToWatch");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "synchronize");
}

id objc_msgSend_synchronizeDomain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "synchronizeDomain:");
}

id objc_msgSend_synchronizeLocalActivationLockState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "synchronizeLocalActivationLockState");
}

id objc_msgSend_synchronizeNanoDomain_keys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "synchronizeNanoDomain:keys:");
}

id objc_msgSend_synchronizeUserDefaultsDomain_keys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "synchronizeUserDefaultsDomain:keys:");
}

id objc_msgSend_synchronizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "synchronizer");
}

id objc_msgSend_systemInfoQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "systemInfoQueue");
}

id objc_msgSend_systemSerialNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "systemSerialNumber");
}

id objc_msgSend_systemTimeZone(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "systemTimeZone");
}

id objc_msgSend_tag(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tag");
}

id objc_msgSend_targetFilename(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "targetFilename");
}

id objc_msgSend_tasksWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tasksWithCompletion:");
}

id objc_msgSend_terminate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "terminate");
}

id objc_msgSend_terminated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "terminated");
}

id objc_msgSend_textKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "textKey");
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeIntervalSince1970");
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeIntervalSinceNow");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_timeStamp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeStamp");
}

id objc_msgSend_timeout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeout");
}

id objc_msgSend_timeoutDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeoutDate");
}

id objc_msgSend_timeoutError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeoutError");
}

id objc_msgSend_timeoutForFeature_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeoutForFeature:");
}

id objc_msgSend_timeoutIntervalInSec(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeoutIntervalInSec");
}

id objc_msgSend_timeoutOccurred(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeoutOccurred");
}

id objc_msgSend_timeoutTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeoutTimer");
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timer");
}

id objc_msgSend_timerSource(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timerSource");
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timestamp");
}

id objc_msgSend_timezone(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timezone");
}

id objc_msgSend_tinkerCapable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tinkerCapable");
}

id objc_msgSend_tinkerPaired(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tinkerPaired");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "title");
}

id objc_msgSend_titleKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "titleKey");
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "token");
}

id objc_msgSend_tokenDiscoveryEnded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tokenDiscoveryEnded");
}

id objc_msgSend_tokenKeyForIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tokenKeyForIdentifier:");
}

id objc_msgSend_totalRetriesByType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "totalRetriesByType");
}

id objc_msgSend_totalRetryCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "totalRetryCount");
}

id objc_msgSend_trackCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "trackCommand");
}

id objc_msgSend_trackNotifyEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "trackNotifyEnabled");
}

id objc_msgSend_trackedLocations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "trackedLocations");
}

id objc_msgSend_trackedLocationsStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "trackedLocationsStore");
}

id objc_msgSend_trackingInfoForType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "trackingInfoForType:");
}

id objc_msgSend_trackingStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "trackingStatus");
}

id objc_msgSend_transactionName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "transactionName:");
}

id objc_msgSend_transactionSerialQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "transactionSerialQueue");
}

id objc_msgSend_triggered(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "triggered");
}

id objc_msgSend_tryToFetchAuthToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tryToFetchAuthToken");
}

id objc_msgSend_turnStatusBarIconOffAfterLostMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "turnStatusBarIconOffAfterLostMode");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "type");
}

id objc_msgSend_udid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "udid");
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_unauthenticatedURLFromTemplate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unauthenticatedURLFromTemplate:");
}

id objc_msgSend_underlyingDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "underlyingDictionary");
}

id objc_msgSend_underlyingErrors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "underlyingErrors");
}

id objc_msgSend_underlyingQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "underlyingQueue");
}

id objc_msgSend_unittestRootURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unittestRootURL");
}

id objc_msgSend_unlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unlock");
}

id objc_msgSend_unlockState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unlockState");
}

id objc_msgSend_unmarshallAssets_assetRegistry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unmarshallAssets:assetRegistry:");
}

id objc_msgSend_unregisterAccessoriesIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unregisterAccessoriesIfNeeded");
}

id objc_msgSend_unregisterAccessory_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unregisterAccessory:completion:");
}

id objc_msgSend_unregisterDeviceInfoAdaptors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unregisterDeviceInfoAdaptors");
}

id objc_msgSend_unregisterDeviceWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unregisterDeviceWithCompletion:");
}

id objc_msgSend_unregisterState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unregisterState");
}

id objc_msgSend_unregisterToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unregisterToken");
}

id objc_msgSend_unregisterTokenForIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unregisterTokenForIdentifier:");
}

id objc_msgSend_unregisterTokenStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unregisterTokenStore");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unsignedIntValue");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_updateAccessoriesDatabaseWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAccessoriesDatabaseWithContext:");
}

id objc_msgSend_updateAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAccessory:");
}

id objc_msgSend_updateAccessory_assets_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAccessory:assets:");
}

id objc_msgSend_updateAccessory_playbackChannels_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAccessory:playbackChannels:");
}

id objc_msgSend_updateAccessory_playbackChannels_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAccessory:playbackChannels:completion:");
}

id objc_msgSend_updateAccessoryIds_version_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAccessoryIds:version:withCompletion:");
}

id objc_msgSend_updateAccount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAccount:");
}

id objc_msgSend_updateActivationLockStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateActivationLockStatus:");
}

id objc_msgSend_updateAudioAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAudioAsset:");
}

id objc_msgSend_updateAudioChannelPlayingState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAudioChannelPlayingState:");
}

id objc_msgSend_updateAudioChannelsWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateAudioChannelsWithArray:");
}

id objc_msgSend_updateBeaconsWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateBeaconsWithArray:");
}

id objc_msgSend_updateCompletedFor_withCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateCompletedFor:withCompletion:");
}

id objc_msgSend_updateComponnentsAvailability_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateComponnentsAvailability:");
}

id objc_msgSend_updateConfigData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateConfigData:");
}

id objc_msgSend_updateConfigurations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateConfigurations:");
}

id objc_msgSend_updateDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateDate");
}

id objc_msgSend_updateDisccovery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateDisccovery");
}

id objc_msgSend_updateLocationMetaData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateLocationMetaData");
}

id objc_msgSend_updateLocationTrackingInfoWithTrackingStatus_minSLCAccuracyThreshold_locateParams_trackNotifyEnabled_maxLocations_keepAlive_periodicCheckInterval_minDistanceBetweenLocations_minTimeBetweenLocations_minTimeBetweenServerCalls_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateLocationTrackingInfoWithTrackingStatus:minSLCAccuracyThreshold:locateParams:trackNotifyEnabled:maxLocations:keepAlive:periodicCheckInterval:minDistanceBetweenLocations:minTimeBetweenLocations:minTimeBetweenServerCalls:");
}

id objc_msgSend_updateMaskedAppleID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateMaskedAppleID:");
}

id objc_msgSend_updateMonitorConfig_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateMonitorConfig:");
}

id objc_msgSend_updateOfflineFindingInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateOfflineFindingInfo:");
}

id objc_msgSend_updateOfflineFindingStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateOfflineFindingStatus:");
}

id objc_msgSend_updatePlaybackChannels_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updatePlaybackChannels:");
}

id objc_msgSend_updateRequestInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateRequestInfo");
}

id objc_msgSend_updateSupportedAccessories_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateSupportedAccessories:completion:");
}

id objc_msgSend_updateSupportedAccessoryTypes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateSupportedAccessoryTypes:");
}

id objc_msgSend_updateWithAccessory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateWithAccessory:");
}

id objc_msgSend_updateWithBeaconingIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateWithBeaconingIdentifier:");
}

id objc_msgSend_updatedLocations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updatedLocations:");
}

id objc_msgSend_updatedLocations_reason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updatedLocations:reason:");
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "url");
}

id objc_msgSend_urlFromTemplate_account_udid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "urlFromTemplate:account:udid:");
}

id objc_msgSend_urlTemplateForRequestType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "urlTemplateForRequestType:");
}

id objc_msgSend_urlTemplateType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "urlTemplateType");
}

id objc_msgSend_urlTemplates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "urlTemplates");
}

id objc_msgSend_urlWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "urlWithString:");
}

id objc_msgSend_userAgent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "userAgent");
}

id objc_msgSend_userID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "userID");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userPrivateKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "userPrivateKey");
}

id objc_msgSend_userTestApplication(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "userTestApplication");
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "username");
}

id objc_msgSend_utpConnected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "utpConnected");
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "uuid");
}

id objc_msgSend_validateAccessoryDiscoveryDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "validateAccessoryDiscoveryDate");
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "valueForEntitlement:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "valueForProperty:");
}

id objc_msgSend_vendorId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "vendorId");
}

id objc_msgSend_verifyLaunchEventsConfiguration_withExclusions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "verifyLaunchEventsConfiguration:withExclusions:");
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "version");
}

id objc_msgSend_versionCheck(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "versionCheck");
}

id objc_msgSend_versionHistory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "versionHistory");
}

id objc_msgSend_verticalAccuracy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "verticalAccuracy");
}

id objc_msgSend_vibrate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "vibrate");
}

id objc_msgSend_visitsLocationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "visitsLocationManager");
}

id objc_msgSend_volatileKeysToExcludeFromRegisterDigest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "volatileKeysToExcludeFromRegisterDigest");
}

id objc_msgSend_wait(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wait");
}

id objc_msgSend_waitForRoutableAccessory_timeout_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "waitForRoutableAccessory:timeout:completion:");
}

id objc_msgSend_waitForSpringBoard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "waitForSpringBoard");
}

id objc_msgSend_waitingForBuddy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "waitingForBuddy");
}

id objc_msgSend_waitingForDetailedStats(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "waitingForDetailedStats");
}

id objc_msgSend_waitingToMakeProviderActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "waitingToMakeProviderActive");
}

id objc_msgSend_walking(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "walking");
}

id objc_msgSend_weakActions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "weakActions");
}

id objc_msgSend_weakObjectsPointerArray(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "weakObjectsPointerArray");
}

id objc_msgSend_wifiMacAddress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiMacAddress");
}

id objc_msgSend_willCancelAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "willCancelAction");
}

id objc_msgSend_willMakeProviderActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "willMakeProviderActive");
}

id objc_msgSend_willMakeProviderInactive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "willMakeProviderInactive");
}

id objc_msgSend_willRetry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "willRetry");
}

id objc_msgSend_willSendHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "willSendHandler");
}

id objc_msgSend_wipeCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wipeCommand");
}

id objc_msgSend_wipeInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wipeInfo");
}

id objc_msgSend_wipeState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wipeState");
}

id objc_msgSend_wrapAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wrapAction:");
}

id objc_msgSend_writeLostModeInfo_version_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "writeLostModeInfo:version:");
}

id objc_msgSend_writeToFile_atomically_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "writeToFile:atomically:");
}

id objc_msgSend_xpcTransactionName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "xpcTransactionName");
}

