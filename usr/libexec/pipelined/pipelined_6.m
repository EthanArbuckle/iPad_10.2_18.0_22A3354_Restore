void sub_1002B0768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  void *v9;

  operator delete(__p);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_1002B0784(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1002B0798(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1002B07B0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

int8x16_t sub_1002B07C8(uint64_t a1, uint64_t a2, int8x16_t *a3)
{
  int8x16_t result;

  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)a1 = &off_1004015E0;
  *(_QWORD *)(a1 + 8) = off_100401610;
  *(_QWORD *)(a1 + 16) = off_100401638;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 48) = a3[1].i32[0];
  result = vextq_s8(*a3, *a3, 8uLL);
  *(int8x16_t *)(a1 + 32) = result;
  return result;
}

std::exception *sub_1002B07FC(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1[2].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    a1[3].__vftable = 0;
  std::exception::~exception(a1 + 1);
  return a1;
}

void sub_1002B0854()
{
  operator new();
}

void sub_1002B0918()
{
  std::exception *v0;

  std::exception::~exception(v0);
  operator delete();
}

void sub_1002B0944(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1002B0960(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_1002B0BC0((uint64_t)exception, a1);
}

void sub_1002B099C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002B09B0(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1[2].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      a1[3].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);
  operator delete();
}

void sub_1002B0A18(std::exception *this)
{
  std::exception_vtbl *v2;

  this[1].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    this[2].__vftable = 0;
  std::exception::~exception(this);
}

void sub_1002B0A68(std::exception *this)
{
  std::exception_vtbl *v2;

  this[1].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      this[2].__vftable = 0;
  }
  std::exception::~exception(this);
  operator delete();
}

const char *sub_1002B0AD4()
{
  return "Boost.Geometry Overlay invalid input exception";
}

void sub_1002B0AE0(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    a1[1].__vftable = 0;
  std::exception::~exception(a1 - 1);
}

void sub_1002B0B30(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::exception::~exception(a1 - 1);
  operator delete();
}

void sub_1002B0B9C(std::exception *a1)
{
  std::exception::~exception(a1);
  operator delete();
}

uint64_t sub_1002B0BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  *(_QWORD *)(a1 + 8) = &off_100401658;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1004015E0;
  *(_QWORD *)(a1 + 8) = off_100401610;
  *(_QWORD *)(a1 + 16) = off_100401638;
  return a1;
}

void sub_1002B0C58(_Unwind_Exception *a1)
{
  std::exception *v1;

  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002B0C6C(uint64_t a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  *(_QWORD *)(a1 + 40) = 0;
  v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = *(void ***)(a1 + 16);
      v2 = (void **)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v2;
      v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v5 = v4 >> 3;
  if (v5 == 1)
  {
    v6 = 10;
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    v6 = 20;
LABEL_7:
    *(_QWORD *)(a1 + 32) = v6;
  }
  if (v2 != v3)
  {
    do
    {
      v7 = *v2++;
      operator delete(v7);
    }
    while (v2 != v3);
    v9 = *(_QWORD *)(a1 + 8);
    v8 = *(_QWORD *)(a1 + 16);
    if (v8 != v9)
      *(_QWORD *)(a1 + 16) = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

BOOL sub_1002B0D30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, int a6, char a7)
{
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double **v16;
  double **v17;
  uint64_t v18;
  double *v19;
  double *v20;
  int v21;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  int v31;
  char v32;
  void *__p;
  void *v34;
  uint64_t v35;

  __p = 0;
  v34 = 0;
  v35 = 0;
  v12 = *a1;
  if (*a1 != a1[1])
  {
    v13 = 0;
    do
    {
      v14 = *(double **)v12;
      v15 = *(double **)(v12 + 8);
      if ((unint64_t)v15 - *(_QWORD *)v12 >= 0x20)
      {
        *(_QWORD *)&v27 = 0;
        *((_QWORD *)&v27 + 1) = v13;
        v28 = -1;
        sub_1002884D4(&__p, v14, v15, a3, a2, &v27, 0xAuLL);
      }
      v17 = *(double ***)(v12 + 24);
      v16 = *(double ***)(v12 + 32);
      if (v17 != v16)
      {
        v18 = 0;
        do
        {
          v19 = *v17;
          v20 = v17[1];
          if ((unint64_t)((char *)v20 - (char *)*v17) >= 0x20)
          {
            *(_QWORD *)&v27 = 0;
            *((_QWORD *)&v27 + 1) = v13;
            v28 = v18;
            sub_1002884D4(&__p, v19, v20, a3, a2, &v27, 0xAuLL);
            v16 = *(double ***)(v12 + 32);
          }
          ++v18;
          v17 += 3;
        }
        while (v17 != v16);
      }
      v12 += 48;
      ++v13;
    }
    while (v12 != a1[1]);
  }
  *(_QWORD *)&v27 = a1;
  *((_QWORD *)&v27 + 1) = a2;
  v28 = a3;
  v29 = a4;
  v30 = a5;
  v31 = a6;
  v32 = a7;
  v25 = a2;
  v26 = a2;
  sub_1002B0EC0((uint64_t *)&__p, (_QWORD **)&v27, (uint64_t)&v26, (uint64_t)&v25, 0x10uLL);
  v21 = *a5;
  if (__p)
  {
    v34 = __p;
    operator delete(__p);
  }
  return v21 == 0;
}

void sub_1002B0E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B0EC0(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _BYTE *v7;
  uint64_t v8;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *i;
  BOOL v16;
  BOOL v17;
  _OWORD v20[2];
  void *__p;
  void *v22;
  uint64_t v23;
  char v24;

  v8 = *a1;
  v7 = (_BYTE *)a1[1];
  if (0xEEEEEEEEEEEEEEEFLL * ((uint64_t)&v7[-*a1] >> 3) <= a5)
  {
    if ((_BYTE *)v8 != v7)
    {
      v13 = (_BYTE *)(v8 + 216);
      do
      {
        v14 = (_BYTE *)(v8 + 120);
        if ((_BYTE *)(v8 + 120) != v7)
        {
          for (i = v13; i - 96 != v7; i += 120)
          {
            if (*(_QWORD *)(v8 + 48) >= *((_QWORD *)i - 8) && *(_QWORD *)(v8 + 32) <= *((_QWORD *)i - 6))
            {
              v16 = *(_QWORD *)(v8 + 56) >= *((_QWORD *)i - 7) && *(_QWORD *)(v8 + 40) <= *((_QWORD *)i - 5);
              v17 = v16 && *(_BYTE *)(v8 + 96) == 0;
              if (v17 && *i == 0)
              {
                if (!sub_1002B3C54(*((_DWORD *)a2 + 10), *a2, (int *)v8, *((_DWORD *)a2 + 10), *a2, (int *)i - 24, 0, *((unsigned __int8 *)a2 + 44), (uint64_t)a2[1], (uint64_t)a2[2], a2[3], a2[4]))return 0;
                v7 = (_BYTE *)a1[1];
              }
            }
          }
        }
        v13 += 120;
        v8 += 120;
      }
      while (v14 != v7);
    }
    return 1;
  }
  __p = 0;
  v22 = 0;
  v23 = 0;
  v20[0] = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  v20[1] = vdupq_n_s64(0x8000000000000000);
  sub_100288F48(a1, (uint64_t *)v20, (char **)&__p);
  v12 = sub_1002B1088(v20, &__p, 0, a5, a2, a3, a4, (uint64_t)&v24);
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
  return v12;
}

void sub_1002B106C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B1088(_QWORD *a1, _QWORD *a2, unint64_t a3, unint64_t a4, _QWORD **a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  int v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *i;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  BOOL v41;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  BOOL v48;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *j;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  BOOL v58;
  int64x2_t v61;
  int64x2_t v62;
  void *__p;
  char *v64;
  uint64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  __int128 v72[2];
  __int128 v73;
  uint64_t v74;
  uint64_t v75;

  v14 = *a1;
  v15 = a1[2];
  if ((uint64_t)*a1 >= 0)
    v16 = *a1;
  else
    v16 = v14 + 1;
  v17 = v16 >> 1;
  if (v15 >= 0)
    v18 = a1[2];
  else
    v18 = v15 + 1;
  v19 = v18 >> 1;
  v20 = *((_OWORD *)a1 + 1);
  v21 = v15 - 2 * v19 + v14 - 2 * v17;
  v73 = *(_OWORD *)a1;
  v75 = *((_QWORD *)&v20 + 1);
  *((_QWORD *)&v72[0] + 1) = *((_QWORD *)&v73 + 1);
  v72[1] = v20;
  v74 = v19 + v17 + ((v21 + ((v21 & 0x80) >> 7)) << 24 >> 25);
  v71 = 0;
  *(_QWORD *)&v72[0] = v74;
  v69 = 0;
  v70 = 0;
  v66 = 0;
  v67 = 0;
  v68 = 0;
  __p = 0;
  v64 = 0;
  v65 = 0;
  sub_100289FEC(&v73, v72, a2, &v69, (char **)&v66, (char **)&__p);
  v23 = (char *)__p;
  v22 = v64;
  if (__p == v64)
    goto LABEL_32;
  v24 = 0x7FFFFFFFFFFFFFFFLL;
  v25 = 0x8000000000000000;
  v61 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  v62 = vdupq_n_s64(0x8000000000000000);
  v26 = 0x8000000000000000;
  v27 = (char *)__p;
  v28 = 0x7FFFFFFFFFFFFFFFLL;
  do
  {
    v29 = *(_QWORD **)v27;
    v30 = *(_QWORD *)(*(_QWORD *)v27 + 32);
    if (v30 < v28)
    {
      v61.i64[0] = *(_QWORD *)(*(_QWORD *)v27 + 32);
      v28 = v30;
      if (v30 <= v26)
      {
LABEL_12:
        v31 = v29[5];
        if (v31 >= v24)
          goto LABEL_13;
        goto LABEL_21;
      }
    }
    else if (v30 <= v26)
    {
      goto LABEL_12;
    }
    v62.i64[0] = v30;
    v26 = v30;
    v31 = v29[5];
    if (v31 >= v24)
    {
LABEL_13:
      if (v31 <= v25)
        goto LABEL_14;
      goto LABEL_22;
    }
LABEL_21:
    v61.i64[1] = v31;
    v24 = v31;
    if (v31 <= v25)
    {
LABEL_14:
      v32 = v29[6];
      if (v32 >= v28)
        goto LABEL_15;
      goto LABEL_23;
    }
LABEL_22:
    v62.i64[1] = v31;
    v25 = v31;
    v32 = v29[6];
    if (v32 >= v28)
    {
LABEL_15:
      if (v32 <= v26)
        goto LABEL_16;
      goto LABEL_24;
    }
LABEL_23:
    v61.i64[0] = v32;
    v28 = v32;
    if (v32 <= v26)
    {
LABEL_16:
      v33 = v29[7];
      if (v33 < v24)
        goto LABEL_25;
      goto LABEL_17;
    }
LABEL_24:
    v62.i64[0] = v32;
    v26 = v32;
    v33 = v29[7];
    if (v33 < v24)
    {
LABEL_25:
      v61.i64[1] = v33;
      v24 = v33;
      if (v33 <= v25)
        goto LABEL_9;
      goto LABEL_26;
    }
LABEL_17:
    if (v33 <= v25)
      goto LABEL_9;
LABEL_26:
    v62.i64[1] = v33;
    v25 = v33;
LABEL_9:
    v27 += 8;
  }
  while (v27 != v64);
  if (a3 <= 0x63 && (v64 - (_BYTE *)__p) >> 3 >= a4)
  {
    if (sub_1002B17EC((__int128 *)v61.i8, &__p, a3 + 1, a4, a5, a6, a7, a8))
      goto LABEL_30;
    goto LABEL_98;
  }
  do
  {
    v36 = v23 + 8;
    if (v23 + 8 != v22)
    {
      for (i = v23 + 8; i != v22; i += 8)
      {
        v38 = *(_QWORD *)v23;
        v39 = *(_QWORD *)i;
        if (*(_QWORD *)(*(_QWORD *)v23 + 48) >= *(_QWORD *)(*(_QWORD *)i + 32)
          && *(_QWORD *)(v38 + 32) <= *(_QWORD *)(v39 + 48))
        {
          v40 = *(_QWORD *)(v38 + 56) >= *(_QWORD *)(v39 + 40) && *(_QWORD *)(v38 + 40) <= *(_QWORD *)(v39 + 56);
          v41 = v40 && *(_BYTE *)(v38 + 96) == 0;
          if (v41 && *(_BYTE *)(v39 + 96) == 0)
          {
            if (!sub_1002B3C54(*((_DWORD *)a5 + 10), *a5, (int *)v38, *((_DWORD *)a5 + 10), *a5, (int *)v39, 0, *((unsigned __int8 *)a5 + 44), (uint64_t)a5[1], (uint64_t)a5[2], a5[3], a5[4]))goto LABEL_98;
            v22 = v64;
          }
        }
      }
    }
    v23 += 8;
  }
  while (v36 != v22);
LABEL_30:
  if (sub_1002B167C((__int128 *)v61.i8, (uint64_t **)&__p, (uint64_t **)&v69, a3, a4, a5, a6, a7, a8)
    && (sub_1002B167C((__int128 *)v61.i8, (uint64_t **)&__p, (uint64_t **)&v66, a3, a4, a5, a6, a7, a8) & 1) != 0)
  {
LABEL_32:
    v35 = (char *)v69;
    v34 = v70;
    if (a3 > 0x63 || (v70 - (_BYTE *)v69) >> 3 < a4)
    {
LABEL_73:
      while (v35 != v34)
      {
        v43 = v35;
        v35 += 8;
        if (v35 != v34)
        {
          v44 = v35;
          while (1)
          {
            v45 = *(_QWORD *)v43;
            v46 = *(_QWORD *)v44;
            if (*(_QWORD *)(*(_QWORD *)v43 + 48) >= *(_QWORD *)(*(_QWORD *)v44 + 32)
              && *(_QWORD *)(v45 + 32) <= *(_QWORD *)(v46 + 48))
            {
              v47 = *(_QWORD *)(v45 + 56) >= *(_QWORD *)(v46 + 40) && *(_QWORD *)(v45 + 40) <= *(_QWORD *)(v46 + 56);
              v48 = v47 && *(_BYTE *)(v45 + 96) == 0;
              if (v48 && *(_BYTE *)(v46 + 96) == 0)
              {
                if (!sub_1002B3C54(*((_DWORD *)a5 + 10), *a5, (int *)v45, *((_DWORD *)a5 + 10), *a5, (int *)v46, 0, *((unsigned __int8 *)a5 + 44), (uint64_t)a5[1], (uint64_t)a5[2], a5[3], a5[4]))goto LABEL_98;
                v34 = v70;
              }
            }
            v44 += 8;
            if (v44 == v34)
              goto LABEL_73;
          }
        }
      }
    }
    else if (!sub_1002B17EC(&v73, &v69, a3 + 1, a4, a5, a6, a7, a8))
    {
      goto LABEL_98;
    }
    v51 = (char *)v66;
    v50 = v67;
    if (a3 > 0x63 || (v67 - (_BYTE *)v66) >> 3 < a4)
    {
      if (v66 == v67)
      {
        v52 = 1;
      }
      else
      {
        do
        {
          v53 = v51;
          v51 += 8;
          if (v51 != v50)
          {
            for (j = v51; j != v50; j += 8)
            {
              v55 = *(_QWORD *)v53;
              v56 = *(_QWORD *)j;
              if (*(_QWORD *)(*(_QWORD *)v53 + 48) >= *(_QWORD *)(*(_QWORD *)j + 32)
                && *(_QWORD *)(v55 + 32) <= *(_QWORD *)(v56 + 48))
              {
                v57 = *(_QWORD *)(v55 + 56) >= *(_QWORD *)(v56 + 40) && *(_QWORD *)(v55 + 40) <= *(_QWORD *)(v56 + 56);
                v58 = v57 && *(_BYTE *)(v55 + 96) == 0;
                if (v58 && *(_BYTE *)(v56 + 96) == 0)
                {
                  if (!sub_1002B3C54(*((_DWORD *)a5 + 10), *a5, (int *)v55, *((_DWORD *)a5 + 10), *a5, (int *)v56, 0, *((unsigned __int8 *)a5 + 44), (uint64_t)a5[1], (uint64_t)a5[2], a5[3], a5[4]))goto LABEL_98;
                  v50 = v67;
                }
              }
            }
          }
          v52 = 1;
        }
        while (v51 != v50);
      }
    }
    else
    {
      v52 = sub_1002B17EC(v72, &v66, a3 + 1, a4, a5, a6, a7, a8);
    }
  }
  else
  {
LABEL_98:
    v52 = 0;
  }
  if (__p)
  {
    v64 = (char *)__p;
    operator delete(__p);
  }
  if (v66)
  {
    v67 = (char *)v66;
    operator delete(v66);
  }
  if (v69)
  {
    v70 = (char *)v69;
    operator delete(v69);
  }
  return v52;
}

void sub_1002B1618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25)
{
  void *v26;
  void *v27;

  if (__p)
  {
    operator delete(__p);
    v26 = a21;
    if (!a21)
    {
LABEL_3:
      v27 = a24;
      if (!a24)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v26 = a21;
    if (!a21)
      goto LABEL_3;
  }
  operator delete(v26);
  v27 = a24;
  if (!a24)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v27);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B167C(__int128 *a1, uint64_t **a2, uint64_t **a3, unint64_t a4, unint64_t a5, _QWORD **a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v12;
  uint64_t *v13;
  uint64_t result;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;

  v13 = *a2;
  v12 = a2[1];
  if (a5 <= v12 - *a2 && a4 <= 0x63 && a3[1] - *a3 >= a5)
    return sub_1002B2DD4(a1, a2, a3, a4 + 1, a5, a6, a7, a8, a7, a8, a9);
  if (v13 != v12)
  {
    v15 = a3[1];
    if (*a3 != v15)
    {
      do
      {
        v16 = *a3;
        if (*a3 != v15)
        {
          do
          {
            v17 = *v13;
            v18 = *v16;
            if (*(_QWORD *)(*v13 + 48) >= *(_QWORD *)(*v16 + 32) && *(_QWORD *)(v17 + 32) <= *(_QWORD *)(v18 + 48))
            {
              v19 = *(_QWORD *)(v17 + 56) >= *(_QWORD *)(v18 + 40) && *(_QWORD *)(v17 + 40) <= *(_QWORD *)(v18 + 56);
              v20 = v19 && *(_BYTE *)(v17 + 96) == 0;
              if (v20 && *(_BYTE *)(v18 + 96) == 0)
              {
                result = sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v17, *((_DWORD *)a6 + 10), *a6, (int *)v18, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]);
                if (!(_DWORD)result)
                  return result;
                v15 = a3[1];
              }
            }
            ++v16;
          }
          while (v16 != v15);
          v12 = a2[1];
        }
        ++v13;
      }
      while (v13 != v12);
    }
  }
  return 1;
}

uint64_t sub_1002B17EC(__int128 *a1, _QWORD *a2, unint64_t a3, unint64_t a4, _QWORD **a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *i;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  BOOL v47;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *j;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  BOOL v57;
  int64x2_t v60;
  int64x2_t v61;
  void *__p;
  char *v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  _QWORD v71[2];
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;

  v15 = *((_QWORD *)a1 + 2);
  v14 = *((_QWORD *)a1 + 3);
  v16 = *((_QWORD *)a1 + 1);
  if (v16 >= 0)
    v17 = *((_QWORD *)a1 + 1);
  else
    v17 = v16 + 1;
  v18 = v17 >> 1;
  if (v14 >= 0)
    v19 = *((_QWORD *)a1 + 3);
  else
    v19 = v14 + 1;
  v20 = a1[1];
  v73 = *a1;
  v71[0] = v73;
  v72 = v20;
  v74 = v15;
  v75 = (v19 >> 1)
      + v18
      + ((int)(((_DWORD)v14
              - 2 * (v19 >> 1)
              + (_DWORD)v16
              - 2 * (_DWORD)v18
              + (((v14 - 2 * (v19 >> 1) + (_DWORD)v16 - 2 * (_DWORD)v18) & 0x80) >> 7)) << 24) >> 25);
  v71[1] = v75;
  v68 = 0;
  v69 = 0;
  v70 = 0;
  v65 = 0;
  v66 = 0;
  v67 = 0;
  __p = 0;
  v63 = 0;
  v64 = 0;
  sub_100289FEC(&v73, v71, a2, &v68, (char **)&v65, (char **)&__p);
  v22 = (char *)__p;
  v21 = v63;
  if (__p == v63)
    goto LABEL_32;
  v23 = 0x7FFFFFFFFFFFFFFFLL;
  v24 = 0x8000000000000000;
  v60 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  v61 = vdupq_n_s64(0x8000000000000000);
  v25 = 0x8000000000000000;
  v26 = (char *)__p;
  v27 = 0x7FFFFFFFFFFFFFFFLL;
  do
  {
    v28 = *(_QWORD **)v26;
    v29 = *(_QWORD *)(*(_QWORD *)v26 + 32);
    if (v29 < v27)
    {
      v60.i64[0] = *(_QWORD *)(*(_QWORD *)v26 + 32);
      v27 = v29;
      if (v29 <= v25)
      {
LABEL_12:
        v30 = v28[5];
        if (v30 >= v23)
          goto LABEL_13;
        goto LABEL_21;
      }
    }
    else if (v29 <= v25)
    {
      goto LABEL_12;
    }
    v61.i64[0] = v29;
    v25 = v29;
    v30 = v28[5];
    if (v30 >= v23)
    {
LABEL_13:
      if (v30 <= v24)
        goto LABEL_14;
      goto LABEL_22;
    }
LABEL_21:
    v60.i64[1] = v30;
    v23 = v30;
    if (v30 <= v24)
    {
LABEL_14:
      v31 = v28[6];
      if (v31 >= v27)
        goto LABEL_15;
      goto LABEL_23;
    }
LABEL_22:
    v61.i64[1] = v30;
    v24 = v30;
    v31 = v28[6];
    if (v31 >= v27)
    {
LABEL_15:
      if (v31 <= v25)
        goto LABEL_16;
      goto LABEL_24;
    }
LABEL_23:
    v60.i64[0] = v31;
    v27 = v31;
    if (v31 <= v25)
    {
LABEL_16:
      v32 = v28[7];
      if (v32 < v23)
        goto LABEL_25;
      goto LABEL_17;
    }
LABEL_24:
    v61.i64[0] = v31;
    v25 = v31;
    v32 = v28[7];
    if (v32 < v23)
    {
LABEL_25:
      v60.i64[1] = v32;
      v23 = v32;
      if (v32 <= v24)
        goto LABEL_9;
      goto LABEL_26;
    }
LABEL_17:
    if (v32 <= v24)
      goto LABEL_9;
LABEL_26:
    v61.i64[1] = v32;
    v24 = v32;
LABEL_9:
    v26 += 8;
  }
  while (v26 != v63);
  if (a3 <= 0x63 && (v63 - (_BYTE *)__p) >> 3 >= a4)
  {
    if (sub_1002B1088(&v60, &__p, a3 + 1, a4, a5, a6, a7, a8))
      goto LABEL_30;
    goto LABEL_98;
  }
  do
  {
    v35 = v22 + 8;
    if (v22 + 8 != v21)
    {
      for (i = v22 + 8; i != v21; i += 8)
      {
        v37 = *(_QWORD *)v22;
        v38 = *(_QWORD *)i;
        if (*(_QWORD *)(*(_QWORD *)v22 + 48) >= *(_QWORD *)(*(_QWORD *)i + 32)
          && *(_QWORD *)(v37 + 32) <= *(_QWORD *)(v38 + 48))
        {
          v39 = *(_QWORD *)(v37 + 56) >= *(_QWORD *)(v38 + 40) && *(_QWORD *)(v37 + 40) <= *(_QWORD *)(v38 + 56);
          v40 = v39 && *(_BYTE *)(v37 + 96) == 0;
          if (v40 && *(_BYTE *)(v38 + 96) == 0)
          {
            if (!sub_1002B3C54(*((_DWORD *)a5 + 10), *a5, (int *)v37, *((_DWORD *)a5 + 10), *a5, (int *)v38, 0, *((unsigned __int8 *)a5 + 44), (uint64_t)a5[1], (uint64_t)a5[2], a5[3], a5[4]))goto LABEL_98;
            v21 = v63;
          }
        }
      }
    }
    v22 += 8;
  }
  while (v35 != v21);
LABEL_30:
  if (sub_1002B1DE4(v60.i64, (uint64_t **)&__p, (uint64_t **)&v68, a3, a4, a5, a6, a7, a8)
    && (sub_1002B1DE4(v60.i64, (uint64_t **)&__p, (uint64_t **)&v65, a3, a4, a5, a6, a7, a8) & 1) != 0)
  {
LABEL_32:
    v34 = (char *)v68;
    v33 = v69;
    if (a3 > 0x63 || (v69 - (_BYTE *)v68) >> 3 < a4)
    {
LABEL_73:
      while (v34 != v33)
      {
        v42 = v34;
        v34 += 8;
        if (v34 != v33)
        {
          v43 = v34;
          while (1)
          {
            v44 = *(_QWORD *)v42;
            v45 = *(_QWORD *)v43;
            if (*(_QWORD *)(*(_QWORD *)v42 + 48) >= *(_QWORD *)(*(_QWORD *)v43 + 32)
              && *(_QWORD *)(v44 + 32) <= *(_QWORD *)(v45 + 48))
            {
              v46 = *(_QWORD *)(v44 + 56) >= *(_QWORD *)(v45 + 40) && *(_QWORD *)(v44 + 40) <= *(_QWORD *)(v45 + 56);
              v47 = v46 && *(_BYTE *)(v44 + 96) == 0;
              if (v47 && *(_BYTE *)(v45 + 96) == 0)
              {
                if (!sub_1002B3C54(*((_DWORD *)a5 + 10), *a5, (int *)v44, *((_DWORD *)a5 + 10), *a5, (int *)v45, 0, *((unsigned __int8 *)a5 + 44), (uint64_t)a5[1], (uint64_t)a5[2], a5[3], a5[4]))goto LABEL_98;
                v33 = v69;
              }
            }
            v43 += 8;
            if (v43 == v33)
              goto LABEL_73;
          }
        }
      }
    }
    else if (!sub_1002B1088(&v73, &v68, a3 + 1, a4, a5, a6, a7, a8))
    {
      goto LABEL_98;
    }
    v50 = (char *)v65;
    v49 = v66;
    if (a3 > 0x63 || (v66 - (_BYTE *)v65) >> 3 < a4)
    {
      if (v65 == v66)
      {
        v51 = 1;
      }
      else
      {
        do
        {
          v52 = v50;
          v50 += 8;
          if (v50 != v49)
          {
            for (j = v50; j != v49; j += 8)
            {
              v54 = *(_QWORD *)v52;
              v55 = *(_QWORD *)j;
              if (*(_QWORD *)(*(_QWORD *)v52 + 48) >= *(_QWORD *)(*(_QWORD *)j + 32)
                && *(_QWORD *)(v54 + 32) <= *(_QWORD *)(v55 + 48))
              {
                v56 = *(_QWORD *)(v54 + 56) >= *(_QWORD *)(v55 + 40) && *(_QWORD *)(v54 + 40) <= *(_QWORD *)(v55 + 56);
                v57 = v56 && *(_BYTE *)(v54 + 96) == 0;
                if (v57 && *(_BYTE *)(v55 + 96) == 0)
                {
                  if (!sub_1002B3C54(*((_DWORD *)a5 + 10), *a5, (int *)v54, *((_DWORD *)a5 + 10), *a5, (int *)v55, 0, *((unsigned __int8 *)a5 + 44), (uint64_t)a5[1], (uint64_t)a5[2], a5[3], a5[4]))goto LABEL_98;
                  v49 = v66;
                }
              }
            }
          }
          v51 = 1;
        }
        while (v50 != v49);
      }
    }
    else
    {
      v51 = sub_1002B1088(v71, &v65, a3 + 1, a4, a5, a6, a7, a8);
    }
  }
  else
  {
LABEL_98:
    v51 = 0;
  }
  if (__p)
  {
    v63 = (char *)__p;
    operator delete(__p);
  }
  if (v65)
  {
    v66 = (char *)v65;
    operator delete(v65);
  }
  if (v68)
  {
    v69 = (char *)v68;
    operator delete(v68);
  }
  return v51;
}

void sub_1002B1D80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25)
{
  void *v26;
  void *v27;

  if (__p)
  {
    operator delete(__p);
    v26 = a21;
    if (!a21)
    {
LABEL_3:
      v27 = a24;
      if (!a24)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v26 = a21;
    if (!a21)
      goto LABEL_3;
  }
  operator delete(v26);
  v27 = a24;
  if (!a24)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v27);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B1DE4(uint64_t *a1, uint64_t **a2, uint64_t **a3, unint64_t a4, unint64_t a5, _QWORD **a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v12;
  uint64_t *v13;
  uint64_t result;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;

  v13 = *a2;
  v12 = a2[1];
  if (a5 <= v12 - *a2 && a4 <= 0x63 && a3[1] - *a3 >= a5)
    return sub_1002B1F54(a1, a2, a3, a4 + 1, a5, a6, a7, a8, a7, a8, a9);
  if (v13 != v12)
  {
    v15 = a3[1];
    if (*a3 != v15)
    {
      do
      {
        v16 = *a3;
        if (*a3 != v15)
        {
          do
          {
            v17 = *v13;
            v18 = *v16;
            if (*(_QWORD *)(*v13 + 48) >= *(_QWORD *)(*v16 + 32) && *(_QWORD *)(v17 + 32) <= *(_QWORD *)(v18 + 48))
            {
              v19 = *(_QWORD *)(v17 + 56) >= *(_QWORD *)(v18 + 40) && *(_QWORD *)(v17 + 40) <= *(_QWORD *)(v18 + 56);
              v20 = v19 && *(_BYTE *)(v17 + 96) == 0;
              if (v20 && *(_BYTE *)(v18 + 96) == 0)
              {
                result = sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v17, *((_DWORD *)a6 + 10), *a6, (int *)v18, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]);
                if (!(_DWORD)result)
                  return result;
                v15 = a3[1];
              }
            }
            ++v16;
          }
          while (v16 != v15);
          v12 = a2[1];
        }
        ++v13;
      }
      while (v13 != v12);
    }
  }
  return 1;
}

uint64_t sub_1002B1F54(uint64_t *a1, _QWORD *a2, _QWORD *a3, unint64_t a4, unint64_t a5, _QWORD **a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  BOOL v48;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  BOOL v58;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  BOOL v64;
  uint64_t v66;
  int64_t v67;
  int64_t v68;
  uint64_t v69;
  _QWORD *v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int64_t v80;
  int64_t v81;
  uint64_t v82;
  _QWORD *v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  BOOL v92;
  char *v94;
  char *v95;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  BOOL v103;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  BOOL v112;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  BOOL v121;
  int64x2_t v124;
  int64x2_t v125;
  void *__p;
  char *v127;
  uint64_t v128;
  void *v129;
  char *v130;
  uint64_t v131;
  void *v132;
  char *v133;
  uint64_t v134;
  void *v135;
  char *v136;
  uint64_t v137;
  void *v138;
  char *v139;
  uint64_t v140;
  void *v141;
  char *v142;
  uint64_t v143;
  _QWORD v144[2];
  __int128 v145;
  __int128 v146;
  __int128 v147;

  v17 = *a1;
  v18 = a1[2];
  if (*a1 >= 0)
    v19 = *a1;
  else
    v19 = v17 + 1;
  v20 = v19 >> 1;
  v22 = *(_OWORD *)a1;
  v21 = *((_OWORD *)a1 + 1);
  v146 = *(_OWORD *)a1;
  v147 = v21;
  if (v18 >= 0)
    v23 = v18;
  else
    v23 = v18 + 1;
  v24 = v23 >> 1;
  v144[1] = *((_QWORD *)&v22 + 1);
  v145 = v21;
  v25 = v18 - 2 * v24 + v17 - 2 * v20;
  *(_QWORD *)&v147 = v24 + v20 + ((v25 + ((v25 & 0x80) >> 7)) << 24 >> 25);
  v144[0] = v147;
  v141 = 0;
  v142 = 0;
  v143 = 0;
  v138 = 0;
  v139 = 0;
  v140 = 0;
  v135 = 0;
  v136 = 0;
  v137 = 0;
  v132 = 0;
  v133 = 0;
  v134 = 0;
  v129 = 0;
  v130 = 0;
  v131 = 0;
  __p = 0;
  v127 = 0;
  v128 = 0;
  sub_100289FEC(&v146, v144, a2, &v141, (char **)&v138, (char **)&v135);
  sub_100289FEC(&v146, v144, a3, &v132, (char **)&v129, (char **)&__p);
  v27 = (char *)v135;
  v26 = v136;
  if (v135 == v136)
    goto LABEL_147;
  v29 = (char *)__p;
  v28 = v127;
  if (a5 > (v136 - (_BYTE *)v135) >> 3 || a4 > 0x63 || (v127 - (_BYTE *)__p) >> 3 < a5)
  {
    if (__p != v127)
    {
      do
      {
        v44 = (char *)__p;
        if (__p != v28)
        {
          do
          {
            v45 = *(_QWORD *)v27;
            v46 = *(_QWORD *)v44;
            if (*(_QWORD *)(*(_QWORD *)v27 + 48) >= *(_QWORD *)(*(_QWORD *)v44 + 32)
              && *(_QWORD *)(v45 + 32) <= *(_QWORD *)(v46 + 48))
            {
              v47 = *(_QWORD *)(v45 + 56) >= *(_QWORD *)(v46 + 40) && *(_QWORD *)(v45 + 40) <= *(_QWORD *)(v46 + 56);
              v48 = v47 && *(_BYTE *)(v45 + 96) == 0;
              if (v48 && *(_BYTE *)(v46 + 96) == 0)
              {
                if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v45, *((_DWORD *)a6 + 10), *a6, (int *)v46, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
                v28 = v127;
              }
            }
            v44 += 8;
          }
          while (v44 != v28);
          v26 = v136;
        }
        v27 += 8;
      }
      while (v27 != v26);
    }
    goto LABEL_72;
  }
  v30 = 0x7FFFFFFFFFFFFFFFLL;
  v31 = 0x8000000000000000;
  v124 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  v125 = vdupq_n_s64(0x8000000000000000);
  v32 = 0x8000000000000000;
  v33 = 0x7FFFFFFFFFFFFFFFLL;
  do
  {
    v34 = *(_QWORD **)v27;
    v35 = *(_QWORD *)(*(_QWORD *)v27 + 32);
    if (v35 >= v33)
    {
      if (v35 <= v32)
      {
LABEL_15:
        v36 = v34[5];
        if (v36 < v30)
          goto LABEL_16;
        goto LABEL_24;
      }
    }
    else
    {
      v124.i64[0] = *(_QWORD *)(*(_QWORD *)v27 + 32);
      v33 = v35;
      if (v35 <= v32)
        goto LABEL_15;
    }
    v125.i64[0] = v35;
    v32 = v35;
    v36 = v34[5];
    if (v36 < v30)
    {
LABEL_16:
      v124.i64[1] = v36;
      v30 = v36;
      if (v36 <= v31)
        goto LABEL_17;
      goto LABEL_25;
    }
LABEL_24:
    if (v36 <= v31)
    {
LABEL_17:
      v37 = v34[6];
      if (v37 < v33)
        goto LABEL_18;
      goto LABEL_26;
    }
LABEL_25:
    v125.i64[1] = v36;
    v31 = v36;
    v37 = v34[6];
    if (v37 < v33)
    {
LABEL_18:
      v124.i64[0] = v37;
      v33 = v37;
      if (v37 <= v32)
        goto LABEL_19;
      goto LABEL_27;
    }
LABEL_26:
    if (v37 <= v32)
    {
LABEL_19:
      v38 = v34[7];
      if (v38 >= v30)
        goto LABEL_28;
      goto LABEL_20;
    }
LABEL_27:
    v125.i64[0] = v37;
    v32 = v37;
    v38 = v34[7];
    if (v38 >= v30)
    {
LABEL_28:
      if (v38 <= v31)
        goto LABEL_12;
      goto LABEL_29;
    }
LABEL_20:
    v124.i64[1] = v38;
    v30 = v38;
    if (v38 <= v31)
      goto LABEL_12;
LABEL_29:
    v125.i64[1] = v38;
    v31 = v38;
LABEL_12:
    v27 += 8;
  }
  while (v27 != v136);
  while (v29 != v127)
  {
    v39 = *(_QWORD **)v29;
    v40 = *(_QWORD *)(*(_QWORD *)v29 + 32);
    if (v40 >= v33)
    {
      if (v40 <= v32)
      {
LABEL_34:
        v41 = v39[5];
        if (v41 < v30)
          goto LABEL_35;
        goto LABEL_43;
      }
    }
    else
    {
      v124.i64[0] = *(_QWORD *)(*(_QWORD *)v29 + 32);
      v33 = v40;
      if (v40 <= v32)
        goto LABEL_34;
    }
    v125.i64[0] = v40;
    v32 = v40;
    v41 = v39[5];
    if (v41 < v30)
    {
LABEL_35:
      v124.i64[1] = v41;
      v30 = v41;
      if (v41 <= v31)
        goto LABEL_36;
      goto LABEL_44;
    }
LABEL_43:
    if (v41 <= v31)
    {
LABEL_36:
      v42 = v39[6];
      if (v42 < v33)
        goto LABEL_37;
      goto LABEL_45;
    }
LABEL_44:
    v125.i64[1] = v41;
    v31 = v41;
    v42 = v39[6];
    if (v42 < v33)
    {
LABEL_37:
      v124.i64[0] = v42;
      v33 = v42;
      if (v42 <= v32)
        goto LABEL_38;
      goto LABEL_46;
    }
LABEL_45:
    if (v42 <= v32)
    {
LABEL_38:
      v43 = v39[7];
      if (v43 >= v30)
        goto LABEL_47;
      goto LABEL_39;
    }
LABEL_46:
    v125.i64[0] = v42;
    v32 = v42;
    v43 = v39[7];
    if (v43 >= v30)
    {
LABEL_47:
      if (v43 <= v31)
        goto LABEL_30;
      goto LABEL_48;
    }
LABEL_39:
    v124.i64[1] = v43;
    v30 = v43;
    if (v43 <= v31)
      goto LABEL_30;
LABEL_48:
    v125.i64[1] = v43;
    v31 = v43;
LABEL_30:
    v29 += 8;
  }
  if ((sub_1002B2DD4(&v124, &v135, &__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
    goto LABEL_278;
LABEL_72:
  v50 = v133;
  if (a5 > (v133 - (_BYTE *)v132) >> 3)
  {
    v52 = (char *)v135;
    v51 = v136;
    goto LABEL_75;
  }
  v52 = (char *)v135;
  v51 = v136;
  if (a5 <= (v130 - (_BYTE *)v129) >> 3 && a4 <= 0x63 && (v136 - (_BYTE *)v135) >> 3 >= a5)
  {
    v124 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
    v125 = vdupq_n_s64(0x8000000000000000);
    if (v135 != v136)
    {
      v66 = 0x7FFFFFFFFFFFFFFFLL;
      v67 = 0x8000000000000000;
      v68 = 0x8000000000000000;
      v69 = 0x7FFFFFFFFFFFFFFFLL;
      do
      {
        v70 = *(_QWORD **)v52;
        v71 = *(_QWORD *)(*(_QWORD *)v52 + 32);
        if (v71 >= v69)
        {
          if (v71 <= v68)
          {
LABEL_128:
            v72 = v70[5];
            if (v72 < v66)
              goto LABEL_129;
            goto LABEL_137;
          }
        }
        else
        {
          v124.i64[0] = *(_QWORD *)(*(_QWORD *)v52 + 32);
          v69 = v71;
          if (v71 <= v68)
            goto LABEL_128;
        }
        v125.i64[0] = v71;
        v68 = v71;
        v72 = v70[5];
        if (v72 < v66)
        {
LABEL_129:
          v124.i64[1] = v72;
          v66 = v72;
          if (v72 <= v67)
            goto LABEL_130;
          goto LABEL_138;
        }
LABEL_137:
        if (v72 <= v67)
        {
LABEL_130:
          v73 = v70[6];
          if (v73 < v69)
            goto LABEL_131;
          goto LABEL_139;
        }
LABEL_138:
        v125.i64[1] = v72;
        v67 = v72;
        v73 = v70[6];
        if (v73 < v69)
        {
LABEL_131:
          v124.i64[0] = v73;
          v69 = v73;
          if (v73 <= v68)
            goto LABEL_132;
          goto LABEL_140;
        }
LABEL_139:
        if (v73 <= v68)
        {
LABEL_132:
          v74 = v70[7];
          if (v74 < v66)
            goto LABEL_133;
          goto LABEL_141;
        }
LABEL_140:
        v125.i64[0] = v73;
        v68 = v73;
        v74 = v70[7];
        if (v74 < v66)
        {
LABEL_133:
          v124.i64[1] = v74;
          v66 = v74;
          if (v74 > v67)
            goto LABEL_142;
          goto LABEL_125;
        }
LABEL_141:
        if (v74 > v67)
        {
LABEL_142:
          v125.i64[1] = v74;
          v67 = v74;
        }
LABEL_125:
        v52 += 8;
      }
      while (v52 != v136);
    }
    if (sub_1002B2DD4(&v124, &v135, &v132, a4 + 1, a5, a6, a7, a8, a9, a10, a11)
      && (sub_1002B2DD4(&v124, &v135, &v129, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) != 0)
    {
      goto LABEL_147;
    }
LABEL_278:
    v115 = 0;
    v116 = (char *)__p;
    if (!__p)
      goto LABEL_280;
LABEL_279:
    v127 = v116;
    operator delete(v116);
    goto LABEL_280;
  }
LABEL_75:
  if (v132 == v133 || v52 == v51)
  {
    if (v52 == v51)
      goto LABEL_147;
  }
  else
  {
    do
    {
      v54 = (char *)v132;
      if (v132 != v50)
      {
        do
        {
          v55 = *(_QWORD *)v52;
          v56 = *(_QWORD *)v54;
          if (*(_QWORD *)(*(_QWORD *)v52 + 48) >= *(_QWORD *)(*(_QWORD *)v54 + 32)
            && *(_QWORD *)(v55 + 32) <= *(_QWORD *)(v56 + 48))
          {
            v57 = *(_QWORD *)(v55 + 56) >= *(_QWORD *)(v56 + 40) && *(_QWORD *)(v55 + 40) <= *(_QWORD *)(v56 + 56);
            v58 = v57 && *(_BYTE *)(v55 + 96) == 0;
            if (v58 && *(_BYTE *)(v56 + 96) == 0)
            {
              if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v55, *((_DWORD *)a6 + 10), *a6, (int *)v56, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
              v50 = v133;
            }
          }
          v54 += 8;
        }
        while (v54 != v50);
        v51 = v136;
      }
      v52 += 8;
    }
    while (v52 != v51);
    v52 = (char *)v135;
    if (v135 == v51)
      goto LABEL_147;
  }
  v53 = v130;
  if (v129 != v130)
  {
    do
    {
      v60 = (char *)v129;
      if (v129 != v53)
      {
        do
        {
          v61 = *(_QWORD *)v52;
          v62 = *(_QWORD *)v60;
          if (*(_QWORD *)(*(_QWORD *)v52 + 48) >= *(_QWORD *)(*(_QWORD *)v60 + 32)
            && *(_QWORD *)(v61 + 32) <= *(_QWORD *)(v62 + 48))
          {
            v63 = *(_QWORD *)(v61 + 56) >= *(_QWORD *)(v62 + 40) && *(_QWORD *)(v61 + 40) <= *(_QWORD *)(v62 + 56);
            v64 = v63 && *(_BYTE *)(v61 + 96) == 0;
            if (v64 && *(_BYTE *)(v62 + 96) == 0)
            {
              if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v61, *((_DWORD *)a6 + 10), *a6, (int *)v62, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
              v53 = v130;
            }
          }
          v60 += 8;
        }
        while (v60 != v53);
        v51 = v136;
      }
      v52 += 8;
    }
    while (v52 != v51);
  }
LABEL_147:
  v76 = (char *)__p;
  v75 = v127;
  if (__p == v127)
    goto LABEL_198;
  v78 = (char *)v141;
  v77 = v142;
  if (a5 > (v142 - (_BYTE *)v141) >> 3
    || a5 > (v139 - (_BYTE *)v138) >> 3
    || a4 > 0x63
    || (v127 - (_BYTE *)__p) >> 3 < a5)
  {
    while (v78 != v77)
    {
      v88 = (char *)__p;
      if (__p != v75)
      {
        do
        {
          v89 = *(_QWORD *)v78;
          v90 = *(_QWORD *)v88;
          if (*(_QWORD *)(*(_QWORD *)v78 + 48) >= *(_QWORD *)(*(_QWORD *)v88 + 32)
            && *(_QWORD *)(v89 + 32) <= *(_QWORD *)(v90 + 48))
          {
            v91 = *(_QWORD *)(v89 + 56) >= *(_QWORD *)(v90 + 40) && *(_QWORD *)(v89 + 40) <= *(_QWORD *)(v90 + 56);
            v92 = v91 && *(_BYTE *)(v89 + 96) == 0;
            if (v92 && *(_BYTE *)(v90 + 96) == 0)
            {
              if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v89, *((_DWORD *)a6 + 10), *a6, (int *)v90, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
              v75 = v127;
            }
          }
          v88 += 8;
        }
        while (v88 != v75);
        v77 = v142;
      }
      v78 += 8;
    }
    v95 = (char *)v138;
    v94 = v139;
    if (v138 != v139 && __p != v75)
    {
      do
      {
        v99 = (char *)__p;
        if (__p != v75)
        {
          do
          {
            v100 = *(_QWORD *)v95;
            v101 = *(_QWORD *)v99;
            if (*(_QWORD *)(*(_QWORD *)v95 + 48) >= *(_QWORD *)(*(_QWORD *)v99 + 32)
              && *(_QWORD *)(v100 + 32) <= *(_QWORD *)(v101 + 48))
            {
              v102 = *(_QWORD *)(v100 + 56) >= *(_QWORD *)(v101 + 40)
                  && *(_QWORD *)(v100 + 40) <= *(_QWORD *)(v101 + 56);
              v103 = v102 && *(_BYTE *)(v100 + 96) == 0;
              if (v103 && *(_BYTE *)(v101 + 96) == 0)
              {
                if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v100, *((_DWORD *)a6 + 10), *a6, (int *)v101, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
                v75 = v127;
              }
            }
            v99 += 8;
          }
          while (v99 != v75);
          v94 = v139;
        }
        v95 += 8;
      }
      while (v95 != v94);
    }
    goto LABEL_198;
  }
  v79 = 0x7FFFFFFFFFFFFFFFLL;
  v80 = 0x8000000000000000;
  v124 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  v125 = vdupq_n_s64(0x8000000000000000);
  v81 = 0x8000000000000000;
  v82 = 0x7FFFFFFFFFFFFFFFLL;
  while (2)
  {
    v83 = *(_QWORD **)v76;
    v84 = *(_QWORD *)(*(_QWORD *)v76 + 32);
    if (v84 >= v82)
    {
      if (v84 > v81)
        goto LABEL_164;
LABEL_156:
      v85 = v83[5];
      if (v85 < v79)
        goto LABEL_157;
LABEL_165:
      if (v85 > v80)
        goto LABEL_166;
LABEL_158:
      v86 = v83[6];
      if (v86 < v82)
        goto LABEL_159;
LABEL_167:
      if (v86 > v81)
        goto LABEL_168;
LABEL_160:
      v87 = v83[7];
      if (v87 < v79)
        goto LABEL_161;
LABEL_169:
      if (v87 > v80)
      {
LABEL_170:
        v125.i64[1] = v87;
        v80 = v87;
      }
    }
    else
    {
      v124.i64[0] = *(_QWORD *)(*(_QWORD *)v76 + 32);
      v82 = v84;
      if (v84 <= v81)
        goto LABEL_156;
LABEL_164:
      v125.i64[0] = v84;
      v81 = v84;
      v85 = v83[5];
      if (v85 >= v79)
        goto LABEL_165;
LABEL_157:
      v124.i64[1] = v85;
      v79 = v85;
      if (v85 <= v80)
        goto LABEL_158;
LABEL_166:
      v125.i64[1] = v85;
      v80 = v85;
      v86 = v83[6];
      if (v86 >= v82)
        goto LABEL_167;
LABEL_159:
      v124.i64[0] = v86;
      v82 = v86;
      if (v86 <= v81)
        goto LABEL_160;
LABEL_168:
      v125.i64[0] = v86;
      v81 = v86;
      v87 = v83[7];
      if (v87 >= v79)
        goto LABEL_169;
LABEL_161:
      v124.i64[1] = v87;
      v79 = v87;
      if (v87 > v80)
        goto LABEL_170;
    }
    v76 += 8;
    if (v76 != v127)
      continue;
    break;
  }
  if (!sub_1002B2DD4(&v124, &v141, &__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11)
    || (sub_1002B2DD4(&v124, &v138, &__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_278;
  }
LABEL_198:
  v98 = (char *)v141;
  v97 = v142;
  if (a5 > (v142 - (_BYTE *)v141) >> 3 || a4 > 0x63 || (v133 - (_BYTE *)v132) >> 3 < a5)
  {
    if (v141 != v142)
    {
      v105 = v133;
      if (v132 != v133)
      {
        do
        {
          v108 = (char *)v132;
          if (v132 != v105)
          {
            do
            {
              v109 = *(_QWORD *)v98;
              v110 = *(_QWORD *)v108;
              if (*(_QWORD *)(*(_QWORD *)v98 + 48) >= *(_QWORD *)(*(_QWORD *)v108 + 32)
                && *(_QWORD *)(v109 + 32) <= *(_QWORD *)(v110 + 48))
              {
                v111 = *(_QWORD *)(v109 + 56) >= *(_QWORD *)(v110 + 40)
                    && *(_QWORD *)(v109 + 40) <= *(_QWORD *)(v110 + 56);
                v112 = v111 && *(_BYTE *)(v109 + 96) == 0;
                if (v112 && *(_BYTE *)(v110 + 96) == 0)
                {
                  if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v109, *((_DWORD *)a6 + 10), *a6, (int *)v110, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
                  v105 = v133;
                }
              }
              v108 += 8;
            }
            while (v108 != v105);
            v97 = v142;
          }
          v98 += 8;
        }
        while (v98 != v97);
      }
    }
  }
  else if ((sub_1002B2DD4(&v146, &v141, &v132, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_278;
  }
  v107 = (char *)v138;
  v106 = v139;
  if (a5 > (v139 - (_BYTE *)v138) >> 3 || a4 > 0x63 || (v130 - (_BYTE *)v129) >> 3 < a5)
  {
    if (v138 != v139)
    {
      v114 = v130;
      if (v129 != v130)
      {
        do
        {
          v117 = (char *)v129;
          if (v129 != v114)
          {
            do
            {
              v118 = *(_QWORD *)v107;
              v119 = *(_QWORD *)v117;
              if (*(_QWORD *)(*(_QWORD *)v107 + 48) >= *(_QWORD *)(*(_QWORD *)v117 + 32)
                && *(_QWORD *)(v118 + 32) <= *(_QWORD *)(v119 + 48))
              {
                v120 = *(_QWORD *)(v118 + 56) >= *(_QWORD *)(v119 + 40)
                    && *(_QWORD *)(v118 + 40) <= *(_QWORD *)(v119 + 56);
                v121 = v120 && *(_BYTE *)(v118 + 96) == 0;
                if (v121 && *(_BYTE *)(v119 + 96) == 0)
                {
                  if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v118, *((_DWORD *)a6 + 10), *a6, (int *)v119, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
                  v114 = v130;
                }
              }
              v117 += 8;
            }
            while (v117 != v114);
            v106 = v139;
          }
          v107 += 8;
        }
        while (v107 != v106);
      }
    }
  }
  else if ((sub_1002B2DD4(v144, &v138, &v129, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_278;
  }
  v115 = 1;
  v116 = (char *)__p;
  if (__p)
    goto LABEL_279;
LABEL_280:
  if (v129)
  {
    v130 = (char *)v129;
    operator delete(v129);
  }
  if (v132)
  {
    v133 = (char *)v132;
    operator delete(v132);
  }
  if (v135)
  {
    v136 = (char *)v135;
    operator delete(v135);
  }
  if (v138)
  {
    v139 = (char *)v138;
    operator delete(v138);
  }
  if (v141)
  {
    v142 = (char *)v141;
    operator delete(v141);
  }
  return v115;
}

void sub_1002B2D10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;

  if (__p)
  {
    operator delete(__p);
    v34 = a20;
    if (!a20)
    {
LABEL_3:
      v35 = a23;
      if (!a23)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else
  {
    v34 = a20;
    if (!a20)
      goto LABEL_3;
  }
  operator delete(v34);
  v35 = a23;
  if (!a23)
  {
LABEL_4:
    v36 = a26;
    if (!a26)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(v35);
  v36 = a26;
  if (!a26)
  {
LABEL_5:
    v37 = a29;
    if (!a29)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v36);
  v37 = a29;
  if (!a29)
  {
LABEL_6:
    v38 = a32;
    if (!a32)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v37);
  v38 = a32;
  if (!a32)
LABEL_7:
    _Unwind_Resume(exception_object);
LABEL_13:
  operator delete(v38);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B2DD4(__int128 *a1, _QWORD *a2, _QWORD *a3, unint64_t a4, unint64_t a5, _QWORD **a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  BOOL v48;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  BOOL v58;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  BOOL v64;
  uint64_t v66;
  int64_t v67;
  int64_t v68;
  uint64_t v69;
  _QWORD *v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int64_t v80;
  int64_t v81;
  uint64_t v82;
  _QWORD *v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  BOOL v92;
  char *v94;
  char *v95;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  BOOL v103;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  BOOL v112;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  BOOL v121;
  int64x2_t v124;
  int64x2_t v125;
  void *__p;
  char *v127;
  uint64_t v128;
  void *v129;
  char *v130;
  uint64_t v131;
  void *v132;
  char *v133;
  uint64_t v134;
  void *v135;
  char *v136;
  uint64_t v137;
  void *v138;
  char *v139;
  uint64_t v140;
  void *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144[2];
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;

  v18 = *((_QWORD *)a1 + 2);
  v17 = *((_QWORD *)a1 + 3);
  v19 = *((_QWORD *)a1 + 1);
  if (v19 >= 0)
    v20 = *((_QWORD *)a1 + 1);
  else
    v20 = v19 + 1;
  v21 = v20 >> 1;
  v22 = *a1;
  v145 = a1[1];
  v146 = v22;
  if (v17 >= 0)
    v23 = v17;
  else
    v23 = v17 + 1;
  v24 = v23 >> 1;
  v144[0] = v22;
  v25 = v17 - 2 * v24 + v19 - 2 * v21;
  v147 = v18;
  v148 = v24 + v21 + ((v25 + ((v25 & 0x80) >> 7)) << 24 >> 25);
  v144[1] = v148;
  v141 = 0;
  v142 = 0;
  v143 = 0;
  v138 = 0;
  v139 = 0;
  v140 = 0;
  v135 = 0;
  v136 = 0;
  v137 = 0;
  v132 = 0;
  v133 = 0;
  v134 = 0;
  v129 = 0;
  v130 = 0;
  v131 = 0;
  __p = 0;
  v127 = 0;
  v128 = 0;
  sub_100289FEC(&v146, v144, a2, &v141, (char **)&v138, (char **)&v135);
  sub_100289FEC(&v146, v144, a3, &v132, (char **)&v129, (char **)&__p);
  v27 = (char *)v135;
  v26 = v136;
  if (v135 == v136)
    goto LABEL_147;
  v29 = (char *)__p;
  v28 = v127;
  if (a5 > (v136 - (_BYTE *)v135) >> 3 || a4 > 0x63 || (v127 - (_BYTE *)__p) >> 3 < a5)
  {
    if (__p != v127)
    {
      do
      {
        v44 = (char *)__p;
        if (__p != v28)
        {
          do
          {
            v45 = *(_QWORD *)v27;
            v46 = *(_QWORD *)v44;
            if (*(_QWORD *)(*(_QWORD *)v27 + 48) >= *(_QWORD *)(*(_QWORD *)v44 + 32)
              && *(_QWORD *)(v45 + 32) <= *(_QWORD *)(v46 + 48))
            {
              v47 = *(_QWORD *)(v45 + 56) >= *(_QWORD *)(v46 + 40) && *(_QWORD *)(v45 + 40) <= *(_QWORD *)(v46 + 56);
              v48 = v47 && *(_BYTE *)(v45 + 96) == 0;
              if (v48 && *(_BYTE *)(v46 + 96) == 0)
              {
                if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v45, *((_DWORD *)a6 + 10), *a6, (int *)v46, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
                v28 = v127;
              }
            }
            v44 += 8;
          }
          while (v44 != v28);
          v26 = v136;
        }
        v27 += 8;
      }
      while (v27 != v26);
    }
    goto LABEL_72;
  }
  v30 = 0x7FFFFFFFFFFFFFFFLL;
  v31 = 0x8000000000000000;
  v124 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  v125 = vdupq_n_s64(0x8000000000000000);
  v32 = 0x8000000000000000;
  v33 = 0x7FFFFFFFFFFFFFFFLL;
  do
  {
    v34 = *(_QWORD **)v27;
    v35 = *(_QWORD *)(*(_QWORD *)v27 + 32);
    if (v35 >= v33)
    {
      if (v35 <= v32)
      {
LABEL_15:
        v36 = v34[5];
        if (v36 < v30)
          goto LABEL_16;
        goto LABEL_24;
      }
    }
    else
    {
      v124.i64[0] = *(_QWORD *)(*(_QWORD *)v27 + 32);
      v33 = v35;
      if (v35 <= v32)
        goto LABEL_15;
    }
    v125.i64[0] = v35;
    v32 = v35;
    v36 = v34[5];
    if (v36 < v30)
    {
LABEL_16:
      v124.i64[1] = v36;
      v30 = v36;
      if (v36 <= v31)
        goto LABEL_17;
      goto LABEL_25;
    }
LABEL_24:
    if (v36 <= v31)
    {
LABEL_17:
      v37 = v34[6];
      if (v37 < v33)
        goto LABEL_18;
      goto LABEL_26;
    }
LABEL_25:
    v125.i64[1] = v36;
    v31 = v36;
    v37 = v34[6];
    if (v37 < v33)
    {
LABEL_18:
      v124.i64[0] = v37;
      v33 = v37;
      if (v37 <= v32)
        goto LABEL_19;
      goto LABEL_27;
    }
LABEL_26:
    if (v37 <= v32)
    {
LABEL_19:
      v38 = v34[7];
      if (v38 >= v30)
        goto LABEL_28;
      goto LABEL_20;
    }
LABEL_27:
    v125.i64[0] = v37;
    v32 = v37;
    v38 = v34[7];
    if (v38 >= v30)
    {
LABEL_28:
      if (v38 <= v31)
        goto LABEL_12;
      goto LABEL_29;
    }
LABEL_20:
    v124.i64[1] = v38;
    v30 = v38;
    if (v38 <= v31)
      goto LABEL_12;
LABEL_29:
    v125.i64[1] = v38;
    v31 = v38;
LABEL_12:
    v27 += 8;
  }
  while (v27 != v136);
  while (v29 != v127)
  {
    v39 = *(_QWORD **)v29;
    v40 = *(_QWORD *)(*(_QWORD *)v29 + 32);
    if (v40 >= v33)
    {
      if (v40 <= v32)
      {
LABEL_34:
        v41 = v39[5];
        if (v41 < v30)
          goto LABEL_35;
        goto LABEL_43;
      }
    }
    else
    {
      v124.i64[0] = *(_QWORD *)(*(_QWORD *)v29 + 32);
      v33 = v40;
      if (v40 <= v32)
        goto LABEL_34;
    }
    v125.i64[0] = v40;
    v32 = v40;
    v41 = v39[5];
    if (v41 < v30)
    {
LABEL_35:
      v124.i64[1] = v41;
      v30 = v41;
      if (v41 <= v31)
        goto LABEL_36;
      goto LABEL_44;
    }
LABEL_43:
    if (v41 <= v31)
    {
LABEL_36:
      v42 = v39[6];
      if (v42 < v33)
        goto LABEL_37;
      goto LABEL_45;
    }
LABEL_44:
    v125.i64[1] = v41;
    v31 = v41;
    v42 = v39[6];
    if (v42 < v33)
    {
LABEL_37:
      v124.i64[0] = v42;
      v33 = v42;
      if (v42 <= v32)
        goto LABEL_38;
      goto LABEL_46;
    }
LABEL_45:
    if (v42 <= v32)
    {
LABEL_38:
      v43 = v39[7];
      if (v43 >= v30)
        goto LABEL_47;
      goto LABEL_39;
    }
LABEL_46:
    v125.i64[0] = v42;
    v32 = v42;
    v43 = v39[7];
    if (v43 >= v30)
    {
LABEL_47:
      if (v43 <= v31)
        goto LABEL_30;
      goto LABEL_48;
    }
LABEL_39:
    v124.i64[1] = v43;
    v30 = v43;
    if (v43 <= v31)
      goto LABEL_30;
LABEL_48:
    v125.i64[1] = v43;
    v31 = v43;
LABEL_30:
    v29 += 8;
  }
  if ((sub_1002B1F54(v124.i64, &v135, &__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
    goto LABEL_278;
LABEL_72:
  v50 = v133;
  if (a5 > (v133 - (_BYTE *)v132) >> 3)
  {
    v52 = (char *)v135;
    v51 = v136;
    goto LABEL_75;
  }
  v52 = (char *)v135;
  v51 = v136;
  if (a5 <= (v130 - (_BYTE *)v129) >> 3 && a4 <= 0x63 && (v136 - (_BYTE *)v135) >> 3 >= a5)
  {
    v124 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
    v125 = vdupq_n_s64(0x8000000000000000);
    if (v135 != v136)
    {
      v66 = 0x7FFFFFFFFFFFFFFFLL;
      v67 = 0x8000000000000000;
      v68 = 0x8000000000000000;
      v69 = 0x7FFFFFFFFFFFFFFFLL;
      do
      {
        v70 = *(_QWORD **)v52;
        v71 = *(_QWORD *)(*(_QWORD *)v52 + 32);
        if (v71 >= v69)
        {
          if (v71 <= v68)
          {
LABEL_128:
            v72 = v70[5];
            if (v72 < v66)
              goto LABEL_129;
            goto LABEL_137;
          }
        }
        else
        {
          v124.i64[0] = *(_QWORD *)(*(_QWORD *)v52 + 32);
          v69 = v71;
          if (v71 <= v68)
            goto LABEL_128;
        }
        v125.i64[0] = v71;
        v68 = v71;
        v72 = v70[5];
        if (v72 < v66)
        {
LABEL_129:
          v124.i64[1] = v72;
          v66 = v72;
          if (v72 <= v67)
            goto LABEL_130;
          goto LABEL_138;
        }
LABEL_137:
        if (v72 <= v67)
        {
LABEL_130:
          v73 = v70[6];
          if (v73 < v69)
            goto LABEL_131;
          goto LABEL_139;
        }
LABEL_138:
        v125.i64[1] = v72;
        v67 = v72;
        v73 = v70[6];
        if (v73 < v69)
        {
LABEL_131:
          v124.i64[0] = v73;
          v69 = v73;
          if (v73 <= v68)
            goto LABEL_132;
          goto LABEL_140;
        }
LABEL_139:
        if (v73 <= v68)
        {
LABEL_132:
          v74 = v70[7];
          if (v74 < v66)
            goto LABEL_133;
          goto LABEL_141;
        }
LABEL_140:
        v125.i64[0] = v73;
        v68 = v73;
        v74 = v70[7];
        if (v74 < v66)
        {
LABEL_133:
          v124.i64[1] = v74;
          v66 = v74;
          if (v74 > v67)
            goto LABEL_142;
          goto LABEL_125;
        }
LABEL_141:
        if (v74 > v67)
        {
LABEL_142:
          v125.i64[1] = v74;
          v67 = v74;
        }
LABEL_125:
        v52 += 8;
      }
      while (v52 != v136);
    }
    if (sub_1002B1F54(v124.i64, &v135, &v132, a4 + 1, a5, a6, a7, a8, a9, a10, a11)
      && (sub_1002B1F54(v124.i64, &v135, &v129, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) != 0)
    {
      goto LABEL_147;
    }
LABEL_278:
    v115 = 0;
    v116 = (char *)__p;
    if (!__p)
      goto LABEL_280;
LABEL_279:
    v127 = v116;
    operator delete(v116);
    goto LABEL_280;
  }
LABEL_75:
  if (v132 == v133 || v52 == v51)
  {
    if (v52 == v51)
      goto LABEL_147;
  }
  else
  {
    do
    {
      v54 = (char *)v132;
      if (v132 != v50)
      {
        do
        {
          v55 = *(_QWORD *)v52;
          v56 = *(_QWORD *)v54;
          if (*(_QWORD *)(*(_QWORD *)v52 + 48) >= *(_QWORD *)(*(_QWORD *)v54 + 32)
            && *(_QWORD *)(v55 + 32) <= *(_QWORD *)(v56 + 48))
          {
            v57 = *(_QWORD *)(v55 + 56) >= *(_QWORD *)(v56 + 40) && *(_QWORD *)(v55 + 40) <= *(_QWORD *)(v56 + 56);
            v58 = v57 && *(_BYTE *)(v55 + 96) == 0;
            if (v58 && *(_BYTE *)(v56 + 96) == 0)
            {
              if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v55, *((_DWORD *)a6 + 10), *a6, (int *)v56, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
              v50 = v133;
            }
          }
          v54 += 8;
        }
        while (v54 != v50);
        v51 = v136;
      }
      v52 += 8;
    }
    while (v52 != v51);
    v52 = (char *)v135;
    if (v135 == v51)
      goto LABEL_147;
  }
  v53 = v130;
  if (v129 != v130)
  {
    do
    {
      v60 = (char *)v129;
      if (v129 != v53)
      {
        do
        {
          v61 = *(_QWORD *)v52;
          v62 = *(_QWORD *)v60;
          if (*(_QWORD *)(*(_QWORD *)v52 + 48) >= *(_QWORD *)(*(_QWORD *)v60 + 32)
            && *(_QWORD *)(v61 + 32) <= *(_QWORD *)(v62 + 48))
          {
            v63 = *(_QWORD *)(v61 + 56) >= *(_QWORD *)(v62 + 40) && *(_QWORD *)(v61 + 40) <= *(_QWORD *)(v62 + 56);
            v64 = v63 && *(_BYTE *)(v61 + 96) == 0;
            if (v64 && *(_BYTE *)(v62 + 96) == 0)
            {
              if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v61, *((_DWORD *)a6 + 10), *a6, (int *)v62, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
              v53 = v130;
            }
          }
          v60 += 8;
        }
        while (v60 != v53);
        v51 = v136;
      }
      v52 += 8;
    }
    while (v52 != v51);
  }
LABEL_147:
  v76 = (char *)__p;
  v75 = v127;
  if (__p == v127)
    goto LABEL_198;
  v78 = (char *)v141;
  v77 = v142;
  if (a5 > (v142 - (_BYTE *)v141) >> 3
    || a5 > (v139 - (_BYTE *)v138) >> 3
    || a4 > 0x63
    || (v127 - (_BYTE *)__p) >> 3 < a5)
  {
    while (v78 != v77)
    {
      v88 = (char *)__p;
      if (__p != v75)
      {
        do
        {
          v89 = *(_QWORD *)v78;
          v90 = *(_QWORD *)v88;
          if (*(_QWORD *)(*(_QWORD *)v78 + 48) >= *(_QWORD *)(*(_QWORD *)v88 + 32)
            && *(_QWORD *)(v89 + 32) <= *(_QWORD *)(v90 + 48))
          {
            v91 = *(_QWORD *)(v89 + 56) >= *(_QWORD *)(v90 + 40) && *(_QWORD *)(v89 + 40) <= *(_QWORD *)(v90 + 56);
            v92 = v91 && *(_BYTE *)(v89 + 96) == 0;
            if (v92 && *(_BYTE *)(v90 + 96) == 0)
            {
              if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v89, *((_DWORD *)a6 + 10), *a6, (int *)v90, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
              v75 = v127;
            }
          }
          v88 += 8;
        }
        while (v88 != v75);
        v77 = v142;
      }
      v78 += 8;
    }
    v95 = (char *)v138;
    v94 = v139;
    if (v138 != v139 && __p != v75)
    {
      do
      {
        v99 = (char *)__p;
        if (__p != v75)
        {
          do
          {
            v100 = *(_QWORD *)v95;
            v101 = *(_QWORD *)v99;
            if (*(_QWORD *)(*(_QWORD *)v95 + 48) >= *(_QWORD *)(*(_QWORD *)v99 + 32)
              && *(_QWORD *)(v100 + 32) <= *(_QWORD *)(v101 + 48))
            {
              v102 = *(_QWORD *)(v100 + 56) >= *(_QWORD *)(v101 + 40)
                  && *(_QWORD *)(v100 + 40) <= *(_QWORD *)(v101 + 56);
              v103 = v102 && *(_BYTE *)(v100 + 96) == 0;
              if (v103 && *(_BYTE *)(v101 + 96) == 0)
              {
                if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v100, *((_DWORD *)a6 + 10), *a6, (int *)v101, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
                v75 = v127;
              }
            }
            v99 += 8;
          }
          while (v99 != v75);
          v94 = v139;
        }
        v95 += 8;
      }
      while (v95 != v94);
    }
    goto LABEL_198;
  }
  v79 = 0x7FFFFFFFFFFFFFFFLL;
  v80 = 0x8000000000000000;
  v124 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  v125 = vdupq_n_s64(0x8000000000000000);
  v81 = 0x8000000000000000;
  v82 = 0x7FFFFFFFFFFFFFFFLL;
  while (2)
  {
    v83 = *(_QWORD **)v76;
    v84 = *(_QWORD *)(*(_QWORD *)v76 + 32);
    if (v84 >= v82)
    {
      if (v84 > v81)
        goto LABEL_164;
LABEL_156:
      v85 = v83[5];
      if (v85 < v79)
        goto LABEL_157;
LABEL_165:
      if (v85 > v80)
        goto LABEL_166;
LABEL_158:
      v86 = v83[6];
      if (v86 < v82)
        goto LABEL_159;
LABEL_167:
      if (v86 > v81)
        goto LABEL_168;
LABEL_160:
      v87 = v83[7];
      if (v87 < v79)
        goto LABEL_161;
LABEL_169:
      if (v87 > v80)
      {
LABEL_170:
        v125.i64[1] = v87;
        v80 = v87;
      }
    }
    else
    {
      v124.i64[0] = *(_QWORD *)(*(_QWORD *)v76 + 32);
      v82 = v84;
      if (v84 <= v81)
        goto LABEL_156;
LABEL_164:
      v125.i64[0] = v84;
      v81 = v84;
      v85 = v83[5];
      if (v85 >= v79)
        goto LABEL_165;
LABEL_157:
      v124.i64[1] = v85;
      v79 = v85;
      if (v85 <= v80)
        goto LABEL_158;
LABEL_166:
      v125.i64[1] = v85;
      v80 = v85;
      v86 = v83[6];
      if (v86 >= v82)
        goto LABEL_167;
LABEL_159:
      v124.i64[0] = v86;
      v82 = v86;
      if (v86 <= v81)
        goto LABEL_160;
LABEL_168:
      v125.i64[0] = v86;
      v81 = v86;
      v87 = v83[7];
      if (v87 >= v79)
        goto LABEL_169;
LABEL_161:
      v124.i64[1] = v87;
      v79 = v87;
      if (v87 > v80)
        goto LABEL_170;
    }
    v76 += 8;
    if (v76 != v127)
      continue;
    break;
  }
  if (!sub_1002B1F54(v124.i64, &v141, &__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11)
    || (sub_1002B1F54(v124.i64, &v138, &__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_278;
  }
LABEL_198:
  v98 = (char *)v141;
  v97 = v142;
  if (a5 > (v142 - (_BYTE *)v141) >> 3 || a4 > 0x63 || (v133 - (_BYTE *)v132) >> 3 < a5)
  {
    if (v141 != v142)
    {
      v105 = v133;
      if (v132 != v133)
      {
        do
        {
          v108 = (char *)v132;
          if (v132 != v105)
          {
            do
            {
              v109 = *(_QWORD *)v98;
              v110 = *(_QWORD *)v108;
              if (*(_QWORD *)(*(_QWORD *)v98 + 48) >= *(_QWORD *)(*(_QWORD *)v108 + 32)
                && *(_QWORD *)(v109 + 32) <= *(_QWORD *)(v110 + 48))
              {
                v111 = *(_QWORD *)(v109 + 56) >= *(_QWORD *)(v110 + 40)
                    && *(_QWORD *)(v109 + 40) <= *(_QWORD *)(v110 + 56);
                v112 = v111 && *(_BYTE *)(v109 + 96) == 0;
                if (v112 && *(_BYTE *)(v110 + 96) == 0)
                {
                  if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v109, *((_DWORD *)a6 + 10), *a6, (int *)v110, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
                  v105 = v133;
                }
              }
              v108 += 8;
            }
            while (v108 != v105);
            v97 = v142;
          }
          v98 += 8;
        }
        while (v98 != v97);
      }
    }
  }
  else if ((sub_1002B1F54((uint64_t *)&v146, &v141, &v132, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_278;
  }
  v107 = (char *)v138;
  v106 = v139;
  if (a5 > (v139 - (_BYTE *)v138) >> 3 || a4 > 0x63 || (v130 - (_BYTE *)v129) >> 3 < a5)
  {
    if (v138 != v139)
    {
      v114 = v130;
      if (v129 != v130)
      {
        do
        {
          v117 = (char *)v129;
          if (v129 != v114)
          {
            do
            {
              v118 = *(_QWORD *)v107;
              v119 = *(_QWORD *)v117;
              if (*(_QWORD *)(*(_QWORD *)v107 + 48) >= *(_QWORD *)(*(_QWORD *)v117 + 32)
                && *(_QWORD *)(v118 + 32) <= *(_QWORD *)(v119 + 48))
              {
                v120 = *(_QWORD *)(v118 + 56) >= *(_QWORD *)(v119 + 40)
                    && *(_QWORD *)(v118 + 40) <= *(_QWORD *)(v119 + 56);
                v121 = v120 && *(_BYTE *)(v118 + 96) == 0;
                if (v121 && *(_BYTE *)(v119 + 96) == 0)
                {
                  if (!sub_1002B3C54(*((_DWORD *)a6 + 10), *a6, (int *)v118, *((_DWORD *)a6 + 10), *a6, (int *)v119, 0, *((unsigned __int8 *)a6 + 44), (uint64_t)a6[1], (uint64_t)a6[2], a6[3], a6[4]))goto LABEL_278;
                  v114 = v130;
                }
              }
              v117 += 8;
            }
            while (v117 != v114);
            v106 = v139;
          }
          v107 += 8;
        }
        while (v107 != v106);
      }
    }
  }
  else if ((sub_1002B1F54(v144, &v138, &v129, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_278;
  }
  v115 = 1;
  v116 = (char *)__p;
  if (__p)
    goto LABEL_279;
LABEL_280:
  if (v129)
  {
    v130 = (char *)v129;
    operator delete(v129);
  }
  if (v132)
  {
    v133 = (char *)v132;
    operator delete(v132);
  }
  if (v135)
  {
    v136 = (char *)v135;
    operator delete(v135);
  }
  if (v138)
  {
    v139 = (char *)v138;
    operator delete(v138);
  }
  if (v141)
  {
    v142 = (char *)v141;
    operator delete(v141);
  }
  return v115;
}

void sub_1002B3B90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;

  if (__p)
  {
    operator delete(__p);
    v34 = a20;
    if (!a20)
    {
LABEL_3:
      v35 = a23;
      if (!a23)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else
  {
    v34 = a20;
    if (!a20)
      goto LABEL_3;
  }
  operator delete(v34);
  v35 = a23;
  if (!a23)
  {
LABEL_4:
    v36 = a26;
    if (!a26)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(v35);
  v36 = a26;
  if (!a26)
  {
LABEL_5:
    v37 = a29;
    if (!a29)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v36);
  v37 = a29;
  if (!a29)
  {
LABEL_6:
    v38 = a32;
    if (!a32)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v37);
  v38 = a32;
  if (!a32)
LABEL_7:
    _Unwind_Resume(exception_object);
LABEL_13:
  operator delete(v38);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B3C54(int a1, _QWORD *a2, int *a3, int a4, _QWORD *a5, int *a6, int a7, int a8, uint64_t a9, uint64_t a10, _QWORD *a11, _BYTE *a12)
{
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  double **v16;
  double *v17;
  double *v18;
  uint64_t v19;
  double **v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  double *v27;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  double *v32;
  double *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  double *v43;
  double *v44;
  double *v45;
  double *v46;
  uint64_t v47;
  uint64_t v48;
  double *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  double *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double *v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  double *v76;
  double *v77;
  double *v78;
  double *v79;
  uint64_t v80;
  unint64_t v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  int v106;
  double *v107;
  _QWORD *v108;
  int v109;
  double *v110;
  double *v111;
  uint64_t v114;
  double *v115;
  double *v116;
  uint64_t v117;
  uint64_t v118;
  double *v119;
  uint64_t v120;
  int v121;
  double *v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  double *v126;
  uint64_t v128;
  uint64_t v129;
  double *v130;
  double *v131;
  char v132[16];
  int v133;
  char v134;
  uint64_t v135;
  __int16 v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD v155[7];
  char v156;
  char v157;
  __int128 v158;
  __int128 v159;
  uint64_t v160;
  _QWORD v161[7];
  char v162;
  char v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;

  v12 = a6;
  if (*((_BYTE *)a3 + 96) && (unint64_t)(*((_QWORD *)a3 + 10) + 1) < *((_QWORD *)a3 + 11)
    || *((_BYTE *)a6 + 96) && (unint64_t)(*((_QWORD *)a6 + 10) + 1) < *((_QWORD *)a6 + 11))
  {
    return 1;
  }
  v15 = *((_QWORD *)a3 + 3);
  v16 = (double **)(*a2 + 48 * *((_QWORD *)a3 + 2));
  if (v15 >= 0)
    v16 = (double **)&v16[3][3 * v15];
  v17 = *v16;
  v18 = v16[1];
  v19 = *((_QWORD *)a6 + 3);
  v20 = (double **)(*a5 + 48 * *((_QWORD *)a6 + 2));
  if (v19 >= 0)
    v20 = (double **)&v20[3][3 * v19];
  v130 = v20[1];
  v131 = *v20;
  v21 = *a3;
  v22 = *a6;
  v23 = *((_QWORD *)a3 + 13);
  v25 = *((_QWORD *)a3 + 8);
  v24 = *((_QWORD *)a3 + 9);
  v26 = &v17[2 * v25];
  v106 = a4;
  v121 = *a6;
  v110 = v18;
  v111 = v17;
  v128 = v25;
  if (v25 == v24)
  {
    v27 = &v17[2 * v25];
    v14 = 1;
    v107 = &v17[2 * v24];
    if (v26 == v107)
      return v14;
    goto LABEL_32;
  }
  v29 = 0;
  v122 = v26;
  v124 = *((_QWORD *)a3 + 9);
  v30 = 16 * v24 - 16 * v25;
  v31 = v26;
  v117 = *((_QWORD *)a3 + 13);
  v32 = v26;
  while (1)
  {
    v33 = v31;
    v34 = (double)*(uint64_t *)(a10 + 24) + (v31[3] - *(double *)(a10 + 8)) * *(double *)(a10 + 32);
    if (v34 >= 0.0)
      v35 = 0.5;
    else
      v35 = -0.5;
    sub_100284F14(v34 + v35);
    v36 = v32[2];
    v32 += 2;
    v37 = (double)*(uint64_t *)(a10 + 16) + (v36 - *(double *)a10) * *(double *)(a10 + 32);
    if (v37 >= 0.0)
      v38 = 0.5;
    else
      v38 = -0.5;
    v39 = v37 + v38;
    sub_100284F14(v37 + v38);
    v40 = ceil(v39);
    v41 = floor(v39);
    if (v39 >= 0.0)
      v40 = v41;
    v42 = (uint64_t)v40;
    if (v21 == 1)
    {
      if (*((_QWORD *)a6 + 4) <= v42)
      {
        v128 = v25;
        goto LABEL_29;
      }
      goto LABEL_15;
    }
    if (v21 != -1)
      break;
    if (*((_QWORD *)a6 + 6) >= v42)
    {
      v23 = v117 + v29;
      v128 += v29;
LABEL_29:
      v12 = a6;
      a4 = v106;
      v18 = v110;
      v17 = v111;
      v22 = v121;
      v27 = v33;
      v14 = 1;
      v107 = &v111[2 * v124];
      if (v27 == v107)
        return v14;
LABEL_32:
      v118 = v23;
      v43 = v27 + 2;
      v44 = &v17[2 * (v27 != v17)];
      if (v27 + 2 != v18)
        v44 = v27 + 2;
      v45 = v44 + 2;
      v46 = &v17[2 * (v44 != v17)];
      if (v45 != v18)
        v46 = v45;
      v119 = v46;
      v109 = -v21;
      v123 = -v22;
      v47 = v128;
      v120 = a4;
      v108 = v12;
LABEL_41:
      v50 = (double)*(uint64_t *)(a10 + 24) + (v27[1] - *(double *)(a10 + 8)) * *(double *)(a10 + 32);
      if (v50 >= 0.0)
        v51 = 0.5;
      else
        v51 = -0.5;
      sub_100284F14(v50 + v51);
      v52 = (double)*(uint64_t *)(a10 + 16) + (*v27 - *(double *)a10) * *(double *)(a10 + 32);
      if (v52 >= 0.0)
        v53 = 0.5;
      else
        v53 = -0.5;
      v54 = v52 + v53;
      sub_100284F14(v52 + v53);
      v55 = ceil(v54);
      v56 = floor(v54);
      if (v54 >= 0.0)
        v55 = v56;
      v57 = (uint64_t)v55;
      if (v109 == 1)
      {
        if (v12[4] > v57)
          return 1;
      }
      else if (v109 == -1 && v12[6] < v57)
      {
        return 1;
      }
      v161[0] = a3;
      v161[1] = v47;
      v129 = v47;
      v115 = v43;
      v116 = v27;
      v161[2] = v27;
      v161[3] = v43;
      v161[4] = v119;
      v161[5] = v17;
      v161[6] = v18;
      v162 = 1;
      v163 = 0;
      v58 = *(_OWORD *)(a10 + 16);
      v164 = *(_OWORD *)a10;
      v165 = v58;
      v166 = *(_QWORD *)(a10 + 32);
      v60 = v12[8];
      v59 = v12[9];
      v61 = &v131[2 * v60];
      v62 = v12[13];
      v114 = v62;
      if (v60 == v59)
        goto LABEL_73;
      v63 = 0;
      v125 = v12[9];
      v64 = 16 * v59 - 16 * v60;
      v65 = v12[8];
      v66 = &v131[2 * v60];
      while (1)
      {
        v67 = (double)*(uint64_t *)(a10 + 24) + (v61[3] - *(double *)(a10 + 8)) * *(double *)(a10 + 32);
        if (v67 >= 0.0)
          v68 = 0.5;
        else
          v68 = -0.5;
        sub_100284F14(v67 + v68);
        v69 = v66[2];
        v66 += 2;
        v70 = (double)*(uint64_t *)(a10 + 16) + (v69 - *(double *)a10) * *(double *)(a10 + 32);
        if (v70 >= 0.0)
          v71 = 0.5;
        else
          v71 = -0.5;
        v72 = v70 + v71;
        sub_100284F14(v70 + v71);
        v73 = ceil(v72);
        v74 = floor(v72);
        if (v72 >= 0.0)
          v73 = v74;
        v75 = (uint64_t)v73;
        if (v121 == 1)
        {
          if (*((_QWORD *)a3 + 4) <= v75)
          {
            v114 = v62;
            v60 = v65;
LABEL_72:
            v59 = v125;
LABEL_73:
            v126 = &v131[2 * v59];
            if (v61 == v126)
            {
LABEL_37:
              ++v118;
              v12 = v108;
              v18 = v110;
              v17 = v111;
              v48 = v129;
LABEL_38:
              v27 = v116 + 2;
              v43 = v115 + 2;
              v47 = v48 + 1;
              v49 = v119 + 2;
              if (v119 + 2 == v18)
                v49 = &v17[2 * (v119 != v17)];
              v119 = v49;
              if (v115 == v107)
                return 1;
              goto LABEL_41;
            }
            v76 = v61 + 2;
            if (v61 + 2 == v130)
              v76 = &v131[2 * (v61 != v131)];
            v77 = v76 + 2;
            v78 = &v131[2 * (v76 != v131)];
            if (v77 == v130)
              v79 = v78;
            else
              v79 = v77;
            v80 = ++v118 - v114;
            v12 = v108;
            v48 = v129;
            while (2)
            {
              v82 = (double)*(uint64_t *)(a10 + 24) + (v61[1] - *(double *)(a10 + 8)) * *(double *)(a10 + 32);
              if (v82 >= 0.0)
                v83 = 0.5;
              else
                v83 = -0.5;
              sub_100284F14(v82 + v83);
              v84 = (double)*(uint64_t *)(a10 + 16) + (*v61 - *(double *)a10) * *(double *)(a10 + 32);
              if (v84 >= 0.0)
                v85 = 0.5;
              else
                v85 = -0.5;
              v86 = v84 + v85;
              sub_100284F14(v84 + v85);
              v87 = ceil(v86);
              v88 = floor(v86);
              if (v86 >= 0.0)
                v87 = v88;
              v89 = (uint64_t)v87;
              if (v123 == 1)
              {
                if (*((_QWORD *)a3 + 4) > v89)
                  goto LABEL_125;
              }
              else if (v123 == -1 && *((_QWORD *)a3 + 6) < v89)
              {
                goto LABEL_125;
              }
              v90 = *((_QWORD *)a3 + 2);
              if (a1 != v106)
              {
                v91 = *((_QWORD *)a3 + 3);
                v93 = v108[2];
                v92 = v108[3];
                goto LABEL_115;
              }
              v91 = *((_QWORD *)a3 + 3);
              v93 = v108[2];
              v92 = v108[3];
              if (v90 != v93)
                goto LABEL_115;
              if (v91 == v92)
              {
                if (a7)
                {
                  if (v48 >= v60 || (a8 & 1) == 0)
                  {
                    v92 = *((_QWORD *)a3 + 3);
                    v93 = *((_QWORD *)a3 + 2);
                    if (v48 < v60)
                      goto LABEL_115;
LABEL_82:
                    v61 += 2;
                    ++v60;
                    if (v79 + 2 == v130)
                      v79 = &v131[2 * (v79 != v131)];
                    else
                      v79 += 2;
                    --v80;
                    if (v61 == v126)
                    {
LABEL_125:
                      v18 = v110;
                      v17 = v111;
                      goto LABEL_38;
                    }
                    continue;
                  }
LABEL_109:
                  if (!v80)
                    goto LABEL_82;
                  if (!v48)
                  {
                    v92 = *((_QWORD *)a3 + 3);
                    v93 = *((_QWORD *)a3 + 2);
                    if (*((_QWORD *)a3 + 11) - 2 <= v60)
                      goto LABEL_82;
LABEL_115:
                    v155[0] = v108;
                    v155[1] = v60;
                    v155[2] = v61;
                    v155[3] = v61 + 2;
                    v155[4] = v79;
                    v155[5] = v131;
                    v155[6] = v130;
                    v156 = 0;
                    v157 = 0;
                    v94 = *(_OWORD *)(a10 + 16);
                    v158 = *(_OWORD *)a10;
                    v159 = v94;
                    v160 = *(_QWORD *)(a10 + 32);
                    v133 = 0;
                    v134 = 0;
                    v135 = -1;
                    v136 = 0;
                    v137 = 0;
                    v144 = 0;
                    v145 = 0;
                    v146 = 0;
                    v152 = 1;
                    v153 = 0;
                    v154 = 0;
                    v138 = a1;
                    v139 = v90;
                    v140 = v91;
                    v141 = v48;
                    v142 = xmmword_1003970F0;
                    v143 = 1;
                    v147 = v120;
                    v148 = v93;
                    v149 = v92;
                    v150 = v60;
                    v151 = xmmword_1003970F0;
                    v95 = a11[5];
                    sub_1002AE5F8((uint64_t)v161, (uint64_t)v155, (uint64_t)v132, a9, a10, a11);
                    v96 = a11[4];
                    v97 = a11[1];
                    v98 = a11[2];
                    v99 = (_QWORD *)(v97 + 8 * (v96 / 0x14));
                    if (v98 == v97)
                    {
                      v100 = 0;
                      if (!v95)
                        goto LABEL_122;
                    }
                    else
                    {
                      v100 = *v99 + 200 * (v96 % 0x14);
                      if (!v95)
                        goto LABEL_122;
                    }
                    v101 = v95 - 0x70A3D70A3D70A3D7 * ((uint64_t)(v100 - *v99) >> 3);
                    if (v101 < 1)
                    {
                      v102 = 19 - v101;
                      v99 -= v102 / 0x14;
                      v100 = *v99 + 200 * (20 * (v102 / 0x14) - v102) + 3800;
                    }
                    else
                    {
                      v99 += v101 / 0x14uLL;
                      v100 = *v99 + 200 * (v101 % 0x14uLL);
                    }
LABEL_122:
                    v48 = v129;
                    v103 = a11[5] + v96;
                    v104 = (_QWORD *)(v97 + 8 * (v103 / 0x14));
                    if (v98 == v97)
                    {
                      v81 = 0;
                      if (!v100)
                        goto LABEL_82;
                    }
                    else
                    {
                      v81 = *v104 + 200 * (v103 % 0x14);
                      if (v100 == v81)
                        goto LABEL_82;
                    }
                    if (20 * (v104 - v99) - 0x70A3D70A3D70A3D7 * ((uint64_t)(v81 - *v104) >> 3) != 0x8F5C28F5C28F5C29 * ((uint64_t)(v100 - *v99) >> 3))
                    {
                      v14 = 0;
                      *a12 = 1;
                      return v14;
                    }
                    goto LABEL_82;
                  }
                }
                else if (a8)
                {
                  goto LABEL_109;
                }
                v92 = *((_QWORD *)a3 + 3);
              }
              break;
            }
            v93 = *((_QWORD *)a3 + 2);
            goto LABEL_115;
          }
        }
        else
        {
          if (v121 != -1)
          {
            v61 = &v131[2 * v60];
            goto LABEL_72;
          }
          if (*((_QWORD *)a3 + 6) >= v75)
          {
            v114 += v63;
            v60 += v63;
            goto LABEL_72;
          }
        }
        ++v65;
        ++v62;
        ++v63;
        v61 = v66;
        v64 -= 16;
        if (!v64)
          goto LABEL_37;
      }
    }
LABEL_15:
    ++v25;
    ++v23;
    ++v29;
    v31 = v32;
    v30 -= 16;
    if (!v30)
      return 1;
  }
  v27 = v122;
  v12 = a6;
  a4 = v106;
  v18 = v110;
  v17 = v111;
  v22 = v121;
  v23 = v117;
  v14 = 1;
  v107 = &v111[2 * v124];
  if (v122 != v107)
    goto LABEL_32;
  return v14;
}

void sub_1002B45C0(_QWORD *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  void *v20;

  v4 = a1[1];
  v5 = a1[2];
  if (v5 == v4)
    v6 = 0;
  else
    v6 = 170 * ((v5 - v4) >> 3) - 1;
  v7 = a1[5];
  v8 = v7 + a1[4];
  v9 = v6 - v8;
  v10 = a2 > v9;
  v11 = a2 - v9;
  if (v10)
  {
    sub_1002B4A48((uint64_t)a1, v11);
    v7 = a1[5];
    v4 = a1[1];
    v5 = a1[2];
    v8 = a1[4] + v7;
  }
  v12 = (_QWORD *)(v4 + 8 * (v8 / 0xAA));
  if (v5 == v4)
  {
    v13 = 0;
    if (!a2)
      return;
  }
  else
  {
    v13 = (void *)(*v12 + 24 * (v8 % 0xAA));
    if (!a2)
      return;
  }
  v14 = a2 - 0x5555555555555555 * (((uint64_t)v13 - *v12) >> 3);
  if (v14 < 1)
  {
    v17 = 169 - v14;
    v15 = &v12[-(v17 / 0xAA)];
    v16 = *v15 + 24 * (170 * (v17 / 0xAA) - v17) + 4056;
    if (v13 != (void *)v16)
    {
      do
      {
LABEL_15:
        v18 = v16;
        if (v12 != v15)
          v18 = *v12 + 4080;
        if (v13 == (void *)v18)
        {
          a1[5] = v7;
          if (v12 == v15)
            return;
        }
        else
        {
          v19 = 24 * ((v18 - (uint64_t)v13 - 24) / 0x18uLL) + 24;
          bzero(v13, v19);
          v7 = a1[5] - 0x5555555555555555 * (v19 >> 3);
          a1[5] = v7;
          if (v12 == v15)
            return;
        }
        v20 = (void *)v12[1];
        ++v12;
        v13 = v20;
      }
      while (v20 != (void *)v16);
    }
  }
  else
  {
    v15 = &v12[v14 / 0xAAuLL];
    v16 = *v15 + 24 * (v14 % 0xAAuLL);
    if (v13 != (void *)v16)
      goto LABEL_15;
  }
}

void sub_1002B47C4(_QWORD *a1, _QWORD *a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a3;
  v6 = a1[4];
  v5 = a1[5];
  v8 = a1[1];
  v7 = a1[2];
  v9 = (_QWORD *)(v8 + 8 * ((v6 + v5) / 0xAA));
  if (v7 == v8)
  {
    v10 = 0;
    if (!a3)
      return;
  }
  else
  {
    v10 = *v9 + 24 * ((v6 + v5) % 0xAA);
    if (v10 == a3)
      return;
  }
  v11 = 170 * (v9 - a2) - 0x5555555555555555 * ((uint64_t)(v10 - *v9) >> 3);
  v12 = (uint64_t)(a3 - *a2) >> 3;
  v13 = v11 + 0x5555555555555555 * v12;
  if (v13 < 1)
    return;
  v14 = (_QWORD *)(v8 + 8 * (v6 / 0xAA));
  if (v7 == v8)
  {
    v15 = 0;
    if (!a3)
      goto LABEL_15;
  }
  else
  {
    v15 = *v14 + 24 * (v6 % 0xAA);
    if (a3 == v15)
    {
LABEL_15:
      if (v3 == v10)
        goto LABEL_25;
      do
      {
LABEL_20:
        v21 = *(void **)v3;
        if (*(_QWORD *)v3)
        {
          *(_QWORD *)(v3 + 8) = v21;
          operator delete(v21);
        }
        v3 += 24;
        if (v3 - *v14 == 4080)
        {
          v22 = v14[1];
          ++v14;
          v3 = v22;
        }
      }
      while (v3 != v10);
      v8 = a1[1];
      v7 = a1[2];
      v6 = a1[4];
      v5 = a1[5];
      goto LABEL_25;
    }
  }
  v16 = 170 * (a2 - v14) - 0x5555555555555555 * v12;
  v17 = (uint64_t)(v15 - *v14) >> 3;
  v18 = v16 + 0x5555555555555555 * v17;
  if (!v18)
  {
    v3 = v15;
    goto LABEL_15;
  }
  v19 = v18 - 0x5555555555555555 * v17;
  if (v19 >= 1)
  {
    v14 += v19 / 0xAAuLL;
    v3 = *v14 + 24 * (v19 % 0xAAuLL);
    if (v3 == v10)
      goto LABEL_25;
    goto LABEL_20;
  }
  v20 = 169 - v19;
  v14 -= v20 / 0xAA;
  v3 = *v14 + 24 * (170 * (v20 / 0xAA) - v20) + 4056;
  if (v3 != v10)
    goto LABEL_20;
LABEL_25:
  if (v7 == v8)
    v23 = 0;
  else
    v23 = 170 * ((v7 - v8) >> 3) - 1;
  v24 = v5 - v13;
  a1[5] = v24;
  if (v23 - (v24 + v6) >= 0x154)
  {
    do
    {
      operator delete(*(void **)(v7 - 8));
      v7 = a1[2] - 8;
      v25 = v7 == a1[1];
      v26 = 170 * ((v7 - a1[1]) >> 3) - 1;
      a1[2] = v7;
      if (v25)
        v26 = 0;
    }
    while ((unint64_t)(v26 - (a1[5] + a1[4])) > 0x153);
  }
}

void sub_1002B4A48(uint64_t a1, unint64_t a2)
{
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  BOOL v29;
  int64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  char *v55;
  int64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  _QWORD *v68;
  char *v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  char *v79;
  char *v80;
  unint64_t v81;
  int64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 *v90;
  char *v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  char *v101;
  unint64_t v102;
  int64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 *v110;
  char *v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t i;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  int64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  int64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  __int128 *v139;
  char *v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;

  v3 = *(char **)(a1 + 16);
  v4 = (uint64_t)&v3[-*(_QWORD *)(a1 + 8)];
  if (v4)
    v5 = a2;
  else
    v5 = a2 + 1;
  if (v5 % 0xAA)
    v6 = v5 / 0xAA + 1;
  else
    v6 = v5 / 0xAA;
  v7 = *(_QWORD *)(a1 + 32);
  if (v6 >= v7 / 0xAA)
    v8 = v7 / 0xAA;
  else
    v8 = v6;
  if (v6 <= v7 / 0xAA)
  {
    *(_QWORD *)(a1 + 32) = v7 - 170 * v8;
    if (!v8)
      return;
    while (1)
    {
      v15 = *(_QWORD **)(a1 + 8);
      v16 = (char *)(v15 + 1);
      v17 = *v15;
      *(_QWORD *)(a1 + 8) = v15 + 1;
      if (v3 == *(char **)(a1 + 24))
      {
        v18 = *(char **)a1;
        if ((unint64_t)v16 <= *(_QWORD *)a1)
        {
          v24 = (v3 - v18) >> 2;
          if (v3 == v18)
            v24 = 1;
          if (v24 >> 61)
            goto LABEL_159;
          v25 = v24 >> 2;
          v26 = 8 * v24;
          v27 = (char *)operator new(8 * v24);
          v28 = &v27[8 * v25];
          v30 = v3 - v16;
          v29 = v3 == v16;
          v3 = v28;
          if (!v29)
          {
            v3 = &v28[v30 & 0xFFFFFFFFFFFFFFF8];
            v31 = v30 - 8;
            if ((unint64_t)(v30 - 8) < 0x38)
            {
              v32 = &v27[8 * v25];
              goto LABEL_39;
            }
            v32 = &v27[8 * v25];
            if ((unint64_t)(v32 - v16) < 0x20)
              goto LABEL_165;
            v33 = (v31 >> 3) + 1;
            v34 = 8 * (v33 & 0x3FFFFFFFFFFFFFFCLL);
            v32 = &v28[v34];
            v16 += v34;
            v35 = (__int128 *)(v15 + 3);
            v36 = &v27[8 * v25 + 16];
            v37 = v33 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v38 = *v35;
              *((_OWORD *)v36 - 1) = *(v35 - 1);
              *(_OWORD *)v36 = v38;
              v35 += 2;
              v36 += 32;
              v37 -= 4;
            }
            while (v37);
            if (v33 != (v33 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_165:
              do
              {
LABEL_39:
                v39 = *(_QWORD *)v16;
                v16 += 8;
                *(_QWORD *)v32 = v39;
                v32 += 8;
              }
              while (v32 != v3);
            }
          }
          *(_QWORD *)a1 = v27;
          *(_QWORD *)(a1 + 8) = v28;
          *(_QWORD *)(a1 + 16) = v3;
          *(_QWORD *)(a1 + 24) = &v27[v26];
          if (v18)
          {
            operator delete(v18);
            v3 = *(char **)(a1 + 16);
          }
          goto LABEL_21;
        }
        v19 = (uint64_t)&v16[-*(_QWORD *)a1] >> 3;
        if (v19 >= -1)
          v20 = v19 + 1;
        else
          v20 = v19 + 2;
        v21 = v20 >> 1;
        v22 = &v16[-8 * (v20 >> 1)];
        v23 = v3 - v16;
        if (v3 != v16)
        {
          memmove(&v16[-8 * (v20 >> 1)], v16, v3 - v16);
          v3 = *(char **)(a1 + 8);
        }
        v14 = &v3[-8 * v21];
        v3 = &v22[v23];
        *(_QWORD *)(a1 + 8) = v14;
        *(_QWORD *)(a1 + 16) = &v22[v23];
      }
LABEL_21:
      *(_QWORD *)v3 = v17;
      v3 = (char *)(*(_QWORD *)(a1 + 16) + 8);
      *(_QWORD *)(a1 + 16) = v3;
      if (!--v8)
        return;
    }
  }
  v9 = v6 - v8;
  v10 = *(_QWORD *)(a1 + 24) - *(_QWORD *)a1;
  v11 = v4 >> 3;
  if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
  {
    if (v9)
    {
      while (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a1 + 16))
      {
        v145 = operator new(0xFF0uLL);
        sub_100190D1C((char **)a1, &v145);
        --v6;
        if (!--v9)
          goto LABEL_134;
      }
      for (i = 0; i != v9; ++i)
      {
        v145 = operator new(0xFF0uLL);
        sub_100190EA8((void **)a1, &v145);
        if (*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8) == 8)
          v116 = 169;
        else
          v116 = 170;
        v117 = v116 + *(_QWORD *)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v117;
      }
      v8 = v6;
      *(_QWORD *)(a1 + 32) = v117 - 170 * v6;
      if (!v6)
        return;
    }
    else
    {
LABEL_134:
      *(_QWORD *)(a1 + 32) -= 170 * v8;
      if (!v8)
        return;
    }
    v118 = *(char **)(a1 + 16);
    while (1)
    {
      v120 = *(_QWORD **)(a1 + 8);
      v121 = (char *)(v120 + 1);
      v122 = *v120;
      *(_QWORD *)(a1 + 8) = v120 + 1;
      if (v118 == *(char **)(a1 + 24))
      {
        v123 = *(char **)a1;
        if ((unint64_t)v121 <= *(_QWORD *)a1)
        {
          v129 = (v118 - v123) >> 2;
          if (v118 == v123)
            v129 = 1;
          if (v129 >> 61)
            goto LABEL_159;
          v130 = v129 >> 2;
          v131 = 8 * v129;
          v132 = (char *)operator new(8 * v129);
          v133 = &v132[8 * v130];
          v134 = v118 - v121;
          v29 = v118 == v121;
          v118 = v133;
          if (!v29)
          {
            v118 = &v133[v134 & 0xFFFFFFFFFFFFFFF8];
            v135 = v134 - 8;
            if ((unint64_t)(v134 - 8) < 0x38)
            {
              v136 = &v132[8 * v130];
              goto LABEL_155;
            }
            v136 = &v132[8 * v130];
            if ((unint64_t)(v136 - v121) < 0x20)
              goto LABEL_166;
            v137 = (v135 >> 3) + 1;
            v138 = 8 * (v137 & 0x3FFFFFFFFFFFFFFCLL);
            v136 = &v133[v138];
            v121 += v138;
            v139 = (__int128 *)(v120 + 3);
            v140 = &v132[8 * v130 + 16];
            v141 = v137 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v142 = *v139;
              *((_OWORD *)v140 - 1) = *(v139 - 1);
              *(_OWORD *)v140 = v142;
              v139 += 2;
              v140 += 32;
              v141 -= 4;
            }
            while (v141);
            if (v137 != (v137 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_166:
              do
              {
LABEL_155:
                v143 = *(_QWORD *)v121;
                v121 += 8;
                *(_QWORD *)v136 = v143;
                v136 += 8;
              }
              while (v136 != v118);
            }
          }
          *(_QWORD *)a1 = v132;
          *(_QWORD *)(a1 + 8) = v133;
          *(_QWORD *)(a1 + 16) = v118;
          *(_QWORD *)(a1 + 24) = &v132[v131];
          if (v123)
          {
            operator delete(v123);
            v118 = *(char **)(a1 + 16);
          }
          goto LABEL_137;
        }
        v124 = (uint64_t)&v121[-*(_QWORD *)a1] >> 3;
        if (v124 >= -1)
          v125 = v124 + 1;
        else
          v125 = v124 + 2;
        v126 = v125 >> 1;
        v127 = &v121[-8 * (v125 >> 1)];
        v128 = v118 - v121;
        if (v118 != v121)
        {
          memmove(&v121[-8 * (v125 >> 1)], v121, v118 - v121);
          v118 = *(char **)(a1 + 8);
        }
        v119 = &v118[-8 * v126];
        v118 = &v127[v128];
        *(_QWORD *)(a1 + 8) = v119;
        *(_QWORD *)(a1 + 16) = &v127[v128];
      }
LABEL_137:
      *(_QWORD *)v118 = v122;
      v118 = (char *)(*(_QWORD *)(a1 + 16) + 8);
      *(_QWORD *)(a1 + 16) = v118;
      if (!--v8)
        return;
    }
  }
  if (v10 >> 2 <= v9 + v11)
    v12 = v9 + v11;
  else
    v12 = v10 >> 2;
  if (v12)
  {
    if (v12 >> 61)
LABEL_159:
      sub_1000CDEB8();
    v13 = (char *)operator new(8 * v12);
  }
  else
  {
    v13 = 0;
  }
  v144 = -170 * v8;
  v40 = &v13[8 * (v11 - v8)];
  v41 = &v13[8 * v12];
  v42 = v40;
  v43 = v13;
  do
  {
    v44 = operator new(0xFF0uLL);
    if (v42 != v41)
      goto LABEL_49;
    if (v40 > v43)
    {
      v45 = v43;
      v46 = (v40 - v43) >> 3;
      if (v46 >= -1)
        v47 = v46 + 1;
      else
        v47 = v46 + 2;
      v48 = v47 >> 1;
      v49 = &v40[-8 * (v47 >> 1)];
      v50 = v41;
      if (v41 != v40)
      {
        memmove(v49, v40, v41 - v40);
        v50 = v40;
      }
      v42 = &v49[v41 - v40];
      v40 = &v50[-8 * v48];
      v43 = v45;
      goto LABEL_49;
    }
    if (v41 == v43)
      v51 = 1;
    else
      v51 = (v41 - v43) >> 2;
    if (v51 >> 61)
      sub_1000CDEB8();
    v52 = (char *)operator new(8 * v51);
    v53 = v43;
    v54 = v51 >> 2;
    v55 = &v52[8 * (v51 >> 2)];
    v42 = v55;
    v56 = v41 - v40;
    if (v41 != v40)
    {
      v42 = &v55[v56 & 0xFFFFFFFFFFFFFFF8];
      v57 = v56 - 8;
      if (v57 >= 0x38 && (v58 = 8 * v54, (unint64_t)(&v52[8 * v54] - v40) >= 0x20))
      {
        v62 = (v57 >> 3) + 1;
        v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
        v59 = &v55[v63];
        v60 = &v40[v63];
        v64 = (__int128 *)(v40 + 16);
        v65 = &v52[v58 + 16];
        v66 = v62 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v67 = *v64;
          *((_OWORD *)v65 - 1) = *(v64 - 1);
          *(_OWORD *)v65 = v67;
          v64 += 2;
          v65 += 32;
          v66 -= 4;
        }
        while (v66);
        if (v62 == (v62 & 0x3FFFFFFFFFFFFFFCLL))
          goto LABEL_66;
      }
      else
      {
        v59 = &v52[8 * (v51 >> 2)];
        v60 = v40;
      }
      do
      {
        v61 = *(_QWORD *)v60;
        v60 += 8;
        *(_QWORD *)v59 = v61;
        v59 += 8;
      }
      while (v59 != v42);
    }
LABEL_66:
    v41 = &v52[8 * v51];
    if (v53)
      operator delete(v53);
    v40 = &v52[8 * (v51 >> 2)];
    v43 = v52;
LABEL_49:
    *(_QWORD *)v42 = v44;
    v42 += 8;
    --v9;
  }
  while (v9);
  v68 = *(_QWORD **)(a1 + 8);
  if (v8)
  {
    while (1)
    {
      if (v42 == v41)
      {
        if (v40 <= v43)
        {
          if (v41 == v43)
            v78 = 1;
          else
            v78 = (v41 - v43) >> 2;
          if (v78 >> 61)
            sub_1000CDEB8();
          v79 = (char *)operator new(8 * v78);
          v80 = v79;
          v81 = v78 >> 2;
          v69 = &v79[8 * (v78 >> 2)];
          v42 = v69;
          v82 = v41 - v40;
          if (v41 != v40)
          {
            v42 = &v69[v82 & 0xFFFFFFFFFFFFFFF8];
            v83 = v82 - 8;
            if (v83 < 0x38 || (v84 = 8 * v81, (unint64_t)(&v79[8 * v81] - v40) < 0x20))
            {
              v85 = &v79[8 * (v78 >> 2)];
              v86 = v40;
              goto LABEL_96;
            }
            v88 = (v83 >> 3) + 1;
            v89 = 8 * (v88 & 0x3FFFFFFFFFFFFFFCLL);
            v85 = &v69[v89];
            v86 = &v40[v89];
            v90 = (__int128 *)(v40 + 16);
            v91 = &v79[v84 + 16];
            v92 = v88 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v93 = *v90;
              *((_OWORD *)v91 - 1) = *(v90 - 1);
              *(_OWORD *)v91 = v93;
              v90 += 2;
              v91 += 32;
              v92 -= 4;
            }
            while (v92);
            if (v88 != (v88 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_96:
                v87 = *(_QWORD *)v86;
                v86 += 8;
                *(_QWORD *)v85 = v87;
                v85 += 8;
              }
              while (v85 != v42);
            }
          }
          v41 = &v79[8 * v78];
          if (v43)
            operator delete(v43);
          v43 = v80;
          goto LABEL_79;
        }
        v72 = v43;
        v73 = (v40 - v43) >> 3;
        if (v73 >= -1)
          v74 = v73 + 1;
        else
          v74 = v73 + 2;
        v75 = v74 >> 1;
        v76 = &v40[-8 * (v74 >> 1)];
        v77 = v41;
        if (v41 != v40)
        {
          memmove(v76, v40, v41 - v40);
          v77 = v40;
        }
        v42 = &v76[v41 - v40];
        v69 = &v77[-8 * v75];
        v43 = v72;
      }
      else
      {
        v69 = v40;
      }
LABEL_79:
      *(_QWORD *)v42 = *v68;
      v42 += 8;
      v68 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v68;
      v40 = v69;
      if (!--v8)
        goto LABEL_75;
    }
  }
  v69 = v40;
LABEL_75:
  v70 = *(_QWORD **)(a1 + 16);
  if (v70 != v68)
  {
    do
    {
      if (v69 == v43)
      {
        if (v42 >= v41)
        {
          if (v41 == v43)
            v100 = 1;
          else
            v100 = (v41 - v43) >> 2;
          if (v100 >> 61)
            sub_1000CDEB8();
          v101 = (char *)operator new(8 * v100);
          v97 = v101;
          v102 = (v100 + 3) >> 2;
          v69 = &v101[8 * v102];
          v103 = v42 - v43;
          v29 = v42 == v43;
          v42 = v69;
          if (!v29)
          {
            v42 = &v69[v103 & 0xFFFFFFFFFFFFFFF8];
            v104 = v103 - 8;
            v105 = &v101[8 * v102];
            v106 = v43;
            if (v104 < 0x38)
              goto LABEL_167;
            v107 = 8 * v102;
            v105 = &v101[8 * v102];
            v106 = v43;
            if ((unint64_t)(v105 - v43) < 0x20)
              goto LABEL_167;
            v108 = (v104 >> 3) + 1;
            v109 = 8 * (v108 & 0x3FFFFFFFFFFFFFFCLL);
            v105 = &v69[v109];
            v106 = &v43[v109];
            v110 = (__int128 *)(v43 + 16);
            v111 = &v101[v107 + 16];
            v112 = v108 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v113 = *v110;
              *((_OWORD *)v111 - 1) = *(v110 - 1);
              *(_OWORD *)v111 = v113;
              v110 += 2;
              v111 += 32;
              v112 -= 4;
            }
            while (v112);
            if (v108 != (v108 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_167:
              do
              {
                v114 = *(_QWORD *)v106;
                v106 += 8;
                *(_QWORD *)v105 = v114;
                v105 += 8;
              }
              while (v105 != v42);
            }
          }
          v41 = &v101[8 * v100];
          if (v43)
            operator delete(v43);
        }
        else
        {
          v95 = (v41 - v42) >> 3;
          if (v95 >= -1)
            v96 = v95 + 1;
          else
            v96 = v95 + 2;
          v97 = v43;
          v98 = v96 >> 1;
          v69 = &v97[8 * (v96 >> 1)];
          v99 = v97;
          if (v42 != v97)
          {
            memmove(v69, v97, v42 - v97);
            v99 = v42;
          }
          v42 = &v99[8 * v98];
        }
        v43 = v97;
      }
      v94 = *--v70;
      *((_QWORD *)v69 - 1) = v94;
      v69 -= 8;
    }
    while (v70 != *(_QWORD **)(a1 + 8));
  }
  v71 = *(char **)a1;
  *(_QWORD *)a1 = v43;
  *(_QWORD *)(a1 + 8) = v69;
  *(_QWORD *)(a1 + 16) = v42;
  *(_QWORD *)(a1 + 24) = v41;
  *(_QWORD *)(a1 + 32) += v144;
  if (v71)
    operator delete(v71);
}

void sub_1002B535C(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_1002B53A8()
{
  __cxa_end_catch();
  JUMPOUT(0x1002B53B0);
}

void sub_1002B53C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  double *v7;
  double *v8;
  unint64_t v9;
  double *v10;
  double v11;
  unint64_t v13;
  double v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  const double *v18;
  uint64_t v19;
  const double *v20;
  const double *v21;
  const double *v22;
  double v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t **v26;
  uint64_t *v27;
  _QWORD *v28;
  double **v29;
  double **v30;
  double *v31;
  double *v32;
  unint64_t v33;
  double *v34;
  double v35;
  unint64_t v37;
  double v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  const double *v42;
  uint64_t v43;
  const double *v44;
  const double *v45;
  const double *v46;
  double v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t **v50;
  uint64_t *v51;
  _QWORD *v52;
  _OWORD *v53;
  _BYTE v54[30];
  float64x2x2_t v55;
  float64x2x2_t v56;
  float64x2x2_t v57;
  float64x2x2_t v58;
  float64x2x2_t v59;
  float64x2x2_t v60;
  float64x2x2_t v61;
  float64x2x2_t v62;

  v7 = *(double **)a1;
  v8 = *(double **)(a1 + 8);
  v9 = (unint64_t)v8 - *(_QWORD *)a1;
  if (v8 == *(double **)a1)
    goto LABEL_16;
  memset(&v54[6], 255, 24);
  v10 = v7 + 2;
  v11 = 0.0;
  if (v9 >= 0x40 && v10 != v8)
  {
    v13 = v9 - 32;
    if (v13 >= 0x30)
    {
      v16 = (v13 >> 4) + 1;
      v17 = 2 * (v16 & 0x1FFFFFFFFFFFFFFCLL);
      v10 = (double *)((char *)v10 + v17 * 8);
      v15 = &v7[v17];
      v18 = v7 + 4;
      v14 = 0.0;
      v19 = v16 & 0x1FFFFFFFFFFFFFFCLL;
      do
      {
        v20 = v18 - 4;
        v55 = vld2q_f64(v20);
        v57 = vld2q_f64(v18);
        v21 = v18 - 2;
        v22 = v18 + 2;
        v59 = vld2q_f64(v21);
        v61 = vld2q_f64(v22);
        v55.val[0] = vmulq_f64(vaddq_f64(v55.val[0], v59.val[0]), vsubq_f64(v55.val[1], v59.val[1]));
        v55.val[1] = vmulq_f64(vaddq_f64(v57.val[0], v61.val[0]), vsubq_f64(v57.val[1], v61.val[1]));
        v14 = v14 + v55.val[0].f64[0] + v55.val[0].f64[1] + v55.val[1].f64[0] + v55.val[1].f64[1];
        v18 += 8;
        v19 -= 4;
      }
      while (v19);
      if (v16 == (v16 & 0x1FFFFFFFFFFFFFFCLL))
        goto LABEL_12;
    }
    else
    {
      v14 = 0.0;
      v15 = v7;
    }
    do
    {
      v23 = *v10;
      v10 += 2;
      v14 = v14 + (*v15 + v23) * (v15[1] - v15[3]);
      v15 += 2;
    }
    while (v10 != v8);
LABEL_12:
    v11 = v14 * 0.5;
  }
  v25 = *(uint64_t **)v7;
  v24 = (uint64_t *)*((_QWORD *)v7 + 1);
  v53 = (_OWORD *)a3;
  v26 = sub_1002B66BC(a4, (uint64_t *)a3, (uint64_t)&unk_100395958, &v53);
  *((_BYTE *)v26 + 56) = 1;
  v26[8] = v25;
  v26[9] = v24;
  *((double *)v26 + 10) = v11;
  *((_WORD *)v26 + 44) = 0;
  *(_OWORD *)((char *)v26 + 90) = *(_OWORD *)v54;
  *(_OWORD *)(v26 + 13) = *(_OWORD *)&v54[14];
  v26[15] = (uint64_t *)0xBFF0000000000000;
  v28 = v26 + 16;
  v27 = v26[16];
  if (v27)
  {
    v26[17] = v27;
    operator delete(v27);
  }
  *v28 = 0;
  v28[1] = 0;
  v28[2] = 0;
LABEL_16:
  v30 = *(double ***)(a1 + 24);
  v29 = *(double ***)(a1 + 32);
  if (v30 != v29)
  {
    while (1)
    {
      ++*(_QWORD *)(a3 + 16);
      v31 = *v30;
      v32 = v30[1];
      v33 = (char *)v32 - (char *)*v30;
      if (v32 != *v30)
        break;
LABEL_19:
      v30 += 3;
      if (v30 == v29)
        return;
    }
    memset(&v54[6], 255, 24);
    v34 = v31 + 2;
    v35 = 0.0;
    if (v33 < 0x40 || v34 == v32)
    {
LABEL_32:
      v49 = *(uint64_t **)v31;
      v48 = (uint64_t *)*((_QWORD *)v31 + 1);
      v53 = (_OWORD *)a3;
      v50 = sub_1002B66BC(a4, (uint64_t *)a3, (uint64_t)&unk_100395958, &v53);
      *((_BYTE *)v50 + 56) = 1;
      v50[8] = v49;
      v50[9] = v48;
      *((double *)v50 + 10) = v35;
      *((_WORD *)v50 + 44) = 0;
      *(_OWORD *)((char *)v50 + 90) = *(_OWORD *)v54;
      *(_OWORD *)(v50 + 13) = *(_OWORD *)&v54[14];
      v50[15] = (uint64_t *)0xBFF0000000000000;
      v52 = v50 + 16;
      v51 = v50[16];
      if (v51)
      {
        v50[17] = v51;
        operator delete(v51);
      }
      *v52 = 0;
      v52[1] = 0;
      v52[2] = 0;
      v29 = *(double ***)(a1 + 32);
      goto LABEL_19;
    }
    v37 = v33 - 32;
    if (v37 >= 0x30)
    {
      v40 = (v37 >> 4) + 1;
      v41 = 2 * (v40 & 0x1FFFFFFFFFFFFFFCLL);
      v34 = (double *)((char *)v34 + v41 * 8);
      v39 = &v31[v41];
      v42 = v31 + 4;
      v38 = 0.0;
      v43 = v40 & 0x1FFFFFFFFFFFFFFCLL;
      do
      {
        v44 = v42 - 4;
        v56 = vld2q_f64(v44);
        v58 = vld2q_f64(v42);
        v45 = v42 - 2;
        v46 = v42 + 2;
        v60 = vld2q_f64(v45);
        v62 = vld2q_f64(v46);
        v56.val[0] = vmulq_f64(vaddq_f64(v56.val[0], v60.val[0]), vsubq_f64(v56.val[1], v60.val[1]));
        v56.val[1] = vmulq_f64(vaddq_f64(v58.val[0], v62.val[0]), vsubq_f64(v58.val[1], v62.val[1]));
        v38 = v38 + v56.val[0].f64[0] + v56.val[0].f64[1] + v56.val[1].f64[0] + v56.val[1].f64[1];
        v42 += 8;
        v43 -= 4;
      }
      while (v43);
      if (v40 == (v40 & 0x1FFFFFFFFFFFFFFCLL))
        goto LABEL_31;
    }
    else
    {
      v38 = 0.0;
      v39 = v31;
    }
    do
    {
      v47 = *v34;
      v34 += 2;
      v38 = v38 + (*v39 + v47) * (v39[1] - v39[3]);
      v39 += 2;
    }
    while (v34 != v32);
LABEL_31:
    v35 = v38 * 0.5;
    goto LABEL_32;
  }
}

void sub_1002B5758(double **a1, double ***a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  BOOL v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  double **v33;
  double ***v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  _BYTE *v38;
  _BYTE *v39;
  int64_t v40;
  char *v41;
  uint64_t **v42;
  __int128 v43;
  __int128 v44;
  int v45;
  int v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t **v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t *v54;
  void *__p;
  char *v56;
  char *v57;
  _OWORD *v58;

  v12 = (_QWORD *)(a5 + 8);
  sub_1002B64F4(a5, *(_QWORD **)(a5 + 8));
  *(_QWORD *)a5 = v12;
  v49 = (uint64_t **)a5;
  *(_QWORD *)(a5 + 16) = 0;
  *v12 = 0;
  v15 = (_QWORD *)*a4;
  v14 = a4 + 1;
  v13 = v15;
  if (v15 != v14)
  {
    v16 = (_QWORD *)(a3 + 8);
    while (1)
    {
      v17 = (_QWORD *)*v16;
      if (!*v16)
        break;
      v19 = v13[4];
      v18 = v13[5];
      v20 = v16;
      v21 = v13[6];
      do
      {
        v25 = v17[4];
        v26 = v25 < v19;
        if (v25 == v19)
        {
          v27 = v17[5];
          v26 = v27 < v18;
          if (v27 == v18)
            v26 = v17[6] < v21;
        }
        v22 = v26;
        v23 = v22 == 0;
        if (v22)
          v24 = v17 + 1;
        else
          v24 = v17;
        if (v23)
          v20 = v17;
        v17 = (_QWORD *)*v24;
      }
      while (*v24);
      if (v20 == v16)
        break;
      v28 = v20[4];
      if (v19 == v28)
      {
        v29 = v20[5];
        if (v18 == v29)
        {
          if (v21 < v20[6])
            break;
        }
        else if (v18 < v29)
        {
          break;
        }
      }
      else if (v19 < v28)
      {
        break;
      }
      v45 = *((unsigned __int8 *)v20 + 56);
      v46 = *((unsigned __int8 *)v20 + 57);
      v30 = *((unsigned __int8 *)v20 + 58);
      if (!(v45 | v46))
        goto LABEL_26;
LABEL_42:
      v47 = (_QWORD *)v13[1];
      if (v47)
      {
        do
        {
          v48 = v47;
          v47 = (_QWORD *)*v47;
        }
        while (v47);
      }
      else
      {
        do
        {
          v48 = (_QWORD *)v13[2];
          v23 = *v48 == (_QWORD)v13;
          v13 = v48;
        }
        while (!v23);
      }
      v13 = v48;
      if (v48 == v14)
        return;
    }
    v30 = 0;
LABEL_26:
    v31 = v13[4];
    if (v31 == 1)
    {
      v32 = sub_1002B5FA0((double *)v13 + 8, a2, (uint64_t)a1);
    }
    else
    {
      if (v31)
        goto LABEL_31;
      v32 = sub_1002B5E18((double *)v13 + 8, a1, (uint64_t *)a2);
    }
    v30 = v32 > 0;
LABEL_31:
    if (!v30)
    {
      v33 = a1;
      v34 = a2;
      v35 = a6;
      v36 = *(_OWORD *)(v13 + 9);
      v37 = *(_OWORD *)(v13 + 13);
      v52 = *(_OWORD *)(v13 + 11);
      v53 = v37;
      v38 = (_BYTE *)v13[16];
      v54 = (uint64_t *)v13[15];
      v50 = *(_OWORD *)(v13 + 7);
      v51 = v36;
      v56 = 0;
      v57 = 0;
      __p = 0;
      v39 = (_BYTE *)v13[17];
      v40 = v39 - v38;
      if (v39 != v38)
      {
        if (0xAAAAAAAAAAAAAAABLL * (v40 >> 3) >= 0xAAAAAAAAAAAAAABLL)
          sub_1000D02C0();
        __p = operator new(v40);
        v56 = (char *)__p;
        v41 = (char *)__p + 8 * (v40 >> 3);
        v57 = v41;
        memcpy(__p, v38, v40);
        v56 = v41;
      }
      LOBYTE(v52) = 0;
      v58 = v13 + 4;
      v42 = sub_1002B66BC(v49, v13 + 4, (uint64_t)&unk_100395958, &v58);
      v43 = v50;
      *(_OWORD *)(v42 + 9) = v51;
      v44 = v53;
      *(_OWORD *)(v42 + 11) = v52;
      *(_OWORD *)(v42 + 13) = v44;
      v42[15] = v54;
      *(_OWORD *)(v42 + 7) = v43;
      if (v42 + 7 != (uint64_t **)&v50)
        sub_1002B6544(v42 + 16, (char *)__p, v56, 0xAAAAAAAAAAAAAAABLL * ((v56 - (_BYTE *)__p) >> 3));
      a6 = v35;
      a1 = v33;
      if (__p)
      {
        v56 = (char *)__p;
        operator delete(__p);
      }
      a2 = v34;
    }
    goto LABEL_42;
  }
}

void sub_1002B5A68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002B5A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  double *v7;
  double *v8;
  unint64_t v9;
  double *v10;
  double v11;
  unint64_t v13;
  double v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  const double *v18;
  uint64_t v19;
  const double *v20;
  const double *v21;
  const double *v22;
  double v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t **v26;
  uint64_t *v27;
  _QWORD *v28;
  double **v29;
  double **v30;
  double *v31;
  double *v32;
  unint64_t v33;
  double *v34;
  double v35;
  unint64_t v37;
  double v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  const double *v42;
  uint64_t v43;
  const double *v44;
  const double *v45;
  const double *v46;
  double v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t **v50;
  uint64_t *v51;
  _QWORD *v52;
  _OWORD *v53;
  _BYTE v54[30];
  float64x2x2_t v55;
  float64x2x2_t v56;
  float64x2x2_t v57;
  float64x2x2_t v58;
  float64x2x2_t v59;
  float64x2x2_t v60;
  float64x2x2_t v61;
  float64x2x2_t v62;

  v7 = *(double **)a1;
  v8 = *(double **)(a1 + 8);
  v9 = (unint64_t)v8 - *(_QWORD *)a1;
  if (v8 == *(double **)a1)
    goto LABEL_16;
  memset(&v54[6], 255, 24);
  v10 = v7 + 2;
  v11 = 0.0;
  if (v9 >= 0x40 && v10 != v8)
  {
    v13 = v9 - 32;
    if (v13 >= 0x30)
    {
      v16 = (v13 >> 4) + 1;
      v17 = 2 * (v16 & 0x1FFFFFFFFFFFFFFCLL);
      v10 = (double *)((char *)v10 + v17 * 8);
      v15 = &v7[v17];
      v18 = v7 + 4;
      v14 = 0.0;
      v19 = v16 & 0x1FFFFFFFFFFFFFFCLL;
      do
      {
        v20 = v18 - 4;
        v55 = vld2q_f64(v20);
        v57 = vld2q_f64(v18);
        v21 = v18 - 2;
        v22 = v18 + 2;
        v59 = vld2q_f64(v21);
        v61 = vld2q_f64(v22);
        v55.val[0] = vmulq_f64(vaddq_f64(v55.val[0], v59.val[0]), vsubq_f64(v55.val[1], v59.val[1]));
        v55.val[1] = vmulq_f64(vaddq_f64(v57.val[0], v61.val[0]), vsubq_f64(v57.val[1], v61.val[1]));
        v14 = v14 + v55.val[0].f64[0] + v55.val[0].f64[1] + v55.val[1].f64[0] + v55.val[1].f64[1];
        v18 += 8;
        v19 -= 4;
      }
      while (v19);
      if (v16 == (v16 & 0x1FFFFFFFFFFFFFFCLL))
        goto LABEL_12;
    }
    else
    {
      v14 = 0.0;
      v15 = v7;
    }
    do
    {
      v23 = *v10;
      v10 += 2;
      v14 = v14 + (*v15 + v23) * (v15[1] - v15[3]);
      v15 += 2;
    }
    while (v10 != v8);
LABEL_12:
    v11 = v14 * 0.5;
  }
  v25 = *(uint64_t **)v7;
  v24 = (uint64_t *)*((_QWORD *)v7 + 1);
  v53 = (_OWORD *)a3;
  v26 = sub_1002B66BC(a4, (uint64_t *)a3, (uint64_t)&unk_100395958, &v53);
  *((_BYTE *)v26 + 56) = 1;
  v26[8] = v25;
  v26[9] = v24;
  *((double *)v26 + 10) = v11;
  *((_WORD *)v26 + 44) = 0;
  *(_OWORD *)((char *)v26 + 90) = *(_OWORD *)v54;
  *(_OWORD *)(v26 + 13) = *(_OWORD *)&v54[14];
  v26[15] = (uint64_t *)0xBFF0000000000000;
  v28 = v26 + 16;
  v27 = v26[16];
  if (v27)
  {
    v26[17] = v27;
    operator delete(v27);
  }
  *v28 = 0;
  v28[1] = 0;
  v28[2] = 0;
LABEL_16:
  v30 = *(double ***)(a1 + 24);
  v29 = *(double ***)(a1 + 32);
  if (v30 != v29)
  {
    while (1)
    {
      ++*(_QWORD *)(a3 + 16);
      v31 = *v30;
      v32 = v30[1];
      v33 = (char *)v32 - (char *)*v30;
      if (v32 != *v30)
        break;
LABEL_19:
      v30 += 3;
      if (v30 == v29)
        return;
    }
    memset(&v54[6], 255, 24);
    v34 = v31 + 2;
    v35 = 0.0;
    if (v33 < 0x40 || v34 == v32)
    {
LABEL_32:
      v49 = *(uint64_t **)v31;
      v48 = (uint64_t *)*((_QWORD *)v31 + 1);
      v53 = (_OWORD *)a3;
      v50 = sub_1002B66BC(a4, (uint64_t *)a3, (uint64_t)&unk_100395958, &v53);
      *((_BYTE *)v50 + 56) = 1;
      v50[8] = v49;
      v50[9] = v48;
      *((double *)v50 + 10) = v35;
      *((_WORD *)v50 + 44) = 0;
      *(_OWORD *)((char *)v50 + 90) = *(_OWORD *)v54;
      *(_OWORD *)(v50 + 13) = *(_OWORD *)&v54[14];
      v50[15] = (uint64_t *)0xBFF0000000000000;
      v52 = v50 + 16;
      v51 = v50[16];
      if (v51)
      {
        v50[17] = v51;
        operator delete(v51);
      }
      *v52 = 0;
      v52[1] = 0;
      v52[2] = 0;
      v29 = *(double ***)(a1 + 32);
      goto LABEL_19;
    }
    v37 = v33 - 32;
    if (v37 >= 0x30)
    {
      v40 = (v37 >> 4) + 1;
      v41 = 2 * (v40 & 0x1FFFFFFFFFFFFFFCLL);
      v34 = (double *)((char *)v34 + v41 * 8);
      v39 = &v31[v41];
      v42 = v31 + 4;
      v38 = 0.0;
      v43 = v40 & 0x1FFFFFFFFFFFFFFCLL;
      do
      {
        v44 = v42 - 4;
        v56 = vld2q_f64(v44);
        v58 = vld2q_f64(v42);
        v45 = v42 - 2;
        v46 = v42 + 2;
        v60 = vld2q_f64(v45);
        v62 = vld2q_f64(v46);
        v56.val[0] = vmulq_f64(vaddq_f64(v56.val[0], v60.val[0]), vsubq_f64(v56.val[1], v60.val[1]));
        v56.val[1] = vmulq_f64(vaddq_f64(v58.val[0], v62.val[0]), vsubq_f64(v58.val[1], v62.val[1]));
        v38 = v38 + v56.val[0].f64[0] + v56.val[0].f64[1] + v56.val[1].f64[0] + v56.val[1].f64[1];
        v42 += 8;
        v43 -= 4;
      }
      while (v43);
      if (v40 == (v40 & 0x1FFFFFFFFFFFFFFCLL))
        goto LABEL_31;
    }
    else
    {
      v38 = 0.0;
      v39 = v31;
    }
    do
    {
      v47 = *v34;
      v34 += 2;
      v38 = v38 + (*v39 + v47) * (v39[1] - v39[3]);
      v39 += 2;
    }
    while (v34 != v32);
LABEL_31:
    v35 = v38 * 0.5;
    goto LABEL_32;
  }
}

uint64_t sub_1002B5E18(double *a1, double **a2, uint64_t *a3)
{
  uint64_t result;
  double *v6;
  double *v7;
  double *v8;
  double *v9;
  double *v10;
  double *v11;
  double *v12;
  double *v13;

  result = sub_100283054(a1, a3);
  if ((_DWORD)result)
    return result;
  v7 = a2[3];
  v6 = a2[4];
  v8 = *a2;
  v9 = a2[1];
  if (v7 == v6)
  {
    v10 = 0;
    if (v8 != v9)
      goto LABEL_8;
  }
  else
  {
    while (1)
    {
      v10 = *(double **)v7;
      if (*(_QWORD *)v7 != *((_QWORD *)v7 + 1))
        break;
      v7 += 3;
      if (v7 == v6)
      {
        v10 = 0;
        v7 = v6;
        break;
      }
    }
    if (v8 != v9)
    {
LABEL_8:
      v11 = v8 + 2;
      goto LABEL_18;
    }
  }
  if (v7 != v6)
  {
    v10 += 2;
    if (v10 == *((double **)v7 + 1))
    {
      while (1)
      {
        v7 += 3;
        if (v7 == v6)
          break;
        v12 = *(double **)v7;
        if (*(_QWORD *)v7 != *((_QWORD *)v7 + 1))
          goto LABEL_17;
      }
LABEL_28:
      v7 = v6;
      v11 = v9;
    }
    else
    {
      v11 = v9;
    }
    while (1)
    {
LABEL_18:
      while (v11 != v9)
      {
        result = sub_100283054(v11, a3);
        if ((_DWORD)result)
          return result;
        v11 += 2;
      }
      if (v7 == v6)
        break;
      result = sub_100283054(v10, a3);
      if ((_DWORD)result)
        return result;
      v10 += 2;
      v11 = v9;
      if (v10 == *((double **)v7 + 1))
      {
        v13 = v7 + 3;
        v7 = v6;
        v11 = v9;
        if (v13 != v6)
        {
          v7 = v13;
          while (1)
          {
            v12 = *(double **)v7;
            if (*(_QWORD *)v7 != *((_QWORD *)v7 + 1))
              break;
            v7 += 3;
            if (v7 == v6)
              goto LABEL_28;
          }
LABEL_17:
          v10 = v12;
          v11 = v9;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1002B5FA0(double *a1, double ***a2, uint64_t a3)
{
  double *v3;
  double *v4;
  double *v8;
  uint64_t v9;
  double **v10;
  double **v11;
  double *v12;
  double *v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double **v18;
  double **v19;
  double *v20;
  double *v21;
  double *v22;
  double *v23;
  double *v24;
  double *v25;
  double *v26;
  double *v27;
  double *v28;
  double *v29;
  double **v30;
  double **v31;
  double *v32;
  double *v33;
  double *v34;
  BOOL v35;
  double *v36;
  double *v37;
  double *v38;
  double **v40;
  double *v41;
  uint64_t v42;
  int v43;
  char v44;

  v3 = *(double **)a3;
  v4 = *(double **)(a3 + 8);
  if ((unint64_t)v4 - *(_QWORD *)a3 < 0x40)
    return 0xFFFFFFFFLL;
  v43 = 0;
  v44 = 0;
  if (v3 + 2 == v4)
    return 0xFFFFFFFFLL;
  do
  {
    if (!sub_10005B9D0(a1, v3, v3 + 2, (uint64_t)&v43))
      break;
    v8 = v3 + 4;
    v3 += 2;
  }
  while (v8 != v4);
  if (v43)
    v9 = 1;
  else
    v9 = 0xFFFFFFFFLL;
  if (!v44)
  {
    if (v43)
    {
      v19 = *(double ***)(a3 + 24);
      v18 = *(double ***)(a3 + 32);
      if (v19 != v18)
      {
        while (1)
        {
          v20 = *v19;
          v21 = v19[1];
          if ((unint64_t)((char *)v21 - (char *)*v19) >= 0x40)
          {
            v43 = 0;
            v44 = 0;
            if (v20 + 2 != v21)
            {
              do
              {
                if (!sub_10005B9D0(a1, v20, v20 + 2, (uint64_t)&v43))
                  break;
                v22 = v20 + 4;
                v20 += 2;
              }
              while (v22 != v21);
              if (v44)
                goto LABEL_9;
              if (v43)
                return 0xFFFFFFFFLL;
              v18 = *(double ***)(a3 + 32);
            }
          }
          v19 += 3;
          if (v19 == v18)
            return v9;
        }
      }
      return 1;
    }
    return 0xFFFFFFFFLL;
  }
LABEL_9:
  v11 = *a2;
  v10 = a2[1];
  if (*a2 == v10)
    return 0;
  v42 = a3;
  while (1)
  {
    v13 = *v11;
    v14 = v11[3];
    v15 = v11[4];
    if (v14 != v15)
      break;
    v12 = v11[1];
    if (v13 != v12)
    {
      v17 = 0;
      v15 = v11[3];
      goto LABEL_39;
    }
LABEL_12:
    v11 += 6;
    if (v11 == v10)
      return 0;
  }
  v16 = v11[3];
  while (*(_QWORD *)v16 == *((_QWORD *)v16 + 1))
  {
    v16 += 3;
    if (v16 == v15)
    {
      v16 = v11[4];
      break;
    }
  }
  v12 = v11[1];
  if (v16 == v15 && v13 == v12)
    goto LABEL_12;
  while (*(_QWORD *)v14 == *((_QWORD *)v14 + 1))
  {
    v14 += 3;
    if (v14 == v15)
    {
      v17 = 0;
      v14 = v11[4];
      goto LABEL_39;
    }
  }
  if (v14 == v15)
    v17 = 0;
  else
    v17 = *(double **)v14;
LABEL_39:
  if (v11 == v10)
    return 0;
  if (v13 == v12)
  {
    v17 += 2;
    if (v17 == *((double **)v14 + 1))
    {
      v14 += 3;
      if (v14 == v15)
      {
LABEL_46:
        v14 = v15;
      }
      else
      {
        while (*(_QWORD *)v14 == *((_QWORD *)v14 + 1))
        {
          v14 += 3;
          if (v14 == v15)
            goto LABEL_46;
        }
        v17 = *(double **)v14;
      }
    }
  }
  else
  {
    v13 += 2;
  }
  if (v14 != v15 || v13 != v12)
    goto LABEL_69;
  v11 += 6;
  if (v11 == v10)
    return 0;
  while (2)
  {
    v13 = *v11;
    v14 = v11[3];
    v15 = v11[4];
    if (v14 == v15)
    {
      v12 = v11[1];
      if (v13 != v12)
      {
        v15 = v11[3];
        goto LABEL_69;
      }
      goto LABEL_53;
    }
    v23 = v11[3];
    while (*(_QWORD *)v23 == *((_QWORD *)v23 + 1))
    {
      v23 += 3;
      if (v23 == v15)
      {
        v23 = v11[4];
        break;
      }
    }
    v12 = v11[1];
    if (v23 == v15 && v13 == v12)
    {
LABEL_53:
      v9 = 0;
      v11 += 6;
      if (v11 == v10)
        return v9;
      continue;
    }
    break;
  }
  while (1)
  {
    v24 = *(double **)v14;
    if (*(_QWORD *)v14 != *((_QWORD *)v14 + 1))
      break;
    v14 += 3;
    if (v14 == v15)
    {
      v24 = 0;
      v14 = v11[4];
      break;
    }
  }
  if (v14 != v15)
    v17 = v24;
LABEL_69:
  if (v11 != v10)
  {
    v40 = a2[1];
    v41 = v17;
    while (1)
    {
      if (v13 == v12)
        v25 = v41;
      else
        v25 = v13;
      v26 = *(double **)v42;
      v27 = *(double **)(v42 + 8);
      if ((unint64_t)v27 - *(_QWORD *)v42 < 0x40)
        return 0xFFFFFFFFLL;
      v43 = 0;
      v44 = 0;
      if (v26 + 2 == v27)
        return 0xFFFFFFFFLL;
      do
      {
        if (!sub_10005B9D0(v25, v26, v26 + 2, (uint64_t)&v43))
          break;
        v28 = v26 + 4;
        v26 += 2;
      }
      while (v28 != v27);
      if (!v44)
      {
        if (!v43)
          return 0xFFFFFFFFLL;
        v31 = *(double ***)(v42 + 24);
        v30 = *(double ***)(v42 + 32);
        if (v31 != v30)
        {
          while (1)
          {
            v33 = *v31;
            v32 = v31[1];
            if ((unint64_t)((char *)v32 - (char *)*v31) >= 0x40)
            {
              v43 = 0;
              v44 = 0;
              if (v33 + 2 != v32)
              {
                do
                {
                  if (!sub_10005B9D0(v25, v33, v33 + 2, (uint64_t)&v43))
                    break;
                  v34 = v33 + 4;
                  v33 += 2;
                }
                while (v34 != v32);
                if (v44)
                  goto LABEL_81;
                if (v43)
                  return 0xFFFFFFFFLL;
                v30 = *(double ***)(v42 + 32);
              }
            }
            v31 += 3;
            v9 = 1;
            if (v31 == v30)
              return v9;
          }
        }
        return 1;
      }
LABEL_81:
      v29 = v41;
      if (v13 == v12)
      {
        v29 = v41 + 2;
        if (v41 + 2 == *((double **)v14 + 1))
        {
          v14 += 3;
          if (v14 == v15)
          {
LABEL_98:
            v14 = v15;
          }
          else
          {
            while (*(_QWORD *)v14 == *((_QWORD *)v14 + 1))
            {
              v14 += 3;
              if (v14 == v15)
                goto LABEL_98;
            }
            v29 = *(double **)v14;
          }
        }
      }
      else
      {
        v13 += 2;
      }
      v35 = v13 == v11[1] && v14 == v11[4];
      v41 = v29;
      if (!v35 || v14 != v15 && v29)
        goto LABEL_72;
      v11 += 6;
      if (v11 == v40)
        return 0;
      while (1)
      {
        v13 = *v11;
        v14 = v11[3];
        v15 = v11[4];
        if (v14 != v15)
          break;
        v12 = v11[1];
        if (v13 != v12)
        {
          v15 = v11[3];
          goto LABEL_72;
        }
LABEL_110:
        v9 = 0;
        v11 += 6;
        if (v11 == v40)
          return v9;
      }
      v36 = v11[3];
      while (*(_QWORD *)v36 == *((_QWORD *)v36 + 1))
      {
        v36 += 3;
        if (v36 == v15)
        {
          v36 = v11[4];
          break;
        }
      }
      v12 = v11[1];
      if (v36 == v15 && v13 == v12)
        goto LABEL_110;
      while (1)
      {
        v37 = *(double **)v14;
        if (*(_QWORD *)v14 != *((_QWORD *)v14 + 1))
          break;
        v14 += 3;
        if (v14 == v15)
        {
          v37 = 0;
          v14 = v11[4];
          break;
        }
      }
      v38 = v29;
      if (v14 != v15)
        v38 = v37;
      v41 = v38;
LABEL_72:
      v9 = 0;
      if (v11 == v40)
        return v9;
    }
  }
  return 0;
}

void sub_1002B64F4(uint64_t a1, _QWORD *a2)
{
  void *v4;

  if (a2)
  {
    sub_1002B64F4(a1, *a2);
    sub_1002B64F4(a1, a2[1]);
    v4 = (void *)a2[16];
    if (v4)
    {
      a2[17] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

_QWORD *sub_1002B6544(_QWORD *result, char *__src, char *a3, size_t __sz)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  size_t v14;
  void **v15;
  _BYTE *v16;
  char *v17;
  void *v18;

  v6 = __src;
  v7 = result;
  v8 = result[2];
  v9 = (char *)*result;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *result) >> 3) < __sz)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (__sz > 0xAAAAAAAAAAAAAAALL)
      goto LABEL_23;
    v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    v11 = 2 * v10;
    if (2 * v10 <= __sz)
      v11 = __sz;
    v12 = v10 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v11;
    if (v12 > 0xAAAAAAAAAAAAAAALL)
LABEL_23:
      sub_1000D02C0();
    v13 = 3 * v12;
    result = operator new(24 * v12);
    v9 = (char *)result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[v13];
    v14 = a3 - v6;
    if (v14)
      result = memcpy(result, v6, v14);
    v15 = (void **)(v7 + 1);
    goto LABEL_22;
  }
  v15 = (void **)(result + 1);
  v16 = (_BYTE *)result[1];
  if (0xAAAAAAAAAAAAAAABLL * ((v16 - v9) >> 3) >= __sz)
  {
    v14 = a3 - __src;
    if (a3 == __src)
      goto LABEL_22;
    v18 = (void *)*result;
LABEL_21:
    result = memmove(v18, __src, v14);
    goto LABEL_22;
  }
  v17 = &__src[8 * ((v16 - v9) >> 3)];
  if (v16 != v9)
  {
    result = memmove((void *)*result, __src, v16 - v9);
    v9 = (char *)*v15;
  }
  v14 = a3 - v17;
  if (v14)
  {
    v18 = v9;
    __src = v17;
    goto LABEL_21;
  }
LABEL_22:
  *v15 = &v9[v14];
  return result;
}

uint64_t **sub_1002B66BC(uint64_t **a1, uint64_t *a2, uint64_t a3, _OWORD **a4)
{
  uint64_t *v6;
  uint64_t **v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t **v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t **v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    v8 = *a2;
    v9 = (uint64_t *)a2[1];
    v10 = (uint64_t *)a2[2];
    while (1)
    {
      while (1)
      {
        v11 = (uint64_t **)v6;
        v12 = v6[4];
        if (v8 == v12)
          break;
        if (v8 < v12)
          goto LABEL_3;
        if (v12 >= v8)
          return v11;
LABEL_14:
        v6 = v11[1];
        if (!v6)
        {
          v7 = v11 + 1;
          goto LABEL_17;
        }
      }
      v13 = v11[5];
      if (v9 != v13)
      {
        if ((uint64_t)v9 < (uint64_t)v13)
          goto LABEL_3;
        if ((uint64_t)v13 >= (uint64_t)v9)
          return v11;
        goto LABEL_14;
      }
      v14 = v11[6];
      if ((uint64_t)v10 >= (uint64_t)v14)
      {
        if ((uint64_t)v14 >= (uint64_t)v10)
          return v11;
        goto LABEL_14;
      }
LABEL_3:
      v6 = *v11;
      v7 = v11;
      if (!*v11)
        goto LABEL_17;
    }
  }
  v11 = a1 + 1;
LABEL_17:
  v15 = v11;
  v16 = operator new(0x98uLL);
  v17 = *((_QWORD *)*a4 + 2);
  v16[2] = **a4;
  *((_QWORD *)v16 + 6) = v17;
  *((_BYTE *)v16 + 56) = 0;
  *((_QWORD *)v16 + 10) = 0;
  *((_WORD *)v16 + 44) = 0;
  *((_QWORD *)v16 + 12) = -1;
  *((_QWORD *)v16 + 13) = -1;
  *((_QWORD *)v16 + 14) = -1;
  *((_QWORD *)v16 + 15) = 0xBFF0000000000000;
  *((_QWORD *)v16 + 17) = 0;
  *((_QWORD *)v16 + 18) = 0;
  *((_QWORD *)v16 + 16) = 0;
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  *((_QWORD *)v16 + 2) = v15;
  *v7 = (uint64_t *)v16;
  v18 = (uint64_t *)**a1;
  v19 = (uint64_t *)v16;
  if (v18)
  {
    *a1 = v18;
    v19 = *v7;
  }
  sub_1000E05F4(a1[1], v19);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return (uint64_t **)v16;
}

uint64_t sub_1002B6818(double **a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  double *v7;
  double *v8;
  uint64_t v12;
  double *v13;
  __int128 *v14;
  _OWORD v16[2];
  void *__p;
  void *v18;
  uint64_t v19;
  char v20;

  v8 = *a1;
  v7 = a1[1];
  if (0x8E38E38E38E38E39 * (v7 - *a1) <= a5)
  {
    if (v8 == v7)
    {
      return 1;
    }
    else
    {
      while (1)
      {
        v13 = v8;
        v8 += 9;
        v14 = (__int128 *)v8;
        if (v8 != v7)
          break;
LABEL_6:
        v12 = 1;
        if (v8 == v7)
          return v12;
      }
      while ((sub_1002B711C(a2, v13, v14, 1) & 1) != 0)
      {
        v7 = (double *)v14 + 9;
        v14 = (__int128 *)v7;
        if (v7 == a1[1])
          goto LABEL_6;
      }
      return 0;
    }
  }
  else
  {
    __p = 0;
    v18 = 0;
    v19 = 0;
    v16[0] = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
    v16[1] = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
    sub_1002B6974(a1, (double *)v16, (char **)&__p);
    v12 = sub_1002B6C08((double *)v16, (double ***)&__p, 0, a5, a2, a3, a4, (uint64_t)&v20);
    if (__p)
    {
      v18 = __p;
      operator delete(__p);
    }
  }
  return v12;
}

void sub_1002B6958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002B6974(double **a1, double *a2, char **a3)
{
  double *i;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  unint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  double **v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _OWORD *v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  double *v34;

  for (i = *a1; i != a1[1]; i += 9)
  {
    v8 = i[5];
    v9 = *a2;
    if (v8 < *a2)
    {
      *a2 = v8;
      v9 = v8;
      v10 = a2[2];
      if (v8 <= v10)
      {
LABEL_7:
        v11 = i[6];
        v12 = a2[1];
        if (v11 >= v12)
          goto LABEL_8;
        goto LABEL_17;
      }
    }
    else
    {
      v10 = a2[2];
      if (v8 <= v10)
        goto LABEL_7;
    }
    a2[2] = v8;
    v10 = v8;
    v11 = i[6];
    v12 = a2[1];
    if (v11 >= v12)
    {
LABEL_8:
      v13 = a2[3];
      if (v11 <= v13)
        goto LABEL_9;
      goto LABEL_18;
    }
LABEL_17:
    a2[1] = v11;
    v12 = v11;
    v13 = a2[3];
    if (v11 <= v13)
    {
LABEL_9:
      v14 = i[7];
      if (v14 >= v9)
        goto LABEL_10;
      goto LABEL_19;
    }
LABEL_18:
    a2[3] = v11;
    v13 = v11;
    v14 = i[7];
    if (v14 >= v9)
    {
LABEL_10:
      if (v14 <= v10)
        goto LABEL_11;
      goto LABEL_20;
    }
LABEL_19:
    *a2 = v14;
    if (v14 <= v10)
    {
LABEL_11:
      v15 = i[8];
      if (v15 >= v12)
        goto LABEL_12;
      goto LABEL_21;
    }
LABEL_20:
    a2[2] = v14;
    v15 = i[8];
    if (v15 >= v12)
    {
LABEL_12:
      if (v15 <= v13)
        goto LABEL_13;
      goto LABEL_22;
    }
LABEL_21:
    a2[1] = v15;
    if (v15 <= v13)
    {
LABEL_13:
      v17 = a3[1];
      v16 = (unint64_t)a3[2];
      if ((unint64_t)v17 >= v16)
        goto LABEL_23;
      goto LABEL_3;
    }
LABEL_22:
    a2[3] = v15;
    v17 = a3[1];
    v16 = (unint64_t)a3[2];
    if ((unint64_t)v17 >= v16)
    {
LABEL_23:
      v18 = *a3;
      v19 = v17 - *a3;
      v20 = v19 >> 3;
      v21 = (v19 >> 3) + 1;
      if (v21 >> 61)
        sub_1000D02C0();
      v22 = v16 - (_QWORD)v18;
      if (v22 >> 2 > v21)
        v21 = v22 >> 2;
      if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8)
        v23 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v23 = v21;
      if (v23)
      {
        if (v23 >> 61)
          sub_1000CDEB8();
        v24 = operator new(8 * v23);
        v25 = (double **)&v24[8 * v20];
        *v25 = i;
        v7 = (uint64_t)(v25 + 1);
        if (v17 == v18)
          goto LABEL_41;
LABEL_34:
        v26 = v17 - 8 - v18;
        if (v26 < 0x58)
          goto LABEL_48;
        if ((unint64_t)(v17 - &v24[v19]) < 0x20)
          goto LABEL_48;
        v27 = (v26 >> 3) + 1;
        v28 = 8 * (v27 & 0x3FFFFFFFFFFFFFFCLL);
        v29 = &v17[-v28];
        v25 = (double **)((char *)v25 - v28);
        v30 = &v24[8 * v20 - 16];
        v31 = v17 - 16;
        v32 = v27 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v33 = *(_OWORD *)v31;
          *(v30 - 1) = *((_OWORD *)v31 - 1);
          *v30 = v33;
          v30 -= 2;
          v31 -= 32;
          v32 -= 4;
        }
        while (v32);
        v17 = v29;
        if (v27 != (v27 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_48:
          do
          {
            v34 = (double *)*((_QWORD *)v17 - 1);
            v17 -= 8;
            *--v25 = v34;
          }
          while (v17 != v18);
        }
        v17 = *a3;
      }
      else
      {
        v24 = 0;
        v25 = (double **)(8 * v20);
        *(_QWORD *)(8 * v20) = i;
        v7 = 8 * v20 + 8;
        if (v17 != v18)
          goto LABEL_34;
      }
LABEL_41:
      *a3 = (char *)v25;
      a3[1] = (char *)v7;
      a3[2] = &v24[8 * v23];
      if (v17)
        operator delete(v17);
      goto LABEL_4;
    }
LABEL_3:
    *(_QWORD *)v17 = i;
    v7 = (uint64_t)(v17 + 8);
LABEL_4:
    a3[1] = (char *)v7;
  }
}

uint64_t sub_1002B6C08(double *a1, double ***a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double v14;
  __int128 v15;
  __int128 **v16;
  double **v17;
  float64x2_t v18;
  float64x2_t v19;
  __int128 **v20;
  int8x16_t v21;
  int8x16_t v22;
  uint64_t v23;
  float64x2_t v24;
  int8x16_t v25;
  int8x16_t v26;
  float64x2_t v27;
  float64x2_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  float64x2_t v32;
  int8x16_t v33;
  double **v34;
  __int128 **v35;
  __int128 **v36;
  double **v37;
  __int128 **v38;
  __int128 **v39;
  __int128 **v40;
  __int128 **v41;
  double **v42;
  uint64_t v43;
  double **v45;
  __int128 **v46;
  __int128 **v47;
  double **v48;
  double **v49;
  __int128 **v50;
  int8x16_t v51;
  int8x16_t v52;
  void *__p;
  __int128 **v54;
  uint64_t v55;
  void *v56;
  __int128 **v57;
  uint64_t v58;
  void *v59;
  __int128 **v60;
  uint64_t v61;
  double v62[2];
  __int128 v63;
  __int128 v64;
  double v65;
  uint64_t v66;

  v14 = (*a1 + a1[2]) * 0.5;
  v15 = *((_OWORD *)a1 + 1);
  v64 = *(_OWORD *)a1;
  v66 = *((_QWORD *)&v15 + 1);
  v62[1] = *((double *)&v64 + 1);
  v63 = v15;
  v65 = v14;
  v62[0] = v14;
  v59 = 0;
  v60 = 0;
  v61 = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  __p = 0;
  v54 = 0;
  v55 = 0;
  sub_1002B763C((double *)&v64, v62, a2, (double ***)&v59, &v56, &__p);
  v17 = (double **)__p;
  v16 = v54;
  if (__p != v54)
  {
    v51 = 0u;
    v52 = 0u;
    v18 = (float64x2_t)vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
    v19 = (float64x2_t)vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
    v20 = (__int128 **)__p;
    v21 = (int8x16_t)v19;
    v22 = (int8x16_t)v18;
    do
    {
      v23 = (uint64_t)*v20++;
      v24 = *(float64x2_t *)(v23 + 40);
      v25 = (int8x16_t)vcgtq_f64(v19, v24);
      v26 = vbslq_s8(v25, (int8x16_t)v24, v21);
      v27 = (float64x2_t)vbslq_s8(v25, (int8x16_t)v24, (int8x16_t)v19);
      v28 = *(float64x2_t *)(v23 + 56);
      v29 = (int8x16_t)vcgtq_f64(v27, v28);
      v21 = vbslq_s8(v29, (int8x16_t)v28, v26);
      v19 = (float64x2_t)vbslq_s8(v29, (int8x16_t)v28, (int8x16_t)v27);
      v30 = (int8x16_t)vcgtq_f64(v24, v18);
      v31 = vbslq_s8(v30, (int8x16_t)v24, v22);
      v32 = (float64x2_t)vbslq_s8(v30, (int8x16_t)v24, (int8x16_t)v18);
      v33 = (int8x16_t)vcgtq_f64(v28, v32);
      v22 = vbslq_s8(v33, (int8x16_t)v28, v31);
      v18 = (float64x2_t)vbslq_s8(v33, (int8x16_t)v28, (int8x16_t)v32);
    }
    while (v20 != v54);
    v51 = v21;
    v52 = v22;
    if (a3 > 0x63 || ((char *)v54 - (_BYTE *)__p) >> 3 < a4)
    {
      while (1)
      {
        v35 = (__int128 **)(v17 + 1);
        if (v17 + 1 != (double **)v16)
          break;
LABEL_13:
        ++v17;
        if (v35 == v16)
          goto LABEL_8;
      }
      v16 = (__int128 **)(v17 + 1);
      while ((sub_1002B711C(a5, *v17, *v16, 1) & 1) != 0)
      {
        if (++v16 == v54)
          goto LABEL_13;
      }
      goto LABEL_41;
    }
    if (!sub_1002B7B60((double *)v51.i64, (double ***)&__p, a3 + 1, a4, a5, a6, a7, a8))
      goto LABEL_41;
    v16 = v54;
LABEL_8:
    v34 = (double **)__p;
    if (a4 > ((char *)v16 - (_BYTE *)__p) >> 3 || a3 > 0x63 || ((char *)v60 - (_BYTE *)v59) >> 3 < a4)
    {
      if (__p != v16)
      {
        v36 = v60;
        if (v59 != v60)
        {
          while (1)
          {
            v39 = (__int128 **)v59;
            if (v59 != v36)
              break;
LABEL_25:
            if (++v34 == (double **)v16)
              goto LABEL_21;
          }
          while ((sub_1002B711C(a5, *v34, *v39, 1) & 1) != 0)
          {
            if (++v39 == v60)
            {
              v16 = v54;
              v36 = v39;
              goto LABEL_25;
            }
          }
          goto LABEL_41;
        }
      }
    }
    else
    {
      if (!sub_1002B8A34((uint64_t)&v51, (double ***)&__p, (double ***)&v59, a3 + 1, a4, a5, a6, a7, a6, a7, a8))goto LABEL_41;
      v16 = v54;
    }
LABEL_21:
    v37 = (double **)__p;
    if (a4 <= ((char *)v16 - (_BYTE *)__p) >> 3 && a3 <= 0x63 && ((char *)v57 - (_BYTE *)v56) >> 3 >= a4)
    {
      if ((sub_1002B8A34((uint64_t)&v51, (double ***)&__p, (double ***)&v56, a3 + 1, a4, a5, a6, a7, a6, a7, a8) & 1) != 0)
        goto LABEL_38;
LABEL_41:
      v43 = 0;
      goto LABEL_42;
    }
    if (__p != v16)
    {
      v38 = v57;
      if (v56 != v57)
      {
        while (1)
        {
          v40 = (__int128 **)v56;
          if (v56 != v38)
            break;
LABEL_30:
          if (++v37 == (double **)v16)
            goto LABEL_38;
        }
        while ((sub_1002B711C(a5, *v37, *v40, 1) & 1) != 0)
        {
          if (++v40 == v57)
          {
            v16 = v54;
            v38 = v40;
            goto LABEL_30;
          }
        }
        goto LABEL_41;
      }
    }
  }
LABEL_38:
  v42 = (double **)v59;
  v41 = v60;
  if (a3 > 0x63 || ((char *)v60 - (_BYTE *)v59) >> 3 < a4)
  {
LABEL_52:
    while (v42 != (double **)v41)
    {
      v45 = v42++;
      v46 = (__int128 **)v42;
      if (v42 != (double **)v41)
      {
        while ((sub_1002B711C(a5, *v45, *v46, 1) & 1) != 0)
        {
          v41 = v46 + 1;
          v46 = v41;
          if (v41 == v60)
            goto LABEL_52;
        }
        goto LABEL_41;
      }
    }
  }
  else if (!sub_1002B7B60((double *)&v64, (double ***)&v59, a3 + 1, a4, a5, a6, a7, a8))
  {
    goto LABEL_41;
  }
  v48 = (double **)v56;
  v47 = v57;
  if (a3 > 0x63 || ((char *)v57 - (_BYTE *)v56) >> 3 < a4)
  {
    if (v56 != v57)
    {
      while (1)
      {
        v49 = v48++;
        v50 = (__int128 **)v48;
        if (v48 != (double **)v47)
          break;
LABEL_58:
        v43 = 1;
        if (v48 == (double **)v47)
          goto LABEL_42;
      }
      while ((sub_1002B711C(a5, *v49, *v50, 1) & 1) != 0)
      {
        v47 = v50 + 1;
        v50 = v47;
        if (v47 == v57)
          goto LABEL_58;
      }
      goto LABEL_41;
    }
    v43 = 1;
  }
  else
  {
    v43 = sub_1002B7B60(v62, (double ***)&v56, a3 + 1, a4, a5, a6, a7, a8);
  }
LABEL_42:
  if (__p)
  {
    v54 = (__int128 **)__p;
    operator delete(__p);
  }
  if (v56)
  {
    v57 = (__int128 **)v56;
    operator delete(v56);
  }
  if (v59)
  {
    v60 = (__int128 **)v59;
    operator delete(v59);
  }
  return v43;
}

void sub_1002B70B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25)
{
  void *v26;
  void *v27;

  if (__p)
  {
    operator delete(__p);
    v26 = a21;
    if (!a21)
    {
LABEL_3:
      v27 = a24;
      if (!a24)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v26 = a21;
    if (!a21)
      goto LABEL_3;
  }
  operator delete(v26);
  v27 = a24;
  if (!a24)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v27);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B711C(uint64_t a1, double *a2, __int128 *a3, int a4)
{
  double *v7;
  uint64_t **v8;
  uint64_t **v9;
  double v10;
  uint64_t **v12;
  double v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double **v20;
  uint64_t **v21;
  uint64_t **v22;
  double v23;
  double v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double **v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  double *v62;

  if (a4 && (v7 = (double *)(a3 + 2), a2[4] < *((double *)a3 + 4)))
  {
    if (*(_BYTE *)(a1 + 40))
      goto LABEL_11;
    v40 = *((double *)a3 + 3);
    if (v40 > 0.0)
    {
      if ((*(_QWORD *)&v40 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
        goto LABEL_55;
      v41 = fabs(v40);
      v42 = 2.22044605e-16;
      if (v41 >= 1.0)
        v42 = v41 * 2.22044605e-16;
      if (v41 > v42)
      {
LABEL_55:
        v43 = a2[3];
        if (v43 < 0.0)
        {
          if ((*(_QWORD *)&v43 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
            || ((v44 = vabdd_f64(0.0, v43), v45 = fmax(fabs(v43), 0.0), v45 >= 1.0)
              ? (v46 = v45 * 2.22044605e-16)
              : (v46 = 2.22044605e-16),
                v44 > v46))
          {
LABEL_11:
            v8 = *(uint64_t ***)(a1 + 24);
            v62 = a2;
            v9 = sub_1002B66BC(v8, (uint64_t *)a2, (uint64_t)&unk_100395958, (_OWORD **)&v62);
            v10 = *((double *)v9 + 8);
            if (v10 >= *((double *)a3 + 5) && v10 <= *((double *)a3 + 7))
            {
              v12 = v9;
              v13 = *((double *)v9 + 9);
              if (v13 >= *((double *)a3 + 6) && v13 <= *((double *)a3 + 8))
              {
                v15 = *(_QWORD *)a1;
                v16 = *(_QWORD **)(a1 + 16);
                v17 = **(_QWORD **)(a1 + 8);
                v18 = *a2;
                if (*(_QWORD *)a2 == 2)
                {
                  v53 = *((_QWORD *)a2 + 1);
                  v54 = v16[4];
                  v55 = v16[1];
                  v56 = (_QWORD *)(v55 + 8 * (v54 / 0xAA));
                  if (v16[2] == v55)
                    v20 = 0;
                  else
                    v20 = (double **)(*v56 + 24 * (v54 % 0xAA));
                  if (v53)
                  {
                    v59 = v53 - 0x5555555555555555 * (((uint64_t)v20 - *v56) >> 3);
                    if (v59 < 1)
                      v20 = (double **)(v56[-((169 - v59) / 0xAAuLL)]
                                      + 24 * (170 * ((169 - v59) / 0xAAuLL) - (169 - v59))
                                      + 4056);
                    else
                      v20 = (double **)(v56[v59 / 0xAAuLL] + 24 * (v59 % 0xAAuLL));
                  }
                }
                else if (*(_QWORD *)&v18 == 1)
                {
                  v57 = *((_QWORD *)a2 + 2);
                  if (v57 >= 0)
                    v20 = (double **)(*(_QWORD *)(v17 + 48 * *((_QWORD *)a2 + 1) + 24) + 24 * v57);
                  else
                    v20 = (double **)(v17 + 48 * *((_QWORD *)a2 + 1));
                }
                else
                {
                  if (v18 != 0.0)
                    return 1;
                  v19 = *((_QWORD *)a2 + 2);
                  if (v19 >= 0)
                    v20 = (double **)(*(_QWORD *)(v15 + 24) + 24 * v19);
                  else
                    v20 = *(double ***)a1;
                }
                if (sub_1002B93F0((uint64_t)(v9 + 7), v20, (uint64_t *)a3, v15, v17, v16)
                  && (v12[12] == (uint64_t *)-1 || *v7 < *((double *)v12 + 15)))
                {
                  v60 = *a3;
                  v12[14] = (uint64_t *)*((_QWORD *)a3 + 2);
                  *((_OWORD *)v12 + 6) = v60;
                  goto LABEL_85;
                }
              }
            }
          }
        }
      }
    }
  }
  else
  {
    if (*(_BYTE *)(a1 + 40))
      goto LABEL_26;
    v33 = a2[3];
    if (v33 > 0.0)
    {
      if ((*(_QWORD *)&v33 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
        goto LABEL_43;
      v34 = fabs(v33);
      v35 = 2.22044605e-16;
      if (v34 >= 1.0)
        v35 = v34 * 2.22044605e-16;
      if (v34 > v35)
      {
LABEL_43:
        v36 = *((double *)a3 + 3);
        if (v36 < 0.0)
        {
          if ((*(_QWORD *)&v36 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
            || ((v37 = vabdd_f64(0.0, v36), v38 = fmax(fabs(v36), 0.0), v38 >= 1.0)
              ? (v39 = v38 * 2.22044605e-16)
              : (v39 = 2.22044605e-16),
                v37 > v39))
          {
LABEL_26:
            v21 = *(uint64_t ***)(a1 + 24);
            v62 = (double *)a3;
            v22 = sub_1002B66BC(v21, (uint64_t *)a3, (uint64_t)&unk_100395958, (_OWORD **)&v62);
            v23 = *((double *)v22 + 8);
            if (v23 >= a2[5] && v23 <= a2[7])
            {
              v12 = v22;
              v25 = *((double *)v22 + 9);
              if (v25 >= a2[6] && v25 <= a2[8])
              {
                v27 = *(_QWORD *)a1;
                v28 = *(_QWORD **)(a1 + 16);
                v29 = **(_QWORD **)(a1 + 8);
                v30 = *(_QWORD *)a3;
                if (*(_QWORD *)a3 == 2)
                {
                  v47 = *((_QWORD *)a3 + 1);
                  v48 = v28[4];
                  v49 = v28[1];
                  v50 = (_QWORD *)(v49 + 8 * (v48 / 0xAA));
                  if (v28[2] == v49)
                    v32 = 0;
                  else
                    v32 = (double **)(*v50 + 24 * (v48 % 0xAA));
                  if (v47)
                  {
                    v52 = v47 - 0x5555555555555555 * (((uint64_t)v32 - *v50) >> 3);
                    if (v52 < 1)
                      v32 = (double **)(v50[-((169 - v52) / 0xAAuLL)]
                                      + 24 * (170 * ((169 - v52) / 0xAAuLL) - (169 - v52))
                                      + 4056);
                    else
                      v32 = (double **)(v50[v52 / 0xAAuLL] + 24 * (v52 % 0xAAuLL));
                  }
                }
                else if (v30 == 1)
                {
                  v51 = *((_QWORD *)a3 + 2);
                  if (v51 >= 0)
                    v32 = (double **)(*(_QWORD *)(v29 + 48 * *((_QWORD *)a3 + 1) + 24) + 24 * v51);
                  else
                    v32 = (double **)(v29 + 48 * *((_QWORD *)a3 + 1));
                }
                else
                {
                  if (v30)
                    return 1;
                  v31 = *((_QWORD *)a3 + 2);
                  if (v31 >= 0)
                    v32 = (double **)(*(_QWORD *)(v27 + 24) + 24 * v31);
                  else
                    v32 = *(double ***)a1;
                }
                if (sub_1002B93F0((uint64_t)(v22 + 7), v32, (uint64_t *)a2, v27, v29, v28)
                  && (v12[12] == (uint64_t *)-1 || a2[4] < *((double *)v12 + 15)))
                {
                  v58 = *(_OWORD *)a2;
                  v12[14] = (uint64_t *)*((_QWORD *)a2 + 2);
                  *((_OWORD *)v12 + 6) = v58;
                  v7 = a2 + 4;
LABEL_85:
                  v12[15] = *(uint64_t **)v7;
                }
              }
            }
          }
        }
      }
    }
  }
  return 1;
}

double *sub_1002B763C(double *result, double *a2, double ***a3, double ***a4, _QWORD *a5, _QWORD *a6)
{
  double **v6;
  double *v8;
  double *v9;
  double v10;
  _BOOL4 v11;
  char **v12;
  unint64_t v13;
  char *v14;
  double ***v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  double **v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  double **v26;
  double ***v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  double ***v32;
  uint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  double **v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double **v41;
  _OWORD *v42;
  double **v43;
  uint64_t v44;
  __int128 v45;
  double *v46;
  unint64_t v47;
  double ***v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _OWORD *v59;
  char *v60;
  uint64_t v61;
  __int128 v62;
  double *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _OWORD *v68;
  char *v69;
  uint64_t v70;
  __int128 v71;
  double *v72;
  unint64_t v73;
  double ***v74;
  double *v78;

  v6 = *a3;
  if (*a3 != a3[1])
  {
    v8 = a2;
    v78 = result;
    v74 = a3;
    do
    {
      v9 = *v6;
      v10 = (*v6)[5];
      if (result[2] >= v10 && *result <= v9[7] && result[3] >= v9[6])
      {
        v11 = result[1] <= v9[8];
        if (v8[2] < v10)
          goto LABEL_25;
      }
      else
      {
        v11 = 0;
        if (v8[2] < v10)
          goto LABEL_25;
      }
      if (*v8 <= v9[7] && v8[3] >= v9[6] && v8[1] <= v9[8])
      {
        if (v11)
        {
          v12 = (char **)a6;
          v14 = (char *)a6[1];
          v13 = a6[2];
          if ((unint64_t)v14 >= v13)
          {
            v15 = a4;
            v16 = (char *)*a6;
            v17 = (uint64_t)&v14[-*a6];
            v18 = v17 >> 3;
            v19 = (v17 >> 3) + 1;
            if (v19 >> 61)
              sub_1000D02C0();
            v20 = v13 - (_QWORD)v16;
            if (v20 >> 2 > v19)
              v19 = v20 >> 2;
            if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8)
              v19 = 0x1FFFFFFFFFFFFFFFLL;
            v73 = v19;
            if (v19)
            {
              if (v19 >> 61)
                goto LABEL_82;
              v21 = operator new(8 * v19);
              v22 = (double **)&v21[8 * v18];
              *v22 = v9;
              v23 = (uint64_t)(v22 + 1);
              if (v14 != v16)
              {
LABEL_22:
                v24 = v14 - 8 - v16;
                v12 = (char **)a6;
                if (v24 < 0x58)
                {
                  a4 = v15;
                  goto LABEL_68;
                }
                v55 = v14 - &v21[v17];
                a4 = v15;
                if (v55 < 0x20)
                  goto LABEL_87;
                v56 = (v24 >> 3) + 1;
                v57 = 8 * (v56 & 0x3FFFFFFFFFFFFFFCLL);
                v58 = &v14[-v57];
                v22 = (double **)((char *)v22 - v57);
                v59 = &v21[8 * v18 - 16];
                v60 = v14 - 16;
                v61 = v56 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  v62 = *(_OWORD *)v60;
                  *(v59 - 1) = *((_OWORD *)v60 - 1);
                  *v59 = v62;
                  v59 -= 2;
                  v60 -= 32;
                  v61 -= 4;
                }
                while (v61);
                v14 = v58;
                if (v56 != (v56 & 0x3FFFFFFFFFFFFFFCLL))
                {
LABEL_87:
                  do
                  {
LABEL_68:
                    v63 = (double *)*((_QWORD *)v14 - 1);
                    v14 -= 8;
                    *--v22 = v63;
                  }
                  while (v14 != v16);
                }
LABEL_75:
                v14 = *v12;
LABEL_76:
                *v12 = (char *)v22;
                v12[1] = (char *)v23;
                v12[2] = &v21[8 * v73];
                if (v14)
                  operator delete(v14);
                a3 = v74;
                result = v78;
LABEL_79:
                v12[1] = (char *)v23;
                goto LABEL_4;
              }
            }
            else
            {
              v21 = 0;
              v22 = (double **)(8 * v18);
              *(_QWORD *)(8 * v18) = v9;
              v23 = 8 * v18 + 8;
              if (v14 != v16)
                goto LABEL_22;
            }
            v12 = (char **)a6;
            a4 = v15;
            goto LABEL_76;
          }
LABEL_49:
          *(_QWORD *)v14 = v9;
          v23 = (uint64_t)(v14 + 8);
          goto LABEL_79;
        }
        v12 = (char **)a5;
        v14 = (char *)a5[1];
        v47 = a5[2];
        if ((unint64_t)v14 < v47)
          goto LABEL_49;
        v48 = a4;
        v49 = (char *)*a5;
        v50 = (uint64_t)&v14[-*a5];
        v51 = v50 >> 3;
        v52 = (v50 >> 3) + 1;
        if (v52 >> 61)
          sub_1000D02C0();
        v53 = v47 - (_QWORD)v49;
        if (v53 >> 2 > v52)
          v52 = v53 >> 2;
        if ((unint64_t)v53 >= 0x7FFFFFFFFFFFFFF8)
          v52 = 0x1FFFFFFFFFFFFFFFLL;
        v73 = v52;
        if (v52)
        {
          if (v52 >> 61)
LABEL_82:
            sub_1000CDEB8();
          v21 = operator new(8 * v52);
          v22 = (double **)&v21[8 * v51];
          *v22 = v9;
          v23 = (uint64_t)(v22 + 1);
          if (v14 != v49)
          {
LABEL_58:
            v54 = v14 - 8 - v49;
            v12 = (char **)a5;
            if (v54 >= 0x58)
            {
              v64 = v14 - &v21[v50];
              a4 = v48;
              if (v64 >= 0x20)
              {
                v65 = (v54 >> 3) + 1;
                v66 = 8 * (v65 & 0x3FFFFFFFFFFFFFFCLL);
                v67 = &v14[-v66];
                v22 = (double **)((char *)v22 - v66);
                v68 = &v21[8 * v51 - 16];
                v69 = v14 - 16;
                v70 = v65 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  v71 = *(_OWORD *)v69;
                  *(v68 - 1) = *((_OWORD *)v69 - 1);
                  *v68 = v71;
                  v68 -= 2;
                  v69 -= 32;
                  v70 -= 4;
                }
                while (v70);
                v14 = v67;
                if (v65 == (v65 & 0x3FFFFFFFFFFFFFFCLL))
                  goto LABEL_75;
              }
            }
            else
            {
              a4 = v48;
            }
            do
            {
              v72 = (double *)*((_QWORD *)v14 - 1);
              v14 -= 8;
              *--v22 = v72;
            }
            while (v14 != v49);
            goto LABEL_75;
          }
        }
        else
        {
          v21 = 0;
          v22 = (double **)(8 * v51);
          *(_QWORD *)(8 * v51) = v9;
          v23 = 8 * v51 + 8;
          if (v14 != v49)
            goto LABEL_58;
        }
        v12 = (char **)a5;
        a4 = v48;
        goto LABEL_76;
      }
LABEL_25:
      if (v11)
      {
        v26 = a4[1];
        v25 = (unint64_t)a4[2];
        if ((unint64_t)v26 >= v25)
        {
          v27 = a4;
          v28 = (char *)*a4;
          v29 = (char *)v26 - (char *)*a4;
          v30 = v29 >> 3;
          v31 = (v29 >> 3) + 1;
          if (v31 >> 61)
            sub_1000D02C0();
          v32 = a3;
          v33 = v25 - (_QWORD)v28;
          if (v33 >> 2 > v31)
            v31 = v33 >> 2;
          if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF8)
            v34 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v34 = v31;
          if (v34)
          {
            if (v34 >> 61)
              goto LABEL_82;
            v35 = operator new(8 * v34);
            v36 = (double **)&v35[8 * v30];
            *v36 = v9;
            v37 = (uint64_t)(v36 + 1);
            if (v26 != (double **)v28)
            {
LABEL_36:
              v38 = (char *)(v26 - 1) - v28;
              if (v38 < 0x58)
                goto LABEL_88;
              if ((unint64_t)((char *)v26 - &v35[v29]) < 0x20)
                goto LABEL_88;
              v39 = (v38 >> 3) + 1;
              v40 = 8 * (v39 & 0x3FFFFFFFFFFFFFFCLL);
              v41 = &v26[v40 / 0xFFFFFFFFFFFFFFF8];
              v36 = (double **)((char *)v36 - v40);
              v42 = &v35[8 * v30 - 16];
              v43 = v26 - 2;
              v44 = v39 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v45 = *(_OWORD *)v43;
                *(v42 - 1) = *((_OWORD *)v43 - 1);
                *v42 = v45;
                v42 -= 2;
                v43 -= 4;
                v44 -= 4;
              }
              while (v44);
              v26 = v41;
              if (v39 != (v39 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_88:
                do
                {
                  v46 = *--v26;
                  *--v36 = v46;
                }
                while (v26 != (double **)v28);
              }
              a4 = v27;
              v26 = *v27;
              *v27 = v36;
              v27[1] = (double **)v37;
              v27[2] = (double **)&v35[8 * v34];
              if (v26)
LABEL_43:
                operator delete(v26);
LABEL_44:
              a3 = v32;
              v8 = a2;
              result = v78;
              a4[1] = (double **)v37;
              goto LABEL_4;
            }
          }
          else
          {
            v35 = 0;
            v36 = (double **)(8 * v30);
            *(_QWORD *)(8 * v30) = v9;
            v37 = 8 * v30 + 8;
            if (v26 != (double **)v28)
              goto LABEL_36;
          }
          a4 = v27;
          *v27 = v36;
          v27[1] = (double **)v37;
          v27[2] = (double **)&v35[8 * v34];
          if (v26)
            goto LABEL_43;
          goto LABEL_44;
        }
        *v26 = v9;
        a4[1] = v26 + 1;
      }
LABEL_4:
      ++v6;
    }
    while (v6 != a3[1]);
  }
  return result;
}

uint64_t sub_1002B7B60(double *a1, double ***a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double v14;
  double v15;
  double v16;
  __int128 v17;
  __n128 v18;
  __n128 v19;
  __int128 **v20;
  double **v21;
  __int128 **v22;
  int8x16_t v23;
  int8x16_t v24;
  uint64_t v25;
  float64x2_t v26;
  int8x16_t v27;
  int8x16_t v28;
  float64x2_t v29;
  float64x2_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  float64x2_t v34;
  int8x16_t v35;
  double **v36;
  __int128 **v37;
  __int128 **v38;
  double **v39;
  __int128 **v40;
  __int128 **v41;
  __int128 **v42;
  __int128 **v43;
  double **v44;
  uint64_t v45;
  double **v47;
  __int128 **v48;
  __int128 **v49;
  double **v50;
  double **v51;
  __int128 **v52;
  int8x16_t v53;
  int8x16_t v54;
  void *__p;
  __int128 **v56;
  uint64_t v57;
  void *v58;
  __int128 **v59;
  uint64_t v60;
  void *v61;
  __int128 **v62;
  uint64_t v63;
  double v64[2];
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  double v68;

  v14 = a1[1];
  v15 = a1[3];
  v66 = *(_OWORD *)a1;
  v16 = (v14 + v15) * 0.5;
  v67 = *((_QWORD *)a1 + 2);
  v17 = *((_OWORD *)a1 + 1);
  *(_QWORD *)&v64[0] = v66;
  v65 = v17;
  v68 = v16;
  v64[1] = v16;
  v61 = 0;
  v62 = 0;
  v63 = 0;
  v58 = 0;
  v59 = 0;
  v60 = 0;
  __p = 0;
  v56 = 0;
  v57 = 0;
  sub_1002B763C((double *)&v66, v64, a2, (double ***)&v61, &v58, &__p);
  v21 = (double **)__p;
  v20 = v56;
  if (__p != v56)
  {
    v53 = 0u;
    v54 = 0u;
    v18 = (__n128)vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
    v19 = (__n128)vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
    v22 = (__int128 **)__p;
    v23 = (int8x16_t)v19;
    v24 = (int8x16_t)v18;
    do
    {
      v25 = (uint64_t)*v22++;
      v26 = *(float64x2_t *)(v25 + 40);
      v27 = (int8x16_t)vcgtq_f64((float64x2_t)v19, v26);
      v28 = vbslq_s8(v27, (int8x16_t)v26, v23);
      v29 = (float64x2_t)vbslq_s8(v27, (int8x16_t)v26, (int8x16_t)v19);
      v30 = *(float64x2_t *)(v25 + 56);
      v31 = (int8x16_t)vcgtq_f64(v29, v30);
      v23 = vbslq_s8(v31, (int8x16_t)v30, v28);
      v19 = (__n128)vbslq_s8(v31, (int8x16_t)v30, (int8x16_t)v29);
      v32 = (int8x16_t)vcgtq_f64(v26, (float64x2_t)v18);
      v33 = vbslq_s8(v32, (int8x16_t)v26, v24);
      v34 = (float64x2_t)vbslq_s8(v32, (int8x16_t)v26, (int8x16_t)v18);
      v35 = (int8x16_t)vcgtq_f64(v30, v34);
      v24 = vbslq_s8(v35, (int8x16_t)v30, v33);
      v18 = (__n128)vbslq_s8(v35, (int8x16_t)v30, (int8x16_t)v34);
    }
    while (v22 != v56);
    v53 = v23;
    v54 = v24;
    if (a3 > 0x63 || ((char *)v56 - (_BYTE *)__p) >> 3 < a4)
    {
      while (1)
      {
        v37 = (__int128 **)(v21 + 1);
        if (v21 + 1 != (double **)v20)
          break;
LABEL_13:
        ++v21;
        if (v37 == v20)
          goto LABEL_8;
      }
      v20 = (__int128 **)(v21 + 1);
      while ((sub_1002B711C(a5, *v21, *v20, 1) & 1) != 0)
      {
        if (++v20 == v56)
          goto LABEL_13;
      }
      goto LABEL_41;
    }
    if (!sub_1002B6C08(&v53, &__p, a3 + 1, a4, a5, a6, a7, a8, v18, v19))
      goto LABEL_41;
    v20 = v56;
LABEL_8:
    v36 = (double **)__p;
    if (a4 > ((char *)v20 - (_BYTE *)__p) >> 3 || a3 > 0x63 || ((char *)v62 - (_BYTE *)v61) >> 3 < a4)
    {
      if (__p != v20)
      {
        v38 = v62;
        if (v61 != v62)
        {
          while (1)
          {
            v41 = (__int128 **)v61;
            if (v61 != v38)
              break;
LABEL_25:
            if (++v36 == (double **)v20)
              goto LABEL_21;
          }
          while ((sub_1002B711C(a5, *v36, *v41, 1) & 1) != 0)
          {
            if (++v41 == v62)
            {
              v20 = v56;
              v38 = v41;
              goto LABEL_25;
            }
          }
          goto LABEL_41;
        }
      }
    }
    else
    {
      if (!sub_1002B8080((double *)v53.i64, (double ***)&__p, (double ***)&v61, a3 + 1, a4, a5, a6, a7, a6, a7, a8))goto LABEL_41;
      v20 = v56;
    }
LABEL_21:
    v39 = (double **)__p;
    if (a4 <= ((char *)v20 - (_BYTE *)__p) >> 3 && a3 <= 0x63 && ((char *)v59 - (_BYTE *)v58) >> 3 >= a4)
    {
      if ((sub_1002B8080((double *)v53.i64, (double ***)&__p, (double ***)&v58, a3 + 1, a4, a5, a6, a7, a6, a7, a8) & 1) != 0)
        goto LABEL_38;
LABEL_41:
      v45 = 0;
      goto LABEL_42;
    }
    if (__p != v20)
    {
      v40 = v59;
      if (v58 != v59)
      {
        while (1)
        {
          v42 = (__int128 **)v58;
          if (v58 != v40)
            break;
LABEL_30:
          if (++v39 == (double **)v20)
            goto LABEL_38;
        }
        while ((sub_1002B711C(a5, *v39, *v42, 1) & 1) != 0)
        {
          if (++v42 == v59)
          {
            v20 = v56;
            v40 = v42;
            goto LABEL_30;
          }
        }
        goto LABEL_41;
      }
    }
  }
LABEL_38:
  v44 = (double **)v61;
  v43 = v62;
  if (a3 > 0x63 || ((char *)v62 - (_BYTE *)v61) >> 3 < a4)
  {
LABEL_52:
    while (v44 != (double **)v43)
    {
      v47 = v44++;
      v48 = (__int128 **)v44;
      if (v44 != (double **)v43)
      {
        while ((sub_1002B711C(a5, *v47, *v48, 1) & 1) != 0)
        {
          v43 = v48 + 1;
          v48 = v43;
          if (v43 == v62)
            goto LABEL_52;
        }
        goto LABEL_41;
      }
    }
  }
  else if (!sub_1002B6C08(&v66, &v61, a3 + 1, a4, a5, a6, a7, a8, v18, v19))
  {
    goto LABEL_41;
  }
  v50 = (double **)v58;
  v49 = v59;
  if (a3 > 0x63 || ((char *)v59 - (_BYTE *)v58) >> 3 < a4)
  {
    if (v58 != v59)
    {
      while (1)
      {
        v51 = v50++;
        v52 = (__int128 **)v50;
        if (v50 != (double **)v49)
          break;
LABEL_58:
        v45 = 1;
        if (v50 == (double **)v49)
          goto LABEL_42;
      }
      while ((sub_1002B711C(a5, *v51, *v52, 1) & 1) != 0)
      {
        v49 = v52 + 1;
        v52 = v49;
        if (v49 == v59)
          goto LABEL_58;
      }
      goto LABEL_41;
    }
    v45 = 1;
  }
  else
  {
    v45 = sub_1002B6C08(v64, &v58, a3 + 1, a4, a5, a6, a7, a8, v18, v19);
  }
LABEL_42:
  if (__p)
  {
    v56 = (__int128 **)__p;
    operator delete(__p);
  }
  if (v58)
  {
    v59 = (__int128 **)v58;
    operator delete(v58);
  }
  if (v61)
  {
    v62 = (__int128 **)v61;
    operator delete(v61);
  }
  return v45;
}

void sub_1002B8014(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25)
{
  void *v26;
  void *v27;

  if (__p)
  {
    operator delete(__p);
    v26 = a21;
    if (!a21)
    {
LABEL_3:
      v27 = a24;
      if (!a24)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v26 = a21;
    if (!a21)
      goto LABEL_3;
  }
  operator delete(v26);
  v27 = a24;
  if (!a24)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v27);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B8080(double *a1, double ***a2, double ***a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double v17;
  __int128 v18;
  double **v19;
  double **v20;
  __int128 **v21;
  __int128 **v22;
  __int128 **v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double *v32;
  double *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  __int128 **v48;
  double **v49;
  double **v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double *v59;
  double *v60;
  double v61;
  double v62;
  double v63;
  double v64;
  __int128 **v65;
  __int128 **v66;
  __int128 **v67;
  __int128 **v68;
  __int128 **v69;
  double **v70;
  double **v71;
  float64x2_t v72;
  float64x2_t v73;
  int8x16_t v74;
  int8x16_t v75;
  uint64_t v76;
  float64x2_t v77;
  int8x16_t v78;
  int8x16_t v79;
  float64x2_t v80;
  float64x2_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int8x16_t v84;
  float64x2_t v85;
  int8x16_t v86;
  __int128 **v87;
  double **v88;
  double **v89;
  double **v91;
  double **v92;
  __int128 **v93;
  __int128 **v94;
  double **v95;
  double **v96;
  __int128 **v97;
  __int128 **v98;
  __int128 **v99;
  uint64_t v100;
  __int128 **v101;
  int8x16_t v103;
  int8x16_t v104;
  void *__p;
  __int128 **v106;
  uint64_t v107;
  void *v108;
  __int128 **v109;
  uint64_t v110;
  void *v111;
  __int128 **v112;
  uint64_t v113;
  void *v114;
  double **v115;
  uint64_t v116;
  void *v117;
  double **v118;
  uint64_t v119;
  void *v120;
  double **v121;
  uint64_t v122;
  double v123[2];
  __int128 v124;
  __int128 v125;
  double v126;
  uint64_t v127;

  v17 = (*a1 + a1[2]) * 0.5;
  v18 = *((_OWORD *)a1 + 1);
  v125 = *(_OWORD *)a1;
  v127 = *((_QWORD *)&v18 + 1);
  v123[1] = *((double *)&v125 + 1);
  v124 = v18;
  v126 = v17;
  v123[0] = v17;
  v120 = 0;
  v121 = 0;
  v122 = 0;
  v117 = 0;
  v118 = 0;
  v119 = 0;
  v114 = 0;
  v115 = 0;
  v116 = 0;
  v111 = 0;
  v112 = 0;
  v113 = 0;
  v108 = 0;
  v109 = 0;
  v110 = 0;
  __p = 0;
  v106 = 0;
  v107 = 0;
  sub_1002B763C((double *)&v125, v123, a2, (double ***)&v120, &v117, &v114);
  sub_1002B763C((double *)&v125, v123, a3, (double ***)&v111, &v108, &__p);
  v20 = (double **)v114;
  v19 = v115;
  if (v114 == v115)
    goto LABEL_95;
  v22 = (__int128 **)__p;
  v21 = v106;
  if (a5 > ((char *)v115 - (_BYTE *)v114) >> 3 || a4 > 0x63 || ((char *)v106 - (_BYTE *)__p) >> 3 < a5)
  {
    if (__p != v106)
    {
      while (1)
      {
        v23 = (__int128 **)__p;
        if (__p != v21)
          break;
LABEL_5:
        if (++v20 == v19)
          goto LABEL_50;
      }
      while ((sub_1002B711C(a6, *v20, *v23, 1) & 1) != 0)
      {
        if (++v23 == v106)
        {
          v19 = v115;
          v21 = v23;
          goto LABEL_5;
        }
      }
      goto LABEL_147;
    }
  }
  else
  {
    v24 = 1.79769313e308;
    v25 = -1.79769313e308;
    v26 = -1.79769313e308;
    v27 = 1.79769313e308;
    v103 = 0u;
    v104 = 0u;
    v28 = -1.79769313e308;
    v29 = 1.79769313e308;
    v30 = -1.79769313e308;
    v31 = 1.79769313e308;
    do
    {
      v33 = *v20++;
      v32 = v33;
      v34 = v33[5];
      v35 = v33[6];
      if (v34 < v31)
      {
        v27 = v34;
        v31 = v34;
      }
      if (v34 > v30)
      {
        v26 = v34;
        v30 = v34;
      }
      if (v35 < v29)
      {
        v24 = v35;
        v29 = v35;
      }
      if (v35 > v28)
      {
        v25 = v35;
        v28 = v35;
      }
      v36 = v32[7];
      v37 = v32[8];
      if (v36 < v31)
      {
        v27 = v32[7];
        v31 = v27;
      }
      if (v36 > v30)
      {
        v26 = v32[7];
        v30 = v26;
      }
      if (v37 < v29)
      {
        v24 = v32[8];
        v29 = v24;
      }
      if (v37 > v28)
      {
        v25 = v32[8];
        v28 = v25;
      }
    }
    while (v20 != v115);
    if (__p != v106)
    {
      v38 = v25;
      v39 = v24;
      v40 = v26;
      v41 = v27;
      do
      {
        v43 = (uint64_t)*v22++;
        v42 = v43;
        v44 = *(double *)(v43 + 40);
        v45 = *(double *)(v43 + 48);
        if (v44 < v41)
        {
          v27 = v44;
          v41 = v44;
        }
        if (v44 > v40)
        {
          v26 = v44;
          v40 = v44;
        }
        if (v45 < v39)
        {
          v24 = v45;
          v39 = v45;
        }
        if (v45 > v38)
        {
          v25 = v45;
          v38 = v45;
        }
        v46 = *(double *)(v42 + 56);
        v47 = *(double *)(v42 + 64);
        if (v46 < v41)
        {
          v27 = *(double *)(v42 + 56);
          v41 = v27;
        }
        if (v46 > v40)
        {
          v26 = *(double *)(v42 + 56);
          v40 = v26;
        }
        if (v47 < v39)
        {
          v24 = *(double *)(v42 + 64);
          v39 = v24;
        }
        if (v47 > v38)
        {
          v25 = *(double *)(v42 + 64);
          v38 = v25;
        }
      }
      while (v22 != v106);
    }
    *(double *)v103.i64 = v27;
    *(double *)&v103.i64[1] = v24;
    *(double *)v104.i64 = v26;
    *(double *)&v104.i64[1] = v25;
    if ((sub_1002B8A34((uint64_t)&v103, (double ***)&v114, (double ***)&__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
      goto LABEL_147;
  }
LABEL_50:
  v48 = v112;
  if (a5 <= ((char *)v112 - (_BYTE *)v111) >> 3)
  {
    v50 = (double **)v114;
    v49 = v115;
    if (a5 <= ((char *)v109 - (_BYTE *)v108) >> 3 && a4 <= 0x63 && ((char *)v115 - (_BYTE *)v114) >> 3 >= a5)
    {
      v103 = 0u;
      v104 = 0u;
      if (v114 == v115)
      {
        v51 = 1.79769313e308;
        v52 = -1.79769313e308;
        v53 = -1.79769313e308;
        v54 = 1.79769313e308;
      }
      else
      {
        v51 = 1.79769313e308;
        v52 = -1.79769313e308;
        v53 = -1.79769313e308;
        v54 = 1.79769313e308;
        v55 = -1.79769313e308;
        v56 = 1.79769313e308;
        v57 = -1.79769313e308;
        v58 = 1.79769313e308;
        do
        {
          v60 = *v50++;
          v59 = v60;
          v61 = v60[5];
          v62 = v60[6];
          if (v61 < v58)
          {
            v54 = v61;
            v58 = v61;
          }
          if (v61 > v57)
          {
            v53 = v61;
            v57 = v61;
          }
          if (v62 < v56)
          {
            v51 = v62;
            v56 = v62;
          }
          if (v62 > v55)
          {
            v52 = v62;
            v55 = v62;
          }
          v63 = v59[7];
          v64 = v59[8];
          if (v63 < v58)
          {
            v54 = v59[7];
            v58 = v54;
          }
          if (v63 > v57)
          {
            v53 = v59[7];
            v57 = v53;
          }
          if (v64 < v56)
          {
            v51 = v59[8];
            v56 = v51;
          }
          if (v64 > v55)
          {
            v52 = v59[8];
            v55 = v52;
          }
        }
        while (v50 != v115);
      }
      *(double *)v103.i64 = v54;
      *(double *)&v103.i64[1] = v51;
      *(double *)v104.i64 = v53;
      *(double *)&v104.i64[1] = v52;
      if (!sub_1002B8A34((uint64_t)&v103, (double ***)&v114, (double ***)&v111, a4 + 1, a5, a6, a7, a8, a9, a10, a11)|| (sub_1002B8A34((uint64_t)&v103, (double ***)&v114, (double ***)&v108, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
      {
        goto LABEL_147;
      }
      goto LABEL_95;
    }
  }
  else
  {
    v50 = (double **)v114;
    v49 = v115;
  }
  if (v111 == v112 || v50 == v49)
  {
    if (v50 != v49)
    {
LABEL_78:
      v65 = v109;
      if (v108 != v109)
      {
        while (1)
        {
          v67 = (__int128 **)v108;
          if (v108 != v65)
            break;
LABEL_85:
          if (++v50 == v49)
            goto LABEL_95;
        }
        while ((sub_1002B711C(a6, *v50, *v67, 1) & 1) != 0)
        {
          if (++v67 == v109)
          {
            v49 = v115;
            v65 = v67;
            goto LABEL_85;
          }
        }
        goto LABEL_147;
      }
    }
  }
  else
  {
    do
    {
      v66 = (__int128 **)v111;
      if (v111 != v48)
      {
        while ((sub_1002B711C(a6, *v50, *v66, 1) & 1) != 0)
        {
          if (++v66 == v112)
          {
            v49 = v115;
            v48 = v66;
            goto LABEL_80;
          }
        }
        goto LABEL_147;
      }
LABEL_80:
      ++v50;
    }
    while (v50 != v49);
    v50 = (double **)v114;
    if (v114 != v49)
      goto LABEL_78;
  }
LABEL_95:
  v69 = (__int128 **)__p;
  v68 = v106;
  if (__p != v106)
  {
    v71 = (double **)v120;
    v70 = v121;
    if (a5 > ((char *)v121 - (_BYTE *)v120) >> 3
      || a5 > ((char *)v118 - (_BYTE *)v117) >> 3
      || a4 > 0x63
      || ((char *)v106 - (_BYTE *)__p) >> 3 < a5)
    {
      while (v71 != v70)
      {
        v87 = (__int128 **)__p;
        if (__p != v68)
        {
          while ((sub_1002B711C(a6, *v71, *v87, 1) & 1) != 0)
          {
            if (++v87 == v106)
            {
              v70 = v121;
              v68 = v87;
              goto LABEL_105;
            }
          }
          goto LABEL_147;
        }
LABEL_105:
        ++v71;
      }
      v89 = (double **)v117;
      v88 = v118;
      if (v117 == v118 || __p == v68)
        goto LABEL_116;
      while (1)
      {
        v98 = (__int128 **)__p;
        if (__p != v68)
          break;
LABEL_132:
        if (++v89 == v88)
          goto LABEL_116;
      }
      while ((sub_1002B711C(a6, *v89, *v98, 1) & 1) != 0)
      {
        if (++v98 == v106)
        {
          v88 = v118;
          v68 = v98;
          goto LABEL_132;
        }
      }
      goto LABEL_147;
    }
    v72 = (float64x2_t)vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
    v103 = 0u;
    v104 = 0u;
    v73 = (float64x2_t)vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
    v74 = (int8x16_t)v73;
    v75 = (int8x16_t)v72;
    do
    {
      v76 = (uint64_t)*v69++;
      v77 = *(float64x2_t *)(v76 + 40);
      v78 = (int8x16_t)vcgtq_f64(v73, v77);
      v79 = vbslq_s8(v78, (int8x16_t)v77, v74);
      v80 = (float64x2_t)vbslq_s8(v78, (int8x16_t)v77, (int8x16_t)v73);
      v81 = *(float64x2_t *)(v76 + 56);
      v82 = (int8x16_t)vcgtq_f64(v80, v81);
      v74 = vbslq_s8(v82, (int8x16_t)v81, v79);
      v73 = (float64x2_t)vbslq_s8(v82, (int8x16_t)v81, (int8x16_t)v80);
      v83 = (int8x16_t)vcgtq_f64(v77, v72);
      v84 = vbslq_s8(v83, (int8x16_t)v77, v75);
      v85 = (float64x2_t)vbslq_s8(v83, (int8x16_t)v77, (int8x16_t)v72);
      v86 = (int8x16_t)vcgtq_f64(v81, v85);
      v75 = vbslq_s8(v86, (int8x16_t)v81, v84);
      v72 = (float64x2_t)vbslq_s8(v86, (int8x16_t)v81, (int8x16_t)v85);
    }
    while (v69 != v106);
    v103 = v74;
    v104 = v75;
    if (!sub_1002B8A34((uint64_t)&v103, (double ***)&v120, (double ***)&__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11)|| (sub_1002B8A34((uint64_t)&v103, (double ***)&v117, (double ***)&__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
    {
      goto LABEL_147;
    }
  }
LABEL_116:
  v92 = (double **)v120;
  v91 = v121;
  if (a5 > ((char *)v121 - (_BYTE *)v120) >> 3 || a4 > 0x63 || ((char *)v112 - (_BYTE *)v111) >> 3 < a5)
  {
    if (v120 != v121)
    {
      v93 = v112;
      if (v111 != v112)
      {
        while (1)
        {
          v94 = (__int128 **)v111;
          if (v111 != v93)
            break;
LABEL_120:
          if (++v92 == v91)
            goto LABEL_128;
        }
        while ((sub_1002B711C(a6, *v92, *v94, 1) & 1) != 0)
        {
          if (++v94 == v112)
          {
            v91 = v121;
            v93 = v94;
            goto LABEL_120;
          }
        }
        goto LABEL_147;
      }
    }
  }
  else if ((sub_1002B8A34((uint64_t)&v125, (double ***)&v120, (double ***)&v111, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_147;
  }
LABEL_128:
  v96 = (double **)v117;
  v95 = v118;
  if (a5 <= ((char *)v118 - (_BYTE *)v117) >> 3 && a4 <= 0x63 && ((char *)v109 - (_BYTE *)v108) >> 3 >= a5)
  {
    if ((sub_1002B8A34((uint64_t)v123, (double ***)&v117, (double ***)&v108, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) != 0)
      goto LABEL_145;
LABEL_147:
    v100 = 0;
    v101 = (__int128 **)__p;
    if (!__p)
      goto LABEL_149;
    goto LABEL_148;
  }
  if (v117 != v118)
  {
    v97 = v109;
    if (v108 != v109)
    {
      while (1)
      {
        v99 = (__int128 **)v108;
        if (v108 != v97)
          break;
LABEL_137:
        if (++v96 == v95)
          goto LABEL_145;
      }
      while ((sub_1002B711C(a6, *v96, *v99, 1) & 1) != 0)
      {
        if (++v99 == v109)
        {
          v95 = v118;
          v97 = v99;
          goto LABEL_137;
        }
      }
      goto LABEL_147;
    }
  }
LABEL_145:
  v100 = 1;
  v101 = (__int128 **)__p;
  if (__p)
  {
LABEL_148:
    v106 = v101;
    operator delete(v101);
  }
LABEL_149:
  if (v108)
  {
    v109 = (__int128 **)v108;
    operator delete(v108);
  }
  if (v111)
  {
    v112 = (__int128 **)v111;
    operator delete(v111);
  }
  if (v114)
  {
    v115 = (double **)v114;
    operator delete(v114);
  }
  if (v117)
  {
    v118 = (double **)v117;
    operator delete(v117);
  }
  if (v120)
  {
    v121 = (double **)v120;
    operator delete(v120);
  }
  return v100;
}

void sub_1002B8970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;

  if (__p)
  {
    operator delete(__p);
    v34 = a20;
    if (!a20)
    {
LABEL_3:
      v35 = a23;
      if (!a23)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else
  {
    v34 = a20;
    if (!a20)
      goto LABEL_3;
  }
  operator delete(v34);
  v35 = a23;
  if (!a23)
  {
LABEL_4:
    v36 = a26;
    if (!a26)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(v35);
  v36 = a26;
  if (!a26)
  {
LABEL_5:
    v37 = a29;
    if (!a29)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v36);
  v37 = a29;
  if (!a29)
  {
LABEL_6:
    v38 = a32;
    if (!a32)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v37);
  v38 = a32;
  if (!a32)
LABEL_7:
    _Unwind_Resume(exception_object);
LABEL_13:
  operator delete(v38);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B8A34(uint64_t a1, double ***a2, double ***a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double v17;
  __int128 v18;
  double **v19;
  double **v20;
  __int128 **v21;
  __int128 **v22;
  __int128 **v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double *v32;
  double *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  __int128 **v48;
  double **v49;
  double **v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double *v59;
  double *v60;
  double v61;
  double v62;
  double v63;
  double v64;
  __int128 **v65;
  __int128 **v66;
  __int128 **v67;
  __int128 **v68;
  __int128 **v69;
  double **v70;
  double **v71;
  float64x2_t v72;
  float64x2_t v73;
  int8x16_t v74;
  int8x16_t v75;
  uint64_t v76;
  float64x2_t v77;
  int8x16_t v78;
  int8x16_t v79;
  float64x2_t v80;
  float64x2_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int8x16_t v84;
  float64x2_t v85;
  int8x16_t v86;
  __int128 **v87;
  double **v88;
  double **v89;
  double **v91;
  double **v92;
  __int128 **v93;
  __int128 **v94;
  double **v95;
  double **v96;
  __int128 **v97;
  __int128 **v98;
  __int128 **v99;
  uint64_t v100;
  __int128 **v101;
  int8x16_t v103;
  int8x16_t v104;
  void *__p;
  __int128 **v106;
  uint64_t v107;
  void *v108;
  __int128 **v109;
  uint64_t v110;
  void *v111;
  __int128 **v112;
  uint64_t v113;
  void *v114;
  double **v115;
  uint64_t v116;
  void *v117;
  double **v118;
  uint64_t v119;
  void *v120;
  double **v121;
  uint64_t v122;
  _OWORD v123[2];
  __int128 v124;
  uint64_t v125;
  double v126;

  v17 = (*(double *)(a1 + 8) + *(double *)(a1 + 24)) * 0.5;
  v125 = *(_QWORD *)(a1 + 16);
  v18 = *(_OWORD *)(a1 + 16);
  v123[0] = *(_OWORD *)a1;
  v123[1] = v18;
  v124 = v123[0];
  v126 = v17;
  *((double *)v123 + 1) = v17;
  v120 = 0;
  v121 = 0;
  v122 = 0;
  v117 = 0;
  v118 = 0;
  v119 = 0;
  v114 = 0;
  v115 = 0;
  v116 = 0;
  v111 = 0;
  v112 = 0;
  v113 = 0;
  v108 = 0;
  v109 = 0;
  v110 = 0;
  __p = 0;
  v106 = 0;
  v107 = 0;
  sub_1002B763C((double *)&v124, (double *)v123, a2, (double ***)&v120, &v117, &v114);
  sub_1002B763C((double *)&v124, (double *)v123, a3, (double ***)&v111, &v108, &__p);
  v20 = (double **)v114;
  v19 = v115;
  if (v114 == v115)
    goto LABEL_95;
  v22 = (__int128 **)__p;
  v21 = v106;
  if (a5 > ((char *)v115 - (_BYTE *)v114) >> 3 || a4 > 0x63 || ((char *)v106 - (_BYTE *)__p) >> 3 < a5)
  {
    if (__p != v106)
    {
      while (1)
      {
        v23 = (__int128 **)__p;
        if (__p != v21)
          break;
LABEL_5:
        if (++v20 == v19)
          goto LABEL_50;
      }
      while ((sub_1002B711C(a6, *v20, *v23, 1) & 1) != 0)
      {
        if (++v23 == v106)
        {
          v19 = v115;
          v21 = v23;
          goto LABEL_5;
        }
      }
      goto LABEL_147;
    }
  }
  else
  {
    v24 = 1.79769313e308;
    v25 = -1.79769313e308;
    v26 = -1.79769313e308;
    v27 = 1.79769313e308;
    v103 = 0u;
    v104 = 0u;
    v28 = -1.79769313e308;
    v29 = 1.79769313e308;
    v30 = -1.79769313e308;
    v31 = 1.79769313e308;
    do
    {
      v33 = *v20++;
      v32 = v33;
      v34 = v33[5];
      v35 = v33[6];
      if (v34 < v31)
      {
        v27 = v34;
        v31 = v34;
      }
      if (v34 > v30)
      {
        v26 = v34;
        v30 = v34;
      }
      if (v35 < v29)
      {
        v24 = v35;
        v29 = v35;
      }
      if (v35 > v28)
      {
        v25 = v35;
        v28 = v35;
      }
      v36 = v32[7];
      v37 = v32[8];
      if (v36 < v31)
      {
        v27 = v32[7];
        v31 = v27;
      }
      if (v36 > v30)
      {
        v26 = v32[7];
        v30 = v26;
      }
      if (v37 < v29)
      {
        v24 = v32[8];
        v29 = v24;
      }
      if (v37 > v28)
      {
        v25 = v32[8];
        v28 = v25;
      }
    }
    while (v20 != v115);
    if (__p != v106)
    {
      v38 = v25;
      v39 = v24;
      v40 = v26;
      v41 = v27;
      do
      {
        v43 = (uint64_t)*v22++;
        v42 = v43;
        v44 = *(double *)(v43 + 40);
        v45 = *(double *)(v43 + 48);
        if (v44 < v41)
        {
          v27 = v44;
          v41 = v44;
        }
        if (v44 > v40)
        {
          v26 = v44;
          v40 = v44;
        }
        if (v45 < v39)
        {
          v24 = v45;
          v39 = v45;
        }
        if (v45 > v38)
        {
          v25 = v45;
          v38 = v45;
        }
        v46 = *(double *)(v42 + 56);
        v47 = *(double *)(v42 + 64);
        if (v46 < v41)
        {
          v27 = *(double *)(v42 + 56);
          v41 = v27;
        }
        if (v46 > v40)
        {
          v26 = *(double *)(v42 + 56);
          v40 = v26;
        }
        if (v47 < v39)
        {
          v24 = *(double *)(v42 + 64);
          v39 = v24;
        }
        if (v47 > v38)
        {
          v25 = *(double *)(v42 + 64);
          v38 = v25;
        }
      }
      while (v22 != v106);
    }
    *(double *)v103.i64 = v27;
    *(double *)&v103.i64[1] = v24;
    *(double *)v104.i64 = v26;
    *(double *)&v104.i64[1] = v25;
    if ((sub_1002B8080(&v103, &v114, &__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
      goto LABEL_147;
  }
LABEL_50:
  v48 = v112;
  if (a5 <= ((char *)v112 - (_BYTE *)v111) >> 3)
  {
    v50 = (double **)v114;
    v49 = v115;
    if (a5 <= ((char *)v109 - (_BYTE *)v108) >> 3 && a4 <= 0x63 && ((char *)v115 - (_BYTE *)v114) >> 3 >= a5)
    {
      v103 = 0u;
      v104 = 0u;
      if (v114 == v115)
      {
        v51 = 1.79769313e308;
        v52 = -1.79769313e308;
        v53 = -1.79769313e308;
        v54 = 1.79769313e308;
      }
      else
      {
        v51 = 1.79769313e308;
        v52 = -1.79769313e308;
        v53 = -1.79769313e308;
        v54 = 1.79769313e308;
        v55 = -1.79769313e308;
        v56 = 1.79769313e308;
        v57 = -1.79769313e308;
        v58 = 1.79769313e308;
        do
        {
          v60 = *v50++;
          v59 = v60;
          v61 = v60[5];
          v62 = v60[6];
          if (v61 < v58)
          {
            v54 = v61;
            v58 = v61;
          }
          if (v61 > v57)
          {
            v53 = v61;
            v57 = v61;
          }
          if (v62 < v56)
          {
            v51 = v62;
            v56 = v62;
          }
          if (v62 > v55)
          {
            v52 = v62;
            v55 = v62;
          }
          v63 = v59[7];
          v64 = v59[8];
          if (v63 < v58)
          {
            v54 = v59[7];
            v58 = v54;
          }
          if (v63 > v57)
          {
            v53 = v59[7];
            v57 = v53;
          }
          if (v64 < v56)
          {
            v51 = v59[8];
            v56 = v51;
          }
          if (v64 > v55)
          {
            v52 = v59[8];
            v55 = v52;
          }
        }
        while (v50 != v115);
      }
      *(double *)v103.i64 = v54;
      *(double *)&v103.i64[1] = v51;
      *(double *)v104.i64 = v53;
      *(double *)&v104.i64[1] = v52;
      if (!sub_1002B8080(&v103, &v114, &v111, a4 + 1, a5, a6, a7, a8, a9, a10, a11)
        || (sub_1002B8080(&v103, &v114, &v108, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
      {
        goto LABEL_147;
      }
      goto LABEL_95;
    }
  }
  else
  {
    v50 = (double **)v114;
    v49 = v115;
  }
  if (v111 == v112 || v50 == v49)
  {
    if (v50 != v49)
    {
LABEL_78:
      v65 = v109;
      if (v108 != v109)
      {
        while (1)
        {
          v67 = (__int128 **)v108;
          if (v108 != v65)
            break;
LABEL_85:
          if (++v50 == v49)
            goto LABEL_95;
        }
        while ((sub_1002B711C(a6, *v50, *v67, 1) & 1) != 0)
        {
          if (++v67 == v109)
          {
            v49 = v115;
            v65 = v67;
            goto LABEL_85;
          }
        }
        goto LABEL_147;
      }
    }
  }
  else
  {
    do
    {
      v66 = (__int128 **)v111;
      if (v111 != v48)
      {
        while ((sub_1002B711C(a6, *v50, *v66, 1) & 1) != 0)
        {
          if (++v66 == v112)
          {
            v49 = v115;
            v48 = v66;
            goto LABEL_80;
          }
        }
        goto LABEL_147;
      }
LABEL_80:
      ++v50;
    }
    while (v50 != v49);
    v50 = (double **)v114;
    if (v114 != v49)
      goto LABEL_78;
  }
LABEL_95:
  v69 = (__int128 **)__p;
  v68 = v106;
  if (__p != v106)
  {
    v71 = (double **)v120;
    v70 = v121;
    if (a5 > ((char *)v121 - (_BYTE *)v120) >> 3
      || a5 > ((char *)v118 - (_BYTE *)v117) >> 3
      || a4 > 0x63
      || ((char *)v106 - (_BYTE *)__p) >> 3 < a5)
    {
      while (v71 != v70)
      {
        v87 = (__int128 **)__p;
        if (__p != v68)
        {
          while ((sub_1002B711C(a6, *v71, *v87, 1) & 1) != 0)
          {
            if (++v87 == v106)
            {
              v70 = v121;
              v68 = v87;
              goto LABEL_105;
            }
          }
          goto LABEL_147;
        }
LABEL_105:
        ++v71;
      }
      v89 = (double **)v117;
      v88 = v118;
      if (v117 == v118 || __p == v68)
        goto LABEL_116;
      while (1)
      {
        v98 = (__int128 **)__p;
        if (__p != v68)
          break;
LABEL_132:
        if (++v89 == v88)
          goto LABEL_116;
      }
      while ((sub_1002B711C(a6, *v89, *v98, 1) & 1) != 0)
      {
        if (++v98 == v106)
        {
          v88 = v118;
          v68 = v98;
          goto LABEL_132;
        }
      }
      goto LABEL_147;
    }
    v72 = (float64x2_t)vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
    v103 = 0u;
    v104 = 0u;
    v73 = (float64x2_t)vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
    v74 = (int8x16_t)v73;
    v75 = (int8x16_t)v72;
    do
    {
      v76 = (uint64_t)*v69++;
      v77 = *(float64x2_t *)(v76 + 40);
      v78 = (int8x16_t)vcgtq_f64(v73, v77);
      v79 = vbslq_s8(v78, (int8x16_t)v77, v74);
      v80 = (float64x2_t)vbslq_s8(v78, (int8x16_t)v77, (int8x16_t)v73);
      v81 = *(float64x2_t *)(v76 + 56);
      v82 = (int8x16_t)vcgtq_f64(v80, v81);
      v74 = vbslq_s8(v82, (int8x16_t)v81, v79);
      v73 = (float64x2_t)vbslq_s8(v82, (int8x16_t)v81, (int8x16_t)v80);
      v83 = (int8x16_t)vcgtq_f64(v77, v72);
      v84 = vbslq_s8(v83, (int8x16_t)v77, v75);
      v85 = (float64x2_t)vbslq_s8(v83, (int8x16_t)v77, (int8x16_t)v72);
      v86 = (int8x16_t)vcgtq_f64(v81, v85);
      v75 = vbslq_s8(v86, (int8x16_t)v81, v84);
      v72 = (float64x2_t)vbslq_s8(v86, (int8x16_t)v81, (int8x16_t)v85);
    }
    while (v69 != v106);
    v103 = v74;
    v104 = v75;
    if (!sub_1002B8080(&v103, &v120, &__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11)
      || (sub_1002B8080(&v103, &v117, &__p, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
    {
      goto LABEL_147;
    }
  }
LABEL_116:
  v92 = (double **)v120;
  v91 = v121;
  if (a5 > ((char *)v121 - (_BYTE *)v120) >> 3 || a4 > 0x63 || ((char *)v112 - (_BYTE *)v111) >> 3 < a5)
  {
    if (v120 != v121)
    {
      v93 = v112;
      if (v111 != v112)
      {
        while (1)
        {
          v94 = (__int128 **)v111;
          if (v111 != v93)
            break;
LABEL_120:
          if (++v92 == v91)
            goto LABEL_128;
        }
        while ((sub_1002B711C(a6, *v92, *v94, 1) & 1) != 0)
        {
          if (++v94 == v112)
          {
            v91 = v121;
            v93 = v94;
            goto LABEL_120;
          }
        }
        goto LABEL_147;
      }
    }
  }
  else if ((sub_1002B8080(&v124, &v120, &v111, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_147;
  }
LABEL_128:
  v96 = (double **)v117;
  v95 = v118;
  if (a5 <= ((char *)v118 - (_BYTE *)v117) >> 3 && a4 <= 0x63 && ((char *)v109 - (_BYTE *)v108) >> 3 >= a5)
  {
    if ((sub_1002B8080(v123, &v117, &v108, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) != 0)
      goto LABEL_145;
LABEL_147:
    v100 = 0;
    v101 = (__int128 **)__p;
    if (!__p)
      goto LABEL_149;
    goto LABEL_148;
  }
  if (v117 != v118)
  {
    v97 = v109;
    if (v108 != v109)
    {
      while (1)
      {
        v99 = (__int128 **)v108;
        if (v108 != v97)
          break;
LABEL_137:
        if (++v96 == v95)
          goto LABEL_145;
      }
      while ((sub_1002B711C(a6, *v96, *v99, 1) & 1) != 0)
      {
        if (++v99 == v109)
        {
          v95 = v118;
          v97 = v99;
          goto LABEL_137;
        }
      }
      goto LABEL_147;
    }
  }
LABEL_145:
  v100 = 1;
  v101 = (__int128 **)__p;
  if (__p)
  {
LABEL_148:
    v106 = v101;
    operator delete(v101);
  }
LABEL_149:
  if (v108)
  {
    v109 = (__int128 **)v108;
    operator delete(v108);
  }
  if (v111)
  {
    v112 = (__int128 **)v111;
    operator delete(v111);
  }
  if (v114)
  {
    v115 = (double **)v114;
    operator delete(v114);
  }
  if (v117)
  {
    v118 = (double **)v117;
    operator delete(v117);
  }
  if (v120)
  {
    v121 = (double **)v120;
    operator delete(v120);
  }
  return v100;
}

void sub_1002B932C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;

  if (__p)
  {
    operator delete(__p);
    v34 = a20;
    if (!a20)
    {
LABEL_3:
      v35 = a23;
      if (!a23)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else
  {
    v34 = a20;
    if (!a20)
      goto LABEL_3;
  }
  operator delete(v34);
  v35 = a23;
  if (!a23)
  {
LABEL_4:
    v36 = a26;
    if (!a26)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(v35);
  v36 = a26;
  if (!a26)
  {
LABEL_5:
    v37 = a29;
    if (!a29)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v36);
  v37 = a29;
  if (!a29)
  {
LABEL_6:
    v38 = a32;
    if (!a32)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v37);
  v38 = a32;
  if (!a32)
LABEL_7:
    _Unwind_Resume(exception_object);
LABEL_13:
  operator delete(v38);
  _Unwind_Resume(exception_object);
}

BOOL sub_1002B93F0(uint64_t a1, double **a2, uint64_t *a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double *v11;
  double *v12;
  double *v13;
  int v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  double *v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  double *v31;
  double *v32;
  double *v33;
  double *v34;
  double *v35;
  double *v36;
  double *v37;
  double *v38;
  double *v39;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  double *v45;
  double *v46;
  double *v47;
  double *v48;
  double *v49;
  double *v50;
  double *v51;
  double *v52;
  int v53;
  char v54;

  v7 = *a3;
  if (*a3 == 2)
  {
    v21 = a3[1];
    v22 = a6[4];
    v23 = a6[1];
    v24 = (_QWORD *)(v23 + 8 * (v22 / 0xAA));
    if (a6[2] == v23)
    {
      v25 = 0;
      if (!v21)
      {
LABEL_27:
        v26 = *(double **)v25;
        v27 = *(double **)(v25 + 8);
        if ((unint64_t)v27 - *(_QWORD *)v25 < 0x40)
          goto LABEL_73;
LABEL_56:
        v53 = 0;
        v54 = 0;
        if (v26 + 2 != v27)
        {
          v45 = (double *)(a1 + 8);
          do
          {
            if (!sub_10005B9D0(v45, v26, v26 + 2, (uint64_t)&v53))
              break;
            v46 = v26 + 4;
            v26 += 2;
          }
          while (v46 != v27);
          if (v53)
            v14 = 1;
          else
            v14 = -1;
          if (!v54)
            return v14 >= 0;
          v47 = *a2;
          v48 = a2[1];
          if (*a2 != v48)
          {
            v49 = v47 + 2;
            if (v47 + 2 != v48)
            {
              while (1)
              {
                v50 = *(double **)v25;
                v51 = *(double **)(v25 + 8);
                if ((unint64_t)v51 - *(_QWORD *)v25 < 0x40)
                  break;
                v53 = 0;
                v54 = 0;
                if (v50 + 2 == v51)
                  break;
                do
                {
                  if (!sub_10005B9D0(v49, v50, v50 + 2, (uint64_t)&v53))
                    break;
                  v52 = v50 + 4;
                  v50 += 2;
                }
                while (v52 != v51);
                if (!v54)
                {
LABEL_76:
                  if (v53)
                    v14 = 1;
                  else
                    v14 = -1;
                  return v14 >= 0;
                }
                v14 = 0;
                v49 += 2;
                if (v49 == v48)
                  return v14 >= 0;
              }
              goto LABEL_73;
            }
          }
          goto LABEL_75;
        }
        goto LABEL_73;
      }
    }
    else
    {
      v25 = *v24 + 24 * (v22 % 0xAA);
      if (!v21)
        goto LABEL_27;
    }
    v41 = v21 - 0x5555555555555555 * ((v25 - *v24) >> 3);
    if (v41 < 1)
    {
      v42 = 169 - v41;
      v43 = v24[-(v42 / 0xAA)];
      v44 = 170 * (v42 / 0xAA) - v42;
      v25 = v43 + 24 * v44 + 4056;
      v26 = *(double **)v25;
      v27 = *(double **)(v43 + 24 * v44 + 4064);
      if ((unint64_t)v27 - *(_QWORD *)v25 < 0x40)
        goto LABEL_73;
    }
    else
    {
      v25 = v24[v41 / 0xAAuLL] + 24 * (v41 % 0xAAuLL);
      v26 = *(double **)v25;
      v27 = *(double **)(v25 + 8);
      if ((unint64_t)v27 - *(_QWORD *)v25 < 0x40)
        goto LABEL_73;
    }
    goto LABEL_56;
  }
  if (v7 != 1)
  {
    if (v7)
      return 0;
    v8 = a3[2];
    if (v8 >= 0)
      v9 = *(_QWORD *)(a4 + 24) + 24 * v8;
    else
      v9 = a4;
    v10 = *(double **)v9;
    v11 = *(double **)(v9 + 8);
    if ((unint64_t)v11 - *(_QWORD *)v9 < 0x40)
      goto LABEL_73;
    v53 = 0;
    v54 = 0;
    if (v10 + 2 == v11)
      goto LABEL_73;
    v12 = (double *)(a1 + 8);
    do
    {
      if (!sub_10005B9D0(v12, v10, v10 + 2, (uint64_t)&v53))
        break;
      v13 = v10 + 4;
      v10 += 2;
    }
    while (v13 != v11);
    if (v53)
      v14 = 1;
    else
      v14 = -1;
    if (!v54)
      return v14 >= 0;
    v15 = *a2;
    v16 = a2[1];
    if (*a2 != v16)
    {
      v17 = v15 + 2;
      if (v15 + 2 != v16)
      {
        while (1)
        {
          v18 = *(double **)v9;
          v19 = *(double **)(v9 + 8);
          if ((unint64_t)v19 - *(_QWORD *)v9 < 0x40)
            goto LABEL_73;
          v53 = 0;
          v54 = 0;
          if (v18 + 2 == v19)
            goto LABEL_73;
          do
          {
            if (!sub_10005B9D0(v17, v18, v18 + 2, (uint64_t)&v53))
              break;
            v20 = v18 + 4;
            v18 += 2;
          }
          while (v20 != v19);
          if (!v54)
            goto LABEL_76;
          v14 = 0;
          v17 += 2;
          if (v17 == v16)
            return v14 >= 0;
        }
      }
    }
LABEL_75:
    v14 = 0;
    return v14 >= 0;
  }
  v28 = a3[2];
  if (v28 >= 0)
    v29 = *(_QWORD *)(a5 + 48 * a3[1] + 24) + 24 * v28;
  else
    v29 = a5 + 48 * a3[1];
  v30 = *(double **)v29;
  v31 = *(double **)(v29 + 8);
  if ((unint64_t)v31 - *(_QWORD *)v29 >= 0x40)
  {
    v53 = 0;
    v54 = 0;
    if (v30 + 2 != v31)
    {
      v32 = (double *)(a1 + 8);
      do
      {
        if (!sub_10005B9D0(v32, v30, v30 + 2, (uint64_t)&v53))
          break;
        v33 = v30 + 4;
        v30 += 2;
      }
      while (v33 != v31);
      if (v53)
        v14 = 1;
      else
        v14 = -1;
      if (!v54)
        return v14 >= 0;
      v34 = *a2;
      v35 = a2[1];
      if (*a2 != v35)
      {
        v36 = v34 + 2;
        if (v34 + 2 != v35)
        {
          while (1)
          {
            v37 = *(double **)v29;
            v38 = *(double **)(v29 + 8);
            if ((unint64_t)v38 - *(_QWORD *)v29 < 0x40)
              goto LABEL_73;
            v53 = 0;
            v54 = 0;
            if (v37 + 2 == v38)
              goto LABEL_73;
            do
            {
              if (!sub_10005B9D0(v36, v37, v37 + 2, (uint64_t)&v53))
                break;
              v39 = v37 + 4;
              v37 += 2;
            }
            while (v39 != v38);
            if (!v54)
              goto LABEL_76;
            v14 = 0;
            v36 += 2;
            if (v36 == v35)
              return v14 >= 0;
          }
        }
      }
      goto LABEL_75;
    }
  }
LABEL_73:
  v14 = -1;
  return v14 >= 0;
}

void ***sub_1002B9874(void ***a1, _QWORD *a2)
{
  void **v4;
  _QWORD *v5;
  uint64_t v6;
  const void *v7;
  int64_t v8;
  char *v9;
  char *v10;
  char *v11;

  v4 = *a1;
  v5 = (*a1)[1];
  if (v5 >= (*a1)[2])
  {
    v11 = sub_1002B9BAC(*a1, (uint64_t)a2);
  }
  else
  {
    *v5 = 0;
    v5[1] = 0;
    v5[2] = 0;
    v7 = (const void *)*a2;
    v6 = a2[1];
    v8 = v6 - *a2;
    if (v6 != *a2)
    {
      if (v8 < 0)
        sub_1000D02C0();
      v9 = (char *)operator new(v6 - *a2);
      *v5 = v9;
      v5[1] = v9;
      v10 = &v9[16 * (v8 >> 4)];
      v5[2] = v10;
      memcpy(v9, v7, v8);
      v5[1] = v10;
    }
    sub_1002840CC(v5 + 3, a2 + 3);
    v11 = (char *)(v5 + 6);
    v4[1] = v5 + 6;
  }
  v4[1] = v11;
  return a1;
}

void sub_1002B9934(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;

  v4 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    *(_QWORD *)(v2 + 8) = v4;
    operator delete(v4);
  }
  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(exception_object);
}

void sub_1002B9958(uint64_t a1, int8x16_t *a2)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_1002B9F00((uint64_t)exception, a1, a2);
}

void sub_1002B99A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002B99B8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  void *v22;

  v5 = *(_QWORD **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - (uint64_t)v5) >> 3) >= a2)
  {
    if (a2)
    {
      v12 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(*(void **)(a1 + 8), v12);
      v5 = (_QWORD *)((char *)v5 + v12);
    }
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    v6 = *(_QWORD **)a1;
    v7 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v5 - *(_QWORD *)a1) >> 3);
    v8 = v7 + a2;
    if (v7 + a2 > 0xAAAAAAAAAAAAAAALL)
      sub_1000D02C0();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (uint64_t)v6) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0xAAAAAAAAAAAAAAALL)
        sub_1000CDEB8();
      v11 = (char *)operator new(24 * v10);
    }
    else
    {
      v11 = 0;
    }
    v13 = &v11[24 * v7];
    v14 = &v11[24 * v10];
    v15 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v13, v15);
    v16 = &v13[v15];
    if (v5 == v6)
    {
      *(_QWORD *)a1 = v13;
      *(_QWORD *)(a1 + 8) = v16;
      *(_QWORD *)(a1 + 16) = v14;
      if (v5)
LABEL_24:
        operator delete(v5);
    }
    else
    {
      do
      {
        v17 = v13;
        *((_QWORD *)v13 - 2) = 0;
        *((_QWORD *)v13 - 1) = 0;
        v18 = *(_OWORD *)(v5 - 3);
        v5 -= 3;
        *(_OWORD *)(v13 - 24) = v18;
        v13 -= 24;
        *((_QWORD *)v17 - 1) = v5[2];
        *v5 = 0;
        v5[1] = 0;
        v5[2] = 0;
      }
      while (v5 != v6);
      v19 = *(_QWORD **)a1;
      v5 = *(_QWORD **)(a1 + 8);
      *(_QWORD *)a1 = v13;
      *(_QWORD *)(a1 + 8) = v16;
      *(_QWORD *)(a1 + 16) = v14;
      if (v5 != v19)
      {
        v20 = v5;
        do
        {
          v22 = (void *)*(v20 - 3);
          v20 -= 3;
          v21 = v22;
          if (v22)
          {
            *(v5 - 2) = v21;
            operator delete(v21);
          }
          v5 = v20;
        }
        while (v20 != v19);
        v5 = v19;
      }
      if (v5)
        goto LABEL_24;
    }
  }
}

char *sub_1002B9BAC(void **a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  const void *v10;
  int64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  unint64_t v17;
  _QWORD *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  char *v27;
  void *v28;
  _QWORD *v30;
  char *v31;
  char *v32;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 4);
  v4 = v3 + 1;
  if (v3 + 1 > 0x555555555555555)
    sub_1000D02C0();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 4) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 4);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 4) >= 0x2AAAAAAAAAAAAAALL)
    v6 = 0x555555555555555;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x555555555555555)
      sub_1000CDEB8();
    v7 = operator new(48 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[6 * v3];
  v30 = v8;
  v32 = (char *)&v7[6 * v6];
  v8[1] = 0;
  v8[2] = 0;
  *v8 = 0;
  v10 = *(const void **)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v11 = v9 - *(_QWORD *)a2;
  if (v9 != *(_QWORD *)a2)
  {
    if (v11 < 0)
      sub_1000D02C0();
    v12 = (char *)operator new(v9 - *(_QWORD *)a2);
    *v8 = v12;
    v8[1] = v12;
    v13 = &v12[16 * (v11 >> 4)];
    v8[2] = v13;
    memcpy(v12, v10, v11);
    v8[1] = v13;
  }
  sub_1002840CC(&v7[6 * v3 + 3], (uint64_t *)(a2 + 24));
  v31 = (char *)&v7[6 * v3];
  v14 = v31 + 48;
  v15 = (char *)*a1;
  v16 = (char *)a1[1];
  if (v16 == *a1)
  {
    *a1 = v30;
    a1[1] = v14;
    a1[2] = v32;
  }
  else
  {
    v17 = 0;
    do
    {
      v18 = &v30[v17 / 8];
      v19 = &v16[v17];
      *(v18 - 6) = 0;
      *(v18 - 5) = 0;
      *(v18 - 4) = 0;
      *((_OWORD *)v18 - 3) = *(_OWORD *)&v16[v17 - 48];
      *(v18 - 4) = *(_QWORD *)&v16[v17 - 32];
      *((_QWORD *)v19 - 6) = 0;
      *((_QWORD *)v19 - 5) = 0;
      *((_QWORD *)v19 - 4) = 0;
      *(v18 - 3) = 0;
      *(v18 - 2) = 0;
      *(v18 - 1) = 0;
      *(_OWORD *)(v18 - 3) = *(_OWORD *)&v16[v17 - 24];
      *(v18 - 1) = *(_QWORD *)&v16[v17 - 8];
      *((_QWORD *)v19 - 3) = 0;
      *((_QWORD *)v19 - 2) = 0;
      *((_QWORD *)v19 - 1) = 0;
      v17 -= 48;
    }
    while (&v16[v17] != v15);
    v20 = (char *)*a1;
    v16 = (char *)a1[1];
    *a1 = &v30[v17 / 8];
    a1[1] = v14;
    a1[2] = v32;
    if (v16 != v20)
    {
      do
      {
        v21 = *((_QWORD *)v16 - 3);
        if (v21)
        {
          v22 = *((_QWORD *)v16 - 2);
          v23 = (void *)*((_QWORD *)v16 - 3);
          if (v22 != v21)
          {
            v24 = *((_QWORD *)v16 - 2);
            do
            {
              v26 = *(void **)(v24 - 24);
              v24 -= 24;
              v25 = v26;
              if (v26)
              {
                *(_QWORD *)(v22 - 16) = v25;
                operator delete(v25);
              }
              v22 = v24;
            }
            while (v24 != v21);
            v23 = (void *)*((_QWORD *)v16 - 3);
          }
          *((_QWORD *)v16 - 2) = v21;
          operator delete(v23);
        }
        v27 = v16 - 48;
        v28 = (void *)*((_QWORD *)v16 - 6);
        if (v28)
        {
          *((_QWORD *)v16 - 5) = v28;
          operator delete(v28);
        }
        v16 -= 48;
      }
      while (v27 != v20);
      v16 = v20;
    }
  }
  if (v16)
    operator delete(v16);
  return v31 + 48;
}

void sub_1002B9E20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void *v4;
  va_list va;

  va_start(va, a2);
  v4 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    *(_QWORD *)(v2 + 8) = v4;
    operator delete(v4);
  }
  sub_1002B9E48((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002B9E48(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;

  v2 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v2; i = *(_QWORD *)(a1 + 16))
  {
    v4 = (void **)(i - 48);
    *(_QWORD *)(a1 + 16) = i - 48;
    v5 = *(_QWORD *)(i - 24);
    if (v5)
    {
      v6 = *(_QWORD *)(i - 16);
      v7 = *(void **)(i - 24);
      if (v6 != v5)
      {
        v8 = *(_QWORD *)(i - 16);
        do
        {
          v10 = *(void **)(v8 - 24);
          v8 -= 24;
          v9 = v10;
          if (v10)
          {
            *(_QWORD *)(v6 - 16) = v9;
            operator delete(v9);
          }
          v6 = v8;
        }
        while (v8 != v5);
        v7 = *(void **)(i - 24);
      }
      *(_QWORD *)(i - 16) = v5;
      operator delete(v7);
    }
    v11 = *v4;
    if (*v4)
    {
      *(_QWORD *)(i - 40) = v11;
      operator delete(v11);
    }
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

int8x16_t sub_1002B9F00(uint64_t a1, uint64_t a2, int8x16_t *a3)
{
  int8x16_t result;

  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)a1 = &off_1004016E0;
  *(_QWORD *)(a1 + 8) = off_100401710;
  *(_QWORD *)(a1 + 16) = off_100401738;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 48) = a3[1].i32[0];
  result = vextq_s8(*a3, *a3, 8uLL);
  *(int8x16_t *)(a1 + 32) = result;
  return result;
}

std::exception *sub_1002B9F34(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1[2].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    a1[3].__vftable = 0;
  std::exception::~exception(a1 + 1);
  return a1;
}

void sub_1002B9F8C()
{
  operator new();
}

void sub_1002BA050()
{
  std::exception *v0;

  std::exception::~exception(v0);
  operator delete();
}

void sub_1002BA07C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1002BA098(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_1002BA2F8((uint64_t)exception, a1);
}

void sub_1002BA0D4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002BA0E8(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1[2].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      a1[3].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);
  operator delete();
}

void sub_1002BA150(std::exception *this)
{
  std::exception_vtbl *v2;

  this[1].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    this[2].__vftable = 0;
  std::exception::~exception(this);
}

void sub_1002BA1A0(std::exception *this)
{
  std::exception_vtbl *v2;

  this[1].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      this[2].__vftable = 0;
  }
  std::exception::~exception(this);
  operator delete();
}

const char *sub_1002BA20C()
{
  return "Boost.Geometry Invalid-Output exception";
}

void sub_1002BA218(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    a1[1].__vftable = 0;
  std::exception::~exception(a1 - 1);
}

void sub_1002BA268(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::exception::~exception(a1 - 1);
  operator delete();
}

void sub_1002BA2D4(std::exception *a1)
{
  std::exception::~exception(a1);
  operator delete();
}

uint64_t sub_1002BA2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  *(_QWORD *)(a1 + 8) = &off_100401758;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1004016E0;
  *(_QWORD *)(a1 + 8) = off_100401710;
  *(_QWORD *)(a1 + 16) = off_100401738;
  return a1;
}

void sub_1002BA390(_Unwind_Exception *a1)
{
  std::exception *v1;

  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002BA3A4(uint64_t a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  if (v3 == v2)
  {
    v3 = *(void ***)(a1 + 8);
    *(_QWORD *)(a1 + 40) = 0;
    v11 = 0;
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = &v2[v4 / 0xAA];
    v6 = (unint64_t)*v5;
    v7 = (unint64_t)*v5 + 24 * (v4 % 0xAA);
    v8 = (unint64_t)v2[(*(_QWORD *)(a1 + 40) + v4) / 0xAA] + 24 * ((*(_QWORD *)(a1 + 40) + v4) % 0xAA);
    if (v7 != v8)
    {
      do
      {
        v9 = *(void **)v7;
        if (*(_QWORD *)v7)
        {
          *(_QWORD *)(v7 + 8) = v9;
          operator delete(v9);
          v6 = (unint64_t)*v5;
        }
        v7 += 24;
        if (v7 - v6 == 4080)
        {
          v10 = (unint64_t)v5[1];
          ++v5;
          v6 = v10;
          v7 = v10;
        }
      }
      while (v7 != v8);
      v2 = *(void ***)(a1 + 8);
      v3 = *(void ***)(a1 + 16);
    }
    *(_QWORD *)(a1 + 40) = 0;
    v11 = (char *)v3 - (char *)v2;
    if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
    {
      do
      {
        operator delete(*v2);
        v3 = *(void ***)(a1 + 16);
        v2 = (void **)(*(_QWORD *)(a1 + 8) + 8);
        *(_QWORD *)(a1 + 8) = v2;
        v11 = (char *)v3 - (char *)v2;
      }
      while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
    }
  }
  v12 = v11 >> 3;
  if (v12 == 1)
  {
    v13 = 85;
    goto LABEL_17;
  }
  if (v12 == 2)
  {
    v13 = 170;
LABEL_17:
    *(_QWORD *)(a1 + 32) = v13;
  }
  if (v2 != v3)
  {
    do
    {
      v14 = *v2++;
      operator delete(v14);
    }
    while (v2 != v3);
    v16 = *(_QWORD *)(a1 + 8);
    v15 = *(_QWORD *)(a1 + 16);
    if (v15 != v16)
      *(_QWORD *)(a1 + 16) = v15 + ((v16 - v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_1002BA530(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1002BA530(a1, *a2);
    sub_1002BA530(a1, a2[1]);
    sub_10004AAA0((uint64_t)(a2 + 5), (_QWORD *)a2[6]);
    operator delete(a2);
  }
}

uint64_t sub_1002BA57C(uint64_t a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  *(_QWORD *)(a1 + 40) = 0;
  v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = *(void ***)(a1 + 16);
      v2 = (void **)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v2;
      v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v5 = v4 >> 3;
  if (v5 == 1)
  {
    v6 = 8;
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    v6 = 16;
LABEL_7:
    *(_QWORD *)(a1 + 32) = v6;
  }
  if (v2 != v3)
  {
    do
    {
      v7 = *v2++;
      operator delete(v7);
    }
    while (v2 != v3);
    v9 = *(_QWORD *)(a1 + 8);
    v8 = *(_QWORD *)(a1 + 16);
    if (v8 != v9)
      *(_QWORD *)(a1 + 16) = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_1002BA640()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BA69C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BA6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;

  v7 = (_QWORD *)(a1 + 56);
  sub_100271FB4(a1 + 72, *(_QWORD *)(a1 + 56));
  *(_QWORD *)(a2 + 40) = v8;
  v9 = *(double *)(a2 + 16);
  v10 = *(double *)(a2 + 24);
  v11 = v9 + (*(double (**)(_QWORD))(*(_QWORD *)*v7 + 56))(*v7) * *((double *)v7 + 10);
  v12 = v10 + (*(double (**)(_QWORD))(*(_QWORD *)*v7 + 56))(*v7) * *((double *)v7 + 10);
  return sub_100223EFC(a2, v11, v12, *(_QWORD *)(a3 + 16), a4, (uint64_t)v7, (uint64_t)(v7 - 6), (uint64_t ***)v7 + 8);
}

_QWORD *sub_1002BA798(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *a1 = off_100401780;
  v2 = (std::__shared_weak_count *)a1[16];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      *a1 = off_1003F4C00;
      v5 = (std::__shared_weak_count *)a1[8];
      if (v5)
        goto LABEL_6;
LABEL_9:
      sub_100048DC0((uint64_t)(a1 + 1));
      return a1;
    }
  }
  *a1 = off_1003F4C00;
  v5 = (std::__shared_weak_count *)a1[8];
  if (!v5)
    goto LABEL_9;
LABEL_6:
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (v7)
    goto LABEL_9;
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  sub_100048DC0((uint64_t)(a1 + 1));
  return a1;
}

uint64_t sub_1002BA878()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BA8D4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BA930(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 40))
    operator delete(*(void **)(a1 + 24));
  if (*(_QWORD *)(a1 + 16))
    operator delete(*(void **)a1);
  return a1;
}

void sub_1002BA970(uint64_t a1, sqlite3_blob **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v8[56];
  _BYTE v9[16];
  int v10;
  _BYTE v11[24];
  _BYTE *v12;

  sub_100081318((uint64_t)v9, *a2);
  v4 = v10;
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)v8, (wireless_diagnostics::google::protobuf::io::CopyingInputStream *)v9, -1);
  v5 = a3[3];
  if (!v5)
    goto LABEL_4;
  if ((_QWORD *)v5 != a3)
  {
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
LABEL_4:
    v12 = (_BYTE *)v5;
    goto LABEL_6;
  }
  v12 = v11;
  (*(void (**)(_QWORD *, _BYTE *))(*a3 + 24))(a3, v11);
LABEL_6:
  sub_100243E64((uint64_t)v8, v4, (uint64_t)v11);
  v6 = v12;
  if (v12 == v11)
  {
    v7 = 4;
    v6 = v11;
    goto LABEL_10;
  }
  if (v12)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)v8);
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)v9);
}

void sub_1002BAA70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)va);
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)va1);
  _Unwind_Resume(a1);
}

void sub_1002BAAC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)va);
  _Unwind_Resume(a1);
}

void sub_1002BAAD8(_QWORD *a1@<X0>, uint64_t ***a2@<X1>, _QWORD *a3@<X2>, sqlite3_blob **a4@<X3>, uint64_t *a5@<X8>)
{
  const void ***v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  _BYTE v17[24];

  if (sub_1000A9C6C(a1, a2))
  {
    sub_100081318((uint64_t)v17, *a4);
    wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)&v15, (wireless_diagnostics::google::protobuf::io::CopyingInputStream *)v17, -1);
    v10 = sub_1000A9C6C(a1, a2);
    if (!v10)
      sub_10018CB98("unordered_map::at: key not found");
    sub_100243354(a3, (uint64_t)(v10 + 4), (uint64_t)&v15, a5);
    wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)&v15);
    wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)v17);
  }
  else
  {
    v11 = (uint64_t)(a3[1] - *a3) >> 5;
    v15 = 0;
    v16 = 0;
    sub_100243D40(a5, v11, &v15);
    v12 = v16;
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
}

void sub_1002BABF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000E095C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002BAC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)va);
  _Unwind_Resume(a1);
}

void sub_1002BAC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)&a9);
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)&a16);
  _Unwind_Resume(a1);
}

const void ***sub_1002BAC34(_QWORD *a1, uint64_t ***a2, uint64_t *a3)
{
  const void ***result;
  uint64_t v5;
  uint64_t v6;
  unsigned int **v7;

  result = sub_1000A9C6C(a1, a2);
  if (result)
  {
    v5 = *a3;
    v6 = a3[1];
    if (*a3 == v6)
    {
      return 0;
    }
    else
    {
      v7 = (unsigned int **)(result + 4);
      do
      {
        result = (const void ***)sub_100242E84(v7, v5);
        if ((result & 1) != 0)
          break;
        v5 += 32;
      }
      while (v5 != v6);
    }
  }
  return result;
}

void sub_1002BACA0(id a1)
{
  qword_100417F10 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Database");
}

uint64_t *sub_1002BACCC(uint64_t *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16))
    {
      if (*(_QWORD *)(v2 + 72))
        operator delete(*(void **)(v2 + 56));
      if (*(_QWORD *)(v2 + 48))
        operator delete(*(void **)(v2 + 32));
      v3 = *(std::__shared_weak_count **)(v2 + 24);
      if (v3)
      {
        p_shared_owners = (unint64_t *)&v3->__shared_owners_;
        do
          v5 = __ldaxr(p_shared_owners);
        while (__stlxr(v5 - 1, p_shared_owners));
        if (!v5)
        {
          ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
          std::__shared_weak_count::__release_weak(v3);
        }
      }
    }
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_1002BAD68()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BADC4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002BAE20(_QWORD *a1, uint64_t a2)
{
  *a1 = off_100401808;
  a1[1] = 0x7FF8000000000000;
  sub_100236870((uint64_t)(a1 + 2), a2);
  sub_1002BFD64((uint64_t)(a1 + 5));
}

void sub_1002BAE70(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  void **v2;
  void *v4;
  void *v5;

  v4 = (void *)v1[7];
  if (v4)
  {
    v1[8] = v4;
    operator delete(v4);
    v5 = *v2;
    if (!*v2)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v5 = *v2;
    if (!*v2)
      goto LABEL_3;
  }
  v1[3] = v5;
  operator delete(v5);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002BAEAC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 80) + 16))(*(_QWORD *)(a1 + 80));
}

double sub_1002BAEBC(uint64_t a1, double **a2)
{
  double **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (double **)(a1 + 16);
  v5 = sub_100270038((_QWORD *)(a1 + 16));
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 80) + 24))(*(_QWORD *)(a1 + 80));
  sub_1002BB044(v5, v6, "mean", v4, "LL");
  v7 = sub_100270038(a2);
  sub_1002BB498(v5, v7, "mean", v4, "y", a2);
  sub_1002BB8F4((unint64_t *)a2, (unint64_t *)v4);
  return (*(double (**)(_QWORD, double **))(**(_QWORD **)(a1 + 80) + 48))(*(_QWORD *)(a1 + 80), a2) * -0.5;
}

double sub_1002BAF80(uint64_t a1, double **a2)
{
  double **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (double **)(a1 + 16);
  v5 = sub_100270038((_QWORD *)(a1 + 16));
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 80) + 24))(*(_QWORD *)(a1 + 80));
  sub_1002BB044(v5, v6, "mean", v4, "LL");
  v7 = sub_100270038(a2);
  sub_1002BB498(v5, v7, "mean", v4, "y", a2);
  sub_1002BB8F4((unint64_t *)a2, (unint64_t *)v4);
  return (*(double (**)(_QWORD, double **))(**(_QWORD **)(a1 + 80) + 48))(*(_QWORD *)(a1 + 80), a2) * -0.5;
}

uint64_t sub_1002BB044(uint64_t result, uint64_t a2, char *a3, double **a4, char *a5)
{
  uint64_t v9;
  void **v10;
  uint64_t v11;
  NSObject *v12;
  const char *v13;
  void **v14;
  _BYTE v15[24];
  void *v16[2];
  uint64_t v17;
  uint64_t v18;
  void *__p[2];
  unsigned __int8 v20;
  void *v21[2];
  char v22;
  void *v23[2];
  char v24;
  std::logic_error v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t buf[4];
  const char *v29;
  __int16 v30;
  void **v31;

  if (result != a2)
  {
    v9 = result;
    sub_1002BBEB4((uint64_t)&v26);
    sub_1002704DC(&v26, a4);
    sub_1000D5048(v23, a3);
    std::stringbuf::str(&v27);
    sub_1000D5048(v21, a5);
    sub_1000D5048(__p, "unavailable");
    sub_100318D9C(&v25, v23, v9, v16, v21, a2, __p);
    if ((char)v20 < 0)
    {
      operator delete(__p[0]);
      if ((v22 & 0x80000000) == 0)
        goto LABEL_4;
    }
    else if ((v22 & 0x80000000) == 0)
    {
LABEL_4:
      if (SHIBYTE(v17) < 0)
        goto LABEL_5;
      goto LABEL_9;
    }
    operator delete(v21[0]);
    if (SHIBYTE(v17) < 0)
    {
LABEL_5:
      operator delete(v16[0]);
      if ((v24 & 0x80000000) == 0)
      {
LABEL_11:
        if (!sub_10017466C())
          goto LABEL_28;
        sub_1000FC5A4((uint64_t)v16);
        sub_100170BF8(0);
        if ((v20 & 0x80u) == 0)
          v10 = __p;
        else
          v10 = (void **)__p[0];
        if ((v20 & 0x80u) == 0)
          v11 = v20;
        else
          v11 = (uint64_t)__p[1];
        sub_1000F0508(&v17, (uint64_t)v10, v11);
        if ((char)v20 < 0)
          operator delete(__p[0]);
        if (qword_100417ED8 == -1)
        {
          v12 = qword_100417EE0;
          if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
          {
LABEL_22:
            v13 = std::logic_error::what(&v25);
            std::stringbuf::str(&v18);
            if ((v20 & 0x80u) == 0)
              v14 = __p;
            else
              v14 = (void **)__p[0];
            *(_DWORD *)buf = 136315394;
            v29 = v13;
            v30 = 2080;
            v31 = v14;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Precondition failure: %s\n%s\n", buf, 0x16u);
            if ((char)v20 < 0)
              operator delete(__p[0]);
          }
        }
        else
        {
          dispatch_once(&qword_100417ED8, &stru_1004018A0);
          v12 = qword_100417EE0;
          if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
            goto LABEL_22;
        }
        sub_1000FC6DC((uint64_t)v16);
LABEL_28:
        __cxa_allocate_exception(0x80uLL);
        sub_10018D04C((uint64_t)v15);
        sub_1002BC14C((uint64_t)&v25, (uint64_t)"void Preconditions::checkDimension(size_t, size_t, const char *, M1 &&, const char *) [M1 = const Vector64F &]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/math/dimensionality_mismatch_error.h", 71, (uint64_t)v15);
      }
LABEL_10:
      operator delete(v23[0]);
      goto LABEL_11;
    }
LABEL_9:
    if ((v24 & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
  return result;
}

void sub_1002BB310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,std::logic_error a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;

  sub_1000FC6DC((uint64_t)&a12);
  sub_100318E04(&a56);
  sub_1000F0484((uint64_t)&a65);
  _Unwind_Resume(a1);
}

void sub_1002BB350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,std::logic_error a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;

  sub_100318E04(&a56);
  sub_1000F0484((uint64_t)&a65);
  _Unwind_Resume(a1);
}

void sub_1002BB3C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  char a67;
  char a72;

  if (a55 < 0)
  {
    operator delete(__p);
    if (a61 < 0)
    {
LABEL_5:
      operator delete(a56);
      if (a17 < 0)
      {
LABEL_8:
        operator delete(a12);
        if (a67 < 0)
        {
LABEL_11:
          operator delete(a62);
          sub_1000F0484((uint64_t)&a72);
          _Unwind_Resume(a1);
        }
LABEL_12:
        sub_1000F0484((uint64_t)&a72);
        _Unwind_Resume(a1);
      }
LABEL_10:
      if (a67 < 0)
        goto LABEL_11;
      goto LABEL_12;
    }
  }
  else if (a61 < 0)
  {
    goto LABEL_5;
  }
  if (a17 < 0)
    goto LABEL_8;
  goto LABEL_10;
}

void sub_1002BB46C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;

  sub_1000F0484((uint64_t)&a66);
  _Unwind_Resume(a1);
}

void sub_1002BB480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;

  sub_1000F0484((uint64_t)&a66);
  _Unwind_Resume(a1);
}

uint64_t sub_1002BB498(uint64_t result, uint64_t a2, char *a3, double **a4, char *a5, double **a6)
{
  uint64_t v11;
  void **v12;
  uint64_t v13;
  NSObject *v14;
  const char *v15;
  void **v16;
  _BYTE v17[24];
  void *v18[2];
  uint64_t v19;
  uint64_t v20;
  void *__p[2];
  unsigned __int8 v22;
  void *v23[2];
  char v24;
  void *v25[2];
  char v26;
  std::logic_error v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t buf[4];
  const char *v33;
  __int16 v34;
  void **v35;

  if (result != a2)
  {
    v11 = result;
    sub_1002BBEB4((uint64_t)&v30);
    sub_1002704DC(&v30, a4);
    sub_1002BBEB4((uint64_t)&v28);
    sub_1002704DC(&v28, a6);
    sub_1000D5048(v25, a3);
    std::stringbuf::str(&v31);
    sub_1000D5048(v23, a5);
    std::stringbuf::str(&v29);
    sub_100318D9C(&v27, v25, v11, v18, v23, a2, __p);
    if ((char)v22 < 0)
    {
      operator delete(__p[0]);
      if ((v24 & 0x80000000) == 0)
        goto LABEL_4;
    }
    else if ((v24 & 0x80000000) == 0)
    {
LABEL_4:
      if (SHIBYTE(v19) < 0)
        goto LABEL_5;
      goto LABEL_9;
    }
    operator delete(v23[0]);
    if (SHIBYTE(v19) < 0)
    {
LABEL_5:
      operator delete(v18[0]);
      if ((v26 & 0x80000000) == 0)
      {
LABEL_11:
        if (!sub_10017466C())
          goto LABEL_28;
        sub_1000FC5A4((uint64_t)v18);
        sub_100170BF8(0);
        if ((v22 & 0x80u) == 0)
          v12 = __p;
        else
          v12 = (void **)__p[0];
        if ((v22 & 0x80u) == 0)
          v13 = v22;
        else
          v13 = (uint64_t)__p[1];
        sub_1000F0508(&v19, (uint64_t)v12, v13);
        if ((char)v22 < 0)
          operator delete(__p[0]);
        if (qword_100417ED8 == -1)
        {
          v14 = qword_100417EE0;
          if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
          {
LABEL_22:
            v15 = std::logic_error::what(&v27);
            std::stringbuf::str(&v20);
            if ((v22 & 0x80u) == 0)
              v16 = __p;
            else
              v16 = (void **)__p[0];
            *(_DWORD *)buf = 136315394;
            v33 = v15;
            v34 = 2080;
            v35 = v16;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Precondition failure: %s\n%s\n", buf, 0x16u);
            if ((char)v22 < 0)
              operator delete(__p[0]);
          }
        }
        else
        {
          dispatch_once(&qword_100417ED8, &stru_1004018A0);
          v14 = qword_100417EE0;
          if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
            goto LABEL_22;
        }
        sub_1000FC6DC((uint64_t)v18);
LABEL_28:
        __cxa_allocate_exception(0x80uLL);
        sub_10018D04C((uint64_t)v17);
        sub_1002BC14C((uint64_t)&v27, (uint64_t)"void Preconditions::checkDimension(size_t, size_t, const char *, M1 &&, const char *, M2 &&) [M1 = const Vector64F &, M2 = Vector64F &]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/math/dimensionality_mismatch_error.h", 100, (uint64_t)v17);
      }
LABEL_10:
      operator delete(v25[0]);
      goto LABEL_11;
    }
LABEL_9:
    if ((v26 & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
  return result;
}

void sub_1002BB784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *__p,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,std::logic_error a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;

  sub_1000FC6DC((uint64_t)&a13);
  sub_100318E04(&a57);
  sub_1000F0484((uint64_t)&a66);
  sub_1000F0484((uint64_t)&STACK[0x2D8]);
  _Unwind_Resume(a1);
}

void sub_1002BB800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  char a68;
  char a72;

  if (a56 < 0)
  {
    operator delete(__p);
    if (a62 < 0)
    {
LABEL_5:
      operator delete(a57);
      if (a18 < 0)
      {
LABEL_8:
        operator delete(a13);
        if ((a68 & 0x80000000) == 0)
        {
LABEL_12:
          sub_1000F0484((uint64_t)&a72);
          sub_1000F0484((uint64_t)&STACK[0x2D8]);
          _Unwind_Resume(a1);
        }
LABEL_11:
        operator delete(a63);
        sub_1000F0484((uint64_t)&a72);
        sub_1000F0484((uint64_t)&STACK[0x2D8]);
        _Unwind_Resume(a1);
      }
LABEL_10:
      if ((a68 & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
  }
  else if (a62 < 0)
  {
    goto LABEL_5;
  }
  if (a18 < 0)
    goto LABEL_8;
  goto LABEL_10;
}

void sub_1002BB8C8(_Unwind_Exception *a1)
{
  sub_1000F0484((uint64_t)&STACK[0x2D8]);
  _Unwind_Resume(a1);
}

void sub_1002BB8DC(_Unwind_Exception *a1)
{
  sub_1000F0484((uint64_t)&STACK[0x2D8]);
  _Unwind_Resume(a1);
}

unint64_t *sub_1002BB8F4(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  float64x2_t *v12;
  float64x2_t *v13;
  unint64_t v14;
  float64x2_t v15;
  unint64_t v16;
  uint64_t v17;
  double *v18;
  double *v19;
  double v20;
  void *v22[2];
  void *__p[2];
  char v24;

  v4 = sub_100270038(a2);
  if (v4 != sub_100270038(a1))
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v24 < 0)
      operator delete(__p[0]);
    sub_10015C2DC((uint64_t)v22);
  }
  v5 = *a1;
  v6 = a1[1];
  v7 = v6 - *a1;
  if (a2[1] - *a2 != v7)
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v24 < 0)
      operator delete(__p[0]);
    sub_1000F2AE4((uint64_t)v22);
  }
  if (v6 != v5)
  {
    v8 = v7 >> 3;
    v9 = *a2;
    if (v8 <= 1)
      v8 = 1;
    if (v8 < 6 || (v5 < v9 + 8 * v8 ? (v10 = v9 >= v5 + 8 * v8) : (v10 = 1), !v10))
    {
      v11 = 0;
LABEL_17:
      v16 = v8 - v11;
      v17 = 8 * v11;
      v18 = (double *)(v9 + v17);
      v19 = (double *)(v5 + v17);
      do
      {
        v20 = *v18++;
        *v19 = *v19 - v20;
        ++v19;
        --v16;
      }
      while (v16);
      return a1;
    }
    v11 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (float64x2_t *)(v9 + 16);
    v13 = (float64x2_t *)(v5 + 16);
    v14 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = vsubq_f64(*v13, *v12);
      v13[-1] = vsubq_f64(v13[-1], v12[-1]);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v8 != v11)
      goto LABEL_17;
  }
  return a1;
}

void sub_1002BBAB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002BBAD0(uint64_t a1)
{
  sub_100270038((_QWORD *)(a1 + 16));
  sub_1002BFD64(a1 + 40);
}

void sub_1002BBB60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1002BBB84(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  *a1 = off_100401808;
  v2 = a1[10];
  a1[10] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (void *)a1[7];
  if (v3)
  {
    a1[8] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[2];
  if (v4)
  {
    a1[3] = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_1002BBBE8(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  *a1 = off_100401808;
  v2 = a1[10];
  a1[10] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (void *)a1[7];
  if (v3)
  {
    a1[8] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[2];
  if (v4)
  {
    a1[3] = v4;
    operator delete(v4);
  }
  operator delete();
}

double sub_1002BBC5C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

void sub_1002BBCEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002BBD08(double *a1)
{
  a1[1] = (*(double (**)(double *))(*(_QWORD *)a1 + 48))(a1);
}

void sub_1002BBDA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1002BBDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  const void *v4;
  int64_t v5;
  char *v6;
  char *v7;
  double v8;
  void *__p;
  void *v11;
  char *v12;

  __p = 0;
  v11 = 0;
  v12 = 0;
  v4 = *(const void **)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v5 = v3 - *(_QWORD *)a2;
  if (v3 != *(_QWORD *)a2)
  {
    if (v5 < 0)
      sub_1000D02C0();
    v6 = (char *)operator new(v3 - *(_QWORD *)a2);
    v7 = &v6[8 * (v5 >> 3)];
    __p = v6;
    v12 = v7;
    memcpy(v6, v4, v5);
    v11 = v7;
  }
  v8 = (*(double (**)(uint64_t, void **))(*(_QWORD *)a1 + 16))(a1, &__p);
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
  return v8;
}

void sub_1002BBE68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002BBE88(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_1002BBEB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  std::ios_base *v5;

  v2 = a1 + 8;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = v4;
  v5 = (std::ios_base *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 24));
  std::ios_base::init(v5, (void *)(a1 + 8));
  v5[1].__vftable = 0;
  v5[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v2);
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_1002BBF78(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  std::ostream::~ostream(v2, v3 + 8);
  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1002BBF98(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1002BBFAC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004018D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002BBFBC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004018D0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1002BBFEC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1002BC000()
{
  operator delete();
}

double sub_1002BC014()
{
  return 0.0;
}

void sub_1002BC01C()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  *((_BYTE *)&v1.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v1, "not implemented");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100400330;
  sub_10018D04C((uint64_t)v0);
  sub_10026C54C(&v2, (uint64_t)"virtual double UniformMultivariatePdf::partitionFunction()", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/math/multivariate_pdf.cpp", 28, (uint64_t)v0);
}

void sub_1002BC0C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1002BC128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1002BC118);
}

void sub_1002BC14C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  const void *v9;
  size_t v10;
  void *v11;
  std::logic_error v12;
  uint64_t v13;
  std::logic_error v14;
  _QWORD v15[4];
  int v16;
  uint64_t (**v17)();

  sub_1002BCDA0((uint64_t)&v12, a1);
  v17 = (uint64_t (**)())&off_1003EDEA0;
  sub_1002BC6CC((uint64_t)&v14, (uint64_t)&v12);
  v14.__vftable = (std::logic_error_vtbl *)off_1004019F8;
  v15[0] = off_100401A30;
  v17 = &off_100401A68;
  sub_1000CE34C((uint64_t)v15, (uint64_t)&v13);
  v15[2] = a2;
  v15[3] = a3;
  v16 = a4;
  v9 = *(const void **)a5;
  v10 = *(_QWORD *)(a5 + 8) - *(_QWORD *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_1000D02C0();
    v11 = operator new(v10);
    memcpy(v11, v9, v10);
  }
  sub_1002BC460();
}

void sub_1002BC304(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::logic_error a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_UNKNOWN **a38,uint64_t a39)
{
  a38 = &off_1003EDD90;
  if (a39)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a39 + 32))(a39))
    {
      a39 = 0;
      sub_100318DA0(&a29);
      sub_1000CDD68(a1);
    }
  }
  sub_100318DA0(&a29);
  sub_1000CDD68(a1);
}

void sub_1002BC358(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000CDD68(a1);
  }
  sub_1000CDD68(a1);
}

void sub_1002BC380(std::logic_error *this)
{
  const char *imp;

  this[5].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[5].__imp_.__imp_ = 0;
  sub_100318DA0(this);
}

_QWORD *sub_1002BC3D0(uint64_t a1, uint64_t a2)
{
  _QWORD *result;

  *(_QWORD *)(a1 + 120) = &off_1003EDEA0;
  result = (_QWORD *)sub_1002BC6CC(a1, a2);
  *result = off_1004019F8;
  result[10] = off_100401A30;
  result[15] = &off_100401A68;
  return result;
}

void sub_1002BC410(std::logic_error *this)
{
  const char *imp;

  this[5].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[5].__imp_.__imp_ = 0;
  sub_100318DA0(this);
}

void sub_1002BC460()
{
  operator new();
}

void sub_1002BC678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1000EFE2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002BC69C(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_1002BC6B8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_1002BC6CC(uint64_t a1, uint64_t a2)
{
  std::logic_error *v4;
  std::logic_error v5;
  _BYTE *v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;

  v4 = std::logic_error::logic_error((std::logic_error *)a1, (const std::logic_error *)a2);
  v4->__vftable = (std::logic_error_vtbl *)off_100406628;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_10006CED8(&v4[1], *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
  }
  else
  {
    v5 = *(std::logic_error *)(a2 + 16);
    v4[2].__vftable = *(std::logic_error_vtbl **)(a2 + 32);
    v4[1] = v5;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (_BYTE *)(a1 + 48);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_10006CED8(v6, *(void **)(a2 + 48), *(_QWORD *)(a2 + 56));
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)v6 = v7;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = &off_1003EDD90;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v8;
  if (v8)
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8);
  v9 = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)a1 = off_100401A98;
  *(_QWORD *)(a1 + 80) = off_100401AC0;
  return a1;
}

void sub_1002BC7C0(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
  {
    operator delete(*v2);
    std::logic_error::~logic_error((std::logic_error *)v1);
    _Unwind_Resume(a1);
  }
  std::logic_error::~logic_error((std::logic_error *)v1);
  _Unwind_Resume(a1);
}

void sub_1002BC7F8(_Unwind_Exception *a1)
{
  std::logic_error *v1;

  sub_100318DA0(v1);
  _Unwind_Resume(a1);
}

void sub_1002BC80C(std::logic_error *this)
{
  const char *imp;

  this[5].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[5].__imp_.__imp_ = 0;
  sub_100318DA0(this);
}

void sub_1002BC85C(std::logic_error *this)
{
  const char *imp;

  this[5].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[5].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[5].__imp_.__imp_ = 0;
  }
  sub_100318DA0(this);
  operator delete();
}

void sub_1002BC8C0()
{
  operator new();
}

void sub_1002BC944()
{
  std::logic_error *v0;

  sub_1002BC80C(v0);
  operator delete();
}

void sub_1002BC978(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x80uLL);
  sub_1002BC3D0((uint64_t)exception, a1);
}

void sub_1002BC9B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002BC9C8(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  sub_100318DA0(a1 - 5);
}

void sub_1002BCA18(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  sub_100318DA0(a1 - 5);
  operator delete();
}

void sub_1002BCA7C()
{
  operator new();
}

void sub_1002BCB08()
{
  std::logic_error *v0;
  const char *imp;

  v0[5].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = v0[5].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v0[5].__imp_.__imp_ = 0;
  }
  sub_100318DA0(v0);
  operator delete();
}

void sub_1002BCB6C(_QWORD *a1)
{
  uint64_t v1;
  void *exception;

  v1 = (uint64_t)a1 + *(_QWORD *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x80uLL);
  sub_1002BC3D0((uint64_t)exception, v1);
}

void sub_1002BCBB0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002BCBC4(_QWORD *a1)
{
  std::logic_error *v1;
  const char *imp;

  v1 = (std::logic_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[5].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = v1[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    v1[5].__imp_.__imp_ = 0;
  sub_100318DA0(v1);
}

void sub_1002BCC1C(_QWORD *a1)
{
  std::logic_error *v1;
  const char *imp;

  v1 = (std::logic_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[5].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = v1[5].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[5].__imp_.__imp_ = 0;
  }
  sub_100318DA0(v1);
  operator delete();
}

void sub_1002BCC88(std::logic_error *this)
{
  const char *imp;

  this[5].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[5].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[5].__imp_.__imp_ = 0;
  }
  sub_100318DA0(this);
  operator delete();
}

void sub_1002BCCEC(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  sub_100318DA0(a1 - 5);
}

void sub_1002BCD3C(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  sub_100318DA0(a1 - 5);
  operator delete();
}

uint64_t sub_1002BCDA0(uint64_t a1, uint64_t a2)
{
  std::logic_error *v4;
  std::logic_error v5;
  _BYTE *v6;
  __int128 v7;
  uint64_t v8;

  v4 = std::logic_error::logic_error((std::logic_error *)a1, (const std::logic_error *)a2);
  v4->__vftable = (std::logic_error_vtbl *)off_100406628;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_10006CED8(&v4[1], *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
  }
  else
  {
    v5 = *(std::logic_error *)(a2 + 16);
    v4[2].__vftable = *(std::logic_error_vtbl **)(a2 + 32);
    v4[1] = v5;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (_BYTE *)(a1 + 48);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_10006CED8(v6, *(void **)(a2 + 48), *(_QWORD *)(a2 + 56));
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)v6 = v7;
  }
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = -1;
  *(_QWORD *)a1 = off_100401A98;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = off_100401AC0;
  *(_QWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_1002BCE6C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
  {
    operator delete(*v2);
    std::logic_error::~logic_error((std::logic_error *)v1);
    _Unwind_Resume(a1);
  }
  std::logic_error::~logic_error((std::logic_error *)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002BCEA4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BCF00()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BCF5C()
{
  _QWORD *v0;

  v0 = operator new(0x28uLL);
  v0[1] = 0;
  v0[2] = 0;
  *v0 = off_1004018D0;
  v0[4] = 0x7FF8000000000000;
  qword_10042E9B8 = (uint64_t)v0;
  v0[3] = off_100401920;
  qword_10042E9B0 = (uint64_t)(v0 + 3);
  return __cxa_atexit((void (*)(void *))sub_1002203E4, &qword_10042E9B0, (void *)&_mh_execute_header);
}

double sub_1002BCFBC(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t *v2;
  double v3;
  double v4;
  _QWORD *v5;
  _BYTE v7[8];
  double v8;
  double v9;
  uint64_t v10;
  _BYTE v11[32];

  v1 = *a1;
  v2 = a1[1];
  if (*a1 == v2)
    return 0.0;
  v3 = 0.0;
  v4 = 0.0;
  do
  {
    v10 = *v1;
    sub_1001A06D0((uint64_t)v11, (uint64_t)(v1 + 1));
    v5 = sub_100242504(&v10);
    sub_1001A06D0((uint64_t)v7, (uint64_t)v5);
    v3 = v3 + v8;
    v4 = v4 + v9;
    nullsub_49(v7);
    nullsub_49(v11);
    v1 += 5;
  }
  while (v1 != v2);
  return v3;
}

void sub_1002BD06C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_49(v1);
  _Unwind_Resume(a1);
}

double sub_1002BD080@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  result = NAN;
  *(_OWORD *)(a1 + 24) = xmmword_100397490;
  return result;
}

void sub_1002BD098(uint64_t **a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0x7FF8000000000000;
  *(double *)(a2 + 32) = a3;
  if ((uint64_t **)a2 != a1)
    sub_100280AC4(a2, *a1, a1[1], 0xCCCCCCCCCCCCCCCDLL * (a1[1] - *a1));
}

void sub_1002BD0EC(_Unwind_Exception *a1)
{
  void **v1;

  sub_10027FC54(v1);
  _Unwind_Resume(a1);
}

double sub_1002BD100(uint64_t a1, uint64_t a2)
{
  double v2;
  double v6;
  double v7;
  double v8;
  double v9;
  long double v10;
  long double v11;
  double v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  void *__p;
  std::__shared_weak_count *v17;

  v2 = 0.0;
  if (*(double *)(a2 + 32) == 0.0)
    return v2;
  (*(void (**)(void **__return_ptr))(**(_QWORD **)(a1 + 56) + 48))(&__p);
  if (__p)
  {
    sub_1003033B8(*(double *)(a1 + 32) - *((double *)__p + 10));
    sub_1003033B8(1.57079633 - (v6 + -1.57079633));
    v8 = v7;
    v9 = sub_1002BCFBC((uint64_t **)a2);
    v11 = atan2(v10, v9);
    sub_1003033B8(v8 - v11);
    v2 = *(double *)(a2 + 32)
       * ((*(double *)&qword_10042E9C8 + (v12 * v12 / 0.822467033 + 1.64243019) * -0.5)
        * (double)(0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3)));
    v13 = v17;
    if (!v17)
      return v2;
  }
  else
  {
    v2 = *(double *)(a2 + 24);
    v13 = v17;
    if (!v17)
      return v2;
  }
  p_shared_owners = (unint64_t *)&v13->__shared_owners_;
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (v15)
    return v2;
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  return v2;
}

void sub_1002BD2C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002BD2DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002BD2F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002BD304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_1002BD318(uint64_t a1, int a2, uint64_t a3)
{
  if (a2 == 1 && sub_1003403B0(a1) && sub_100340490(a1) <= *(double *)(a3 + 96))
    return sub_100263B20(a3);
  else
    return 0.0;
}

uint64_t sub_1002BD370()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BD3CC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

long double sub_1002BD428()
{
  long double result;

  *(double *)&qword_10042E9C0 = 0.99978988 - sub_100263BD0(-3.46410162);
  result = -log(*(long double *)&qword_10042E9C0);
  qword_10042E9C8 = *(_QWORD *)&result;
  return result;
}

double sub_1002BD468(unint64_t *a1)
{
  return COERCE_DOUBLE(atomic_load(a1));
}

void sub_1002BD474(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  unsigned __int8 v4;
  unsigned __int8 v5;
  std::unique_lock<std::mutex> v6;

  v1 = (unsigned __int8 *)(a1 + 8);
  v2 = atomic_load((unsigned __int8 *)(a1 + 8));
  if ((v2 & 1) != 0)
  {
    v6.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 16);
    v6.__owns_ = 1;
    std::mutex::lock((std::mutex *)(a1 + 16));
    v4 = atomic_load(v1);
    if ((v4 & 1) != 0)
    {
      do
      {
        std::condition_variable::wait((std::condition_variable *)(a1 + 80), &v6);
        v5 = atomic_load((unsigned __int8 *)(a1 + 8));
      }
      while ((v5 & 1) != 0);
    }
    if (v6.__owns_)
      std::mutex::unlock(v6.__m_);
  }
}

uint64_t sub_1002BD4EC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BD548()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002BD5A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  int v7;
  const void **v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  std::string::size_type size;
  int v18;
  std::string *v19;
  _BOOL4 v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  std::string v25;

  sub_10014E054(a2);
  *(_DWORD *)(a2 + 156) |= 1u;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    operator new();
  v5 = *(_QWORD *)(a1 + 8);
  *(_DWORD *)(v4 + 52) |= 8u;
  *(_QWORD *)(v4 + 40) = v5;
  v6 = (double)*(uint64_t *)(a1 + 16) / 1000000000.0 + -978307200.0;
  *(_DWORD *)(a2 + 156) |= 1u;
  *(_DWORD *)(v4 + 52) |= 1u;
  *(double *)(v4 + 16) = v6;
  LODWORD(v5) = *(_DWORD *)(a2 + 156);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a1 + 96);
  v7 = *(_DWORD *)(a1 + 124);
  *(_DWORD *)(a2 + 156) = v5 | 0x4106;
  *(_DWORD *)(a2 + 116) = v7;
  v8 = (const void **)(a1 + 64);
  v9 = std::stoi((const std::string *)(a1 + 64), 0, 10);
  v10 = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a2 + 48) = v9;
  *(_OWORD *)(a2 + 120) = *(_OWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a2 + 136) = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a2 + 96) = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a2 + 104) = v11;
  v13 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a2 + 80) = v12;
  *(_QWORD *)(a2 + 88) = v13;
  v14 = *(_QWORD *)(a1 + 88);
  *(_DWORD *)(a2 + 156) = v10 | 0x39E28;
  *(_QWORD *)(a2 + 56) = v14;
  std::to_string(&v25, 4u);
  v15 = *(unsigned __int8 *)(a1 + 87);
  if ((v15 & 0x80u) == 0)
    v16 = *(unsigned __int8 *)(a1 + 87);
  else
    v16 = *(_QWORD *)(a1 + 72);
  size = HIBYTE(v25.__r_.__value_.__r.__words[2]);
  v18 = SHIBYTE(v25.__r_.__value_.__r.__words[2]);
  if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v25.__r_.__value_.__l.__size_;
  if (v16 != size)
    goto LABEL_18;
  if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v19 = &v25;
  else
    v19 = (std::string *)v25.__r_.__value_.__r.__words[0];
  if ((v15 & 0x80) == 0)
  {
    if (*(_BYTE *)(a1 + 87))
    {
      while (*(unsigned __int8 *)v8 == v19->__r_.__value_.__s.__data_[0])
      {
        v8 = (const void **)((char *)v8 + 1);
        v19 = (std::string *)((char *)v19 + 1);
        if (!--v15)
          goto LABEL_16;
      }
LABEL_18:
      v20 = 0;
      if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
LABEL_16:
    v20 = 1;
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_20;
LABEL_19:
    operator delete(v25.__r_.__value_.__l.__data_);
    goto LABEL_20;
  }
  v20 = memcmp(*v8, v19, *(_QWORD *)(a1 + 72)) == 0;
  if (v18 < 0)
    goto LABEL_19;
LABEL_20:
  v21 = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a2 + 52) = v20;
  v22 = *(_QWORD *)(a1 + 168);
  *(_DWORD *)(a2 + 156) = v21 | 0xC0;
  *(_QWORD *)(a2 + 64) = v22;
  if (((*(unsigned __int16 *)(a1 + 192) | (*(unsigned __int8 *)(a1 + 194) << 16)) & 0x20000) != 0)
  {
    *(_DWORD *)(a2 + 156) = v21 | 0x400C0;
    v23 = *(_QWORD *)(a2 + 144);
    if (!v23)
      operator new();
    v24 = *(_DWORD *)(a1 + 184);
    *(_DWORD *)(v23 + 24) |= 1u;
    *(_DWORD *)(v23 + 16) = v24;
  }
}

void sub_1002BD804()
{
  operator delete();
}

void sub_1002BD844(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100007738(v1);
  _Unwind_Resume(a1);
}

void sub_1002BD858(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100007738(v1);
  _Unwind_Resume(a1);
}

void sub_1002BD86C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100007738(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002BD880(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_100258C34(a1, a2);
  *(_DWORD *)(a1 + 16) = sub_100258C90(v3, 2) + 1;
  return a1;
}

uint64_t sub_1002BD8B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1002BD8BC(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  _BYTE *v4;
  int *v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  size_t v16;
  int64_t v17;
  char *v18;
  uint64_t v19;
  _BYTE *v20;
  char *v21;
  char v22;
  unint64_t v23;
  _OWORD *v24;
  __int128 *v25;
  unint64_t v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  _BYTE *v36;
  char *v37;
  char *v38;
  char v39;
  unint64_t v40;
  __int128 *v41;
  _OWORD *v42;
  unint64_t v43;
  __int128 v44;
  _BYTE *v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  void *__p;
  _BYTE *v50;

  sub_10006FF64(a1, 0);
  sub_1002BDCD0(a1, (int **)&__p);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v5 = (int *)__p;
  v4 = v50;
  if ((unint64_t)(v50 - (_BYTE *)__p) < 8)
    goto LABEL_53;
  v6 = 0;
  v7 = 0;
  do
  {
    v8 = v5[2 * v7 + 1];
    if ((_DWORD)v8)
    {
      v9 = 0;
      v10 = v5[2 * v7];
      while (1)
      {
        while (1)
        {
          v11 = a2[2];
          if ((unint64_t)v6 >= v11)
            break;
          *v6++ = v10;
          a2[1] = (unint64_t)v6;
          if (++v9 == v8)
            goto LABEL_3;
        }
        v12 = *a2;
        v13 = (unint64_t)&v6[-*a2];
        v14 = v13 + 1;
        if ((uint64_t)(v13 + 1) < 0)
          sub_1000D02C0();
        v15 = v11 - v12;
        if (2 * v15 > v14)
          v14 = 2 * v15;
        if (v15 >= 0x3FFFFFFFFFFFFFFFLL)
          v16 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v16 = v14;
        if (v16)
        {
          v17 = (int64_t)operator new(v16);
          v18 = (char *)(v17 + v13);
          *(_BYTE *)(v17 + v13) = v10;
          v19 = v17 + v13 + 1;
          if (v6 != (_BYTE *)v12)
            goto LABEL_17;
        }
        else
        {
          v17 = 0;
          v18 = &v6[-*a2];
          *(_BYTE *)v13 = v10;
          v19 = v13 + 1;
          if (v6 != (_BYTE *)v12)
          {
LABEL_17:
            if (v13 < 8
              || v17 + v13 + v12 - (_QWORD)v6 > v17 + v13 - 1
              || v12 > (unint64_t)(v6 - 1)
              || v12 - v17 < 0x20)
            {
              v20 = v6;
            }
            else if (v13 >= 0x20)
            {
              v23 = v13 & 0xFFFFFFFFFFFFFFE0;
              v24 = (_OWORD *)(v17 + v13 - 16);
              v25 = (__int128 *)(v6 - 16);
              v26 = v13 & 0xFFFFFFFFFFFFFFE0;
              do
              {
                v27 = *v25;
                *(v24 - 1) = *(v25 - 1);
                *v24 = v27;
                v24 -= 2;
                v25 -= 2;
                v26 -= 32;
              }
              while (v26);
              if (v13 == v23)
                goto LABEL_21;
              if ((v13 & 0x18) != 0)
                goto LABEL_37;
              v18 -= v23;
              v20 = &v6[-v23];
            }
            else
            {
              v23 = 0;
LABEL_37:
              v20 = &v6[-(v13 & 0xFFFFFFFFFFFFFFF8)];
              v18 -= v13 & 0xFFFFFFFFFFFFFFF8;
              v28 = &v6[-v23 - v12 - 8 + v17];
              v29 = (uint64_t *)&v6[-v23 - 8];
              v30 = v23 - (v13 & 0xFFFFFFFFFFFFFFF8);
              do
              {
                v31 = *v29--;
                *v28-- = v31;
                v30 += 8;
              }
              while (v30);
              if (v13 == (v13 & 0xFFFFFFFFFFFFFFF8))
              {
LABEL_21:
                v6 = (_BYTE *)*a2;
                *a2 = v17;
                a2[1] = v19;
                a2[2] = v17 + v16;
                if (!v6)
                  goto LABEL_26;
LABEL_25:
                operator delete(v6);
                goto LABEL_26;
              }
            }
            v21 = v18 - 1;
            do
            {
              v22 = *--v20;
              *v21-- = v22;
            }
            while (v20 != (_BYTE *)v12);
            goto LABEL_21;
          }
        }
        *a2 = (unint64_t)v18;
        a2[1] = v19;
        a2[2] = v17 + v16;
        if (v6)
          goto LABEL_25;
LABEL_26:
        v6 = (_BYTE *)v19;
        a2[1] = v19;
        if (++v9 == v8)
        {
LABEL_3:
          v5 = (int *)__p;
          v4 = v50;
          break;
        }
      }
    }
    ++v7;
  }
  while (v7 < (unint64_t)((v4 - (_BYTE *)v5) >> 2) >> 1);
  v32 = *a2;
  v33 = (unint64_t)&v6[-*a2];
  if (a2[2] - *a2 > v33)
  {
    if (v6 == (_BYTE *)v32)
    {
      v35 = &v6[-*a2];
      v34 = (unint64_t)v35;
    }
    else
    {
      v34 = (unint64_t)operator new((size_t)&v6[-*a2]);
      v35 = (char *)(v34 + v33);
      if (v33 < 8 || (unint64_t)&v6[~(unint64_t)&v6[~v32 + v34]] < 0x20)
      {
        v36 = v6;
        v37 = (char *)(v34 + v33);
        goto LABEL_47;
      }
      if (v33 >= 0x20)
      {
        v40 = v33 & 0xFFFFFFFFFFFFFFE0;
        v41 = (__int128 *)(v6 - 16);
        v42 = &v6[v34 - v32 - 16];
        v43 = v33 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v44 = *v41;
          *(v42 - 1) = *(v41 - 1);
          *v42 = v44;
          v42 -= 2;
          v41 -= 2;
          v43 -= 32;
        }
        while (v43);
        if (v33 != v40)
        {
          if ((v33 & 0x18) == 0)
          {
            v37 = &v35[-v40];
            v36 = &v6[-v40];
            goto LABEL_47;
          }
          goto LABEL_62;
        }
      }
      else
      {
        v40 = 0;
LABEL_62:
        v36 = &v6[-(v33 & 0xFFFFFFFFFFFFFFF8)];
        v37 = &v35[-(v33 & 0xFFFFFFFFFFFFFFF8)];
        v45 = &v6[-8 - v40 - v32];
        v46 = (uint64_t *)&v6[-8 - v40];
        v47 = v40 - (v33 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v48 = *v46--;
          *(_QWORD *)&v45[v34] = v48;
          v45 -= 8;
          v47 += 8;
        }
        while (v47);
        if (v33 != (v33 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_47:
          v38 = v37 - 1;
          do
          {
            v39 = *--v36;
            *v38-- = v39;
          }
          while (v36 != (_BYTE *)v32);
        }
      }
    }
    *a2 = v34;
    a2[1] = (unint64_t)v35;
    a2[2] = (unint64_t)v35;
    if (v32)
      operator delete((void *)v32);
  }
LABEL_53:
  if (__p)
  {
    v50 = __p;
    operator delete(__p);
  }
}

void sub_1002BDC78(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1002BDBA0);
}

void sub_1002BDC88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;
  void *v12;
  void *v14;

  if (v12)
  {
    *(_QWORD *)(v11 + 8) = v12;
    operator delete(v12);
    v14 = __p;
    if (!__p)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v14 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

void sub_1002BDCD0(uint64_t a1@<X0>, int **a2@<X8>)
{
  int v4[6];

  sub_10006FF64(a1, 0);
  sub_100258CD8(a1, 2);
  if (sub_100258C40(a1, 1))
  {
    sub_1001E0884((uint64_t)v4, *(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_DWORD *)(a1 + 16));
    sub_100242834(v4, a2);
  }
  else
  {
    sub_1001E0884((uint64_t)v4, *(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_DWORD *)(a1 + 16));
    sub_1001E0890(v4, a2);
  }
}

__n128 *sub_1002BDD64(__n128 *a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  uint64_t v8;

  sub_10003FADC(a1, a4);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a2;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  sub_1000BAE08(v8 + 32, a3);
  sub_100047C20((uint64_t)a4);
  return a1;
}

void sub_1002BDE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;
  uint64_t v21;

  if (a14 < 0)
  {
    operator delete(__p);
    sub_1000BA0F0(v21);
    sub_1000E095C(v20);
    _Unwind_Resume(a1);
  }
  sub_1000BA0F0(v21);
  sub_1000E095C(v20);
  _Unwind_Resume(a1);
}

uint64_t sub_1002BDEF0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  sub_1000BA0F0(a1 + 32);
  v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_1002BDF60(uint64_t a1, double *a2, unint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v12;
  double **v13;
  float v14;
  void *v15;
  int64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  void *v29;
  unint64_t *v30;
  unint64_t v31;
  double v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  size_t v37;
  void *v38;
  char *v39;
  int64_t v40;
  char *v41;
  char *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  double *v51;
  BOOL v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  __n128 *v56;
  unint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  std::__shared_weak_count *v62;
  unint64_t *p_shared_owners;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v81;
  unint64_t v83;
  uint64_t v86;
  std::__shared_weak_count *v87;
  void *v88;
  _BYTE *v89;
  char *v90;
  void *v91;
  char *v92;
  char *v93;
  void *__p;
  unint64_t v95;
  unint64_t v96;
  __n128 v97;
  __int128 v98;
  __int128 v99;
  __int16 v100;
  __int128 v101;
  uint64_t v102;
  double v103;
  void *v104;
  _QWORD *v105;
  char *v106;
  char *v107;

  v12 = a7 - a6;
  if (a7 - a6 > a3)
  {
    sub_1000D5048(&v104, "");
    sub_1002BEB54("For now this is not allowed. You can't have more output particles than siblings.", (std::string *)&v97);
    sub_100174738((uint64_t)&v104, (uint64_t)&v97, 1);
    if (SBYTE7(v98) < 0)
      operator delete((void *)v97.n128_u64[0]);
    if (SHIBYTE(v106) < 0)
      operator delete(v104);
    sub_10015C2DC((uint64_t)&__p);
  }
  v13 = *(double ***)(a1 + 48);
  v83 = a7 - a6;
  if (!v13
    || (v14 = (*(float (**)(_QWORD))(***(_QWORD ***)(a1 + 16) + 32))(**(_QWORD **)(a1 + 16)),
        sub_10023FD90(v13, 0, a3, (uint64_t)&v97, v14),
        !v97.n128_u8[0]))
  {
    LOBYTE(v104) = 0;
    v20 = 0;
    v23 = *(uint64_t **)(a1 + 16);
    v22 = v23 + 2;
    v24 = *v23;
    v21 = v23 + 3;
    v81 = v24;
    goto LABEL_12;
  }
  LOBYTE(v104) = 0;
  v106 = 0;
  v107 = 0;
  v105 = 0;
  v15 = (void *)v97.n128_u64[1];
  v16 = v98 - v97.n128_u64[1];
  if ((_QWORD)v98 == v97.n128_u64[1])
  {
    v17 = 0;
    v18 = 0;
    v12 = v83;
    LOBYTE(v104) = 1;
    if (!v97.n128_u64[1])
      goto LABEL_8;
  }
  else
  {
    if (v16 < 0)
      sub_1000D02C0();
    v17 = operator new(v98 - v97.n128_u64[1]);
    v18 = (char *)&v17[v16 >> 3];
    v105 = v17;
    v107 = v18;
    memcpy(v17, v15, v16);
    v106 = v18;
    v12 = v83;
    LOBYTE(v104) = 1;
    if (!v15)
      goto LABEL_8;
  }
  *(_QWORD *)&v98 = v15;
  operator delete(v15);
LABEL_8:
  v19 = *(uint64_t **)(a1 + 16);
  v81 = *v19;
  if (!v19[4])
  {
    sub_1000D5048(&__p, "");
    sub_10015BE2C("Asking for auxiliary injection but you never defined an auxiliary ParticleGenerator in particle_generator.cpp:newParticleGeneratorImpl!!", (std::string *)&v97);
    sub_100174738((uint64_t)&__p, (uint64_t)&v97, 1);
    if (SBYTE7(v98) < 0)
      operator delete((void *)v97.n128_u64[0]);
    if (SHIBYTE(v96) < 0)
      operator delete(__p);
    sub_1000F2AE4((uint64_t)&v91);
  }
  v20 = *(_QWORD **)(a1 + 48);
  if (v12 > (v18 - (char *)v17) >> 3)
  {
    sub_1000D5048(&v97, "");
    sub_100174738((uint64_t)&v97, 0, 0);
    if (SBYTE7(v98) < 0)
      operator delete((void *)v97.n128_u64[0]);
    sub_1000F2AE4((uint64_t)&__p);
  }
  v21 = (uint64_t *)(*(_QWORD *)(a1 + 16) + 32);
  v22 = v21;
LABEL_12:
  v77 = *v21;
  v78 = *v22;
  v88 = 0;
  v89 = 0;
  v90 = 0;
  if (a7 != a6)
  {
    if (v12 >> 61)
      sub_1000D02C0();
    v88 = operator new(8 * v12);
    v90 = (char *)v88 + 8 * v12;
    bzero(v88, 8 * v12);
    v47 = 0;
    v89 = v90;
    do
    {
      v48 = v47 + a6;
      v49 = *(_QWORD *)a4;
      if ((unint64_t)(v47 + a6) < *(_QWORD *)a4)
      {
        v50 = *(_QWORD *)(a4 + 16);
        if (v48 >= 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v50 - *(_QWORD *)(a4 + 8)) >> 4))
        {
          if (v50 >= *(_QWORD *)(a4 + 24))
          {
            v51 = sub_1002BEBA0((double **)(a4 + 8), a2);
          }
          else
          {
            sub_100223460(*(double **)(a4 + 16), a2);
            v51 = (double *)(v50 + 80);
            *(_QWORD *)(a4 + 16) = v50 + 80;
          }
          *(_QWORD *)(a4 + 16) = v51;
          v49 = *(_QWORD *)a4;
        }
      }
      v52 = v48 >= v49;
      if (v48 < v49)
        v49 = 0;
      v53 = a5;
      if (!v52)
        v53 = (uint64_t *)(a4 + 8);
      v54 = v48 - v49;
      v55 = *v53;
      v56 = (__n128 *)(*v53 + 80 * v54);
      *((_QWORD *)v88 + v47) = v56;
      if ((_BYTE)v104)
      {
        v57 = v105[v47];
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v20[1] - *v20) >> 4) <= v57)
          sub_1001E2FA0();
        sub_100223490(v97.n128_f64, *v20 + 80 * v57, a2);
        sub_10003FADC(v56, &v97);
        v58 = v55 + 80 * v54;
        v59 = v98;
        v60 = v99;
        *(_WORD *)(v58 + 48) = v100;
        *(_OWORD *)(v58 + 16) = v59;
        *(_OWORD *)(v58 + 32) = v60;
        v61 = v101;
        v101 = 0uLL;
        v62 = *(std::__shared_weak_count **)(v58 + 64);
        *(_OWORD *)(v58 + 56) = v61;
        if (v62)
        {
          p_shared_owners = (unint64_t *)&v62->__shared_owners_;
          do
            v64 = __ldaxr(p_shared_owners);
          while (__stlxr(v64 - 1, p_shared_owners));
          if (!v64)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v62);
          }
        }
        *(_QWORD *)(v55 + 80 * v54 + 72) = v102;
        v65 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
        v12 = v83;
        if (!*((_QWORD *)&v101 + 1))
          goto LABEL_44;
        v66 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
        do
          v67 = __ldaxr(v66);
        while (__stlxr(v67 - 1, v66));
      }
      else
      {
        sub_100223460(v97.n128_f64, a2);
        sub_10003FADC(v56, &v97);
        v68 = v55 + 80 * v54;
        v69 = v98;
        v70 = v99;
        *(_WORD *)(v68 + 48) = v100;
        *(_OWORD *)(v68 + 16) = v69;
        *(_OWORD *)(v68 + 32) = v70;
        v71 = v101;
        v101 = 0uLL;
        v72 = *(std::__shared_weak_count **)(v68 + 64);
        *(_OWORD *)(v68 + 56) = v71;
        if (v72)
        {
          v73 = (unint64_t *)&v72->__shared_owners_;
          do
            v74 = __ldaxr(v73);
          while (__stlxr(v74 - 1, v73));
          if (!v74)
          {
            ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
            std::__shared_weak_count::__release_weak(v72);
          }
        }
        *(_QWORD *)(v55 + 80 * v54 + 72) = v102;
        v65 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
        v12 = v83;
        if (!*((_QWORD *)&v101 + 1))
          goto LABEL_44;
        v75 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
        do
          v67 = __ldaxr(v75);
        while (__stlxr(v67 - 1, v75));
      }
      if (!v67)
      {
        ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
        std::__shared_weak_count::__release_weak(v65);
      }
LABEL_44:
      ++v47;
    }
    while (v47 != v12);
  }
  v25 = a1 + 32;
  if (!*(_BYTE *)(a1 + 112))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void **, uint64_t))(*(_QWORD *)v78 + 16))(v78, v81, a1 + 32, &v88, a8);
    v44 = a7;
    goto LABEL_77;
  }
  sub_1001A3BF0(&v97, a1 + 120);
  sub_10015ECCC(v25, (uint64_t)&v97, &v86);
  v26 = 1.0;
  if (sub_1000C7EA4((uint64_t)&v97))
  {
    v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v86 + 40))(v86);
    v29 = *(void **)v27;
    v28 = *(std::__shared_weak_count **)(v27 + 8);
    __p = *(void **)v27;
    v95 = (unint64_t)v28;
    if (v28)
    {
      v30 = (unint64_t *)&v28->__shared_owners_;
      do
        v31 = __ldxr(v30);
      while (__stxr(v31 + 1, v30));
    }
    v26 = (*(double (**)(void *))(*(_QWORD *)v29 + 88))(v29);
    v32 = v103;
    if (v32 >= (*(double (**)(void *))(*(_QWORD *)v29 + 80))(v29))
      v26 = 0.0;
    if (v28)
    {
      v33 = (unint64_t *)&v28->__shared_owners_;
      do
        v34 = __ldaxr(v33);
      while (__stlxr(v34 - 1, v33));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
    if (v26 < 0.0)
    {
      sub_1000D5048(&__p, "");
      sub_100174738((uint64_t)&__p, 0, 0);
      if (SHIBYTE(v96) < 0)
        operator delete(__p);
      sub_1000F2AE4((uint64_t)&v91);
    }
  }
  v35 = vcvtmd_s64_f64(v26 * (double)v12);
  v36 = (char *)v88;
  v37 = 8 * v35;
  v95 = 0;
  v96 = 0;
  __p = 0;
  if (!v35)
  {
    v38 = 0;
    v39 = (char *)v88 + v37;
    v92 = 0;
    v93 = 0;
    v91 = 0;
    v40 = v89 - ((_BYTE *)v88 + v37);
    if (v89 != (char *)v88 + v37)
      goto LABEL_29;
LABEL_92:
    v42 = 0;
    v41 = 0;
    if (v38 != (void *)v35)
      goto LABEL_31;
    goto LABEL_93;
  }
  if ((v35 & 0x8000000000000000) != 0)
    sub_1000D02C0();
  v38 = operator new(8 * v35);
  __p = v38;
  v95 = (unint64_t)v38;
  v35 = (unint64_t)v38 + 8 * v35;
  v96 = v35;
  memmove(v38, v36, v37);
  v95 = v35;
  v39 = &v36[v37];
  v92 = 0;
  v93 = 0;
  v91 = 0;
  v40 = v89 - &v36[v37];
  if (v89 == &v36[v37])
    goto LABEL_92;
LABEL_29:
  if (v40 < 0)
    sub_1000D02C0();
  v41 = (char *)operator new(v40);
  v91 = v41;
  v92 = v41;
  v42 = &v41[8 * (v40 >> 3)];
  v93 = v42;
  memmove(v41, v39, v40);
  v92 = v42;
  if (v38 != (void *)v35)
  {
LABEL_31:
    (*(void (**)(uint64_t, uint64_t, uint64_t, void **, uint64_t))(*(_QWORD *)v77 + 16))(v77, v81, v25, &__p, a8);
    v42 = v92;
    if (v91 == v92)
      goto LABEL_32;
LABEL_94:
    (*(void (**)(uint64_t, uint64_t, uint64_t, void **, uint64_t))(*(_QWORD *)v78 + 16))(v78, v81, v25, &v91, a8);
    v42 = (char *)v91;
    if (!v91)
      goto LABEL_34;
    goto LABEL_33;
  }
LABEL_93:
  if (v41 != v42)
    goto LABEL_94;
LABEL_32:
  if (v42)
  {
LABEL_33:
    v92 = v42;
    operator delete(v42);
  }
LABEL_34:
  if (__p)
  {
    v95 = (unint64_t)__p;
    operator delete(__p);
  }
  v43 = v87;
  v44 = a7;
  if (v87)
  {
    v45 = (unint64_t *)&v87->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  sub_10000CF0C((uint64_t)&v97);
LABEL_77:
  if (v44 != a6)
  {
    v76 = 0;
    do
    {
      if (!*(_QWORD *)(*((_QWORD *)v88 + v76) + 56))
      {
        sub_1000D5048(&v97, "");
        sub_100174738((uint64_t)&v97, 0, 0);
        if (SBYTE7(v98) < 0)
          operator delete((void *)v97.n128_u64[0]);
        sub_1000F2AE4((uint64_t)&__p);
      }
      ++v76;
    }
    while (v12 != v76);
  }
  if (v88)
  {
    v89 = v88;
    operator delete(v88);
  }
  if ((_BYTE)v104)
  {
    if (v105)
      operator delete(v105);
  }
}

void sub_1002BE964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,_Unwind_Exception *exception_objecta,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,void *a37,uint64_t a38)
{
  uint64_t v38;
  void *v40;

  if (a35 < 0)
    operator delete(__p);
  v40 = *(void **)(v38 - 136);
  if (!v40)
    _Unwind_Resume(exception_object);
  operator delete(v40);
  _Unwind_Resume(exception_object);
}

std::string *sub_1002BEB54@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002BEB84(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

double *sub_1002BEBA0(double **a1, double *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  double *v8;
  double *v9;
  __n128 *v10;
  __n128 *v11;
  double *v12;
  __n128 *v13;
  double *v14;
  __n128 v15;
  __n128 v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  __n128 *v20;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  double *v25;
  __n128 *v26;
  char *v27;

  v3 = 0xCCCCCCCCCCCCCCCDLL * (((char *)a1[1] - (char *)*a1) >> 4);
  v4 = v3 + 1;
  if (v3 + 1 > 0x333333333333333)
    sub_1000D02C0();
  if (0x999999999999999ALL * (((char *)a1[2] - (char *)*a1) >> 4) > v4)
    v4 = 0x999999999999999ALL * (((char *)a1[2] - (char *)*a1) >> 4);
  if (0xCCCCCCCCCCCCCCCDLL * (((char *)a1[2] - (char *)*a1) >> 4) >= 0x199999999999999)
    v6 = 0x333333333333333;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x333333333333333)
      sub_1000CDEB8();
    v7 = (char *)operator new(80 * v6);
  }
  else
  {
    v7 = 0;
  }
  v25 = (double *)&v7[80 * v3];
  v27 = &v7[80 * v6];
  sub_100223460(v25, a2);
  v8 = v25;
  v9 = v25 + 10;
  v11 = (__n128 *)*a1;
  v10 = (__n128 *)a1[1];
  if (v10 == (__n128 *)*a1)
  {
    v20 = (__n128 *)a1[1];
  }
  else
  {
    v12 = v25;
    do
    {
      v13 = v10 - 5;
      sub_10003FADC((__n128 *)v12 - 5, v10 - 5);
      v15 = v10[-4];
      v16 = v10[-3];
      *((_WORD *)v12 - 16) = v10[-2].n128_u16[0];
      *((__n128 *)v12 - 4) = v15;
      *((__n128 *)v12 - 3) = v16;
      *(v12 - 3) = v10[-2].n128_f64[1];
      v17 = v10[-1].n128_u64[0];
      *((_QWORD *)v12 - 2) = v17;
      if (v17)
      {
        v18 = (unint64_t *)(v17 + 8);
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
      }
      *(v12 - 1) = v10[-1].n128_f64[1];
      v12 = v14;
      v10 -= 5;
    }
    while (v13 != v11);
    v20 = (__n128 *)*a1;
    v10 = (__n128 *)a1[1];
    v8 = v14;
    v9 = v25 + 10;
  }
  *a1 = v8;
  a1[1] = v9;
  a1[2] = (double *)v27;
  if (v10 == v20)
  {
    if (v10)
LABEL_22:
      operator delete(v10);
  }
  else
  {
    do
    {
      v26 = v10 - 5;
      v22 = (std::__shared_weak_count *)v10[-1].n128_u64[0];
      if (v22)
      {
        p_shared_owners = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldaxr(p_shared_owners);
        while (__stlxr(v24 - 1, p_shared_owners));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      v10 -= 5;
    }
    while (v26 != v20);
    v10 = v20;
    if (v20)
      goto LABEL_22;
  }
  return v9;
}

void sub_1002BEDA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1002243F8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002BEDE4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BEE40()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002BEE9C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  size_t v5;
  char *v6;

  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  v3 = a2 + a2 * a2;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  if (v3 >= 2)
  {
    if (v3 >> 62)
      sub_1000D02C0();
    v4 = v3 >> 1;
    v5 = 8 * (v3 >> 1);
    v6 = (char *)operator new(v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = &v6[8 * v4];
    bzero(v6, v5);
    *(_QWORD *)(a1 + 24) = &v6[v5];
  }
  return a1;
}

void sub_1002BEF30(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 24) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1002BEF4C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  return *(_QWORD *)(a1 + 16) + 8 * sub_1002BF424(a1, a2, a3);
}

uint64_t sub_1002BEF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v6;
  _BYTE *v7;
  int64_t v8;
  char *v9;
  char *v10;
  void *v12;
  void *v13[2];
  char v14;
  std::string __p;

  *(_DWORD *)a1 = *(_DWORD *)a3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  v7 = *(_BYTE **)(a3 + 16);
  v6 = *(_BYTE **)(a3 + 24);
  v8 = v6 - v7;
  if (v6 != v7)
  {
    if (v8 < 0)
      sub_1000D02C0();
    v9 = (char *)operator new(v6 - v7);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v9;
    v10 = &v9[8 * (v8 >> 3)];
    *(_QWORD *)(a1 + 32) = v10;
    memcpy(v9, v7, v8);
    *(_QWORD *)(a1 + 24) = v10;
  }
  if (*(_QWORD *)(a3 + 8) != a2)
  {
    sub_1000D5048(v13, "");
    sub_1002C0644("Size of matrix doesn't match expected size!", &__p);
    sub_100174738((uint64_t)v13, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v14 < 0)
      operator delete(v13[0]);
    sub_10015C2DC((uint64_t)&v12);
  }
  return a1;
}

void sub_1002BF0C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;
  void **v21;
  void *v23;

  if (a14 < 0)
    operator delete(__p);
  v23 = *v21;
  if (*v21)
  {
    *(_QWORD *)(v20 + 24) = v23;
    operator delete(v23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002BF114(uint64_t result, uint64_t a2, _DWORD *a3)
{
  *(_DWORD *)result = *a3;
  *(_QWORD *)(result + 8) = a2;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1002BF128(uint64_t result, double a2)
{
  int64x2_t *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  double *v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  v2 = *(int64x2_t **)(result + 16);
  v3 = *(_QWORD *)(result + 24) - (_QWORD)v2;
  if ((uint64_t)v3 >= 1)
  {
    v4 = v3 >> 3;
    v5 = (v3 >> 3) - (v3 > 7) + 1;
    if (v5 < 4)
    {
      v6 = *(double **)(result + 16);
LABEL_7:
      v10 = v4 + 1;
      do
      {
        *v6++ = a2;
        --v10;
      }
      while (v10 > 1);
      return result;
    }
    v4 -= v5 & 0xFFFFFFFFFFFFFFFCLL;
    v6 = (double *)&v2->i64[v5 & 0xFFFFFFFFFFFFFFFCLL];
    v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
    v8 = v2 + 1;
    v9 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v8[-1] = v7;
      *v8 = v7;
      v8 += 2;
      v9 -= 4;
    }
    while (v9);
    if (v5 != (v5 & 0xFFFFFFFFFFFFFFFCLL))
      goto LABEL_7;
  }
  return result;
}

double sub_1002BF1A4(uint64_t a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  _OWORD *v10;
  uint64_t *v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v22[2];
  void *__p[2];
  char v24;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = (v2 - v3) >> 3;
  if (v4 != (uint64_t)(a2[1] - *a2) >> 4)
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v24 < 0)
      operator delete(__p[0]);
    sub_10015C2DC((uint64_t)v22);
  }
  if (*(_DWORD *)a1)
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v24 < 0)
      operator delete(__p[0]);
    sub_1000F2AE4((uint64_t)v22);
  }
  if (v2 != v3)
  {
    v5 = *a2;
    v6 = *(_QWORD *)(a1 + 16);
    if (v4 <= 1)
      v7 = 1;
    else
      v7 = (v2 - v3) >> 3;
    if (v7 < 0xA || (v6 < v5 + 16 * v7 - 8 ? (v8 = v5 >= v6 + 8 * v7) : (v8 = 1), !v8))
    {
      v9 = 0;
LABEL_18:
      v17 = v7 - v9;
      v18 = (uint64_t *)(v5 + 16 * v9);
      v19 = (_QWORD *)(v6 + 8 * v9);
      do
      {
        v20 = *v18;
        v18 += 2;
        *(_QWORD *)&v14 = v20;
        *v19++ = v20;
        --v17;
      }
      while (v17);
      return *(double *)&v14;
    }
    v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    v10 = (_OWORD *)(v6 + 16);
    v11 = (uint64_t *)(v5 + 32);
    v12 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v13 = v11 + 2;
      *(_QWORD *)&v14 = *(v11 - 4);
      *((_QWORD *)&v14 + 1) = *(v11 - 2);
      v15 = *v11;
      v11 += 8;
      *(_QWORD *)&v16 = v15;
      *((_QWORD *)&v16 + 1) = *v13;
      *(v10 - 1) = v14;
      *v10 = v16;
      v10 += 2;
      v12 -= 4;
    }
    while (v12);
    if (v7 != v9)
      goto LABEL_18;
  }
  return *(double *)&v14;
}

void sub_1002BF33C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1002BF35C(_QWORD *result, uint64_t a2)
{
  void *v2;
  void *__p[2];
  char v4;

  if (*(_QWORD *)(a2 + 8) != result[1])
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v4 < 0)
      operator delete(__p[0]);
    sub_10015C2DC((uint64_t)&v2);
  }
  *(_DWORD *)result = *(_DWORD *)a2;
  if (result != (_QWORD *)a2)
    return sub_100199588(result + 2, *(char **)(a2 + 16), *(char **)(a2 + 24), (uint64_t)(*(_QWORD *)(a2 + 24) - *(_QWORD *)(a2 + 16)) >> 3);
  return result;
}

void sub_1002BF408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unint64_t sub_1002BF424(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v8[2];
  void *__p[2];
  char v10;

  v3 = *(_QWORD *)(a1 + 8);
  if (v3 <= a2)
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v10 < 0)
      operator delete(__p[0]);
    sub_10015C2DC((uint64_t)v8);
  }
  if (v3 <= a3)
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v10 < 0)
      operator delete(__p[0]);
    sub_10015C2DC((uint64_t)v8);
  }
  if (a3 >= a2)
    v4 = a2;
  else
    v4 = a3;
  v5 = 2 * v3;
  if (a3 <= a2)
    v6 = a2;
  else
    v6 = a3;
  return v6 - v4 + ((v4 + v4 * (v5 - v4)) >> 1);
}

void sub_1002BF538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002BF558(unsigned int *a1)
{
  return *a1;
}

uint64_t sub_1002BF560@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  return result;
}

BOOL sub_1002BF56C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  v1 = *(_QWORD *)(a1 + 24);
  if (v2 == v1)
    return *(_DWORD *)a1 != 1;
  v3 = v2 + 8;
  do
  {
    v4 = (*(_QWORD *)(v3 - 8) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
    v5 = (*(_QWORD *)(v3 - 8) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v3 == v1;
    v3 += 8;
  }
  while (!v5);
  return v4 && *(_DWORD *)a1 != 1;
}

double sub_1002BF5C0(uint64_t a1, unint64_t a2)
{
  unint64_t *v3;
  double v4;
  unint64_t v5;
  unint64_t v7;
  void *__p;
  void *v9[2];
  char v10;
  std::string v11;
  std::string v12;
  std::string v13;
  std::string v14;

  v7 = a2;
  v3 = (unint64_t *)(a1 + 8);
  if (*(_QWORD *)(a1 + 8) < a2)
  {
    sub_1000D5048(v9, "");
    sub_1002C0690("Trace dimension of ", &v11);
    sub_1001E2B30(&v7, &v12);
    sub_10023DB80(" exceeds range of matrix ", &v13);
    sub_1001E2B30(v3, &v14);
    sub_100174738((uint64_t)v9, (uint64_t)&v11, 4);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v14.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete(v13.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
        goto LABEL_15;
LABEL_20:
      operator delete(v9[0]);
LABEL_15:
      sub_10015C2DC((uint64_t)&__p);
    }
LABEL_19:
    operator delete(v11.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  if (*(_DWORD *)a1 == 1)
    return INFINITY;
  if (!v7)
  {
    v7 = *v3;
    if (!v7)
      return 0.0;
  }
  v5 = 0;
  v4 = 0.0;
  do
  {
    v4 = v4 + *(double *)(*(_QWORD *)(a1 + 16) + 8 * sub_1002BF424(a1, v5, v5));
    ++v5;
  }
  while (v5 < v7);
  return v4;
}

void sub_1002BF7CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002BF83C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  uint64_t v10;
  _QWORD v11[10];
  char v12;
  uint64_t v13;

  sub_1000FC5A4((uint64_t)v9);
  if (*(_QWORD *)(a1 + 8))
  {
    v2 = 0;
    v3 = 1;
    do
    {
      sub_1000F0508(&v10, (uint64_t)"[", 1);
      v4 = 0;
      do
      {
        sub_1000F0508(&v10, (uint64_t)" ", 1);
        v5 = v10;
        *(_QWORD *)((char *)&v11[1] + *(_QWORD *)(v10 - 24)) = 16;
        *(_DWORD *)((char *)v11 + *(_QWORD *)(v5 - 24)) = *(_DWORD *)((_BYTE *)v11 + *(_QWORD *)(v5 - 24)) & 0xFFFFFEFB | 0x100;
        v6 = sub_1002BF424(a1, v2, v4);
        std::ostream::operator<<(*(double *)(*(_QWORD *)(a1 + 16) + 8 * v6));
        sub_1000F0508(&v10, (uint64_t)" ", 1);
        ++v4;
      }
      while (v3 != v4);
      sub_1000F0508(&v10, (uint64_t)"]\n", 2);
      ++v2;
      ++v3;
    }
    while (v2 < *(_QWORD *)(a1 + 8));
  }
  std::stringbuf::str(v11);
  *(_QWORD *)((char *)v9
  v10 = v7;
  if (v12 < 0)
    operator delete((void *)v11[8]);
  std::streambuf::~streambuf(v11);
  return std::ios::~ios(&v13);
}

void sub_1002BF9D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1000FC6DC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002BF9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1000FC6DC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002BFA00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1000FC6DC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002BFA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1000FC6DC((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1002BFA28(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char __p[17];
  char v20;
  _BYTE v21[24];
  std::string v22;
  std::runtime_error v23;

  v4 = sub_1000F0508(a1, (uint64_t)"SymmetricMatrix64F(fDim:", 24);
  v5 = (_QWORD *)std::ostream::operator<<(v4, *(_QWORD *)(a2 + 8));
  v6 = sub_1000F0508(v5, (uint64_t)", fSentinel:", 12);
  if (*(_DWORD *)a2 == 1)
  {
    v7 = 16;
    v20 = 16;
    strcpy(__p, "InfiniteVariance");
  }
  else
  {
    if (*(_DWORD *)a2)
    {
      __cxa_allocate_exception(0x40uLL);
      sub_1000D5048(&v22, "Unrecognized SentinelMatrix value to do toString on");
      std::runtime_error::runtime_error(&v23, &v22);
      v23.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
      sub_10018D04C((uint64_t)v21);
      sub_1000F2F7C(&v23, (uint64_t)"std::string toString(SentinelMatrix)", (uint64_t)"../../../common/util/to_string.h", 54, (uint64_t)v21);
    }
    v7 = 7;
    v20 = 7;
    strcpy(__p, "Default");
  }
  v8 = sub_1000F0508(v6, (uint64_t)__p, v7);
  sub_1000F0508(v8, (uint64_t)", fAp:[", 7);
  if (v20 < 0)
    operator delete(*(void **)__p);
  if (*(_QWORD *)(a2 + 8))
  {
    v9 = 0;
    v10 = a1 + 2;
    v11 = a1 + 1;
    v12 = 1;
    do
    {
      if (v9)
        sub_1000F0508(a1, (uint64_t)" ", 1);
      sub_1000F0508(a1, (uint64_t)"[", 1);
      v13 = *a1;
      *(_QWORD *)((char *)v10 + *(_QWORD *)(*a1 - 24)) = 16;
      *(_DWORD *)((char *)v11 + *(_QWORD *)(v13 - 24)) = *(_DWORD *)((_BYTE *)v11 + *(_QWORD *)(v13 - 24)) & 0xFFFFFEFB | 0x100;
      v14 = sub_1002BF424(a2, v9, 0);
      std::ostream::operator<<(*(double *)(*(_QWORD *)(a2 + 16) + 8 * v14));
      if (v12 != 1)
      {
        v15 = 0;
        do
        {
          ++v15;
          sub_1000F0508(a1, (uint64_t)",", 1);
          v16 = *a1;
          *(_QWORD *)((char *)v10 + *(_QWORD *)(*a1 - 24)) = 16;
          *(_DWORD *)((char *)v11 + *(_QWORD *)(v16 - 24)) = *(_DWORD *)((_BYTE *)v11 + *(_QWORD *)(v16 - 24)) & 0xFFFFFEFB | 0x100;
          v17 = sub_1002BF424(a2, v9, v15);
          std::ostream::operator<<(*(double *)(*(_QWORD *)(a2 + 16) + 8 * v17));
        }
        while (v9 != v15);
      }
      sub_1000F0508(a1, (uint64_t)"]", 1);
      ++v9;
      ++v12;
    }
    while (v9 < *(_QWORD *)(a2 + 8));
  }
  return sub_1000F0508(a1, (uint64_t)"])", 2);
}

void sub_1002BFCD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,std::runtime_error a25)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a25);
  if (a24 < 0)
    operator delete(a19);
  _Unwind_Resume(a1);
}

void sub_1002BFD64(uint64_t a1)
{
  _BYTE v1[8];

  sub_1002BFEC4(a1, v1);
  if (v1[0])
    operator new();
  operator new();
}

void sub_1002BFE60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (a10)
  {
    if (__p)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_1002BFEC4(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  __CLPK_integer __n;
  void *v7;
  void *v8[2];
  char v9;
  std::string __p;
  void *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  std::string v15;
  std::string v16;

  if (*(_DWORD *)a1)
  {
    sub_1000D5048(&v15, "");
    sub_1001709CC("Only normal SymmetricMatrix64F objects can be decomposed.", &__p);
    sub_100174738((uint64_t)&v15, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v15.__r_.__value_.__l.__data_);
    sub_1000F2AE4((uint64_t)v8);
  }
  v4 = *(_QWORD *)(a1 + 8);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1003FBF40;
  __p.__r_.__value_.__l.__size_ = (std::string::size_type)"L";
  v11 = 0;
  v12 = 0;
  __p.__r_.__value_.__r.__words[2] = 0;
  v13 = 0;
  v14 = v4;
  __n = sub_1001D2D84((uint64_t)&__p);
  if (&__p.__r_.__value_.__r.__words[2] != (std::string::size_type *)(a1 + 16))
    sub_100199588(&__p.__r_.__value_.__r.__words[2], *(char **)(a1 + 16), *(char **)(a1 + 24), (uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 3);
  dpptrf_("L", &__n, (__CLPK_doublereal *)__p.__r_.__value_.__r.__words[2], &v13);
  if (v13 < 0)
  {
    sub_1000D5048(v8, "");
    sub_100242D34("Cannot LL factorize matrix. info = ", &v15);
    sub_10026A3D8(&v13, &v16);
    sub_100174738((uint64_t)v8, (uint64_t)&v15, 2);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v16.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_16:
        if ((v9 & 0x80000000) == 0)
          goto LABEL_17;
LABEL_22:
        operator delete(v8[0]);
LABEL_17:
        sub_1000F2AE4((uint64_t)&v7);
      }
    }
    else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v15.__r_.__value_.__l.__data_);
    if ((v9 & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_22;
  }
  if (v13 > 0)
  {
    *a2 = 0;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1003FBF40;
    v5 = (void *)__p.__r_.__value_.__r.__words[2];
    if (!__p.__r_.__value_.__r.__words[2])
      return;
    goto LABEL_7;
  }
  *a2 = 0;
  sub_1001D2CB4((uint64_t)(a2 + 8), (uint64_t)&__p);
  *a2 = 1;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1003FBF40;
  v5 = (void *)__p.__r_.__value_.__r.__words[2];
  if (__p.__r_.__value_.__r.__words[2])
  {
LABEL_7:
    v11 = v5;
    operator delete(v5);
  }
}

void sub_1002C0128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  if (a16 < 0)
    operator delete(__p);
  if (!a25)
    _Unwind_Resume(exception_object);
  operator delete(a25);
  _Unwind_Resume(exception_object);
}

void sub_1002C01DC(uint64_t a1, uint64_t a2, double a3)
{
  int v5;
  const double **v6;

  v5 = *(_DWORD *)(a1 + 8);
  v6 = (const double **)nullsub_10(a2);
  cblas_dspr(CblasColMajor, CblasLower, v5, a3, *v6, 1, *(double **)(a1 + 16));
}

void sub_1002C022C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  v5 = v3 - v4;
  if (v3 != v4)
  {
    if ((unint64_t)v5 >= 0x7FFFFFFFFFFFFFF9)
      sub_1000D02C0();
    v6 = (char *)operator new(2 * v5);
    *a2 = v6;
    a2[2] = &v6[16 * (v5 >> 3)];
    bzero(v6, 2 * v5);
    a2[1] = &v6[2 * v5];
  }
}

void sub_1002C02B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_1002C02CC(unint64_t *a1, uint64_t a2, double result)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double *v18;
  float64x2_t *v19;
  float64x2_t v20;
  float64x2_t v21;
  unint64_t v22;
  unint64_t v23;
  double *v24;
  double *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  void *__p[2];
  char v33;
  float64x2x2_t v34;
  float64x2x2_t v35;

  v30 = result;
  v4 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  v5 = (v3 - v4) >> 3;
  if (v5 != (uint64_t)(a1[1] - *a1) >> 4)
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v33 < 0)
      operator delete(__p[0]);
    sub_10015C2DC((uint64_t)&v31);
  }
  if (v3 != v4)
  {
    v6 = *a1;
    v7 = (uint64_t)(a1[1] - *a1) >> 4;
    v8 = *(_QWORD *)(a2 + 16);
    if (v5 <= 1)
      v9 = 1;
    else
      v9 = (v3 - v4) >> 3;
    v10 = v9 - 1;
    if (v7 < v9 - 1)
      v10 = (uint64_t)(a1[1] - *a1) >> 4;
    if (v10 > 0xD
      && (v6 + 16 * v10 >= v6 ? (v11 = v6 + 8 + 16 * v10 >= v6 + 8) : (v11 = 0),
          v11 ? (v12 = v10 >> 60 == 0) : (v12 = 0),
          v12 && (v6 < v8 + 8 * v10 + 8 ? (v13 = v8 >= 16 * v10 + v6 + 16) : (v13 = 1), v13)))
    {
      v14 = v10 + 1;
      v15 = v14 & 1;
      if ((v14 & 1) == 0)
        v15 = 2;
      v16 = v14 - v15;
      v17 = v16;
      v18 = (double *)*a1;
      v19 = *(float64x2_t **)(a2 + 16);
      do
      {
        v20 = *v19++;
        v34 = vld2q_f64(v18);
        v21 = vsubq_f64(vmulq_n_f64(v20, v30), v34.val[1]);
        v35.val[0] = vaddq_f64(v34.val[0], v21);
        v35.val[1] = vsubq_f64(vsubq_f64(v35.val[0], v34.val[0]), v21);
        vst2q_f64(v18, v35);
        v18 += 4;
        v17 -= 2;
      }
      while (v17);
    }
    else
    {
      v16 = 0;
    }
    v22 = v7 - v16;
    v23 = v9 - v16;
    v24 = (double *)(v8 + 8 * v16);
    v25 = (double *)(v6 + 16 * v16 + 8);
    do
    {
      if (!v22)
        sub_1001E2FA0();
      v26 = *v24++;
      v27 = v26 * v30 - *v25;
      v28 = *(v25 - 1);
      v29 = v28 + v27;
      result = v28 + v27 - v28 - v27;
      *(v25 - 1) = v29;
      *v25 = result;
      --v22;
      v25 += 2;
      --v23;
    }
    while (v23);
  }
  return result;
}

void sub_1002C0494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1002C04B0()
{
  return INFINITY;
}

void sub_1002C04C0()
{
  operator delete();
}

uint64_t sub_1002C04D4()
{
  return 1;
}

uint64_t sub_1002C04DC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

double sub_1002C04E4()
{
  return INFINITY;
}

void sub_1002C04F0()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003974B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Cannot multiply a degenerate decomposition");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"virtual DenseMatrix64F DegenerateDecompositionLl64F::mult(const DenseMatrix64F &) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/math/matrix/symmetric_matrix.h", 365, (uint64_t)v0);
}

void sub_1002C05A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1002C060C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1002C05FCLL);
}

void sub_1002C0630(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1002C0644@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002C0674(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *sub_1002C0690@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002C06C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002C06DC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002C0738()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002C0794@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _QWORD v12[20];
  _BYTE v13[56];
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  int v17;
  _QWORD v18[2];
  uint64_t v19;
  _BYTE v20[200];

  if (*(_BYTE *)(result + 16) || *(_QWORD *)(result + 224) && *(_QWORD *)(result + 384) != *(_QWORD *)(result + 376))
  {
    sub_1002C0988(result + 8, (uint64_t)v20);
    sub_1002BD5A4((uint64_t)v20, (uint64_t)v18);
    sub_10001B9B8((uint64_t)v14);
    v3 = v19;
    if (!v19)
      v3 = *(_QWORD *)(qword_10041AB60 + 16);
    v4 = *(_QWORD *)(v3 + 40);
    v17 |= 8u;
    v16 = v4;
    v5 = *(_QWORD *)(v3 + 16);
    v17 |= 1u;
    v15 = v5;
    sub_100309DE0((uint64_t)&v10, 1, (uint64_t)v14, (uint64_t)v18);
    v6 = operator new(0x108uLL);
    v6[1] = 0;
    v6[2] = 0;
    *v6 = off_1003F0840;
    v6[4] = v10;
    *((_DWORD *)v6 + 10) = v11;
    sub_100157C2C((uint64_t)(v6 + 6), (uint64_t)v12);
    sub_100018EC4((uint64_t)(v6 + 26), (uint64_t)v13);
    *((_DWORD *)v6 + 6) = 20;
    *a2 = v6 + 3;
    a2[1] = v6;
    sub_100051F2C((uint64_t)v13);
    sub_100007738(v12);
    sub_100051F2C((uint64_t)v14);
    sub_100007738(v18);
    return sub_10000CF0C((uint64_t)v20);
  }
  else
  {
    v7 = qword_10042EA88;
    *a2 = qword_10042EA80;
    a2[1] = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
  }
  return result;
}

void sub_1002C0910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  std::__shared_weak_count *v46;
  _QWORD *v47;
  uint64_t v48;
  void *v50;

  sub_100007738(v47);
  std::__shared_weak_count::~__shared_weak_count(v46);
  operator delete(v50);
  sub_100051F2C((uint64_t)&a32);
  sub_100007738(&a12);
  sub_100051F2C((uint64_t)&a39);
  sub_100007738(&a46);
  sub_10000CF0C(v48 - 248);
  _Unwind_Resume(a1);
}

void sub_1002C0974(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10000CF0C(v1 - 248);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C0988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t result;

  *(_QWORD *)a2 = off_1003F9B48;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 32) = off_1003F9A88;
  *(_BYTE *)(a2 + 56) &= 0xFCu;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(_QWORD *)(a2 + 176) = off_1003F9B28;
  *(_DWORD *)(a2 + 184) = 0;
  *(_BYTE *)(a2 + 188) &= ~1u;
  v4 = *(_BYTE *)(a2 + 194);
  *(_WORD *)(a2 + 192) = 0;
  *(_BYTE *)(a2 + 194) = v4 & 0xFC;
  if (*(_BYTE *)(a1 + 8))
  {
    result = sub_1000CBA38(a2, a1 + 16);
    if (*(_BYTE *)(a1 + 8))
    {
      result = sub_10000CF0C(a1 + 16);
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  else
  {
    result = sub_1001A2E98(a2, *(uint64_t **)(a1 + 232));
    *(_QWORD *)(a1 + 376) += result;
  }
  return result;
}

void sub_1002C0A7C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10000CF0C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C0A90@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _BYTE v7[144];
  _BYTE v8[144];
  _BYTE v9[200];

  if (*(_BYTE *)(result + 16) || *(_QWORD *)(result + 224) && *(_QWORD *)(result + 384) != *(_QWORD *)(result + 376))
  {
    sub_1002C0988(result + 8, (uint64_t)v9);
    sub_1000C8CC8((uint64_t)v9, (uint64_t)v8);
    sub_1000C85E4();
    v3 = operator new(0x108uLL);
    v3[1] = 0;
    v3[2] = 0;
    *v3 = off_1003F0840;
    sub_1000C90B8(v3 + 4, v7);
    *((_DWORD *)v3 + 6) = 9;
    *a2 = v3 + 3;
    a2[1] = v3;
    sub_100051ED0((uint64_t)v7);
    sub_100051ED0((uint64_t)v8);
    return sub_10000CF0C((uint64_t)v9);
  }
  else
  {
    v4 = qword_10042EA88;
    *a2 = qword_10042EA80;
    a2[1] = v4;
    if (v4)
    {
      v5 = (unint64_t *)(v4 + 8);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
  }
  return result;
}

void sub_1002C0B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  std::__shared_weak_count *v28;
  uint64_t v29;
  void *v31;

  std::__shared_weak_count::~__shared_weak_count(v28);
  operator delete(v31);
  sub_100051ED0((uint64_t)&a10);
  sub_100051ED0((uint64_t)&a28);
  sub_10000CF0C(v29 - 232);
  _Unwind_Resume(a1);
}

void sub_1002C0BAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10000CF0C(v1 - 232);
  _Unwind_Resume(a1);
}

void sub_1002C0BC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  void *v4;
  void *v5[2];
  char v6;
  std::string __p;

  v3 = *(uint64_t **)(a1 + 280);
  if (!v3)
  {
    sub_1000D5048(v5, "");
    sub_1002C7E94("expected SensorLog to be valid, since that's what we created initially", &__p);
    sub_100174738((uint64_t)v5, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v6 < 0)
      operator delete(v5[0]);
    sub_1000F2AE4((uint64_t)&v4);
  }
  sub_1001E15BC(v3, *(uint64_t **)(a1 + 128), (_QWORD *)(a1 + 272), a2);
}

void sub_1002C0CA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002C0CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  std::istream::read(*(_QWORD *)(a1 + 112), &v6, 24);
  *(_QWORD *)(a1 + 272) += 24;
  *(_QWORD *)a2 = off_1003F98E8;
  *(_QWORD *)(a2 + 80) = 0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_DWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_DWORD *)(a2 + 72) = 0;
  v4 = bswap64(v6);
  *(_WORD *)(a2 + 88) &= 0xFC00u;
  sub_1000504B0(a2, v4);
  sub_1000504A8(a2, COERCE_FLOAT(bswap32(v7)));
  sub_1000504A0(a2, COERCE_FLOAT(bswap32(v8)));
  return sub_100050498(a2, COERCE_FLOAT(bswap32(v9)));
}

void sub_1002C0DBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C0DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  int v14;
  __int128 v15;
  _OWORD v17[2];
  uint64_t v18;
  _BYTE v19[8];
  uint64_t v20;

  *(_QWORD *)a1 = off_100401B70;
  *(_QWORD *)(a1 + 8) = off_100401CC0;
  v6 = a1 + 8;
  *(_BYTE *)(a1 + 16) = 0;
  if (*(_BYTE *)(a2 + 8))
  {
    sub_1001A5B54(a1 + 24, a2 + 16);
    *(_BYTE *)(a1 + 16) = 1;
  }
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a2 + 176) = 0;
  *(_QWORD *)(a2 + 184) = 0;
  v7 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a2 + 192) = 0;
  *(_QWORD *)(a1 + 200) = v7;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 200);
  v8 = *(_OWORD *)(a2 + 216);
  v9 = *(_OWORD *)(a2 + 232);
  v10 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 272) = v10;
  *(_OWORD *)(a1 + 224) = v8;
  *(_OWORD *)(a1 + 240) = v9;
  v11 = *(_OWORD *)(a2 + 280);
  v12 = *(_OWORD *)(a2 + 296);
  v13 = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 336) = v13;
  *(_OWORD *)(a1 + 288) = v11;
  *(_OWORD *)(a1 + 304) = v12;
  *(_BYTE *)(a1 + 352) = 0;
  if (*(_BYTE *)(a1 + 16) || *(_QWORD *)(a1 + 184) && *(_QWORD *)(a1 + 344) != *(_QWORD *)(a1 + 336))
  {
    sub_1002C0F3C(v6, (uint64_t)v19);
    sub_1002CF978((uint64_t)v17, a3, v20);
    v14 = *(unsigned __int8 *)(a1 + 352);
    *(_QWORD *)(a1 + 392) = v18;
    v15 = v17[1];
    *(_OWORD *)(a1 + 360) = v17[0];
    *(_OWORD *)(a1 + 376) = v15;
    if (!v14)
      *(_BYTE *)(a1 + 352) = 1;
    sub_100060888((uint64_t)v19);
  }
  return a1;
}

void sub_1002C0F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a7);
  sub_100060888((uint64_t)va);
  if (*(_BYTE *)(v7 + 352))
    *(_BYTE *)(v7 + 352) = 0;
  sub_1002C103C(v8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C0F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 16) = a2 + 24;
  *(_QWORD *)a2 = off_1003F9BF8;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = off_1003F9BD8;
  *(_DWORD *)(a2 + 140) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 54) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_WORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 96) = 0;
  *(_BYTE *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = 0;
  *(_DWORD *)(a2 + 135) = 0;
  *(_BYTE *)(a2 + 144) &= 0x80u;
  *(_BYTE *)(a2 + 152) &= 0xF8u;
  if (*(_BYTE *)(a1 + 8))
  {
    v4 = a1 + 16;
    v5 = a2;
    return sub_1001A5B58(v5, v4);
  }
  *(_QWORD *)(a1 + 336) += sub_1001A53A0(a2, *(uint64_t **)(a1 + 192));
  v5 = a1 + 16;
  if (*(_BYTE *)(a1 + 8))
  {
    v4 = a2;
    return sub_1001A5B58(v5, v4);
  }
  result = sub_1001A5B54(v5, a2);
  *(_BYTE *)(a1 + 8) = 1;
  return result;
}

void sub_1002C1028(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100060888(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C103C(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401CC0;
  v2 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 184);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_8:
    sub_100060888(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_1002C10D8(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int16 a5)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  _OWORD *v63;
  __int128 v64;
  NSObject *v65;
  uint64_t *v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  std::__shared_weak_count *v74;
  unint64_t *p_shared_owners;
  unint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t *v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t *v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t *v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t *v94;
  unint64_t v95;
  std::__shared_weak_count *v96;
  std::__shared_weak_count *v97;
  std::__shared_weak_count *v98;
  void *v99[4];
  std::string __p;
  uint8_t buf[8];
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  void *v112[23];
  void *__dst;
  std::__shared_weak_count *v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  _OWORD v123[2];
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;

  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  v8 = qword_10042EA80;
  v9 = qword_10042EA88;
  *(_QWORD *)(a1 + 144) = qword_10042EA80;
  *(_QWORD *)(a1 + 152) = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    v12 = qword_10042EA88;
    *(_QWORD *)(a1 + 160) = v8;
    *(_QWORD *)(a1 + 168) = v12;
    if (v12)
    {
      v13 = (unint64_t *)(v12 + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v15 = qword_10042EA88;
      *(_QWORD *)(a1 + 176) = v8;
      *(_QWORD *)(a1 + 184) = v15;
      if (v15)
      {
        v16 = (unint64_t *)(v15 + 8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 1, v16));
        v18 = qword_10042EA88;
        *(_QWORD *)(a1 + 192) = v8;
        *(_QWORD *)(a1 + 200) = v18;
        if (v18)
        {
          v19 = (unint64_t *)(v18 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
          v21 = qword_10042EA88;
          *(_QWORD *)(a1 + 208) = v8;
          *(_QWORD *)(a1 + 216) = v21;
          if (v21)
          {
            v22 = (unint64_t *)(v21 + 8);
            do
              v23 = __ldxr(v22);
            while (__stxr(v23 + 1, v22));
            v24 = qword_10042EA88;
            *(_QWORD *)(a1 + 224) = v8;
            *(_QWORD *)(a1 + 232) = v24;
            if (v24)
            {
              v25 = (unint64_t *)(v24 + 8);
              do
                v26 = __ldxr(v25);
              while (__stxr(v26 + 1, v25));
              v27 = qword_10042EA88;
              *(_QWORD *)(a1 + 240) = v8;
              *(_QWORD *)(a1 + 248) = v27;
              if (v27)
              {
                v28 = (unint64_t *)(v27 + 8);
                do
                  v29 = __ldxr(v28);
                while (__stxr(v29 + 1, v28));
                v30 = qword_10042EA88;
                *(_QWORD *)(a1 + 256) = v8;
                *(_QWORD *)(a1 + 264) = v30;
                if (v30)
                {
                  v31 = (unint64_t *)(v30 + 8);
                  do
                    v32 = __ldxr(v31);
                  while (__stxr(v32 + 1, v31));
                  v33 = qword_10042EA88;
                  *(_QWORD *)(a1 + 272) = v8;
                  *(_QWORD *)(a1 + 280) = v33;
                  if (v33)
                  {
                    v34 = (unint64_t *)(v33 + 8);
                    do
                      v35 = __ldxr(v34);
                    while (__stxr(v35 + 1, v34));
                    v36 = qword_10042EA88;
                    *(_QWORD *)(a1 + 288) = v8;
                    *(_QWORD *)(a1 + 296) = v36;
                    if (v36)
                    {
                      v37 = (unint64_t *)(v36 + 8);
                      do
                        v38 = __ldxr(v37);
                      while (__stxr(v38 + 1, v37));
                      v39 = qword_10042EA88;
                      *(_QWORD *)(a1 + 304) = v8;
                      *(_QWORD *)(a1 + 312) = v39;
                      if (v39)
                      {
                        v40 = (unint64_t *)(v39 + 8);
                        do
                          v41 = __ldxr(v40);
                        while (__stxr(v41 + 1, v40));
                        v42 = qword_10042EA88;
                        *(_QWORD *)(a1 + 320) = v8;
                        *(_QWORD *)(a1 + 328) = v42;
                        if (v42)
                        {
                          v43 = (unint64_t *)(v42 + 8);
                          do
                            v44 = __ldxr(v43);
                          while (__stxr(v44 + 1, v43));
                          v45 = qword_10042EA88;
                          *(_QWORD *)(a1 + 336) = v8;
                          *(_QWORD *)(a1 + 344) = v45;
                          if (v45)
                          {
                            v46 = (unint64_t *)(v45 + 8);
                            do
                              v47 = __ldxr(v46);
                            while (__stxr(v47 + 1, v46));
                            v48 = qword_10042EA88;
                            *(_QWORD *)(a1 + 352) = v8;
                            *(_QWORD *)(a1 + 360) = v48;
                            if (v48)
                            {
                              v49 = (unint64_t *)(v48 + 8);
                              do
                                v50 = __ldxr(v49);
                              while (__stxr(v50 + 1, v49));
                              v51 = qword_10042EA88;
                              *(_QWORD *)(a1 + 368) = v8;
                              *(_QWORD *)(a1 + 376) = v51;
                              if (v51)
                              {
                                v52 = (unint64_t *)(v51 + 8);
                                do
                                  v53 = __ldxr(v52);
                                while (__stxr(v53 + 1, v52));
                                v54 = qword_10042EA88;
                                *(_QWORD *)(a1 + 384) = v8;
                                *(_QWORD *)(a1 + 392) = v54;
                                if (v54)
                                {
                                  v55 = (unint64_t *)(v54 + 8);
                                  do
                                    v56 = __ldxr(v55);
                                  while (__stxr(v56 + 1, v55));
                                  v57 = qword_10042EA88;
                                  *(_QWORD *)(a1 + 400) = v8;
                                  *(_QWORD *)(a1 + 408) = v57;
                                  if (v57)
                                  {
                                    v58 = (unint64_t *)(v57 + 8);
                                    do
                                      v59 = __ldxr(v58);
                                    while (__stxr(v59 + 1, v58));
                                    v60 = qword_10042EA88;
                                    *(_QWORD *)(a1 + 416) = v8;
                                    *(_QWORD *)(a1 + 424) = v60;
                                    if (v60)
                                    {
                                      v61 = (unint64_t *)(v60 + 8);
                                      do
                                        v62 = __ldxr(v61);
                                      while (__stxr(v62 + 1, v61));
                                    }
LABEL_73:
                                    v63 = (_OWORD *)(a1 + 440);
                                    if (*((char *)a3 + 23) < 0)
                                    {
                                      sub_10006CED8((_BYTE *)(a1 + 440), *(void **)a3, *((_QWORD *)a3 + 1));
                                    }
                                    else
                                    {
                                      v64 = *a3;
                                      *(_QWORD *)(a1 + 456) = *((_QWORD *)a3 + 2);
                                      *v63 = v64;
                                    }
                                    *(_QWORD *)(a1 + 464) = 0;
                                    if (*(_QWORD *)a2 != *(_QWORD *)(a2 + 8))
                                    {
                                      if (qword_100417F08 == -1)
                                      {
                                        v65 = qword_100417F10;
                                        if (!os_log_type_enabled((os_log_t)qword_100417F10, OS_LOG_TYPE_INFO))
                                        {
LABEL_80:
                                          *(_QWORD *)buf = off_100401D38;
                                          v102 = 0uLL;
                                          *(_QWORD *)&v103 = 0;
                                          v66 = *(uint64_t **)a2;
                                          v67 = *(_QWORD **)(a2 + 8);
                                          if (*(_QWORD **)a2 == v67
                                            || (*(_QWORD *)&v102 = *(_QWORD *)a2,
                                                *((_QWORD *)&v102 + 1) = v67,
                                                *(_QWORD *)&v103 = *(_QWORD *)(a2 + 16),
                                                *(_QWORD *)a2 = 0,
                                                *(_QWORD *)(a2 + 8) = 0,
                                                *(_QWORD *)(a2 + 16) = 0,
                                                v68 = v67 - 2,
                                                v67 - 2 <= v66))
                                          {
LABEL_82:
                                            operator new();
                                          }
                                          while (1)
                                          {
                                            v70 = v67;
                                            v67 = v68;
                                            v71 = *v66;
                                            v72 = v66[1];
                                            *v66 = 0;
                                            v66[1] = 0;
                                            v73 = *((_OWORD *)v70 - 1);
                                            *v68 = 0;
                                            v68[1] = 0;
                                            v74 = (std::__shared_weak_count *)v66[1];
                                            *(_OWORD *)v66 = v73;
                                            if (!v74)
                                              goto LABEL_91;
                                            p_shared_owners = (unint64_t *)&v74->__shared_owners_;
                                            do
                                              v76 = __ldaxr(p_shared_owners);
                                            while (__stlxr(v76 - 1, p_shared_owners));
                                            if (!v76)
                                            {
                                              ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
                                              std::__shared_weak_count::__release_weak(v74);
                                              *v67 = v71;
                                              v77 = (std::__shared_weak_count *)*(v70 - 1);
                                              *(v70 - 1) = v72;
                                              if (v77)
                                              {
LABEL_92:
                                                v78 = (unint64_t *)&v77->__shared_owners_;
                                                do
                                                  v79 = __ldaxr(v78);
                                                while (__stlxr(v79 - 1, v78));
                                                if (!v79)
                                                {
                                                  ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
                                                  std::__shared_weak_count::__release_weak(v77);
                                                }
                                              }
                                            }
                                            else
                                            {
LABEL_91:
                                              *v67 = v71;
                                              v77 = (std::__shared_weak_count *)*(v70 - 1);
                                              *(v70 - 1) = v72;
                                              if (v77)
                                                goto LABEL_92;
                                            }
                                            v66 += 2;
                                            v68 = v67 - 2;
                                            if (v66 >= v67 - 2)
                                              goto LABEL_82;
                                          }
                                        }
                                      }
                                      else
                                      {
                                        dispatch_once(&qword_100417F08, &stru_100401D08);
                                        v65 = qword_100417F10;
                                        if (!os_log_type_enabled((os_log_t)qword_100417F10, OS_LOG_TYPE_INFO))
                                          goto LABEL_80;
                                      }
                                      *(_WORD *)buf = 0;
                                      _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_INFO, "You are loading userpoints into your localizer.", buf, 2u);
                                      goto LABEL_80;
                                    }
                                    *(_QWORD *)buf = sub_10016E238();
                                    *(_QWORD *)&v102 = v69;
                                    if (!sub_1000AC110((uint64_t)buf, (_BYTE *)&v102 + 1))
                                    {
                                      *(_QWORD *)buf = sub_10016E228();
                                      *(_QWORD *)&v102 = v85;
                                      if (sub_1000AC110((uint64_t)buf, (_BYTE *)&v102 + 1))
                                      {
                                        HIBYTE(v99[2]) = 16;
                                        strcpy((char *)v99, "beacon.thriftbin");
                                        if (*(char *)(a1 + 463) < 0)
                                          sub_10006CED8(&__p, *(void **)(a1 + 440), *(_QWORD *)(a1 + 448));
                                        else
                                          __p = *(std::string *)v63;
                                        sub_1000675EC(&__p, (uint64_t)v99);
                                        sub_1002C7A28((uint64_t)&__dst, (const char *)&__p, (a5 & 4) != 0);
                                        v97 = v114;
                                        v126 = v119;
                                        v127 = v120;
                                        v128 = v121;
                                        v129 = v122;
                                        v123[0] = v115;
                                        v123[1] = v116;
                                        v124 = v117;
                                        v125 = v118;
                                        if (__dst)
                                        {
                                          if (v114)
                                          {
                                            v86 = (unint64_t *)&v114->__shared_owners_;
                                            do
                                              v87 = __ldxr(v86);
                                            while (__stxr(v87 + 1, v86));
                                            do
                                              v88 = __ldxr(v86);
                                            while (__stxr(v88 + 1, v86));
                                          }
                                          sub_1003186E4();
                                        }
                                        memset(v112, 0, sizeof(v112));
                                        v111 = 0u;
                                        v110 = 0u;
                                        v109 = 0u;
                                        v108 = 0u;
                                        v107 = 0u;
                                        v106 = 0u;
                                        v105 = 0u;
                                        v104 = 0u;
                                        v103 = 0u;
                                        v102 = 0u;
                                        *(_QWORD *)buf = off_100401D88;
                                        if (v114)
                                        {
                                          v89 = (unint64_t *)&v114->__shared_owners_;
                                          do
                                            v90 = __ldaxr(v89);
                                          while (__stlxr(v90 - 1, v89));
                                          if (!v90)
                                          {
                                            ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
                                            std::__shared_weak_count::__release_weak(v97);
                                          }
                                        }
                                        operator new();
                                      }
                                      HIBYTE(v99[2]) = 18;
                                      strcpy((char *)v99, "altitude.thriftbin");
                                      if (*(char *)(a1 + 463) < 0)
                                        sub_10006CED8(&__p, *(void **)(a1 + 440), *(_QWORD *)(a1 + 448));
                                      else
                                        __p = *(std::string *)v63;
                                      sub_1000675EC(&__p, (uint64_t)v99);
                                      sub_1002C7A28((uint64_t)&__dst, (const char *)&__p, (a5 & 0x400) != 0);
                                      v98 = v114;
                                      v126 = v119;
                                      v127 = v120;
                                      v128 = v121;
                                      v129 = v122;
                                      v123[0] = v115;
                                      v123[1] = v116;
                                      v124 = v117;
                                      v125 = v118;
                                      if (__dst)
                                      {
                                        if (v114)
                                        {
                                          v91 = (unint64_t *)&v114->__shared_owners_;
                                          do
                                            v92 = __ldxr(v91);
                                          while (__stxr(v92 + 1, v91));
                                          do
                                            v93 = __ldxr(v91);
                                          while (__stxr(v93 + 1, v91));
                                        }
                                        sub_1003186E4();
                                      }
                                      v105 = 0u;
                                      v104 = 0u;
                                      v103 = 0u;
                                      v102 = 0u;
                                      v106 = 0u;
                                      v107 = 0u;
                                      v108 = 0u;
                                      v109 = 0u;
                                      v110 = 0u;
                                      v111 = 0u;
                                      memset(v112, 0, 72);
                                      *(_QWORD *)buf = off_100401DC0;
                                      if (v114)
                                      {
                                        v94 = (unint64_t *)&v114->__shared_owners_;
                                        do
                                          v95 = __ldaxr(v94);
                                        while (__stlxr(v95 - 1, v94));
                                        if (!v95)
                                        {
                                          ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
                                          std::__shared_weak_count::__release_weak(v98);
                                        }
                                      }
                                      operator new();
                                    }
                                    HIBYTE(v99[2]) = 14;
                                    strcpy((char *)v99, "wifi.thriftbin");
                                    if (*(char *)(a1 + 463) < 0)
                                      sub_10006CED8(&__p, *(void **)(a1 + 440), *(_QWORD *)(a1 + 448));
                                    else
                                      __p = *(std::string *)v63;
                                    sub_1000675EC(&__p, (uint64_t)v99);
                                    sub_1002C7A28((uint64_t)&__dst, (const char *)&__p, a5 & 1);
                                    v96 = v114;
                                    v126 = v119;
                                    v127 = v120;
                                    v128 = v121;
                                    v129 = v122;
                                    v123[0] = v115;
                                    v123[1] = v116;
                                    v124 = v117;
                                    v125 = v118;
                                    if (__dst)
                                    {
                                      if (v114)
                                      {
                                        v80 = (unint64_t *)&v114->__shared_owners_;
                                        do
                                          v81 = __ldxr(v80);
                                        while (__stxr(v81 + 1, v80));
                                        do
                                          v82 = __ldxr(v80);
                                        while (__stxr(v82 + 1, v80));
                                      }
                                      sub_1003186E4();
                                    }
                                    v111 = 0u;
                                    v110 = 0u;
                                    v109 = 0u;
                                    v108 = 0u;
                                    v107 = 0u;
                                    v106 = 0u;
                                    v105 = 0u;
                                    v104 = 0u;
                                    v103 = 0u;
                                    v102 = 0u;
                                    memset(v112, 0, 176);
                                    *(_QWORD *)buf = off_100401CC0;
                                    if (!v114)
                                      goto LABEL_111;
                                    v83 = (unint64_t *)&v114->__shared_owners_;
                                    do
                                      v84 = __ldaxr(v83);
                                    while (__stlxr(v84 - 1, v83));
                                    if (!v84)
                                    {
                                      ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
                                      std::__shared_weak_count::__release_weak(v96);
                                      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                      {
LABEL_112:
                                        if ((SHIBYTE(v99[2]) & 0x80000000) == 0)
                                          goto LABEL_113;
LABEL_127:
                                        operator delete(v99[0]);
LABEL_113:
                                        operator new();
                                      }
                                    }
                                    else
                                    {
LABEL_111:
                                      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                        goto LABEL_112;
                                    }
                                    operator delete(__p.__r_.__value_.__l.__data_);
                                    if ((SHIBYTE(v99[2]) & 0x80000000) == 0)
                                      goto LABEL_113;
                                    goto LABEL_127;
                                  }
LABEL_72:
                                  *(_QWORD *)(a1 + 416) = v8;
                                  *(_QWORD *)(a1 + 424) = 0;
                                  goto LABEL_73;
                                }
LABEL_71:
                                *(_QWORD *)(a1 + 400) = v8;
                                *(_QWORD *)(a1 + 408) = 0;
                                goto LABEL_72;
                              }
LABEL_70:
                              *(_QWORD *)(a1 + 384) = v8;
                              *(_QWORD *)(a1 + 392) = 0;
                              goto LABEL_71;
                            }
LABEL_69:
                            *(_QWORD *)(a1 + 368) = v8;
                            *(_QWORD *)(a1 + 376) = 0;
                            goto LABEL_70;
                          }
LABEL_68:
                          *(_QWORD *)(a1 + 352) = v8;
                          *(_QWORD *)(a1 + 360) = 0;
                          goto LABEL_69;
                        }
LABEL_67:
                        *(_QWORD *)(a1 + 336) = v8;
                        *(_QWORD *)(a1 + 344) = 0;
                        goto LABEL_68;
                      }
LABEL_66:
                      *(_QWORD *)(a1 + 320) = v8;
                      *(_QWORD *)(a1 + 328) = 0;
                      goto LABEL_67;
                    }
LABEL_65:
                    *(_QWORD *)(a1 + 304) = v8;
                    *(_QWORD *)(a1 + 312) = 0;
                    goto LABEL_66;
                  }
LABEL_64:
                  *(_QWORD *)(a1 + 288) = v8;
                  *(_QWORD *)(a1 + 296) = 0;
                  goto LABEL_65;
                }
LABEL_63:
                *(_QWORD *)(a1 + 272) = v8;
                *(_QWORD *)(a1 + 280) = 0;
                goto LABEL_64;
              }
LABEL_62:
              *(_QWORD *)(a1 + 256) = v8;
              *(_QWORD *)(a1 + 264) = 0;
              goto LABEL_63;
            }
LABEL_61:
            *(_QWORD *)(a1 + 240) = v8;
            *(_QWORD *)(a1 + 248) = 0;
            goto LABEL_62;
          }
LABEL_60:
          *(_QWORD *)(a1 + 224) = v8;
          *(_QWORD *)(a1 + 232) = 0;
          goto LABEL_61;
        }
LABEL_59:
        *(_QWORD *)(a1 + 208) = v8;
        *(_QWORD *)(a1 + 216) = 0;
        goto LABEL_60;
      }
LABEL_58:
      *(_QWORD *)(a1 + 192) = v8;
      *(_QWORD *)(a1 + 200) = 0;
      goto LABEL_59;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 160) = v8;
    *(_QWORD *)(a1 + 168) = 0;
  }
  *(_QWORD *)(a1 + 176) = v8;
  *(_QWORD *)(a1 + 184) = 0;
  goto LABEL_58;
}

void sub_1002C3C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, void **a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v43;
  uint64_t v44;

  if (*(char *)(v44 - 217) < 0)
    operator delete(*(void **)(v44 - 240));
  sub_1002CF380(&a12);
  if (a15)
    (*(void (**)(uint64_t))(*(_QWORD *)a15 + 8))(a15);
  if (a16)
    (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  if (a22 < 0)
    operator delete(__p);
  if (a29 < 0)
    operator delete(a24);
  if (a36 < 0)
    operator delete(a31);
  if (a43 < 0)
    operator delete(a38);
  if (*(char *)(v43 + 463) < 0)
    operator delete(*a11);
  sub_1000FE64C(a10);
  sub_1000FEB40((uint64_t *)v43);
  _Unwind_Resume(a1);
}

_QWORD *sub_1002C448C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  *a1 = off_100401D38;
  v2 = a1[1];
  if (v2)
  {
    v3 = a1[2];
    v4 = (void *)a1[1];
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = (void *)a1[1];
    }
    a1[2] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_1002C4530(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401D88;
  v2 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 200) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_8:
    sub_1001A3BF4(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_1002C45CC(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401DC0;
  v2 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 80);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_8:
    nullsub_109(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_1002C4668(uint64_t a1, const char *a2, char a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  sub_1002C7A28((uint64_t)&v13, a2, a3);
  v4 = v13;
  v5 = v14;
  v12 = v14;
  v27 = v19;
  v28 = v20;
  v29 = v21;
  v30 = v22;
  v23 = v15;
  v24 = v16;
  v25 = v17;
  v26 = v18;
  if (v13)
  {
    if (v14)
    {
      p_shared_owners = (unint64_t *)&v14->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v13 = v4;
      v14 = v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }
    else
    {
      v14 = 0;
    }
    sub_1003186E4();
  }
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_QWORD *)a1 = off_100401DF8;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 376) = 0;
  *(_OWORD *)(a1 + 216) = 0u;
  v9 = (_OWORD *)(a1 + 216);
  v9[3] = 0u;
  v9[4] = 0u;
  v9[5] = 0u;
  v9[6] = 0u;
  v9[7] = 0u;
  v9[8] = 0u;
  v9[9] = 0u;
  if (v12)
  {
    v10 = (unint64_t *)&v12->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_1002C48B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;
  uint64_t v8;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v6 = va_arg(va2, _QWORD);
  v8 = va_arg(va2, _QWORD);
  sub_1000E095C((uint64_t)va2);
  sub_1000E095C((uint64_t)va);
  sub_1000E095C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1002C48D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C48E8(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401DF8;
  v2 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 232) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 224);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_8:
    sub_10000CF0C(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_1002C4984(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401E30;
  v2 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 168);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_8:
    sub_100051ED0(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_1002C4A20(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401E68;
  v2 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 184);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_8:
    sub_10019DB4C(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_1002C4ABC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string v4;
  std::string __p;
  std::string v6;

  sub_1002C7848(a1, &v6);
  sub_1002C7944(a1, &__p);
  sub_10006DB18((const char *)&__p, 0, (int *)&v4);
  if (LODWORD(v4.__r_.__value_.__l.__data_) < 2)
  {
    sub_10006DB18((const char *)&v6, 0, (int *)&v4);
    if (LODWORD(v4.__r_.__value_.__l.__data_) < 2)
    {
      *(_BYTE *)a2 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
    if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
      sub_10006CED8(&v4, v6.__r_.__value_.__l.__data_, v6.__r_.__value_.__l.__size_);
    else
      v4 = v6;
    *(std::string *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 32) = 1;
    *(_BYTE *)a2 = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
LABEL_11:
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      sub_10006CED8(&v4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    else
      v4 = __p;
    *(std::string *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 32) = 0;
    *(_BYTE *)a2 = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_11;
  }
LABEL_12:
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
}

void sub_1002C4C04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  uint64_t v18;

  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v18 - 17) & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v18 - 17) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v18 - 40));
  _Unwind_Resume(exception_object);
}

void sub_1002C4C58(uint64_t a1, const char *a2, char a3, int a4)
{
  __int128 v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::string *v14;
  __int128 v15;
  _BYTE v16[24];
  std::string v17;
  std::runtime_error v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[112];
  __int128 v24;
  _OWORD v25[9];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  sub_1002C7A28((uint64_t)v23, a2, a3);
  v5 = *(_OWORD *)v23;
  v22 = *(_OWORD *)v23;
  v6 = *(_QWORD *)&v25[1];
  v31 = *(_OWORD *)&v23[80];
  v32 = *(_OWORD *)&v23[96];
  v33 = v24;
  v34 = v25[0];
  v27 = *(_OWORD *)&v23[16];
  v28 = *(_OWORD *)&v23[32];
  v29 = *(_OWORD *)&v23[48];
  v30 = *(_OWORD *)&v23[64];
  if (*(_QWORD *)v23)
  {
    if (a4 != 2)
    {
      if (a4 != 1)
      {
        if (!a4)
        {
          v21 = *(_OWORD *)v23;
          if (*(_QWORD *)&v23[8])
          {
            v7 = (unint64_t *)(*(_QWORD *)&v23[8] + 8);
            do
              v8 = __ldxr(v7);
            while (__stxr(v8 + 1, v7));
            *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v5;
            do
              v9 = __ldxr(v7);
            while (__stxr(v9 + 1, v7));
          }
          else
          {
            *(_OWORD *)&v17.__r_.__value_.__l.__data_ = *(unint64_t *)v23;
          }
          sub_1003186E4();
        }
        __cxa_allocate_exception(0x40uLL);
        std::to_string(&v17, a4);
        v14 = std::string::insert(&v17, 0, "Unexpected RawLogFormat, type=");
        v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
        *(_QWORD *)&v23[16] = *((_QWORD *)&v14->__r_.__value_.__l + 2);
        *(_OWORD *)v23 = v15;
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        std::runtime_error::runtime_error(&v18, (const std::string *)v23);
        v18.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
        sub_10018D04C((uint64_t)v16);
        sub_1000F2F7C(&v18, (uint64_t)"std::unique_ptr<input_event_stream_iterator::ThriftFileInputStream<SensorMeasurement>> openInertialFile(const fs::path &, BOOL, RawLogFormat::LogType)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.cpp", 104, (uint64_t)v16);
      }
      if (*(_QWORD *)&v23[8])
      {
        v10 = (unint64_t *)(*(_QWORD *)&v23[8] + 8);
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
      }
      sub_1003186E4();
    }
    if (*(_QWORD *)&v23[8])
    {
      v12 = (unint64_t *)(*(_QWORD *)&v23[8] + 8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
    }
    *(_OWORD *)((char *)&v25[4] + 8) = v31;
    *(_OWORD *)((char *)&v25[5] + 8) = v32;
    *(_OWORD *)((char *)&v25[6] + 8) = v33;
    *(_OWORD *)((char *)&v25[7] + 8) = v34;
    *(_OWORD *)((char *)v25 + 8) = v27;
    *(_OWORD *)((char *)&v25[1] + 8) = v28;
    *(_OWORD *)((char *)&v25[2] + 8) = v29;
    *(_OWORD *)((char *)&v25[3] + 8) = v30;
    v19 = 0;
    v20 = 0;
    v23[8] = 0;
    v24 = v5;
    *(_QWORD *)&v25[0] = 0;
    *((_QWORD *)&v25[8] + 1) = v6;
    v26 = 0;
    *(_QWORD *)v23 = off_100401EA0;
    operator new();
  }
  memset(&v23[8], 0, 104);
  *(_QWORD *)v23 = off_100401C98;
  v24 = 0u;
  memset(v25, 0, sizeof(v25));
  v26 = 0;
  operator new();
}

void sub_1002C5414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, std::runtime_error a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a19);
  if (a34 < 0)
    operator delete(a29);
  if (a18 < 0)
    operator delete(a13);
  sub_1000E095C((uint64_t)&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C5650(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401EE0;
  v2 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 112);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_8:
    nullsub_108(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_1002C56EC(int **a1)
{
  int *v2;
  int **v3;
  int **v4;
  uint64_t v5;
  int **v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a1 + 18;
  v2 = a1[18];
  if (v2)
  {
    v4 = v3;
  }
  else
  {
    v4 = a1 + 20;
    v2 = a1[20];
    if (!v2)
    {
      v4 = a1 + 22;
      v2 = a1[22];
      if (!v2)
      {
        v4 = a1 + 24;
        v2 = a1[24];
        if (!v2)
        {
          v4 = a1 + 26;
          v2 = a1[26];
          if (!v2)
          {
            v4 = a1 + 28;
            v2 = a1[28];
            if (!v2)
            {
              v4 = a1 + 30;
              v2 = a1[30];
              if (!v2)
              {
                v2 = a1[32];
                if (v2)
                {
                  v4 = a1 + 32;
                }
                else
                {
                  v2 = a1[34];
                  if (v2)
                  {
                    v4 = a1 + 34;
                  }
                  else
                  {
                    v2 = a1[36];
                    if (v2)
                    {
                      v4 = a1 + 36;
                    }
                    else
                    {
                      v2 = a1[38];
                      if (v2)
                      {
                        v4 = a1 + 38;
                      }
                      else
                      {
                        v2 = a1[40];
                        if (v2)
                        {
                          v4 = a1 + 40;
                        }
                        else
                        {
                          v2 = a1[42];
                          if (v2)
                          {
                            v4 = a1 + 42;
                          }
                          else
                          {
                            v2 = a1[44];
                            if (v2)
                            {
                              v4 = a1 + 44;
                            }
                            else
                            {
                              v2 = a1[46];
                              if (v2)
                              {
                                v4 = a1 + 46;
                              }
                              else
                              {
                                v2 = a1[48];
                                if (v2)
                                {
                                  v4 = a1 + 48;
                                }
                                else
                                {
                                  v2 = a1[50];
                                  if (v2)
                                  {
                                    v4 = a1 + 50;
                                  }
                                  else
                                  {
                                    v2 = a1[52];
                                    if (!v2)
                                      return 18;
                                    v4 = a1 + 52;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  v5 = sub_10005D4C0(v2);
  v6 = v4 + 2;
  if (v4 + 2 != v3 + 36)
  {
    v7 = v5;
    do
    {
      if (*v6)
      {
        v8 = sub_10005D4C0(*v6);
        if (v8 < v7)
        {
          v7 = v8;
          v4 = v6;
        }
      }
      v6 += 2;
    }
    while (v6 != v3 + 36);
  }
  return ((char *)v4 - (char *)v3) >> 4;
}

uint64_t sub_1002C5898(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  a1[58] = -1;
  v2 = *a1;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  v3 = a1[1];
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  v4 = a1[2];
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  v5 = a1[3];
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  v6 = a1[4];
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  v7 = a1[5];
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
  v8 = a1[6];
  if (v8)
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
  v9 = a1[7];
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  v10 = a1[8];
  if (v10)
    (*(void (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
  v11 = a1[9];
  if (v11)
    (*(void (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
  v12 = a1[10];
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  v13 = a1[11];
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 16))(v13);
  v14 = a1[12];
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
  v15 = a1[13];
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 16))(v15);
  v16 = a1[14];
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
  v17 = a1[15];
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
  v18 = a1[16];
  if (v18)
    (*(void (**)(uint64_t))(*(_QWORD *)v18 + 16))(v18);
  result = a1[17];
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  return result;
}

uint64_t sub_1002C5A2C(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  _BYTE *v58;
  __int128 v59;

  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  v3 = qword_10042EA80;
  v4 = qword_10042EA88;
  *(_QWORD *)(a1 + 144) = qword_10042EA80;
  *(_QWORD *)(a1 + 152) = v4;
  if (!v4)
  {
    *(_QWORD *)(a1 + 160) = v3;
    *(_QWORD *)(a1 + 168) = 0;
LABEL_57:
    *(_QWORD *)(a1 + 176) = v3;
    *(_QWORD *)(a1 + 184) = 0;
LABEL_58:
    *(_QWORD *)(a1 + 192) = v3;
    *(_QWORD *)(a1 + 200) = 0;
LABEL_59:
    *(_QWORD *)(a1 + 208) = v3;
    *(_QWORD *)(a1 + 216) = 0;
LABEL_60:
    *(_QWORD *)(a1 + 224) = v3;
    *(_QWORD *)(a1 + 232) = 0;
LABEL_61:
    *(_QWORD *)(a1 + 240) = v3;
    *(_QWORD *)(a1 + 248) = 0;
LABEL_62:
    *(_QWORD *)(a1 + 256) = v3;
    *(_QWORD *)(a1 + 264) = 0;
LABEL_63:
    *(_QWORD *)(a1 + 272) = v3;
    *(_QWORD *)(a1 + 280) = 0;
LABEL_64:
    *(_QWORD *)(a1 + 288) = v3;
    *(_QWORD *)(a1 + 296) = 0;
LABEL_65:
    *(_QWORD *)(a1 + 304) = v3;
    *(_QWORD *)(a1 + 312) = 0;
LABEL_66:
    *(_QWORD *)(a1 + 320) = v3;
    *(_QWORD *)(a1 + 328) = 0;
LABEL_67:
    *(_QWORD *)(a1 + 336) = v3;
    *(_QWORD *)(a1 + 344) = 0;
LABEL_68:
    *(_QWORD *)(a1 + 352) = v3;
    *(_QWORD *)(a1 + 360) = 0;
LABEL_69:
    *(_QWORD *)(a1 + 368) = v3;
    *(_QWORD *)(a1 + 376) = 0;
LABEL_70:
    *(_QWORD *)(a1 + 384) = v3;
    *(_QWORD *)(a1 + 392) = 0;
LABEL_71:
    *(_QWORD *)(a1 + 400) = v3;
    *(_QWORD *)(a1 + 408) = 0;
LABEL_72:
    *(_QWORD *)(a1 + 416) = v3;
    *(_QWORD *)(a1 + 424) = 0;
    goto LABEL_73;
  }
  v5 = (unint64_t *)(v4 + 8);
  do
    v6 = __ldxr(v5);
  while (__stxr(v6 + 1, v5));
  v7 = qword_10042EA88;
  *(_QWORD *)(a1 + 160) = v3;
  *(_QWORD *)(a1 + 168) = v7;
  if (!v7)
    goto LABEL_57;
  v8 = (unint64_t *)(v7 + 8);
  do
    v9 = __ldxr(v8);
  while (__stxr(v9 + 1, v8));
  v10 = qword_10042EA88;
  *(_QWORD *)(a1 + 176) = v3;
  *(_QWORD *)(a1 + 184) = v10;
  if (!v10)
    goto LABEL_58;
  v11 = (unint64_t *)(v10 + 8);
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  v13 = qword_10042EA88;
  *(_QWORD *)(a1 + 192) = v3;
  *(_QWORD *)(a1 + 200) = v13;
  if (!v13)
    goto LABEL_59;
  v14 = (unint64_t *)(v13 + 8);
  do
    v15 = __ldxr(v14);
  while (__stxr(v15 + 1, v14));
  v16 = qword_10042EA88;
  *(_QWORD *)(a1 + 208) = v3;
  *(_QWORD *)(a1 + 216) = v16;
  if (!v16)
    goto LABEL_60;
  v17 = (unint64_t *)(v16 + 8);
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  v19 = qword_10042EA88;
  *(_QWORD *)(a1 + 224) = v3;
  *(_QWORD *)(a1 + 232) = v19;
  if (!v19)
    goto LABEL_61;
  v20 = (unint64_t *)(v19 + 8);
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  v22 = qword_10042EA88;
  *(_QWORD *)(a1 + 240) = v3;
  *(_QWORD *)(a1 + 248) = v22;
  if (!v22)
    goto LABEL_62;
  v23 = (unint64_t *)(v22 + 8);
  do
    v24 = __ldxr(v23);
  while (__stxr(v24 + 1, v23));
  v25 = qword_10042EA88;
  *(_QWORD *)(a1 + 256) = v3;
  *(_QWORD *)(a1 + 264) = v25;
  if (!v25)
    goto LABEL_63;
  v26 = (unint64_t *)(v25 + 8);
  do
    v27 = __ldxr(v26);
  while (__stxr(v27 + 1, v26));
  v28 = qword_10042EA88;
  *(_QWORD *)(a1 + 272) = v3;
  *(_QWORD *)(a1 + 280) = v28;
  if (!v28)
    goto LABEL_64;
  v29 = (unint64_t *)(v28 + 8);
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  v31 = qword_10042EA88;
  *(_QWORD *)(a1 + 288) = v3;
  *(_QWORD *)(a1 + 296) = v31;
  if (!v31)
    goto LABEL_65;
  v32 = (unint64_t *)(v31 + 8);
  do
    v33 = __ldxr(v32);
  while (__stxr(v33 + 1, v32));
  v34 = qword_10042EA88;
  *(_QWORD *)(a1 + 304) = v3;
  *(_QWORD *)(a1 + 312) = v34;
  if (!v34)
    goto LABEL_66;
  v35 = (unint64_t *)(v34 + 8);
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  v37 = qword_10042EA88;
  *(_QWORD *)(a1 + 320) = v3;
  *(_QWORD *)(a1 + 328) = v37;
  if (!v37)
    goto LABEL_67;
  v38 = (unint64_t *)(v37 + 8);
  do
    v39 = __ldxr(v38);
  while (__stxr(v39 + 1, v38));
  v40 = qword_10042EA88;
  *(_QWORD *)(a1 + 336) = v3;
  *(_QWORD *)(a1 + 344) = v40;
  if (!v40)
    goto LABEL_68;
  v41 = (unint64_t *)(v40 + 8);
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  v43 = qword_10042EA88;
  *(_QWORD *)(a1 + 352) = v3;
  *(_QWORD *)(a1 + 360) = v43;
  if (!v43)
    goto LABEL_69;
  v44 = (unint64_t *)(v43 + 8);
  do
    v45 = __ldxr(v44);
  while (__stxr(v45 + 1, v44));
  v46 = qword_10042EA88;
  *(_QWORD *)(a1 + 368) = v3;
  *(_QWORD *)(a1 + 376) = v46;
  if (!v46)
    goto LABEL_70;
  v47 = (unint64_t *)(v46 + 8);
  do
    v48 = __ldxr(v47);
  while (__stxr(v48 + 1, v47));
  v49 = qword_10042EA88;
  *(_QWORD *)(a1 + 384) = v3;
  *(_QWORD *)(a1 + 392) = v49;
  if (!v49)
    goto LABEL_71;
  v50 = (unint64_t *)(v49 + 8);
  do
    v51 = __ldxr(v50);
  while (__stxr(v51 + 1, v50));
  v52 = qword_10042EA88;
  *(_QWORD *)(a1 + 400) = v3;
  *(_QWORD *)(a1 + 408) = v52;
  if (!v52)
    goto LABEL_72;
  v53 = (unint64_t *)(v52 + 8);
  do
    v54 = __ldxr(v53);
  while (__stxr(v54 + 1, v53));
  v55 = qword_10042EA88;
  *(_QWORD *)(a1 + 416) = v3;
  *(_QWORD *)(a1 + 424) = v55;
  if (v55)
  {
    v56 = (unint64_t *)(v55 + 8);
    do
      v57 = __ldxr(v56);
    while (__stxr(v57 + 1, v56));
  }
LABEL_73:
  *(_QWORD *)(a1 + 432) = 18;
  v58 = (_BYTE *)(a1 + 440);
  if (*((char *)a2 + 23) < 0)
  {
    sub_10006CED8(v58, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v59 = *a2;
    *(_QWORD *)(a1 + 456) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v58 = v59;
  }
  *(_QWORD *)(a1 + 464) = -1;
  return a1;
}

void sub_1002C5D3C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  sub_1000FE64C(v2);
  sub_1000FEB40(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C5D5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  void *v23;
  void *v24[2];
  char v25;
  std::string __p;

  v2 = *(_QWORD *)(a1 + 432);
  if (v2 == 18)
  {
    sub_1000D5048(v24, "");
    sub_10023DB80("Trying to go past the end", &__p);
    sub_100174738((uint64_t)v24, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v25 < 0)
      operator delete(v24[0]);
    sub_1000F2AE4((uint64_t)&v23);
  }
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a1 + 8 * v2) + 24))(*(_QWORD *)(a1 + 8 * v2)))
  {
    (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8 * *(_QWORD *)(a1 + 432)) + 32))(&__p);
    v3 = a1 + 144;
    v4 = a1 + 144 + 16 * *(_QWORD *)(a1 + 432);
    v5 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
    v6 = *(std::__shared_weak_count **)(v4 + 8);
    *(_OWORD *)v4 = v5;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
    if (!__p.__r_.__value_.__l.__size_)
      goto LABEL_33;
    v10 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
      if (*(_QWORD *)(v3 + 16 * *(_QWORD *)(a1 + 432)))
        goto LABEL_22;
    }
    else
    {
LABEL_33:
      if (*(_QWORD *)(v3 + 16 * *(_QWORD *)(a1 + 432)))
        goto LABEL_22;
    }
  }
  v12 = *(_QWORD *)(a1 + 8 * *(_QWORD *)(a1 + 432));
  (*(void (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  v13 = (uint64_t *)(a1 + 16 * *(_QWORD *)(a1 + 432) + 144);
  v15 = qword_10042EA80;
  v14 = qword_10042EA88;
  if (qword_10042EA88)
  {
    v16 = (unint64_t *)(qword_10042EA88 + 8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v18 = (std::__shared_weak_count *)v13[1];
  *v13 = v15;
  v13[1] = v14;
  if (v18)
  {
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
LABEL_22:
  v21 = sub_1002C56EC((int **)a1);
  *(_QWORD *)(a1 + 432) = v21;
  if (v21 == 18)
    sub_1002C5898((uint64_t *)a1);
  else
    ++*(_QWORD *)(a1 + 464);
  return a1;
}

void sub_1002C5FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002C6184(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4[2];
  char v5;
  std::string __p;

  v1 = *(_QWORD *)(a1 + 432);
  if (v1 == 18)
  {
    sub_1000D5048(v4, "");
    sub_10022B6C4("Attempting to dereference the end() iterator", &__p);
    sub_100174738((uint64_t)v4, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v5 < 0)
      operator delete(v4[0]);
    sub_1000F2AE4((uint64_t)&v3);
  }
  return a1 + 16 * v1 + 144;
}

void sub_1002C6270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a2)
  {
    if (a14 < 0)
      operator delete(__p);
    sub_1000CDD68(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002C62BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE *v8;
  BOOL v9;
  char *v10;
  uint64_t v11;
  _BYTE v13[160];
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _BYTE v18[8];
  uint64_t v19;
  _BYTE *v20;
  _BYTE v21[136];

  v4 = a1 + 8;
  sub_1002C6464(a1 + 8, (uint64_t)v18);
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_4:
    while (1)
    {
      sub_1002C0F3C(v4, (uint64_t)&v14);
      if ((sub_1002CF990(a1 + 360, (uint64_t)&v14) & 1) == 0)
        break;
      sub_1002C6464(v4, (uint64_t)v13);
      sub_100060888((uint64_t)v13);
      sub_100060888((uint64_t)&v14);
      if (!*(_BYTE *)(a1 + 16))
        goto LABEL_2;
    }
    sub_100060888((uint64_t)&v14);
  }
  else
  {
LABEL_2:
    if (*(_QWORD *)(a1 + 184) && *(_QWORD *)(a1 + 344) != *(_QWORD *)(a1 + 336))
      goto LABEL_4;
  }
  v5 = v20;
  if (v20 != v21)
  {
    v6 = v19;
    do
    {
      v5[10] = v6;
      v7 = (_QWORD *)v5[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_BYTE *)v5[2];
          v9 = *(_QWORD *)v8 == (_QWORD)v5;
          v5 = v8;
        }
        while (!v9);
      }
      v5 = v8;
    }
    while (v8 != v21);
  }
  v10 = (char *)operator new(0x108uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = off_1003F0840;
  sub_100309390((uint64_t)&v14, (uint64_t)v18);
  v11 = v17;
  *((_QWORD *)v10 + 4) = v14;
  *(_OWORD *)(v10 + 40) = v15;
  *(_OWORD *)(v10 + 56) = v16;
  *((_QWORD *)v10 + 9) = v11;
  *((_DWORD *)v10 + 6) = 14;
  *a2 = v10 + 24;
  a2[1] = v10;
  return sub_100060888((uint64_t)v18);
}

void sub_1002C6430(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100060888(v1 - 208);
  _Unwind_Resume(a1);
}

void sub_1002C6448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  sub_100060888((uint64_t)&a29);
  sub_100060888(v29 - 208);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C6464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 16) = a2 + 24;
  *(_QWORD *)a2 = off_1003F9BF8;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = off_1003F9BD8;
  *(_DWORD *)(a2 + 140) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 54) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_WORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 96) = 0;
  *(_BYTE *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = 0;
  *(_DWORD *)(a2 + 135) = 0;
  *(_BYTE *)(a2 + 144) &= 0x80u;
  *(_BYTE *)(a2 + 152) &= 0xF8u;
  if (*(_BYTE *)(a1 + 8))
  {
    result = sub_1001A5B58(a2, a1 + 16);
    if (*(_BYTE *)(a1 + 8))
    {
      result = sub_100060888(a1 + 16);
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  else
  {
    result = sub_1001A53A0(a2, *(uint64_t **)(a1 + 192));
    *(_QWORD *)(a1 + 336) += result;
  }
  return result;
}

void sub_1002C6550(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100060888(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C6564(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401BA8;
  *(_QWORD *)(a1 + 8) = off_100401DF8;
  v2 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 232);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 16))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_8:
    sub_10000CF0C(a1 + 24);
    *(_BYTE *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_1002C6608(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401BA8;
  *(_QWORD *)(a1 + 8) = off_100401DF8;
  v2 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 232);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 16))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 16))
      goto LABEL_9;
  }
  sub_10000CF0C(a1 + 24);
  *(_BYTE *)(a1 + 16) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C66BC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t result;

  v2 = (std::__shared_weak_count *)a1[29];
  a1[28] = 0;
  a1[29] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    result = a1[30];
    a1[30] = 0;
    if (!result)
      return result;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  result = a1[30];
  a1[30] = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

BOOL sub_1002C6740(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a1 + 224))
    return *(_QWORD *)(a1 + 384) != *(_QWORD *)(a1 + 376);
  return 0;
}

uint64_t sub_1002C6770(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401C08;
  *(_QWORD *)(a1 + 8) = off_100401DF8;
  v2 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 232);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 16))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_8:
    sub_10000CF0C(a1 + 24);
    *(_BYTE *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_1002C6814(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401C08;
  *(_QWORD *)(a1 + 8) = off_100401DF8;
  v2 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 232);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 16))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 16))
      goto LABEL_9;
  }
  sub_10000CF0C(a1 + 24);
  *(_BYTE *)(a1 + 16) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C68C8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t result;

  v2 = (std::__shared_weak_count *)a1[29];
  a1[28] = 0;
  a1[29] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    result = a1[30];
    a1[30] = 0;
    if (!result)
      return result;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  result = a1[30];
  a1[30] = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

BOOL sub_1002C694C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a1 + 224))
    return *(_QWORD *)(a1 + 384) != *(_QWORD *)(a1 + 376);
  return 0;
}

uint64_t sub_1002C697C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *(_QWORD *)a1 = off_100401B48;
  v2 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 280) = 0;
  if (v2)
    operator delete();
  *(_QWORD *)a1 = off_100401C98;
  v3 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = *(std::__shared_weak_count **)(a1 + 120);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_10;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_10:
    nullsub_8(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_1002C6A44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *(_QWORD *)a1 = off_100401B48;
  v2 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 280) = 0;
  if (v2)
    operator delete();
  *(_QWORD *)a1 = off_100401C98;
  v3 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = *(std::__shared_weak_count **)(a1 + 120);
  if (!v4)
    goto LABEL_9;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (!*(_BYTE *)(a1 + 8))
LABEL_11:
      operator delete();
  }
  else
  {
LABEL_9:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_11;
  }
  nullsub_8(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_11;
}

uint64_t sub_1002C6B1C(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401B70;
  if (*(_BYTE *)(a1 + 352))
    *(_BYTE *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 8) = off_100401CC0;
  v2 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 200) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 16))
        return a1;
      goto LABEL_10;
    }
  }
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_10:
    sub_100060888(a1 + 24);
    *(_BYTE *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_1002C6BD0(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401B70;
  if (*(_BYTE *)(a1 + 352))
    *(_BYTE *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 8) = off_100401CC0;
  v2 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 200) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (!v3)
    goto LABEL_9;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 16))
LABEL_11:
      operator delete();
  }
  else
  {
LABEL_9:
    if (!*(_BYTE *)(a1 + 16))
      goto LABEL_11;
  }
  sub_100060888(a1 + 24);
  *(_BYTE *)(a1 + 16) = 0;
  goto LABEL_11;
}

uint64_t sub_1002C6C94(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t result;

  v2 = (std::__shared_weak_count *)a1[24];
  a1[23] = 0;
  a1[24] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    result = a1[25];
    a1[25] = 0;
    if (!result)
      return result;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  result = a1[25];
  a1[25] = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

BOOL sub_1002C6D18(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a1 + 184))
    return *(_QWORD *)(a1 + 344) != *(_QWORD *)(a1 + 336);
  return 0;
}

uint64_t sub_1002C6D4C(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401C98;
  v2 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_8:
    nullsub_8(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_1002C6DE8(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401C98;
  v2 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 8))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_9;
  }
  nullsub_8(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_9;
}

void sub_1002C6E94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = off_1003F98E8;
  *(_QWORD *)(a2 + 80) = 0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_DWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_DWORD *)(a2 + 72) = 0;
  *(_WORD *)(a2 + 88) &= 0xFC00u;
  if (*(_BYTE *)(a1 + 8))
  {
    sub_100051AE4(a2, a1 + 16);
    if (*(_BYTE *)(a1 + 8))
    {
      nullsub_8(a1 + 16);
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 272) += sub_1001A0388(a2, *(uint64_t **)(a1 + 128));
  }
}

void sub_1002C6F4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_8(v1);
  _Unwind_Resume(a1);
}

void sub_1002C6F60(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401CC0;
  v2 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 184);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 8))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_9;
  }
  sub_100060888(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_9;
}

void sub_1002C700C(id a1)
{
  qword_100417F10 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Database");
}

void sub_1002C7038(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  *a1 = off_100401D38;
  v2 = a1[1];
  if (v2)
  {
    v3 = a1[2];
    v4 = (void *)a1[1];
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = (void *)a1[1];
    }
    a1[2] = v2;
    operator delete(v4);
  }
  operator delete();
}

BOOL sub_1002C70F0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) != *(_QWORD *)(a1 + 16);
}

void sub_1002C7100(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v3 = *(_QWORD *)(a1 + 16);
  *a2 = *(_OWORD *)(v3 - 16);
  *(_QWORD *)(v3 - 16) = 0;
  *(_QWORD *)(v3 - 8) = 0;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(std::__shared_weak_count **)(v4 - 8);
  if (!v5)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)(a1 + 16) = v4 - 16;
  }
  else
  {
LABEL_5:
    *(_QWORD *)(a1 + 16) = v4 - 16;
  }
}

void sub_1002C7190(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401D88;
  v2 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 200) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 8))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_9;
  }
  sub_1001A3BF4(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C723C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  *(_QWORD *)a2 = off_1003F9B88;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 85) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_QWORD *)(a2 + 152) = 0;
  *(_WORD *)(a2 + 160) &= 0xF000u;
  if (*(_BYTE *)(a1 + 8))
  {
    result = sub_1001A477C(a2, a1 + 16);
    if (*(_BYTE *)(a1 + 8))
    {
      result = sub_1001A3BF4(a1 + 16);
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  else
  {
    result = sub_1001A3DE8(a2, *(uint64_t **)(a1 + 200));
    *(_QWORD *)(a1 + 344) += result;
  }
  return result;
}

void sub_1002C7300(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1001A3BF4(v1);
  _Unwind_Resume(a1);
}

void sub_1002C7314(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401DC0;
  v2 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 8))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_9;
  }
  nullsub_109(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_9;
}

void sub_1002C73C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = off_1003F9988;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) &= ~1u;
  if (*(_BYTE *)(a1 + 8))
  {
    sub_1001A157C(a2, a1 + 16);
    if (*(_BYTE *)(a1 + 8))
    {
      nullsub_109(a1 + 16);
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 232) += sub_1001A1048(a2, *(uint64_t **)(a1 + 88));
  }
}

void sub_1002C7468(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_109(v1);
  _Unwind_Resume(a1);
}

void sub_1002C747C(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401DF8;
  v2 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 232) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 224);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 8))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_9;
  }
  sub_10000CF0C(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_9;
}

void sub_1002C7528(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401E30;
  v2 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 168);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 8))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_9;
  }
  sub_100051ED0(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C75D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  *(_QWORD *)a2 = off_1003F9E78;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 32) = off_1003F9A88;
  *(_BYTE *)(a2 + 56) &= 0xFCu;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_QWORD *)(a2 + 128) = 0;
  *(_WORD *)(a2 + 136) &= 0xF800u;
  if (*(_BYTE *)(a1 + 8))
  {
    result = sub_100052E08(a2, a1 + 16);
    if (*(_BYTE *)(a1 + 8))
    {
      result = sub_100051ED0(a1 + 16);
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  else
  {
    result = sub_1001AD1A4(a2, *(uint64_t **)(a1 + 176));
    *(_QWORD *)(a1 + 320) += result;
  }
  return result;
}

void sub_1002C76A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100051ED0(v1);
  _Unwind_Resume(a1);
}

void sub_1002C76B4(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401E68;
  v2 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 184);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 8))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_9;
  }
  sub_10019DB4C(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C7760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  *(_QWORD *)a2 = off_1003F9818;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 16) = off_1003F9A88;
  *(_BYTE *)(a2 + 40) &= 0xFCu;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_BYTE *)(a2 + 96) = 0;
  *(_OWORD *)(a2 + 104) = 0u;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_WORD *)(a2 + 152) &= 0xFE00u;
  if (*(_BYTE *)(a1 + 8))
  {
    result = sub_10019E748(a2, a1 + 16);
    if (*(_BYTE *)(a1 + 8))
    {
      result = sub_10019DB4C(a1 + 16);
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  else
  {
    result = sub_10019DB7C(a2, *(uint64_t **)(a1 + 192));
    *(_QWORD *)(a1 + 336) += result;
  }
  return result;
}

void sub_1002C7834(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10019DB4C(v1);
  _Unwind_Resume(a1);
}

void sub_1002C7848(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  void *__p;
  __int128 v5;

  __p = operator new(0x28uLL);
  v5 = xmmword_100383000;
  strcpy((char *)__p, "process_output/gravityAccel.thriftbin");
  if (*(char *)(a1 + 23) < 0)
  {
    sub_10006CED8(a2, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(_QWORD *)(a1 + 16);
  }
  sub_1000675EC(a2, (uint64_t)&__p);
  if (SHIBYTE(v5) < 0)
    operator delete(__p);
}

void sub_1002C78F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002C7944(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  char __p[23];
  char v4;

  strcpy(__p, "gravityAccel.thriftbin");
  v4 = 22;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_10006CED8(a2, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(_QWORD *)(a1 + 16);
  }
  sub_1000675EC(a2, (uint64_t)__p);
  if (v4 < 0)
    operator delete(*(void **)__p);
}

void sub_1002C79DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002C7A28(uint64_t a1, const char *a2, char a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  _OWORD v17[8];
  uint64_t v18;
  _OWORD v19[8];
  uint64_t v20;

  if ((a3 & 1) == 0 || (sub_10006DB18(a2, 0, (int *)v19), LODWORD(v19[0]) <= 1))
  {
    *(_QWORD *)(a1 + 144) = 0;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  sub_100179604((uint64_t)a2, 14, 7, &v15);
  if (!*(_QWORD *)(v15 + 136) || (std::istream::tellg(v19), !v20))
  {
    *(_QWORD *)(a1 + 144) = 0;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    v12 = v16;
    if (!v16)
      return;
    goto LABEL_13;
  }
  memset(v17, 0, sizeof(v17));
  v18 = 0;
  std::istream::seekg(v15, v17);
  v5 = v16;
  *(_QWORD *)a1 = v15;
  *(_QWORD *)(a1 + 8) = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  v8 = v19[7];
  *(_OWORD *)(a1 + 112) = v19[6];
  *(_OWORD *)(a1 + 128) = v8;
  *(_QWORD *)(a1 + 144) = v20;
  v9 = v19[3];
  *(_OWORD *)(a1 + 48) = v19[2];
  *(_OWORD *)(a1 + 64) = v9;
  v10 = v19[5];
  *(_OWORD *)(a1 + 80) = v19[4];
  *(_OWORD *)(a1 + 96) = v10;
  v11 = v19[1];
  *(_OWORD *)(a1 + 16) = v19[0];
  *(_OWORD *)(a1 + 32) = v11;
  v12 = v16;
  if (v16)
  {
LABEL_13:
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_1002C7BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000E095C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C7BD8(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401C98;
  v2 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 8))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 8))
  {
LABEL_8:
    nullsub_8(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_1002C7C74(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401C98;
  v2 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 8))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_9;
  }
  nullsub_8(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_9;
}

void sub_1002C7D24(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401EE0;
  v2 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 112);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 8))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_9;
  }
  nullsub_108(a1 + 16);
  *(_BYTE *)(a1 + 8) = 0;
  goto LABEL_9;
}

void sub_1002C7DD0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 32) = 0;
  *(_WORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = off_1003F9968;
  *(_DWORD *)(a2 + 24) = 0;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_BYTE *)(a2 + 80) &= 0x80u;
  if (*(_BYTE *)(a1 + 8))
  {
    sub_1001A0FE0(a2, a1 + 16);
    if (*(_BYTE *)(a1 + 8))
    {
      nullsub_108(a1 + 16);
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 264) += sub_1001A07C8(a2, *(uint64_t **)(a1 + 120));
  }
}

void sub_1002C7E80(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_108(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1002C7E94@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002C7EC4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002C7EE0(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401F18;
  *(_QWORD *)(a1 + 8) = off_100401D88;
  v2 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 200);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 16))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_8:
    sub_1001A3BF4(a1 + 24);
    *(_BYTE *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_1002C7F84(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401F18;
  *(_QWORD *)(a1 + 8) = off_100401D88;
  v2 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 200);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 16))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 16))
      goto LABEL_9;
  }
  sub_1001A3BF4(a1 + 24);
  *(_BYTE *)(a1 + 16) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C8038(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t result;

  v2 = (std::__shared_weak_count *)a1[25];
  a1[24] = 0;
  a1[25] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    result = a1[26];
    a1[26] = 0;
    if (!result)
      return result;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  result = a1[26];
  a1[26] = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

BOOL sub_1002C80BC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a1 + 192))
    return *(_QWORD *)(a1 + 352) != *(_QWORD *)(a1 + 344);
  return 0;
}

uint64_t sub_1002C80EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _BYTE v6[168];
  uint64_t (**v7)();
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[96];

  v7 = off_1003F9B88;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  memset(v12, 0, 29);
  memset(&v12[32], 0, 58);
  if (*(_BYTE *)(a1 + 16))
  {
    sub_1001A477C((uint64_t)&v7, a1 + 24);
    if (*(_BYTE *)(a1 + 16))
    {
      sub_1001A3BF4(a1 + 24);
      *(_BYTE *)(a1 + 16) = 0;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 352) += sub_1001A3DE8((uint64_t)&v7, *(uint64_t **)(a1 + 208));
  }
  sub_1003096BC((uint64_t)v6, (uint64_t)&v7);
  v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_1003F0840;
  sub_1001A4778((uint64_t)(v4 + 4), (uint64_t)v6);
  *((_DWORD *)v4 + 6) = 4;
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_1001A3BF4((uint64_t)v6);
  return sub_1001A3BF4((uint64_t)&v7);
}

void sub_1002C81F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__shared_weak_count *v30;
  void *v32;

  std::__shared_weak_count::~__shared_weak_count(v30);
  operator delete(v32);
  sub_1001A3BF4((uint64_t)&a9);
  sub_1001A3BF4((uint64_t)&a30);
  _Unwind_Resume(a1);
}

void sub_1002C8224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  sub_1001A3BF4((uint64_t)&a30);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C8238(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401F68;
  *(_QWORD *)(a1 + 8) = off_100401DC0;
  v2 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 88);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 16))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_8:
    nullsub_109(a1 + 24);
    *(_BYTE *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_1002C82DC(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100401F68;
  *(_QWORD *)(a1 + 8) = off_100401DC0;
  v2 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 88);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 16))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 16))
      goto LABEL_9;
  }
  nullsub_109(a1 + 24);
  *(_BYTE *)(a1 + 16) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C8390(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t result;

  v2 = (std::__shared_weak_count *)a1[11];
  a1[10] = 0;
  a1[11] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    result = a1[12];
    a1[12] = 0;
    if (!result)
      return result;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  result = a1[12];
  a1[12] = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

BOOL sub_1002C8414(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a1 + 80))
    return *(_QWORD *)(a1 + 240) != *(_QWORD *)(a1 + 232);
  return 0;
}

uint64_t sub_1002C8444@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _BYTE v6[56];
  uint64_t (**v7)();
  __int128 v8;
  _BYTE v9[25];

  v7 = off_1003F9988;
  v8 = 0u;
  memset(v9, 0, sizeof(v9));
  if (*(_BYTE *)(a1 + 16))
  {
    sub_1001A157C((uint64_t)&v7, a1 + 24);
    if (*(_BYTE *)(a1 + 16))
    {
      nullsub_109(a1 + 24);
      *(_BYTE *)(a1 + 16) = 0;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 240) += sub_1001A1048((uint64_t)&v7, *(uint64_t **)(a1 + 96));
  }
  sub_100309820((uint64_t)v6, (uint64_t)&v7);
  v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_1003F0840;
  sub_1001A1538((uint64_t)(v4 + 4), (uint64_t)v6);
  *((_DWORD *)v4 + 6) = 1;
  *a2 = v4 + 3;
  a2[1] = v4;
  nullsub_109(v6);
  return nullsub_109(&v7);
}

void sub_1002C8528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  std::__shared_weak_count *v16;
  void *v18;

  std::__shared_weak_count::~__shared_weak_count(v16);
  operator delete(v18);
  nullsub_109(&a9);
  nullsub_109(&a16);
  _Unwind_Resume(a1);
}

void sub_1002C8558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  nullsub_109(va);
  _Unwind_Resume(a1);
}

void sub_1002C8570()
{
  operator delete();
}

_QWORD *sub_1002C8584()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_100401FB8;
  return result;
}

void sub_1002C85A8(uint64_t a1, _QWORD *a2)
{
  *a2 = off_100401FB8;
}

uint64_t sub_1002C85C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_100309D1C(a2, 1, a1);
}

uint64_t sub_1002C85D0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iteratorC1ENSt3__16vectorI19LocalizerInputEventNS0_9allocatorIS2_EEEERK18Unp"
                     "rocessedDatarunNS0_6chrono8durationIxNS0_5ratioILl1ELl1000000000EEEEEjE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iteratorC1ENSt3__16vectorI19LocalizerInputEventNS0_9allocatorIS2_"
                                "EEEERK18UnprocessedDatarunNS0_6chrono8durationIxNS0_5ratioILl1ELl1000000000EEEEEjE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iteratorC1ENSt3__16vectorI19LocalizerInputEventNS0_9allocatorIS2_EEEERK18UnprocessedDatarunNS0_6chrono8durationIxNS0_5ratioILl1ELl1000000000EEEEEjE3$_0"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iteratorC1ENSt3__16vectorI19LocalizerInputEventNS0_9allocatorIS2_EEEERK18UnprocessedDatarunNS0_6chrono8durationIxNS0_5ratioILl1ELl1000000000EEEEEjE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_1002C863C()
{
}

uint64_t sub_1002C8648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;

  *(_QWORD *)a1 = off_100402048;
  sub_100178D5C(a2, (_DWORD *)(a1 + 8));
  v5 = *(_DWORD *)(a1 + 8);
  v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_100402098;
  v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(_QWORD *)(a1 + 16) = v6 + 3;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = operator new(0x68uLL);
  v8[1] = 0;
  v8[2] = 0;
  *v8 = off_1004020E8;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(_QWORD *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_100382F50;
  v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(_QWORD *)(a1 + 32) = v8 + 3;
  *(_QWORD *)(a1 + 40) = v8;
  v10 = *(_QWORD *)(a3 + 24);
  if (!v10)
    goto LABEL_4;
  if (v10 != a3)
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
LABEL_4:
    *(_QWORD *)(a1 + 72) = v10;
    return a1;
  }
  *(_QWORD *)(a1 + 72) = a1 + 48;
  (*(void (**)(_QWORD))(**(_QWORD **)(a3 + 24) + 24))(*(_QWORD *)(a3 + 24));
  return a1;
}

void sub_1002C8780(_Unwind_Exception *a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000E095C(v3);
  sub_1000E095C(v2 + 16);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002C87C0(_Unwind_Exception *a1)
{
  int *v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002C87E0(_Unwind_Exception *a1)
{
  int *v1;

  sub_100068888(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C87F4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_100402048;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  v5 = *(std::__shared_weak_count **)(a1 + 40);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v8 = *(std::__shared_weak_count **)(a1 + 24);
      if (v8)
        goto LABEL_11;
LABEL_14:
      sub_100068888((int *)(a1 + 8));
      return a1;
    }
  }
  v8 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v8)
    goto LABEL_14;
LABEL_11:
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    goto LABEL_14;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  sub_100068888((int *)(a1 + 8));
  return a1;
}

void sub_1002C88EC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_100402048;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
    {
LABEL_6:
      v5 = *(std::__shared_weak_count **)(a1 + 40);
      if (!v5)
        goto LABEL_10;
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      else
      {
LABEL_10:
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
LABEL_16:
      sub_100068888((int *)(a1 + 8));
      operator delete();
    }
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
  goto LABEL_6;
}

void sub_1002C89DC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_1002C8A84(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *result;
  int v2;
  void *v3;

  result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    v3 = 0;
    v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_1002C8AB8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v3;
  char *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v7;
  uint64_t v8;
  _QWORD *v9;
  std::runtime_error v10;
  _QWORD v11[20];
  _BYTE v12[56];
  _BYTE v13[24];
  _BYTE v14[24];
  _QWORD v15[8];
  _BYTE v16[28];
  unsigned int v17;
  _BYTE v18[24];

  v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream not avaialble");
    sub_10018D04C((uint64_t)v18);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<CLProviderPositionInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = CLProviderPositionInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v18);
  }
  v17 = 0;
  v5 = (char *)*((_QWORD *)v3 + 1);
  if ((unint64_t)v5 >= *((_QWORD *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v17) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the length");
      sub_10018D04C((uint64_t)v16);
      sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<CLProviderPositionInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = CLProviderPositionInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v16);
    }
  }
  else
  {
    v17 = *v5;
    *((_QWORD *)v3 + 1) = v5 + 1;
  }
  sub_100016654(v15);
  v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v17);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v15, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the message");
    sub_10018D04C((uint64_t)v14);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<CLProviderPositionInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = CLProviderPositionInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v14);
  }
  v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((_BYTE *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to consume the whole message");
    sub_10018D04C((uint64_t)v13);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<CLProviderPositionInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = CLProviderPositionInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v13);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  v8 = *(_QWORD *)(a1 + 72);
  if (!v8)
    sub_10016CA74();
  (*(void (**)(std::runtime_error *__return_ptr, uint64_t, _QWORD *))(*(_QWORD *)v8 + 48))(&v10, v8, v15);
  v9 = operator new(0x108uLL);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = off_1003F0840;
  v9[4] = v10.__vftable;
  *((_DWORD *)v9 + 10) = v10.__imp_.__imp_;
  sub_100157C2C((uint64_t)(v9 + 6), (uint64_t)v11);
  sub_100018EC4((uint64_t)(v9 + 26), (uint64_t)v12);
  *((_DWORD *)v9 + 6) = 20;
  *a2 = v9 + 3;
  a2[1] = v9;
  sub_100051F2C((uint64_t)v12);
  sub_100007738(v11);
  sub_100026CE8(v15);
}

void sub_1002C8D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
  uint64_t v9;
  void *v11;

  v11 = *(void **)(v9 - 104);
  if (v11)
  {
    *(_QWORD *)(v9 - 96) = v11;
    operator delete(v11);
  }
  std::runtime_error::~runtime_error(&a9);
  _Unwind_Resume(a1);
}

void sub_1002C8E70(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  __cxa_free_exception(v1);
  sub_100026CE8((_QWORD *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_1002C8E90(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002C8EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  std::__shared_weak_count *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v35;

  sub_100007738(v32);
  std::__shared_weak_count::~__shared_weak_count(v31);
  operator delete(v35);
  sub_100051F2C((uint64_t)&a31);
  sub_100007738(&a11);
  sub_100026CE8((_QWORD *)(v33 - 168));
  _Unwind_Resume(a1);
}

void sub_1002C8EF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100026CE8((_QWORD *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_1002C8F04(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100026CE8((_QWORD *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_1002C8F18(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100402098;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002C8F28(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100402098;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1002C8F58(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1002C8F68(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004020E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002C8F78(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004020E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_1002C8FA8(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(a1 + 24));
}

uint64_t sub_1002C8FB4(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100402138;
  *(_QWORD *)(a1 + 8) = off_100401E30;
  v2 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 176);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 16))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_8:
    sub_100051ED0(a1 + 24);
    *(_BYTE *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_1002C9058(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100402138;
  *(_QWORD *)(a1 + 8) = off_100401E30;
  v2 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 176);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 16))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 16))
      goto LABEL_9;
  }
  sub_100051ED0(a1 + 24);
  *(_BYTE *)(a1 + 16) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C910C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t result;

  v2 = (std::__shared_weak_count *)a1[22];
  a1[21] = 0;
  a1[22] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    result = a1[23];
    a1[23] = 0;
    if (!result)
      return result;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  result = a1[23];
  a1[23] = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

BOOL sub_1002C9190(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a1 + 168))
    return *(_QWORD *)(a1 + 328) != *(_QWORD *)(a1 + 320);
  return 0;
}

uint64_t sub_1002C91C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _BYTE v6[11];
  _QWORD v7[7];
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[26];

  v7[0] = off_1003F9E78;
  memset(&v7[1], 0, 24);
  v7[5] = 0;
  v7[6] = 0;
  v7[4] = off_1003F9A88;
  v8 = 0;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  memset(v12, 0, sizeof(v12));
  if (*(_BYTE *)(a1 + 16))
  {
    sub_100052E08((uint64_t)v7, a1 + 24);
    if (*(_BYTE *)(a1 + 16))
    {
      sub_100051ED0(a1 + 24);
      *(_BYTE *)(a1 + 16) = 0;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 328) += sub_1001AD1A4((uint64_t)v7, *(uint64_t **)(a1 + 184));
  }
  sub_1000C85E4();
  v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_1003F0840;
  sub_1000C90B8(v4 + 4, v6);
  *((_DWORD *)v4 + 6) = 9;
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_100051ED0((uint64_t)v6);
  return sub_100051ED0((uint64_t)v7);
}

void sub_1002C92C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  std::__shared_weak_count *v27;
  void *v29;

  std::__shared_weak_count::~__shared_weak_count(v27);
  operator delete(v29);
  sub_100051ED0((uint64_t)&a9);
  sub_100051ED0((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_1002C92F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_100051ED0((uint64_t)&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C930C(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100402188;
  *(_QWORD *)(a1 + 8) = off_100401E68;
  v2 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 200) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 16))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_8:
    sub_10019DB4C(a1 + 24);
    *(_BYTE *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_1002C93B0(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100402188;
  *(_QWORD *)(a1 + 8) = off_100401E68;
  v2 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 200) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 16))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 16))
      goto LABEL_9;
  }
  sub_10019DB4C(a1 + 24);
  *(_BYTE *)(a1 + 16) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C9464(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t result;

  v2 = (std::__shared_weak_count *)a1[24];
  a1[23] = 0;
  a1[24] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    result = a1[25];
    a1[25] = 0;
    if (!result)
      return result;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  result = a1[25];
  a1[25] = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

BOOL sub_1002C94E8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a1 + 184))
    return *(_QWORD *)(a1 + 344) != *(_QWORD *)(a1 + 336);
  return 0;
}

uint64_t sub_1002C9518@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _BYTE v6[160];
  _QWORD v7[5];
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int16 v16;

  v7[0] = off_1003F9818;
  v7[1] = 0;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0;
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = off_1003F9A88;
  v8 = 0;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0;
  if (*(_BYTE *)(a1 + 16))
  {
    sub_10019E748((uint64_t)v7, a1 + 24);
    if (*(_BYTE *)(a1 + 16))
    {
      sub_10019DB4C(a1 + 24);
      *(_BYTE *)(a1 + 16) = 0;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 344) += sub_10019DB7C((uint64_t)v7, *(uint64_t **)(a1 + 200));
  }
  sub_100309864();
  v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_1003F0840;
  sub_10019E744(v4 + 4, v6);
  *((_DWORD *)v4 + 6) = 6;
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_10019DB4C(v6);
  return sub_10019DB4C(v7);
}

void sub_1002C962C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__shared_weak_count *v29;
  void *v31;

  std::__shared_weak_count::~__shared_weak_count(v29);
  operator delete(v31);
  sub_10019DB4C(&a9);
  sub_10019DB4C(&a29);
  _Unwind_Resume(a1);
}

void sub_1002C965C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  sub_10019DB4C(&a29);
  _Unwind_Resume(a1);
}

_QWORD *sub_1002C9670(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = off_1004021D8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_1002C96B0(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = off_1004021D8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  operator delete();
}

uint64_t sub_1002C9700(uint64_t a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t result;

  v1 = *(_QWORD **)(a1 + 8);
  v2 = (std::__shared_weak_count *)v1[15];
  v1[14] = 0;
  v1[15] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    result = v1[16];
    v1[16] = 0;
    if (!result)
      return result;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  result = v1[16];
  v1[16] = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

BOOL sub_1002C9784(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)(v1 + 8))
    return 1;
  if (*(_QWORD *)(v1 + 112))
    return *(_QWORD *)(v1 + 272) != *(_QWORD *)(v1 + 264);
  return 0;
}

uint64_t sub_1002C97B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _BYTE v6[96];
  int v7;
  _QWORD v8[12];

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)(a1 + 8) + 16))(v8);
  sub_10004F494(v6, *(unsigned int *)(a1 + 16), v8);
  v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_1003F0840;
  sub_10004F148((uint64_t)(v4 + 4), (uint64_t)v6);
  *((_DWORD *)v4 + 32) = v7;
  *((_DWORD *)v4 + 6) = 8;
  *a2 = v4 + 3;
  a2[1] = v4;
  nullsub_8(v6);
  return nullsub_8(v8);
}

void sub_1002C9850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  std::__shared_weak_count *v23;
  void *v25;

  std::__shared_weak_count::~__shared_weak_count(v23);
  operator delete(v25);
  nullsub_8(&a10);
  nullsub_8(&a23);
  _Unwind_Resume(a1);
}

void sub_1002C9878(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  nullsub_8((uint64_t *)va);
  nullsub_8(va1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C9894(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100402228;
  *(_QWORD *)(a1 + 8) = off_100401EE0;
  v2 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (!*(_BYTE *)(a1 + 16))
        return a1;
      goto LABEL_8;
    }
  }
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_8:
    nullsub_108(a1 + 24);
    *(_BYTE *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_1002C9938(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *(_QWORD *)a1 = off_100402228;
  *(_QWORD *)(a1 + 8) = off_100401EE0;
  v2 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(_BYTE *)(a1 + 16))
LABEL_9:
      operator delete();
  }
  else
  {
LABEL_7:
    if (!*(_BYTE *)(a1 + 16))
      goto LABEL_9;
  }
  nullsub_108(a1 + 24);
  *(_BYTE *)(a1 + 16) = 0;
  goto LABEL_9;
}

uint64_t sub_1002C99EC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t result;

  v2 = (std::__shared_weak_count *)a1[15];
  a1[14] = 0;
  a1[15] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    result = a1[16];
    a1[16] = 0;
    if (!result)
      return result;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  result = a1[16];
  a1[16] = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

BOOL sub_1002C9A70(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a1 + 112))
    return *(_QWORD *)(a1 + 272) != *(_QWORD *)(a1 + 264);
  return 0;
}

uint64_t sub_1002C9AA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _BYTE v6[88];
  _QWORD v7[3];
  int v8;
  uint64_t v9;
  __int16 v10;
  __int128 v11;
  __int128 v12;
  char v13;

  v9 = 0;
  v10 = 0;
  v7[1] = 0;
  v7[2] = 0;
  v7[0] = off_1003F9968;
  v8 = 0;
  v11 = 0u;
  v12 = 0u;
  v13 = 0;
  if (*(_BYTE *)(a1 + 16))
  {
    sub_1001A0FE0((uint64_t)v7, a1 + 24);
    if (*(_BYTE *)(a1 + 16))
    {
      nullsub_108(a1 + 24);
      *(_BYTE *)(a1 + 16) = 0;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 272) += sub_1001A07C8((uint64_t)v7, *(uint64_t **)(a1 + 128));
  }
  sub_1003097DC((uint64_t)v6, (uint64_t)v7);
  v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_1003F0840;
  sub_1001A0F8C((uint64_t)(v4 + 4), (uint64_t)v6);
  *((_DWORD *)v4 + 6) = 10;
  *a2 = v4 + 3;
  a2[1] = v4;
  nullsub_108(v6);
  return nullsub_108(v7);
}

void sub_1002C9B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  std::__shared_weak_count *v20;
  void *v22;

  std::__shared_weak_count::~__shared_weak_count(v20);
  operator delete(v22);
  nullsub_108(&a9);
  nullsub_108(&a20);
  _Unwind_Resume(a1);
}

void sub_1002C9BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  nullsub_108(va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C9BDC(uint64_t a1)
{
  *(_QWORD *)a1 = off_100402278;
  if (*(_BYTE *)(a1 + 8))
  {
    sub_1002CF380((_QWORD *)(a1 + 16));
    *(_BYTE *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_1002C9C1C(uint64_t a1)
{
  *(_QWORD *)a1 = off_100402278;
  if (*(_BYTE *)(a1 + 8))
  {
    sub_1002CF380((_QWORD *)(a1 + 16));
    *(_BYTE *)(a1 + 8) = 0;
  }
  operator delete();
}

_QWORD *sub_1002C9C6C(_QWORD *result)
{
  _QWORD *v1;

  if (*((_BYTE *)result + 8))
  {
    v1 = result;
    result = sub_1002CF380(result + 2);
    *((_BYTE *)v1 + 8) = 0;
  }
  return result;
}

uint64_t sub_1002C9C9C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1002C9CA4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  if (*(_BYTE *)(result + 8)
    && (v3 = result,
        v4 = (_QWORD *)(result + 16),
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 16) + 16))(result + 16),
        (result & 1) != 0))
  {
    result = (uint64_t)sub_1002CF4E4((uint64_t)v4, a2);
    if (!*a2)
    {
      if (*(_BYTE *)(v3 + 8))
      {
        result = (uint64_t)sub_1002CF380(v4);
        *(_BYTE *)(v3 + 8) = 0;
      }
    }
  }
  else
  {
    v5 = qword_10042EA88;
    *a2 = qword_10042EA80;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  return result;
}

void sub_1002C9D54()
{
  operator delete();
}

_QWORD *sub_1002C9D68()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_1004022C8;
  return result;
}

void sub_1002C9D8C(uint64_t a1, _QWORD *a2)
{
  *a2 = off_1004022C8;
}

uint64_t sub_1002C9DA4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_100309990(a2, a1);
}

uint64_t sub_1002C9DAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI24ARSessionStateIn"
                     "putEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI24ARSes"
                                "sionStateInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI24ARSessionStateInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI24ARSessionStateInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_1002C9E18()
{
}

uint64_t sub_1002C9E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;

  *(_QWORD *)a1 = off_100402358;
  sub_100178D5C(a2, (_DWORD *)(a1 + 8));
  v5 = *(_DWORD *)(a1 + 8);
  v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_100402098;
  v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(_QWORD *)(a1 + 16) = v6 + 3;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = operator new(0x68uLL);
  v8[1] = 0;
  v8[2] = 0;
  *v8 = off_1004020E8;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(_QWORD *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_100382F50;
  v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(_QWORD *)(a1 + 32) = v8 + 3;
  *(_QWORD *)(a1 + 40) = v8;
  v10 = *(_QWORD *)(a3 + 24);
  if (!v10)
    goto LABEL_4;
  if (v10 != a3)
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
LABEL_4:
    *(_QWORD *)(a1 + 72) = v10;
    return a1;
  }
  *(_QWORD *)(a1 + 72) = a1 + 48;
  (*(void (**)(_QWORD))(**(_QWORD **)(a3 + 24) + 24))(*(_QWORD *)(a3 + 24));
  return a1;
}

void sub_1002C9F5C(_Unwind_Exception *a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000E095C(v3);
  sub_1000E095C(v2 + 16);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002C9F9C(_Unwind_Exception *a1)
{
  int *v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002C9FBC(_Unwind_Exception *a1)
{
  int *v1;

  sub_100068888(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C9FD0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_100402358;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  v5 = *(std::__shared_weak_count **)(a1 + 40);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v8 = *(std::__shared_weak_count **)(a1 + 24);
      if (v8)
        goto LABEL_11;
LABEL_14:
      sub_100068888((int *)(a1 + 8));
      return a1;
    }
  }
  v8 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v8)
    goto LABEL_14;
LABEL_11:
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    goto LABEL_14;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  sub_100068888((int *)(a1 + 8));
  return a1;
}

void sub_1002CA0C8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_100402358;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
    {
LABEL_6:
      v5 = *(std::__shared_weak_count **)(a1 + 40);
      if (!v5)
        goto LABEL_10;
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      else
      {
LABEL_10:
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
LABEL_16:
      sub_100068888((int *)(a1 + 8));
      operator delete();
    }
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
  goto LABEL_6;
}

void sub_1002CA1B8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_1002CA260(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *result;
  int v2;
  void *v3;

  result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    v3 = 0;
    v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_1002CA294(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v3;
  char *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v7;
  uint64_t v8;
  _QWORD *v9;
  std::runtime_error v10;
  _BYTE v11[56];
  _BYTE v12[24];
  _BYTE v13[24];
  _QWORD v14[8];
  _BYTE v15[28];
  unsigned int v16;
  _BYTE v17[24];

  v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream not avaialble");
    sub_10018D04C((uint64_t)v17);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<ARSessionStateInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = ARSessionStateInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v17);
  }
  v16 = 0;
  v5 = (char *)*((_QWORD *)v3 + 1);
  if ((unint64_t)v5 >= *((_QWORD *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v16) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the length");
      sub_10018D04C((uint64_t)v15);
      sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<ARSessionStateInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = ARSessionStateInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v15);
    }
  }
  else
  {
    v16 = *v5;
    *((_QWORD *)v3 + 1) = v5 + 1;
  }
  sub_100016654(v14);
  v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v16);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v14, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the message");
    sub_10018D04C((uint64_t)v13);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<ARSessionStateInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = ARSessionStateInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v13);
  }
  v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((_BYTE *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to consume the whole message");
    sub_10018D04C((uint64_t)v12);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<ARSessionStateInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = ARSessionStateInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v12);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  v8 = *(_QWORD *)(a1 + 72);
  if (!v8)
    sub_10016CA74();
  (*(void (**)(std::runtime_error *__return_ptr, uint64_t, _QWORD *))(*(_QWORD *)v8 + 48))(&v10, v8, v14);
  v9 = operator new(0x108uLL);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = off_1003F0840;
  v9[4] = v10.__vftable;
  *((_DWORD *)v9 + 10) = v10.__imp_.__imp_;
  sub_100018EC4((uint64_t)(v9 + 6), (uint64_t)v11);
  *((_DWORD *)v9 + 6) = 17;
  *a2 = v9 + 3;
  a2[1] = v9;
  sub_100051F2C((uint64_t)v11);
  sub_100026CE8(v14);
}

void sub_1002CA554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::runtime_error a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v23;
  void *v25;

  v25 = *(void **)(v23 - 88);
  if (v25)
  {
    *(_QWORD *)(v23 - 80) = v25;
    operator delete(v25);
  }
  std::runtime_error::~runtime_error(&a9);
  _Unwind_Resume(a1);
}

void sub_1002CA628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;

  __cxa_free_exception(v24);
  sub_100026CE8(&a24);
  _Unwind_Resume(a1);
}

void sub_1002CA648(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002CA65C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  std::__shared_weak_count *v24;
  void *v26;

  std::__shared_weak_count::~__shared_weak_count(v24);
  operator delete(v26);
  sub_100051F2C((uint64_t)&a11);
  sub_100026CE8(&a24);
  _Unwind_Resume(a1);
}

void sub_1002CA690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_100026CE8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1002CA6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_100026CE8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1002CA6BC()
{
  operator delete();
}

_QWORD *sub_1002CA6D0()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_1004023A8;
  return result;
}

void sub_1002CA6F4(uint64_t a1, _QWORD *a2)
{
  *a2 = off_1004023A8;
}

_QWORD *sub_1002CA70C@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_100309A7C(a2, a1);
}

uint64_t sub_1002CA714(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI23VIOEstimationInp"
                     "utEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI23VIOEs"
                                "timationInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI23VIOEstimationInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI23VIOEstimationInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_1002CA780()
{
}

uint64_t sub_1002CA78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;

  *(_QWORD *)a1 = off_100402438;
  sub_100178D5C(a2, (_DWORD *)(a1 + 8));
  v5 = *(_DWORD *)(a1 + 8);
  v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_100402098;
  v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(_QWORD *)(a1 + 16) = v6 + 3;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = operator new(0x68uLL);
  v8[1] = 0;
  v8[2] = 0;
  *v8 = off_1004020E8;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(_QWORD *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_100382F50;
  v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(_QWORD *)(a1 + 32) = v8 + 3;
  *(_QWORD *)(a1 + 40) = v8;
  v10 = *(_QWORD *)(a3 + 24);
  if (!v10)
    goto LABEL_4;
  if (v10 != a3)
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
LABEL_4:
    *(_QWORD *)(a1 + 72) = v10;
    return a1;
  }
  *(_QWORD *)(a1 + 72) = a1 + 48;
  (*(void (**)(_QWORD))(**(_QWORD **)(a3 + 24) + 24))(*(_QWORD *)(a3 + 24));
  return a1;
}

void sub_1002CA8C4(_Unwind_Exception *a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000E095C(v3);
  sub_1000E095C(v2 + 16);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002CA904(_Unwind_Exception *a1)
{
  int *v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002CA924(_Unwind_Exception *a1)
{
  int *v1;

  sub_100068888(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CA938(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_100402438;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  v5 = *(std::__shared_weak_count **)(a1 + 40);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v8 = *(std::__shared_weak_count **)(a1 + 24);
      if (v8)
        goto LABEL_11;
LABEL_14:
      sub_100068888((int *)(a1 + 8));
      return a1;
    }
  }
  v8 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v8)
    goto LABEL_14;
LABEL_11:
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    goto LABEL_14;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  sub_100068888((int *)(a1 + 8));
  return a1;
}

void sub_1002CAA30(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_100402438;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
    {
LABEL_6:
      v5 = *(std::__shared_weak_count **)(a1 + 40);
      if (!v5)
        goto LABEL_10;
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      else
      {
LABEL_10:
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
LABEL_16:
      sub_100068888((int *)(a1 + 8));
      operator delete();
    }
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
  goto LABEL_6;
}

void sub_1002CAB20(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_1002CABC8(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *result;
  int v2;
  void *v3;

  result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    v3 = 0;
    v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_1002CABFC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v3;
  char *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v7;
  uint64_t v8;
  _QWORD *v9;
  std::runtime_error v10;
  _BYTE v11[56];
  _BYTE v12[24];
  _BYTE v13[24];
  _QWORD v14[8];
  _BYTE v15[28];
  unsigned int v16;
  _BYTE v17[24];

  v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream not avaialble");
    sub_10018D04C((uint64_t)v17);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VIOEstimationInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VIOEstimationInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v17);
  }
  v16 = 0;
  v5 = (char *)*((_QWORD *)v3 + 1);
  if ((unint64_t)v5 >= *((_QWORD *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v16) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the length");
      sub_10018D04C((uint64_t)v15);
      sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VIOEstimationInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VIOEstimationInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v15);
    }
  }
  else
  {
    v16 = *v5;
    *((_QWORD *)v3 + 1) = v5 + 1;
  }
  sub_100016654(v14);
  v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v16);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v14, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the message");
    sub_10018D04C((uint64_t)v13);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VIOEstimationInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VIOEstimationInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v13);
  }
  v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((_BYTE *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to consume the whole message");
    sub_10018D04C((uint64_t)v12);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VIOEstimationInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VIOEstimationInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v12);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  v8 = *(_QWORD *)(a1 + 72);
  if (!v8)
    sub_10016CA74();
  (*(void (**)(std::runtime_error *__return_ptr, uint64_t, _QWORD *))(*(_QWORD *)v8 + 48))(&v10, v8, v14);
  v9 = operator new(0x108uLL);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = off_1003F0840;
  v9[4] = v10.__vftable;
  sub_10010AFBC((uint64_t)(v9 + 5), (uint64_t)&v10.__imp_);
  sub_100018EC4((uint64_t)(v9 + 18), (uint64_t)v11);
  *((_DWORD *)v9 + 6) = 18;
  *a2 = v9 + 3;
  a2[1] = v9;
  sub_100051F2C((uint64_t)v11);
  sub_10010B1CC(&v10.__imp_.__imp_);
  sub_100026CE8(v14);
}

void sub_1002CAED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::runtime_error a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  void *v35;

  v35 = *(void **)(v33 - 104);
  if (v35)
  {
    *(_QWORD *)(v33 - 96) = v35;
    operator delete(v35);
  }
  std::runtime_error::~runtime_error(&a9);
  _Unwind_Resume(a1);
}

void sub_1002CAFAC(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  __cxa_free_exception(v1);
  sub_100026CE8((_QWORD *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CAFCC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002CAFE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  std::__shared_weak_count *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_10010B1CC(v3);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v6);
  sub_100051F2C((uint64_t)va1);
  sub_10010B1CC((uint64_t *)va);
  sub_100026CE8((_QWORD *)(v4 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CB02C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100026CE8((_QWORD *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CB040(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100026CE8((_QWORD *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CB058()
{
  operator delete();
}

_QWORD *sub_1002CB06C()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_100402488;
  return result;
}

void sub_1002CB090(uint64_t a1, _QWORD *a2)
{
  *a2 = off_100402488;
}

_QWORD *sub_1002CB0A8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_100309BCC(a2, a1);
}

uint64_t sub_1002CB0B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI30VLLocalizationRe"
                     "sultInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI30VLLoc"
                                "alizationResultInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI30VLLocalizationResultInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI30VLLocalizationResultInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_1002CB11C()
{
}

uint64_t sub_1002CB128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;

  *(_QWORD *)a1 = off_100402518;
  sub_100178D5C(a2, (_DWORD *)(a1 + 8));
  v5 = *(_DWORD *)(a1 + 8);
  v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_100402098;
  v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(_QWORD *)(a1 + 16) = v6 + 3;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = operator new(0x68uLL);
  v8[1] = 0;
  v8[2] = 0;
  *v8 = off_1004020E8;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(_QWORD *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_100382F50;
  v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(_QWORD *)(a1 + 32) = v8 + 3;
  *(_QWORD *)(a1 + 40) = v8;
  v10 = *(_QWORD *)(a3 + 24);
  if (!v10)
    goto LABEL_4;
  if (v10 != a3)
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
LABEL_4:
    *(_QWORD *)(a1 + 72) = v10;
    return a1;
  }
  *(_QWORD *)(a1 + 72) = a1 + 48;
  (*(void (**)(_QWORD))(**(_QWORD **)(a3 + 24) + 24))(*(_QWORD *)(a3 + 24));
  return a1;
}

void sub_1002CB260(_Unwind_Exception *a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000E095C(v3);
  sub_1000E095C(v2 + 16);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002CB2A0(_Unwind_Exception *a1)
{
  int *v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002CB2C0(_Unwind_Exception *a1)
{
  int *v1;

  sub_100068888(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CB2D4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_100402518;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  v5 = *(std::__shared_weak_count **)(a1 + 40);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v8 = *(std::__shared_weak_count **)(a1 + 24);
      if (v8)
        goto LABEL_11;
LABEL_14:
      sub_100068888((int *)(a1 + 8));
      return a1;
    }
  }
  v8 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v8)
    goto LABEL_14;
LABEL_11:
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    goto LABEL_14;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  sub_100068888((int *)(a1 + 8));
  return a1;
}

void sub_1002CB3CC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_100402518;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
    {
LABEL_6:
      v5 = *(std::__shared_weak_count **)(a1 + 40);
      if (!v5)
        goto LABEL_10;
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      else
      {
LABEL_10:
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
LABEL_16:
      sub_100068888((int *)(a1 + 8));
      operator delete();
    }
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
  goto LABEL_6;
}

void sub_1002CB4BC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_1002CB564(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *result;
  int v2;
  void *v3;

  result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    v3 = 0;
    v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_1002CB598(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v3;
  char *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v7;
  uint64_t v8;
  _QWORD *v9;
  std::runtime_error v10;
  _BYTE v11[56];
  _BYTE v12[24];
  _BYTE v13[24];
  _QWORD v14[8];
  _BYTE v15[28];
  unsigned int v16;
  _BYTE v17[24];

  v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream not avaialble");
    sub_10018D04C((uint64_t)v17);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VLLocalizationResultInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VLLocalizationResultInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v17);
  }
  v16 = 0;
  v5 = (char *)*((_QWORD *)v3 + 1);
  if ((unint64_t)v5 >= *((_QWORD *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v16) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the length");
      sub_10018D04C((uint64_t)v15);
      sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VLLocalizationResultInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VLLocalizationResultInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v15);
    }
  }
  else
  {
    v16 = *v5;
    *((_QWORD *)v3 + 1) = v5 + 1;
  }
  sub_100016654(v14);
  v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v16);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v14, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the message");
    sub_10018D04C((uint64_t)v13);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VLLocalizationResultInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VLLocalizationResultInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v13);
  }
  v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((_BYTE *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to consume the whole message");
    sub_10018D04C((uint64_t)v12);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VLLocalizationResultInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VLLocalizationResultInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v12);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  v8 = *(_QWORD *)(a1 + 72);
  if (!v8)
    sub_10016CA74();
  (*(void (**)(std::runtime_error *__return_ptr, uint64_t, _QWORD *))(*(_QWORD *)v8 + 48))(&v10, v8, v14);
  v9 = operator new(0x108uLL);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = off_1003F0840;
  v9[4] = v10.__vftable;
  sub_100114E28((uint64_t)(v9 + 5), (uint64_t)&v10.__imp_);
  sub_100018EC4((uint64_t)(v9 + 14), (uint64_t)v11);
  *((_DWORD *)v9 + 6) = 19;
  *a2 = v9 + 3;
  a2[1] = v9;
  sub_100051F2C((uint64_t)v11);
  sub_100114EB8(&v10.__imp_.__imp_);
  sub_100026CE8(v14);
}

void sub_1002CB874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::runtime_error a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  void *v31;

  v31 = *(void **)(v29 - 104);
  if (v31)
  {
    *(_QWORD *)(v29 - 96) = v31;
    operator delete(v31);
  }
  std::runtime_error::~runtime_error(&a9);
  _Unwind_Resume(a1);
}

void sub_1002CB948(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  __cxa_free_exception(v1);
  sub_100026CE8((_QWORD *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CB968(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002CB97C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  std::__shared_weak_count *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  sub_100114EB8(v3);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v6);
  sub_100051F2C((uint64_t)va1);
  sub_100114EB8((uint64_t *)va);
  sub_100026CE8((_QWORD *)(v4 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CB9C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100026CE8((_QWORD *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CB9DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100026CE8((_QWORD *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CB9F4()
{
  operator delete();
}

_QWORD *sub_1002CBA08()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_100402568;
  return result;
}

void sub_1002CBA2C(uint64_t a1, _QWORD *a2)
{
  *a2 = off_100402568;
}

_QWORD *sub_1002CBA44@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_100309E7C(a2, a1);
}

uint64_t sub_1002CBA4C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI34OutdoorEstimator"
                     "LogEntryInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI34Outdo"
                                "orEstimatorLogEntryInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI34OutdoorEstimatorLogEntryInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI34OutdoorEstimatorLogEntryInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_1002CBAB8()
{
}

uint64_t sub_1002CBAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;

  *(_QWORD *)a1 = off_1004025F8;
  sub_100178D5C(a2, (_DWORD *)(a1 + 8));
  v5 = *(_DWORD *)(a1 + 8);
  v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_100402098;
  v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(_QWORD *)(a1 + 16) = v6 + 3;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = operator new(0x68uLL);
  v8[1] = 0;
  v8[2] = 0;
  *v8 = off_1004020E8;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(_QWORD *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_100382F50;
  v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(_QWORD *)(a1 + 32) = v8 + 3;
  *(_QWORD *)(a1 + 40) = v8;
  v10 = *(_QWORD *)(a3 + 24);
  if (!v10)
    goto LABEL_4;
  if (v10 != a3)
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
LABEL_4:
    *(_QWORD *)(a1 + 72) = v10;
    return a1;
  }
  *(_QWORD *)(a1 + 72) = a1 + 48;
  (*(void (**)(_QWORD))(**(_QWORD **)(a3 + 24) + 24))(*(_QWORD *)(a3 + 24));
  return a1;
}

void sub_1002CBBFC(_Unwind_Exception *a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000E095C(v3);
  sub_1000E095C(v2 + 16);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002CBC3C(_Unwind_Exception *a1)
{
  int *v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100068888(v1);
  _Unwind_Resume(a1);
}

void sub_1002CBC5C(_Unwind_Exception *a1)
{
  int *v1;

  sub_100068888(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CBC70(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_1004025F8;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  v5 = *(std::__shared_weak_count **)(a1 + 40);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v8 = *(std::__shared_weak_count **)(a1 + 24);
      if (v8)
        goto LABEL_11;
LABEL_14:
      sub_100068888((int *)(a1 + 8));
      return a1;
    }
  }
  v8 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v8)
    goto LABEL_14;
LABEL_11:
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    goto LABEL_14;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  sub_100068888((int *)(a1 + 8));
  return a1;
}

void sub_1002CBD68(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a1 = off_1004025F8;
  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
    {
LABEL_6:
      v5 = *(std::__shared_weak_count **)(a1 + 40);
      if (!v5)
        goto LABEL_10;
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      else
      {
LABEL_10:
        v8 = *(std::__shared_weak_count **)(a1 + 24);
        if (!v8)
          goto LABEL_16;
      }
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
LABEL_16:
      sub_100068888((int *)(a1 + 8));
      operator delete();
    }
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
  goto LABEL_6;
}

void sub_1002CBE58(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_1002CBF00(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *result;
  int v2;
  void *v3;

  result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    v3 = 0;
    v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_1002CBF34(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v3;
  char *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v7;
  uint64_t v8;
  _QWORD *v9;
  std::runtime_error v10;
  _BYTE v11[56];
  _BYTE v12[24];
  _BYTE v13[24];
  _QWORD v14[8];
  _BYTE v15[28];
  unsigned int v16;
  _BYTE v17[24];

  v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream not avaialble");
    sub_10018D04C((uint64_t)v17);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<OutdoorEstimatorLogEntryInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = OutdoorEstimatorLogEntryInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v17);
  }
  v16 = 0;
  v5 = (char *)*((_QWORD *)v3 + 1);
  if ((unint64_t)v5 >= *((_QWORD *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v16) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the length");
      sub_10018D04C((uint64_t)v15);
      sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<OutdoorEstimatorLogEntryInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = OutdoorEstimatorLogEntryInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v15);
    }
  }
  else
  {
    v16 = *v5;
    *((_QWORD *)v3 + 1) = v5 + 1;
  }
  sub_100016654(v14);
  v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v16);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v14, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the message");
    sub_10018D04C((uint64_t)v13);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<OutdoorEstimatorLogEntryInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = OutdoorEstimatorLogEntryInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v13);
  }
  v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((_BYTE *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to consume the whole message");
    sub_10018D04C((uint64_t)v12);
    sub_10023643C(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<OutdoorEstimatorLogEntryInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = OutdoorEstimatorLogEntryInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v12);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  v8 = *(_QWORD *)(a1 + 72);
  if (!v8)
    sub_10016CA74();
  (*(void (**)(std::runtime_error *__return_ptr, uint64_t, _QWORD *))(*(_QWORD *)v8 + 48))(&v10, v8, v14);
  v9 = operator new(0x108uLL);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = off_1003F0840;
  v9[4] = v10.__vftable;
  sub_1000333F0((uint64_t)(v9 + 5), (uint64_t)&v10.__imp_);
  sub_100018EC4((uint64_t)(v9 + 17), (uint64_t)v11);
  *((_DWORD *)v9 + 6) = 21;
  *a2 = v9 + 3;
  a2[1] = v9;
  sub_100051F2C((uint64_t)v11);
  sub_100052B6C(&v10.__imp_.__imp_);
  sub_100026CE8(v14);
}

void sub_1002CC210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  void *v35;

  v35 = *(void **)(v33 - 104);
  if (v35)
  {
    *(_QWORD *)(v33 - 96) = v35;
    operator delete(v35);
  }
  std::runtime_error::~runtime_error(&a10);
  _Unwind_Resume(a1);
}

void sub_1002CC2E4(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  __cxa_free_exception(v1);
  sub_100026CE8((_QWORD *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CC304(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002CC318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  std::__shared_weak_count *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v7;
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_100052B6C(v4);
  std::__shared_weak_count::~__shared_weak_count(v3);
  operator delete(v7);
  sub_100051F2C((uint64_t)va1);
  sub_100052B6C((uint64_t *)va);
  sub_100026CE8((_QWORD *)(v5 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CC364(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100026CE8((_QWORD *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_1002CC378(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100026CE8((_QWORD *)(v1 - 168));
  _Unwind_Resume(a1);
}

uint64_t sub_1002CC38C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002CC3E8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002CC444(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = qword_100419098;
  *(_QWORD *)a1 = qword_100419098;
  *(_QWORD *)(a1 + 8) = v1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 2;
}

uint64_t sub_1002CC464(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

void sub_1002CC46C(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_1002CC498()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002CC4F4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002CC550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  return a1;
}

const void **sub_1002CC5E8(uint64_t a1, uint64_t ***a2, const void **a3, _OWORD *a4)
{
  unint64_t v4;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  const void ***v13;
  const void **v14;
  unint64_t v15;
  unint64_t v16;
  const void ***v17;
  const void **v18;
  unint64_t *v19;
  unint64_t *v20;
  unint64_t v21;
  float v22;
  float v23;
  uint64_t v24;
  const void ***v25;
  _BOOL8 v26;
  unint64_t v27;
  unint64_t v28;
  size_t prime;
  int8x8_t v30;
  unint64_t v31;
  uint8x8_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v37[2];
  char v38;

  v9 = sub_1000B40D8((uint64_t)v37, a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v13 = *(const void ****)(*(_QWORD *)a1 + 8 * v4);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = (unint64_t)v14[1];
            if (v16 == v10)
            {
              if ((sub_1000790EC((const void ***)v14 + 2, (unsigned __int8 ***)a2) & 1) != 0)
                return v14;
            }
            else if ((v16 & (v11 - 1)) != v4)
            {
              goto LABEL_23;
            }
            v14 = (const void **)*v14;
            if (!v14)
              goto LABEL_23;
          }
        }
        do
        {
          v15 = (unint64_t)v14[1];
          if (v15 == v10)
          {
            if ((sub_1000790EC((const void ***)v14 + 2, (unsigned __int8 ***)a2) & 1) != 0)
              return v14;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v4)
              break;
          }
          v14 = (const void **)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_23:
  v17 = (const void ***)(a1 + 16);
  v18 = (const void **)operator new(0x30uLL);
  v14 = v18;
  v37[0] = v18;
  v37[1] = a1 + 16;
  *v18 = 0;
  v18[1] = (const void *)v10;
  v19 = (unint64_t *)a3[1];
  v18[2] = *a3;
  v18[3] = v19;
  if (v19)
  {
    v20 = v19 + 1;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }
  *((_OWORD *)v18 + 2) = *a4;
  v38 = 1;
  v22 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v23 = *(float *)(a1 + 32);
  if (v11 && (float)(v23 * (float)v11) >= v22)
  {
    v24 = *(_QWORD *)a1;
    v25 = *(const void ****)(*(_QWORD *)a1 + 8 * v4);
    if (v25)
    {
LABEL_29:
      *v14 = *v25;
LABEL_64:
      *v25 = v14;
      goto LABEL_65;
    }
  }
  else
  {
    v26 = 1;
    if (v11 >= 3)
      v26 = (v11 & (v11 - 1)) != 0;
    v27 = v26 | (2 * v11);
    v28 = vcvtps_u32_f32(v22 / v23);
    if (v27 <= v28)
      prime = v28;
    else
      prime = v27;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v30 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v30)
      goto LABEL_40;
    if (prime < *(_QWORD *)&v30)
    {
      v31 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v30 < 3uLL || (v32 = (uint8x8_t)vcnt_s8(v30), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        v31 = std::__next_prime(v31);
      }
      else
      {
        v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2)
          v31 = v33;
      }
      if (prime <= v31)
        prime = v31;
      if (prime < *(_QWORD *)&v30)
LABEL_40:
        sub_100005DD8(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    v34 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        v4 = v10 % v11;
        v24 = *(_QWORD *)a1;
        v25 = *(const void ****)(*(_QWORD *)a1 + 8 * (v10 % v11));
        if (v25)
          goto LABEL_29;
      }
      else
      {
        v4 = v10;
        v24 = *(_QWORD *)a1;
        v25 = *(const void ****)(*(_QWORD *)a1 + 8 * v10);
        if (v25)
          goto LABEL_29;
      }
    }
    else
    {
      v4 = v34 & v10;
      v24 = *(_QWORD *)a1;
      v25 = *(const void ****)(*(_QWORD *)a1 + 8 * (v34 & v10));
      if (v25)
        goto LABEL_29;
    }
  }
  *v14 = *v17;
  *v17 = v14;
  *(_QWORD *)(v24 + 8 * v4) = v17;
  if (*v14)
  {
    v35 = *((_QWORD *)*v14 + 1);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v35 >= v11)
        v35 %= v11;
    }
    else
    {
      v35 &= v11 - 1;
    }
    v25 = (const void ***)(*(_QWORD *)a1 + 8 * v35);
    goto LABEL_64;
  }
LABEL_65:
  ++*(_QWORD *)(a1 + 24);
  return v14;
}

void sub_1002CC93C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100213954((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1002CC950(uint64_t a1, int *a2, _DWORD *a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  void **v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  float v16;
  float v17;
  uint64_t v18;
  _QWORD *v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  size_t prime;
  int8x8_t v24;
  unint64_t v25;
  uint8x8_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v8 = *a2;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v9 <= v8)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v11 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      v12 = *v11;
      if (*v11)
      {
        if (v10.u32[0] < 2uLL)
        {
          while (1)
          {
            v14 = v12[1];
            if (v14 == v8)
            {
              if (*((_DWORD *)v12 + 4) == (_DWORD)v8)
                return v12;
            }
            else if ((v14 & (v9 - 1)) != v4)
            {
              goto LABEL_23;
            }
            v12 = (_QWORD *)*v12;
            if (!v12)
              goto LABEL_23;
          }
        }
        do
        {
          v13 = v12[1];
          if (v13 == v8)
          {
            if (*((_DWORD *)v12 + 4) == (_DWORD)v8)
              return v12;
          }
          else
          {
            if (v13 >= v9)
              v13 %= v9;
            if (v13 != v4)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
LABEL_23:
  v15 = (_QWORD *)(a1 + 16);
  v12 = operator new(0x38uLL);
  *v12 = 0;
  v12[1] = v8;
  *((_DWORD *)v12 + 4) = *a3;
  v12[3] = *(_QWORD *)a4;
  *((_OWORD *)v12 + 2) = *(_OWORD *)(a4 + 8);
  v12[6] = *(_QWORD *)(a4 + 24);
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (v9 && (float)(v17 * (float)v9) >= v16)
  {
    v18 = *(_QWORD *)a1;
    v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v19)
    {
LABEL_26:
      *v12 = *v19;
LABEL_61:
      *v19 = v12;
      goto LABEL_62;
    }
  }
  else
  {
    v20 = 1;
    if (v9 >= 3)
      v20 = (v9 & (v9 - 1)) != 0;
    v21 = v20 | (2 * v9);
    v22 = vcvtps_u32_f32(v16 / v17);
    if (v21 <= v22)
      prime = v22;
    else
      prime = v21;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v24 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v24)
      goto LABEL_37;
    if (prime < *(_QWORD *)&v24)
    {
      v25 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v24 < 3uLL || (v26 = (uint8x8_t)vcnt_s8(v24), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
      {
        v25 = std::__next_prime(v25);
      }
      else
      {
        v27 = 1 << -(char)__clz(v25 - 1);
        if (v25 >= 2)
          v25 = v27;
      }
      if (prime <= v25)
        prime = v25;
      if (prime < *(_QWORD *)&v24)
LABEL_37:
        sub_100005DD8(a1, prime);
    }
    v9 = *(_QWORD *)(a1 + 8);
    v28 = v9 - 1;
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8)
      {
        v4 = v8 % v9;
        v18 = *(_QWORD *)a1;
        v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v8 % v9));
        if (v19)
          goto LABEL_26;
      }
      else
      {
        v4 = v8;
        v18 = *(_QWORD *)a1;
        v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v8);
        if (v19)
          goto LABEL_26;
      }
    }
    else
    {
      v4 = v28 & v8;
      v18 = *(_QWORD *)a1;
      v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v28 & v8));
      if (v19)
        goto LABEL_26;
    }
  }
  *v12 = *v15;
  *v15 = v12;
  *(_QWORD *)(v18 + 8 * v4) = v15;
  if (*v12)
  {
    v29 = *(_QWORD *)(*v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v29 >= v9)
        v29 %= v9;
    }
    else
    {
      v29 &= v9 - 1;
    }
    v19 = (_QWORD *)(*(_QWORD *)a1 + 8 * v29);
    goto LABEL_61;
  }
LABEL_62:
  ++*(_QWORD *)(a1 + 24);
  return v12;
}

void sub_1002CCC88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10022E744((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CCC9C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002CCCF8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

_QWORD *sub_1002CCD54(_QWORD *a1)
{
  *a1 = off_100402688;
  sub_100199014(a1 + 1);
  return a1;
}

_QWORD *sub_1002CCD84(_QWORD *a1)
{
  *a1 = off_100402688;
  sub_100198E7C(a1 + 1);
  return a1;
}

void sub_1002CCDB4(_QWORD *a1)
{
  *a1 = off_100402688;
  sub_100198E7C(a1 + 1);
  operator delete();
}

char *sub_1002CCDF4@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if ((result[176] & 1) != 0)
  {
    if (result[39] < 0)
    {
      return (char *)sub_10006CED8((_BYTE *)a2, *((void **)result + 2), *((_QWORD *)result + 3));
    }
    else
    {
      *(_OWORD *)a2 = *((_OWORD *)result + 1);
      *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 4);
    }
  }
  else if (result[63] < 0)
  {
    return (char *)sub_10006CED8((_BYTE *)a2, *((void **)result + 5), *((_QWORD *)result + 6));
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(result + 40);
    *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 7);
  }
  return result;
}

void sub_1002CCE54(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;

  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_DWORD *)(a2 + 32) = 1065353216;
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  while (v3 != v4)
  {
    sub_10008930C(&v8, v3);
    sub_100031624(a2, &v8, (uint64_t)&v8);
    v5 = v9;
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v3 += 24;
  }
}

void sub_1002CCEFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_100195804((uint64_t)&a9);
  sub_1000F7AE8(v9);
  _Unwind_Resume(a1);
}

void sub_1002CCF18(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1000F7AE8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CCF2C()
{
  if (qword_10041A0F0 != -1)
    dispatch_once(&qword_10041A0F0, &stru_1004026D0);
  return byte_10041A0EA;
}

void sub_1002CCF78(id a1)
{
  char v1;
  __int128 v2;
  int v3;
  __int128 v4;
  int v5;
  __int128 v6;
  int v7;
  __int128 v8;
  int v9;
  __int128 v10;
  int v11;
  __int128 v12;
  int v13;

  v12 = xmmword_10039892C;
  v13 = 414393924;
  if ((MGIsDeviceOfType(&v12) & 1) != 0)
    goto LABEL_20;
  v11 = -996295886;
  v10 = xmmword_100398940;
  if ((MGIsDeviceOfType(&v10) & 1) != 0)
    goto LABEL_20;
  v9 = -337121064;
  v8 = xmmword_100398954;
  if ((MGIsDeviceOfType(&v8) & 1) != 0)
    goto LABEL_20;
  v7 = 897736383;
  v6 = xmmword_100398968;
  if ((MGIsDeviceOfType(&v6) & 1) != 0)
    goto LABEL_20;
  v5 = -453987047;
  v4 = xmmword_10039897C;
  if (MGIsDeviceOfType(&v4))
    goto LABEL_20;
  v3 = 450980336;
  v2 = xmmword_100398990;
  if ((MGIsDeviceOfType(&v2) & 1) != 0)
    goto LABEL_20;
  v13 = -232427879;
  v12 = xmmword_1003989A4;
  if ((MGIsDeviceOfType(&v12) & 1) != 0)
    goto LABEL_20;
  v11 = -427474227;
  v10 = xmmword_1003989B8;
  if ((MGIsDeviceOfType(&v10) & 1) != 0)
    goto LABEL_20;
  v9 = 1477534141;
  v8 = xmmword_1003989CC;
  if (MGIsDeviceOfType(&v8))
    goto LABEL_20;
  v7 = -1843102369;
  v6 = xmmword_1003989E0;
  if ((MGIsDeviceOfType(&v6) & 1) != 0)
    goto LABEL_20;
  v13 = -61007701;
  v12 = xmmword_1003989F4;
  if ((MGIsDeviceOfType(&v12) & 1) != 0)
    goto LABEL_20;
  v11 = -235416490;
  v10 = xmmword_100398A08;
  if ((MGIsDeviceOfType(&v10) & 1) != 0)
    goto LABEL_20;
  v9 = -820493242;
  v8 = xmmword_100398A1C;
  if (MGIsDeviceOfType(&v8))
    goto LABEL_20;
  v7 = -121925081;
  v6 = xmmword_100398A30;
  if ((MGIsDeviceOfType(&v6) & 1) != 0)
    goto LABEL_20;
  v13 = 1071957977;
  v12 = xmmword_100398A44;
  if ((MGIsDeviceOfType(&v12) & 1) != 0)
    goto LABEL_20;
  v11 = 438437663;
  v10 = xmmword_100398A58;
  if ((MGIsDeviceOfType(&v10) & 1) != 0
    || (v9 = -382792827, v8 = xmmword_100398A6C, MGIsDeviceOfType(&v8))
    || (v7 = 1575123478, v6 = xmmword_100398A80, (MGIsDeviceOfType(&v6) & 1) != 0)
    || (v13 = 713503427, v12 = xmmword_100398A94, (MGIsDeviceOfType(&v12) & 1) != 0))
  {
LABEL_20:
    v1 = 1;
  }
  else
  {
    v11 = -1632750650;
    v10 = xmmword_100398AA8;
    v1 = MGIsDeviceOfType(&v10);
  }
  byte_10041A0EA = v1;
}

void sub_1002CD2E8(id a1)
{
  const __CFBoolean *v1;
  const __CFBoolean *v2;
  CFTypeID v3;

  v1 = (const __CFBoolean *)MGCopyAnswer(CFSTR("InternalBuild"), 0);
  if (v1)
  {
    v2 = v1;
    v3 = CFGetTypeID(v1);
    if (v3 == CFBooleanGetTypeID() && CFBooleanGetValue(v2) == 1)
      byte_10041A0EB = 1;
    CFRelease(v2);
  }
}

void sub_1002CD358()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t sub_1002CD36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __int128 v16;
  uint64_t v17;
  _DWORD v18[6];
  int v19;
  int v20;
  int v21;
  int v22;

  *(_QWORD *)a1 = off_100402720;
  v6 = a1 + 48;
  v7 = a1 + 8;
  v8 = sub_1002D4218(a2);
  sub_1002E08E8(v7, v8);
  v22 = sub_1001D201C(a2);
  v21 = sub_1002D41AC(a2);
  v20 = sub_1002D41B8(a2);
  v19 = sub_1002D41C4(a2);
  sub_100072950(v18, &v20, &v19);
  sub_10026C888(v6, &v22, &v21, v18);
  *(double *)(a1 + 64) = sub_10023E0A4(a3, a2);
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a3 + 40);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  v13 = sub_1000F7018(a2);
  sub_1002BD880((uint64_t)v18, v13);
  sub_1002BD8BC((uint64_t)v18, (unint64_t *)&v16);
  v14 = *(void **)(a1 + 104);
  if (v14)
  {
    *(_QWORD *)(a1 + 112) = v14;
    operator delete(v14);
    *(_QWORD *)(a1 + 104) = 0;
    *(_QWORD *)(a1 + 112) = 0;
    *(_QWORD *)(a1 + 120) = 0;
  }
  *(_OWORD *)(a1 + 104) = v16;
  *(_QWORD *)(a1 + 120) = v17;
  *(_DWORD *)(a1 + 128) = ~(-1 << sub_1002BD8B4((uint64_t)v18));
  return a1;
}

void sub_1002CD4B0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void *v5;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v2 + 112) = v5;
    operator delete(v5);
    sub_1002E0970(v1);
    _Unwind_Resume(a1);
  }
  sub_1002E0970(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1002CD544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  int v8;
  long double v9;
  double v10;
  double v11;
  double v12;
  _BOOL8 result;
  double v14;

  v5 = sub_10026C88C((_DWORD *)(a1 + 48), a2);
  if (v5 == -1)
    return 0;
  v6 = *(_DWORD *)(a1 + 60);
  v7 = v5 / v6;
  v8 = v5 % v6;
  v9 = hypot((double)(*(_DWORD *)(a1 + 24) - v5 / v6), (double)(*(_DWORD *)(a1 + 28) - v5 % v6)) * *(double *)(a1 + 96);
  v10 = *(float *)(a1 + 32);
  if (v9 > 0.0)
  {
    v11 = (float)(*(float *)(a1 + 36) * -10.0);
    v9 = log10(v9);
    v10 = v10 + v11 * v9;
  }
  LOBYTE(v9) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + v8 + v7 * v6);
  v12 = (double)*(unint64_t *)&v9 / (double)*(int *)(a1 + 128);
  result = v12 > 0.0;
  if (a3)
  {
    v14 = NAN;
    if (v12 > 0.0)
      v14 = v10;
    *(double *)(a3 + 8) = v14;
    *(double *)(a3 + 16) = v12;
  }
  return result;
}

BOOL sub_1002CD63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  int v14;
  double v15;
  long double v16;
  double v17;
  double v18;
  int v19;
  double v20;
  double v21;
  double v22;
  int v23;
  double v24;
  double v25;
  double v26;
  int v27;
  double v28;
  long double v29;
  double v30;
  double v31;
  __int128 v33;
  int v34;
  double v35;
  int v36;
  double v37;
  int v38;
  double v39;

  sub_1001D3E20(a2, (_DWORD *)(a1 + 48), &v33);
  v6 = *((double *)&v33 + 1);
  v7 = 0.0;
  if (*((double *)&v33 + 1) == 0.0 || (_DWORD)v33 == -1)
  {
    v8 = 0.0;
    v9 = 0.0;
  }
  else
  {
    v14 = *(_DWORD *)(a1 + 60);
    LOBYTE(v5) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + (int)v33 % v14 + (int)v33 / v14 * v14);
    v5 = (double)*(unint64_t *)&v5;
    v15 = v5 / (double)*(int *)(a1 + 128);
    v8 = 0.0;
    v9 = 0.0;
    if (v15 != 0.0)
    {
      v16 = hypot((double)(*(_DWORD *)(a1 + 24) - (int)v33 / v14), (double)(*(_DWORD *)(a1 + 28) - (int)v33 % v14))
          * *(double *)(a1 + 96);
      v17 = *(float *)(a1 + 32);
      if (v16 > 0.0)
      {
        v18 = (float)(*(float *)(a1 + 36) * -10.0);
        v17 = v17 + v18 * log10(v16);
      }
      v5 = 0.0;
      v8 = v6 * v17 + 0.0;
      v9 = v6 * v15 + 0.0;
      v7 = v6 + 0.0;
    }
  }
  v10 = v35;
  if (v35 != 0.0 && v34 != -1)
  {
    v19 = *(_DWORD *)(a1 + 60);
    LOBYTE(v5) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + v34 % v19 + v34 / v19 * v19);
    v5 = (double)*(unint64_t *)&v5;
    v20 = v5 / (double)*(int *)(a1 + 128);
    if (v20 != 0.0)
    {
      v5 = hypot((double)(*(_DWORD *)(a1 + 24) - v34 / v19), (double)(*(_DWORD *)(a1 + 28) - v34 % v19))
         * *(double *)(a1 + 96);
      v21 = *(float *)(a1 + 32);
      if (v5 > 0.0)
      {
        v22 = (float)(*(float *)(a1 + 36) * -10.0);
        v5 = log10(v5);
        v21 = v21 + v22 * v5;
      }
      v8 = v8 + v10 * v21;
      v9 = v9 + v10 * v20;
      v7 = v7 + v10;
    }
  }
  v11 = v37;
  if (v37 != 0.0 && v36 != -1)
  {
    v23 = *(_DWORD *)(a1 + 60);
    LOBYTE(v5) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + v36 % v23 + v36 / v23 * v23);
    v5 = (double)*(unint64_t *)&v5;
    v24 = v5 / (double)*(int *)(a1 + 128);
    if (v24 != 0.0)
    {
      v5 = hypot((double)(*(_DWORD *)(a1 + 24) - v36 / v23), (double)(*(_DWORD *)(a1 + 28) - v36 % v23))
         * *(double *)(a1 + 96);
      v25 = *(float *)(a1 + 32);
      if (v5 > 0.0)
      {
        v26 = (float)(*(float *)(a1 + 36) * -10.0);
        v5 = log10(v5);
        v25 = v25 + v26 * v5;
      }
      v8 = v8 + v11 * v25;
      v9 = v9 + v11 * v24;
      v7 = v7 + v11;
    }
  }
  v12 = v39;
  if (v39 != 0.0 && v38 != -1)
  {
    v27 = *(_DWORD *)(a1 + 60);
    LOBYTE(v5) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + v38 % v27 + v38 / v27 * v27);
    v28 = (double)*(unint64_t *)&v5 / (double)*(int *)(a1 + 128);
    if (v28 != 0.0)
    {
      v29 = hypot((double)(*(_DWORD *)(a1 + 24) - v38 / v27), (double)(*(_DWORD *)(a1 + 28) - v38 % v27))
          * *(double *)(a1 + 96);
      v30 = *(float *)(a1 + 32);
      if (v29 > 0.0)
      {
        v31 = (float)(*(float *)(a1 + 36) * -10.0);
        v30 = v30 + v31 * log10(v29);
      }
      v8 = v8 + v12 * v30;
      v9 = v9 + v12 * v28;
      v7 = v7 + v12;
    }
  }
  if (a3)
  {
    if (v7 <= 0.0)
    {
      *(_QWORD *)(a3 + 8) = 0x7FF4000000000000;
      v13 = 0.0;
    }
    else
    {
      *(double *)(a3 + 8) = v8 / v7;
      v13 = v9 / v7;
    }
    *(double *)(a3 + 16) = v13;
  }
  return v7 > 0.0;
}

float sub_1002CD974(uint64_t a1, int a2)
{
  long double v3;
  float v4;
  double v5;

  v3 = hypot((double)(*(_DWORD *)(a1 + 24) - a2 / *(_DWORD *)(a1 + 60)), (double)(*(_DWORD *)(a1 + 28) + a2 / *(_DWORD *)(a1 + 60) * *(_DWORD *)(a1 + 60) - a2))* *(double *)(a1 + 96);
  v4 = *(float *)(a1 + 32);
  if (v3 > 0.0)
  {
    v5 = (float)(*(float *)(a1 + 36) * -10.0);
    return v4 + v5 * log10(v3);
  }
  return v4;
}

float sub_1002CD9F8(uint64_t a1, int a2, double a3)
{
  LOBYTE(a3) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + a2);
  *(float *)&a3 = (double)*(unint64_t *)&a3 / (double)*(int *)(a1 + 128);
  return *(float *)&a3;
}

_QWORD *sub_1002CDA1C(_QWORD *a1)
{
  void *v2;

  *a1 = off_100402720;
  v2 = (void *)a1[13];
  if (v2)
  {
    a1[14] = v2;
    operator delete(v2);
  }
  sub_1002E0970((uint64_t)(a1 + 1));
  return a1;
}

void sub_1002CDA60(_QWORD *a1)
{
  void *v2;

  *a1 = off_100402720;
  v2 = (void *)a1[13];
  if (v2)
  {
    a1[14] = v2;
    operator delete(v2);
  }
  sub_1002E0970((uint64_t)(a1 + 1));
  operator delete();
}

uint64_t sub_1002CDAB4(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_1002CDABC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002CDB18()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002CDB74(_QWORD *a1)
{
  sub_1000CAD04(a1);
  operator delete();
}

_QWORD *sub_1002CDB98(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _DWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *result;
  __int128 v21;
  char v22;

  sub_1002CDD64(a1, a3[6]);
  v6 = a3[3];
  v5 = a3[4];
  if (v5 == v6)
  {
    v8 = 0;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    do
    {
      if (*(double *)(v6 + 8 * v9) > 0.0)
      {
        v10 = (_DWORD *)(*a3 + v7);
        v11 = sub_1000411C0(a1 + 13, (uint64_t)v10);
        if (v11)
        {
          sub_10002BB38(a1 + 13, v11, (uint64_t)&v21);
          v12 = v21;
          *(_QWORD *)&v21 = 0;
          if (v12)
          {
            if (v22)
            {
              v13 = *(_DWORD *)(v12 + 80);
              if (v13 != v13 >> 31)
              {
                v14 = *(_QWORD *)(v12 + 88);
                if (v13 < 0)
                {
                  if (v14)
                    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
                }
                else
                {
                  (*(void (**)(uint64_t))v14)(v12 + 88);
                }
              }
            }
            operator delete((void *)v12);
          }
        }
        ++v8;
        sub_1002CDF4C((uint64_t)(a1 + 13), (uint64_t)v10, v10, (uint64_t)v10);
        v6 = a3[3];
        v5 = a3[4];
      }
      ++v9;
      v7 += 208;
    }
    while (v9 < (v5 - v6) >> 3);
  }
  *(_QWORD *)&v21 = a3[6];
  *((_QWORD *)&v21 + 1) = v8;
  sub_10004822C(a1 + 2, &v21);
  v15 = a1[8];
  v16 = a1[9];
  v17 = 73 * ((v16 - v15) >> 3) - 1;
  if (v16 == v15)
    v17 = 0;
  if (v17 == a1[12] + a1[11])
  {
    sub_10000BAD0((uint64_t)(a1 + 7));
    v15 = a1[8];
    v16 = a1[9];
  }
  if (v16 == v15)
  {
    v19 = 0;
  }
  else
  {
    v18 = a1[12] + a1[11];
    v19 = (_QWORD *)(*(_QWORD *)(v15 + 8 * (v18 / 0x49)) + 56 * (v18 % 0x49));
  }
  result = sub_100043C90(v19, a3);
  ++a1[12];
  return result;
}

void sub_1002CDD64(_QWORD *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  int v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  _DWORD *v10;
  int v11;
  uint64_t v12;
  void *__p[3];
  void *v14;
  char v15;

  sub_1000B3324(a1 + 2, a2, __p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  while (a1[12])
  {
    if (a1[1] + *(_QWORD *)(*(_QWORD *)(a1[8] + 8 * (a1[11] / 0x49uLL)) + 56 * (a1[11] % 0x49uLL) + 48) >= a2)
      break;
    sub_1002327EC((uint64_t)(a1 + 7));
  }
  v4 = (uint64_t *)a1[15];
  if (v4)
  {
    do
    {
      while (1)
      {
        v5 = (uint64_t *)v4[11];
        v6 = *((_DWORD *)v4 + 20);
        if (v6 >= 0)
          v5 = v4 + 11;
        v7 = v5 + 1;
        v8 = v4 + 18;
        if (v6 != v6 >> 31)
          v8 = v7;
        if (a1[1] + *v8 < a2)
          break;
        v4 = (uint64_t *)*v4;
        if (!v4)
          return;
      }
      v9 = (uint64_t *)*v4;
      sub_10002BB38(a1 + 13, v4, (uint64_t)&v14);
      v10 = v14;
      v14 = 0;
      if (v10)
      {
        if (v15)
        {
          v11 = v10[20];
          if (v11 != v11 >> 31)
          {
            v12 = *((_QWORD *)v10 + 11);
            if (v11 < 0)
            {
              if (v12)
                (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
            }
            else
            {
              (*(void (**)(_DWORD *))v12)(v10 + 22);
            }
          }
        }
        operator delete(v10);
      }
      v4 = v9;
    }
    while (v9);
  }
}

uint64_t *sub_1002CDED8(uint64_t *a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16))
    {
      v3 = *(_DWORD *)(v2 + 80);
      if (v3 != v3 >> 31)
      {
        v4 = *(_QWORD *)(v2 + 88);
        if (v3 < 0)
        {
          if (v4)
            (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        }
        else
        {
          (*(void (**)(uint64_t))v4)(v2 + 88);
        }
      }
    }
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t *sub_1002CDF4C(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t **v13;
  uint64_t *result;
  int v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v24;
  unint64_t v25;
  BOOL v26;
  _QWORD *v28;
  float v29;
  float v30;
  _QWORD *v31;
  _QWORD *v32;
  _BOOL8 v33;
  unint64_t v34;
  unint64_t v35;
  size_t prime;
  int8x8_t v37;
  unint64_t v38;
  uint8x8_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD v43[2];
  char v44;
  char v45;

  v43[0] = &v45;
  v9 = a2 + 8;
  if (*(_DWORD *)a2 == *(int *)a2 >> 31)
  {
    v10 = *(_QWORD *)v9;
    v11 = *(_QWORD *)(a1 + 8);
    if (!v11)
      goto LABEL_58;
  }
  else
  {
    v10 = sub_10022CC84((uint64_t)v43, (unsigned __int8 *)(a2 + 8));
    v11 = *(_QWORD *)(a1 + 8);
    if (!v11)
      goto LABEL_58;
  }
  v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    v4 = v10;
    if (v10 >= v11)
      v4 = v10 % v11;
  }
  else
  {
    v4 = (v11 - 1) & v10;
  }
  v13 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
  if (v13)
  {
    result = *v13;
    if (*v13)
    {
      v15 = *(_DWORD *)a2;
      v16 = (v15 >> 31) ^ v15;
      v17 = v15 >> 31 == v15;
      v18 = *(_QWORD *)(a2 + 8);
      if (v12.u32[0] <= 1uLL)
      {
        v19 = v11 - 1;
        if (v17)
        {
          while (1)
          {
            v20 = result[1];
            if (v20 == v10)
            {
              if ((*((_DWORD *)result + 4) ^ (*((int *)result + 4) >> 31)) == v16 && result[3] == v18)
                return result;
            }
            else if ((v20 & v19) != v4)
            {
              goto LABEL_58;
            }
            result = (uint64_t *)*result;
            if (!result)
              goto LABEL_58;
          }
        }
        while (1)
        {
          v21 = result[1];
          if (v21 == v10)
          {
            if ((*((_DWORD *)result + 4) ^ (*((int *)result + 4) >> 31)) == v16)
            {
              v22 = result[3] == *(_QWORD *)v9 && result[4] == *(_QWORD *)(v9 + 8);
              if (v22 && *((_DWORD *)result + 10) == (unint64_t)*(unsigned int *)(v9 + 16))
                return result;
            }
          }
          else if ((v21 & v19) != v4)
          {
            goto LABEL_58;
          }
          result = (uint64_t *)*result;
          if (!result)
            goto LABEL_58;
        }
      }
      if (v17)
      {
        while (1)
        {
          v24 = result[1];
          if (v24 == v10)
          {
            if ((*((_DWORD *)result + 4) ^ (*((int *)result + 4) >> 31)) == v16 && result[3] == v18)
              return result;
          }
          else
          {
            if (v24 >= v11)
              v24 %= v11;
            if (v24 != v4)
              goto LABEL_58;
          }
          result = (uint64_t *)*result;
          if (!result)
            goto LABEL_58;
        }
      }
      do
      {
        v25 = result[1];
        if (v25 == v10)
        {
          if ((*((_DWORD *)result + 4) ^ (*((int *)result + 4) >> 31)) == v16)
          {
            v26 = result[3] == *(_QWORD *)v9 && result[4] == *(_QWORD *)(v9 + 8);
            if (v26 && *((_DWORD *)result + 10) == (unint64_t)*(unsigned int *)(v9 + 16))
              return result;
          }
        }
        else
        {
          if (v25 >= v11)
            v25 %= v11;
          if (v25 != v4)
            break;
        }
        result = (uint64_t *)*result;
      }
      while (result);
    }
  }
LABEL_58:
  v28 = operator new(0x100uLL);
  v43[0] = v28;
  v43[1] = a1 + 16;
  v44 = 0;
  *v28 = 0;
  v28[1] = v10;
  sub_1002CE3EC((uint64_t)(v28 + 2), a3, a4);
  v44 = 1;
  v29 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v30 = *(float *)(a1 + 32);
  if (!v11 || (float)(v30 * (float)v11) < v29)
  {
    v33 = 1;
    if (v11 >= 3)
      v33 = (v11 & (v11 - 1)) != 0;
    v34 = v33 | (2 * v11);
    v35 = vcvtps_u32_f32(v29 / v30);
    if (v34 <= v35)
      prime = v35;
    else
      prime = v34;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v37 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v37)
      goto LABEL_72;
    if (prime < *(_QWORD *)&v37)
    {
      v38 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v37 < 3uLL || (v39 = (uint8x8_t)vcnt_s8(v37), v39.i16[0] = vaddlv_u8(v39), v39.u32[0] > 1uLL))
      {
        v38 = std::__next_prime(v38);
      }
      else
      {
        v40 = 1 << -(char)__clz(v38 - 1);
        if (v38 >= 2)
          v38 = v40;
      }
      if (prime <= v38)
        prime = v38;
      if (prime < *(_QWORD *)&v37)
LABEL_72:
        sub_100005DD8(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    v41 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        v4 = v10 % v11;
        v31 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v10 % v11));
        v32 = (_QWORD *)v43[0];
        if (v31)
          goto LABEL_61;
      }
      else
      {
        v4 = v10;
        v31 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v10);
        v32 = (_QWORD *)v43[0];
        if (v31)
          goto LABEL_61;
      }
    }
    else
    {
      v4 = v41 & v10;
      v31 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v41 & v10));
      v32 = (_QWORD *)v43[0];
      if (v31)
        goto LABEL_61;
    }
LABEL_85:
    *v32 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v43[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v43[0])
    {
      v42 = *(_QWORD *)(*(_QWORD *)v43[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v42 >= v11)
          v42 %= v11;
      }
      else
      {
        v42 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v42) = v43[0];
    }
    goto LABEL_96;
  }
  v31 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  v32 = (_QWORD *)v43[0];
  if (!v31)
    goto LABEL_85;
LABEL_61:
  *v32 = *v31;
  *v31 = v43[0];
LABEL_96:
  result = (uint64_t *)v43[0];
  ++*(_QWORD *)(a1 + 24);
  return result;
}

void sub_1002CE3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1002CDED8(&a9);
  _Unwind_Resume(a1);
}

void sub_1002CE3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1002CDED8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CE3EC(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  int v6;
  _QWORD *v7;
  int v8;
  __int128 v9;
  _QWORD *v10;
  _QWORD *v11;
  int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD *v17;
  int v18;
  _QWORD *v19;
  int v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v5 = (_QWORD *)(a1 + 8);
  v7 = a2 + 2;
  v6 = *a2;
  if (v6 == v6 >> 31)
  {
    *v5 = *v7;
    v8 = v6;
  }
  else
  {
    v9 = *(_OWORD *)v7;
    *(_DWORD *)(a1 + 24) = a2[6];
    *(_OWORD *)v5 = v9;
    v8 = *a2;
    v6 = (int)*a2 >> 31;
  }
  *(_DWORD *)a1 = v8 ^ v6;
  v10 = (_QWORD *)(a1 + 40);
  v11 = (_QWORD *)(a3 + 8);
  if (*(_DWORD *)a3 == *(int *)a3 >> 31)
  {
    *v10 = *v11;
    *(_DWORD *)(a1 + 32) = 0;
    v12 = *(_DWORD *)(a3 + 32);
    v13 = (uint64_t *)(a3 + 40);
    if (v12 != v12 >> 31)
    {
LABEL_6:
      v14 = a1 + 72;
      if (v12 >= 0)
        v15 = (uint64_t)v13;
      else
        v15 = *v13;
      sub_1001A4778(v14, v15);
      goto LABEL_17;
    }
  }
  else
  {
    v16 = *(_OWORD *)v11;
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a3 + 24);
    *(_OWORD *)v10 = v16;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)a3 ^ (*(int *)a3 >> 31);
    v12 = *(_DWORD *)(a3 + 32);
    v13 = (uint64_t *)(a3 + 40);
    if (v12 != v12 >> 31)
      goto LABEL_6;
  }
  v17 = (_QWORD *)(a1 + 80);
  v18 = *(_DWORD *)(a3 + 40);
  v19 = (_QWORD *)(a3 + 48);
  if (v18 == v18 >> 31)
  {
    *v17 = *v19;
    v20 = v18;
  }
  else
  {
    v21 = *(_OWORD *)v19;
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a3 + 64);
    *(_OWORD *)v17 = v21;
    v20 = *(_DWORD *)v13;
    v18 = v20 >> 31;
  }
  *(_DWORD *)(a1 + 72) = v20 ^ v18;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a3 + 72);
  *(_BYTE *)(a1 + 112) = 0;
  if (*(_BYTE *)(a3 + 80))
  {
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a3 + 84);
    *(_BYTE *)(a1 + 112) = 1;
  }
  v22 = *(_OWORD *)(a3 + 88);
  v23 = *(_OWORD *)(a3 + 104);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a3 + 120);
  *(_OWORD *)(a1 + 136) = v23;
  *(_OWORD *)(a1 + 120) = v22;
LABEL_17:
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a3 + 32) ^ (*(int *)(a3 + 32) >> 31);
  return a1;
}

uint64_t **sub_1002CE560(uint64_t **a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  _QWORD *v6;
  int v7;
  _QWORD *v8;
  int v9;
  __int128 v11;
  int v12;
  int *v13;
  _QWORD *v14;
  int v15;
  _QWORD *v16;
  int v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v4 = *a1;
  v5 = (*a1)[1];
  if (v5 >= (*a1)[2])
  {
    v4[1] = sub_100234078(*a1, a2);
    return a1;
  }
  else
  {
    v6 = (_QWORD *)(v5 + 8);
    v8 = (_QWORD *)(a2 + 8);
    v7 = *(_DWORD *)a2;
    if (v7 == v7 >> 31)
    {
      *v6 = *v8;
      v9 = v7;
    }
    else
    {
      v11 = *(_OWORD *)v8;
      *(_DWORD *)(v5 + 24) = *(_DWORD *)(a2 + 24);
      *(_OWORD *)v6 = v11;
      v9 = *(_DWORD *)a2;
      v7 = *(int *)a2 >> 31;
    }
    *(_DWORD *)v5 = v9 ^ v7;
    v12 = *(_DWORD *)(a2 + 32);
    v13 = (int *)(a2 + 40);
    if (v12 == v12 >> 31)
    {
      v14 = (_QWORD *)(v5 + 48);
      v15 = *(_DWORD *)(a2 + 40);
      v16 = (_QWORD *)(a2 + 48);
      if (v15 == v15 >> 31)
      {
        *v14 = *v16;
        v17 = v15;
      }
      else
      {
        v19 = *(_OWORD *)v16;
        *(_DWORD *)(v5 + 64) = *(_DWORD *)(a2 + 64);
        *(_OWORD *)v14 = v19;
        v17 = *v13;
        v15 = v17 >> 31;
      }
      *(_DWORD *)(v5 + 40) = v17 ^ v15;
      *(_QWORD *)(v5 + 72) = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(v5 + 80) = 0;
      if (*(_BYTE *)(a2 + 80))
      {
        *(_DWORD *)(v5 + 84) = *(_DWORD *)(a2 + 84);
        *(_BYTE *)(v5 + 80) = 1;
      }
      v20 = *(_OWORD *)(a2 + 88);
      v21 = *(_OWORD *)(a2 + 104);
      *(_DWORD *)(v5 + 120) = *(_DWORD *)(a2 + 120);
      *(_OWORD *)(v5 + 104) = v21;
      *(_OWORD *)(v5 + 88) = v20;
    }
    else
    {
      if (v12 >= 0)
        v18 = a2 + 40;
      else
        v18 = *(_QWORD *)v13;
      sub_1001A4778(v5 + 40, v18);
    }
    *(_DWORD *)(v5 + 32) = *(_DWORD *)(a2 + 32) ^ (*(int *)(a2 + 32) >> 31);
    v4[1] = v5 + 208;
    v4[1] = v5 + 208;
    return a1;
  }
}

void sub_1002CE6C4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1002CE6CC(uint64_t a1)
{
  int v2;
  uint64_t v4;

  v2 = *(_DWORD *)(a1 + 64);
  if (v2 == v2 >> 31)
  {
    if (*(_BYTE *)(a1 + 112))
      *(_BYTE *)(a1 + 112) = 0;
    return a1;
  }
  v4 = *(_QWORD *)(a1 + 72);
  if (v2 < 0)
  {
    if (!v4)
      return a1;
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    return a1;
  }
  else
  {
    (*(void (**)(uint64_t))v4)(a1 + 72);
    return a1;
  }
}

uint64_t sub_1002CE74C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  int v5;
  _QWORD *v6;
  int v7;
  __int128 v8;
  _QWORD *v9;
  _QWORD *v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _QWORD *v16;
  int v17;
  _QWORD *v18;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = (_QWORD *)(a1 + 8);
  v6 = (_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)a2;
  if (v5 == v5 >> 31)
  {
    *v4 = *v6;
    v7 = v5;
  }
  else
  {
    v8 = *(_OWORD *)v6;
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    *(_OWORD *)v4 = v8;
    v7 = *(_DWORD *)a2;
    v5 = *(int *)a2 >> 31;
  }
  *(_DWORD *)a1 = v7 ^ v5;
  v9 = (_QWORD *)(a1 + 40);
  v10 = (_QWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32) == *(int *)(a2 + 32) >> 31)
  {
    *v9 = *v10;
    *(_DWORD *)(a1 + 32) = 0;
    v11 = *(_DWORD *)(a2 + 64);
    v12 = (uint64_t *)(a2 + 72);
    if (v11 != v11 >> 31)
    {
LABEL_6:
      v13 = a1 + 72;
      if (v11 >= 0)
        v14 = (uint64_t)v12;
      else
        v14 = *v12;
      sub_1001A4778(v13, v14);
      goto LABEL_17;
    }
  }
  else
  {
    v15 = *(_OWORD *)v10;
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    *(_OWORD *)v9 = v15;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32) ^ (*(int *)(a2 + 32) >> 31);
    v11 = *(_DWORD *)(a2 + 64);
    v12 = (uint64_t *)(a2 + 72);
    if (v11 != v11 >> 31)
      goto LABEL_6;
  }
  v16 = (_QWORD *)(a1 + 80);
  v17 = *(_DWORD *)(a2 + 72);
  v18 = (_QWORD *)(a2 + 80);
  if (v17 == v17 >> 31)
  {
    *v16 = *v18;
    v19 = v17;
  }
  else
  {
    v20 = *(_OWORD *)v18;
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    *(_OWORD *)v16 = v20;
    v19 = *(_DWORD *)v12;
    v17 = v19 >> 31;
  }
  *(_DWORD *)(a1 + 72) = v19 ^ v17;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = 0;
  if (*(_BYTE *)(a2 + 112))
  {
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    *(_BYTE *)(a1 + 112) = 1;
  }
  v21 = *(_OWORD *)(a2 + 120);
  v22 = *(_OWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v22;
  *(_OWORD *)(a1 + 120) = v21;
LABEL_17:
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64) ^ (*(int *)(a2 + 64) >> 31);
  return a1;
}

uint64_t sub_1002CE8C0()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002CE91C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

double sub_1002CE978(uint64_t a1)
{
  return *(double *)(a1 + 32);
}

double sub_1002CE980(uint64_t a1)
{
  return *(double *)(a1 + 32) * 3.46410162;
}

BOOL sub_1002CE994(uint64_t a1, uint64_t a2)
{
  return (*(double (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2) < *(double *)(a1 + 48);
}

double sub_1002CE9CC(uint64_t a1)
{
  return *(double *)(a1 + 56);
}

uint64_t sub_1002CE9D4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002CEA30()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002CEA8C(uint64_t result)
{
  ++*(_QWORD *)(result + 8);
  return result;
}

int64x2_t sub_1002CEA9C(int64x2_t *a1)
{
  int64x2_t result;

  result = vaddq_s64(*a1, vdupq_n_s64(1uLL));
  *a1 = result;
  return result;
}

uint64_t sub_1002CEAB4(uint64_t result)
{
  ++*(_QWORD *)(result + 24);
  return result;
}

int64x2_t sub_1002CEAC4(int64x2_t *a1)
{
  int64x2_t result;

  result = vaddq_s64(a1[1], vdupq_n_s64(1uLL));
  a1[1] = result;
  return result;
}

void sub_1002CEF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;

  if (a22 < 0)
    operator delete(__p);
  if (v41)

  _Unwind_Resume(a1);
}

void sub_1002CF0DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)VideoPlaybackStream;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1002CF228(_Unwind_Exception *a1, uint64_t a2, ...)
{
  const void *v3;
  va_list va;
  uint64_t v5;
  va_list va1;
  uint64_t v7;
  uint64_t v8;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, const void *);
  va_copy(va2, va1);
  v5 = va_arg(va2, _QWORD);
  v7 = va_arg(va2, _QWORD);
  v8 = va_arg(va2, _QWORD);
  sub_1002CF24C((uint64_t)va1);
  sub_1002CF27C((const void **)va);
  sub_1002CF27C((const void **)va2);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CF24C(uint64_t a1)
{
  const void *v2;

  v2 = *(const void **)(a1 + 16);
  if (v2)
    CFRelease(v2);
  return a1;
}

const void **sub_1002CF27C(const void **a1)
{
  const void *v2;

  v2 = *a1;
  if (v2)
    CFRelease(v2);
  return a1;
}

_QWORD *sub_1002CF380(_QWORD *result)
{
  id *v1;

  v1 = (id *)result[1];
  *result = off_1004027C8;
  result[1] = 0;
  if (v1)
  {

    operator delete();
  }
  return result;
}

void sub_1002CF3D4(_QWORD *a1)
{
  id *v1;

  v1 = (id *)a1[1];
  *a1 = off_1004027C8;
  a1[1] = 0;
  if (v1)
  {

    operator delete();
  }
  operator delete();
}

_QWORD *sub_1002CF438(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *result = off_1004027C8;
  result[1] = v2;
  return result;
}

void sub_1002CF450(_QWORD *a1)
{
  *a1 = off_1004027C8;
  operator new();
}

void sub_1002CF4C0()
{
  operator delete();
}

id sub_1002CF4E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = **(id **)(a1 + 8);
  if (result)
    return objc_msgSend(result, "readNextEvent");
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t sub_1002CF4FC()
{
  return 1;
}

uint64_t sub_1002CF504@<X0>(_QWORD *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t result;
  std::bad_cast v3;
  _UNKNOWN **v4;
  _UNKNOWN **v5;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  result = sub_1002CF5A0(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v3);
  }
  return result;
}

void sub_1002CF574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  uint64_t v10;

  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0)
    operator delete(*(void **)v10);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CF5A0(_QWORD *a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = (_QWORD *)std::ostream::operator<<(&v32, *a1 != 0);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1002CF814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002CF848(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

std::string *sub_1002CF860@<X0>(const std::string::value_type **a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, *a1);
}

void sub_1002CF890(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002CF8AC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002CF908()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002CF964()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

double sub_1002CF978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a3;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)(a1 + 32) = 0xFFFFFFFFLL;
  return result;
}

uint64_t sub_1002CF990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  v2 = *(_QWORD *)a1;
  if (!*(_QWORD *)a1)
    return v2;
  if (v2 > 45000000000)
    return 1;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(a1 + 32);
  v6 = *(_DWORD *)(a1 + 36);
  if (v6 == v5)
  {
    v5 = -1;
    *(_DWORD *)(a1 + 32) = -1;
  }
  v7 = v6 % 11;
  if (v6 < v5)
    goto LABEL_13;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8 <= v4)
  {
    *(_QWORD *)(a1 + 8) = v8 + 45000000000;
    *(_DWORD *)(a1 + 32) = v6 + 11;
LABEL_13:
    v2 = 0;
    *(_QWORD *)(a1 + 16) = v4;
    *(_DWORD *)(a1 + 28) = v7;
    *(_BYTE *)(a1 + 24) = 1;
    goto LABEL_14;
  }
  if (*(_QWORD *)(a1 + 16) + v2 <= v4 && *(_BYTE *)(a1 + 24) && *(_DWORD *)(a1 + 28) != v7)
    goto LABEL_13;
  v2 = 1;
LABEL_14:
  *(_DWORD *)(a1 + 36) = v6 + 1;
  return v2;
}

uint64_t *sub_1002CFA64(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  _BYTE v6[92];
  int v7;
  void *__p;
  void *v9[2];
  char v10;
  std::string v11;

  v4 = operator new(0xE8uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_100402848;
  *a1 = sub_1000814D8((uint64_t)(v4 + 3));
  a1[1] = (uint64_t)v4;
  sub_100178D5C(a2, &v7);
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v6, v7, -1);
  if ((wireless_diagnostics::google::protobuf::MessageLite::ParseFromZeroCopyStream(*a1, v6) & 1) == 0)
  {
    sub_1000D5048(v9, "");
    sub_1002240C8("Failed to parse input stream", &v11);
    sub_100174738((uint64_t)v9, (uint64_t)&v11, 1);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v11.__r_.__value_.__l.__data_);
    if (v10 < 0)
      operator delete(v9[0]);
    sub_1000F2AE4((uint64_t)&__p);
  }
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v6);
  sub_100068888(&v7);
  return a1;
}

void sub_1002CFB94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a27 < 0)
    operator delete(__p);
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)&a9);
  sub_100068888(&a21);
  sub_1000E095C(v27);
  _Unwind_Resume(a1);
}

_QWORD *sub_1002CFC34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10008930C(a2, *(_QWORD *)(*(_QWORD *)a1 + 16));
}

uint64_t sub_1002CFC44(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 24);
}

uint64_t sub_1002CFC50(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 72))(*a1);
}

uint64_t sub_1002CFC60(_QWORD *a1)
{
  return wireless_diagnostics::google::protobuf::MessageLite::SerializeToZeroCopyStream(*a1);
}

double sub_1002CFC68(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  int v3;
  double result;
  std::logic_error v5;

  v2 = *a2;
  v3 = *(_DWORD *)(*a2 + 200);
  if ((v3 & 0x80000) == 0)
  {
    std::logic_error::logic_error(&v5, "Attempted to access the value of an uninitialized optional object.");
    v5.__vftable = (std::logic_error_vtbl *)&off_100402970;
    sub_1002D0290(&v5);
  }
  *(_QWORD *)a1 = *(_QWORD *)(v2 + 176);
  if ((v3 & 0x100000) == 0)
  {
    std::logic_error::logic_error(&v5, "Attempted to access the value of an uninitialized optional object.");
    v5.__vftable = (std::logic_error_vtbl *)&off_100402970;
    sub_1002D0290(&v5);
  }
  *(double *)(a1 + 8) = *(double *)(v2 + 184) + *(double *)(v2 + 184);
  result = (double)*(int *)(v2 + 56);
  *(double *)(a1 + 16) = result;
  *(_BYTE *)(a1 + 24) = 0;
  return result;
}

void sub_1002CFD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::logic_error a9)
{
  std::logic_error::~logic_error(&a9);
  _Unwind_Resume(a1);
}

void sub_1002CFD24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::logic_error a9)
{
  std::logic_error::~logic_error(&a9);
  _Unwind_Resume(a1);
}

char *sub_1002CFD38(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t i;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  void (**v15)(char *);
  BOOL v16;
  char *v18;
  __int128 v19;

  v3 = 0x8E38E38E38E38E39 * ((uint64_t)(a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x38E38E38E38E38ELL)
    sub_1000D02C0();
  if (0x1C71C71C71C71C72 * ((uint64_t)(a1[2] - *a1) >> 3) > v4)
    v4 = 0x1C71C71C71C71C72 * ((uint64_t)(a1[2] - *a1) >> 3);
  if (0x8E38E38E38E38E39 * ((uint64_t)(a1[2] - *a1) >> 3) >= 0x1C71C71C71C71C7)
    v6 = 0x38E38E38E38E38ELL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x38E38E38E38E38ELL)
      sub_1000CDEB8();
    v7 = (char *)operator new(72 * v6);
  }
  else
  {
    v7 = 0;
  }
  v18 = &v7[72 * v3];
  *((_QWORD *)&v19 + 1) = &v7[72 * v6];
  sub_100071A2C(v18, a2);
  v8 = 0;
  v10 = (char *)*a1;
  for (i = a1[1]; (char *)(i + v8) != v10; sub_100071A2C(&v18[v8], v8 + i))
    v8 -= 72;
  v12 = (char *)*a1;
  v11 = (char *)a1[1];
  *a1 = &v18[v8];
  *(_QWORD *)&v19 = v18 + 72;
  *(_OWORD *)(a1 + 1) = v19;
  if (v11 != v12)
  {
    v13 = v11 - 72;
    v14 = v11 - 72;
    do
    {
      v15 = *(void (***)(char *))v14;
      v14 -= 72;
      (*v15)(v13);
      v16 = v13 == v12;
      v13 = v14;
    }
    while (!v16);
  }
  if (v12)
    operator delete(v12);
  return v18 + 72;
}

void sub_1002CFEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_100199E48((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1002CFF0C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v4 = *a1;
  v6 = *(char **)(*a1 + 8);
  v5 = *(_QWORD *)(*a1 + 16);
  v7 = v6;
  if ((unint64_t)v6 >= v5)
  {
    v9 = *(char **)v4;
    v10 = (uint64_t)&v6[-*(_QWORD *)v4];
    v11 = v10 >> 3;
    v12 = (v10 >> 3) + 1;
    if (v12 >> 61)
      sub_1000D02C0();
    v13 = v5 - (_QWORD)v9;
    if (v13 >> 2 > v12)
      v12 = v13 >> 2;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      v14 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      if (v14 >> 61)
        sub_1000CDEB8();
      v15 = operator new(8 * v14);
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[8 * v11];
    *v16 = *a2;
    v8 = v16 + 1;
    if (v6 != v9)
    {
      v17 = v6 - v9 - 8;
      if (v17 < 0x58)
        goto LABEL_27;
      if ((unint64_t)(v6 - v15 - v10) < 0x20)
        goto LABEL_27;
      v18 = (v17 >> 3) + 1;
      v19 = 8 * (v18 & 0x3FFFFFFFFFFFFFFCLL);
      v7 = &v6[-v19];
      v16 = (_QWORD *)((char *)v16 - v19);
      v20 = &v15[8 * v11 - 16];
      v21 = v6 - 16;
      v22 = v18 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v23 = *(_OWORD *)v21;
        *(v20 - 1) = *((_OWORD *)v21 - 1);
        *v20 = v23;
        v20 -= 2;
        v21 -= 32;
        v22 -= 4;
      }
      while (v22);
      if (v18 != (v18 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_27:
        do
        {
          v24 = *((_QWORD *)v7 - 1);
          v7 -= 8;
          *--v16 = v24;
        }
        while (v7 != v9);
      }
    }
    *(_QWORD *)v4 = v16;
    *(_QWORD *)(v4 + 8) = v8;
    *(_QWORD *)(v4 + 16) = &v15[8 * v14];
    if (v9)
      operator delete(v9);
  }
  else
  {
    *(_QWORD *)v6 = *a2;
    v8 = v6 + 8;
  }
  *(_QWORD *)(v4 + 8) = v8;
  return a1;
}

char *sub_1002D007C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t i;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  void (**v15)(char *);
  BOOL v16;
  char *v18;
  __int128 v19;

  v3 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[1] - *a1) >> 4);
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x249249249249249)
    sub_1000D02C0();
  if (0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(a1[2] - *a1) >> 4) > v4)
    v4 = 0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(a1[2] - *a1) >> 4);
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[2] - *a1) >> 4)) >= 0x124924924924924)
    v6 = 0x249249249249249;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x249249249249249)
      sub_1000CDEB8();
    v7 = (char *)operator new(112 * v6);
  }
  else
  {
    v7 = 0;
  }
  v18 = &v7[112 * v3];
  *((_QWORD *)&v19 + 1) = &v7[112 * v6];
  sub_10007300C(v18, a2);
  v8 = 0;
  v10 = (char *)*a1;
  for (i = a1[1]; (char *)(i + v8) != v10; sub_10007300C(&v18[v8], v8 + i))
    v8 -= 112;
  v12 = (char *)*a1;
  v11 = (char *)a1[1];
  *a1 = &v18[v8];
  *(_QWORD *)&v19 = v18 + 112;
  *(_OWORD *)(a1 + 1) = v19;
  if (v11 != v12)
  {
    v13 = v11 - 112;
    v14 = v11 - 112;
    do
    {
      v15 = *(void (***)(char *))v14;
      v14 -= 112;
      (*v15)(v13);
      v16 = v13 == v12;
      v13 = v14;
    }
    while (!v16);
  }
  if (v12)
    operator delete(v12);
  return v18 + 112;
}

void sub_1002D0204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_10019AA44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002D0250(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100402848;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002D0260(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100402848;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_1002D0290(const std::logic_error *a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002D02E4((uint64_t)exception, a1);
}

void sub_1002D02CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D02E4(uint64_t a1, const std::logic_error *a2)
{
  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(_QWORD *)a1 = &off_1004028F8;
  *(_QWORD *)(a1 + 8) = off_100402928;
  *(_QWORD *)(a1 + 24) = off_100402950;
  *(_QWORD *)(a1 + 32) = 0;
  return a1;
}

uint64_t sub_1002D033C(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));
  return a1;
}

void sub_1002D0394()
{
  operator new();
}

void sub_1002D0464()
{
  std::logic_error *v0;

  std::logic_error::~logic_error(v0);
  operator delete();
}

void sub_1002D0490(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1002D04AC(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002D0700((uint64_t)exception, a1);
}

void sub_1002D04E8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002D04FC(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));
  operator delete();
}

void sub_1002D0564(std::logic_error *this)
{
  const char *imp;

  this[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::logic_error::~logic_error(this);
}

void sub_1002D05B4(std::logic_error *this)
{
  const char *imp;

  this[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(this);
  operator delete();
}

void sub_1002D0620(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::logic_error::~logic_error(a1 - 1);
}

void sub_1002D0670(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(a1 - 1);
  operator delete();
}

void sub_1002D06DC(std::logic_error *a1)
{
  std::logic_error::~logic_error(a1);
  operator delete();
}

uint64_t sub_1002D0700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(_QWORD *)(a1 + 8) = &off_100402970;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1004028F8;
  *(_QWORD *)(a1 + 8) = off_100402928;
  *(_QWORD *)(a1 + 24) = off_100402950;
  return a1;
}

void sub_1002D07A4(_Unwind_Exception *a1)
{
  std::logic_error *v1;

  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D07B8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002D0814()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002D0870(uint64_t a1)
{
  return (uint64_t)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8) - **(_QWORD **)(a1 + 8)) >> 4;
}

uint64_t sub_1002D0884(_QWORD **a1, uint64_t a2)
{
  if (*(_QWORD *)(*a1[1] + 16 * a2))
    return ((uint64_t (*)(_QWORD **))(*a1)[2])(a1);
  else
    return 0;
}

uint64_t sub_1002D08AC(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)result = off_100402998;
  *(_QWORD *)(result + 8) = a2;
  *(_QWORD *)(result + 16) = a3;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 0;
  return result;
}

uint64_t sub_1002D08C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;

  if (*(_QWORD *)(a1 + 24) == a2)
  {
    if (*(_BYTE *)(a1 + 32))
    {
      sub_100077D9C(a3, a1 + 40);
      return 1;
    }
    return 0;
  }
  *(_QWORD *)(a1 + 24) = a2;
  if (!(*(unsigned int (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)a2 + 16))(a2, *(_QWORD *)(a1 + 16), a3))
  {
    if (*(_BYTE *)(a1 + 32))
    {
      nullsub_110(a1 + 40);
      result = 0;
      *(_BYTE *)(a1 + 32) = 0;
      return result;
    }
    return 0;
  }
  v5 = a1 + 40;
  if (*(_BYTE *)(a1 + 32))
  {
    sub_100077D9C(v5, a3);
    return 1;
  }
  else
  {
    sub_1001A6798(v5, a3);
    result = 1;
    *(_BYTE *)(a1 + 32) = 1;
  }
  return result;
}

uint64_t sub_1002D0998(uint64_t a1, uint64_t a2, double *a3)
{
  *(_QWORD *)a1 = off_1004029C0;
  *(_QWORD *)(a1 + 8) = a2;
  sub_1001D3BEC((unsigned int *)(a1 + 16), a3);
  return a1;
}

uint64_t sub_1002D09CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, a1 + 16);
}

uint64_t sub_1002D09E4(uint64_t a1)
{
  *(_QWORD *)a1 = off_100402998;
  if (*(_BYTE *)(a1 + 32))
  {
    nullsub_110(a1 + 40);
    *(_BYTE *)(a1 + 32) = 0;
  }
  return a1;
}

void sub_1002D0A24(uint64_t a1)
{
  *(_QWORD *)a1 = off_100402998;
  if (*(_BYTE *)(a1 + 32))
  {
    nullsub_110(a1 + 40);
    *(_BYTE *)(a1 + 32) = 0;
  }
  operator delete();
}

_QWORD *sub_1002D0A74(_QWORD *a1)
{
  *a1 = off_1004029C0;
  sub_1001D3A8C(a1 + 2);
  return a1;
}

void sub_1002D0AA4(_QWORD *a1)
{
  *a1 = off_1004029C0;
  sub_1001D3A8C(a1 + 2);
  operator delete();
}

_QWORD *sub_1002D0AE4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  const void *v6;
  int64_t v7;
  char *v8;
  char *v9;
  uint64_t v11;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v6 = *(const void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = v5 - *(_QWORD *)a2;
  if (v5 != *(_QWORD *)a2)
  {
    if (v7 < 0)
      sub_1000D02C0();
    v8 = (char *)operator new(v5 - *(_QWORD *)a2);
    *a1 = v8;
    a1[1] = v8;
    v9 = &v8[8 * (v7 >> 3)];
    a1[2] = v9;
    memcpy(v8, v6, v7);
    a1[1] = v9;
  }
  sub_1002BF560(a3, &v11);
  sub_1002BF110(a1 + 3, v11, a3);
  sub_1002D0BC8((uint64_t)a1);
  return a1;
}

void sub_1002D0B90(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;
  void *v4;

  v3 = *(void **)(v1 + 40);
  if (v3)
  {
    *(_QWORD *)(v1 + 48) = v3;
    operator delete(v3);
  }
  v4 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002D0BC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  char v7;
  void *v8;

  v2 = a1 + 24;
  if (sub_1002BF558((unsigned int *)(a1 + 24)) != 1)
  {
    v3 = sub_100270038((_QWORD *)a1);
    sub_1002BF560(v2, &v8);
    sub_1002D1D0C(v3, (uint64_t)v8, "mean", (double **)a1, "covariance", v2);
    v4 = *(_QWORD *)(a1 + 40);
    for (i = *(_QWORD *)(a1 + 48); v4 != i; v4 += 8)
      ;
    sub_1002BF83C(v2);
    if (v7 < 0)
      operator delete(v6);
  }
}

void sub_1002D0D7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
    operator delete(__p);
  if (a26 < 0)
    operator delete(a21);
  if (a14 < 0)
  {
    operator delete(a9);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D0DF0(uint64_t a1, uint64_t a2)
{
  sub_10026FFD4((void **)a1, a2);
  sub_1002BF35C((_QWORD *)(a1 + 24), a2 + 24);
  sub_1002D0BC8(a1);
  return a1;
}

BOOL sub_1002D0E2C(uint64_t a1)
{
  return sub_1002BF558((unsigned int *)(a1 + 24)) == 1;
}

void sub_1002D0E4C(_QWORD *a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v13;
  uint64_t v14;
  void *v15[2];
  void *v16;
  void *v17;
  void *v18[3];
  void *__p[2];
  uint64_t v20;
  void *v21[2];
  std::string v22;
  std::string::size_type v23;

  v10 = (_QWORD *)*a1;
  v11 = (_QWORD *)a1[1];
  if (0xAAAAAAAAAAAAAAABLL * (v11 - v10) != (uint64_t)(a2[1] - *a2) >> 3)
  {
    sub_1000D5048(v15, "");
    sub_10023DB34("Must be exactly one logweight for each observation", &v22);
    sub_100174738((uint64_t)v15, (uint64_t)&v22, 1);
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v22.__r_.__value_.__l.__data_);
    if (SHIBYTE(v16) < 0)
      operator delete(v15[0]);
    sub_10015C2DC((uint64_t)v21);
  }
  if (v11 == v10)
    sub_1001E2FA0();
  v13 = sub_100270038(v10);
  *(_OWORD *)__p = *(_OWORD *)a2;
  v20 = a2[2];
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1002D1100((uint64_t)__p, a4, (uint64_t)v21);
  if (__p[0])
    operator delete(__p[0]);
  sub_1002D11CC(v13, v21, a1, v18);
  v14 = sub_100270038(v18);
  sub_1002D12E0(v13, (double **)v21, a1, (unint64_t *)v18, a3, (uint64_t)v15);
  sub_1002BF110(&v22, v14, v15);
  if (v16)
  {
    v17 = v16;
    operator delete(v16);
  }
  sub_1002D0AE4(a5, (uint64_t)v18, (uint64_t)&v22);
  if (v22.__r_.__value_.__r.__words[2])
  {
    v23 = v22.__r_.__value_.__r.__words[2];
    operator delete((void *)v22.__r_.__value_.__r.__words[2]);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  if (v21[0])
  {
    v21[1] = v21[0];
    operator delete(v21[0]);
  }
}

void sub_1002D1048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

double **sub_1002D1100@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double *v4;
  __int128 v5;
  double *v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  double *v10;
  double v12;
  double *v13;
  double v14;
  double v15;

  v4 = *(double **)a1;
  *(_QWORD *)a3 = *(_QWORD *)a1;
  v5 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v6 = (double *)v5;
  v7 = (uint64_t)(v5 - (_QWORD)v4) >> 3;
  v8 = a2 >= v7;
  v9 = a2 - v7;
  if (v9 != 0 && v8)
  {
    sub_1001996CC(a3, v9);
    v4 = *(double **)a3;
    v6 = *(double **)(a3 + 8);
  }
  else if (!v8)
  {
    v6 = &v4[a2];
    *(_QWORD *)(a3 + 8) = v6;
  }
  v10 = v4 + 1;
  if (v4 != v6 && v10 != v6)
  {
    v12 = *v4;
    v13 = v4 + 1;
    do
    {
      v14 = *v13++;
      v15 = v14;
      if (v12 < v14)
      {
        v12 = v15;
        v4 = v10;
      }
      v10 = v13;
    }
    while (v13 != v6);
  }
  sub_100303410((float64x2_t **)a3, *v4);
  return sub_1000B0848((double **)a3);
}

void sub_1002D11B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double *sub_1002D11CC@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  double *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  result = (double *)sub_10026FF40(a4, a1);
  if (a1)
  {
    v9 = 0;
    do
    {
      v10 = a2[1] - *a2;
      if (v10)
      {
        v11 = 0;
        v12 = 0;
        v13 = v10 >> 3;
        if (v13 <= 1)
          v14 = 1;
        else
          v14 = v13;
        v15 = 0.0;
        v16 = 0.0;
        do
        {
          v17 = *(double *)(*a2 + 8 * v12);
          v18 = v17 * *(double *)sub_100270048((_QWORD *)(*a3 + v11), v9) - v15;
          v19 = v16 + v18;
          v15 = v16 + v18 - v16 - v18;
          ++v12;
          v11 += 24;
          v16 = v16 + v18;
        }
        while (v14 != v12);
      }
      else
      {
        v19 = 0.0;
      }
      result = (double *)sub_100270048(a4, v9);
      *result = v19;
      ++v9;
    }
    while (v9 != a1);
  }
  return result;
}

void sub_1002D12C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002D12E0(unint64_t a1@<X0>, double **a2@<X1>, _QWORD *a3@<X2>, unint64_t *a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  double v11;
  double *v12;
  double *v13;
  double *v14;
  double *v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  long double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  double *v32;
  float64x2_t *v33;
  unint64_t v34;
  double *v35;
  uint64_t v36;
  float64x2_t *v37;
  uint64_t v38;
  float64x2_t v39;
  double v40;
  _BYTE v41[24];
  void *__p[2];
  void *v43[2];
  char v44;
  std::string buf;
  std::string::size_type v46;

  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a3[1] - *a3) >> 3) < a2[1] - *a2)
  {
    sub_1000D5048(v43, "");
    sub_1002D2280("weights is the dominant input here. The size of weights should determine the size of the operation.", &buf);
    sub_100174738((uint64_t)v43, (uint64_t)&buf, 1);
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
      operator delete(buf.__r_.__value_.__l.__data_);
    if (v44 < 0)
      operator delete(v43[0]);
    sub_10015C2DC((uint64_t)__p);
  }
  v11 = 1.0;
  if (!a5)
    goto LABEL_22;
  if (a5 != 1)
  {
    __cxa_allocate_exception(0x40uLL);
    std::logic_error::logic_error((std::logic_error *)&buf, "Not implemented estimation type");
    sub_10018D04C((uint64_t)v41);
    sub_1000F7E48((std::logic_error *)&buf, (uint64_t)"static SymmetricMatrix64F MultivariateGaussian::computeCovariance(size_t, const std::vector<double> &, const std::vector<Vector64F> &, const Vector64F &, EstimationType)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/multivariate_gaussian.cpp", 178, (uint64_t)v41);
  }
  v12 = *a2;
  v13 = a2[1];
  v14 = *a2;
  if (*a2 != v13)
  {
    v15 = v12 + 1;
    v14 = *a2;
    if (v12 + 1 != v13)
    {
      v16 = *v12;
      v14 = *a2;
      v17 = v12 + 1;
      do
      {
        v18 = *v17++;
        v19 = v18;
        if (v16 < v18)
        {
          v16 = v19;
          v14 = v15;
        }
        v15 = v17;
      }
      while (v17 != v13);
    }
  }
  v20 = 1.0 - *v14;
  if (v20 < nextafter(1.0, INFINITY) + -1.0)
    goto LABEL_17;
  if (v12 == v13)
  {
    v25 = 0.0;
  }
  else
  {
    v21 = 0.0;
    v22 = 0.0;
    do
    {
      v23 = *v12++;
      v24 = v23 * v23 - v22;
      v25 = v21 + v24;
      v22 = v21 + v24 - v21 - v24;
      v21 = v25;
    }
    while (v12 != v13);
  }
  v11 = 1.0 / (1.0 - v25);
  if (v11 == INFINITY)
  {
LABEL_17:
    if (qword_100417ED8 != -1)
      dispatch_once(&qword_100417ED8, &stru_100402A38);
    v26 = qword_100417EE0;
    if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "WARNING: MultivariateGaussian fromSample: singular covariance. This is most likely caused by particle deprivation, but can sometime also arise while switching modes/floors. Try increasing the number of particles.", (uint8_t *)&buf, 2u);
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 1;
    sub_1002BF114(a6, a1, &buf);
  }
  else
  {
LABEL_22:
    v40 = v11;
    sub_1002BEE9C(a6, a1);
    sub_1002C022C(a6, v43);
    sub_1002BEE9C((uint64_t)&buf, a1);
    sub_10026FF40(__p, a1);
    v27 = (char *)a2[1] - (char *)*a2;
    if (v27)
    {
      v28 = 0;
      v29 = 0;
      v30 = v27 >> 3;
      if (v30 <= 1)
        v31 = 1;
      else
        v31 = v30;
      do
      {
        sub_10026FFD4(__p, *a3 + v28);
        sub_1002BB8F4((unint64_t *)__p, a4);
        sub_1002BF128((uint64_t)&buf, 0.0);
        sub_1002C01DC((uint64_t)&buf, (uint64_t)__p, 1.0);
        if (v29 >= a2[1] - *a2)
          sub_1001E2FA0();
        sub_1002C02CC((unint64_t *)v43, (uint64_t)&buf, (*a2)[v29++]);
        v28 += 24;
      }
      while (v31 != v29);
    }
    sub_1002BF1A4(a6, (unint64_t *)v43);
    v33 = *(float64x2_t **)(a6 + 16);
    v32 = *(double **)(a6 + 24);
    if (v33 != (float64x2_t *)v32)
    {
      v34 = (char *)v32 - (char *)v33 - 8;
      v35 = *(double **)(a6 + 16);
      if (v34 < 0x18)
        goto LABEL_50;
      v36 = (v34 >> 3) + 1;
      v35 = &v33->f64[v36 & 0x3FFFFFFFFFFFFFFCLL];
      v37 = v33 + 1;
      v38 = v36 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v39 = vmulq_n_f64(*v37, v40);
        v37[-1] = vmulq_n_f64(v37[-1], v40);
        *v37 = v39;
        v37 += 2;
        v38 -= 4;
      }
      while (v38);
      if (v36 != (v36 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_50:
        do
        {
          *v35 = v40 * *v35;
          ++v35;
        }
        while (v35 != v32);
      }
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (buf.__r_.__value_.__r.__words[2])
    {
      v46 = buf.__r_.__value_.__r.__words[2];
      operator delete((void *)buf.__r_.__value_.__r.__words[2]);
    }
    if (v43[0])
    {
      v43[1] = v43[0];
      operator delete(v43[0]);
    }
  }
}

void sub_1002D1748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,std::invalid_argument a27,void *a28,uint64_t a29)
{
  if (a20 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002D187C(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  NSObject *v6;
  const char *v7;
  uint8_t buf[8];

  if (*(_BYTE *)a1)
  {
    v5 = a1 + 32;
    if (sub_1002BF558((unsigned int *)(a1 + 32)) != 1)
      sub_1002BFD64(v5);
    if (a2)
    {
      if (qword_100417ED8 != -1)
      {
        dispatch_once(&qword_100417ED8, &stru_100402A38);
        v6 = qword_100417EE0;
        if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
          goto LABEL_13;
        goto LABEL_6;
      }
      v6 = qword_100417EE0;
      if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
      {
LABEL_6:
        *(_WORD *)buf = 0;
        v7 = "WARNING: UNIFORM: Max covariance blue dot, apply as UNIFORM.";
LABEL_12:
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, v7, buf, 2u);
      }
    }
  }
  else if (a2)
  {
    if (qword_100417ED8 == -1)
    {
      v6 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        goto LABEL_13;
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_100402A38);
      v6 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        goto LABEL_13;
    }
    *(_WORD *)buf = 0;
    v7 = "WARNING: UNIFORM: Uninitialized blue dot, start with UNIFORM prior.";
    goto LABEL_12;
  }
LABEL_13:
  *a3 = 0;
  a3[1] = 0;
}

void sub_1002D1B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002D1BA8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_1002D1BC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_1002D1BE4(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  sub_1002D187C(a1, a2, &v10);
  if (v10)
  {
    v4 = (uint64_t)v11;
    *a3 = v10;
    a3[1] = v4;
    if (!v4)
      goto LABEL_7;
  }
  else
  {
    v4 = qword_10042E9B8;
    *a3 = qword_10042E9B0;
    a3[1] = v4;
    if (!v4)
      goto LABEL_7;
  }
  v5 = (unint64_t *)(v4 + 8);
  do
    v6 = __ldxr(v5);
  while (__stxr(v6 + 1, v5));
LABEL_7:
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1002D1C94(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  _BYTE v4[16];
  void *__p;
  void *v6;

  v1 = a1 + 3;
  v2 = sub_100270038(a1);
  v3 = 1;
  sub_1002BF114((uint64_t)v4, v2, &v3);
  sub_1002BF35C(v1, (uint64_t)v4);
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
}

void sub_1002D1CF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D1D0C(uint64_t result, uint64_t a2, char *a3, double **a4, char *a5, uint64_t a6)
{
  uint64_t v11;
  void **v12;
  uint64_t v13;
  NSObject *v14;
  const char *v15;
  void **v16;
  _BYTE v17[24];
  void *v18[2];
  uint64_t v19;
  uint64_t v20;
  void *__p[2];
  unsigned __int8 v22;
  void *v23[2];
  char v24;
  void *v25[2];
  char v26;
  std::logic_error v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t buf[4];
  const char *v33;
  __int16 v34;
  void **v35;

  if (result != a2)
  {
    v11 = result;
    sub_1002BBEB4((uint64_t)&v30);
    sub_1002704DC(&v30, a4);
    sub_1002BBEB4((uint64_t)&v28);
    sub_1002BFA28(&v28, a6);
    sub_1000D5048(v25, a3);
    std::stringbuf::str(&v31);
    sub_1000D5048(v23, a5);
    std::stringbuf::str(&v29);
    sub_100318D9C(&v27, v25, v11, v18, v23, a2, __p);
    if ((char)v22 < 0)
    {
      operator delete(__p[0]);
      if ((v24 & 0x80000000) == 0)
        goto LABEL_4;
    }
    else if ((v24 & 0x80000000) == 0)
    {
LABEL_4:
      if (SHIBYTE(v19) < 0)
        goto LABEL_5;
      goto LABEL_9;
    }
    operator delete(v23[0]);
    if (SHIBYTE(v19) < 0)
    {
LABEL_5:
      operator delete(v18[0]);
      if ((v26 & 0x80000000) == 0)
      {
LABEL_11:
        if (!sub_10017466C())
          goto LABEL_28;
        sub_1000FC5A4((uint64_t)v18);
        sub_100170BF8(0);
        if ((v22 & 0x80u) == 0)
          v12 = __p;
        else
          v12 = (void **)__p[0];
        if ((v22 & 0x80u) == 0)
          v13 = v22;
        else
          v13 = (uint64_t)__p[1];
        sub_1000F0508(&v19, (uint64_t)v12, v13);
        if ((char)v22 < 0)
          operator delete(__p[0]);
        if (qword_100417ED8 == -1)
        {
          v14 = qword_100417EE0;
          if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
          {
LABEL_22:
            v15 = std::logic_error::what(&v27);
            std::stringbuf::str(&v20);
            if ((v22 & 0x80u) == 0)
              v16 = __p;
            else
              v16 = (void **)__p[0];
            *(_DWORD *)buf = 136315394;
            v33 = v15;
            v34 = 2080;
            v35 = v16;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Precondition failure: %s\n%s\n", buf, 0x16u);
            if ((char)v22 < 0)
              operator delete(__p[0]);
          }
        }
        else
        {
          dispatch_once(&qword_100417ED8, &stru_100402A38);
          v14 = qword_100417EE0;
          if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
            goto LABEL_22;
        }
        sub_1000FC6DC((uint64_t)v18);
LABEL_28:
        __cxa_allocate_exception(0x80uLL);
        sub_10018D04C((uint64_t)v17);
        sub_1002BC14C((uint64_t)&v27, (uint64_t)"void Preconditions::checkDimension(size_t, size_t, const char *, M1 &&, const char *, M2 &&) [M1 = const Vector64F &, M2 = const SymmetricMatrix64F &]", (uint64_t)"../../../common/math/dimensionality_mismatch_error.h", 100, (uint64_t)v17);
      }
LABEL_10:
      operator delete(v25[0]);
      goto LABEL_11;
    }
LABEL_9:
    if ((v26 & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
  return result;
}

void sub_1002D1FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *__p,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,std::logic_error a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;

  sub_1000FC6DC((uint64_t)&a13);
  sub_100318E04(&a57);
  sub_1000F0484((uint64_t)&a66);
  sub_1000F0484((uint64_t)&STACK[0x2D8]);
  _Unwind_Resume(a1);
}

void sub_1002D2074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  char a68;
  char a72;

  if (a56 < 0)
  {
    operator delete(__p);
    if (a62 < 0)
    {
LABEL_5:
      operator delete(a57);
      if (a18 < 0)
      {
LABEL_8:
        operator delete(a13);
        if ((a68 & 0x80000000) == 0)
        {
LABEL_12:
          sub_1000F0484((uint64_t)&a72);
          sub_1000F0484((uint64_t)&STACK[0x2D8]);
          _Unwind_Resume(a1);
        }
LABEL_11:
        operator delete(a63);
        sub_1000F0484((uint64_t)&a72);
        sub_1000F0484((uint64_t)&STACK[0x2D8]);
        _Unwind_Resume(a1);
      }
LABEL_10:
      if ((a68 & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
  }
  else if (a62 < 0)
  {
    goto LABEL_5;
  }
  if (a18 < 0)
    goto LABEL_8;
  goto LABEL_10;
}

void sub_1002D213C(_Unwind_Exception *a1)
{
  sub_1000F0484((uint64_t)&STACK[0x2D8]);
  _Unwind_Resume(a1);
}

void sub_1002D2150(_Unwind_Exception *a1)
{
  sub_1000F0484((uint64_t)&STACK[0x2D8]);
  _Unwind_Resume(a1);
}

_QWORD *sub_1002D2168(_QWORD *a1, double **a2)
{
  std::string *p_p;
  std::string::size_type size;
  _QWORD *result;
  _QWORD *v6;
  std::string __p;

  sub_10025AB40(a2, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  result = sub_1000F0508(a1, (uint64_t)p_p, size);
  v6 = result;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    return v6;
  }
  return result;
}

void sub_1002D21E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002D2204(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_1002D2230(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100402A68;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002D2240(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100402A68;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1002D2270(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

std::string *sub_1002D2280@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002D22B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D22CC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002D2328()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

std::string *sub_1002D2384@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002D23B4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D23D0()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002D242C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

char *sub_1002D2488@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[23] < 0)
  {
    result = (char *)sub_10006CED8((_BYTE *)a2, *(void **)result, *((_QWORD *)result + 1));
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)result;
    *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 2);
  }
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

double *sub_1002D24E4(double *a1)
{
  double v2;

  v2 = sub_10026A6F4();
  *a1 = v2 * v2;
  return a1;
}

uint64_t sub_1002D2514()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002D2570()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002D25CC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  _QWORD *v8;

  if (a3 == 1)
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  else
  {
    v8 = operator new(0x78uLL);
    v8[1] = 0;
    v8[2] = 0;
    *v8 = off_100402D98;
    *(_QWORD *)a1 = sub_10008A2EC((uint64_t)(v8 + 3));
    *(_QWORD *)(a1 + 8) = v8;
  }
  sub_1002D2874((wireless_diagnostics::google::protobuf::MessageLite **)a1, a2, a3, a4);
  return a1;
}

void sub_1002D2650(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_1002D2668(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

int *sub_1002D26AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[92];
  int v5;

  sub_100178D5C(a1, &v5);
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v4, v5, -1);
  sub_1002D25CC(a2, (uint64_t)v4, 0, 1);
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v4);
  return sub_100068888(&v5);
}

void sub_1002D270C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)&a9);
  sub_100068888((int *)(v9 - 20));
  _Unwind_Resume(a1);
}

void sub_1002D2728(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100068888((int *)(v1 - 20));
  _Unwind_Resume(a1);
}

uint64_t sub_1002D273C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _BYTE v6[92];
  int v7;
  _QWORD v8[3];
  _QWORD v9[2];
  __int128 v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v4 = operator new(0x78uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_100402D98;
  *(_QWORD *)a1 = sub_10008A2EC((uint64_t)(v4 + 3));
  *(_QWORD *)(a1 + 8) = v4;
  sub_100178D5C(a2, &v7);
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v6, v7, -1);
  v8[0] = v6;
  v8[1] = 0;
  v8[2] = 0;
  v9[0] = 0;
  *(_QWORD *)((char *)v9 + 6) = 0;
  v10 = xmmword_100382F50;
  v11 = 0;
  v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  v13 = 0;
  v14 = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  sub_1002D2CAC((wireless_diagnostics::google::protobuf::MessageLite **)a1, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v6);
  sub_100068888(&v7);
  return a1;
}

void sub_1002D280C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,char a22)
{
  uint64_t v22;

  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)&a22);
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)&a9);
  sub_100068888(&a21);
  sub_1000E095C(v22);
  _Unwind_Resume(a1);
}

void sub_1002D2848(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1000E095C(v1);
  _Unwind_Resume(a1);
}

void sub_1002D285C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_1002D2874(wireless_diagnostics::google::protobuf::MessageLite **a1, uint64_t a2, int a3, int a4)
{
  _QWORD *v7;
  _QWORD v8[3];
  _QWORD v9[2];
  __int128 v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *__p;
  void *v16;
  char v17;

  v8[0] = a2;
  v8[1] = 0;
  v8[2] = 0;
  v9[0] = 0;
  *(_QWORD *)((char *)v9 + 6) = 0;
  v10 = xmmword_100382F50;
  v11 = 0;
  v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  v13 = 0;
  v14 = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  if (a4 == 1)
  {
    sub_1002D2A18(a1, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8, a3);
  }
  else if (!a4)
  {
    if (a3)
    {
      v7 = sub_1000D5048(&v16, "");
      sub_100174738((uint64_t)v7, 0, 0);
      if (v17 < 0)
        operator delete(v16);
      sub_1000F2AE4((uint64_t)&__p);
    }
    sub_1002D2CAC(a1, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
}

void sub_1002D2960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
  {
    operator delete(__p);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)&a9);
    _Unwind_Resume(a1);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)&a9);
  _Unwind_Resume(a1);
}

void **sub_1002D299C(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  char *v5;
  char *v6;
  void (**v7)(char *);
  BOOL v8;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      v5 = v3 - 40;
      v6 = v3 - 40;
      do
      {
        v7 = *(void (***)(char *))v6;
        v6 -= 40;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_1002D2A0C(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 72);
}

wireless_diagnostics::google::protobuf::MessageLite **sub_1002D2A18(wireless_diagnostics::google::protobuf::MessageLite **result, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, int a3)
{
  wireless_diagnostics::google::protobuf::MessageLite **v5;
  char *v6;
  int v7;
  _BYTE v8[24];
  _BYTE v9[24];
  std::string v10;
  std::runtime_error v11;
  unsigned int v12;

  v5 = result;
  v12 = 0;
  v6 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
  {
    result = (wireless_diagnostics::google::protobuf::MessageLite **)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if ((result & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      sub_1000D5048(&v10, "Cannot find header length in input stream");
      std::runtime_error::runtime_error(&v11, &v10);
      v11.__vftable = (std::runtime_error_vtbl *)&off_100400690;
      sub_10018D04C((uint64_t)v9);
      sub_1002738D8(&v11, (uint64_t)"void TileHeader::deserializeFramed(google::protobuf::io::CodedInputStream &, Mode)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 122, (uint64_t)v9);
    }
  }
  else
  {
    v12 = *v6;
    *((_QWORD *)this + 1) = v6 + 1;
  }
  if (a3 == 1)
  {
    result = (wireless_diagnostics::google::protobuf::MessageLite **)wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, v12);
    if ((result & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error((std::runtime_error *)&v10, "Failed to skip header in input stream");
      sub_10018D04C((uint64_t)v8);
      sub_1002D2E4C((std::runtime_error *)&v10, (uint64_t)"void TileHeader::deserializeFramed(google::protobuf::io::CodedInputStream &, Mode)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 134, (uint64_t)v8);
    }
  }
  else if (!a3)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v12);
    sub_1002D2CAC(v5, this);
    return (wireless_diagnostics::google::protobuf::MessageLite **)wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  }
  return result;
}

void sub_1002D2BD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, std::underflow_error a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v19;

  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error((std::runtime_error *)(v19 - 56));
  if (a19 < 0)
    operator delete(a15.__vftable);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D2CAC(wireless_diagnostics::google::protobuf::MessageLite **a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t result;
  _BYTE v4[24];
  _BYTE v5[24];
  std::runtime_error v6;

  result = wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream(*a1, a2);
  if ((result & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v6, "Failed to deserialize TileHeader message");
    sub_10018D04C((uint64_t)v5);
    sub_1002D2E4C(&v6, (uint64_t)"void TileHeader::deserializeNaked(google::protobuf::io::CodedInputStream &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 143, (uint64_t)v5);
  }
  if (!*((_BYTE *)a2 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v6, "Failed to consume entire message");
    sub_10018D04C((uint64_t)v4);
    sub_1002D2E4C(&v6, (uint64_t)"void TileHeader::deserializeNaked(google::protobuf::io::CodedInputStream &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 147, (uint64_t)v4);
  }
  return result;
}

void sub_1002D2DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (__p)
    operator delete(__p);
  std::underflow_error::~underflow_error((std::underflow_error *)(v13 - 32));
  _Unwind_Resume(a1);
}

void sub_1002D2E24(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002D2E38(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002D2E4C(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  const void *v9;
  size_t v10;
  void *v11;
  std::runtime_error v12;
  uint64_t (**v13)();
  uint64_t v14;
  __int128 v15;
  int v16;
  std::runtime_error v17;
  _QWORD v18[2];
  __int128 v19;
  int v20;
  uint64_t (**v21)();

  std::runtime_error::runtime_error(&v12, a1);
  v14 = 0;
  v15 = 0uLL;
  v16 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100402C60;
  v13 = off_100402C88;
  v21 = (uint64_t (**)())&off_1003EDEA0;
  std::runtime_error::runtime_error(&v17, &v12);
  v18[0] = &off_1003EDD90;
  v18[1] = v14;
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14);
  v19 = v15;
  v20 = v16;
  v17.__vftable = (std::runtime_error_vtbl *)off_100402BC0;
  v18[0] = off_100402BF8;
  v21 = &off_100402C30;
  sub_1000CE34C((uint64_t)v18, (uint64_t)&v13);
  *(_QWORD *)&v19 = a2;
  *((_QWORD *)&v19 + 1) = a3;
  v20 = a4;
  v9 = *(const void **)a5;
  v10 = *(_QWORD *)(a5 + 8) - *(_QWORD *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_1000D02C0();
    v11 = operator new(v10);
    memcpy(v11, v9, v10);
  }
  sub_1002D4FD4();
}

void sub_1002D30AC(void *a1)
{
  std::underflow_error *v1;

  std::underflow_error::~underflow_error(v1);
  sub_1000CDD68(a1);
}

void sub_1002D30C0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::underflow_error a20)
{
  std::underflow_error::~underflow_error(&a20);
  sub_1000CDD68(a1);
}

void sub_1002D30D8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::underflow_error a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;

  a21 = v22 + 16;
  if (a22)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a22 + 32))(a22))
    {
      a22 = 0;
      std::underflow_error::~underflow_error(&a20);
      sub_1000CDD68(a1);
    }
  }
  std::underflow_error::~underflow_error(&a20);
  sub_1000CDD68(a1);
}

void sub_1002D3124(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (!__p)
    sub_1000CDD68(a1);
  operator delete(__p);
  sub_1000CDD68(a1);
}

void sub_1002D3148(std::underflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(this);
}

int *sub_1002D3198(_QWORD *a1, uint64_t a2)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  _BYTE v8[24];
  _BYTE v9[24];
  std::string v10;
  std::runtime_error v11;
  void *__p[2];
  char v13;
  int __val;
  int v15;
  std::string v16;

  if ((*(_BYTE *)(*a1 + 92) & 0x10) == 0)
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v13 < 0)
      operator delete(__p[0]);
    sub_1000F2AE4((uint64_t)&v16);
  }
  sub_100068AE8(a2, 1, 0x1A4u, &v15);
  wireless_diagnostics::google::protobuf::io::FileOutputStream::FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)__p, v15, -1);
  if ((wireless_diagnostics::google::protobuf::MessageLite::SerializeToZeroCopyStream(*a1) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v10, __val);
    v4 = std::string::insert(&v10, 0, "Failed to serialize tile header. errno=");
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v16.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v11, &v16);
    sub_10018D04C((uint64_t)v9);
    sub_10023643C(&v11, (uint64_t)"void TileHeader::saveUnframedTo(const fs::path &) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 172, (uint64_t)v9);
  }
  if ((wireless_diagnostics::google::protobuf::io::FileOutputStream::Flush((wireless_diagnostics::google::protobuf::io::FileOutputStream *)__p) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v10, __val);
    v6 = std::string::insert(&v10, 0, "Failed to flush tile header. errno=");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v16.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v11, &v16);
    sub_10018D04C((uint64_t)v8);
    sub_10023643C(&v11, (uint64_t)"void TileHeader::saveUnframedTo(const fs::path &) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 175, (uint64_t)v8);
  }
  wireless_diagnostics::google::protobuf::io::FileOutputStream::~FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)__p);
  return sub_100068888(&v15);
}

void sub_1002D33AC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 - 41) < 0)
    operator delete(*(void **)(v1 - 64));
  _Unwind_Resume(exception_object);
}

void sub_1002D33C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,std::runtime_error a21,char a22)
{
  uint64_t v22;

  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a21);
  if (*(char *)(v22 - 41) < 0)
    operator delete(*(void **)(v22 - 64));
  if (a20 < 0)
    operator delete(a15);
  wireless_diagnostics::google::protobuf::io::FileOutputStream::~FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)&a22);
  sub_100068888((int *)(v22 - 68));
  _Unwind_Resume(a1);
}

uint64_t sub_1002D34F4(uint64_t a1)
{
  void *v2;
  void *__p[2];
  char v4;

  if ((*(_BYTE *)(*(_QWORD *)a1 + 92) & 0x10) == 0)
  {
    sub_1000D5048(__p, "");
    sub_100174738((uint64_t)__p, 0, 0);
    if (v4 < 0)
      operator delete(__p[0]);
    sub_1000F2AE4((uint64_t)&v2);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 80);
}

void sub_1002D358C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D35A8(uint64_t a1)
{
  return (*(unsigned __int8 *)(*(_QWORD *)a1 + 92) >> 4) & 1;
}

uint64_t *sub_1002D35B8(uint64_t *result, uint64_t a2)
{
  uint64_t v2;

  v2 = *result;
  *(_DWORD *)(v2 + 92) = *(_DWORD *)(*result + 92) | 0x10;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t sub_1002D35D0(_QWORD *a1)
{
  return *a1 + 16;
}

float sub_1002D35DC(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t a4, double a5)
{
  float v10;
  uint64_t *v11;
  uint64_t v12;
  float v13;
  float v14;
  double v15;
  float v16;
  float v17;
  float v19;

  v10 = 0.0;
  if ((sub_10021930C(a5) & 1) != 0)
    return v10;
  v11 = sub_1002D6528(a1, a2);
  if (!v11)
  {
    if (!sub_1002D6528(a3, a2))
      return v10;
    v19 = (float)*(int *)(a4 + 24);
    v14 = (float)*(int *)(a4 + 28);
    v10 = *(float *)(a4 + 16);
    v15 = (float)(v19 - v14);
    if (v15 >= a5)
      return v10;
    v16 = *(float *)(a4 + 20);
    if ((float)(v19 + v14) > a5)
      goto LABEL_5;
    return v16;
  }
  v12 = a1[8] + 40 * *((int *)v11 + 12);
  v13 = (float)*(int *)(v12 + 24);
  v14 = (float)*(int *)(v12 + 28);
  v10 = *(float *)(v12 + 16);
  v15 = (float)(v13 - v14);
  if (v15 < a5)
  {
    v16 = *(float *)(v12 + 20);
    if ((float)(v13 + v14) > a5)
    {
LABEL_5:
      v17 = a5 - v15;
      return (float)(v10 * (float)(1.0 - (float)(v17 / (float)(v14 + v14))))
           + (float)(v16 * (float)(v17 / (float)(v14 + v14)));
    }
    return v16;
  }
  return v10;
}

double sub_1002D36F8(_QWORD *a1, uint64_t *a2, _QWORD *a3, uint64_t a4, int a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  double v13;
  int v14;
  double v15;
  uint64_t v16;
  double v17;
  __int16 v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _BYTE *v29;
  _WORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  _OWORD *v37;
  char *v38;
  unint64_t v39;
  __int128 v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  double v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  std::string *v50;
  __int128 v51;
  uint64_t v52;
  void **v54;
  uint64_t v55;
  _BYTE v56[24];
  std::string v57;
  std::string v58;
  std::runtime_error v59;

  if (a5 == 2)
  {
    v42 = *a2;
    v43 = a2[1];
    v13 = 0.0;
    if (*a2 != v43)
    {
      do
      {
        if (sub_1002D6528(a1, v42))
          v13 = v13 + 1.0;
        v42 += 208;
      }
      while (v42 != v43);
    }
  }
  else if (a5 == 1)
  {
    return (double)(unint64_t)(0x4EC4EC4EC4EC4EC5 * ((a2[1] - *a2) >> 4));
  }
  else
  {
    if (a5)
    {
      __cxa_allocate_exception(0x40uLL);
      std::to_string(&v57, a5);
      v50 = std::string::insert(&v57, 0, "Unrecognized coarse indoor weight calculation type ");
      v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
      v58.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v51;
      v50->__r_.__value_.__l.__size_ = 0;
      v50->__r_.__value_.__r.__words[2] = 0;
      v50->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v59, &v58);
      v59.__vftable = (std::runtime_error_vtbl *)&off_1003EF600;
      sub_10018D04C((uint64_t)v56);
      sub_1000EF6D4(&v59, (uint64_t)"double CoarseIndoorApData::cumulativeCoarseWeight(const std::vector<RadioScanEntry> &, const std::unordered_set<MacAddress> &, const proto::radiomap::CoarseApParams &, CumulativeCoarseIndoorWeightType, FloorYieldEntry *) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 312, (uint64_t)v56);
    }
    v9 = *a2;
    v10 = a2[1];
    if (*a2 == v10)
    {
      v13 = 0.0;
      if (a6)
LABEL_44:
        sub_10019E8CC((uint64_t)a6, v13);
    }
    else
    {
      v12 = a3;
      if (a6)
      {
        v54 = (void **)(a6 + 7);
        v13 = 0.0;
        v52 = a2[1];
        while (1)
        {
          while (1)
          {
            v14 = *(_DWORD *)(v9 + 32);
            if (v14 == v14 >> 31)
            {
              v15 = *(double *)(v9 + 72);
            }
            else
            {
              v16 = v14 >= 0 ? v9 + 40 : *(_QWORD *)(v9 + 40);
              v15 = (double)*(int *)(v16 + 92);
            }
            v17 = sub_1002D35DC(a1, v9, v12, a4, v15);
            v18 = llround(v17 * 10.0);
            v20 = (char *)a6[8];
            v19 = a6[9];
            if ((unint64_t)v20 >= v19)
              break;
            *(_WORD *)v20 = v18;
            v13 = v13 + v17;
            a6[8] = v20 + 2;
            v9 += 208;
            if (v9 == v10)
              goto LABEL_44;
          }
          v21 = a4;
          v22 = (char *)*v54;
          v23 = v20 - (_BYTE *)*v54;
          if (v23 <= -3)
            sub_1000D02C0();
          v24 = v23 >> 1;
          v25 = v19 - (_QWORD)v22;
          if (v25 <= (v23 >> 1) + 1)
            v26 = v24 + 1;
          else
            v26 = v25;
          v27 = v25 >= 0x7FFFFFFFFFFFFFFELL;
          v28 = 0x7FFFFFFFFFFFFFFFLL;
          if (!v27)
            v28 = v26;
          v55 = v28;
          if (v28)
          {
            if (v28 < 0)
              sub_1000CDEB8();
            v29 = operator new(2 * v28);
            v30 = &v29[2 * v24];
            *v30 = v18;
            v31 = (uint64_t)(v30 + 1);
            if (v20 == v22)
            {
LABEL_27:
              a4 = v21;
              goto LABEL_33;
            }
          }
          else
          {
            v29 = 0;
            v30 = (_WORD *)(2 * v24);
            *(_WORD *)(2 * v24) = v18;
            v31 = 2 * v24 + 2;
            if (v20 == v22)
              goto LABEL_27;
          }
          v32 = v20 - 2 - v22;
          if (v32 >= 0x1E)
          {
            v33 = v20 - &v29[v23 & 0xFFFFFFFFFFFFFFFELL];
            a4 = v21;
            if (v33 >= 0x20)
            {
              v34 = (v32 >> 1) + 1;
              v35 = 2 * (v34 & 0xFFFFFFFFFFFFFFF0);
              v36 = &v20[-v35];
              v30 = (_WORD *)((char *)v30 - v35);
              v37 = &v29[2 * v24 - 16];
              v38 = v20 - 16;
              v39 = v34 & 0xFFFFFFFFFFFFFFF0;
              do
              {
                v40 = *(_OWORD *)v38;
                *(v37 - 1) = *((_OWORD *)v38 - 1);
                *v37 = v40;
                v37 -= 2;
                v38 -= 32;
                v39 -= 16;
              }
              while (v39);
              v20 = v36;
              if (v34 == (v34 & 0xFFFFFFFFFFFFFFF0))
                goto LABEL_33;
            }
          }
          else
          {
            a4 = v21;
          }
          do
          {
            v41 = *((_WORD *)v20 - 1);
            v20 -= 2;
            *--v30 = v41;
          }
          while (v20 != v22);
LABEL_33:
          a6[7] = v30;
          a6[8] = v31;
          a6[9] = &v29[2 * v55];
          if (v22)
            operator delete(v22);
          v10 = v52;
          v12 = a3;
          v13 = v13 + v17;
          a6[8] = v31;
          v9 += 208;
          if (v9 == v52)
            goto LABEL_44;
        }
      }
      v45 = v9 + 40;
      v13 = 0.0;
      do
      {
        v48 = *(_DWORD *)(v45 - 8);
        if (v48 == v48 >> 31)
        {
          v46 = *(double *)(v45 + 32);
        }
        else
        {
          if (v48 >= 0)
            v49 = v45;
          else
            v49 = *(_QWORD *)v45;
          v46 = (double)*(int *)(v49 + 92);
        }
        v13 = v13 + sub_1002D35DC(a1, v45 - 40, v12, a4, v46);
        v47 = v45 + 168;
        v45 += 208;
      }
      while (v47 != v10);
    }
  }
  return v13;
}

void sub_1002D3AF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,std::runtime_error a28)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a28);
  if (a27 < 0)
    operator delete(a22);
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(a1);
}

void sub_1002D3B98(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  const void *v9;
  size_t v10;
  void *v11;
  std::runtime_error v12;
  uint64_t (**v13)();
  uint64_t v14;
  __int128 v15;
  int v16;
  std::runtime_error v17;
  _QWORD v18[2];
  __int128 v19;
  int v20;
  uint64_t (**v21)();

  std::runtime_error::runtime_error(&v12, a1);
  v14 = 0;
  v15 = 0uLL;
  v16 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100402D50;
  v13 = off_100402D78;
  v21 = (uint64_t (**)())&off_1003EDEA0;
  std::runtime_error::runtime_error(&v17, &v12);
  v17.__vftable = (std::runtime_error_vtbl *)&off_1004009A0;
  v18[0] = &off_1003EDD90;
  v18[1] = v14;
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14);
  v19 = v15;
  v20 = v16;
  v17.__vftable = (std::runtime_error_vtbl *)off_100402CB0;
  v18[0] = off_100402CE8;
  v21 = &off_100402D20;
  sub_1000CE34C((uint64_t)v18, (uint64_t)&v13);
  *(_QWORD *)&v19 = a2;
  *((_QWORD *)&v19 + 1) = a3;
  v20 = a4;
  v9 = *(const void **)a5;
  v10 = *(_QWORD *)(a5 + 8) - *(_QWORD *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_1000D02C0();
    v11 = operator new(v10);
    memcpy(v11, v9, v10);
  }
  sub_1002D584C();
}

void sub_1002D3DE4(void *a1)
{
  std::runtime_error *v1;

  std::runtime_error::~runtime_error(v1);
  sub_1000CDD68(a1);
}

void sub_1002D3DF8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::runtime_error a20)
{
  std::runtime_error::~runtime_error(&a20);
  sub_1000CDD68(a1);
}

void sub_1002D3E10(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::runtime_error a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;

  a21 = v22 + 16;
  if (a22)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a22 + 32))(a22))
    {
      a22 = 0;
      std::runtime_error::~runtime_error(&a20);
      sub_1000CDD68(a1);
    }
  }
  std::runtime_error::~runtime_error(&a20);
  sub_1000CDD68(a1);
}

void sub_1002D3E5C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (!__p)
    sub_1000CDD68(a1);
  operator delete(__p);
  sub_1000CDD68(a1);
}

void sub_1002D3E80(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_1002D3ED0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if ((*(_BYTE *)(*(_QWORD *)a1 + 81) & 2) != 0)
    a3 = (_DWORD *)(*(_QWORD *)a1 + 72);
  switch(*a3)
  {
    case 1:
      operator new();
    case 2:
      operator new();
    case 3:
      break;
    case 4:
      operator new();
    case 5:
      operator new();
    default:
      if (*a3 != 101)
      {
        __cxa_allocate_exception(8uLL);
        operator new();
      }
      return;
  }
  operator new();
}

void sub_1002D4098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  int v15;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  operator delete();
}

void sub_1002D415C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _DWORD *v5;

  v4 = sub_10026D228(a2);
  v5 = (_DWORD *)nullsub_10(a2);
  sub_1002D3ED0(a1, v4, v5);
}

uint64_t sub_1002D41AC(uint64_t a1)
{
  return *(unsigned int *)(*(_QWORD *)a1 + 28);
}

uint64_t sub_1002D41B8(uint64_t a1)
{
  return *(unsigned int *)(*(_QWORD *)a1 + 32);
}

uint64_t sub_1002D41C4(uint64_t a1)
{
  return *(unsigned int *)(*(_QWORD *)a1 + 36);
}

uint64_t sub_1002D41D0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(*(_QWORD *)a1 + 40);
  if (!result)
    return *(_QWORD *)(qword_10042EA20 + 40);
  return result;
}

uint64_t sub_1002D41F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(*(_QWORD *)a1 + 48);
  if (!result)
    return *(_QWORD *)(qword_10042EA20 + 48);
  return result;
}

uint64_t sub_1002D4218(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(*(_QWORD *)a1 + 64);
  if (!result)
    return *(_QWORD *)(qword_10042EA20 + 64);
  return result;
}

uint64_t sub_1002D423C(wireless_diagnostics::google::protobuf::MessageLite **a1, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2)
{
  unsigned int v4;
  uint64_t result;
  _BYTE v6[24];
  std::runtime_error v7;

  v4 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageLite *))(*(_QWORD *)*a1 + 72))(*a1);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, v4);
  result = wireless_diagnostics::google::protobuf::MessageLite::SerializeToCodedStream(*a1, a2);
  if ((result & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v7, "Failed to seralize map to output stream");
    sub_10018D04C((uint64_t)v6);
    sub_10023643C(&v7, (uint64_t)"void purpleslam::ApRssiMap::SerializeToCodedStream(google::protobuf::io::CodedOutputStream *) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 446, (uint64_t)v6);
  }
  return result;
}

void sub_1002D42F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, std::runtime_error a13)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a13);
  _Unwind_Resume(a1);
}

void sub_1002D4318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::runtime_error a13)
{
  void *v13;

  std::runtime_error::~runtime_error(&a13);
  __cxa_free_exception(v13);
  _Unwind_Resume(a1);
}

void sub_1002D4334(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002D4348(_DWORD *a1, uint64_t a2)
{
  sub_100178D5C(a2, a1);
  operator new();
}

void sub_1002D443C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)va);
  sub_1000E095C(v4);
  v6 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v3 + 8) = 0;
  if (v6)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    sub_100068888((int *)v3);
    _Unwind_Resume(a1);
  }
  sub_100068888((int *)v3);
  _Unwind_Resume(a1);
}

__n128 sub_1002D44CC(_DWORD *a1, __n128 *a2)
{
  _DWORD *v3;
  __n128 result;

  v3 = sub_100178D74(a1);
  *((_QWORD *)v3 + 1) = 0;
  v3[4] = -1;
  result = *a2;
  *(__n128 *)(v3 + 6) = *a2;
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  return result;
}

int *sub_1002D4504(uint64_t a1, uint64_t a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  _DWORD *v7;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  _BYTE v15[24];
  _BYTE v16[28];
  int v17;
  uint64_t v18;
  _BYTE v19[24];
  int __val;
  int v21;
  std::runtime_error v22;
  std::string v23;
  std::string v24;
  std::runtime_error v25;
  int v26;
  void *v27;

  sub_100068AE8(a2, 1, 0x1A4u, &v21);
  wireless_diagnostics::google::protobuf::io::FileOutputStream::FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19, v21, -1);
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1002D4960(a1, (uint64_t)v19);
  }
  else
  {
    v18 = 0;
    v17 = 0;
    while ((*(unsigned int (**)(_QWORD, uint64_t *, int *))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), &v18, &v17))
    {
      v3 = v17;
      if (v17)
      {
        v4 = 0;
        v5 = v18;
        v27 = 0;
        v26 = 0;
        do
        {
          if ((wireless_diagnostics::google::protobuf::io::FileOutputStream::Next((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19, &v27, &v26) & 1) == 0)
          {
            __cxa_allocate_exception(0x40uLL);
            std::to_string(&v23, __val);
            v9 = std::string::insert(&v23, 0, "Failed to get output buffer to save tile data: ");
            v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
            v24.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v10;
            v9->__r_.__value_.__l.__size_ = 0;
            v9->__r_.__value_.__r.__words[2] = 0;
            v9->__r_.__value_.__r.__words[0] = 0;
            std::runtime_error::runtime_error(&v25, &v24);
            sub_10018D04C((uint64_t)&v22);
            sub_10023643C(&v25, (uint64_t)"auto TileDataReader::saveWithoutHeaderTo(const fs::path &)::(anonymous class)::operator()(const void *, int) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 487, (uint64_t)&v22);
          }
          if (v26 >= v3)
            v6 = v3;
          else
            v6 = v26;
          memcpy(v27, (const void *)(v5 + v4), v6);
          wireless_diagnostics::google::protobuf::io::FileOutputStream::BackUp((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19, v26 - v6);
          v4 += v6;
          v3 -= v6;
        }
        while (v3);
      }
    }
    v7 = *(_DWORD **)(a1 + 8);
    if (v7[6])
    {
      __cxa_allocate_exception(0x40uLL);
      std::to_string(&v23, *(_DWORD *)(*(_QWORD *)(a1 + 8) + 24));
      v11 = std::string::insert(&v23, 0, "Failed to read tile data: ");
      v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
      v24.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v12;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v22, &v24);
      sub_10018D04C((uint64_t)v16);
      sub_10023643C(&v22, (uint64_t)"void TileDataReader::saveWithoutHeaderTo(const fs::path &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 510, (uint64_t)v16);
    }
    *(_QWORD *)(a1 + 8) = 0;
    (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
    sub_1000688C0((int *)a1);
    if ((wireless_diagnostics::google::protobuf::io::FileOutputStream::Flush((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::to_string(&v23, __val);
      v13 = std::string::insert(&v23, 0, "Failed to write tile data: ");
      v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
      v24.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v14;
      v13->__r_.__value_.__l.__size_ = 0;
      v13->__r_.__value_.__r.__words[2] = 0;
      v13->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v22, &v24);
      sub_10018D04C((uint64_t)v15);
      sub_10023643C(&v22, (uint64_t)"void TileDataReader::saveWithoutHeaderTo(const fs::path &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 518, (uint64_t)v15);
    }
  }
  wireless_diagnostics::google::protobuf::io::FileOutputStream::~FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19);
  return sub_100068888(&v21);
}

void sub_1002D4820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,std::runtime_error a30)
{
  uint64_t v30;

  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a30);
  if (*(char *)(v30 - 89) < 0)
    operator delete(*(void **)(v30 - 112));
  if (*(char *)(v30 - 113) < 0)
    operator delete(*(void **)(v30 - 136));
  wireless_diagnostics::google::protobuf::io::FileOutputStream::~FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)&a18);
  sub_100068888(&a29);
  _Unwind_Resume(a1);
}

void sub_1002D4960(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  int v7;
  void *v8;
  int v9;
  char *v10;
  int v11;
  _DWORD *v12;
  std::string *v13;
  __int128 v14;
  _BYTE v15[24];
  _BYTE v16[24];
  wireless_diagnostics::google::protobuf::MessageLite *v17;
  std::__shared_weak_count *v18;
  std::string __dst;
  char v20;
  int v21;
  void *__p[2];
  std::runtime_error v23;
  char v24;
  std::string v25;
  std::string v26;

  if (*(_QWORD *)(a1 + 24))
  {
    v21 = 0;
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::CodedOutputStream(&__dst);
    while ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a1 + 24) + 24))(*(_QWORD *)(a1 + 24)))
    {
      (*(void (**)(wireless_diagnostics::google::protobuf::MessageLite **__return_ptr))(**(_QWORD **)(a1 + 24)
                                                                                                 + 32))(&v17);
      sub_1002D423C(&v17, (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)&__dst);
      if (v20)
      {
        sub_1000D5048(&v23, "");
        sub_1002C0690("Trouble saving map ", &v25);
        sub_10026A3D8(&v21, &v26);
        sub_100174738((uint64_t)&v23, (uint64_t)&v25, 2);
        if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v26.__r_.__value_.__l.__data_);
          if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_15;
LABEL_12:
          if (v24 < 0)
LABEL_16:
            operator delete(v23.__vftable);
        }
        else
        {
          if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_12;
LABEL_15:
          operator delete(v25.__r_.__value_.__l.__data_);
          if (v24 < 0)
            goto LABEL_16;
        }
        sub_1000F2AE4((uint64_t)__p);
      }
      ++v21;
      v4 = v18;
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v6 = __ldaxr(p_shared_owners);
        while (__stlxr(v6 - 1, p_shared_owners));
        if (!v6)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
      }
    }
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::~CodedOutputStream((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)&__dst);
  }
  else
  {
    __p[0] = 0;
    LODWORD(v17) = 0;
    if ((*(unsigned int (**)(_QWORD, void **, wireless_diagnostics::google::protobuf::MessageLite **))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), __p, &v17))
    {
      do
      {
        __dst.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v23.__vftable) = 0;
        v7 = (int)v17;
        if ((_DWORD)v17)
        {
          v8 = 0;
          v9 = 0;
          v10 = (char *)__p[0];
          do
          {
            if (!v9)
            {
              if (!(*(unsigned int (**)(uint64_t, std::string *, std::runtime_error *))(*(_QWORD *)a2 + 16))(a2, &__dst, &v23))
              {
                __cxa_allocate_exception(0x40uLL);
                std::runtime_error::runtime_error((std::runtime_error *)&v25, "Failed get output buffer for serialization");
                sub_10018D04C((uint64_t)v16);
                sub_10023643C((std::runtime_error *)&v25, (uint64_t)"void TileDataReader::SerializeToZeroCopyStream(google::protobuf::io::ZeroCopyOutputStream *)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 577, (uint64_t)v16);
              }
              v9 = (int)v23.__vftable;
              v7 = (int)v17;
              v8 = (void *)__dst.__r_.__value_.__r.__words[0];
            }
            if (v9 >= v7)
              v11 = v7;
            else
              v11 = v9;
            memcpy(v8, v10, v11);
            v10 += v11;
            v8 = (void *)(__dst.__r_.__value_.__r.__words[0] + v11);
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
            v9 = LODWORD(v23.__vftable) - v11;
            LODWORD(v23.__vftable) -= v11;
            v7 = (_DWORD)v17 - v11;
            LODWORD(v17) = v7;
          }
          while (v7);
        }
        (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
      }
      while (((*(uint64_t (**)(_QWORD, void **, wireless_diagnostics::google::protobuf::MessageLite **))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), __p, &v17) & 1) != 0);
    }
    v12 = *(_DWORD **)(a1 + 8);
    if (v12[6])
    {
      __cxa_allocate_exception(0x40uLL);
      std::to_string(&__dst, *(_DWORD *)(*(_QWORD *)(a1 + 8) + 24));
      v13 = std::string::insert(&__dst, 0, "Failed serialize. errno=");
      v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
      v25.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v14;
      v13->__r_.__value_.__l.__size_ = 0;
      v13->__r_.__value_.__r.__words[2] = 0;
      v13->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v23, &v25);
      sub_10018D04C((uint64_t)v15);
      sub_10023643C(&v23, (uint64_t)"void TileDataReader::SerializeToZeroCopyStream(google::protobuf::io::ZeroCopyOutputStream *)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 593, (uint64_t)v15);
    }
    *(_QWORD *)(a1 + 8) = 0;
    (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 8))(v12);
    sub_1000688C0((int *)a1);
  }
}

void sub_1002D4D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,std::runtime_error a32,int a33,__int16 a34,char a35,char a36)
{
  if (a31 < 0)
    operator delete(__p);
  sub_1000E095C((uint64_t)&a16);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::~CodedOutputStream((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)&a18);
  _Unwind_Resume(a1);
}

void sub_1002D4E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::~CodedOutputStream((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D4EB4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  if (v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  else
    return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1002D4ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(a1 + 56) = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = off_100402BC0;
  *(_QWORD *)(a1 + 16) = off_100402BF8;
  *(_QWORD *)(a1 + 56) = &off_100402C30;
  return a1;
}

void sub_1002D4F70(_Unwind_Exception *a1)
{
  std::underflow_error *v1;

  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_1002D4F84(std::underflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(this);
}

void sub_1002D4FD4()
{
  operator new();
}

void sub_1002D51EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1000EFE2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002D5210(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_1002D522C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1002D5240(std::underflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(this);
}

void sub_1002D5290(std::underflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(this);
  operator delete();
}

void sub_1002D52F4()
{
  operator new();
}

void sub_1002D53D0()
{
  std::underflow_error *v0;

  std::underflow_error::~underflow_error(v0);
  operator delete();
}

void sub_1002D540C(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002D4ED4((uint64_t)exception, a1);
}

void sub_1002D5448(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002D545C(std::underflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(a1 - 1);
}

void sub_1002D54AC(std::underflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(a1 - 1);
  operator delete();
}

void sub_1002D5510()
{
  sub_1002D52F4();
}

void sub_1002D5520(_QWORD *a1)
{
  uint64_t v1;
  void *exception;

  v1 = (uint64_t)a1 + *(_QWORD *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002D4ED4((uint64_t)exception, v1);
}

void sub_1002D5564(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002D5578(_QWORD *a1)
{
  std::underflow_error *v1;
  const char *imp;

  v1 = (std::underflow_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    v1[1].__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(v1);
}

void sub_1002D55D0(_QWORD *a1)
{
  std::underflow_error *v1;
  const char *imp;

  v1 = (std::underflow_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(v1);
  operator delete();
}

void sub_1002D563C(std::underflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(this);
  operator delete();
}

void sub_1002D56A0(std::underflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(a1 - 1);
}

void sub_1002D56F0(std::underflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(a1 - 1);
  operator delete();
}

uint64_t sub_1002D5754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(a1 + 56) = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&off_1004009A0;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = off_100402CB0;
  *(_QWORD *)(a1 + 16) = off_100402CE8;
  *(_QWORD *)(a1 + 56) = &off_100402D20;
  return a1;
}

void sub_1002D57E8(_Unwind_Exception *a1)
{
  std::runtime_error *v1;

  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_1002D57FC(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_1002D584C()
{
  operator new();
}

void sub_1002D5A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1000EFE2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002D5A88(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_1002D5AA4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1002D5AB8(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_1002D5B08(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);
  operator delete();
}

void sub_1002D5B6C()
{
  operator new();
}

void sub_1002D5C40()
{
  std::runtime_error *v0;

  std::runtime_error::~runtime_error(v0);
  operator delete();
}

void sub_1002D5C7C(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002D5754((uint64_t)exception, a1);
}

void sub_1002D5CB8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002D5CCC(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_1002D5D1C(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);
  operator delete();
}

void sub_1002D5D80()
{
  sub_1002D5B6C();
}

void sub_1002D5D90(_QWORD *a1)
{
  uint64_t v1;
  void *exception;

  v1 = (uint64_t)a1 + *(_QWORD *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002D5754((uint64_t)exception, v1);
}

void sub_1002D5DD4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002D5DE8(_QWORD *a1)
{
  std::runtime_error *v1;
  const char *imp;

  v1 = (std::runtime_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    v1[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(v1);
}

void sub_1002D5E40(_QWORD *a1)
{
  std::runtime_error *v1;
  const char *imp;

  v1 = (std::runtime_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);
  operator delete();
}

void sub_1002D5EAC(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);
  operator delete();
}

void sub_1002D5F10(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_1002D5F60(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);
  operator delete();
}

void sub_1002D5FC4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100402D98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002D5FD4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100402D98;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1002D6004(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  __int128 v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  _QWORD *v20;
  _QWORD *v21;

  v3 = (a1[1] - *a1) >> 5;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59)
    sub_1000D02C0();
  v6 = a1[2] - *a1;
  if (v6 >> 4 > v4)
    v4 = v6 >> 4;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFE0)
    v7 = 0x7FFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  if (v7)
  {
    if (v7 >> 59)
      sub_1000CDEB8();
    v8 = (char *)operator new(32 * v7);
  }
  else
  {
    v8 = 0;
  }
  v9 = sub_10009558C((uint64_t)&v8[32 * v3], a2);
  v10 = &v8[32 * v7];
  v11 = v9 + 32;
  v13 = (_DWORD *)*a1;
  v12 = (_DWORD *)a1[1];
  if (v12 == (_DWORD *)*a1)
  {
    *a1 = v9;
    a1[1] = v11;
    a1[2] = (uint64_t)v10;
    if (!v12)
      return v11;
    goto LABEL_18;
  }
  v14 = a1[1];
  do
  {
    v19 = *(_DWORD *)(v14 - 32);
    v14 -= 32;
    v17 = v19;
    v20 = (_QWORD *)(v9 - 24);
    v21 = (_QWORD *)(v14 + 8);
    if (v19 == v19 >> 31)
    {
      *v20 = *v21;
      v16 = v17;
    }
    else
    {
      v15 = *(_OWORD *)v21;
      *(_DWORD *)(v9 - 8) = *(_DWORD *)(v14 + 24);
      *(_OWORD *)v20 = v15;
      v16 = *(v12 - 8);
      v17 = v16 >> 31;
    }
    v18 = v9 - 32;
    *(_DWORD *)(v9 - 32) = v16 ^ v17;
    v12 = (_DWORD *)v14;
    v9 -= 32;
  }
  while ((_DWORD *)v14 != v13);
  v12 = (_DWORD *)*a1;
  *a1 = v18;
  a1[1] = v11;
  a1[2] = (uint64_t)v10;
  if (v12)
LABEL_18:
    operator delete(v12);
  return v11;
}

void sub_1002D614C(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D6164(_QWORD *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t i;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  void (**v13)(char *);
  BOOL v14;
  uint64_t v16;
  __int128 v17;

  v2 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[1] - *a1) >> 3);
  v3 = v2 + 1;
  if (v2 + 1 > 0x666666666666666)
    sub_1000D02C0();
  if (0x999999999999999ALL * ((uint64_t)(a1[2] - *a1) >> 3) > v3)
    v3 = 0x999999999999999ALL * ((uint64_t)(a1[2] - *a1) >> 3);
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[2] - *a1) >> 3) >= 0x333333333333333)
    v4 = 0x666666666666666;
  else
    v4 = v3;
  if (v4)
  {
    if (v4 > 0x666666666666666)
      sub_1000CDEB8();
    v5 = (char *)operator new(40 * v4);
  }
  else
  {
    v5 = 0;
  }
  v16 = (uint64_t)&v5[40 * v2];
  *((_QWORD *)&v17 + 1) = &v5[40 * v4];
  sub_1000C4498(v16);
  v6 = 0;
  v8 = (char *)*a1;
  for (i = a1[1]; (char *)(i + v6) != v8; sub_100094A58(v6 + v16, v6 + i))
    v6 -= 40;
  v10 = (char *)*a1;
  v9 = (char *)a1[1];
  *a1 = v16 + v6;
  *(_QWORD *)&v17 = v16 + 40;
  *(_OWORD *)(a1 + 1) = v17;
  if (v9 != v10)
  {
    v11 = v9 - 40;
    v12 = v9 - 40;
    do
    {
      v13 = *(void (***)(char *))v12;
      v12 -= 40;
      (*v13)(v11);
      v14 = v11 == v10;
      v11 = v12;
    }
    while (!v14);
  }
  if (v10)
    operator delete(v10);
  return v16 + 40;
}

void sub_1002D62CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1002D6318((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D6318(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void (**v4)(void);

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = *(void (***)(void))(i - 40);
    *(_QWORD *)(a1 + 16) = i - 40;
    (*v4)();
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_1002D636C(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t i;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  void (**v15)(char *);
  BOOL v16;
  uint64_t v18;
  __int128 v19;

  v3 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x666666666666666)
    sub_1000D02C0();
  if (0x999999999999999ALL * ((uint64_t)(a1[2] - *a1) >> 3) > v4)
    v4 = 0x999999999999999ALL * ((uint64_t)(a1[2] - *a1) >> 3);
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[2] - *a1) >> 3) >= 0x333333333333333)
    v6 = 0x666666666666666;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x666666666666666)
      sub_1000CDEB8();
    v7 = (char *)operator new(40 * v6);
  }
  else
  {
    v7 = 0;
  }
  v18 = (uint64_t)&v7[40 * v3];
  *((_QWORD *)&v19 + 1) = &v7[40 * v6];
  sub_100094A58(v18, a2);
  v8 = 0;
  v10 = (char *)*a1;
  for (i = a1[1]; (char *)(i + v8) != v10; sub_100094A58(v8 + v18, v8 + i))
    v8 -= 40;
  v12 = (char *)*a1;
  v11 = (char *)a1[1];
  *a1 = v18 + v8;
  *(_QWORD *)&v19 = v18 + 40;
  *(_OWORD *)(a1 + 1) = v19;
  if (v11 != v12)
  {
    v13 = v11 - 40;
    v14 = v11 - 40;
    do
    {
      v15 = *(void (***)(char *))v14;
      v14 -= 40;
      (*v15)(v13);
      v16 = v13 == v12;
      v13 = v14;
    }
    while (!v16);
  }
  if (v12)
    operator delete(v12);
  return v18 + 40;
}

void sub_1002D64DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1002D6318((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1002D6528(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  int8x8_t v6;
  uint8x8_t v7;
  unint64_t v8;
  uint64_t *v10;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v20;
  unint64_t v21;
  BOOL v22;
  char v24;
  char *v25;

  v25 = &v24;
  v4 = a2 + 8;
  if (*(_DWORD *)a2 != *(int *)a2 >> 31)
  {
    v5 = sub_10022CC84((uint64_t)&v25, (unsigned __int8 *)(a2 + 8));
    v6 = (int8x8_t)a1[1];
    if (v6)
      goto LABEL_3;
    return 0;
  }
  v5 = *(_QWORD *)v4;
  v6 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v6)
    return 0;
LABEL_3:
  v7 = (uint8x8_t)vcnt_s8(v6);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    v8 = v5;
    if (v5 >= *(_QWORD *)&v6)
      v8 = v5 % *(_QWORD *)&v6;
  }
  else
  {
    v8 = (*(_QWORD *)&v6 - 1) & v5;
  }
  v10 = *(uint64_t **)(*a1 + 8 * v8);
  if (!v10)
    return v10;
  v10 = (uint64_t *)*v10;
  if (!v10)
    return v10;
  v11 = *(_DWORD *)a2;
  v12 = (v11 >> 31) ^ v11;
  v13 = v11 >> 31 == v11;
  v14 = *(_QWORD *)(a2 + 8);
  if (v7.u32[0] <= 1uLL)
  {
    v15 = *(_QWORD *)&v6 - 1;
    if (v13)
    {
      while (1)
      {
        v16 = v10[1];
        if (v5 == v16)
        {
          if ((*((_DWORD *)v10 + 4) ^ (*((int *)v10 + 4) >> 31)) == v12 && v10[3] == v14)
            return v10;
        }
        else if ((v16 & v15) != v8)
        {
          return 0;
        }
        v10 = (uint64_t *)*v10;
        if (!v10)
          return v10;
      }
    }
    while (1)
    {
      v17 = v10[1];
      if (v5 == v17)
      {
        if ((*((_DWORD *)v10 + 4) ^ (*((int *)v10 + 4) >> 31)) == v12)
        {
          v18 = v10[3] == *(_QWORD *)v4 && v10[4] == *(_QWORD *)(v4 + 8);
          if (v18 && *((_DWORD *)v10 + 10) == (unint64_t)*(unsigned int *)(v4 + 16))
            return v10;
        }
      }
      else if ((v17 & v15) != v8)
      {
        return 0;
      }
      v10 = (uint64_t *)*v10;
      if (!v10)
        return v10;
    }
  }
  if (v13)
  {
    while (1)
    {
      v20 = v10[1];
      if (v5 == v20)
      {
        if ((*((_DWORD *)v10 + 4) ^ (*((int *)v10 + 4) >> 31)) == v12 && v10[3] == v14)
          return v10;
      }
      else
      {
        if (v20 >= *(_QWORD *)&v6)
          v20 %= *(_QWORD *)&v6;
        if (v20 != v8)
          return 0;
      }
      v10 = (uint64_t *)*v10;
      if (!v10)
        return v10;
    }
  }
  while (1)
  {
    v21 = v10[1];
    if (v5 != v21)
      break;
    if ((*((_DWORD *)v10 + 4) ^ (*((int *)v10 + 4) >> 31)) == v12)
    {
      v22 = v10[3] == *(_QWORD *)v4 && v10[4] == *(_QWORD *)(v4 + 8);
      if (v22 && *((_DWORD *)v10 + 10) == (unint64_t)*(unsigned int *)(v4 + 16))
        return v10;
    }
LABEL_44:
    v10 = (uint64_t *)*v10;
    if (!v10)
      return v10;
  }
  if (v21 >= *(_QWORD *)&v6)
    v21 %= *(_QWORD *)&v6;
  if (v21 == v8)
    goto LABEL_44;
  return 0;
}

void sub_1002D6794(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100402DE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002D67A4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100402DE8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1002D67D4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002D6830()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002D688C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  int v8;
  signed int v9;
  uint64_t *v10;
  uint64_t *v11;
  double v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  double v32[4];
  _BYTE v33[8];
  double v34;
  double v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  void *__p;
  uint64_t *v40;
  int32x2_t v41;
  std::__shared_weak_count *v42;

  (*(void (**)(int32x2_t *__return_ptr, double, double))(*(_QWORD *)a1 + 24))(&v41, *(double *)(a2 + 8), *(double *)(a2 + 16));
  v8 = vcvtpd_s64_f64(a4 / sub_10015C910((uint64_t)&v41));
  if (v8 >= 1)
  {
    v9 = 1;
    do
    {
      *(_QWORD *)a3 = off_1003F9A68;
      *(_QWORD *)(a3 + 8) = 0;
      *(_QWORD *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 24) &= 0xFCu;
      sub_10015D250(&v41, v9, (uint64_t)&__p);
      v11 = (uint64_t *)__p;
      v10 = v40;
      v12 = 1.79769313e308;
      if (__p == v40)
      {
        if (!__p)
          goto LABEL_5;
      }
      else
      {
        do
        {
          v13 = v11[1];
          v36 = *v11;
          v37 = (std::__shared_weak_count *)v13;
          if (v13)
          {
            v14 = (unint64_t *)(v13 + 8);
            do
              v15 = __ldxr(v14);
            while (__stxr(v15 + 1, v14));
          }
          v38 = v11[2];
          v32[0] = sub_10015C9DC(&v36);
          v32[1] = v16;
          v32[2] = v17;
          v32[3] = v18;
          sub_100303C44(v32, (uint64_t (***)())a2, (uint64_t)v33, 0.01);
          if ((*(unsigned __int8 (**)(uint64_t, double, double))(*(_QWORD *)a1 + 16))(a1, v34, v35))
          {
            v19 = hypot(v34 - *(double *)(a2 + 8), v35 - *(double *)(a2 + 16));
            if (v12 > v19)
            {
              v20 = v19;
              sub_100077D9C(a3, (uint64_t)v33);
              v12 = v20;
            }
          }
          nullsub_23(v33);
          v21 = v37;
          if (v37)
          {
            p_shared_owners = (unint64_t *)&v37->__shared_owners_;
            do
              v23 = __ldaxr(p_shared_owners);
            while (__stlxr(v23 - 1, p_shared_owners));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
              std::__shared_weak_count::__release_weak(v21);
            }
          }
          v11 += 3;
        }
        while (v11 != v10);
        v11 = (uint64_t *)__p;
        if (!__p)
        {
LABEL_5:
          if (v12 <= a4)
            goto LABEL_33;
          goto LABEL_30;
        }
      }
      v24 = v40;
      if (v40 == v11)
      {
        v40 = v11;
        operator delete(v11);
        if (v12 <= a4)
          goto LABEL_33;
      }
      else
      {
        do
        {
          v25 = (std::__shared_weak_count *)*(v24 - 2);
          if (v25)
          {
            v26 = (unint64_t *)&v25->__shared_owners_;
            do
              v27 = __ldaxr(v26);
            while (__stlxr(v27 - 1, v26));
            if (!v27)
            {
              ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
              std::__shared_weak_count::__release_weak(v25);
            }
          }
          v24 -= 3;
        }
        while (v24 != v11);
        v40 = v11;
        operator delete(__p);
        if (v12 <= a4)
          goto LABEL_33;
      }
LABEL_30:
      nullsub_23(a3);
    }
    while (v9++ != v8);
  }
  *(_QWORD *)a3 = off_1003F9A68;
  *(_BYTE *)(a3 + 24) &= 0xFCu;
  *(int64x2_t *)(a3 + 8) = vdupq_n_s64(0x7FF4000000000000uLL);
LABEL_33:
  v29 = v42;
  if (v42)
  {
    v30 = (unint64_t *)&v42->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
}

void sub_1002D6B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002D6B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  nullsub_23(v15);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002D6B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  va_list va2;
  uint64_t v18;
  uint64_t v19;
  va_list va3;

  va_start(va3, a5);
  va_start(va2, a5);
  va_start(va1, a5);
  va_start(va, a5);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v12 = va_arg(va2, _QWORD);
  v14 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v16 = va_arg(va3, void *);
  v18 = va_arg(va3, _QWORD);
  v19 = va_arg(va3, _QWORD);
  nullsub_23((uint64_t *)va);
  sub_1000E095C((uint64_t)va1);
  sub_10015D1B8((void **)va2);
  nullsub_23(v5);
  sub_1000E095C((uint64_t)va3);
  _Unwind_Resume(a1);
}

BOOL sub_1002D6BD4(uint64_t a1, int a2, int a3, int a4, int a5)
{
  BOOL v7;
  int v10;
  int v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  char v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  BOOL v28;
  int v29;
  int v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  long double v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  double v40[12];

  if (a2 <= a3 && a4 <= a5)
  {
    v10 = a2;
    v7 = 0;
    while (1)
    {
      v12 = a4;
      do
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 40))(&v39, a1);
        sub_1000700CC((uint64_t)v40, &v37);
        if ((_BYTE)v39)
          nullsub_25(v40);
        v31 = v37;
        v32 = v38;
        if (v38)
        {
          p_shared_owners = (unint64_t *)&v38->__shared_owners_;
          do
            v14 = __ldxr(p_shared_owners);
          while (__stxr(v14 + 1, p_shared_owners));
        }
        v29 = v12;
        v30 = v10;
        sub_100071CC8((uint64_t)&v33, &v31, &v30, &v29);
        sub_10015C91C(&v33, (uint64_t)&v35);
        sub_10006FD04(&v35, (uint64_t)&v39);
        v15 = v36;
        if (!v36)
          goto LABEL_16;
        v16 = (unint64_t *)&v36->__shared_owners_;
        do
          v17 = __ldaxr(v16);
        while (__stlxr(v17 - 1, v16));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
          v18 = v34;
          if (!v34)
            goto LABEL_22;
        }
        else
        {
LABEL_16:
          v18 = v34;
          if (!v34)
            goto LABEL_22;
        }
        v19 = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldaxr(v19);
        while (__stlxr(v20 - 1, v19));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
LABEL_22:
        v21 = v32;
        if (v32)
        {
          v22 = (unint64_t *)&v32->__shared_owners_;
          do
            v23 = __ldaxr(v22);
          while (__stlxr(v23 - 1, v22));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        v24 = (*(uint64_t (**)(uint64_t, double, double))(*(_QWORD *)a1 + 16))(a1, v40[0], v40[1]);
        nullsub_23(&v39);
        v25 = v38;
        if (v38)
        {
          v26 = (unint64_t *)&v38->__shared_owners_;
          do
            v27 = __ldaxr(v26);
          while (__stlxr(v27 - 1, v26));
          if (!v27)
          {
            ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
            std::__shared_weak_count::__release_weak(v25);
          }
        }
        if (!v24)
          return v7;
        v28 = v12++ == a5;
      }
      while (!v28);
      v28 = v10 == a3;
      v7 = v10++ >= a3;
      if (v28)
        return v7;
    }
  }
  return 1;
}

void sub_1002D6E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v13;
  va_list va;
  uint64_t v15;
  va_list va1;

  va_start(va1, a12);
  va_start(va, a12);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  nullsub_23(va1);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002D6E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  v9 = va_arg(va2, _QWORD);
  v10 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v11 = va_arg(va3, _QWORD);
  v13 = va_arg(va3, _QWORD);
  v14 = va_arg(va3, _QWORD);
  v15 = va_arg(va3, _QWORD);
  sub_1000E095C((uint64_t)va2);
  sub_1000E095C((uint64_t)va1);
  sub_1000E095C((uint64_t)va);
  sub_1000E095C((uint64_t)va3);
  _Unwind_Resume(a1);
}

void sub_1002D6E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_1000E095C((uint64_t)va);
  sub_1000E095C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1002D6EA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  uint64_t v22;

  if (a22)
  {
    nullsub_25(v22);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D6ECC(uint64_t a1, uint64_t a2)
{
  __int16 v4;
  _BOOL8 v5;
  int v6;
  int v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  int v14;
  int v15;

  v4 = (*(uint64_t (**)(uint64_t, double, double))(*(_QWORD *)a1 + 16))(a1, *(double *)(a2 + 8), *(double *)(a2 + 16));
  if ((v4 & 0x100) == 0)
    return 1;
  if ((v4 & 1) == 0)
    return 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 40))(&v12, a1);
  v6 = v14;
  if ((_BYTE)v12)
    nullsub_25(&v13);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 40))(&v12, a1);
  v7 = v15;
  if ((_BYTE)v12)
    nullsub_25(&v13);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, double, double))(*(_QWORD *)a1 + 24))(&v12, a1, *(double *)(a2 + 8), *(double *)(a2 + 16));
  if (sub_1002D6BD4(a1, 0, v14, v15, v15)
    || sub_1002D6BD4(a1, v14, v7 - 1, v15, v15)
    || sub_1002D6BD4(a1, v14, v14, 0, v15))
  {
    v5 = 1;
    v8 = v13;
    if (!v13)
      return v5;
  }
  else
  {
    v5 = sub_1002D6BD4(a1, v14, v14, v15, v6 - 1);
    v8 = v13;
    if (!v13)
      return v5;
  }
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  return v5;
}

void sub_1002D706C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000E095C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1002D7084@<D0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[96];

  v3 = *(_QWORD *)(a1 + 24);
  if (!v3)
    v3 = *(_QWORD *)(qword_10042EA58 + 16);
  sub_10006FE14(v3, (uint64_t)v5);
  *a2 = 0;
  sub_1001A292C((uint64_t)(a2 + 8), (uint64_t)v5);
  *a2 = 1;
  *(_QWORD *)&result = nullsub_25(v5).n128_u64[0];
  return result;
}

void sub_1002D70E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_25(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_1002D70FC(uint64_t a1)
{
  return (*(_BYTE *)(a1 + 48) & 4) == 0 || *(_DWORD *)(a1 + 40) == 1;
}

uint64_t sub_1002D711C(uint64_t a1, double a2, double a3)
{
  int v4;
  int v6;
  uint64_t **v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  double v11;
  double v12;

  v11 = 0.0;
  v12 = 0.0;
  sub_100304644(*(_QWORD *)(a1 + 56), &v12, &v11, a2, a3);
  v9 = vcvtmd_s64_f64(v11 + 0.5);
  v10 = vcvtmd_s64_f64(v12 + 0.5);
  v4 = sub_10030334C((_DWORD *)(a1 + 72), (int *)&v10, (int *)&v9);
  if (v4 == -1)
    return 0;
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 7;
  v7 = *(uint64_t ***)(a1 + 32);
  v8 = (uint64_t)v6 >> 3;
  if (*((char *)v7 + 23) < 0)
    v7 = (uint64_t **)*v7;
  return (*((unsigned __int8 *)v7 + v8) >> (v4 & 7)) & 1 | 0x100u;
}

void sub_1002D71E8(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _DWORD *v10;
  int v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unsigned int v17;
  unsigned int v18;
  double v19;
  double v20;

  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(std::__shared_weak_count **)(a1 + 64);
  v15 = v6;
  v16 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v6 = *(_QWORD *)(a1 + 56);
  }
  v20 = 0.0;
  v19 = 0.0;
  sub_100304644(v6, &v20, &v19, a3, a4);
  v10 = (_DWORD *)(a1 + 72);
  v17 = vcvtmd_s64_f64(v19 + 0.5);
  v18 = vcvtmd_s64_f64(v20 + 0.5);
  v11 = sub_10030334C(v10, (int *)&v18, (int *)&v17);
  sub_10015C8A0(a2, &v15, (uint64_t)v10, v11);
  v12 = v16;
  if (v16)
  {
    v13 = (unint64_t *)&v16->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_1002D72DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_1002D72F0(uint64_t a1)
{
  return sub_10006F854(*(double **)(a1 + 56));
}

uint64_t sub_1002D72F8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  int v16;
  int v17;
  int v18;
  double v20;
  long double v21;
  double v22;
  int v23;
  BOOL v24;
  double v25;
  double v26;
  int v27;
  int v28;
  double v30;
  int v31;
  double v32;
  char v33;
  int v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v40;
  double v41;
  double v42;
  unsigned int v43;
  unsigned int v44;
  double v45;
  double v46;

  if ((((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1) & 1) != 0 || !*(_BYTE *)(a4 + 36))
    && *(_BYTE *)(a2 + 49))
  {
    goto LABEL_17;
  }
  v45 = 0.0;
  v46 = 0.0;
  sub_100304644(*(_QWORD *)(a1 + 56), &v46, &v45, a5, a6);
  v43 = vcvtmd_s64_f64(v45 + 0.5);
  v44 = vcvtmd_s64_f64(v46 + 0.5);
  v16 = sub_10030334C((_DWORD *)(a1 + 72), (int *)&v44, (int *)&v43);
  v45 = 0.0;
  v46 = 0.0;
  sub_100304644(*(_QWORD *)(a1 + 56), &v46, &v45, a7, a8);
  v43 = vcvtmd_s64_f64(v45 + 0.5);
  v44 = vcvtmd_s64_f64(v46 + 0.5);
  v17 = sub_10030334C((_DWORD *)(a1 + 72), (int *)&v44, (int *)&v43);
  if (v16 == -1)
    goto LABEL_16;
  v18 = v17;
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a2 + 56) + 72))(*(_QWORD *)(a2 + 56)) == 1 && v18 == -1)
    goto LABEL_16;
  if (v16 == v18)
    goto LABEL_17;
  v20 = a8 - a6;
  v21 = hypot(a7 - a5, a8 - a6);
  v22 = *(double *)(*(_QWORD *)(a1 + 56) + 64);
  v41 = v21;
  v23 = vcvtpd_s64_f64(v21 * *(float *)(a4 + 32) / v22);
  v24 = ((*(uint64_t (**)(uint64_t, double, double))(*(_QWORD *)a1 + 16))(a1, a5, a6) & 1) == 0;
  v42 = a7 - a5;
  if (v23 < 1)
  {
LABEL_14:
    if (v24)
      goto LABEL_15;
LABEL_17:
    *(double *)(a2 + 16) = a7;
    *(double *)(a2 + 24) = a8;
LABEL_18:
    v27 = 1;
    v28 = 1;
    return v28 | (v27 << 8);
  }
  v25 = (a7 - a5) / (double)v23;
  v26 = v20 / (double)v23;
  while (!v24)
  {
    a5 = v25 + a5;
    a6 = v26 + a6;
    v24 = ((*(uint64_t (**)(uint64_t, double, double))(*(_QWORD *)a1 + 16))(a1, a5, a6) & 1) == 0;
    if (!--v23)
      goto LABEL_14;
  }
LABEL_15:
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a2 + 56) + 72))(*(_QWORD *)(a2 + 56)) != 1)
  {
    if (*(int *)(a4 + 24) < 1)
    {
LABEL_31:
      v40 = (*(double (**)(_QWORD, double, double))(*(_QWORD *)*a3 + 24))(*a3, (float)-*(float *)(a4 + 28), *(float *)(a4 + 28));
      v28 = 0;
      *(double *)(a2 + 32) = v40 + *(double *)(a2 + 32);
      v27 = 1;
      return v28 | (v27 << 8);
    }
    v30 = -v20 / v41;
    v31 = 1;
    v32 = v42 / v41;
    while (1)
    {
      v33 = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)*a3 + 80))(*a3, 2);
      v34 = (v33 & 1) != 0 ? 1 : -1;
      v35 = v22 * (double)(v34 * v31);
      v36 = a5 + v30 * v35;
      v37 = a6 + v32 * v35;
      if (((*(uint64_t (**)(uint64_t, double, double))(*(_QWORD *)a1 + 16))(a1, v36, v37) & 1) != 0)
        break;
      v34 = (v33 & 1) != 0 ? -1 : 1;
      v38 = v22 * (double)(v34 * v31);
      v36 = a5 + v30 * v38;
      v37 = a6 + v32 * v38;
      if (((*(uint64_t (**)(uint64_t, double, double))(*(_QWORD *)a1 + 16))(a1, v36, v37) & 1) != 0)
        break;
      if (v31++ >= *(_DWORD *)(a4 + 24))
        goto LABEL_31;
    }
    *(double *)(a2 + 32) = *(double *)(a2 + 32)
                         + (*(double (**)(_QWORD, double, double))(*(_QWORD *)*a3 + 24))(*a3, 0.0, *(float *)(a4 + 28))* (double)v34;
    *(double *)(a2 + 16) = v36;
    *(double *)(a2 + 24) = v37;
    goto LABEL_18;
  }
LABEL_16:
  v27 = 0;
  v28 = 0;
  return v28 | (v27 << 8);
}

_QWORD *sub_1002D7698(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_100402E38;
  v2 = (std::__shared_weak_count *)a1[8];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    sub_10004ABA0(a1 + 1);
    return a1;
  }
  else
  {
LABEL_5:
    sub_10004ABA0(a1 + 1);
    return a1;
  }
}

uint64_t sub_1002D771C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002D7778()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002D77D4()
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v0;
  uint64_t v1;
  uint64_t FileByName;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *__p;
  __int128 v7;

  v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_1002D7A18();
  v1 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  __p = operator new(0x19uLL);
  v7 = xmmword_100382C20;
  strcpy((char *)__p, "protobuf/gen/math.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v1, &__p);
  v3 = FileByName;
  if (SHIBYTE(v7) < 0)
  {
    operator delete(__p);
    if (v3)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(&__p, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/math.pb.cc", 39);
  v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(&__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v5, v4);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
LABEL_6:
  qword_10041A110 = *(_QWORD *)(v3 + 80);
  operator new();
}

void sub_1002D79A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002D79B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002D79CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002D7A18(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  int v4;

  if ((byte_10041A100 & 1) == 0)
  {
    byte_10041A100 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/math.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x17protobuf/gen/math.proto\x12\nproto.math\"\x88\x01\n\x10ObservationStats\x12\x15\n\nsumWeights\x18\x01 \x02(\x01:\x010\x12\x0E\n\x03sum\x18\x02 \x02(\x01:\x010\x12\x15\n\nsumSquared\x18\x03 \x02(\x01:\x010\x12\x1C\n\x11sumSquaredWeights\x18\x04 \x02(\x01:\x010\x12\v\n\x03min\x18\x05 \x01(\x01\x12\v\n\x03max\x18\x06 \x01(\x01\"f\n\"LinearSaturationFunctionParameters\x12\x10\n\x05slope\x18\x01 \x01(\x01:\x011\x12\x14\n\tintercept\x18\x02 \x01(\x01:\x010\x12\v\n\x03max\x18\x03 \x01(\x01\x12\v\n\x03min\x18\x04 \x01(\x01B\x1D\n\x1Bcom.apple.indoor.proto.math", (const void *)0x137,
      v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("protobuf/gen/math.proto", sub_1002D7BE4);
    operator new();
  }
}

void sub_1002D7B20()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002D7B48()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002D7B70()
{
  uint64_t result;

  if (qword_10042E9D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042E9D0 + 8))(qword_10042E9D0);
  if (qword_10041A118)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A118 + 8))(qword_10041A118);
  if (qword_10042E9D8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042E9D8 + 8))(qword_10042E9D8);
  result = qword_10041A128;
  if (qword_10041A128)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_10041A128 + 8))(qword_10041A128);
  return result;
}

uint64_t sub_1002D7BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  char v6;

  v0 = qword_10041A130;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v5[1] = sub_1002D77D4;
    v6 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A130, v5);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v5);
  }
  v1 = qword_10041A110;
  if (!qword_10042E9D0)
    ((void (*)(void))sub_1002D7A18)();
  v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  v3 = qword_10041A120;
  if (qword_10042E9D8)
    return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(qword_10041A120);
  sub_1002D7A18(v2);
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
}

void sub_1002D7CAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1002D7CC0(_QWORD *a1)
{
  *a1 = off_100402F60;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[5] = 0;
  a1[6] = 0;
  a1[2] = 0x3FF0000000000000;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1002D7D00(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D7D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/math.pb.cc", 468);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 68);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 68) & 1) != 0)
  {
    v8 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(_QWORD *)(a1 + 16) = v8;
    v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_14;
    }
  }
  else if ((*(_BYTE *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(_QWORD *)(a1 + 24) = v9;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 4u;
  *(_QWORD *)(a1 + 32) = v10;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
LABEL_16:
    v12 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 68) |= 0x10u;
    *(_QWORD *)(a1 + 48) = v12;
    if ((*(_DWORD *)(a2 + 68) & 0x20) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_10;
  }
LABEL_15:
  v11 = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(_QWORD *)(a1 + 40) = v11;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x10) != 0)
    goto LABEL_16;
LABEL_9:
  if ((v5 & 0x20) != 0)
  {
LABEL_10:
    v6 = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(_QWORD *)(a1 + 56) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002D7E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002D7E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002D7E78(uint64_t a1)
{
  *(_QWORD *)a1 = off_100402EB0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1002D7EA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

uint64_t sub_1002D7EB0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10042E9D0;
  if (!qword_10042E9D0)
  {
    sub_1002D7A18(0, a2, a3, a4);
    return qword_10042E9D0;
  }
  return result;
}

void sub_1002D7EE8()
{
  operator new();
}

void sub_1002D7F40()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002D7F68(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 68))
  {
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 15) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002D7F90(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 68);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 68);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
  if ((*(_DWORD *)(v4 + 68) & 0x20) == 0)
  {
LABEL_7:
    v8 = *(_QWORD **)(v4 + 8);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    v6 = v8;
    if (!v8)
      return this;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v4 + 56), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_15:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1002D8088(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)(a2 + 1) = v8;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v9 = *(_QWORD *)(a1 + 32);
  *(_BYTE *)a2 = 25;
  *(_QWORD *)(a2 + 1) = v9;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)a2 = 33;
  *(_QWORD *)(a2 + 1) = v10;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0)
      goto LABEL_7;
LABEL_14:
    v12 = *(_QWORD *)(a1 + 56);
    *(_BYTE *)a2 = 49;
    *(_QWORD *)(a2 + 1) = v12;
    a2 += 9;
    v13 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v13;
    if (!v13)
      return a2;
    goto LABEL_15;
  }
LABEL_13:
  v11 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)a2 = 41;
  *(_QWORD *)(a2 + 1) = v11;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 68) & 0x20) != 0)
    goto LABEL_14;
LABEL_7:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_15:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1002D82C0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;

  v3 = *(unsigned __int8 *)(a1 + 68);
  if (*(_BYTE *)(a1 + 68))
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v4 += 9;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v4 += 9;
    if ((v3 & 0x10) != 0)
      v4 += 9;
    if ((v3 & 0x20) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_14;
  }
  else
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
    {
LABEL_14:
      *(_DWORD *)(a1 + 64) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1])
    goto LABEL_14;
  v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

uint64_t sub_1002D8378(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/math.pb.cc", 456);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002D7D14((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002D842C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002D8440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D8454(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002D849C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A130;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D77D4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A130, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A110;
}

void sub_1002D8510(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1002D8524(uint64_t a1)
{
  *(_QWORD *)a1 = off_100402F60;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1002D8568(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1002D8570()
{
  operator new();
}

void sub_1002D85C8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002D85F0(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 52))
  {
    *(_QWORD *)(a1 + 16) = 0x3FF0000000000000;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 40) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002D8618(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t result;
  unint64_t v14;

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_30;
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 52) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_30;
LABEL_15:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 24) = v14;
        *(_DWORD *)(a1 + 52) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 25)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_20:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 32) = v14;
        *(_DWORD *)(a1 + 52) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 33)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_25:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 40) = v14;
        *(_DWORD *)(a1 + 52) |= 8u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_20;
        goto LABEL_30;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_25;
        goto LABEL_30;
      default:
        v9 = TagFallback & 7;
LABEL_30:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
    return result;
  }
}

uint64_t sub_1002D8874(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 52);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  if ((*(_DWORD *)(v4 + 52) & 8) == 0)
  {
LABEL_5:
    v8 = *(_QWORD **)(v4 + 8);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    v6 = v8;
    if (!v8)
      return this;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_11:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1002D8934(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)(a2 + 1) = v8;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
LABEL_10:
    v10 = *(_QWORD *)(a1 + 40);
    *(_BYTE *)a2 = 33;
    *(_QWORD *)(a2 + 1) = v10;
    a2 += 9;
    v11 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v11;
    if (!v11)
      return a2;
    goto LABEL_11;
  }
LABEL_9:
  v9 = *(_QWORD *)(a1 + 32);
  *(_BYTE *)a2 = 25;
  *(_QWORD *)(a2 + 1) = v9;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 52) & 8) != 0)
    goto LABEL_10;
LABEL_5:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_11:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1002D8ABC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;

  v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(_BYTE *)(a1 + 52))
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v4 += 9;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_10;
  }
  else
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
    {
LABEL_10:
      *(_DWORD *)(a1 + 48) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1])
    goto LABEL_10;
  v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 48) = v9;
  return v9;
}

uint64_t sub_1002D8B5C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/math.pb.cc", 785);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10006F6F8((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002D8C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002D8C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D8C38(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002D8C80()
{
  return 1;
}

uint64_t sub_1002D8C88()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A130;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D77D4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A130, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A120;
}

void sub_1002D8CFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D8D10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_1002D8D18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_1002D8D24(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v4;
  uint64_t v5;
  uint64_t FileByName;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *__p;
  __int128 v11;

  sub_1002D9410(a1, a2, a3, a4);
  v5 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  __p = operator new(0x20uLL);
  v11 = xmmword_1003830B0;
  strcpy((char *)__p, "protobuf/gen/radiomap.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v5, &__p);
  v7 = FileByName;
  if (SHIBYTE(v11) < 0)
  {
    operator delete(__p);
    if (v7)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(&__p, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 68);
  v8 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(&__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v8);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
LABEL_6:
  qword_10041A148 = *(_QWORD *)(v7 + 80);
  operator new();
}

void sub_1002D9380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002D9394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002D93A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002D9410(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  int v8;

  if ((byte_10041A138 & 1) == 0)
  {
    byte_10041A138 = 1;
    v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", a4);
    sub_1002E43C8(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x1Bprotobuf/gen/radiomap.proto\x12\x0Eproto.radiomap\x1A\x18protobuf/gen/venue.proto\"B\n\aAddress\x12*\n\bencoding\x18\x01 \x02(\x0E2\x18.proto.radiomap.ApIdType\x12\v\n\x03uid\x18\x02 \x02(\f\"U\n\x0EFixedPointSpec\x12\x19\n\x11fixedToFloatScale\x18\x01 \x02(\x01\x12\x1A\n\x12fixedToFloatOffset\x18\x02 \x02(\x01\x12\f\n\x04bits\x18\x03 \x02(\r\"}\n\x0ECoarseApParams\x12\x15\n\nweakWeight\x18\x01 \x01(\x02:\x011\x12\x17\n\fstrongWeight\x18\x02 \x01(\x02:\x011\x12\x1B\n\rrssiThreshold\x18\x03 \x01(\x11:\x04-255\x12\x1E\n\x12rssiSmoothingRange\x18\x04 \x01(\x11:\x0210\"\xBF\x01\n\vSurveyPoint\x12\x10\n"
                                                                "\bpowerDbm\x18\x01 \x02(\x01\x129\n"
                                                                "\x04type\x18\x02 \x01(\x0E2+.proto.radiomap.SurveyPoint."
                                                                "SurveyPointType\x12\x10\n"
                                                                "\bsourceId\x18\x03 \x01(\t\"Q\n"
                                                                "\x0FSurveyPointType\x12\n"
                                                                "\n"
                                                                "\x06Survey\x10\x01\x12\x11\n"
                                                                "\rIndoorHarvest\x10\x03\x12\a\n"
                                                                "\x03Als\x10\x04\x12\x16\n"
                                                                "\x12Deprecated_Harvest\x10\x02\"\xD0\x02\n"
                                                                "\x0FCellObservation\x12\x1A\n"
                                                                "\x12surveyPointWeights\x18\x01 \x03(\x01\x12E\n"
                                                                "\x10surveyPointTypes\x18\x02 \x03(\x0E2+.proto.radiomap."
                                                                "SurveyPoint.SurveyPointType\x12\x14\n"
                                                                "\fsourceIdIdxs\x18\x03 \x03(\x05\x12\x11\n"
                                                                "\tpowerDbms\x18\x04 \x03(\x01\x12\x11\n"
                                                                "\tsourceIds\x18\x05 \x03(\t\x12\x11\n"
                                                                "\tisOutlier\x18\x06 \x03(\b\x12\x12\n"
                                                                "\n"
                                                                "clusterIds\x18\b \x03(\x05\x12\x14\n"
                                                                "\ffrequencyMhz\x18\t \x03(\x05\x12\x13\n"
                                                                "\vprobIndoors\x18\n"
                                                                " \x03(\x01\x12\x1B\n"
                                                                "\x13horizontalAccuracys\x18\v \x03(\x01\x12\x16\n"
                                                                "\x0EtimestampNanos\x18\f \x03(\x03\x12\x17\n"
                                                                "\x0FmodeDbmNoReject\x18\a \x01(\x01\"q\n"
                                                                "\x0EApRssiMapDebug\x12(\n"
                                                                "\aaddress\x18\x01 \x02(\v2\x17.proto.radiomap.Address\x12"
                                                                "5\n"
                                                                "\fobservations\x18\x02 \x03(\v2\x1F.proto.radiomap.CellO"
                                                                "bservation\"b\n"
                                                                "\x14SelfHealingTileDebug\x12\x11\n"
                                                                "\tsourceIds\x18\x01 \x03(\t\x12\x12\n"
                                                                "\n"
                                                                "probIndoor\x18\x02 \x03(\x01\x12#\n"
                                                                "\x1BprobIndoorAgainstSurveyTile\x18\x03 \x03(\x01\"P\n"
                                                                "\x0EPathLossParams\x12\x0E\n"
                                                                "\x06rowIdx\x18\x01 \x02(\r\x12\x0E\n"
                                                                "\x06colIdx\x18\x02 \x02(\r\x12\x0F\n"
                                                                "\amodeDbm\x18\x03 \x02(\x02\x12\r\n"
                                                                "\x05gamma\x18\x04 \x02(\x02\"\xF7\x02\x0A"
                                                                "\x09ApRssiMap\x12(\n"
                                                                "\aaddress\x18\x01 \x02(\v2\x17.proto.radiomap.Address\x12"
                                                                "\x12\n"
                                                                "\n"
                                                                "xIdxOffset\x18\x02 \x02(\r\x12\x12\n"
                                                                "\n"
                                                                "yIdxOffset\x18\x03 \x02(\r\x12\f\n"
                                                                "\x04rows\x18\x04 \x02(\r\x12\f\n"
                                                                "\x04cols\x18\x05 \x02(\r\x120\n"
                                                                "\bmodeSpec\x18\x06 \x01(\v2\x1E.proto.radiomap.FixedPoin"
                                                                "tSpec\x125\n"
                                                                "\rcertaintySpec\x18\a \x01(\v2\x1E.proto.radiomap.FixedP"
                                                                "ointSpec\x12\"\n"
                                                                "\x1ApackedCellModeAndCertainty\x18\b \x02(\f\x126\n"
                                                                "\x0EpathLossParams\x18\t \x01(\v2\x1E.proto.radiomap.Pat"
                                                                "hLossParams\x127\n"
                                                                "\fencodingType\x18\n"
                                                                " \x01(\x0E2!.proto.venue.RadioMapEncodingType\"\xB9\x01\n"
                                                                "\n"
                                                                "TileHeader\x12*\n"
                                                                "\taddresses\x18\x01 \x03(\v2\x17.proto.radiomap.Address\x12"
                                                                "6\n"
                                                                "\x0EcoarseApParams\x18\x04 \x03(\v2\x1E.proto.radiomap.C"
                                                                "oarseApParams\x12)\n"
                                                                "\toccupancy\x18\x02 \x01(\v2\x16.proto.venue.Occupancy\x12"
                                                                "\v\n"
                                                                "\x03uid\x18\x03 \x02(\t\x12\x0F\n"
                                                                "\aversion\x18\x10 \x01(\x03\"H\n"
                                                                "\rApFrequencies\x12(\n"
                                                                "\aaddress\x18\x01 \x02(\v2\x17.proto.radiomap.Address\x12"
                                                                "\r\n"
                                                                "\x05freqs\x18\x02 \x03(\x05*#\n"
                                                                "\bApIdType\x12\b\n"
                                                                "\x04WiFi\x10\x01\x12\r\n"
                                                                "\tBluetooth\x10\x02B!\n"
                                                                "\x1Fcom.apple.indoor.proto.radiomap",
      (const void *)0x767,
      v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("protobuf/gen/radiomap.proto", sub_1002D9C8C);
    operator new();
  }
}

void sub_1002D98AC()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002D98D8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002D9904()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002D9930()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002D9A10()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002D9A3C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002D9A68()
{
  uint64_t result;

  if (qword_10042E9E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042E9E0 + 8))(qword_10042E9E0);
  if (qword_10041A150)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A150 + 8))(qword_10041A150);
  if (qword_10042E9E8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042E9E8 + 8))(qword_10042E9E8);
  if (qword_10041A160)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A160 + 8))(qword_10041A160);
  if (qword_10042E9F0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042E9F0 + 8))(qword_10042E9F0);
  if (qword_10041A170)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A170 + 8))(qword_10041A170);
  if (qword_10042E9F8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042E9F8 + 8))(qword_10042E9F8);
  if (qword_10041A180)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A180 + 8))(qword_10041A180);
  if (qword_10042EA00)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA00 + 8))(qword_10042EA00);
  if (qword_10041A198)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A198 + 8))(qword_10041A198);
  if (qword_10042EA08)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA08 + 8))(qword_10042EA08);
  if (qword_10041A1A8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A1A8 + 8))(qword_10041A1A8);
  if (qword_10042EA10)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA10 + 8))(qword_10042EA10);
  if (qword_10041A1B8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A1B8 + 8))(qword_10041A1B8);
  if (qword_10042EA18)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA18 + 8))(qword_10042EA18);
  if (qword_10041A1C8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A1C8 + 8))(qword_10041A1C8);
  if (qword_10042EA20)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA20 + 8))(qword_10042EA20);
  if (qword_10041A1D8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A1D8 + 8))(qword_10041A1D8);
  if (qword_10042EA28)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA28 + 8))(qword_10042EA28);
  if (qword_10041A1E8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A1E8 + 8))(qword_10041A1E8);
  if (qword_10042EA30)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA30 + 8))(qword_10042EA30);
  result = qword_10041A1F8;
  if (qword_10041A1F8)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_10041A1F8 + 8))(qword_10041A1F8);
  return result;
}

uint64_t sub_1002D9C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  char v24;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v23[1] = sub_1002D8D24;
    v24 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v23);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v23);
  }
  v1 = qword_10041A148;
  if (!qword_10042E9E0)
    ((void (*)(void))sub_1002D9410)();
  v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  v3 = qword_10041A158;
  if (!qword_10042E9E8)
    sub_1002D9410(v2);
  v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
  v5 = qword_10041A168;
  if (!qword_10042E9F0)
    sub_1002D9410(v4);
  v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5);
  v7 = qword_10041A178;
  if (!qword_10042E9F8)
    sub_1002D9410(v6);
  v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v7);
  v9 = qword_10041A190;
  if (!qword_10042EA00)
    sub_1002D9410(v8);
  v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v9);
  v11 = qword_10041A1A0;
  if (!qword_10042EA08)
    sub_1002D9410(v10);
  v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v11);
  v13 = qword_10041A1B0;
  if (!qword_10042EA10)
    sub_1002D9410(v12);
  v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v13);
  v15 = qword_10041A1C0;
  if (!qword_10042EA18)
    sub_1002D9410(v14);
  v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v15);
  v17 = qword_10041A1D0;
  if (!qword_10042EA20)
    sub_1002D9410(v16);
  v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v17);
  v19 = qword_10041A1E0;
  if (!qword_10042EA28)
    sub_1002D9410(v18);
  v20 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v19);
  v21 = qword_10041A1F0;
  if (qword_10042EA30)
    return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(qword_10041A1F0);
  sub_1002D9410(v20);
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v21);
}

void sub_1002D9E98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D9EAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_1002D9EB4()
{
  operator new();
}

void sub_1002D9F18()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002D9F40(uint64_t a1)
{
  char v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_BYTE *)(a1 + 32);
  if (!v1
    || (*(_DWORD *)(a1 + 24) = 1, (v1 & 2) == 0)
    || (v2 = *(_QWORD *)(a1 + 16), (_UNKNOWN *)v2 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    v4 = *(_QWORD *)(a1 + 8);
    result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
    *((_DWORD *)result + 6) = 0;
    if (!v4)
      return result;
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v2 = 0;
    *(_BYTE *)(v2 + 23) = 0;
    goto LABEL_6;
  }
  **(_BYTE **)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  v5 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v5)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002D9FA4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 2) == 0)
    {
LABEL_3:
      v9 = *(_QWORD **)(v5 + 8);
      v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
      v7 = v9;
      if (!v9)
        return this;
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(2, *(_QWORD *)(v5 + 16), a2);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_7:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002DA02C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  char *v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  const void *v16;
  _QWORD *v17;

  v4 = a2;
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *(_BYTE *)a2 = 8;
    v10 = (char *)a2 + 1;
    if ((v9 & 0x80000000) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, (unint64_t)v10, a3);
      if ((*((_BYTE *)this + 32) & 2) != 0)
        goto LABEL_12;
    }
    else if (v9 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
      if ((*((_BYTE *)this + 32) & 2) != 0)
        goto LABEL_12;
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v9;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if ((*((_BYTE *)this + 32) & 2) != 0)
        goto LABEL_12;
    }
LABEL_3:
    v8 = (_QWORD *)*((_QWORD *)this + 1);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v6 = v8;
    if (!v8)
      return v4;
    goto LABEL_24;
  }
  if ((*((_BYTE *)this + 32) & 2) == 0)
    goto LABEL_3;
LABEL_12:
  v11 = *((_QWORD *)this + 2);
  *(_BYTE *)v4 = 18;
  if (*(char *)(v11 + 23) < 0)
  {
    v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
    if (v12 <= 0x7F)
      goto LABEL_14;
  }
  else
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
    if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu)
    {
LABEL_14:
      *((_BYTE *)v4 + 1) = (_BYTE)v12;
      v13 = (_DWORD)v4 + 2;
      goto LABEL_17;
    }
  }
  v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v4 + 1, a3);
LABEL_17:
  v14 = *(char *)(v11 + 23);
  if (v14 >= 0)
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
  else
    v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
  if (v14 >= 0)
    v16 = (const void *)*(unsigned __int8 *)(v11 + 23);
  else
    v16 = (const void *)*(unsigned int *)(v11 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v15, v16, v13, a4);
  v17 = (_QWORD *)*((_QWORD *)this + 1);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v6 = v17;
  if (!v17)
    return v4;
LABEL_24:
  if (*v6 != v6[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v4, a3);
  return v4;
}

uint64_t sub_1002DA150(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  _QWORD *v12;

  v3 = *(_BYTE *)(a1 + 32);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
        if ((v3 & 2) == 0)
          goto LABEL_22;
      }
      else if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
        if ((*(_DWORD *)(a1 + 32) & 2) == 0)
          goto LABEL_22;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_22;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 32) & 2) == 0)
        goto LABEL_22;
    }
    v6 = *(_QWORD *)(a1 + 16);
    v7 = *(unsigned __int8 *)(v6 + 23);
    v8 = v7;
    v9 = *(_QWORD *)(v6 + 8);
    if ((v7 & 0x80u) == 0)
      v10 = *(unsigned __int8 *)(v6 + 23);
    else
      v10 = v9;
    if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
      v7 = *(unsigned __int8 *)(v6 + 23);
      v9 = *(_QWORD *)(v6 + 8);
      v8 = *(_BYTE *)(v6 + 23);
    }
    else
    {
      v11 = 1;
    }
    if (v8 < 0)
      v7 = v9;
    v4 = (v4 + v11 + v7 + 1);
  }
  else
  {
    v4 = 0;
  }
LABEL_22:
  v12 = *(_QWORD **)(a1 + 8);
  if (v12 && *v12 != v12[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

uint64_t sub_1002DA244(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 644);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100095DF8((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002DA2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DA30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DA320(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002DA368()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A148;
}

void sub_1002DA3DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DA3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 937);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 40) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v9 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_QWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(_QWORD *)(a1 + 16) = v8;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    v6 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 32) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002DA4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DA4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DA4F4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1004030F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1002DA524(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1002DA52C()
{
  operator new();
}

void sub_1002DA580()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002DA5A8(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 40))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002DA5CC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 40) & 4) == 0)
  {
LABEL_4:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_9;
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_9:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1002DA670(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  _QWORD *v11;
  _QWORD *v12;

  v4 = *((_DWORD *)this + 10);
  if ((v4 & 1) != 0)
  {
    v8 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v8;
    a2 += 9;
    v4 = *((_DWORD *)this + 10);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v9 = *((_QWORD *)this + 3);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)(a2 + 1) = v9;
  a2 += 9;
  if ((*((_DWORD *)this + 10) & 4) == 0)
  {
LABEL_4:
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = (_QWORD *)*((_QWORD *)this + 1);
    if (!v5)
      return a2;
    goto LABEL_5;
  }
LABEL_9:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(_BYTE *)a2 = 24;
  if (v10 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)a2 + 1, a3);
    v12 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v12;
    if (!v12)
      return a2;
  }
  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v10;
    a2 += 2;
    v11 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v11;
    if (!v11)
      return a2;
  }
LABEL_5:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1002DA7AC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v11;

  v3 = *(unsigned __int8 *)(a1 + 40);
  if (*(_BYTE *)(a1 + 40))
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    if ((v3 & 4) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v6 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
      else
        v7 = 2;
      v5 = (v7 + v5);
      v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v9 = *(_QWORD **)(a1 + 8);
      if (!v9)
        goto LABEL_10;
      goto LABEL_13;
    }
  }
  else
  {
    v5 = 0;
  }
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v9 = *(_QWORD **)(a1 + 8);
  if (!v9)
  {
LABEL_10:
    *(_DWORD *)(a1 + 36) = v5;
    return v5;
  }
LABEL_13:
  if (*v9 == v9[1])
    goto LABEL_10;
  v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)
      + v5;
  *(_DWORD *)(a1 + 36) = v11;
  return v11;
}

uint64_t sub_1002DA858(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 925);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002DA3F0((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002DA90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DA920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DA934(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002DA97C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A158;
}

void sub_1002DA9F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DAA04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1002DAA0C()
{
  operator new();
}

void sub_1002DAA68()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002DAA90(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v7;

  if (*(_BYTE *)(a1 + 36))
  {
    __asm { FMOV            V1.2S, #1.0 }
    *(_QWORD *)(a1 + 16) = _D1;
    *(_QWORD *)(a1 + 24) = 0xAFFFFFF01;
  }
  v7 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v7)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002DAABC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) == 0)
  {
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), (int)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_11:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1002DAB7C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  int v9;
  int v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = *((_DWORD *)this + 9);
  if ((v4 & 1) != 0)
  {
    v9 = *((_DWORD *)this + 4);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v9;
    a2 += 5;
    v4 = *((_DWORD *)this + 9);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
LABEL_10:
      v11 = *((_DWORD *)this + 6);
      *(_BYTE *)a2 = 24;
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v11) ^ (v11 >> 31));
      if (v12 > 0x7F)
      {
        a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
        if ((*((_BYTE *)this + 36) & 8) != 0)
          goto LABEL_14;
      }
      else
      {
        *(_BYTE *)(a2 + 1) = (2 * v11) ^ (v11 >> 31);
        a2 += 2;
        if ((*((_BYTE *)this + 36) & 8) != 0)
          goto LABEL_14;
      }
LABEL_5:
      v7 = (_QWORD *)*((_QWORD *)this + 1);
      v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      v5 = v7;
      if (!v7)
        return a2;
      goto LABEL_6;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = *((_DWORD *)this + 5);
  *(_BYTE *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 9) & 4) != 0)
    goto LABEL_10;
LABEL_4:
  if ((*((_BYTE *)this + 36) & 8) == 0)
    goto LABEL_5;
LABEL_14:
  v13 = *((_DWORD *)this + 7);
  *(_BYTE *)a2 = 32;
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v13) ^ (v13 >> 31));
  if (v14 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)a2 + 1, a3);
    v16 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v16;
    if (!v16)
      return a2;
  }
  else
  {
    *(_BYTE *)(a2 + 1) = (2 * v13) ^ (v13 >> 31);
    a2 += 2;
    v15 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v15;
    if (!v15)
      return a2;
  }
LABEL_6:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1002DACD0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  uint64_t v11;

  v3 = *(unsigned __int8 *)(a1 + 36);
  if (!*(_BYTE *)(a1 + 36))
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_8;
    goto LABEL_19;
  }
  v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0)
    v5 = v4 + 5;
  else
    v5 = v4;
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_7;
LABEL_15:
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 28)) ^ (*(int *)(a1 + 28) >> 31));
    if (v10 >= 0x80)
    {
      v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)+ 1+ v5;
      v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v7 = *(_QWORD **)(a1 + 8);
      if (!v7)
        goto LABEL_8;
    }
    else
    {
      v5 = (v5 + 2);
      v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v7 = *(_QWORD **)(a1 + 8);
      if (!v7)
        goto LABEL_8;
    }
    goto LABEL_19;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31));
  if (v9 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)+ 1+ v5;
    if ((*(_DWORD *)(a1 + 36) & 8) != 0)
      goto LABEL_15;
  }
  else
  {
    v5 = (v5 + 2);
    if ((v3 & 8) != 0)
      goto LABEL_15;
  }
LABEL_7:
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 8);
  if (!v7)
  {
LABEL_8:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_19:
  if (*v7 == v7[1])
    goto LABEL_8;
  v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v11;
  return v11;
}

uint64_t sub_1002DADE0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 1246);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100094AEC(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002DAE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DAEA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DAEBC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002DAF04()
{
  return 1;
}

uint64_t sub_1002DAF0C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A168;
}

void sub_1002DAF80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL sub_1002DAF94(int a1)
{
  return (a1 - 1) < 4;
}

uint64_t sub_1002DAFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  const std::string *v8;
  std::string *v9;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 1596);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(_QWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_10:
        v8 = *(const std::string **)(a2 + 24);
        *(_DWORD *)(a1 + 40) |= 4u;
        v9 = *(std::string **)(a1 + 24);
        if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        std::string::operator=(v9, v8);
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 32) = v7;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002DB0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DB0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DB0EC(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_100403250;
  v2 = a1[3];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1002DB160(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_100403250;
  v2 = a1[3];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1002DB1E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1002DB1F0()
{
  operator new();
}

void sub_1002DB254()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002DB27C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_BYTE *)(a1 + 40);
  if (!v1
    || (*(_QWORD *)(a1 + 16) = 0, *(_DWORD *)(a1 + 32) = 1, (v1 & 4) == 0)
    || (v2 = *(_QWORD *)(a1 + 24), (_UNKNOWN *)v2 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    v4 = *(_QWORD *)(a1 + 8);
    result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
    *((_DWORD *)result + 8) = 0;
    if (!v4)
      return result;
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v2 = 0;
    *(_BYTE *)(v2 + 23) = 0;
    goto LABEL_6;
  }
  **(_BYTE **)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  v5 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v5)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002DB2E4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v9;
  int v10;
  void *v11;
  uint64_t result;
  unint64_t v13;
  _BYTE *v14;
  char *v15;
  signed int v16;
  _BYTE *v17;
  unsigned int v18;
  unint64_t v19;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v7 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((_QWORD *)this + 1) = v7 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v10 = TagFallback & 7;
          if (v10 != 1)
            goto LABEL_26;
          v19 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0)
            return 0;
          *(_QWORD *)(a1 + 16) = v19;
          *(_DWORD *)(a1 + 40) |= 1u;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          if ((unint64_t)v14 < v13 && *v14 == 16)
          {
            v15 = v14 + 1;
            *((_QWORD *)this + 1) = v15;
            goto LABEL_21;
          }
        }
        if (v9 != 2)
          break;
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v15 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
LABEL_21:
        v18 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
          if (!(_DWORD)result)
            return result;
          v16 = v18;
          if (v18 - 1 <= 3)
          {
LABEL_24:
            *(_DWORD *)(a1 + 40) |= 2u;
            *(_DWORD *)(a1 + 32) = v16;
            goto LABEL_32;
          }
        }
        else
        {
          v16 = *v15;
          *((_QWORD *)this + 1) = v15 + 1;
          if ((v16 - 1) <= 3)
            goto LABEL_24;
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, v16);
LABEL_32:
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 < *((_QWORD *)this + 2) && *v17 == 26)
        {
          *((_QWORD *)this + 1) = v17 + 1;
          *(_DWORD *)(a1 + 40) |= 4u;
          v11 = *(void **)(a1 + 24);
          if (v11 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
LABEL_35:
            operator new();
          goto LABEL_12;
        }
      }
      if (v9 != 3)
        break;
      v10 = TagFallback & 7;
      if (v10 != 2)
        goto LABEL_26;
      *(_DWORD *)(a1 + 40) |= 4u;
      v11 = *(void **)(a1 + 24);
      if (v11 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
        goto LABEL_35;
LABEL_12:
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v11);
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v10 = TagFallback & 7;
LABEL_26:
    if (v10 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_1002DB570(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 32), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 4) == 0)
  {
LABEL_4:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_9;
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(3, *(_QWORD *)(v5 + 24), a2);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_9:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002DB614(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  unint64_t v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  const void *v18;
  _QWORD *v19;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_7:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
    *(_BYTE *)v4 = 16;
    v12 = (unint64_t)v4 + 1;
    if ((v11 & 0x80000000) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
      if ((*((_BYTE *)this + 40) & 4) != 0)
        goto LABEL_14;
    }
    else if (v11 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
      if ((*((_BYTE *)this + 40) & 4) != 0)
        goto LABEL_14;
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v11;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if ((*((_BYTE *)this + 40) & 4) != 0)
        goto LABEL_14;
    }
LABEL_4:
    v9 = (_QWORD *)*((_QWORD *)this + 1);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v7 = v9;
    if (!v9)
      return v4;
    goto LABEL_26;
  }
  v10 = *((_QWORD *)this + 2);
  *(_BYTE *)a2 = 9;
  *(_QWORD *)((char *)a2 + 1) = v10;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
  if ((*((_DWORD *)this + 10) & 2) != 0)
    goto LABEL_7;
LABEL_3:
  if ((*((_BYTE *)this + 40) & 4) == 0)
    goto LABEL_4;
LABEL_14:
  v13 = *((_QWORD *)this + 3);
  *(_BYTE *)v4 = 26;
  if (*(char *)(v13 + 23) < 0)
  {
    v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v13 + 8);
    if (v14 <= 0x7F)
      goto LABEL_16;
  }
  else
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v13 + 23);
    if (*(unsigned __int8 *)(v13 + 23) <= 0x7Fu)
    {
LABEL_16:
      *((_BYTE *)v4 + 1) = (_BYTE)v14;
      v15 = (_DWORD)v4 + 2;
      goto LABEL_19;
    }
  }
  v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v4 + 1, a3);
LABEL_19:
  v16 = *(char *)(v13 + 23);
  if (v16 >= 0)
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13;
  else
    v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v13;
  if (v16 >= 0)
    v18 = (const void *)*(unsigned __int8 *)(v13 + 23);
  else
    v18 = (const void *)*(unsigned int *)(v13 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v17, v18, v15, a4);
  v19 = (_QWORD *)*((_QWORD *)this + 1);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v7 = v19;
  if (!v19)
    return v4;
LABEL_26:
  if (*v7 != v7[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
  return v4;
}

uint64_t sub_1002DB790(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  int v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;

  v3 = *(unsigned __int8 *)(a1 + 40);
  if (!*(_BYTE *)(a1 + 40))
  {
    v4 = 0;
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_5;
    goto LABEL_24;
  }
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) == 0)
  {
    if ((v3 & 4) == 0)
      goto LABEL_4;
LABEL_15:
    v9 = *(_QWORD *)(a1 + 24);
    v10 = *(unsigned __int8 *)(v9 + 23);
    v11 = v10;
    v12 = *(_QWORD *)(v9 + 8);
    if ((v10 & 0x80u) == 0)
      v13 = *(unsigned __int8 *)(v9 + 23);
    else
      v13 = v12;
    if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13, a2);
      v10 = *(unsigned __int8 *)(v9 + 23);
      v12 = *(_QWORD *)(v9 + 8);
      v11 = *(_BYTE *)(v9 + 23);
    }
    else
    {
      v14 = 1;
    }
    if (v11 < 0)
      v10 = v12;
    v4 = (v4 + v14 + v10 + 1);
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_5;
    goto LABEL_24;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if ((v8 & 0x80000000) != 0)
  {
    v4 = (v4 + 11);
    if ((v3 & 4) != 0)
      goto LABEL_15;
  }
  else if (v8 >= 0x80)
  {
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)+ 1+ v4;
    if ((*(_DWORD *)(a1 + 40) & 4) != 0)
      goto LABEL_15;
  }
  else
  {
    v4 = (v4 + 2);
    if ((v3 & 4) != 0)
      goto LABEL_15;
  }
LABEL_4:
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = *(_QWORD **)(a1 + 8);
  if (!v6)
  {
LABEL_5:
    *(_DWORD *)(a1 + 36) = v4;
    return v4;
  }
LABEL_24:
  if (*v6 == v6[1])
    goto LABEL_5;
  v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 36) = v15;
  return v15;
}

uint64_t sub_1002DB8C4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 1584);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002DAFA4((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002DB978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DB98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DB9A0(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002DB9E8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 40) & 1;
}

uint64_t sub_1002DB9F4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A178;
}

void sub_1002DBA68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DBA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  std::string *v25;
  uint64_t v26;
  std::string *v27;
  uint64_t v28;
  uint64_t v29;
  const std::string *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  uint64_t v65;
  char v67;
  _BYTE v68[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v68, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 2310);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v68, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v67, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v68);
  }
  v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    v6 = *(_DWORD *)(a1 + 24);
    v7 = *(_DWORD *)(a1 + 28);
    v8 = v6 + v5;
    if (v7 < v8)
    {
      v9 = 2 * v7;
      if (2 * v7 <= v8)
        v9 = v8;
      if (v9 <= 4)
        v9 = 4;
      *(_DWORD *)(a1 + 28) = v9;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 16) + 8 * v6), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  v10 = *(_DWORD *)(a2 + 40);
  if (v10)
  {
    v11 = *(_DWORD *)(a1 + 40);
    v12 = *(_DWORD *)(a1 + 44);
    v13 = v11 + v10;
    if (v12 < v13)
    {
      v14 = 2 * v12;
      if (2 * v12 <= v13)
        v14 = v13;
      if (v14 <= 4)
        v14 = 4;
      *(_DWORD *)(a1 + 44) = v14;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 32) + 4 * v11), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 40));
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
  }
  v15 = *(_DWORD *)(a2 + 56);
  if (v15)
  {
    v16 = *(_DWORD *)(a1 + 56);
    v17 = *(_DWORD *)(a1 + 60);
    v18 = v16 + v15;
    if (v17 < v18)
    {
      v19 = 2 * v17;
      if (2 * v17 <= v18)
        v19 = v18;
      if (v19 <= 4)
        v19 = 4;
      *(_DWORD *)(a1 + 60) = v19;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 48) + 4 * v16), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 56));
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
  }
  v20 = *(_DWORD *)(a2 + 72);
  if (v20)
  {
    v21 = *(_DWORD *)(a1 + 72);
    v22 = *(_DWORD *)(a1 + 76);
    v23 = v21 + v20;
    if (v22 < v23)
    {
      v24 = 2 * v22;
      if (2 * v22 <= v23)
        v24 = v23;
      if (v24 <= 4)
        v24 = 4;
      *(_DWORD *)(a1 + 76) = v24;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 64) + 8 * v21), *(const void **)(a2 + 64), 8 * *(int *)(a2 + 72));
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
  }
  v25 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), *(_DWORD *)(a2 + 88) + *(_DWORD *)(a1 + 88));
  if (*(int *)(a2 + 88) >= 1)
  {
    v26 = 0;
    do
    {
      while (1)
      {
        v30 = *(const std::string **)(*(_QWORD *)(a2 + 80) + 8 * v26);
        v31 = *(_DWORD *)(a1 + 92);
        v32 = *(int *)(a1 + 88);
        if ((int)v32 >= v31)
          break;
        v33 = *(_QWORD *)(a1 + 80);
        *(_DWORD *)(a1 + 88) = v32 + 1;
        v25 = std::string::operator=(*(std::string **)(v33 + 8 * v32), v30);
        if (++v26 >= *(int *)(a2 + 88))
          goto LABEL_43;
      }
      if (v31 == *(_DWORD *)(a1 + 96))
      {
        v25 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), v31 + 1);
        v31 = *(_DWORD *)(a1 + 92);
      }
      *(_DWORD *)(a1 + 92) = v31 + 1;
      v27 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v25);
      v28 = *(_QWORD *)(a1 + 80);
      v29 = *(int *)(a1 + 88);
      *(_DWORD *)(a1 + 88) = v29 + 1;
      *(_QWORD *)(v28 + 8 * v29) = v27;
      v25 = std::string::operator=(v27, v30);
      ++v26;
    }
    while (v26 < *(int *)(a2 + 88));
  }
LABEL_43:
  v34 = *(_DWORD *)(a2 + 112);
  if (v34)
  {
    v35 = *(_DWORD *)(a1 + 112);
    v36 = *(_DWORD *)(a1 + 116);
    v37 = v35 + v34;
    if (v36 < v37)
    {
      v38 = 2 * v36;
      if (2 * v36 <= v37)
        v38 = v37;
      if (v38 <= 4)
        v39 = 4;
      else
        v39 = v38;
      *(_DWORD *)(a1 + 116) = v39;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 104) + v35), *(const void **)(a2 + 104), *(int *)(a2 + 112));
    *(_DWORD *)(a1 + 112) += *(_DWORD *)(a2 + 112);
  }
  v40 = *(_DWORD *)(a2 + 128);
  if (v40)
  {
    v41 = *(_DWORD *)(a1 + 128);
    v42 = *(_DWORD *)(a1 + 132);
    v43 = v41 + v40;
    if (v42 < v43)
    {
      v44 = 2 * v42;
      if (2 * v42 <= v43)
        v44 = v43;
      if (v44 <= 4)
        v44 = 4;
      *(_DWORD *)(a1 + 132) = v44;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 120) + 4 * v41), *(const void **)(a2 + 120), 4 * *(int *)(a2 + 128));
    *(_DWORD *)(a1 + 128) += *(_DWORD *)(a2 + 128);
  }
  v45 = *(_DWORD *)(a2 + 144);
  if (v45)
  {
    v46 = *(_DWORD *)(a1 + 144);
    v47 = *(_DWORD *)(a1 + 148);
    v48 = v46 + v45;
    if (v47 < v48)
    {
      v49 = 2 * v47;
      if (2 * v47 <= v48)
        v49 = v48;
      if (v49 <= 4)
        v49 = 4;
      *(_DWORD *)(a1 + 148) = v49;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 136) + 4 * v46), *(const void **)(a2 + 136), 4 * *(int *)(a2 + 144));
    *(_DWORD *)(a1 + 144) += *(_DWORD *)(a2 + 144);
  }
  v50 = *(_DWORD *)(a2 + 160);
  if (v50)
  {
    v51 = *(_DWORD *)(a1 + 160);
    v52 = *(_DWORD *)(a1 + 164);
    v53 = v51 + v50;
    if (v52 < v53)
    {
      v54 = 2 * v52;
      if (2 * v52 <= v53)
        v54 = v53;
      if (v54 <= 4)
        v54 = 4;
      *(_DWORD *)(a1 + 164) = v54;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 152) + 8 * v51), *(const void **)(a2 + 152), 8 * *(int *)(a2 + 160));
    *(_DWORD *)(a1 + 160) += *(_DWORD *)(a2 + 160);
  }
  v55 = *(_DWORD *)(a2 + 176);
  if (v55)
  {
    v56 = *(_DWORD *)(a1 + 176);
    v57 = *(_DWORD *)(a1 + 180);
    v58 = v56 + v55;
    if (v57 < v58)
    {
      v59 = 2 * v57;
      if (2 * v57 <= v58)
        v59 = v58;
      if (v59 <= 4)
        v59 = 4;
      *(_DWORD *)(a1 + 180) = v59;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 168) + 8 * v56), *(const void **)(a2 + 168), 8 * *(int *)(a2 + 176));
    *(_DWORD *)(a1 + 176) += *(_DWORD *)(a2 + 176);
  }
  v60 = *(_DWORD *)(a2 + 192);
  if (v60)
  {
    v61 = *(_DWORD *)(a1 + 192);
    v62 = *(_DWORD *)(a1 + 196);
    v63 = v61 + v60;
    if (v62 < v63)
    {
      v64 = 2 * v62;
      if (2 * v62 <= v63)
        v64 = v63;
      if (v64 <= 4)
        v64 = 4;
      *(_DWORD *)(a1 + 196) = v64;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 184) + 8 * v61), *(const void **)(a2 + 184), 8 * *(int *)(a2 + 192));
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
  }
  if ((*(_BYTE *)(a2 + 213) & 8) != 0)
  {
    v65 = *(_QWORD *)(a2 + 200);
    *(_DWORD *)(a1 + 212) |= 0x800u;
    *(_QWORD *)(a1 + 200) = v65;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002DC30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DC320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DC334(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_100403300;
  if (*(_QWORD *)(a1 + 184))
    operator delete[]();
  if (*(_QWORD *)(a1 + 168))
    operator delete[]();
  if (*(_QWORD *)(a1 + 152))
    operator delete[]();
  if (*(_QWORD *)(a1 + 136))
    operator delete[]();
  if (*(_QWORD *)(a1 + 120))
    operator delete[]();
  if (*(_QWORD *)(a1 + 104))
    operator delete[]();
  if (*(int *)(a1 + 92) >= 1)
  {
    v2 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete(*(_QWORD *)(*(_QWORD *)(a1 + 80)
                                                                                                + 8 * v2++));
    while (v2 < *(int *)(a1 + 92));
  }
  if (*(_QWORD *)(a1 + 80))
    operator delete[]();
  if (*(_QWORD *)(a1 + 64))
    operator delete[]();
  if (*(_QWORD *)(a1 + 48))
    operator delete[]();
  if (*(_QWORD *)(a1 + 32))
    operator delete[]();
  if (*(_QWORD *)(a1 + 16))
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1002DC4D0(uint64_t a1)
{
  sub_1002DC334(a1);
  operator delete();
}

uint64_t sub_1002DC4F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 208) = a2;
  return result;
}

void sub_1002DC4FC()
{
  operator new();
}

void sub_1002DC574()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002DC59C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;

  if ((*(_DWORD *)(a1 + 212) & 0x7F800) != 0)
    *(_QWORD *)(a1 + 200) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  if (*(int *)(a1 + 88) >= 1)
  {
    v1 = 0;
    do
    {
      while (1)
      {
        v2 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8 * v1);
        if (*(char *)(v2 + 23) < 0)
          break;
        *(_BYTE *)v2 = 0;
        *(_BYTE *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 88))
          goto LABEL_8;
      }
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 88));
  }
LABEL_8:
  v4 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 20) = 0;
  *((_DWORD *)result + 26) = 0;
  *((_DWORD *)result + 30) = 0;
  *((_DWORD *)result + 34) = 0;
  *((_DWORD *)result + 38) = 0;
  *((_DWORD *)result + 42) = 0;
  *((_DWORD *)result + 46) = 0;
  *((_DWORD *)result + 51) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t *sub_1002DC644(uint64_t *result, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v11;
  int v12;
  unint64_t v13;
  char *v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  signed int v34;
  signed int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  int v42;
  int v43;
  signed int v44;
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  uint64_t v56;
  _BYTE *v57;
  unint64_t v58;
  int v59;
  unsigned int v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  uint64_t v67;
  _BYTE *v68;
  unint64_t v69;
  char *v70;
  int v71;
  unsigned int v72;
  int v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  _BYTE *v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  int v89;
  signed int v90;
  signed int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  int v101;
  BOOL v102;
  int v103;
  uint64_t v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  _BYTE *v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  int v116;
  int v117;
  uint64_t v118;
  int v119;
  signed int v120;
  signed int v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  int v131;
  int v132;
  uint64_t v133;
  int v134;
  signed int v135;
  signed int v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  int v146;
  int v147;
  int v148;
  int i;
  uint64_t v150;
  _BYTE *v151;
  unint64_t v152;
  uint64_t *v153;
  uint64_t *v154;
  uint64_t *v155;
  uint64_t *v156;
  uint64_t *v157;
  uint64_t *v158;
  uint64_t *v159;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v160;
  unsigned int v161[2];

  v5 = (uint64_t)result;
  v158 = result + 21;
  v159 = result + 23;
  v6 = result + 17;
  v7 = result + 15;
  v156 = result + 13;
  v157 = result + 19;
  v8 = result + 6;
  v154 = result + 4;
  v155 = result + 8;
  v153 = result + 2;
  v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(result + 1);
  v160 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 10);
LABEL_2:
  while (2)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
      *((_DWORD *)this + 8) = (_DWORD)result;
      if (!(_DWORD)result)
        return (uint64_t *)1;
    }
    else
    {
      v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)v11;
      *((_QWORD *)this + 1) = v10 + 1;
      if (!(_DWORD)v11)
        return (uint64_t *)1;
    }
    switch(v11 >> 3)
    {
      case 1u:
        v12 = v11 & 7;
        if (v12 != 2)
        {
          if (v12 == 1)
          {
            *(_QWORD *)v161 = 0;
            result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v161);
            if ((result & 1) == 0)
              return 0;
            goto LABEL_65;
          }
          goto LABEL_48;
        }
        result = (uint64_t *)sub_10010620C(this, v153);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          if ((unint64_t)v41 >= v13)
            goto LABEL_2;
          v42 = *v41;
          if (v42 == 16)
            goto LABEL_105;
          if (v42 != 9)
            goto LABEL_2;
          *((_QWORD *)this + 1) = v41 + 1;
          *(_QWORD *)v161 = 0;
          result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v161);
          if ((result & 1) == 0)
            return 0;
LABEL_65:
          v27 = *(_QWORD *)v161;
          v28 = *(_DWORD *)(v5 + 24);
          v29 = *(_QWORD *)(v5 + 16);
          if (v28 == *(_DWORD *)(v5 + 28))
          {
            if (2 * v28 <= v28 + 1)
              v30 = v28 + 1;
            else
              v30 = 2 * v28;
            if (v30 <= 4)
              v30 = 4;
            *(_DWORD *)(v5 + 28) = v30;
            operator new[]();
          }
          v31 = v28 + 1;
          *(_DWORD *)(v5 + 24) = v28 + 1;
          *(_QWORD *)(v29 + 8 * v28) = v27;
          v32 = *((_QWORD *)this + 1);
          v33 = *((_DWORD *)this + 4) - v32;
          if (v33 >= 1)
          {
            v34 = *(_DWORD *)(v5 + 28) - v31;
            v35 = v33 / 9u;
            if ((int)(v33 / 9u) >= v34)
              v35 = *(_DWORD *)(v5 + 28) - v31;
            if (v35 >= 1)
            {
              v36 = 0;
              v37 = v28 + 2;
              v38 = v29 + 8 * v31;
              v39 = ((*((_DWORD *)this + 4) - v32) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
              if (v39 >= v34)
                LODWORD(v39) = v34;
              while (*(_BYTE *)v32 == 9)
              {
                v40 = *(_QWORD *)(v32 + 1);
                *(_DWORD *)(v5 + 24) = v37 + v36;
                *(_QWORD *)(v38 + 8 * v36++) = v40;
                v32 += 9;
                if ((_DWORD)v39 == (_DWORD)v36)
                  goto LABEL_80;
              }
              v35 = v36;
              if ((_DWORD)v36)
              {
LABEL_80:
                result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v35);
                continue;
              }
            }
          }
        }
      case 2u:
        v12 = v11 & 7;
        if (v12 != 2)
        {
          if ((v11 & 7) == 0)
          {
            v14 = (char *)*((_QWORD *)this + 1);
            v13 = *((_QWORD *)this + 2);
            goto LABEL_88;
          }
          goto LABEL_48;
        }
        result = (uint64_t *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(this, sub_1002DAF94, v154);
        if (!(_DWORD)result)
          return result;
LABEL_102:
        v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v41 >= v13)
          continue;
        v48 = *v41;
        if (v48 == 24)
          goto LABEL_131;
        if (v48 != 16)
          continue;
LABEL_105:
        v14 = (char *)(v41 + 1);
        *((_QWORD *)this + 1) = v14;
LABEL_88:
        v161[0] = 0;
        if ((unint64_t)v14 >= v13 || (v43 = *v14, v43 < 0))
        {
          result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v161);
          if (!(_DWORD)result)
            return result;
          v44 = v161[0];
          if (v161[0] - 1 <= 3)
            goto LABEL_91;
        }
        else
        {
          v44 = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
          if (v43 - 1 <= 3)
          {
LABEL_91:
            v45 = *(_DWORD *)(v5 + 40);
            v46 = *(_QWORD *)(v5 + 32);
            if (v45 == *(_DWORD *)(v5 + 44))
            {
              if (2 * v45 <= v45 + 1)
                v47 = v45 + 1;
              else
                v47 = 2 * v45;
              if (v47 <= 4)
                v47 = 4;
              *(_DWORD *)(v5 + 44) = v47;
              operator new[]();
            }
            *(_DWORD *)(v5 + 40) = v45 + 1;
            *(_DWORD *)(v46 + 4 * v45) = v44;
            goto LABEL_102;
          }
        }
        result = (uint64_t *)wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v9, 2, v44);
        goto LABEL_102;
      case 3u:
        v12 = v11 & 7;
        if (v12 != 2)
        {
          if ((v11 & 7) == 0)
          {
            v15 = (char *)*((_QWORD *)this + 1);
            v13 = *((_QWORD *)this + 2);
            goto LABEL_106;
          }
LABEL_48:
          if (v12 == 4)
            return (uint64_t *)1;
          result = (uint64_t *)wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v11, v9, a4);
          if ((result & 1) == 0)
            return 0;
          continue;
        }
        result = (uint64_t *)sub_1002DD9B4(this, v8);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          if ((unint64_t)v41 >= v13)
            goto LABEL_2;
          v59 = *v41;
          if (v59 == 33)
            break;
          if (v59 != 24)
            goto LABEL_2;
LABEL_131:
          v15 = (char *)(v41 + 1);
          *((_QWORD *)this + 1) = v15;
LABEL_106:
          v161[0] = 0;
          if ((unint64_t)v15 >= v13 || *v15 < 0)
          {
            result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v161);
            if (!(_DWORD)result)
              return result;
            v49 = v161[0];
            v50 = *(_DWORD *)(v5 + 56);
            v51 = *(_QWORD *)(v5 + 48);
            if (v50 == *(_DWORD *)(v5 + 60))
            {
LABEL_112:
              if (2 * v50 <= v50 + 1)
                v52 = v50 + 1;
              else
                v52 = 2 * v50;
              if (v52 <= 4)
                v52 = 4;
              *(_DWORD *)(v5 + 60) = v52;
              operator new[]();
            }
          }
          else
          {
            v49 = *v15;
            *((_QWORD *)this + 1) = v15 + 1;
            v50 = *(_DWORD *)(v5 + 56);
            v51 = *(_QWORD *)(v5 + 48);
            if (v50 == *(_DWORD *)(v5 + 60))
              goto LABEL_112;
          }
          *(_DWORD *)(v5 + 56) = v50 + 1;
          *(_DWORD *)(v51 + 4 * v50) = v49;
          v53 = *(_DWORD *)(v5 + 60) - *(_DWORD *)(v5 + 56);
          if (v53 >= 1)
          {
            v54 = v53 + 1;
            do
            {
              v57 = (_BYTE *)*((_QWORD *)this + 1);
              v58 = *((_QWORD *)this + 2);
              if ((unint64_t)v57 >= v58 || *v57 != 24)
                break;
              *((_QWORD *)this + 1) = v57 + 1;
              v161[0] = 0;
              if ((unint64_t)(v57 + 1) >= v58 || (char)v57[1] < 0)
              {
                result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v161);
                if (!(_DWORD)result)
                  return result;
                v55 = v161[0];
                v51 = *v8;
              }
              else
              {
                v55 = v57[1];
                *((_QWORD *)this + 1) = v57 + 2;
              }
              v56 = *(int *)(v5 + 56);
              *(_DWORD *)(v5 + 56) = v56 + 1;
              *(_DWORD *)(v51 + 4 * v56) = v55;
              --v54;
            }
            while (v54 > 1);
          }
        }
LABEL_184:
        *((_QWORD *)this + 1) = v41 + 1;
LABEL_185:
        *(_QWORD *)v161 = 0;
        result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v161);
        if ((result & 1) != 0)
        {
          v83 = *(_QWORD *)v161;
          v84 = *(_DWORD *)(v5 + 72);
          v85 = *(_QWORD *)(v5 + 64);
          if (v84 == *(_DWORD *)(v5 + 76))
          {
            if (2 * v84 <= v84 + 1)
              v86 = v84 + 1;
            else
              v86 = 2 * v84;
            if (v86 <= 4)
              v86 = 4;
            *(_DWORD *)(v5 + 76) = v86;
            operator new[]();
          }
          v87 = v84 + 1;
          *(_DWORD *)(v5 + 72) = v84 + 1;
          *(_QWORD *)(v85 + 8 * v84) = v83;
          v88 = *((_QWORD *)this + 1);
          v89 = *((_DWORD *)this + 4) - v88;
          if (v89 >= 1)
          {
            v90 = *(_DWORD *)(v5 + 76) - v87;
            v91 = v89 / 9u;
            if ((int)(v89 / 9u) >= v90)
              v91 = *(_DWORD *)(v5 + 76) - v87;
            if (v91 >= 1)
            {
              v92 = 0;
              v93 = v84 + 2;
              v94 = v85 + 8 * v87;
              v95 = ((*((_DWORD *)this + 4) - v88) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
              if (v95 >= v90)
                LODWORD(v95) = v90;
              while (*(_BYTE *)v88 == 33)
              {
                v96 = *(_QWORD *)(v88 + 1);
                *(_DWORD *)(v5 + 72) = v93 + v92;
                *(_QWORD *)(v94 + 8 * v92++) = v96;
                v88 += 9;
                if ((_DWORD)v95 == (_DWORD)v92)
                  goto LABEL_201;
              }
              v91 = v92;
              if ((_DWORD)v92)
LABEL_201:
                result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v91);
            }
          }
LABEL_202:
          v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
          if ((unint64_t)v41 >= *((_QWORD *)this + 2))
            continue;
          v97 = *v41;
          if (v97 == 33)
            goto LABEL_184;
          if (v97 == 42)
          {
            while (1)
            {
              *((_QWORD *)this + 1) = v41 + 1;
              v16 = *(_DWORD *)(v5 + 92);
              v17 = *(int *)(v5 + 88);
              if ((int)v17 < v16)
              {
LABEL_25:
                v18 = *(_QWORD *)(v5 + 80);
                *(_DWORD *)(v5 + 88) = v17 + 1;
                v19 = *(_QWORD *)(v18 + 8 * v17);
              }
              else
              {
LABEL_209:
                if (v16 == *(_DWORD *)(v5 + 96))
                {
                  result = (uint64_t *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v160, v16 + 1);
                  v16 = *(_DWORD *)(v5 + 92);
                }
                *(_DWORD *)(v5 + 92) = v16 + 1;
                v19 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
                v98 = *(_QWORD *)(v5 + 80);
                v99 = *(int *)(v5 + 88);
                *(_DWORD *)(v5 + 88) = v99 + 1;
                *(_QWORD *)(v98 + 8 * v99) = v19;
              }
              result = (uint64_t *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v19);
              if (!(_DWORD)result)
                return result;
              v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
              v20 = *((_QWORD *)this + 2);
              if ((unint64_t)v41 >= v20)
                break;
              v100 = *v41;
              if (v100 != 42)
              {
                while (v100 == 48)
                {
                  v21 = (char *)(v41 + 1);
                  *((_QWORD *)this + 1) = v21;
LABEL_217:
                  v161[0] = 0;
                  if ((unint64_t)v21 >= v20 || (v101 = *v21, v101 < 0))
                  {
                    result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v161);
                    if (!(_DWORD)result)
                      return result;
                    v102 = v161[0] != 0;
                    v103 = *(_DWORD *)(v5 + 112);
                    v104 = *(_QWORD *)(v5 + 104);
                    if (v103 == *(_DWORD *)(v5 + 116))
                    {
LABEL_223:
                      if (2 * v103 <= v103 + 1)
                        v105 = v103 + 1;
                      else
                        v105 = 2 * v103;
                      if (v105 <= 4)
                        v106 = 4;
                      else
                        v106 = v105;
                      *(_DWORD *)(v5 + 116) = v106;
                      operator new[]();
                    }
                  }
                  else
                  {
                    *((_QWORD *)this + 1) = v21 + 1;
                    v102 = v101 != 0;
                    v103 = *(_DWORD *)(v5 + 112);
                    v104 = *(_QWORD *)(v5 + 104);
                    if (v103 == *(_DWORD *)(v5 + 116))
                      goto LABEL_223;
                  }
                  v107 = v103 + 1;
                  *(_DWORD *)(v5 + 112) = v103 + 1;
                  *(_BYTE *)(v104 + v103) = v102;
                  v108 = *(_DWORD *)(v5 + 116);
                  if (v108 - (v103 + 1) >= 1)
                  {
                    v109 = v108 - v103;
                    do
                    {
                      v111 = (_BYTE *)*((_QWORD *)this + 1);
                      v112 = *((_QWORD *)this + 2);
                      if ((unint64_t)v111 >= v112 || *v111 != 48)
                        break;
                      *((_QWORD *)this + 1) = v111 + 1;
                      v161[0] = 0;
                      if ((unint64_t)(v111 + 1) >= v112 || (char)v111[1] < 0)
                      {
                        result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v161);
                        if (!(_DWORD)result)
                          return result;
                        v110 = v161[0];
                        v104 = *(_QWORD *)(v5 + 104);
                        v107 = *(_DWORD *)(v5 + 112);
                      }
                      else
                      {
                        v110 = v111[1];
                        *((_QWORD *)this + 1) = v111 + 2;
                      }
                      *(_DWORD *)(v5 + 112) = v107 + 1;
                      *(_BYTE *)(v104 + v107) = v110 != 0;
                      --v109;
                      ++v107;
                    }
                    while (v109 > 1);
                  }
LABEL_240:
                  v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
                  v20 = *((_QWORD *)this + 2);
                  if ((unint64_t)v41 >= v20)
                    break;
                  v100 = *v41;
                  if (v100 == 57)
                  {
                    *((_QWORD *)this + 1) = v41 + 1;
LABEL_243:
                    *(_QWORD *)v161 = 0;
                    result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v161);
                    if ((result & 1) == 0)
                      return 0;
                    *(_QWORD *)(v5 + 200) = *(_QWORD *)v161;
                    *(_DWORD *)(v5 + 212) |= 0x800u;
                    v70 = (char *)*((_QWORD *)this + 1);
                    v22 = *((_QWORD *)this + 2);
                    if ((unint64_t)v70 < v22 && *v70 == 64)
                    {
                      while (1)
                      {
                        v23 = v70 + 1;
                        *((_QWORD *)this + 1) = v23;
LABEL_132:
                        v161[0] = 0;
                        if ((unint64_t)v23 >= v22 || *v23 < 0)
                        {
                          result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v161);
                          if (!(_DWORD)result)
                            return result;
                          v60 = v161[0];
                          v61 = *(_DWORD *)(v5 + 128);
                          v62 = *(_QWORD *)(v5 + 120);
                          if (v61 == *(_DWORD *)(v5 + 132))
                          {
LABEL_138:
                            if (2 * v61 <= v61 + 1)
                              v63 = v61 + 1;
                            else
                              v63 = 2 * v61;
                            if (v63 <= 4)
                              v63 = 4;
                            *(_DWORD *)(v5 + 132) = v63;
                            operator new[]();
                          }
                        }
                        else
                        {
                          v60 = *v23;
                          *((_QWORD *)this + 1) = v23 + 1;
                          v61 = *(_DWORD *)(v5 + 128);
                          v62 = *(_QWORD *)(v5 + 120);
                          if (v61 == *(_DWORD *)(v5 + 132))
                            goto LABEL_138;
                        }
                        *(_DWORD *)(v5 + 128) = v61 + 1;
                        *(_DWORD *)(v62 + 4 * v61) = v60;
                        v64 = *(_DWORD *)(v5 + 132) - *(_DWORD *)(v5 + 128);
                        if (v64 >= 1)
                        {
                          v65 = v64 + 1;
                          do
                          {
                            v68 = (_BYTE *)*((_QWORD *)this + 1);
                            v69 = *((_QWORD *)this + 2);
                            if ((unint64_t)v68 >= v69 || *v68 != 64)
                              break;
                            *((_QWORD *)this + 1) = v68 + 1;
                            v161[0] = 0;
                            if ((unint64_t)(v68 + 1) >= v69 || (char)v68[1] < 0)
                            {
                              result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v161);
                              if (!(_DWORD)result)
                                return result;
                              v66 = v161[0];
                              v62 = *v7;
                            }
                            else
                            {
                              v66 = v68[1];
                              *((_QWORD *)this + 1) = v68 + 2;
                            }
                            v67 = *(int *)(v5 + 128);
                            *(_DWORD *)(v5 + 128) = v67 + 1;
                            *(_DWORD *)(v62 + 4 * v67) = v66;
                            --v65;
                          }
                          while (v65 > 1);
                        }
LABEL_154:
                        v70 = (char *)*((_QWORD *)this + 1);
                        v22 = *((_QWORD *)this + 2);
                        if ((unint64_t)v70 >= v22)
                          break;
                        v71 = *v70;
                        if (v71 == 72)
                        {
                          while (1)
                          {
                            v24 = v70 + 1;
                            *((_QWORD *)this + 1) = v24;
LABEL_158:
                            v161[0] = 0;
                            if ((unint64_t)v24 >= v22 || *v24 < 0)
                            {
                              result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v161);
                              if (!(_DWORD)result)
                                return result;
                              v72 = v161[0];
                              v73 = *(_DWORD *)(v5 + 144);
                              v74 = *(_QWORD *)(v5 + 136);
                              if (v73 == *(_DWORD *)(v5 + 148))
                              {
LABEL_164:
                                if (2 * v73 <= v73 + 1)
                                  v75 = v73 + 1;
                                else
                                  v75 = 2 * v73;
                                if (v75 <= 4)
                                  v75 = 4;
                                *(_DWORD *)(v5 + 148) = v75;
                                operator new[]();
                              }
                            }
                            else
                            {
                              v72 = *v24;
                              *((_QWORD *)this + 1) = v24 + 1;
                              v73 = *(_DWORD *)(v5 + 144);
                              v74 = *(_QWORD *)(v5 + 136);
                              if (v73 == *(_DWORD *)(v5 + 148))
                                goto LABEL_164;
                            }
                            *(_DWORD *)(v5 + 144) = v73 + 1;
                            *(_DWORD *)(v74 + 4 * v73) = v72;
                            v76 = *(_DWORD *)(v5 + 148) - *(_DWORD *)(v5 + 144);
                            if (v76 >= 1)
                            {
                              v77 = v76 + 1;
                              do
                              {
                                v80 = (_BYTE *)*((_QWORD *)this + 1);
                                v81 = *((_QWORD *)this + 2);
                                if ((unint64_t)v80 >= v81 || *v80 != 72)
                                  break;
                                *((_QWORD *)this + 1) = v80 + 1;
                                v161[0] = 0;
                                if ((unint64_t)(v80 + 1) >= v81 || (char)v80[1] < 0)
                                {
                                  result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v161);
                                  if (!(_DWORD)result)
                                    return result;
                                  v78 = v161[0];
                                  v74 = *v6;
                                }
                                else
                                {
                                  v78 = v80[1];
                                  *((_QWORD *)this + 1) = v80 + 2;
                                }
                                v79 = *(int *)(v5 + 144);
                                *(_DWORD *)(v5 + 144) = v79 + 1;
                                *(_DWORD *)(v74 + 4 * v79) = v78;
                                --v77;
                              }
                              while (v77 > 1);
                            }
LABEL_180:
                            v70 = (char *)*((_QWORD *)this + 1);
                            v22 = *((_QWORD *)this + 2);
                            if ((unint64_t)v70 >= v22)
                              goto LABEL_2;
                            v82 = *v70;
                            if (v82 == 81)
                            {
                              while (1)
                              {
                                *((_QWORD *)this + 1) = v70 + 1;
LABEL_248:
                                *(_QWORD *)v161 = 0;
                                result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v161);
                                if ((result & 1) == 0)
                                  return 0;
                                v113 = *(_QWORD *)v161;
                                v114 = *(_DWORD *)(v5 + 160);
                                v115 = *(_QWORD *)(v5 + 152);
                                if (v114 == *(_DWORD *)(v5 + 164))
                                {
                                  if (2 * v114 <= v114 + 1)
                                    v116 = v114 + 1;
                                  else
                                    v116 = 2 * v114;
                                  if (v116 <= 4)
                                    v116 = 4;
                                  *(_DWORD *)(v5 + 164) = v116;
                                  operator new[]();
                                }
                                v117 = v114 + 1;
                                *(_DWORD *)(v5 + 160) = v114 + 1;
                                *(_QWORD *)(v115 + 8 * v114) = v113;
                                v118 = *((_QWORD *)this + 1);
                                v119 = *((_DWORD *)this + 4) - v118;
                                if (v119 >= 1)
                                {
                                  v120 = *(_DWORD *)(v5 + 164) - v117;
                                  v121 = v119 / 9u;
                                  if ((int)(v119 / 9u) >= v120)
                                    v121 = *(_DWORD *)(v5 + 164) - v117;
                                  if (v121 >= 1)
                                  {
                                    v122 = 0;
                                    v123 = v114 + 2;
                                    v124 = v115 + 8 * v117;
                                    v125 = ((*((_DWORD *)this + 4) - v118)
                                          * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
                                    if (v125 >= v120)
                                      LODWORD(v125) = v120;
                                    while (*(_BYTE *)v118 == 81)
                                    {
                                      v126 = *(_QWORD *)(v118 + 1);
                                      *(_DWORD *)(v5 + 160) = v123 + v122;
                                      *(_QWORD *)(v124 + 8 * v122++) = v126;
                                      v118 += 9;
                                      if ((_DWORD)v125 == (_DWORD)v122)
                                        goto LABEL_264;
                                    }
                                    v121 = v122;
                                    if ((_DWORD)v122)
LABEL_264:
                                      result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v121);
                                  }
                                }
LABEL_265:
                                v70 = (char *)*((_QWORD *)this + 1);
                                if ((unint64_t)v70 >= *((_QWORD *)this + 2))
                                  goto LABEL_2;
                                v127 = *v70;
                                if (v127 != 81)
                                {
                                  if (v127 == 89)
                                  {
                                    while (1)
                                    {
                                      *((_QWORD *)this + 1) = v70 + 1;
LABEL_272:
                                      *(_QWORD *)v161 = 0;
                                      result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v161);
                                      if ((result & 1) == 0)
                                        return 0;
                                      v128 = *(_QWORD *)v161;
                                      v129 = *(_DWORD *)(v5 + 176);
                                      v130 = *(_QWORD *)(v5 + 168);
                                      if (v129 == *(_DWORD *)(v5 + 180))
                                      {
                                        if (2 * v129 <= v129 + 1)
                                          v131 = v129 + 1;
                                        else
                                          v131 = 2 * v129;
                                        if (v131 <= 4)
                                          v131 = 4;
                                        *(_DWORD *)(v5 + 180) = v131;
                                        operator new[]();
                                      }
                                      v132 = v129 + 1;
                                      *(_DWORD *)(v5 + 176) = v129 + 1;
                                      *(_QWORD *)(v130 + 8 * v129) = v128;
                                      v133 = *((_QWORD *)this + 1);
                                      v134 = *((_DWORD *)this + 4) - v133;
                                      if (v134 >= 1)
                                      {
                                        v135 = *(_DWORD *)(v5 + 180) - v132;
                                        v136 = v134 / 9u;
                                        if ((int)(v134 / 9u) >= v135)
                                          v136 = *(_DWORD *)(v5 + 180) - v132;
                                        if (v136 >= 1)
                                        {
                                          v137 = 0;
                                          v138 = v129 + 2;
                                          v139 = v130 + 8 * v132;
                                          v140 = ((*((_DWORD *)this + 4) - v133)
                                                * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
                                          if (v140 >= v135)
                                            LODWORD(v140) = v135;
                                          while (*(_BYTE *)v133 == 89)
                                          {
                                            v141 = *(_QWORD *)(v133 + 1);
                                            *(_DWORD *)(v5 + 176) = v138 + v137;
                                            *(_QWORD *)(v139 + 8 * v137++) = v141;
                                            v133 += 9;
                                            if ((_DWORD)v140 == (_DWORD)v137)
                                              goto LABEL_288;
                                          }
                                          v136 = v137;
                                          if ((_DWORD)v137)
LABEL_288:
                                            result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v136);
                                        }
                                      }
LABEL_289:
                                      v70 = (char *)*((_QWORD *)this + 1);
                                      v25 = (char *)*((_QWORD *)this + 2);
                                      if (v70 >= v25)
                                        break;
                                      v142 = *v70;
                                      if (v142 != 89)
                                      {
                                        if (v142 == 96)
                                        {
                                          do
                                          {
                                            v26 = v70 + 1;
                                            *((_QWORD *)this + 1) = v26;
LABEL_296:
                                            *(_QWORD *)v161 = 0;
                                            if (v26 >= v25 || *v26 < 0)
                                            {
                                              result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)v161);
                                              if (!(_DWORD)result)
                                                return result;
                                              v143 = *(_QWORD *)v161;
                                              v144 = *(_DWORD *)(v5 + 192);
                                              v145 = *(_QWORD *)(v5 + 184);
                                              if (v144 == *(_DWORD *)(v5 + 196))
                                              {
LABEL_302:
                                                if (2 * v144 <= v144 + 1)
                                                  v146 = v144 + 1;
                                                else
                                                  v146 = 2 * v144;
                                                if (v146 <= 4)
                                                  v146 = 4;
                                                *(_DWORD *)(v5 + 196) = v146;
                                                operator new[]();
                                              }
                                            }
                                            else
                                            {
                                              v143 = *v26;
                                              *((_QWORD *)this + 1) = v26 + 1;
                                              v144 = *(_DWORD *)(v5 + 192);
                                              v145 = *(_QWORD *)(v5 + 184);
                                              if (v144 == *(_DWORD *)(v5 + 196))
                                                goto LABEL_302;
                                            }
                                            v147 = v144 + 1;
                                            *(_DWORD *)(v5 + 192) = v144 + 1;
                                            *(_QWORD *)(v145 + 8 * v144) = v143;
                                            v148 = *(_DWORD *)(v5 + 196);
                                            if (v148 - (v144 + 1) >= 1)
                                            {
                                              for (i = v148 - v144; i > 1; --i)
                                              {
                                                v151 = (_BYTE *)*((_QWORD *)this + 1);
                                                v152 = *((_QWORD *)this + 2);
                                                if ((unint64_t)v151 >= v152 || *v151 != 96)
                                                  break;
                                                *((_QWORD *)this + 1) = v151 + 1;
                                                *(_QWORD *)v161 = 0;
                                                if ((unint64_t)(v151 + 1) >= v152 || (char)v151[1] < 0)
                                                {
                                                  result = (uint64_t *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)v161);
                                                  if (!(_DWORD)result)
                                                    return result;
                                                  v150 = *(_QWORD *)v161;
                                                  v145 = *(_QWORD *)(v5 + 184);
                                                  v147 = *(_DWORD *)(v5 + 192);
                                                }
                                                else
                                                {
                                                  v150 = v151[1];
                                                  *((_QWORD *)this + 1) = v151 + 2;
                                                }
                                                *(_DWORD *)(v5 + 192) = v147 + 1;
                                                *(_QWORD *)(v145 + 8 * v147++) = v150;
                                              }
                                            }
LABEL_318:
                                            v70 = (char *)*((_QWORD *)this + 1);
                                            v25 = (char *)*((_QWORD *)this + 2);
                                          }
                                          while (v70 < v25 && *v70 == 96);
                                          if (v70 == v25
                                            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                                          {
                                            *((_DWORD *)this + 8) = 0;
                                            result = (uint64_t *)1;
                                            *((_BYTE *)this + 36) = 1;
                                            return result;
                                          }
                                        }
                                        goto LABEL_2;
                                      }
                                    }
                                  }
                                  goto LABEL_2;
                                }
                              }
                            }
                            if (v82 != 72)
                              goto LABEL_2;
                          }
                        }
                        if (v71 != 64)
                          goto LABEL_2;
                      }
                    }
                    goto LABEL_2;
                  }
                }
                goto LABEL_2;
              }
            }
          }
          continue;
        }
        return 0;
      case 4u:
        v12 = v11 & 7;
        if (v12 == 1)
          goto LABEL_185;
        if (v12 != 2)
          goto LABEL_48;
        result = (uint64_t *)sub_10010620C(this, v155);
        if (!(_DWORD)result)
          return result;
        goto LABEL_202;
      case 5u:
        v12 = v11 & 7;
        if (v12 != 2)
          goto LABEL_48;
        v16 = *(_DWORD *)(v5 + 92);
        v17 = *(int *)(v5 + 88);
        if ((int)v17 < v16)
          goto LABEL_25;
        goto LABEL_209;
      case 6u:
        v12 = v11 & 7;
        if (v12 == 2)
        {
          result = (uint64_t *)sub_1002DDB50(this, v156);
          if (!(_DWORD)result)
            return result;
          goto LABEL_240;
        }
        if ((v11 & 7) != 0)
          goto LABEL_48;
        v21 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_217;
      case 7u:
        v12 = v11 & 7;
        if (v12 == 1)
          goto LABEL_243;
        goto LABEL_48;
      case 8u:
        v12 = v11 & 7;
        if (v12 == 2)
        {
          result = (uint64_t *)sub_1002DD9B4(this, v7);
          if (!(_DWORD)result)
            return result;
          goto LABEL_154;
        }
        if ((v11 & 7) != 0)
          goto LABEL_48;
        v23 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_132;
      case 9u:
        v12 = v11 & 7;
        if (v12 == 2)
        {
          result = (uint64_t *)sub_1002DD9B4(this, v6);
          if (!(_DWORD)result)
            return result;
          goto LABEL_180;
        }
        if ((v11 & 7) != 0)
          goto LABEL_48;
        v24 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_158;
      case 0xAu:
        v12 = v11 & 7;
        if (v12 == 1)
          goto LABEL_248;
        if (v12 != 2)
          goto LABEL_48;
        result = (uint64_t *)sub_10010620C(this, v157);
        if (!(_DWORD)result)
          return result;
        goto LABEL_265;
      case 0xBu:
        v12 = v11 & 7;
        if (v12 == 1)
          goto LABEL_272;
        if (v12 != 2)
          goto LABEL_48;
        result = (uint64_t *)sub_10010620C(this, v158);
        if (!(_DWORD)result)
          return result;
        goto LABEL_289;
      case 0xCu:
        v12 = v11 & 7;
        if (v12 == 2)
        {
          result = (uint64_t *)sub_1002DDCF4(this, v159);
          if (!(_DWORD)result)
            return result;
          goto LABEL_318;
        }
        if ((v11 & 7) != 0)
          goto LABEL_48;
        v26 = (char *)*((_QWORD *)this + 1);
        v25 = (char *)*((_QWORD *)this + 2);
        goto LABEL_296;
      default:
        v12 = v11 & 7;
        goto LABEL_48;
    }
  }
}

uint64_t sub_1002DD9B4(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  char *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;

  v13 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!(_DWORD)result)
      return result;
    v5 = v13;
  }
  else
  {
    v5 = *v4;
    v13 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v14 = 0;
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
        if (!(_DWORD)result)
          return result;
        v9 = v14;
        v10 = *((_DWORD *)a2 + 2);
        v11 = *a2;
        if (v10 == *((_DWORD *)a2 + 3))
        {
LABEL_15:
          if (2 * v10 <= v10 + 1)
            v12 = v10 + 1;
          else
            v12 = 2 * v10;
          if (v12 <= 4)
            v12 = 4;
          *((_DWORD *)a2 + 3) = v12;
          operator new[]();
        }
      }
      else
      {
        v9 = *v8;
        *((_QWORD *)this + 1) = v8 + 1;
        v10 = *((_DWORD *)a2 + 2);
        v11 = *a2;
        if (v10 == *((_DWORD *)a2 + 3))
          goto LABEL_15;
      }
      *((_DWORD *)a2 + 2) = v10 + 1;
      *(_DWORD *)(v11 + 4 * v10) = v9;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_1002DDB50(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  char *v8;
  int v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;

  v15 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
    if (!(_DWORD)result)
      return result;
    v5 = v15;
  }
  else
  {
    v5 = *v4;
    v15 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v16 = 0;
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || (v9 = *v8, v9 < 0))
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!(_DWORD)result)
          return result;
        v10 = v16 != 0;
        v11 = *((_DWORD *)a2 + 2);
        v12 = *a2;
        if (v11 == *((_DWORD *)a2 + 3))
        {
LABEL_15:
          if (2 * v11 <= v11 + 1)
            v13 = v11 + 1;
          else
            v13 = 2 * v11;
          if (v13 <= 4)
            v14 = 4;
          else
            v14 = v13;
          *((_DWORD *)a2 + 3) = v14;
          operator new[]();
        }
      }
      else
      {
        *((_QWORD *)this + 1) = v8 + 1;
        v10 = v9 != 0;
        v11 = *((_DWORD *)a2 + 2);
        v12 = *a2;
        if (v11 == *((_DWORD *)a2 + 3))
          goto LABEL_15;
      }
      *((_DWORD *)a2 + 2) = v11 + 1;
      *(_BYTE *)(v12 + v11) = v10;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_1002DDCF4(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  char *v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unint64_t v14;

  v13 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!(_DWORD)result)
      return result;
    v5 = v13;
  }
  else
  {
    v5 = *v4;
    v13 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v14 = 0;
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v14);
        if (!(_DWORD)result)
          return result;
        v9 = v14;
        v10 = *((_DWORD *)a2 + 2);
        v11 = *a2;
        if (v10 == *((_DWORD *)a2 + 3))
        {
LABEL_15:
          if (2 * v10 <= v10 + 1)
            v12 = v10 + 1;
          else
            v12 = 2 * v10;
          if (v12 <= 4)
            v12 = 4;
          *((_DWORD *)a2 + 3) = v12;
          operator new[]();
        }
      }
      else
      {
        v9 = *v8;
        *((_QWORD *)this + 1) = v8 + 1;
        v10 = *((_DWORD *)a2 + 2);
        v11 = *a2;
        if (v10 == *((_DWORD *)a2 + 3))
          goto LABEL_15;
      }
      *((_DWORD *)a2 + 2) = v10 + 1;
      *(_QWORD *)(v11 + 8 * v10) = v9;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_1002DDE90(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v18;
  _QWORD *v19;

  v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a3);
    while (v6 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(*(_QWORD *)(v5 + 32) + 4 * v7++), (int)a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v8++), (int)a2, a4);
    while (v8 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 72) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(*(_QWORD *)(v5 + 64) + 8 * v9++), a3);
    while (v9 < *(int *)(v5 + 72));
  }
  if (*(int *)(v5 + 88) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(5, *(_QWORD *)(*(_QWORD *)(v5 + 80) + 8 * v10++), a2);
    while (v10 < *(int *)(v5 + 88));
  }
  if (*(int *)(v5 + 112) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(*(_QWORD *)(v5 + 104) + v11++), (BOOL)a2, a4);
    while (v11 < *(int *)(v5 + 112));
  }
  if ((*(_BYTE *)(v5 + 213) & 8) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 200), a3);
  if (*(int *)(v5 + 128) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(*(_QWORD *)(v5 + 120) + 4 * v12++), (int)a2, a4);
    while (v12 < *(int *)(v5 + 128));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(*(_QWORD *)(v5 + 136) + 4 * v13++), (int)a2, a4);
    while (v13 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 160) >= 1)
  {
    v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(*(_QWORD *)(v5 + 152) + 8 * v14++), a3);
    while (v14 < *(int *)(v5 + 160));
  }
  if (*(int *)(v5 + 176) >= 1)
  {
    v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(*(_QWORD *)(v5 + 168) + 8 * v15++), a3);
    while (v15 < *(int *)(v5 + 176));
  }
  if (*(int *)(v5 + 192) >= 1)
  {
    v16 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_QWORD *)(*(_QWORD *)(v5 + 184) + 8 * v16++), (uint64_t)a2, a4);
    while (v16 < *(int *)(v5 + 192));
  }
  v19 = *(_QWORD **)(v5 + 8);
  v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v17 = v19;
  if (v19)
  {
    if (*v17 != v17[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v18, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002DE138(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  char *v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  int v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  const void *v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  char *v28;
  uint64_t v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  _QWORD *v38;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v39;
  _QWORD *v40;

  if (*((int *)this + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * v6);
      *(_BYTE *)a2 = 9;
      *(_QWORD *)((char *)a2 + 1) = v7;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  if (*((int *)this + 10) >= 1)
  {
    v8 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 4) + 4 * v8);
          *(_BYTE *)a2 = 16;
          v10 = (char *)a2 + 1;
          if ((v9 & 0x80000000) == 0)
            break;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, (unint64_t)v10, a3);
          if (++v8 >= *((int *)this + 10))
            goto LABEL_12;
        }
        if (v9 > 0x7F)
          break;
        *((_BYTE *)a2 + 1) = (_BYTE)v9;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (++v8 >= *((int *)this + 10))
          goto LABEL_12;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
      ++v8;
    }
    while (v8 < *((int *)this + 10));
  }
LABEL_12:
  if (*((int *)this + 14) >= 1)
  {
    v11 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 6) + 4 * v11);
          *(_BYTE *)a2 = 24;
          v13 = (char *)a2 + 1;
          if ((v12 & 0x80000000) == 0)
            break;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, (unint64_t)v13, a3);
          if (++v11 >= *((int *)this + 14))
            goto LABEL_20;
        }
        if (v12 > 0x7F)
          break;
        *((_BYTE *)a2 + 1) = (_BYTE)v12;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (++v11 >= *((int *)this + 14))
          goto LABEL_20;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v13, a3);
      ++v11;
    }
    while (v11 < *((int *)this + 14));
  }
LABEL_20:
  if (*((int *)this + 18) >= 1)
  {
    v14 = 0;
    do
    {
      v15 = *(_QWORD *)(*((_QWORD *)this + 8) + 8 * v14);
      *(_BYTE *)a2 = 33;
      *(_QWORD *)((char *)a2 + 1) = v15;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v14;
    }
    while (v14 < *((int *)this + 18));
  }
  if (*((int *)this + 22) >= 1)
  {
    for (i = 0; i < *((int *)this + 22); ++i)
    {
      v21 = *(_QWORD *)(*((_QWORD *)this + 10) + 8 * i);
      *(_BYTE *)a2 = 42;
      if (*(char *)(v21 + 23) < 0)
      {
        v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v21 + 8);
        if (v22 <= 0x7F)
        {
LABEL_37:
          *((_BYTE *)a2 + 1) = (_BYTE)v22;
          v17 = (_DWORD)a2 + 2;
          goto LABEL_26;
        }
      }
      else
      {
        v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v21 + 23);
        if (*(unsigned __int8 *)(v21 + 23) <= 0x7Fu)
          goto LABEL_37;
      }
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)a2 + 1, a3);
LABEL_26:
      v18 = *(char *)(v21 + 23);
      if (v18 >= 0)
        v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21;
      else
        v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v21;
      if (v18 >= 0)
        v20 = (const void *)*(unsigned __int8 *)(v21 + 23);
      else
        v20 = (const void *)*(unsigned int *)(v21 + 8);
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v19, v20, v17, a4);
    }
  }
  if (*((int *)this + 28) >= 1)
  {
    v23 = 0;
    do
    {
      v24 = *(_BYTE *)(*((_QWORD *)this + 13) + v23);
      *(_BYTE *)a2 = 48;
      *((_BYTE *)a2 + 1) = v24;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      ++v23;
    }
    while (v23 < *((int *)this + 28));
  }
  if ((*((_BYTE *)this + 213) & 8) != 0)
  {
    v25 = *((_QWORD *)this + 25);
    *(_BYTE *)a2 = 57;
    *(_QWORD *)((char *)a2 + 1) = v25;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
  }
  if (*((int *)this + 32) >= 1)
  {
    v26 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 15)
                                                                                        + 4 * v26);
          *(_BYTE *)a2 = 64;
          v28 = (char *)a2 + 1;
          if ((v27 & 0x80000000) == 0)
            break;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v27, (unint64_t)v28, a3);
          if (++v26 >= *((int *)this + 32))
            goto LABEL_51;
        }
        if (v27 > 0x7F)
          break;
        *((_BYTE *)a2 + 1) = (_BYTE)v27;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (++v26 >= *((int *)this + 32))
          goto LABEL_51;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, v28, a3);
      ++v26;
    }
    while (v26 < *((int *)this + 32));
  }
LABEL_51:
  if (*((int *)this + 36) >= 1)
  {
    v29 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 17)
                                                                                        + 4 * v29);
          *(_BYTE *)a2 = 72;
          v31 = (char *)a2 + 1;
          if ((v30 & 0x80000000) == 0)
            break;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v30, (unint64_t)v31, a3);
          if (++v29 >= *((int *)this + 36))
            goto LABEL_59;
        }
        if (v30 > 0x7F)
          break;
        *((_BYTE *)a2 + 1) = (_BYTE)v30;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (++v29 >= *((int *)this + 36))
          goto LABEL_59;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v30, v31, a3);
      ++v29;
    }
    while (v29 < *((int *)this + 36));
  }
LABEL_59:
  if (*((int *)this + 40) >= 1)
  {
    v32 = 0;
    do
    {
      v33 = *(_QWORD *)(*((_QWORD *)this + 19) + 8 * v32);
      *(_BYTE *)a2 = 81;
      *(_QWORD *)((char *)a2 + 1) = v33;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v32;
    }
    while (v32 < *((int *)this + 40));
  }
  if (*((int *)this + 44) >= 1)
  {
    v34 = 0;
    do
    {
      v35 = *(_QWORD *)(*((_QWORD *)this + 21) + 8 * v34);
      *(_BYTE *)a2 = 89;
      *(_QWORD *)((char *)a2 + 1) = v35;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v34;
    }
    while (v34 < *((int *)this + 44));
  }
  if (*((int *)this + 48) >= 1)
  {
    v36 = 0;
    do
    {
      v37 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)this + 23) + 8 * v36);
      *(_BYTE *)a2 = 96;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v37, (unint64_t)a2 + 1, a3);
      ++v36;
    }
    while (v36 < *((int *)this + 48));
  }
  v40 = (_QWORD *)*((_QWORD *)this + 1);
  v39 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v38 = v40;
  if (!v40 || *v38 == v38[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v39, a2, a3);
}

uint64_t sub_1002DE6AC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  uint64_t i;
  int v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  _QWORD *v43;
  int v45;

  v3 = *(unsigned __int8 *)(a1 + 213) << 28;
  v4 = *(_DWORD *)(a1 + 24);
  v5 = *(_DWORD *)(a1 + 40);
  if (v5 < 1)
  {
    v7 = 0;
  }
  else
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 32)
                                                                                            + 4 * v6);
      if ((v9 & 0x80000000) != 0)
      {
        v8 = 10;
      }
      else if (v9 >= 0x80)
      {
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
        v5 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        v8 = 1;
      }
      v7 += v8;
      ++v6;
    }
    while (v6 < v5);
  }
  v10 = (v3 >> 31) & 9;
  v11 = *(_DWORD *)(a1 + 56);
  if (v11 < 1)
  {
    v13 = 0;
  }
  else
  {
    v12 = 0;
    v13 = 0;
    do
    {
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 48)
                                                                                             + 4 * v12);
      if ((v15 & 0x80000000) != 0)
      {
        v14 = 10;
      }
      else if (v15 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
        v11 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        v14 = 1;
      }
      v13 += v14;
      ++v12;
    }
    while (v12 < v11);
  }
  v16 = *(_DWORD *)(a1 + 88);
  v17 = v7 + v10 + v11 + v5 + v13 + v16 + 9 * (*(_DWORD *)(a1 + 72) + v4);
  if (v16 >= 1)
  {
    for (i = 0; i < v16; ++i)
    {
      v23 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8 * i);
      v20 = *(unsigned __int8 *)(v23 + 23);
      v22 = v20;
      v21 = *(_QWORD *)(v23 + 8);
      if ((v20 & 0x80u) == 0)
        v24 = *(unsigned __int8 *)(v23 + 23);
      else
        v24 = v21;
      if (v24 >= 0x80)
      {
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24, a2);
        v20 = *(unsigned __int8 *)(v23 + 23);
        v21 = *(_QWORD *)(v23 + 8);
        v16 = *(_DWORD *)(a1 + 88);
        v22 = *(_BYTE *)(v23 + 23);
      }
      else
      {
        v19 = 1;
      }
      if (v22 < 0)
        v20 = v21;
      v17 += v19 + v20;
    }
  }
  v25 = *(_DWORD *)(a1 + 112);
  v26 = *(_DWORD *)(a1 + 128);
  if (v26 < 1)
  {
    v28 = 0;
  }
  else
  {
    v27 = 0;
    v28 = 0;
    do
    {
      v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 120)
                                                                                             + 4 * v27);
      if ((v30 & 0x80000000) != 0)
      {
        v29 = 10;
      }
      else if (v30 >= 0x80)
      {
        v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
        v26 = *(_DWORD *)(a1 + 128);
      }
      else
      {
        v29 = 1;
      }
      v28 += v29;
      ++v27;
    }
    while (v27 < v26);
  }
  v31 = *(_DWORD *)(a1 + 144);
  if (v31 < 1)
  {
    v33 = 0;
  }
  else
  {
    v32 = 0;
    v33 = 0;
    do
    {
      v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 136)
                                                                                             + 4 * v32);
      if ((v35 & 0x80000000) != 0)
      {
        v34 = 10;
      }
      else if (v35 >= 0x80)
      {
        v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
        v31 = *(_DWORD *)(a1 + 144);
      }
      else
      {
        v34 = 1;
      }
      v33 += v34;
      ++v32;
    }
    while (v32 < v31);
  }
  v36 = 2 * v25;
  v37 = *(_DWORD *)(a1 + 160);
  v38 = *(_DWORD *)(a1 + 176);
  LODWORD(v39) = *(_DWORD *)(a1 + 192);
  if ((int)v39 < 1)
  {
    v41 = 0;
  }
  else
  {
    v45 = 2 * v25;
    v40 = 0;
    v41 = 0;
    do
    {
      v41 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*(_QWORD *)(a1 + 184) + 8 * v40++), (unint64_t)a2);
      v39 = *(int *)(a1 + 192);
    }
    while (v40 < v39);
    v36 = v45;
  }
  v42 = (v36 + v17 + v28 + v26 + v33 + v31 + v39 + 9 * (v38 + v37) + v41);
  v43 = *(_QWORD **)(a1 + 8);
  if (v43 && *v43 != v43[1])
    v42 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v42;
  *(_DWORD *)(a1 + 208) = v42;
  return v42;
}

uint64_t sub_1002DE9A0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 2298);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002DBA7C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002DEA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DEA68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DEA7C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002DEAC4()
{
  return 1;
}

uint64_t sub_1002DEACC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A190;
}

void sub_1002DEB40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DEB54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 2583);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    sub_1002E3BEC((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(_BYTE *)(a2 + 52) & 1) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  else
  {
    sub_1002E3BEC((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(_BYTE *)(a2 + 52) & 1) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  *(_DWORD *)(a1 + 52) |= 1u;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    operator new();
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
    v6 = *(_QWORD *)(qword_10042EA08 + 16);
  sub_100095DF8(v5, v6);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002DEC88()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002DECB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DECC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DECD8(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;

  *(_QWORD *)a1 = off_1004033B0;
  if (qword_10042EA08 != a1)
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (i = 0; i < v3; ++i)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
        v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(_QWORD *)(a1 + 24))
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1002DED8C(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;

  *(_QWORD *)a1 = off_1004033B0;
  if (qword_10042EA08 != a1)
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (i = 0; i < v3; ++i)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
        v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(_QWORD *)(a1 + 24))
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1002DEE54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1002DEE5C()
{
  operator new();
}

void sub_1002DEEB4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002DEEDC(uint64_t this)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0)
  {
    this = *(_QWORD *)(this + 16);
    if (this)
    {
      v2 = *(_BYTE *)(this + 32);
      if (!v2
        || (*(_DWORD *)(this + 24) = 1, (v2 & 2) == 0)
        || (v3 = *(_QWORD *)(this + 16),
            (_UNKNOWN *)v3 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
      {
LABEL_8:
        v4 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 24) = 0;
        if (!v4)
          goto LABEL_10;
        goto LABEL_9;
      }
      if ((*(char *)(v3 + 23) & 0x80000000) == 0)
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
        goto LABEL_8;
      }
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
      v9 = *(_QWORD *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 24) = 0;
      if (v9)
LABEL_9:
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
    }
  }
LABEL_10:
  if (*(int *)(v1 + 32) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 32));
  }
  v8 = *(_QWORD *)(v1 + 8);
  v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v7 + 6) = 0;
  *((_DWORD *)v7 + 11) = 0;
  if (v8)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  return this;
}

uint64_t sub_1002DEFC0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  char *v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v31;
  int v32;
  int v33;
  _BYTE *v34;
  uint64_t result;
  unsigned int v36;
  unsigned int v37;

  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v8 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v10 = TagFallback & 7;
      if (v10 != 2)
        goto LABEL_19;
      *(_DWORD *)(a1 + 52) |= 1u;
      v15 = *(_QWORD *)(a1 + 16);
      if (!v15)
        operator new();
      v36 = 0;
      v16 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0;
      }
      else
      {
        v36 = *v16;
        *((_QWORD *)this + 1) = v16 + 1;
      }
      v17 = *((_DWORD *)this + 14);
      v18 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v17 + 1;
      if (v17 >= v18)
        return 0;
      v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
      if (!sub_100091030(v15, this, v20, v21) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
      v22 = *((_DWORD *)this + 14);
      v23 = __OFSUB__(v22, 1);
      v24 = v22 - 1;
      if (v24 < 0 == v23)
        *((_DWORD *)this + 14) = v24;
      v25 = (_BYTE *)*((_QWORD *)this + 1);
      if ((unint64_t)v25 < *((_QWORD *)this + 2) && *v25 == 18)
      {
        do
        {
          *((_QWORD *)this + 1) = v25 + 1;
          v11 = *(_DWORD *)(a1 + 36);
          v12 = *(int *)(a1 + 32);
          if ((int)v12 >= v11)
            goto LABEL_31;
LABEL_11:
          v13 = *(_QWORD *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v12 + 1;
          v14 = *(uint64_t **)(v13 + 8 * v12);
          v37 = 0;
          v26 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v26 >= *((_QWORD *)this + 2) || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0;
          }
          else
          {
            v37 = *v26;
            *((_QWORD *)this + 1) = v26 + 1;
          }
          v27 = *((_DWORD *)this + 14);
          v28 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v27 + 1;
          if (v27 >= v28)
            return 0;
          v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_1002DC644(v14, this, v30, v31) || !*((_BYTE *)this + 36))
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
          v32 = *((_DWORD *)this + 14);
          v23 = __OFSUB__(v32, 1);
          v33 = v32 - 1;
          if (v33 < 0 == v23)
            *((_DWORD *)this + 14) = v33;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v34 = (_BYTE *)*((_QWORD *)this + 2);
        }
        while (v25 < v34 && *v25 == 18);
        if (v25 == v34 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v10 = TagFallback & 7;
      if (v10 == 2)
      {
        v11 = *(_DWORD *)(a1 + 36);
        v12 = *(int *)(a1 + 32);
        if ((int)v12 < v11)
          goto LABEL_11;
LABEL_31:
        if (v11 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v11 + 1);
          v11 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v11 + 1;
        operator new();
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
}

void sub_1002DF368()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002DF390()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002DF3B8(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  v5 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10042EA08 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  v10 = *(_QWORD **)(v5 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002DF468(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  unsigned int *v6;
  unsigned int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v11;
  unsigned int *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  _QWORD *v14;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v15;
  _QWORD *v16;

  v4 = a2;
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v6 = (unsigned int *)*((_QWORD *)this + 2);
    if (v6)
    {
      *(_BYTE *)a2 = 10;
      v7 = (_DWORD)a2 + 1;
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
      if (v8 <= 0x7F)
      {
LABEL_4:
        *((_BYTE *)v4 + 1) = (_BYTE)v8;
        v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_7:
        v4 = sub_1002DA02C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3, a4);
        goto LABEL_8;
      }
    }
    else
    {
      v6 = *(unsigned int **)(qword_10042EA08 + 16);
      *(_BYTE *)a2 = 10;
      v7 = (_DWORD)a2 + 1;
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
      if (v8 <= 0x7F)
        goto LABEL_4;
    }
    v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    v10 = 0;
    do
    {
      v12 = *(unsigned int **)(*((_QWORD *)this + 3) + 8 * v10);
      *(_BYTE *)v4 = 18;
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12[52];
      if (v13 > 0x7F)
      {
        v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v13;
        v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      v4 = sub_1002DE138((wireless_diagnostics::google::protobuf::internal::WireFormat *)v12, v11, a3, a4);
      ++v10;
    }
    while (v10 < *((int *)this + 8));
  }
  v16 = (_QWORD *)*((_QWORD *)this + 1);
  v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v14 = v16;
  if (!v16 || *v14 == v14[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v4, a3);
}

uint64_t sub_1002DF590(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  _QWORD *v13;

  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v5 = *(_QWORD *)(a1 + 16);
    if (v5)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002DA150(v5, a2);
      if (v6 < 0x80)
      {
LABEL_6:
        v7 = 1;
        goto LABEL_9;
      }
    }
    else
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002DA150(*(_QWORD *)(qword_10042EA08 + 16), a2);
      if (v6 < 0x80)
        goto LABEL_6;
    }
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
LABEL_9:
    v8 = *(_DWORD *)(a1 + 32);
    v4 = (v8 + (_DWORD)v6 + v7 + 1);
    if (v8 < 1)
      goto LABEL_15;
    goto LABEL_10;
  }
  v3 = *(_DWORD *)(a1 + 32);
  v4 = v3;
  if (v3 < 1)
    goto LABEL_15;
LABEL_10:
  v9 = 0;
  do
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002DE6AC(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * v9), a2);
    v12 = (int)v11;
    if (v11 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    else
      v10 = 1;
    v4 = (v12 + v4 + v10);
    ++v9;
  }
  while (v9 < *(int *)(a1 + 32));
LABEL_15:
  v13 = *(_QWORD **)(a1 + 8);
  if (v13 && *v13 != v13[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

uint64_t sub_1002DF6A0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 2571);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002DEB54((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002DF754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DF768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DF77C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002DF7C4(uint64_t a1)
{
  uint64_t v2;

  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
    return 0;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  else
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(qword_10042EA08 + 16) + 40))(*(_QWORD *)(qword_10042EA08 + 16));
}

uint64_t sub_1002DF800()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A1A0;
}

void sub_1002DF874(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002DF888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::string *v5;
  uint64_t v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  const std::string *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  char v25;
  _BYTE v26[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v26, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 2890);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v25, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    v6 = 0;
    do
    {
      while (1)
      {
        v10 = *(const std::string **)(*(_QWORD *)(a2 + 16) + 8 * v6);
        v11 = *(_DWORD *)(a1 + 28);
        v12 = *(int *)(a1 + 24);
        if ((int)v12 >= v11)
          break;
        v13 = *(_QWORD *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v12 + 1;
        v5 = std::string::operator=(*(std::string **)(v13 + 8 * v12), v10);
        if (++v6 >= *(int *)(a2 + 24))
          goto LABEL_11;
      }
      if (v11 == *(_DWORD *)(a1 + 32))
      {
        v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v11 + 1);
        v11 = *(_DWORD *)(a1 + 28);
      }
      *(_DWORD *)(a1 + 28) = v11 + 1;
      v7 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v5);
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(int *)(a1 + 24);
      *(_DWORD *)(a1 + 24) = v9 + 1;
      *(_QWORD *)(v8 + 8 * v9) = v7;
      v5 = std::string::operator=(v7, v10);
      ++v6;
    }
    while (v6 < *(int *)(a2 + 24));
  }
LABEL_11:
  v14 = *(_DWORD *)(a2 + 48);
  if (v14)
  {
    v15 = *(_DWORD *)(a1 + 48);
    v16 = *(_DWORD *)(a1 + 52);
    v17 = v15 + v14;
    if (v16 < v17)
    {
      v18 = 2 * v16;
      if (2 * v16 <= v17)
        v18 = v17;
      if (v18 <= 4)
        v18 = 4;
      *(_DWORD *)(a1 + 52) = v18;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 40) + 8 * v15), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  v19 = *(_DWORD *)(a2 + 64);
  if (v19)
  {
    v20 = *(_DWORD *)(a1 + 64);
    v21 = *(_DWORD *)(a1 + 68);
    v22 = v20 + v19;
    if (v21 < v22)
    {
      v23 = 2 * v21;
      if (2 * v21 <= v22)
        v23 = v22;
      if (v23 <= 4)
        v23 = 4;
      *(_DWORD *)(a1 + 68) = v23;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 56) + 8 * v20), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002DFB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DFB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002DFB70(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_100403460;
  if (*(_QWORD *)(a1 + 56))
    operator delete[]();
  if (*(_QWORD *)(a1 + 40))
    operator delete[]();
  if (*(int *)(a1 + 28) >= 1)
  {
    v2 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete(*(_QWORD *)(*(_QWORD *)(a1 + 16)
                                                                                                + 8 * v2++));
    while (v2 < *(int *)(a1 + 28));
  }
  if (*(_QWORD *)(a1 + 16))
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1002DFC2C(uint64_t a1)
{
  sub_1002DFB70(a1);
  operator delete();
}

uint64_t sub_1002DFC50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_1002DFC58()
{
  operator new();
}

void sub_1002DFCB8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002DFCE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;

  if (*(int *)(a1 + 24) >= 1)
  {
    v1 = 0;
    do
    {
      while (1)
      {
        v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v1);
        if (*(char *)(v2 + 23) < 0)
          break;
        *(_BYTE *)v2 = 0;
        *(_BYTE *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 24))
          goto LABEL_6;
      }
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 24));
  }
LABEL_6:
  v4 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 14) = 0;
  *((_DWORD *)result + 17) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002DFD58(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v8;
  unsigned int v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v11;
  unsigned int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  signed int v29;
  signed int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  signed int v44;
  signed int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  unint64_t v52;

  v5 = result;
  v6 = (uint64_t *)(result + 56);
  v7 = (uint64_t *)(result + 40);
  v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 16);
  v9 = result + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        v10 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
          *((_DWORD *)this + 8) = result;
          if (!(_DWORD)result)
            return 1;
        }
        else
        {
          v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
          *((_DWORD *)this + 8) = (_DWORD)v11;
          *((_QWORD *)this + 1) = v10 + 1;
          if (!(_DWORD)v11)
            return 1;
        }
        v12 = v11 >> 3;
        if (v11 >> 3 != 1)
          break;
        v13 = v11 & 7;
        if (v13 != 2)
          goto LABEL_30;
        v14 = *(_DWORD *)(v5 + 28);
        v15 = *(int *)(v5 + 24);
        if ((int)v15 < v14)
          goto LABEL_16;
        while (1)
        {
          if (v14 == *(_DWORD *)(v5 + 32))
          {
            result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v14 + 1);
            v14 = *(_DWORD *)(v5 + 28);
          }
          *(_DWORD *)(v5 + 28) = v14 + 1;
          v17 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
          v18 = *(_QWORD *)(v5 + 16);
          v19 = *(int *)(v5 + 24);
          *(_DWORD *)(v5 + 24) = v19 + 1;
          *(_QWORD *)(v18 + 8 * v19) = v17;
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v17);
          if (!(_DWORD)result)
            return result;
LABEL_21:
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v20 >= *((_QWORD *)this + 2))
            break;
          v21 = *v20;
          if (v21 != 10)
          {
            if (v21 != 17)
              goto LABEL_2;
            goto LABEL_34;
          }
          *((_QWORD *)this + 1) = v20 + 1;
          v14 = *(_DWORD *)(v5 + 28);
          v15 = *(int *)(v5 + 24);
          if ((int)v15 < v14)
          {
LABEL_16:
            v16 = *(_QWORD *)(v5 + 16);
            *(_DWORD *)(v5 + 24) = v15 + 1;
            result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, *(_QWORD *)(v16 + 8 * v15));
            if (!(_DWORD)result)
              return result;
            goto LABEL_21;
          }
        }
      }
      if (v12 != 2)
        break;
      v13 = v11 & 7;
      if (v13 == 1)
      {
        while (1)
        {
          v52 = 0;
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v52);
          if ((result & 1) == 0)
            return 0;
          v22 = v52;
          v23 = *(_DWORD *)(v5 + 48);
          v24 = *(_QWORD *)(v5 + 40);
          if (v23 == *(_DWORD *)(v5 + 52))
          {
            if (2 * v23 <= v23 + 1)
              v25 = v23 + 1;
            else
              v25 = 2 * v23;
            if (v25 <= 4)
              v25 = 4;
            *(_DWORD *)(v5 + 52) = v25;
            operator new[]();
          }
          v26 = v23 + 1;
          *(_DWORD *)(v5 + 48) = v23 + 1;
          *(_QWORD *)(v24 + 8 * v23) = v22;
          v27 = *((_QWORD *)this + 1);
          v28 = *((_DWORD *)this + 4) - v27;
          if (v28 >= 1)
          {
            v29 = *(_DWORD *)(v5 + 52) - v26;
            v30 = v28 / 9u;
            if ((int)(v28 / 9u) >= v29)
              v30 = *(_DWORD *)(v5 + 52) - v26;
            if (v30 >= 1)
            {
              v31 = 0;
              v32 = v23 + 2;
              v33 = v24 + 8 * v26;
              v34 = ((*((_DWORD *)this + 4) - v27) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
              if (v34 >= v29)
                LODWORD(v34) = v29;
              while (*(_BYTE *)v27 == 17)
              {
                v35 = *(_QWORD *)(v27 + 1);
                *(_DWORD *)(v5 + 48) = v32 + v31;
                *(_QWORD *)(v33 + 8 * v31++) = v35;
                v27 += 9;
                if ((_DWORD)v34 == (_DWORD)v31)
                  goto LABEL_51;
              }
              v30 = v31;
              if ((_DWORD)v31)
LABEL_51:
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v30);
            }
          }
LABEL_52:
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v20 >= *((_QWORD *)this + 2))
            break;
          v36 = *v20;
          if (v36 != 17)
          {
            if (v36 == 25)
              goto LABEL_58;
            goto LABEL_2;
          }
LABEL_34:
          *((_QWORD *)this + 1) = v20 + 1;
        }
      }
      else
      {
        if (v13 == 2)
        {
          result = sub_10010620C(this, v7);
          if (!(_DWORD)result)
            return result;
          goto LABEL_52;
        }
LABEL_30:
        if (v13 == 4)
          return 1;
        result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v11, v9, a4);
        if ((result & 1) == 0)
          return 0;
      }
    }
    if (v12 != 3)
    {
      v13 = v11 & 7;
      goto LABEL_30;
    }
    v13 = v11 & 7;
    if (v13 != 1)
      break;
    while (1)
    {
      v52 = 0;
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v52);
      if ((result & 1) == 0)
        return 0;
      v37 = v52;
      v38 = *(_DWORD *)(v5 + 64);
      v39 = *(_QWORD *)(v5 + 56);
      if (v38 == *(_DWORD *)(v5 + 68))
      {
        if (2 * v38 <= v38 + 1)
          v40 = v38 + 1;
        else
          v40 = 2 * v38;
        if (v40 <= 4)
          v40 = 4;
        *(_DWORD *)(v5 + 68) = v40;
        operator new[]();
      }
      v41 = v38 + 1;
      *(_DWORD *)(v5 + 64) = v38 + 1;
      *(_QWORD *)(v39 + 8 * v38) = v37;
      v42 = *((_QWORD *)this + 1);
      v43 = *((_DWORD *)this + 4) - v42;
      if (v43 >= 1)
      {
        v44 = *(_DWORD *)(v5 + 68) - v41;
        v45 = v43 / 9u;
        if ((int)(v43 / 9u) >= v44)
          v45 = *(_DWORD *)(v5 + 68) - v41;
        if (v45 >= 1)
        {
          v46 = 0;
          v47 = v38 + 2;
          v48 = v39 + 8 * v41;
          v49 = ((*((_DWORD *)this + 4) - v42) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
          if (v49 >= v44)
            LODWORD(v49) = v44;
          while (*(_BYTE *)v42 == 25)
          {
            v50 = *(_QWORD *)(v42 + 1);
            *(_DWORD *)(v5 + 64) = v47 + v46;
            *(_QWORD *)(v48 + 8 * v46++) = v50;
            v42 += 9;
            if ((_DWORD)v49 == (_DWORD)v46)
              goto LABEL_75;
          }
          v45 = v46;
          if ((_DWORD)v46)
LABEL_75:
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v45);
        }
      }
LABEL_76:
      v20 = (_BYTE *)*((_QWORD *)this + 1);
      v51 = (_BYTE *)*((_QWORD *)this + 2);
      if (v20 >= v51 || *v20 != 25)
        break;
LABEL_58:
      *((_QWORD *)this + 1) = v20 + 1;
    }
    if (v20 == v51 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
  if (v13 != 2)
    goto LABEL_30;
  result = sub_10010620C(this, v6);
  if ((_DWORD)result)
    goto LABEL_76;
  return result;
}

uint64_t sub_1002E0278(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8 * v5++), a2);
    while (v5 < *(int *)(v4 + 24));
  }
  if (*(int *)(v4 + 48) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(*(_QWORD *)(v4 + 40) + 8 * v6++), a3);
    while (v6 < *(int *)(v4 + 48));
  }
  if (*(int *)(v4 + 64) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(*(_QWORD *)(v4 + 56) + 8 * v7++), a3);
    while (v7 < *(int *)(v4 + 64));
  }
  v10 = *(_QWORD **)(v4 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E0368(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t i;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  const void *v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v18;
  _QWORD *v19;

  if (*((int *)this + 6) >= 1)
  {
    for (i = 0; i < *((int *)this + 6); ++i)
    {
      v11 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * i);
      *(_BYTE *)a2 = 10;
      if (*(char *)(v11 + 23) < 0)
      {
        v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
        if (v12 <= 0x7F)
        {
LABEL_15:
          *((_BYTE *)a2 + 1) = (_BYTE)v12;
          v7 = (_DWORD)a2 + 2;
          goto LABEL_4;
        }
      }
      else
      {
        v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
        if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu)
          goto LABEL_15;
      }
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
LABEL_4:
      v8 = *(char *)(v11 + 23);
      if (v8 >= 0)
        v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
      else
        v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
      if (v8 >= 0)
        v10 = (const void *)*(unsigned __int8 *)(v11 + 23);
      else
        v10 = (const void *)*(unsigned int *)(v11 + 8);
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
    }
  }
  if (*((int *)this + 12) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v13);
      *(_BYTE *)a2 = 17;
      *(_QWORD *)((char *)a2 + 1) = v14;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v13;
    }
    while (v13 < *((int *)this + 12));
  }
  if (*((int *)this + 16) >= 1)
  {
    v15 = 0;
    do
    {
      v16 = *(_QWORD *)(*((_QWORD *)this + 7) + 8 * v15);
      *(_BYTE *)a2 = 25;
      *(_QWORD *)((char *)a2 + 1) = v16;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v15;
    }
    while (v15 < *((int *)this + 16));
  }
  v19 = (_QWORD *)*((_QWORD *)this + 1);
  v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v17 = v19;
  if (!v19 || *v17 == v17[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, a2, a3);
}

uint64_t sub_1002E0534(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    v5 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v4 = 0;
    v5 = *(_DWORD *)(a1 + 24);
    do
    {
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v4);
      v7 = *(unsigned __int8 *)(v10 + 23);
      v9 = v7;
      v8 = *(_QWORD *)(v10 + 8);
      if ((v7 & 0x80u) == 0)
        v11 = *(unsigned __int8 *)(v10 + 23);
      else
        v11 = v8;
      if (v11 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
        v7 = *(unsigned __int8 *)(v10 + 23);
        v8 = *(_QWORD *)(v10 + 8);
        v3 = *(_DWORD *)(a1 + 24);
        v9 = *(_BYTE *)(v10 + 23);
      }
      else
      {
        v6 = 1;
      }
      if (v9 < 0)
        v7 = v8;
      v5 += v6 + v7;
      ++v4;
    }
    while (v4 < v3);
  }
  v12 = *(_QWORD **)(a1 + 8);
  v13 = (9 * (*(_DWORD *)(a1 + 64) + *(_DWORD *)(a1 + 48)) + v5);
  if (v12 && *v12 != v12[1])
    v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v13;
  *(_DWORD *)(a1 + 72) = v13;
  return v13;
}

uint64_t sub_1002E0610(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 2878);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002DF888((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E06C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E06D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E06EC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E0734()
{
  return 1;
}

uint64_t sub_1002E073C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A1B0;
}

void sub_1002E07B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E07C4(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v8;
  int v9;
  int v10;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 3202);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 36) & 1) != 0)
  {
    v8 = *(_DWORD *)(a2 + 16);
    a1[9] |= 1u;
    a1[4] = v8;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
LABEL_12:
      v10 = *(_DWORD *)(a2 + 24);
      a1[9] |= 4u;
      a1[6] = v10;
      if ((*(_DWORD *)(a2 + 36) & 8) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_8;
    }
  }
  else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_DWORD *)(a2 + 20);
  a1[9] |= 2u;
  a1[5] = v9;
  v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 4) != 0)
    goto LABEL_12;
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    v6 = *(_DWORD *)(a2 + 28);
    a1[9] |= 8u;
    a1[7] = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002E08C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E08D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E08E8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = off_100403510;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_1002E07C4((_DWORD *)a1, a2);
  return a1;
}

void sub_1002E0940(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1002E095C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1002E0970(uint64_t a1)
{
  *(_QWORD *)a1 = off_100403510;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1002E09A0(uint64_t a1)
{
  *(_QWORD *)a1 = off_100403510;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1002E09E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1002E09EC()
{
  operator new();
}

void sub_1002E0A3C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E0A64(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002E0A84(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  uint64_t result;
  _BYTE *v17;
  unint64_t v18;
  _BYTE *v19;
  unsigned int v20;
  unsigned int v21;

  v6 = a1 + 4;
  v7 = a1 + 5;
  v8 = (_DWORD)a1 + 8;
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          a1[9] |= 1u;
          if ((unint64_t)v14 >= v12)
            continue;
        }
        else
        {
          *v6 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
          a1[9] |= 1u;
          if ((unint64_t)v14 >= v12)
            continue;
        }
        if (*v14 != 16)
          continue;
        v15 = v14 + 1;
        *((_QWORD *)this + 1) = v15;
        if ((unint64_t)v15 >= v12)
          goto LABEL_31;
        goto LABEL_28;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 >= v12)
          goto LABEL_31;
LABEL_28:
        if ((*v15 & 0x80000000) == 0)
        {
          *v7 = *v15;
          v17 = v15 + 1;
          *((_QWORD *)this + 1) = v17;
          a1[9] |= 2u;
          if ((unint64_t)v17 < v12)
            goto LABEL_33;
          continue;
        }
LABEL_31:
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        a1[9] |= 2u;
        if ((unint64_t)v17 >= v18)
          continue;
LABEL_33:
        if (*v17 != 29)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0)
          return 0;
LABEL_35:
        a1[6] = v21;
        a1[9] |= 4u;
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 != 37)
          continue;
        *((_QWORD *)this + 1) = v19 + 1;
LABEL_38:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0)
          return 0;
        a1[7] = v20;
        a1[9] |= 8u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v11 = TagFallback & 7;
        if (v11 != 5)
          goto LABEL_21;
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0)
          return 0;
        goto LABEL_35;
      case 4u:
        v11 = TagFallback & 7;
        if (v11 != 5)
          goto LABEL_21;
        goto LABEL_38;
      default:
        v11 = TagFallback & 7;
LABEL_21:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v8, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1002E0D68(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 36) & 8) == 0)
  {
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_11:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

_BYTE *sub_1002E0E28(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  _QWORD *v12;

  if ((*((_BYTE *)this + 36) & 1) == 0)
  {
    if ((*((_BYTE *)this + 36) & 2) == 0)
      goto LABEL_3;
LABEL_11:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *a2 = 16;
    if (v9 > 0x7F)
    {
      a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
      v4 = *((_DWORD *)this + 9);
      if ((v4 & 4) != 0)
        goto LABEL_15;
    }
    else
    {
      a2[1] = (_BYTE)v9;
      a2 += 2;
      v4 = *((_DWORD *)this + 9);
      if ((v4 & 4) != 0)
        goto LABEL_15;
    }
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_5;
LABEL_16:
    v11 = *((_DWORD *)this + 7);
    *a2 = 37;
    *(_DWORD *)(a2 + 1) = v11;
    a2 += 5;
    v12 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v12;
    if (!v12)
      return a2;
    goto LABEL_17;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  *a2 = 8;
  if (v8 > 0x7F)
  {
    a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
    if ((*((_BYTE *)this + 36) & 2) != 0)
      goto LABEL_11;
  }
  else
  {
    a2[1] = (_BYTE)v8;
    a2 += 2;
    if ((*((_BYTE *)this + 36) & 2) != 0)
      goto LABEL_11;
  }
LABEL_3:
  v4 = *((_DWORD *)this + 9);
  if ((v4 & 4) == 0)
    goto LABEL_4;
LABEL_15:
  v10 = *((_DWORD *)this + 6);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 9) & 8) != 0)
    goto LABEL_16;
LABEL_5:
  v7 = (_QWORD *)*((_QWORD *)this + 1);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v5 = v7;
  if (!v7)
    return a2;
LABEL_17:
  if (*v5 != v5[1])
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1002E0F74(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if (v9 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 36);
        if ((v3 & 2) == 0)
          goto LABEL_15;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_15;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 36) & 2) == 0)
        goto LABEL_15;
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v11 = 2;
    }
    v4 += v11;
LABEL_15:
    v12 = v4 + 5;
    if ((v3 & 4) == 0)
      v12 = v4;
    if ((v3 & 8) != 0)
      v5 = v12 + 5;
    else
      v5 = v12;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_6;
    goto LABEL_21;
  }
  v5 = 0;
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 8);
  if (!v7)
  {
LABEL_6:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_21:
  if (*v7 == v7[1])
    goto LABEL_6;
  v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v13;
  return v13;
}

uint64_t sub_1002E1058(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 3190);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002E07C4(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E110C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E1120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E1134(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

BOOL sub_1002E117C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 36) & 0xF) == 0;
}

uint64_t sub_1002E1190()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A1C0;
}

void sub_1002E1204(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E1218(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const std::string *v16;
  std::string *v17;
  _DWORD *v18;
  uint64_t v19;
  int v20;
  char v22;
  _BYTE v23[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v23, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 3785);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v22, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
    v4 = *(_DWORD *)(a2 + 80);
    if (!(_BYTE)v4)
      goto LABEL_17;
  }
  else
  {
    v4 = *(_DWORD *)(a2 + 80);
    if (!(_BYTE)v4)
    {
LABEL_17:
      if ((v4 & 0xFF00) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_40;
    }
  }
  if ((v4 & 1) != 0)
  {
    *(_DWORD *)(a1 + 80) |= 1u;
    v6 = *(_QWORD *)(a1 + 16);
    if (!v6)
      operator new();
    v7 = *(_QWORD *)(a2 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10042EA20 + 16);
    sub_100095DF8(v6, v7);
    v4 = *(_DWORD *)(a2 + 80);
  }
  if ((v4 & 2) != 0)
  {
    v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 80) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    v4 = *(_DWORD *)(a2 + 80);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0)
        goto LABEL_13;
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  v9 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 80) |= 4u;
  *(_DWORD *)(a1 + 28) = v9;
  v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x10) == 0)
      goto LABEL_14;
    goto LABEL_22;
  }
LABEL_21:
  v10 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 80) |= 8u;
  *(_DWORD *)(a1 + 32) = v10;
  v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0)
      goto LABEL_15;
LABEL_23:
    *(_DWORD *)(a1 + 80) |= 0x20u;
    v12 = *(_QWORD *)(a1 + 40);
    if (!v12)
      operator new();
    v13 = *(_QWORD *)(a2 + 40);
    if (v13)
    {
      sub_1002DA3F0(v12, v13);
      v4 = *(_DWORD *)(a2 + 80);
      if ((v4 & 0x40) != 0)
        goto LABEL_30;
    }
    else
    {
      sub_1002DA3F0(v12, *(_QWORD *)(qword_10042EA20 + 40));
      v4 = *(_DWORD *)(a2 + 80);
      if ((v4 & 0x40) != 0)
        goto LABEL_30;
    }
LABEL_16:
    if ((v4 & 0x80) == 0)
      goto LABEL_17;
    goto LABEL_36;
  }
LABEL_22:
  v11 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 80) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v11;
  v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x20) != 0)
    goto LABEL_23;
LABEL_15:
  if ((v4 & 0x40) == 0)
    goto LABEL_16;
LABEL_30:
  *(_DWORD *)(a1 + 80) |= 0x40u;
  v14 = *(_QWORD *)(a1 + 48);
  if (!v14)
    operator new();
  v15 = *(_QWORD *)(a2 + 48);
  if (v15)
  {
    sub_1002DA3F0(v14, v15);
    v4 = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x80) == 0)
      goto LABEL_17;
  }
  else
  {
    sub_1002DA3F0(v14, *(_QWORD *)(qword_10042EA20 + 48));
    v4 = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x80) == 0)
      goto LABEL_17;
  }
LABEL_36:
  v16 = *(const std::string **)(a2 + 56);
  *(_DWORD *)(a1 + 80) |= 0x80u;
  v17 = *(std::string **)(a1 + 56);
  if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v17, v16);
  v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0xFF00) != 0)
  {
LABEL_40:
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 0x100u;
      v18 = *(_DWORD **)(a1 + 64);
      if (!v18)
        operator new();
      v19 = *(_QWORD *)(a2 + 64);
      if (!v19)
        v19 = *(_QWORD *)(qword_10042EA20 + 64);
      sub_1002E07C4(v18, v19);
      v4 = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 0x200) != 0)
    {
      v20 = *(_DWORD *)(a2 + 72);
      *(_DWORD *)(a1 + 80) |= 0x200u;
      *(_DWORD *)(a1 + 72) = v20;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002E1604()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E162C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E1658()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E1680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E1694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E16A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = off_1004035C0;
  v2 = a1[7];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    operator delete();
  }
  if ((_QWORD *)qword_10042EA20 != a1)
  {
    v4 = a1[2];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = a1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = a1[6];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = a1[8];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1002E177C(_QWORD *a1)
{
  sub_1002E16A8(a1);
  operator delete();
}

uint64_t sub_1002E17A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 76) = a2;
  return result;
}

void sub_1002E17A8()
{
  operator new();
}

void sub_1002E1818()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E1840(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = this;
  v6 = *(_DWORD *)(this + 80);
  if ((v6 & 1) != 0)
  {
    v10 = *(_QWORD *)(this + 16);
    if (v10)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 2) != 0)
        goto LABEL_17;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(qword_10042EA20 + 16), a2, a4);
      v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 2) != 0)
        goto LABEL_17;
    }
LABEL_3:
    if ((v6 & 4) == 0)
      goto LABEL_4;
    goto LABEL_18;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
LABEL_25:
    v12 = *(_QWORD *)(v5 + 48);
    if (v12)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
      v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 0x80) != 0)
        goto LABEL_29;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(qword_10042EA20 + 48), a2, a4);
      v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 0x80) != 0)
        goto LABEL_29;
    }
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
LABEL_30:
    v13 = *(_QWORD *)(v5 + 64);
    if (v13)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v13, a2, a4);
      if ((*(_DWORD *)(v5 + 80) & 0x200) != 0)
        goto LABEL_34;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_QWORD *)(qword_10042EA20 + 64), a2, a4);
      if ((*(_DWORD *)(v5 + 80) & 0x200) != 0)
        goto LABEL_34;
    }
LABEL_11:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_35;
  }
LABEL_21:
  v11 = *(_QWORD *)(v5 + 40);
  if (v11)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
    v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 0x40) != 0)
      goto LABEL_25;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(qword_10042EA20 + 40), a2, a4);
    v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 0x40) != 0)
      goto LABEL_25;
  }
LABEL_8:
  if ((v6 & 0x80) == 0)
    goto LABEL_9;
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(8, *(_QWORD *)(v5 + 56), a2);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x100) != 0)
    goto LABEL_30;
LABEL_10:
  if ((v6 & 0x200) == 0)
    goto LABEL_11;
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 72), (int)a2, a4);
  v14 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v14;
  if (!v14)
    return this;
LABEL_35:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E1A48(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  int v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;
  unsigned int *v11;
  unsigned int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  unsigned int *v21;
  unsigned int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int *v26;
  unsigned int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  const void *v36;
  unsigned int *v37;
  unsigned int v38;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v39;
  _BYTE *v40;
  unsigned __int8 *v41;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v42;
  unint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;

  v4 = a2;
  v6 = *((_DWORD *)this + 20);
  if ((v6 & 1) != 0)
  {
    v11 = (unsigned int *)*((_QWORD *)this + 2);
    if (v11)
    {
      *(_BYTE *)a2 = 10;
      v12 = (_DWORD)a2 + 1;
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[7];
      if (v13 <= 0x7F)
        goto LABEL_15;
    }
    else
    {
      v11 = *(unsigned int **)(qword_10042EA20 + 16);
      *(_BYTE *)a2 = 10;
      v12 = (_DWORD)a2 + 1;
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[7];
      if (v13 <= 0x7F)
      {
LABEL_15:
        *((_BYTE *)v4 + 1) = (_BYTE)v13;
        v4 = sub_1002DA02C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        if ((*((_DWORD *)this + 20) & 2) != 0)
          goto LABEL_19;
LABEL_3:
        if ((*((_BYTE *)this + 80) & 4) == 0)
          goto LABEL_4;
LABEL_23:
        v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
        *(_BYTE *)v4 = 24;
        if (v18 > 0x7F)
        {
          v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
          if ((*((_BYTE *)this + 80) & 8) != 0)
            goto LABEL_27;
        }
        else
        {
          *((_BYTE *)v4 + 1) = (_BYTE)v18;
          v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
          if ((*((_BYTE *)this + 80) & 8) != 0)
            goto LABEL_27;
        }
LABEL_5:
        if ((*((_BYTE *)this + 80) & 0x10) == 0)
          goto LABEL_6;
LABEL_31:
        v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
        *(_BYTE *)v4 = 40;
        if (v20 > 0x7F)
        {
          v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
          v7 = *((_DWORD *)this + 20);
          if ((v7 & 0x20) != 0)
            goto LABEL_35;
        }
        else
        {
          *((_BYTE *)v4 + 1) = (_BYTE)v20;
          v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
          v7 = *((_DWORD *)this + 20);
          if ((v7 & 0x20) != 0)
            goto LABEL_35;
        }
LABEL_7:
        if ((v7 & 0x40) == 0)
          goto LABEL_8;
LABEL_41:
        v26 = (unsigned int *)*((_QWORD *)this + 6);
        if (v26)
        {
          *(_BYTE *)v4 = 58;
          v27 = (_DWORD)v4 + 1;
          v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[9];
          if (v28 <= 0x7F)
            goto LABEL_43;
        }
        else
        {
          v26 = *(unsigned int **)(qword_10042EA20 + 48);
          *(_BYTE *)v4 = 58;
          v27 = (_DWORD)v4 + 1;
          v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[9];
          if (v28 <= 0x7F)
          {
LABEL_43:
            *((_BYTE *)v4 + 1) = (_BYTE)v28;
            v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002DA670((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, (uint64_t)v4 + 2, a3);
            v7 = *((_DWORD *)this + 20);
            if ((v7 & 0x80) != 0)
              goto LABEL_47;
LABEL_9:
            if ((v7 & 0x100) == 0)
              goto LABEL_10;
LABEL_59:
            v37 = (unsigned int *)*((_QWORD *)this + 8);
            if (v37)
            {
              *(_BYTE *)v4 = 74;
              v38 = (_DWORD)v4 + 1;
              v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37[8];
              if (v39 <= 0x7F)
                goto LABEL_61;
            }
            else
            {
              v37 = *(unsigned int **)(qword_10042EA20 + 64);
              *(_BYTE *)v4 = 74;
              v38 = (_DWORD)v4 + 1;
              v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37[8];
              if (v39 <= 0x7F)
              {
LABEL_61:
                *((_BYTE *)v4 + 1) = (_BYTE)v39;
                v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E0E28((wireless_diagnostics::google::protobuf::internal::WireFormat *)v37, (_BYTE *)v4 + 2, a3);
                if ((*((_DWORD *)this + 20) & 0x200) != 0)
                  goto LABEL_65;
LABEL_11:
                v10 = (_QWORD *)*((_QWORD *)this + 1);
                v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
                v8 = v10;
                if (!v10)
                  return v4;
                goto LABEL_72;
              }
            }
            v40 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v39, v38, a3);
            v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E0E28((wireless_diagnostics::google::protobuf::internal::WireFormat *)v37, v40, v41);
            if ((*((_DWORD *)this + 20) & 0x200) != 0)
              goto LABEL_65;
            goto LABEL_11;
          }
        }
        v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, v27, a3);
        v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002DA670((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, v29, v30);
        v7 = *((_DWORD *)this + 20);
        if ((v7 & 0x80) != 0)
          goto LABEL_47;
        goto LABEL_9;
      }
    }
    v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    v4 = sub_1002DA02C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15, v16);
    if ((*((_DWORD *)this + 20) & 2) != 0)
      goto LABEL_19;
    goto LABEL_3;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_19:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  *(_BYTE *)v4 = 16;
  if (v17 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v4 + 1, a3);
    if ((*((_BYTE *)this + 80) & 4) != 0)
      goto LABEL_23;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v17;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((_BYTE *)this + 80) & 4) != 0)
      goto LABEL_23;
  }
LABEL_4:
  if ((*((_BYTE *)this + 80) & 8) == 0)
    goto LABEL_5;
LABEL_27:
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(_BYTE *)v4 = 32;
  if (v19 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
    if ((*((_BYTE *)this + 80) & 0x10) != 0)
      goto LABEL_31;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v19;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((_BYTE *)this + 80) & 0x10) != 0)
      goto LABEL_31;
  }
LABEL_6:
  v7 = *((_DWORD *)this + 20);
  if ((v7 & 0x20) == 0)
    goto LABEL_7;
LABEL_35:
  v21 = (unsigned int *)*((_QWORD *)this + 5);
  if (v21)
  {
    *(_BYTE *)v4 = 50;
    v22 = (_DWORD)v4 + 1;
    v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21[9];
    if (v23 <= 0x7F)
      goto LABEL_37;
LABEL_40:
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, v22, a3);
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002DA670((wireless_diagnostics::google::protobuf::internal::WireFormat *)v21, v24, v25);
    v7 = *((_DWORD *)this + 20);
    if ((v7 & 0x40) != 0)
      goto LABEL_41;
    goto LABEL_8;
  }
  v21 = *(unsigned int **)(qword_10042EA20 + 40);
  *(_BYTE *)v4 = 50;
  v22 = (_DWORD)v4 + 1;
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21[9];
  if (v23 > 0x7F)
    goto LABEL_40;
LABEL_37:
  *((_BYTE *)v4 + 1) = (_BYTE)v23;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002DA670((wireless_diagnostics::google::protobuf::internal::WireFormat *)v21, (uint64_t)v4 + 2, a3);
  v7 = *((_DWORD *)this + 20);
  if ((v7 & 0x40) != 0)
    goto LABEL_41;
LABEL_8:
  if ((v7 & 0x80) == 0)
    goto LABEL_9;
LABEL_47:
  v31 = *((_QWORD *)this + 7);
  *(_BYTE *)v4 = 66;
  if (*(char *)(v31 + 23) < 0)
  {
    v32 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v31 + 8);
    if (v32 <= 0x7F)
      goto LABEL_49;
  }
  else
  {
    v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v31 + 23);
    if (*(unsigned __int8 *)(v31 + 23) <= 0x7Fu)
    {
LABEL_49:
      *((_BYTE *)v4 + 1) = (_BYTE)v32;
      v33 = (_DWORD)v4 + 2;
      goto LABEL_52;
    }
  }
  v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, (int)v4 + 1, a3);
LABEL_52:
  v34 = *(char *)(v31 + 23);
  if (v34 >= 0)
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v31;
  else
    v35 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v31;
  if (v34 >= 0)
    v36 = (const void *)*(unsigned __int8 *)(v31 + 23);
  else
    v36 = (const void *)*(unsigned int *)(v31 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v35, v36, v33, a4);
  v7 = *((_DWORD *)this + 20);
  if ((v7 & 0x100) != 0)
    goto LABEL_59;
LABEL_10:
  if ((v7 & 0x200) == 0)
    goto LABEL_11;
LABEL_65:
  v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
  *(_BYTE *)v4 = 80;
  v43 = (unint64_t)v4 + 1;
  if ((v42 & 0x80000000) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v42, v43, a3);
    v45 = (_QWORD *)*((_QWORD *)this + 1);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v8 = v45;
    if (!v45)
      return v4;
  }
  else if (v42 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v42, v43, a3);
    v46 = (_QWORD *)*((_QWORD *)this + 1);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v8 = v46;
    if (!v46)
      return v4;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v42;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    v44 = (_QWORD *)*((_QWORD *)this + 1);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v8 = v44;
    if (!v44)
      return v4;
  }
LABEL_72:
  if (*v8 != v8[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
  return v4;
}

uint64_t sub_1002E1E88(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  unint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v21;
  _QWORD *v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  unint64_t v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  int v41;
  _QWORD *v42;

  v3 = *(_DWORD *)(a1 + 80);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    if ((v3 & 0xFF00) == 0)
      goto LABEL_100;
LABEL_86:
    if ((v3 & 0x100) == 0)
      goto LABEL_93;
    v37 = *(_QWORD *)(a1 + 64);
    if (v37)
    {
      v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002E0F74(v37, a2);
      if (v38 < 0x80)
      {
LABEL_89:
        v39 = 1;
LABEL_92:
        v4 = (v4 + (_DWORD)v38 + v39 + 1);
        v3 = *(_DWORD *)(a1 + 80);
LABEL_93:
        if ((v3 & 0x200) != 0)
        {
          v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
          if ((v40 & 0x80000000) != 0)
          {
            v41 = 11;
          }
          else if (v40 >= 0x80)
          {
            v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2)+ 1;
          }
          else
          {
            v41 = 2;
          }
          v4 = (v41 + v4);
        }
        goto LABEL_100;
      }
    }
    else
    {
      v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002E0F74(*(_QWORD *)(qword_10042EA20 + 64), a2);
      if (v38 < 0x80)
        goto LABEL_89;
    }
    v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
    goto LABEL_92;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_17;
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002DA150(v5, a2);
    if (v6 < 0x80)
      goto LABEL_9;
  }
  else
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002DA150(*(_QWORD *)(qword_10042EA20 + 16), a2);
    if (v6 < 0x80)
    {
LABEL_9:
      v4 = ((_DWORD)v6 + 2);
      v3 = *(_DWORD *)(a1 + 80);
      if ((v3 & 2) == 0)
        goto LABEL_17;
      goto LABEL_13;
    }
  }
  v4 = v6
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)+ 1;
  v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 2) == 0)
    goto LABEL_17;
LABEL_13:
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    v3 = *(_DWORD *)(a1 + 80);
  }
  else
  {
    v8 = 1;
  }
  v4 = (v4 + v8 + 1);
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      v3 = *(_DWORD *)(a1 + 80);
      v4 = (v4 + v10 + 1);
      if ((v3 & 8) != 0)
        goto LABEL_29;
    }
    else
    {
      v4 = (v4 + 2);
      if ((v3 & 8) != 0)
        goto LABEL_29;
    }
LABEL_19:
    if ((v3 & 0x10) == 0)
      goto LABEL_20;
LABEL_33:
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      v3 = *(_DWORD *)(a1 + 80);
      v4 = (v4 + v14 + 1);
      if ((v3 & 0x20) != 0)
        goto LABEL_37;
    }
    else
    {
      v4 = (v4 + 2);
      if ((v3 & 0x20) != 0)
        goto LABEL_37;
    }
LABEL_21:
    if ((v3 & 0x40) == 0)
      goto LABEL_22;
LABEL_57:
    v23 = *(_QWORD *)(a1 + 48);
    if (v23)
    {
      v24 = *(unsigned __int8 *)(v23 + 40);
      if (*(_BYTE *)(v23 + 40))
        goto LABEL_59;
    }
    else
    {
      v23 = *(_QWORD *)(qword_10042EA20 + 48);
      v24 = *(unsigned __int8 *)(v23 + 40);
      if (*(_BYTE *)(v23 + 40))
      {
LABEL_59:
        v25 = (v24 << 31 >> 31) & 9;
        if ((v24 & 2) != 0)
          v26 = v25 + 9;
        else
          v26 = v25;
        if ((v24 & 4) != 0)
        {
          v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 32);
          if (v27 >= 0x80)
            v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)+ 1;
          else
            v28 = 2;
          v26 = (v28 + v26);
          v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v23 + 8);
          v30 = *(_QWORD **)(v23 + 8);
          if (!v30)
            goto LABEL_73;
          goto LABEL_71;
        }
LABEL_67:
        v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v23 + 8);
        v30 = *(_QWORD **)(v23 + 8);
        if (!v30)
          goto LABEL_73;
LABEL_71:
        if (*v30 != v30[1])
          v26 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v29, a2)+ v26;
LABEL_73:
        *(_DWORD *)(v23 + 36) = v26;
        if (v26 >= 0x80)
        {
          v4 = (_DWORD)v4
             + (_DWORD)v26
             + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26, a2)+ 1;
          v3 = *(_DWORD *)(a1 + 80);
          if ((v3 & 0x80) != 0)
            goto LABEL_77;
        }
        else
        {
          v4 = (v4 + v26 + 2);
          v3 = *(_DWORD *)(a1 + 80);
          if ((v3 & 0x80) != 0)
            goto LABEL_77;
        }
LABEL_23:
        if ((v3 & 0xFF00) == 0)
          goto LABEL_100;
        goto LABEL_86;
      }
    }
    v26 = 0;
    goto LABEL_67;
  }
  if ((v3 & 8) == 0)
    goto LABEL_19;
LABEL_29:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    v3 = *(_DWORD *)(a1 + 80);
    v4 = (v4 + v12 + 1);
    if ((v3 & 0x10) != 0)
      goto LABEL_33;
  }
  else
  {
    v4 = (v4 + 2);
    if ((v3 & 0x10) != 0)
      goto LABEL_33;
  }
LABEL_20:
  if ((v3 & 0x20) == 0)
    goto LABEL_21;
LABEL_37:
  v15 = *(_QWORD *)(a1 + 40);
  if (v15)
  {
    v16 = *(unsigned __int8 *)(v15 + 40);
    if (*(_BYTE *)(v15 + 40))
      goto LABEL_39;
LABEL_46:
    v18 = 0;
    goto LABEL_47;
  }
  v15 = *(_QWORD *)(qword_10042EA20 + 40);
  v16 = *(unsigned __int8 *)(v15 + 40);
  if (!*(_BYTE *)(v15 + 40))
    goto LABEL_46;
LABEL_39:
  v17 = (v16 << 31 >> 31) & 9;
  if ((v16 & 2) != 0)
    v18 = v17 + 9;
  else
    v18 = v17;
  if ((v16 & 4) != 0)
  {
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v15 + 32);
    if (v19 >= 0x80)
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2)
          + 1;
    else
      v20 = 2;
    v18 = (v20 + v18);
    v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 8);
    v22 = *(_QWORD **)(v15 + 8);
    if (!v22)
      goto LABEL_53;
    goto LABEL_51;
  }
LABEL_47:
  v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 8);
  v22 = *(_QWORD **)(v15 + 8);
  if (!v22)
    goto LABEL_53;
LABEL_51:
  if (*v22 != v22[1])
    v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v21, a2)
        + v18;
LABEL_53:
  *(_DWORD *)(v15 + 36) = v18;
  if (v18 >= 0x80)
  {
    v4 = (_DWORD)v4
       + (_DWORD)v18
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18, a2)+ 1;
    v3 = *(_DWORD *)(a1 + 80);
    if ((v3 & 0x40) != 0)
      goto LABEL_57;
  }
  else
  {
    v4 = (v4 + v18 + 2);
    v3 = *(_DWORD *)(a1 + 80);
    if ((v3 & 0x40) != 0)
      goto LABEL_57;
  }
LABEL_22:
  if ((v3 & 0x80) == 0)
    goto LABEL_23;
LABEL_77:
  v31 = *(_QWORD *)(a1 + 56);
  v32 = *(unsigned __int8 *)(v31 + 23);
  v33 = v32;
  v34 = *(_QWORD *)(v31 + 8);
  if ((v32 & 0x80u) == 0)
    v35 = *(unsigned __int8 *)(v31 + 23);
  else
    v35 = v34;
  if (v35 >= 0x80)
  {
    v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35, a2);
    v32 = *(unsigned __int8 *)(v31 + 23);
    v34 = *(_QWORD *)(v31 + 8);
    v3 = *(_DWORD *)(a1 + 80);
    v33 = *(_BYTE *)(v31 + 23);
  }
  else
  {
    v36 = 1;
  }
  if (v33 < 0)
    v32 = v34;
  v4 = (v4 + v36 + v32 + 1);
  if ((v3 & 0xFF00) != 0)
    goto LABEL_86;
LABEL_100:
  v42 = *(_QWORD **)(a1 + 8);
  if (v42 && *v42 != v42[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 76) = v4;
  return v4;
}

uint64_t sub_1002E22DC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 3773);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002E1218((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E2390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E23A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E23B8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E2400()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A1D0;
}

void sub_1002E2474(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E2488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  uint64_t v10;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 4215);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  sub_1002E3D44((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
  sub_1002E3E98((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), a2 + 40);
  v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x3FC) != 0)
  {
    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 4u;
      v6 = *(_QWORD *)(a1 + 64);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 64);
      if (!v7)
        v7 = *(_QWORD *)(qword_10042EA28 + 64);
      sub_1000729FC(v6, v7);
      v5 = *(_DWORD *)(a2 + 92);
    }
    if ((v5 & 8) != 0)
    {
      v8 = *(const std::string **)(a2 + 72);
      *(_DWORD *)(a1 + 92) |= 8u;
      v9 = *(std::string **)(a1 + 72);
      if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v9, v8);
      v5 = *(_DWORD *)(a2 + 92);
    }
    if ((v5 & 0x10) != 0)
    {
      v10 = *(_QWORD *)(a2 + 80);
      *(_DWORD *)(a1 + 92) |= 0x10u;
      *(_QWORD *)(a1 + 80) = v10;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002E2604()
{
  operator delete();
}

void sub_1002E2628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E263C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E2650(uint64_t a1)
{
  sub_100095F9C(a1);
  operator delete();
}

uint64_t sub_1002E2674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 88) = a2;
  return result;
}

void sub_1002E267C()
{
  operator new();
}

void sub_1002E26E4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E270C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v11;
  _QWORD *v12;

  v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 4) != 0)
  {
    v8 = *(_QWORD *)(v5 + 64);
    if (v8)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
      if ((*(_DWORD *)(v5 + 92) & 8) != 0)
        goto LABEL_12;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(qword_10042EA28 + 64), a2, a4);
      if ((*(_DWORD *)(v5 + 92) & 8) != 0)
        goto LABEL_12;
    }
LABEL_6:
    if (*(int *)(v5 + 48) < 1)
      goto LABEL_15;
    goto LABEL_13;
  }
  if ((v7 & 8) == 0)
    goto LABEL_6;
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(3, *(_QWORD *)(v5 + 72), a2);
  if (*(int *)(v5 + 48) < 1)
    goto LABEL_15;
LABEL_13:
  v9 = 0;
  do
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8 * v9++), a2, a4);
  while (v9 < *(int *)(v5 + 48));
LABEL_15:
  if ((*(_BYTE *)(v5 + 92) & 0x10) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_QWORD *)(v5 + 80), (uint64_t)a2, a4);
  v12 = *(_QWORD **)(v5 + 8);
  v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v10 = v12;
  if (v12)
  {
    if (*v10 != v10[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E284C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  unsigned int *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  unsigned int *v11;
  unsigned int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  const void *v22;
  uint64_t v23;
  char *v24;
  unsigned int *v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  _QWORD *v28;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v29;
  _QWORD *v30;

  if (*((int *)this + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v8 = *(unsigned int **)(*((_QWORD *)this + 2) + 8 * v6);
      *(_BYTE *)a2 = 10;
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[7];
      if (v9 > 0x7F)
      {
        v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v9;
        v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = sub_1002DA02C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v7, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  v10 = *((_DWORD *)this + 23);
  if ((v10 & 4) == 0)
  {
    if ((v10 & 8) == 0)
      goto LABEL_9;
LABEL_17:
    v17 = *((_QWORD *)this + 9);
    *(_BYTE *)a2 = 26;
    if (*(char *)(v17 + 23) < 0)
    {
      v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v17 + 8);
      if (v18 <= 0x7F)
        goto LABEL_19;
    }
    else
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
      if (*(unsigned __int8 *)(v17 + 23) <= 0x7Fu)
      {
LABEL_19:
        *((_BYTE *)a2 + 1) = (_BYTE)v18;
        v19 = (_DWORD)a2 + 2;
        goto LABEL_22;
      }
    }
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)a2 + 1, a3);
LABEL_22:
    v20 = *(char *)(v17 + 23);
    if (v20 >= 0)
      v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
    else
      v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
    if (v20 >= 0)
      v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
    else
      v22 = (const void *)*(unsigned int *)(v17 + 8);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v21, v22, v19, a4);
    if (*((int *)this + 12) < 1)
      goto LABEL_34;
    goto LABEL_29;
  }
  v11 = (unsigned int *)*((_QWORD *)this + 8);
  if (v11)
  {
    *(_BYTE *)a2 = 18;
    v12 = (_DWORD)a2 + 1;
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[9];
    if (v13 <= 0x7F)
      goto LABEL_13;
LABEL_16:
    v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    a2 = sub_1002E80A4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15, v16);
    if ((*((_DWORD *)this + 23) & 8) != 0)
      goto LABEL_17;
    goto LABEL_9;
  }
  v11 = *(unsigned int **)(qword_10042EA28 + 64);
  *(_BYTE *)a2 = 18;
  v12 = (_DWORD)a2 + 1;
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[9];
  if (v13 > 0x7F)
    goto LABEL_16;
LABEL_13:
  *((_BYTE *)a2 + 1) = (_BYTE)v13;
  a2 = sub_1002E80A4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2), a3, a4);
  if ((*((_DWORD *)this + 23) & 8) != 0)
    goto LABEL_17;
LABEL_9:
  if (*((int *)this + 12) < 1)
    goto LABEL_34;
LABEL_29:
  v23 = 0;
  do
  {
    v25 = *(unsigned int **)(*((_QWORD *)this + 5) + 8 * v23);
    *(_BYTE *)a2 = 34;
    v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[8];
    if (v26 > 0x7F)
    {
      v24 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v26;
      v24 = (char *)a2 + 2;
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002DAB7C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, (uint64_t)v24, a3);
    ++v23;
  }
  while (v23 < *((int *)this + 12));
LABEL_34:
  if ((*((_BYTE *)this + 92) & 0x10) != 0)
  {
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 10);
    *(_WORD *)a2 = 384;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v27, (unint64_t)a2 + 2, a3);
  }
  v30 = (_QWORD *)*((_QWORD *)this + 1);
  v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v28 = v30;
  if (!v30 || *v28 == v28[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v29, a2, a3);
}

uint64_t sub_1002E2A90(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  _QWORD *v27;

  v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x3FC) == 0)
  {
    v5 = *(_DWORD *)(a1 + 24);
    if (v5 < 1)
      goto LABEL_31;
    goto LABEL_26;
  }
  if ((v3 & 4) == 0)
  {
    v4 = 0;
    if ((v3 & 8) == 0)
      goto LABEL_22;
    goto LABEL_13;
  }
  v6 = *(_QWORD *)(a1 + 64);
  if (v6)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002E8248(v6, a2);
    if (v7 < 0x80)
      goto LABEL_9;
  }
  else
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002E8248(*(_QWORD *)(qword_10042EA28 + 64), a2);
    if (v7 < 0x80)
    {
LABEL_9:
      v4 = (_DWORD)v7 + 2;
      v3 = *(_DWORD *)(a1 + 92);
      if ((v3 & 8) == 0)
        goto LABEL_22;
      goto LABEL_13;
    }
  }
  v4 = (_DWORD)v7
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)
     + 1;
  v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 8) == 0)
    goto LABEL_22;
LABEL_13:
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(unsigned __int8 *)(v8 + 23);
  v10 = v9;
  v11 = *(_QWORD *)(v8 + 8);
  if ((v9 & 0x80u) == 0)
    v12 = *(unsigned __int8 *)(v8 + 23);
  else
    v12 = v11;
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12, a2);
    v9 = *(unsigned __int8 *)(v8 + 23);
    v11 = *(_QWORD *)(v8 + 8);
    v3 = *(_DWORD *)(a1 + 92);
    v10 = *(_BYTE *)(v8 + 23);
  }
  else
  {
    v13 = 1;
  }
  if (v10 < 0)
    v9 = v11;
  v4 += v13 + v9 + 1;
LABEL_22:
  if ((v3 & 0x10) != 0)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 80), (unint64_t)a2);
    v16 = *(_DWORD *)(a1 + 24);
    v5 = v16 + v4 + v15 + 2;
    if (v16 < 1)
      goto LABEL_31;
  }
  else
  {
    v14 = *(_DWORD *)(a1 + 24);
    v5 = v14 + v4;
    if (v14 < 1)
      goto LABEL_31;
  }
LABEL_26:
  v17 = 0;
  do
  {
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002DA150(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v17), a2);
    v20 = (int)v19;
    if (v19 >= 0x80)
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    else
      v18 = 1;
    v5 += v20 + v18;
    ++v17;
  }
  while (v17 < *(int *)(a1 + 24));
LABEL_31:
  v21 = *(_DWORD *)(a1 + 48);
  v22 = (v21 + v5);
  if (v21 >= 1)
  {
    v23 = 0;
    do
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002DACD0(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8 * v23), a2);
      v26 = (int)v25;
      if (v25 >= 0x80)
        v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
      else
        v24 = 1;
      v22 = (v26 + v22 + v24);
      ++v23;
    }
    while (v23 < *(int *)(a1 + 48));
  }
  v27 = *(_QWORD **)(a1 + 8);
  if (v27 && *v27 != v27[1])
    v22 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v22;
  *(_DWORD *)(a1 + 88) = v22;
  return v22;
}

uint64_t sub_1002E2CA0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 4203);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002E2488((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E2D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E2D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E2D7C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E2DC4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A1E0;
}

void sub_1002E2E38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E2E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 4493);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  v5 = *(_DWORD *)(a2 + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(a1 + 32);
    v7 = *(_DWORD *)(a1 + 36);
    v8 = v6 + v5;
    if (v7 < v8)
    {
      v9 = 2 * v7;
      if (2 * v7 <= v8)
        v9 = v8;
      if (v9 <= 4)
        v9 = 4;
      *(_DWORD *)(a1 + 36) = v9;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 24) + 4 * v6), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    v10 = *(_QWORD *)(a1 + 16);
    if (!v10)
      operator new();
    v11 = *(_QWORD *)(a2 + 16);
    if (!v11)
      v11 = *(_QWORD *)(qword_10042EA30 + 16);
    sub_100095DF8(v10, v11);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002E3014()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E303C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E3050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E3064(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_100403720;
  if ((_QWORD *)qword_10042EA30 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  if (a1[3])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1002E30D8(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_100403720;
  if ((_QWORD *)qword_10042EA30 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  if (a1[3])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1002E3160(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1002E3168()
{
  operator new();
}

void sub_1002E31B8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E31E0(uint64_t this)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 1) == 0)
    goto LABEL_10;
  this = *(_QWORD *)(this + 16);
  if (!this)
    goto LABEL_10;
  v2 = *(_BYTE *)(this + 32);
  if (!v2
    || (*(_DWORD *)(this + 24) = 1, (v2 & 2) == 0)
    || (v3 = *(_QWORD *)(this + 16), (_UNKNOWN *)v3 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_8:
    v4 = *(_QWORD *)(this + 8);
    this += 8;
    *(_DWORD *)(this + 24) = 0;
    if (!v4)
      goto LABEL_10;
    goto LABEL_9;
  }
  if ((*(char *)(v3 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v3 = 0;
    *(_BYTE *)(v3 + 23) = 0;
    goto LABEL_8;
  }
  **(_BYTE **)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  v7 = *(_QWORD *)(this + 8);
  this += 8;
  *(_DWORD *)(this + 24) = 0;
  if (v7)
LABEL_9:
    this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
LABEL_10:
  v6 = *(_QWORD *)(v1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 9) = 0;
  if (v6)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  return this;
}

uint64_t sub_1002E3290(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v20;
  int v21;
  BOOL v22;
  int v23;
  char *v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  int i;
  unsigned int v31;
  uint64_t v32;
  _BYTE *v33;
  unint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;

  v6 = (uint64_t *)(a1 + 24);
  v7 = a1 + 8;
  while (1)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    if (TagFallback >> 3 != 1)
      break;
    v10 = TagFallback & 7;
    if (v10 == 2)
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      v13 = *(_QWORD *)(a1 + 16);
      if (!v13)
        operator new();
      v37 = 0;
      v14 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0;
      }
      else
      {
        v37 = *v14;
        *((_QWORD *)this + 1) = v14 + 1;
      }
      v16 = *((_DWORD *)this + 14);
      v17 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v16 + 1;
      if (v16 >= v17)
        return 0;
      v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
      if (!sub_100091030(v13, this, v19, v20) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
      v21 = *((_DWORD *)this + 14);
      v22 = __OFSUB__(v21, 1);
      v23 = v21 - 1;
      if (v23 < 0 == v22)
        *((_DWORD *)this + 14) = v23;
      v24 = (char *)*((_QWORD *)this + 1);
      v11 = (char *)*((_QWORD *)this + 2);
      if (v24 < v11 && *v24 == 16)
      {
        do
        {
          v12 = v24 + 1;
          *((_QWORD *)this + 1) = v12;
LABEL_33:
          v36 = 0;
          if (v12 >= v11 || *v12 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
            if (!(_DWORD)result)
              return result;
            v25 = v36;
            v26 = *(_DWORD *)(a1 + 32);
            v27 = *(_QWORD *)(a1 + 24);
            if (v26 == *(_DWORD *)(a1 + 36))
            {
LABEL_39:
              if (2 * v26 <= v26 + 1)
                v28 = v26 + 1;
              else
                v28 = 2 * v26;
              if (v28 <= 4)
                v28 = 4;
              *(_DWORD *)(a1 + 36) = v28;
              operator new[]();
            }
          }
          else
          {
            v25 = *v12;
            *((_QWORD *)this + 1) = v12 + 1;
            v26 = *(_DWORD *)(a1 + 32);
            v27 = *(_QWORD *)(a1 + 24);
            if (v26 == *(_DWORD *)(a1 + 36))
              goto LABEL_39;
          }
          *(_DWORD *)(a1 + 32) = v26 + 1;
          *(_DWORD *)(v27 + 4 * v26) = v25;
          v29 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
          if (v29 >= 1)
          {
            for (i = v29 + 1; i > 1; --i)
            {
              v33 = (_BYTE *)*((_QWORD *)this + 1);
              v34 = *((_QWORD *)this + 2);
              if ((unint64_t)v33 >= v34 || *v33 != 16)
                break;
              *((_QWORD *)this + 1) = v33 + 1;
              v35 = 0;
              if ((unint64_t)(v33 + 1) >= v34 || (char)v33[1] < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
                if (!(_DWORD)result)
                  return result;
                v31 = v35;
                v27 = *v6;
              }
              else
              {
                v31 = v33[1];
                *((_QWORD *)this + 1) = v33 + 2;
              }
              v32 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v32 + 1;
              *(_DWORD *)(v27 + 4 * v32) = v31;
            }
          }
LABEL_55:
          v24 = (char *)*((_QWORD *)this + 1);
          v11 = (char *)*((_QWORD *)this + 2);
        }
        while (v24 < v11 && *v24 == 16);
        if (v24 == v11 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    else
    {
LABEL_19:
      if (v10 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
        return 0;
    }
  }
  if (TagFallback >> 3 != 2)
  {
    v10 = TagFallback & 7;
    goto LABEL_19;
  }
  v10 = TagFallback & 7;
  if (v10 != 2)
  {
    if ((TagFallback & 7) == 0)
    {
      v12 = (char *)*((_QWORD *)this + 1);
      v11 = (char *)*((_QWORD *)this + 2);
      goto LABEL_33;
    }
    goto LABEL_19;
  }
  result = sub_1002DD9B4(this, v6);
  if ((_DWORD)result)
    goto LABEL_55;
  return result;
}

void sub_1002E366C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E3694(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10042EA30 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(*(_QWORD *)(v5 + 24) + 4 * v7++), (int)a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  v10 = *(_QWORD **)(v5 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E3744(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  unsigned int *v6;
  unsigned int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  unint64_t v12;
  _QWORD *v13;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v14;
  _QWORD *v15;

  v4 = a2;
  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v6 = (unsigned int *)*((_QWORD *)this + 2);
    if (v6)
    {
      *(_BYTE *)a2 = 10;
      v7 = (_DWORD)a2 + 1;
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
      if (v8 <= 0x7F)
      {
LABEL_4:
        *((_BYTE *)v4 + 1) = (_BYTE)v8;
        v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_7:
        v4 = sub_1002DA02C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3, a4);
        goto LABEL_8;
      }
    }
    else
    {
      v6 = *(unsigned int **)(qword_10042EA30 + 16);
      *(_BYTE *)a2 = 10;
      v7 = (_DWORD)a2 + 1;
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
      if (v8 <= 0x7F)
        goto LABEL_4;
    }
    v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    v10 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 3) + 4 * v10);
          *(_BYTE *)v4 = 16;
          v12 = (unint64_t)v4 + 1;
          if ((v11 & 0x80000000) == 0)
            break;
          v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
          if (++v10 >= *((int *)this + 8))
            goto LABEL_16;
        }
        if (v11 > 0x7F)
          break;
        *((_BYTE *)v4 + 1) = (_BYTE)v11;
        v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        if (++v10 >= *((int *)this + 8))
          goto LABEL_16;
      }
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
      ++v10;
    }
    while (v10 < *((int *)this + 8));
  }
LABEL_16:
  v15 = (_QWORD *)*((_QWORD *)this + 1);
  v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v13 = v15;
  if (!v15 || *v13 == v13[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v4, a3);
}

uint64_t sub_1002E3888(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  uint64_t v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;

  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    v9 = *(_QWORD *)(a1 + 16);
    if (v9)
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002DA150(v9, a2);
      if (v10 < 0x80)
        goto LABEL_10;
    }
    else
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002DA150(*(_QWORD *)(qword_10042EA30 + 16), a2);
      if (v10 < 0x80)
      {
LABEL_10:
        v3 = (_DWORD)v10 + 2;
        v4 = *(_DWORD *)(a1 + 32);
        if (v4 < 1)
          goto LABEL_3;
        goto LABEL_14;
      }
    }
    v3 = (_DWORD)v10
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)
       + 1;
    v4 = *(_DWORD *)(a1 + 32);
    if (v4 < 1)
      goto LABEL_3;
    goto LABEL_14;
  }
  v3 = 0;
  v4 = *(_DWORD *)(a1 + 32);
  if (v4 < 1)
  {
LABEL_3:
    v5 = 0;
    goto LABEL_4;
  }
LABEL_14:
  v11 = 0;
  v5 = 0;
  do
  {
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 24)
                                                                                           + 4 * v11);
    if ((v13 & 0x80000000) != 0)
    {
      v12 = 10;
    }
    else if (v13 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      v4 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      v12 = 1;
    }
    v5 += v12;
    ++v11;
  }
  while (v11 < v4);
LABEL_4:
  v6 = (v5 + v3 + v4);
  v7 = *(_QWORD **)(a1 + 8);
  if (v7 && *v7 != v7[1])
    v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v6;
  *(_DWORD *)(a1 + 40) = v6;
  return v6;
}

uint64_t sub_1002E39AC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", 4481);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002E2E4C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E3A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E3A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E3A88(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E3AD0(uint64_t a1)
{
  uint64_t v2;

  if ((*(_BYTE *)(a1 + 44) & 1) == 0)
    return 0;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  else
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(qword_10042EA30 + 16) + 40))(*(_QWORD *)(qword_10042EA30 + 16));
}

uint64_t sub_1002E3B0C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002D8D24;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A208, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A1F0;
}

void sub_1002E3B80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E3B94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1002E3B9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1002E3BA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1002E3BAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1002E3BB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 208);
}

uint64_t sub_1002E3BBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1002E3BC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_1002E3BCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1002E3BD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_1002E3BDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_1002E3BE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1002E3BEC(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    v5 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v5);
      v8 = *((_DWORD *)a1 + 3);
      v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      v6 = *(_QWORD *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      result = sub_1002DBA7C(*(_QWORD *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1002E3D1C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E3D44(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    v5 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v5);
      v8 = *((_DWORD *)a1 + 3);
      v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      v6 = *(_QWORD *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      result = sub_100095DF8(*(_QWORD *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1002E3E70()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E3E98(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    v5 = 0;
    __asm { FMOV            V8.2S, #1.0 }
    do
    {
      v12 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v5);
      v13 = *((_DWORD *)a1 + 3);
      v14 = *((int *)a1 + 2);
      if ((int)v14 >= v13)
      {
        if (v13 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v13 + 1);
          v13 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v13 + 1;
        operator new();
      }
      v11 = *(_QWORD *)a1;
      *((_DWORD *)a1 + 2) = v14 + 1;
      result = sub_100094AEC(*(_DWORD **)(v11 + 8 * v14), v12);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1002E3FC4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E3FF0()
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v0;
  uint64_t v1;
  uint64_t FileByName;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *__p;
  __int128 v7;

  v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_1002E43C8();
  v1 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  __p = operator new(0x20uLL);
  v7 = xmmword_100383010;
  strcpy((char *)__p, "protobuf/gen/venue.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v1, &__p);
  v3 = FileByName;
  if (SHIBYTE(v7) < 0)
  {
    operator delete(__p);
    if (v3)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(&__p, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 52);
  v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(&__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v5, v4);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
LABEL_6:
  qword_10041A220 = *(_QWORD *)(v3 + 80);
  operator new();
}

void sub_1002E4350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E4364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E4378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002E43C8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  int v12;

  if ((byte_10041A210 & 1) == 0)
  {
    byte_10041A210 = 1;
    v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", a4);
    sub_1002E8B6C(v4, v5, v6, v7);
    sub_1002D7A18(v8, v9, v10, v11);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x18protobuf/gen/venue.proto\x12\vproto.venue\x1A\x1Eprotobuf/gen/coordinates.proto\x1A\x17protobuf/gen/math.proto\"B\n\rPolygonBounds\x12\x0E\n\x02xs\x18\x01 \x03(\x01B\x02\x10\x01\x12\x0E\n\x02ys\x18\x02 \x03(\x01B\x02\x10\x01\x12\x11\n\ttolerance\x18\x03 \x01(\x01\"u\n\x0EGeoJsonPolygon\x120\n\fexteriorRing\x18\x01 \x01(\v2\x1A.proto.venue.PolygonBounds\x121\n\rinteriorRings\x18\x02 \x03(\v2\x1A.proto.venue.PolygonBounds\"\x80\x01\n\x1DIndoorOutdoorLikelihoodParams\x12\x1E\n\x16indoorSurveyOnTileMean\x18\x01 \x02(\x01\x12\x1D\n\x15indoorSurveyOnTileMin\x18\x02 \x02(\x01\x12 \n\x18indoorSurveyOnTileStdDev\x18\x03 \x02(\x01\"\xB1\b\n\rFloorMetadata\x12\v\n\x03uid\x18\x01 \x02(\t\x12\x13\n"
                                                                "\vfloorNumber\x18\x02 \x01(\x05\x12\x16\n"
                                                                "\x0ErssiMapVersion\x18\x03 \x02(\x03\x12/\n"
                                                                "\ftangentPoint\x18\x04 \x02(\v2\x19.proto.coordinates.La"
                                                                "tLon\x12/\n"
                                                                "\tglobalDbm\x18\x05 \x02(\v2\x1C.proto.math.ObservationS"
                                                                "tats\x12N\n"
                                                                "\x17radioMapCoordinateFrame\x18\x06 \x02(\v2-.proto.coor"
                                                                "dinates.BoundedCellCoordinateFrame\x12Q\n"
                                                                "\x1DwifiScanCountLikelihoodParams\x18\a \x02(\v2*.proto."
                                                                "venue.IndoorOutdoorLikelihoodParams\x12S\n"
                                                                "\x1FbeaconScanCountLikelihoodParams\x18\n"
                                                                " \x01(\v2*.proto.venue.IndoorOutdoorLikelihoodParams\x12"
                                                                "0\n"
                                                                "\fsurveyBounds\x18\b \x03(\v2\x1A.proto.venue.PolygonBou"
                                                                "nds\x12\f\n"
                                                                "\x04area\x18\t \x01(\x01\x12K\n"
                                                                "\fencodingType\x18\v \x01(\x0E2!.proto.venue.RadioMapEnc"
                                                                "odingType:\x12FixedPointEncoding\x12J\n"
                                                                "\x11mapCellLookupMode\x18\f \x01(\x0E2\x1E.proto.venue.M"
                                                                "apCellLookupMode:\x0FNearestNeighbor\x124\n"
                                                                "\x0FfloorplanBounds\x18\r \x03(\v2\x1B.proto.venue.GeoJs"
                                                                "onPolygon\x12'\n"
                                                                "\x1Fwifi2GpsFusionAccuracyThreshold\x18\x0E \x01(\x01\x12"
                                                                "-\n"
                                                                "\acontext\x18\x0F \x01(\x0E2\x1C.proto.venue.LocationCon"
                                                                "text\x12)\n"
                                                                "!wifi2GpsInjectionParticleFraction\x18\x10 \x01(\x01\x12"
                                                                "L\n"
                                                                "\x14gpsAccuracyTransform\x18\x11 \x01(\v2..proto.math.Li"
                                                                "nearSaturationFunctionParameters\x12K\n"
                                                                "\x13gpsAzimuthTransform\x18\x12 \x01(\v2..proto.math.Lin"
                                                                "earSaturationFunctionParameters\x12'\n"
                                                                "\x1FcoarseRegionalWithWifiLocations\x18\x13 \x01(\b\x12\x16"
                                                                "\n"
                                                                "\x0EaltitudeMeters\x18\x14 \x01(\x01\x12\x1E\n"
                                                                "\x16verticalAccuracyMeters\x18\x15 \x01(\x01\"\x95\x01\n"
                                                                "\tOccupancy\x12F\n"
                                                                "\x0FcoordinateFrame\x18\x01 \x02(\v2-.proto.coordinates."
                                                                "BoundedCellCoordinateFrame\x12\x10\n"
                                                                "\bwalkable\x18\x02 \x02(\f\x12.\n"
                                                                "\aversion\x18\x03 \x01(\x0E2\x1D.proto.venue.OccupancyVe"
                                                                "rsion*6\n"
                                                                "\x11MapCellLookupMode\x12\x13\n"
                                                                "\x0FNearestNeighbor\x10\x01\x12\f\n"
                                                                "\bBilinear\x10\x02*\xC0\x01\n"
                                                                "\x14RadioMapEncodingType\x12\x1D\n"
                                                                "\x19MangledFixedPointEncoding\x10\x01\x12\x16\n"
                                                                "\x12FixedPointEncoding\x10\x02\x12\x1F\n"
                                                                "\x1BRadiozapEncodingNoCertainty\x10\x03\x12\x14\n"
                                                                "\x10RadiozapEncoding\x10\x04\x12\x19\n"
                                                                "\x15PathLossModelEncoding\x10\x05\x12\x1F\n"
                                                                "\x1BRadiozapEncoding_deprecated\x10e*+\n"
                                                                "\x0FLocationContext\x12\n"
                                                                "\n"
                                                                "\x06Indoor\x10\x01\x12\f\n"
                                                                "\bRegional\x10\x02*>\n"
                                                                "\x10OccupancyVersion\x12\x0F\n"
                                                                "\vSurveyBased\x10\x01\x12\x19\n"
                                                                "\x15FloorplanOpeningBased\x10\x02B\x1E\n"
                                                                "\x1Ccom.apple.indoor.proto.venue",
      (const void *)0x7F2,
      v12);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("protobuf/gen/venue.proto", sub_1002E4854);
    operator new();
  }
}

void sub_1002E4674()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E46A0()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E46CC()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E46F8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E4724()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E4750()
{
  uint64_t result;

  if (qword_10042EA38)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA38 + 8))(qword_10042EA38);
  if (qword_10041A228)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A228 + 8))(qword_10041A228);
  if (qword_10042EA40)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA40 + 8))(qword_10042EA40);
  if (qword_10041A238)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A238 + 8))(qword_10041A238);
  if (qword_10042EA48)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA48 + 8))(qword_10042EA48);
  if (qword_10041A248)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A248 + 8))(qword_10041A248);
  if (qword_10042EA50)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA50 + 8))(qword_10042EA50);
  if (qword_10041A258)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A258 + 8))(qword_10041A258);
  if (qword_10042EA58)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA58 + 8))(qword_10042EA58);
  result = qword_10041A268;
  if (qword_10041A268)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_10041A268 + 8))(qword_10041A268);
  return result;
}

uint64_t sub_1002E4854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;

  v0 = qword_10041A290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v11[1] = sub_1002E3FF0;
    v12 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A290, v11);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v11);
  }
  v1 = qword_10041A220;
  if (!qword_10042EA38)
    ((void (*)(void))sub_1002E43C8)();
  v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  v3 = qword_10041A230;
  if (!qword_10042EA40)
    sub_1002E43C8(v2);
  v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
  v5 = qword_10041A240;
  if (!qword_10042EA48)
    sub_1002E43C8(v4);
  v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5);
  v7 = qword_10041A250;
  if (!qword_10042EA50)
    sub_1002E43C8(v6);
  v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v7);
  v9 = qword_10041A260;
  if (qword_10042EA58)
    return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(qword_10041A260);
  sub_1002E43C8(v8);
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v9);
}

void sub_1002E4988(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL sub_1002E499C(int a1)
{
  return (a1 - 1) < 5 || a1 == 101;
}

uint64_t sub_1002E49B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  char v17;
  _BYTE v18[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v18, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 624);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    v6 = *(_DWORD *)(a1 + 24);
    v7 = *(_DWORD *)(a1 + 28);
    v8 = v6 + v5;
    if (v7 < v8)
    {
      v9 = 2 * v7;
      if (2 * v7 <= v8)
        v9 = v8;
      if (v9 <= 4)
        v9 = 4;
      *(_DWORD *)(a1 + 28) = v9;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 16) + 8 * v6), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  v10 = *(_DWORD *)(a2 + 48);
  if (v10)
  {
    v11 = *(_DWORD *)(a1 + 48);
    v12 = *(_DWORD *)(a1 + 52);
    v13 = v11 + v10;
    if (v12 < v13)
    {
      v14 = 2 * v12;
      if (2 * v12 <= v13)
        v14 = v13;
      if (v14 <= 4)
        v14 = 4;
      *(_DWORD *)(a1 + 52) = v14;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 40) + 8 * v11), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  if ((*(_BYTE *)(a2 + 76) & 4) != 0)
  {
    v15 = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 76) |= 4u;
    *(_QWORD *)(a1 + 64) = v15;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002E4BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E4BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E4BEC(_QWORD *a1)
{
  *a1 = off_1004038D8;
  if (a1[5])
    operator delete[]();
  if (a1[2])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1002E4C58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_1002E4C60()
{
  operator new();
}

void sub_1002E4CB4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E4CDC(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if ((*(_WORD *)(a1 + 76) & 0x3FC) != 0)
    *(_QWORD *)(a1 + 64) = 0;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 17) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002E4D08(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, 0xAu);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, *(_DWORD *)(v4 + 32));
    if (*(int *)(v4 + 24) >= 1)
    {
      v5 = 0;
      do
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a2, *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8 * v5++));
      while (v5 < *(int *)(v4 + 24));
    }
  }
  if (*(int *)(v4 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, 0x12u);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, *(_DWORD *)(v4 + 56));
    if (*(int *)(v4 + 48) >= 1)
    {
      v6 = 0;
      do
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a2, *(_QWORD *)(*(_QWORD *)(v4 + 40) + 8 * v6++));
      while (v6 < *(int *)(v4 + 48));
    }
  }
  if ((*(_BYTE *)(v4 + 76) & 4) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 64), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

_BYTE *sub_1002E4E1C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  if (*((int *)this + 6) >= 1)
  {
    *a2 = 10;
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v4 > 0x7F)
    {
      a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
      if (*((int *)this + 6) < 1)
        goto LABEL_8;
    }
    else
    {
      a2[1] = (_BYTE)v4;
      a2 += 2;
      if (*((int *)this + 6) < 1)
        goto LABEL_8;
    }
    v5 = 0;
    do
    {
      *(_QWORD *)a2 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * v5);
      a2 += 8;
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
LABEL_8:
  if (*((int *)this + 12) <= 0)
    goto LABEL_15;
  *a2 = 18;
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v6 > 0x7F)
  {
    a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    if (*((int *)this + 12) < 1)
      goto LABEL_15;
  }
  else
  {
    a2[1] = (_BYTE)v6;
    a2 += 2;
    if (*((int *)this + 12) < 1)
      goto LABEL_15;
  }
  v7 = 0;
  do
  {
    *(_QWORD *)a2 = *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v7);
    a2 += 8;
    ++v7;
  }
  while (v7 < *((int *)this + 12));
LABEL_15:
  if ((*((_BYTE *)this + 76) & 4) != 0)
  {
    v8 = *((_QWORD *)this + 8);
    *a2 = 25;
    *(_QWORD *)(a2 + 1) = v8;
    a2 += 9;
  }
  v11 = (_QWORD *)*((_QWORD *)this + 1);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v9 = v11;
  if (!v11 || *v9 == v9[1])
    return a2;
  else
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1002E4F9C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;

  v3 = (*(unsigned __int8 *)(a1 + 76) << 29 >> 31) & 9;
  v4 = *(_DWORD *)(a1 + 24);
  v5 = 8 * v4;
  if (v4 >= 1)
  {
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v4), a2)+ 1;
    else
      v6 = 2;
    v3 += v6;
  }
  *(_DWORD *)(a1 + 32) = v5;
  v7 = v3 + v5;
  v8 = *(_DWORD *)(a1 + 48);
  v9 = 8 * v8;
  if (v8 >= 1)
  {
    if (v9 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v8), a2)+ 1;
    else
      v10 = 2;
    v7 += v10;
  }
  v11 = *(_QWORD **)(a1 + 8);
  *(_DWORD *)(a1 + 56) = v9;
  v12 = v7 + v9;
  if (v11 && *v11 != v11[1])
    v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v12;
  *(_DWORD *)(a1 + 72) = v12;
  return v12;
}

uint64_t sub_1002E5068(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 612);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002E49B8((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E511C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E5130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E5144(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E518C()
{
  return 1;
}

uint64_t sub_1002E5194()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002E3FF0;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A290, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A220;
}

void sub_1002E5208(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E521C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 879);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    sub_1002E85C0((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(_BYTE *)(a2 + 52) & 1) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  else
  {
    sub_1002E85C0((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(_BYTE *)(a2 + 52) & 1) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  *(_DWORD *)(a1 + 52) |= 1u;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    operator new();
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
    v6 = *(_QWORD *)(qword_10042EA40 + 16);
  sub_1002E49B8(v5, v6);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002E5340()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E5368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E537C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E5390(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;

  *(_QWORD *)a1 = off_100403988;
  if (qword_10042EA40 != a1)
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (i = 0; i < v3; ++i)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
        v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(_QWORD *)(a1 + 24))
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1002E5444(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1002E544C()
{
  operator new();
}

void sub_1002E54A4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E54CC(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;

  v1 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0)
  {
    this = *(_QWORD *)(this + 16);
    if (this)
    {
      if ((*(_WORD *)(this + 76) & 0x3FC) != 0)
        *(_QWORD *)(this + 64) = 0;
      v2 = *(_QWORD *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 16) = 0;
      *(_DWORD *)(this + 40) = 0;
      *(_DWORD *)(this + 68) = 0;
      if (v2)
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  v6 = *(_QWORD *)(v1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 11) = 0;
  if (v6)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  return this;
}

uint64_t sub_1002E5574(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  v5 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10042EA40 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  v10 = *(_QWORD **)(v5 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E5624(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  unsigned int *v5;
  unsigned int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  unsigned int *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  _QWORD *v13;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v14;
  _QWORD *v15;

  v3 = a2;
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v5 = (unsigned int *)*((_QWORD *)this + 2);
    if (v5)
    {
      *(_BYTE *)a2 = 10;
      v6 = (_DWORD)a2 + 1;
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[18];
      if (v7 <= 0x7F)
      {
LABEL_4:
        *((_BYTE *)v3 + 1) = (_BYTE)v7;
        v8 = (char *)v3 + 2;
LABEL_7:
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E4E1C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v5, v8, a3);
        goto LABEL_8;
      }
    }
    else
    {
      v5 = *(unsigned int **)(qword_10042EA40 + 16);
      *(_BYTE *)a2 = 10;
      v6 = (_DWORD)a2 + 1;
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[18];
      if (v7 <= 0x7F)
        goto LABEL_4;
    }
    v8 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    v9 = 0;
    do
    {
      v11 = *(unsigned int **)(*((_QWORD *)this + 3) + 8 * v9);
      *(_BYTE *)v3 = 18;
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[18];
      if (v12 > 0x7F)
      {
        v10 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
      }
      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v12;
        v10 = (char *)v3 + 2;
      }
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E4E1C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v10, a3);
      ++v9;
    }
    while (v9 < *((int *)this + 8));
  }
  v15 = (_QWORD *)*((_QWORD *)this + 1);
  v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v13 = v15;
  if (!v15 || *v13 == v13[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_1002E574C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  _QWORD *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  _QWORD *v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  _QWORD *v31;

  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    v3 = *(_DWORD *)(a1 + 32);
    v4 = v3;
    if (v3 < 1)
      goto LABEL_41;
    goto LABEL_23;
  }
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    v5 = *(_QWORD *)(qword_10042EA40 + 16);
  v6 = (*(unsigned __int8 *)(v5 + 76) << 29 >> 31) & 9;
  v7 = *(_DWORD *)(v5 + 24);
  v8 = 8 * v7;
  if (v7 >= 1)
  {
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v7), a2)+ 1;
    else
      v9 = 2;
    v6 += v9;
  }
  *(_DWORD *)(v5 + 32) = v8;
  v10 = v6 + v8;
  v11 = *(_DWORD *)(v5 + 48);
  v12 = 8 * v11;
  if (v11 >= 1)
  {
    if (v12 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v11), a2)+ 1;
    else
      v13 = 2;
    v10 += v13;
  }
  v14 = *(_QWORD **)(v5 + 8);
  *(_DWORD *)(v5 + 56) = v12;
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v10 + v12);
  if (v14 && *v14 != v14[1])
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8), a2)+ v15);
  *(_DWORD *)(v5 + 72) = (_DWORD)v15;
  if (v15 >= 0x80)
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
  else
    v16 = 1;
  v17 = *(_DWORD *)(a1 + 32);
  v4 = (v17 + (_DWORD)v15 + v16 + 1);
  if (v17 >= 1)
  {
LABEL_23:
    v18 = 0;
    do
    {
      v20 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * v18);
      v21 = (*(unsigned __int8 *)(v20 + 76) << 29 >> 31) & 9;
      v22 = *(_DWORD *)(v20 + 24);
      v23 = 8 * v22;
      if (v22 >= 1)
      {
        if (v23 >= 0x80)
          v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v22), a2)+ 1;
        else
          v24 = 2;
        v21 += v24;
      }
      *(_DWORD *)(v20 + 32) = v23;
      v25 = v21 + v23;
      v26 = *(_DWORD *)(v20 + 48);
      v27 = 8 * v26;
      if (v26 >= 1)
      {
        if (v27 >= 0x80)
          v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v26), a2)+ 1;
        else
          v28 = 2;
        v25 += v28;
      }
      v29 = *(_QWORD **)(v20 + 8);
      *(_DWORD *)(v20 + 56) = v27;
      v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v25 + v27);
      if (v29 && *v29 != v29[1])
        v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8), a2)+ v30);
      *(_DWORD *)(v20 + 72) = (_DWORD)v30;
      if (v30 >= 0x80)
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
      else
        v19 = 1;
      v4 = ((_DWORD)v30 + v4 + v19);
      ++v18;
    }
    while (v18 < *(int *)(a1 + 32));
  }
LABEL_41:
  v31 = *(_QWORD **)(a1 + 8);
  if (v31 && *v31 != v31[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

uint64_t sub_1002E5994(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 867);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002E521C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E5A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E5A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E5A70(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E5AB8()
{
  return 1;
}

uint64_t sub_1002E5AC0()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002E3FF0;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A290, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A230;
}

void sub_1002E5B34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E5B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 1155);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 44) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 44) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v9 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(_QWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(_QWORD *)(a1 + 16) = v8;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    v6 = *(_QWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_QWORD *)(a1 + 32) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002E5C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E5C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E5C4C(uint64_t a1)
{
  *(_QWORD *)a1 = off_100403A38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1002E5C7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1002E5C84()
{
  operator new();
}

void sub_1002E5CD4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E5CFC(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 44))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002E5D20(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 4) == 0)
  {
LABEL_4:
    v8 = *(_QWORD **)(v4 + 8);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    v6 = v8;
    if (!v8)
      return this;
    goto LABEL_9;
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_9:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1002E5DC4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
LABEL_8:
      v9 = *(_QWORD *)(a1 + 32);
      *(_BYTE *)a2 = 25;
      *(_QWORD *)(a2 + 1) = v9;
      a2 += 9;
      v10 = *(_QWORD **)(a1 + 8);
      v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v5 = v10;
      if (!v10)
        return a2;
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)(a2 + 1) = v8;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 44) & 4) != 0)
    goto LABEL_8;
LABEL_4:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_9:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1002E5EF4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 44);
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v4 += 9;
  if ((v3 & 4) != 0)
    v4 += 9;
  if (*(_BYTE *)(a1 + 44))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_1002E5F64(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 1143);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002E5B48((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E6018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E602C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E6040(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E6088()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002E3FF0;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A290, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A240;
}

void sub_1002E60FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E6110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  const std::string *v6;
  std::string *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  char v32;
  uint64_t v33;
  char v34;
  _BYTE v35[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v35, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 2162);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v35, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v34, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v35);
  }
  sub_1002E85C0((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), a2 + 80);
  sub_1002E86F4((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112), a2 + 112);
  v5 = *(_DWORD *)(a2 + 200);
  if (!(_BYTE)v5)
    goto LABEL_12;
  if ((v5 & 1) != 0)
  {
    v6 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 200) |= 1u;
    v7 = *(std::string **)(a1 + 16);
    if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v7, v6);
    v5 = *(_DWORD *)(a2 + 200);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 200) |= 2u;
  *(_DWORD *)(a1 + 56) = v8;
  v5 = *(_DWORD *)(a2 + 200);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  v9 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 200) |= 4u;
  *(_QWORD *)(a1 + 24) = v9;
  v5 = *(_DWORD *)(a2 + 200);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
LABEL_25:
    *(_DWORD *)(a1 + 200) |= 0x10u;
    v12 = *(_QWORD *)(a1 + 40);
    if (!v12)
      operator new();
    v13 = *(_QWORD *)(a2 + 40);
    if (v13)
    {
      sub_1002D7D14(v12, v13);
      v5 = *(_DWORD *)(a2 + 200);
      if ((v5 & 0x20) != 0)
        goto LABEL_31;
    }
    else
    {
      sub_1002D7D14(v12, *(_QWORD *)(qword_10042EA50 + 40));
      v5 = *(_DWORD *)(a2 + 200);
      if ((v5 & 0x20) != 0)
        goto LABEL_31;
    }
LABEL_10:
    if ((v5 & 0x40) == 0)
      goto LABEL_11;
    goto LABEL_37;
  }
LABEL_19:
  *(_DWORD *)(a1 + 200) |= 8u;
  v10 = *(_QWORD *)(a1 + 32);
  if (!v10)
    operator new();
  v11 = *(_QWORD *)(a2 + 32);
  if (v11)
  {
    sub_1002E8FB0(v10, v11);
    v5 = *(_DWORD *)(a2 + 200);
    if ((v5 & 0x10) != 0)
      goto LABEL_25;
  }
  else
  {
    sub_1002E8FB0(v10, *(_QWORD *)(qword_10042EA50 + 32));
    v5 = *(_DWORD *)(a2 + 200);
    if ((v5 & 0x10) != 0)
      goto LABEL_25;
  }
LABEL_9:
  if ((v5 & 0x20) == 0)
    goto LABEL_10;
LABEL_31:
  *(_DWORD *)(a1 + 200) |= 0x20u;
  v14 = *(_QWORD *)(a1 + 48);
  if (!v14)
    operator new();
  v15 = *(_QWORD *)(a2 + 48);
  if (v15)
  {
    sub_100072BB4(v14, v15);
    v5 = *(_DWORD *)(a2 + 200);
    if ((v5 & 0x40) != 0)
    {
LABEL_37:
      *(_DWORD *)(a1 + 200) |= 0x40u;
      v16 = *(_QWORD *)(a1 + 64);
      if (!v16)
        operator new();
      v17 = *(_QWORD *)(a2 + 64);
      if (v17)
      {
        sub_1002E5B48(v16, v17);
        v5 = *(_DWORD *)(a2 + 200);
        if ((v5 & 0x80) != 0)
          goto LABEL_43;
      }
      else
      {
        sub_1002E5B48(v16, *(_QWORD *)(qword_10042EA50 + 64));
        v5 = *(_DWORD *)(a2 + 200);
        if ((v5 & 0x80) != 0)
          goto LABEL_43;
      }
LABEL_12:
      if ((v5 & 0x1FE00) == 0)
        goto LABEL_56;
      goto LABEL_49;
    }
  }
  else
  {
    sub_100072BB4(v14, *(_QWORD *)(qword_10042EA50 + 48));
    v5 = *(_DWORD *)(a2 + 200);
    if ((v5 & 0x40) != 0)
      goto LABEL_37;
  }
LABEL_11:
  if ((v5 & 0x80) == 0)
    goto LABEL_12;
LABEL_43:
  *(_DWORD *)(a1 + 200) |= 0x80u;
  v18 = *(_QWORD *)(a1 + 72);
  if (!v18)
    operator new();
  v19 = *(_QWORD *)(a2 + 72);
  if (v19)
  {
    sub_1002E5B48(v18, v19);
    v5 = *(_DWORD *)(a2 + 200);
    if ((v5 & 0x1FE00) == 0)
      goto LABEL_56;
  }
  else
  {
    sub_1002E5B48(v18, *(_QWORD *)(qword_10042EA50 + 72));
    v5 = *(_DWORD *)(a2 + 200);
    if ((v5 & 0x1FE00) == 0)
      goto LABEL_56;
  }
LABEL_49:
  if ((v5 & 0x200) != 0)
  {
    v27 = *(_QWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 200) |= 0x200u;
    *(_QWORD *)(a1 + 104) = v27;
    v5 = *(_DWORD *)(a2 + 200);
    if ((v5 & 0x400) == 0)
    {
LABEL_51:
      if ((v5 & 0x800) == 0)
        goto LABEL_52;
      goto LABEL_74;
    }
  }
  else if ((v5 & 0x400) == 0)
  {
    goto LABEL_51;
  }
  v28 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 200) |= 0x400u;
  *(_DWORD *)(a1 + 60) = v28;
  v5 = *(_DWORD *)(a2 + 200);
  if ((v5 & 0x800) == 0)
  {
LABEL_52:
    if ((v5 & 0x2000) == 0)
      goto LABEL_53;
LABEL_75:
    v30 = *(_QWORD *)(a2 + 144);
    *(_DWORD *)(a1 + 200) |= 0x2000u;
    *(_QWORD *)(a1 + 144) = v30;
    v5 = *(_DWORD *)(a2 + 200);
    if ((v5 & 0x4000) == 0)
    {
LABEL_54:
      if ((v5 & 0x8000) == 0)
        goto LABEL_56;
      goto LABEL_55;
    }
    goto LABEL_76;
  }
LABEL_74:
  v29 = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 200) |= 0x800u;
  *(_DWORD *)(a1 + 136) = v29;
  v5 = *(_DWORD *)(a2 + 200);
  if ((v5 & 0x2000) != 0)
    goto LABEL_75;
LABEL_53:
  if ((v5 & 0x4000) == 0)
    goto LABEL_54;
LABEL_76:
  v31 = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 200) |= 0x4000u;
  *(_DWORD *)(a1 + 140) = v31;
  v5 = *(_DWORD *)(a2 + 200);
  if ((v5 & 0x8000) != 0)
  {
LABEL_55:
    v20 = *(_QWORD *)(a2 + 152);
    *(_DWORD *)(a1 + 200) |= 0x8000u;
    *(_QWORD *)(a1 + 152) = v20;
    v5 = *(_DWORD *)(a2 + 200);
  }
LABEL_56:
  if ((v5 & 0xFF0000) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v5 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 200) |= 0x10000u;
    v21 = *(_QWORD *)(a1 + 160);
    if (!v21)
      operator new();
    v22 = *(_QWORD *)(a2 + 160);
    if (!v22)
      v22 = *(_QWORD *)(qword_10042EA50 + 160);
    sub_10006F6F8(v21, v22);
    v5 = *(_DWORD *)(a2 + 200);
  }
  if ((v5 & 0x20000) != 0)
  {
    *(_DWORD *)(a1 + 200) |= 0x20000u;
    v23 = *(_QWORD *)(a1 + 168);
    if (!v23)
      operator new();
    v24 = *(_QWORD *)(a2 + 168);
    if (!v24)
      v24 = *(_QWORD *)(qword_10042EA50 + 168);
    sub_10006F6F8(v23, v24);
    v5 = *(_DWORD *)(a2 + 200);
  }
  if ((v5 & 0x40000) == 0)
  {
    if ((v5 & 0x80000) == 0)
      goto LABEL_69;
LABEL_79:
    v33 = *(_QWORD *)(a2 + 176);
    *(_DWORD *)(a1 + 200) |= 0x80000u;
    *(_QWORD *)(a1 + 176) = v33;
    if ((*(_DWORD *)(a2 + 200) & 0x100000) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_70;
  }
  v32 = *(_BYTE *)(a2 + 192);
  *(_DWORD *)(a1 + 200) |= 0x40000u;
  *(_BYTE *)(a1 + 192) = v32;
  v5 = *(_DWORD *)(a2 + 200);
  if ((v5 & 0x80000) != 0)
    goto LABEL_79;
LABEL_69:
  if ((v5 & 0x100000) != 0)
  {
LABEL_70:
    v25 = *(_QWORD *)(a2 + 184);
    *(_DWORD *)(a1 + 200) |= 0x100000u;
    *(_QWORD *)(a1 + 184) = v25;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002E66EC()
{
  operator delete();
}

void sub_1002E6714()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E6740()
{
  operator delete();
}

void sub_1002E6764()
{
  operator delete();
}

void sub_1002E6788()
{
  operator delete();
}

void sub_1002E67AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E67C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E67D4(uint64_t a1)
{
  sub_100096264(a1);
  operator delete();
}

uint64_t sub_1002E67F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 196) = a2;
  return result;
}

void sub_1002E6800()
{
  operator new();
}

void sub_1002E689C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E68C4(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _QWORD *v16;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v5 = this;
  v6 = *(_DWORD *)(this + 200);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(this + 16), a2);
    v6 = *(_DWORD *)(v5 + 200);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 56), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 200);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
LABEL_13:
    v7 = *(_QWORD *)(v5 + 32);
    if (v7)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
      v6 = *(_DWORD *)(v5 + 200);
      if ((v6 & 0x10) != 0)
        goto LABEL_17;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(qword_10042EA50 + 32), a2, a4);
      v6 = *(_DWORD *)(v5 + 200);
      if ((v6 & 0x10) != 0)
        goto LABEL_17;
    }
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
LABEL_21:
    v9 = *(_QWORD *)(v5 + 48);
    if (v9)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
      if ((*(_DWORD *)(v5 + 200) & 0x40) != 0)
        goto LABEL_25;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(qword_10042EA50 + 48), a2, a4);
      if ((*(_DWORD *)(v5 + 200) & 0x40) != 0)
        goto LABEL_25;
    }
LABEL_8:
    if (*(int *)(v5 + 88) < 1)
      goto LABEL_30;
    goto LABEL_28;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 200);
  if ((v6 & 8) != 0)
    goto LABEL_13;
LABEL_5:
  if ((v6 & 0x10) == 0)
    goto LABEL_6;
LABEL_17:
  v8 = *(_QWORD *)(v5 + 40);
  if (v8)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
    v6 = *(_DWORD *)(v5 + 200);
    if ((v6 & 0x20) != 0)
      goto LABEL_21;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(qword_10042EA50 + 40), a2, a4);
    v6 = *(_DWORD *)(v5 + 200);
    if ((v6 & 0x20) != 0)
      goto LABEL_21;
  }
LABEL_7:
  if ((v6 & 0x40) == 0)
    goto LABEL_8;
LABEL_25:
  v10 = *(_QWORD *)(v5 + 64);
  if (!v10)
    v10 = *(_QWORD *)(qword_10042EA50 + 64);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  if (*(int *)(v5 + 88) >= 1)
  {
LABEL_28:
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(*(_QWORD *)(v5 + 80) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 88));
  }
LABEL_30:
  v12 = *(_DWORD *)(v5 + 200);
  if ((v12 & 0x200) == 0)
  {
    if ((v12 & 0x80) == 0)
      goto LABEL_32;
LABEL_37:
    v13 = *(_QWORD *)(v5 + 72);
    if (v13)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v13, a2, a4);
      v12 = *(_DWORD *)(v5 + 200);
      if ((v12 & 0x400) != 0)
        goto LABEL_41;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(qword_10042EA50 + 72), a2, a4);
      v12 = *(_DWORD *)(v5 + 200);
      if ((v12 & 0x400) != 0)
        goto LABEL_41;
    }
LABEL_33:
    if ((v12 & 0x800) == 0)
      goto LABEL_34;
    goto LABEL_42;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 104), a3);
  v12 = *(_DWORD *)(v5 + 200);
  if ((v12 & 0x80) != 0)
    goto LABEL_37;
LABEL_32:
  if ((v12 & 0x400) == 0)
    goto LABEL_33;
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 60), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 200) & 0x800) == 0)
  {
LABEL_34:
    if (*(int *)(v5 + 120) < 1)
      goto LABEL_45;
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 136), (int)a2, a4);
  if (*(int *)(v5 + 120) < 1)
    goto LABEL_45;
LABEL_43:
  v14 = 0;
  do
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(_QWORD *)(*(_QWORD *)(v5 + 112) + 8 * v14++), a2, a4);
  while (v14 < *(int *)(v5 + 120));
LABEL_45:
  v15 = *(_DWORD *)(v5 + 200);
  if ((v15 & 0x2000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 144), a3);
    v15 = *(_DWORD *)(v5 + 200);
    if ((v15 & 0x4000) == 0)
    {
LABEL_47:
      if ((v15 & 0x8000) == 0)
        goto LABEL_48;
      goto LABEL_57;
    }
  }
  else if ((v15 & 0x4000) == 0)
  {
    goto LABEL_47;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 140), (int)a2, a4);
  v15 = *(_DWORD *)(v5 + 200);
  if ((v15 & 0x8000) == 0)
  {
LABEL_48:
    if ((v15 & 0x10000) == 0)
      goto LABEL_49;
    goto LABEL_58;
  }
LABEL_57:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (int)a2, *(double *)(v5 + 152), a3);
  v15 = *(_DWORD *)(v5 + 200);
  if ((v15 & 0x10000) == 0)
  {
LABEL_49:
    if ((v15 & 0x20000) == 0)
      goto LABEL_50;
LABEL_62:
    v20 = *(_QWORD *)(v5 + 168);
    if (v20)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v20, a2, a4);
      v15 = *(_DWORD *)(v5 + 200);
      if ((v15 & 0x40000) != 0)
        goto LABEL_66;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_QWORD *)(qword_10042EA50 + 168), a2, a4);
      v15 = *(_DWORD *)(v5 + 200);
      if ((v15 & 0x40000) != 0)
        goto LABEL_66;
    }
LABEL_51:
    if ((v15 & 0x80000) == 0)
      goto LABEL_52;
    goto LABEL_67;
  }
LABEL_58:
  v19 = *(_QWORD *)(v5 + 160);
  if (v19)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v19, a2, a4);
    v15 = *(_DWORD *)(v5 + 200);
    if ((v15 & 0x20000) != 0)
      goto LABEL_62;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(_QWORD *)(qword_10042EA50 + 160), a2, a4);
    v15 = *(_DWORD *)(v5 + 200);
    if ((v15 & 0x20000) != 0)
      goto LABEL_62;
  }
LABEL_50:
  if ((v15 & 0x40000) == 0)
    goto LABEL_51;
LABEL_66:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned __int8 *)(v5 + 192), (BOOL)a2, a4);
  v15 = *(_DWORD *)(v5 + 200);
  if ((v15 & 0x80000) == 0)
  {
LABEL_52:
    if ((v15 & 0x100000) == 0)
      goto LABEL_53;
    goto LABEL_68;
  }
LABEL_67:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (int)a2, *(double *)(v5 + 176), a3);
  if ((*(_DWORD *)(v5 + 200) & 0x100000) == 0)
  {
LABEL_53:
    v18 = *(_QWORD **)(v5 + 8);
    v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v16 = v18;
    if (!v18)
      return this;
    goto LABEL_69;
  }
LABEL_68:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (int)a2, *(double *)(v5 + 184), a3);
  v21 = *(_QWORD **)(v5 + 8);
  v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v16 = v21;
  if (!v21)
    return this;
LABEL_69:
  if (*v16 != v16[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v17, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E6CB4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  const void *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  unint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  uint64_t v18;
  unsigned int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  unsigned int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int *v28;
  unsigned int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v31;
  unsigned __int8 *v32;
  uint64_t v33;
  unsigned int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  unsigned int *v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  uint64_t v46;
  unsigned __int8 *v47;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v48;
  unint64_t v49;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v50;
  unint64_t v51;
  uint64_t v52;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v53;
  unsigned int *v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  int v56;
  int v57;
  _QWORD *v58;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v59;
  _QWORD *v60;
  uint64_t v61;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v67;
  uint64_t v68;
  unsigned __int8 *v69;
  uint64_t v70;
  unsigned int v71;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v72;
  uint64_t v73;
  unsigned __int8 *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;

  v4 = a2;
  v6 = *((_DWORD *)this + 50);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_22:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
    *(_BYTE *)v4 = 16;
    v16 = (unint64_t)v4 + 1;
    if ((v15 & 0x80000000) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v15, v16, a3);
      v7 = *((_DWORD *)this + 50);
      if ((v7 & 4) != 0)
        goto LABEL_29;
    }
    else if (v15 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v16, a3);
      v7 = *((_DWORD *)this + 50);
      if ((v7 & 4) != 0)
        goto LABEL_29;
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v15;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      v7 = *((_DWORD *)this + 50);
      if ((v7 & 4) != 0)
        goto LABEL_29;
    }
LABEL_4:
    if ((v7 & 8) == 0)
      goto LABEL_5;
LABEL_30:
    v18 = *((_QWORD *)this + 4);
    if (v18)
    {
      *(_BYTE *)v4 = 34;
      v19 = (_DWORD)v4 + 1;
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v18 + 32);
      if (v20 <= 0x7F)
        goto LABEL_32;
    }
    else
    {
      v18 = *(_QWORD *)(qword_10042EA50 + 32);
      *(_BYTE *)v4 = 34;
      v19 = (_DWORD)v4 + 1;
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v18 + 32);
      if (v20 <= 0x7F)
      {
LABEL_32:
        *((_BYTE *)v4 + 1) = (_BYTE)v20;
        v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E921C(v18, (uint64_t)v4 + 2, a3);
        v7 = *((_DWORD *)this + 50);
        if ((v7 & 0x10) != 0)
          goto LABEL_36;
LABEL_6:
        if ((v7 & 0x20) == 0)
          goto LABEL_7;
LABEL_42:
        v28 = (unsigned int *)*((_QWORD *)this + 6);
        if (v28)
        {
          *(_BYTE *)v4 = 50;
          v29 = (_DWORD)v4 + 1;
          v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[8];
          if (v30 <= 0x7F)
            goto LABEL_44;
        }
        else
        {
          v28 = *(unsigned int **)(qword_10042EA50 + 48);
          *(_BYTE *)v4 = 50;
          v29 = (_DWORD)v4 + 1;
          v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[8];
          if (v30 <= 0x7F)
          {
LABEL_44:
            *((_BYTE *)v4 + 1) = (_BYTE)v30;
            v4 = sub_1002EA34C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v28, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
            if ((*((_DWORD *)this + 50) & 0x40) != 0)
              goto LABEL_48;
LABEL_8:
            if (*((int *)this + 22) < 1)
              goto LABEL_59;
            goto LABEL_54;
          }
        }
        v31 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v30, v29, a3);
        v4 = sub_1002EA34C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v28, v31, v32);
        if ((*((_DWORD *)this + 50) & 0x40) != 0)
          goto LABEL_48;
        goto LABEL_8;
      }
    }
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, v19, a3);
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E921C(v18, v21, v22);
    v7 = *((_DWORD *)this + 50);
    if ((v7 & 0x10) != 0)
      goto LABEL_36;
    goto LABEL_6;
  }
  v8 = *((_QWORD *)this + 2);
  *(_BYTE *)a2 = 10;
  v9 = (_DWORD)a2 + 1;
  if (*(char *)(v8 + 23) < 0)
  {
    v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v8 + 8);
    if (v10 <= 0x7F)
      goto LABEL_12;
  }
  else
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v8 + 23);
    if (*(unsigned __int8 *)(v8 + 23) <= 0x7Fu)
    {
LABEL_12:
      *((_BYTE *)v4 + 1) = (_BYTE)v10;
      v11 = (_DWORD)v4 + 2;
      goto LABEL_15;
    }
  }
  v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
LABEL_15:
  v12 = *(char *)(v8 + 23);
  if (v12 >= 0)
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8;
  else
    v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v8;
  if (v12 >= 0)
    v14 = (const void *)*(unsigned __int8 *)(v8 + 23);
  else
    v14 = (const void *)*(unsigned int *)(v8 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v13, v14, v11, a4);
  if ((*((_DWORD *)this + 50) & 2) != 0)
    goto LABEL_22;
LABEL_3:
  v7 = *((_DWORD *)this + 50);
  if ((v7 & 4) == 0)
    goto LABEL_4;
LABEL_29:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 3);
  *(_BYTE *)v4 = 24;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, (unint64_t)v4 + 1, a3);
  v7 = *((_DWORD *)this + 50);
  if ((v7 & 8) != 0)
    goto LABEL_30;
LABEL_5:
  if ((v7 & 0x10) == 0)
    goto LABEL_6;
LABEL_36:
  v23 = *((_QWORD *)this + 5);
  if (v23)
  {
    *(_BYTE *)v4 = 42;
    v24 = (_DWORD)v4 + 1;
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 64);
    if (v25 <= 0x7F)
      goto LABEL_38;
LABEL_41:
    v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, v24, a3);
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002D8088(v23, v26, v27);
    v7 = *((_DWORD *)this + 50);
    if ((v7 & 0x20) != 0)
      goto LABEL_42;
    goto LABEL_7;
  }
  v23 = *(_QWORD *)(qword_10042EA50 + 40);
  *(_BYTE *)v4 = 42;
  v24 = (_DWORD)v4 + 1;
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 64);
  if (v25 > 0x7F)
    goto LABEL_41;
LABEL_38:
  *((_BYTE *)v4 + 1) = (_BYTE)v25;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002D8088(v23, (uint64_t)v4 + 2, a3);
  v7 = *((_DWORD *)this + 50);
  if ((v7 & 0x20) != 0)
    goto LABEL_42;
LABEL_7:
  if ((v7 & 0x40) == 0)
    goto LABEL_8;
LABEL_48:
  v33 = *((_QWORD *)this + 8);
  if (v33)
  {
    *(_BYTE *)v4 = 58;
    v34 = (_DWORD)v4 + 1;
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v33 + 40);
    if (v35 <= 0x7F)
    {
LABEL_50:
      *((_BYTE *)v4 + 1) = (_BYTE)v35;
      v36 = (uint64_t)v4 + 2;
      goto LABEL_53;
    }
  }
  else
  {
    v33 = *(_QWORD *)(qword_10042EA50 + 64);
    *(_BYTE *)v4 = 58;
    v34 = (_DWORD)v4 + 1;
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v33 + 40);
    if (v35 <= 0x7F)
      goto LABEL_50;
  }
  v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, v34, a3);
LABEL_53:
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E5DC4(v33, v36, a3);
  if (*((int *)this + 22) < 1)
    goto LABEL_59;
LABEL_54:
  v37 = 0;
  do
  {
    v39 = *(unsigned int **)(*((_QWORD *)this + 10) + 8 * v37);
    *(_BYTE *)v4 = 66;
    v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[18];
    if (v40 > 0x7F)
    {
      v38 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v40, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v40;
      v38 = (char *)v4 + 2;
    }
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E4E1C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, v38, a3);
    ++v37;
  }
  while (v37 < *((int *)this + 22));
LABEL_59:
  v41 = *((_DWORD *)this + 50);
  if ((v41 & 0x200) != 0)
  {
    v42 = *((_QWORD *)this + 13);
    *(_BYTE *)v4 = 73;
    *(_QWORD *)((char *)v4 + 1) = v42;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v41 = *((_DWORD *)this + 50);
    if ((v41 & 0x80) == 0)
    {
LABEL_61:
      if ((v41 & 0x400) == 0)
        goto LABEL_62;
LABEL_72:
      v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 15);
      *(_BYTE *)v4 = 88;
      v49 = (unint64_t)v4 + 1;
      if ((v48 & 0x80000000) != 0)
      {
        v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v48, v49, a3);
        if ((*((_BYTE *)this + 201) & 8) != 0)
          goto LABEL_79;
      }
      else if (v48 > 0x7F)
      {
        v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v48, v49, a3);
        if ((*((_BYTE *)this + 201) & 8) != 0)
          goto LABEL_79;
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v48;
        v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        if ((*((_BYTE *)this + 201) & 8) != 0)
          goto LABEL_79;
      }
LABEL_63:
      if (*((int *)this + 30) < 1)
        goto LABEL_91;
      goto LABEL_86;
    }
  }
  else if ((v41 & 0x80) == 0)
  {
    goto LABEL_61;
  }
  v43 = *((_QWORD *)this + 9);
  if (v43)
  {
    *(_BYTE *)v4 = 82;
    v44 = (_DWORD)v4 + 1;
    v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v43 + 40);
    if (v45 <= 0x7F)
      goto LABEL_68;
LABEL_71:
    v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v45, v44, a3);
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E5DC4(v43, v46, v47);
    if ((*((_DWORD *)this + 50) & 0x400) != 0)
      goto LABEL_72;
    goto LABEL_62;
  }
  v43 = *(_QWORD *)(qword_10042EA50 + 72);
  *(_BYTE *)v4 = 82;
  v44 = (_DWORD)v4 + 1;
  v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v43 + 40);
  if (v45 > 0x7F)
    goto LABEL_71;
LABEL_68:
  *((_BYTE *)v4 + 1) = (_BYTE)v45;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E5DC4(v43, (uint64_t)v4 + 2, a3);
  if ((*((_DWORD *)this + 50) & 0x400) != 0)
    goto LABEL_72;
LABEL_62:
  if ((*((_BYTE *)this + 201) & 8) == 0)
    goto LABEL_63;
LABEL_79:
  v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 34);
  *(_BYTE *)v4 = 96;
  v51 = (unint64_t)v4 + 1;
  if ((v50 & 0x80000000) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v50, v51, a3);
    if (*((int *)this + 30) < 1)
      goto LABEL_91;
  }
  else if (v50 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v50, v51, a3);
    if (*((int *)this + 30) < 1)
      goto LABEL_91;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v50;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 30) < 1)
      goto LABEL_91;
  }
LABEL_86:
  v52 = 0;
  do
  {
    v54 = *(unsigned int **)(*((_QWORD *)this + 14) + 8 * v52);
    *(_BYTE *)v4 = 106;
    v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v54[12];
    if (v55 > 0x7F)
    {
      v53 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v55, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v55;
      v53 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    v4 = sub_1002E5624((wireless_diagnostics::google::protobuf::internal::WireFormat *)v54, v53, a3);
    ++v52;
  }
  while (v52 < *((int *)this + 30));
LABEL_91:
  v56 = *((_DWORD *)this + 50);
  if ((v56 & 0x2000) == 0)
  {
    if ((v56 & 0x4000) == 0)
      goto LABEL_93;
LABEL_102:
    v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 35);
    *(_BYTE *)v4 = 120;
    v63 = (unint64_t)v4 + 1;
    if ((v62 & 0x80000000) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v62, v63, a3);
      v57 = *((_DWORD *)this + 50);
      if ((v57 & 0x8000) != 0)
        goto LABEL_109;
    }
    else if (v62 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v62, v63, a3);
      v57 = *((_DWORD *)this + 50);
      if ((v57 & 0x8000) != 0)
        goto LABEL_109;
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v62;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      v57 = *((_DWORD *)this + 50);
      if ((v57 & 0x8000) != 0)
        goto LABEL_109;
    }
LABEL_94:
    if ((v57 & 0x10000) == 0)
      goto LABEL_95;
    goto LABEL_110;
  }
  v61 = *((_QWORD *)this + 18);
  *(_BYTE *)v4 = 113;
  *(_QWORD *)((char *)v4 + 1) = v61;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 50) & 0x4000) != 0)
    goto LABEL_102;
LABEL_93:
  v57 = *((_DWORD *)this + 50);
  if ((v57 & 0x8000) == 0)
    goto LABEL_94;
LABEL_109:
  v64 = *((_QWORD *)this + 19);
  *(_WORD *)v4 = 385;
  *(_QWORD *)((char *)v4 + 2) = v64;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  v57 = *((_DWORD *)this + 50);
  if ((v57 & 0x10000) == 0)
  {
LABEL_95:
    if ((v57 & 0x20000) == 0)
      goto LABEL_96;
LABEL_116:
    v70 = *((_QWORD *)this + 21);
    if (v70)
    {
      *(_WORD *)v4 = 402;
      v71 = (_DWORD)v4 + 2;
      v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v70 + 48);
      if (v72 <= 0x7F)
        goto LABEL_118;
    }
    else
    {
      v70 = *(_QWORD *)(qword_10042EA50 + 168);
      *(_WORD *)v4 = 402;
      v71 = (_DWORD)v4 + 2;
      v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v70 + 48);
      if (v72 <= 0x7F)
      {
LABEL_118:
        *((_BYTE *)v4 + 2) = (_BYTE)v72;
        v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002D8934(v70, (uint64_t)v4 + 3, a3);
        v57 = *((_DWORD *)this + 50);
        if ((v57 & 0x40000) != 0)
          goto LABEL_122;
LABEL_97:
        if ((v57 & 0x80000) == 0)
          goto LABEL_98;
        goto LABEL_123;
      }
    }
    v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v72, v71, a3);
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002D8934(v70, v73, v74);
    v57 = *((_DWORD *)this + 50);
    if ((v57 & 0x40000) != 0)
      goto LABEL_122;
    goto LABEL_97;
  }
LABEL_110:
  v65 = *((_QWORD *)this + 20);
  if (v65)
  {
    *(_WORD *)v4 = 394;
    v66 = (_DWORD)v4 + 2;
    v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v65 + 48);
    if (v67 <= 0x7F)
      goto LABEL_112;
LABEL_115:
    v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v67, v66, a3);
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002D8934(v65, v68, v69);
    v57 = *((_DWORD *)this + 50);
    if ((v57 & 0x20000) != 0)
      goto LABEL_116;
    goto LABEL_96;
  }
  v65 = *(_QWORD *)(qword_10042EA50 + 160);
  *(_WORD *)v4 = 394;
  v66 = (_DWORD)v4 + 2;
  v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v65 + 48);
  if (v67 > 0x7F)
    goto LABEL_115;
LABEL_112:
  *((_BYTE *)v4 + 2) = (_BYTE)v67;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002D8934(v65, (uint64_t)v4 + 3, a3);
  v57 = *((_DWORD *)this + 50);
  if ((v57 & 0x20000) != 0)
    goto LABEL_116;
LABEL_96:
  if ((v57 & 0x40000) == 0)
    goto LABEL_97;
LABEL_122:
  v75 = *((_BYTE *)this + 192);
  *(_WORD *)v4 = 408;
  *((_BYTE *)v4 + 2) = v75;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  v57 = *((_DWORD *)this + 50);
  if ((v57 & 0x80000) == 0)
  {
LABEL_98:
    if ((v57 & 0x100000) == 0)
      goto LABEL_99;
LABEL_124:
    v77 = *((_QWORD *)this + 23);
    *(_WORD *)v4 = 425;
    *(_QWORD *)((char *)v4 + 2) = v77;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
    v78 = (_QWORD *)*((_QWORD *)this + 1);
    v59 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v58 = v78;
    if (!v78)
      return v4;
    goto LABEL_125;
  }
LABEL_123:
  v76 = *((_QWORD *)this + 22);
  *(_WORD *)v4 = 417;
  *(_QWORD *)((char *)v4 + 2) = v76;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  if ((*((_DWORD *)this + 50) & 0x100000) != 0)
    goto LABEL_124;
LABEL_99:
  v60 = (_QWORD *)*((_QWORD *)this + 1);
  v59 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v58 = v60;
  if (!v60)
    return v4;
LABEL_125:
  if (*v58 != v58[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v59, v4, a3);
  return v4;
}

uint64_t sub_1002E7560(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v25;
  _QWORD *v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  uint64_t v28;
  int v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v32;
  _QWORD *v33;
  int v34;
  int v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  int v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  int v41;
  int v42;
  uint64_t v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  int v45;
  uint64_t v46;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  int v62;
  _QWORD *v63;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v69;
  int v70;
  _QWORD *v71;

  v3 = *(_DWORD *)(a1 + 200);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    if ((v3 & 0x1FE00) != 0)
      goto LABEL_86;
    goto LABEL_29;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_22;
    goto LABEL_16;
  }
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v3 = *(_DWORD *)(a1 + 200);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = v10 + v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_16:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 10;
    }
    else if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      v3 = *(_DWORD *)(a1 + 200);
    }
    else
    {
      v12 = 1;
    }
    v4 += v12 + 1;
  }
LABEL_22:
  if ((v3 & 4) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 200);
    if ((v3 & 8) == 0)
    {
LABEL_24:
      if ((v3 & 0x10) == 0)
        goto LABEL_25;
LABEL_39:
      v17 = *(_QWORD *)(a1 + 40);
      if (v17)
      {
        v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002D82C0(v17, a2);
        if (v18 < 0x80)
          goto LABEL_41;
      }
      else
      {
        v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002D82C0(*(_QWORD *)(qword_10042EA50 + 40), a2);
        if (v18 < 0x80)
        {
LABEL_41:
          v4 += (_DWORD)v18 + 2;
          v3 = *(_DWORD *)(a1 + 200);
          if ((v3 & 0x20) != 0)
            goto LABEL_45;
LABEL_26:
          if ((v3 & 0x40) == 0)
            goto LABEL_27;
LABEL_51:
          v21 = *(_QWORD *)(a1 + 64);
          if (v21)
          {
            v22 = *(unsigned __int8 *)(v21 + 44);
            if (*(_BYTE *)(v21 + 44))
              goto LABEL_53;
          }
          else
          {
            v21 = *(_QWORD *)(qword_10042EA50 + 64);
            v22 = *(unsigned __int8 *)(v21 + 44);
            if (*(_BYTE *)(v21 + 44))
            {
LABEL_53:
              v23 = (v22 << 31 >> 31) & 9;
              if ((v22 & 2) != 0)
                v23 += 9;
              if ((v22 & 4) != 0)
                v24 = v23 + 9;
              else
                v24 = v23;
              v25 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v21 + 8);
              v26 = *(_QWORD **)(v21 + 8);
              if (!v26)
                goto LABEL_66;
              goto LABEL_62;
            }
          }
          v24 = 0;
          v25 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v21 + 8);
          v26 = *(_QWORD **)(v21 + 8);
          if (!v26)
            goto LABEL_66;
LABEL_62:
          if (*v26 != v26[1])
          {
            v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v25, a2)+ v24);
            *(_DWORD *)(v21 + 40) = (_DWORD)v27;
            if (v27 >= 0x80)
            {
              v4 += (_DWORD)v27
                  + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)+ 1;
              v3 = *(_DWORD *)(a1 + 200);
              if ((v3 & 0x80) != 0)
                goto LABEL_69;
            }
            else
            {
              v4 += (_DWORD)v27 + 2;
              v3 = *(_DWORD *)(a1 + 200);
              if ((v3 & 0x80) != 0)
                goto LABEL_69;
            }
            goto LABEL_28;
          }
LABEL_66:
          *(_DWORD *)(v21 + 40) = v24;
          v4 += v24 + 2;
          v3 = *(_DWORD *)(a1 + 200);
          if ((v3 & 0x80) != 0)
            goto LABEL_69;
LABEL_28:
          if ((v3 & 0x1FE00) == 0)
            goto LABEL_29;
LABEL_86:
          if ((v3 & 0x200) != 0)
            v35 = v4 + 9;
          else
            v35 = v4;
          if ((v3 & 0x400) == 0)
          {
            if ((v3 & 0x800) == 0)
              goto LABEL_91;
LABEL_106:
            v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
            if ((v38 & 0x80000000) != 0)
            {
              v39 = 10;
            }
            else if (v38 >= 0x80)
            {
              v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
              v3 = *(_DWORD *)(a1 + 200);
            }
            else
            {
              v39 = 1;
            }
            v35 += v39 + 1;
            if ((v3 & 0x2000) != 0)
              v35 += 9;
            if ((v3 & 0x4000) == 0)
            {
LABEL_94:
              if ((v3 & 0x8000) != 0)
                v4 = v35 + 10;
              else
                v4 = v35;
              if ((v3 & 0xFF0000) != 0)
                goto LABEL_123;
              goto LABEL_30;
            }
LABEL_114:
            v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
            if ((v40 & 0x80000000) != 0)
            {
              v41 = 10;
            }
            else if (v40 >= 0x80)
            {
              v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2);
              v3 = *(_DWORD *)(a1 + 200);
            }
            else
            {
              v41 = 1;
            }
            v42 = v35 + v41 + 1;
            if ((v3 & 0x8000) != 0)
              v4 = v42 + 10;
            else
              v4 = v42;
            if ((v3 & 0xFF0000) != 0)
              goto LABEL_123;
LABEL_30:
            v13 = *(_DWORD *)(a1 + 88);
            v14 = v13 + v4;
            if (v13 < 1)
              goto LABEL_163;
            goto LABEL_145;
          }
          v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
          if ((v36 & 0x80000000) != 0)
          {
            v35 += 11;
            if ((v3 & 0x800) != 0)
              goto LABEL_106;
          }
          else if (v36 >= 0x80)
          {
            v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2);
            v3 = *(_DWORD *)(a1 + 200);
            v35 += v37 + 1;
            if ((v3 & 0x800) != 0)
              goto LABEL_106;
          }
          else
          {
            v35 += 2;
            if ((v3 & 0x800) != 0)
              goto LABEL_106;
          }
LABEL_91:
          if ((v3 & 0x2000) != 0)
            v35 += 9;
          if ((v3 & 0x4000) == 0)
            goto LABEL_94;
          goto LABEL_114;
        }
      }
      v4 += (_DWORD)v18
          + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 200);
      if ((v3 & 0x20) != 0)
        goto LABEL_45;
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_24;
  }
  v15 = *(_QWORD *)(a1 + 32);
  if (v15)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002E92F4(v15, a2);
    if (v16 < 0x80)
      goto LABEL_35;
LABEL_38:
    v4 += (_DWORD)v16
        + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)
        + 1;
    v3 = *(_DWORD *)(a1 + 200);
    if ((v3 & 0x10) != 0)
      goto LABEL_39;
    goto LABEL_25;
  }
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002E92F4(*(_QWORD *)(qword_10042EA50 + 32), a2);
  if (v16 >= 0x80)
    goto LABEL_38;
LABEL_35:
  v4 += (_DWORD)v16 + 2;
  v3 = *(_DWORD *)(a1 + 200);
  if ((v3 & 0x10) != 0)
    goto LABEL_39;
LABEL_25:
  if ((v3 & 0x20) == 0)
    goto LABEL_26;
LABEL_45:
  v19 = *(_QWORD *)(a1 + 48);
  if (v19)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002EA4AC(v19, a2);
    if (v20 < 0x80)
      goto LABEL_47;
LABEL_50:
    v4 += (_DWORD)v20
        + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2)
        + 1;
    v3 = *(_DWORD *)(a1 + 200);
    if ((v3 & 0x40) != 0)
      goto LABEL_51;
    goto LABEL_27;
  }
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002EA4AC(*(_QWORD *)(qword_10042EA50 + 48), a2);
  if (v20 >= 0x80)
    goto LABEL_50;
LABEL_47:
  v4 += (_DWORD)v20 + 2;
  v3 = *(_DWORD *)(a1 + 200);
  if ((v3 & 0x40) != 0)
    goto LABEL_51;
LABEL_27:
  if ((v3 & 0x80) == 0)
    goto LABEL_28;
LABEL_69:
  v28 = *(_QWORD *)(a1 + 72);
  if (v28)
  {
    v29 = *(unsigned __int8 *)(v28 + 44);
    if (*(_BYTE *)(v28 + 44))
      goto LABEL_71;
  }
  else
  {
    v28 = *(_QWORD *)(qword_10042EA50 + 72);
    v29 = *(unsigned __int8 *)(v28 + 44);
    if (*(_BYTE *)(v28 + 44))
    {
LABEL_71:
      v30 = (v29 << 31 >> 31) & 9;
      if ((v29 & 2) != 0)
        v30 += 9;
      if ((v29 & 4) != 0)
        LODWORD(v31) = v30 + 9;
      else
        LODWORD(v31) = v30;
      v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v28 + 8);
      v33 = *(_QWORD **)(v28 + 8);
      if (!v33)
        goto LABEL_83;
      goto LABEL_80;
    }
  }
  LODWORD(v31) = 0;
  v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v28 + 8);
  v33 = *(_QWORD **)(v28 + 8);
  if (!v33)
  {
LABEL_83:
    *(_DWORD *)(v28 + 40) = (_DWORD)v31;
    v34 = 1;
    goto LABEL_85;
  }
LABEL_80:
  if (*v33 == v33[1])
    goto LABEL_83;
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v32, a2)+ v31);
  *(_DWORD *)(v28 + 40) = (_DWORD)v31;
  if (v31 >= 0x80)
    v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2);
  else
    v34 = 1;
LABEL_85:
  v4 += (_DWORD)v31 + v34 + 1;
  v3 = *(_DWORD *)(a1 + 200);
  if ((v3 & 0x1FE00) != 0)
    goto LABEL_86;
LABEL_29:
  if ((v3 & 0xFF0000) == 0)
    goto LABEL_30;
LABEL_123:
  if ((v3 & 0x10000) == 0)
    goto LABEL_130;
  v43 = *(_QWORD *)(a1 + 160);
  if (!v43)
  {
    v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002D8ABC(*(_QWORD *)(qword_10042EA50 + 160), a2);
    if (v44 < 0x80)
      goto LABEL_126;
LABEL_128:
    v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44, a2);
    goto LABEL_129;
  }
  v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002D8ABC(v43, a2);
  if (v44 >= 0x80)
    goto LABEL_128;
LABEL_126:
  v45 = 1;
LABEL_129:
  v4 += (_DWORD)v44 + v45 + 2;
  v3 = *(_DWORD *)(a1 + 200);
LABEL_130:
  if ((v3 & 0x20000) == 0)
    goto LABEL_137;
  v46 = *(_QWORD *)(a1 + 168);
  if (!v46)
  {
    v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002D8ABC(*(_QWORD *)(qword_10042EA50 + 168), a2);
    if (v47 < 0x80)
      goto LABEL_133;
LABEL_135:
    v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2);
    goto LABEL_136;
  }
  v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002D8ABC(v46, a2);
  if (v47 >= 0x80)
    goto LABEL_135;
LABEL_133:
  v48 = 1;
LABEL_136:
  v4 += (_DWORD)v47 + v48 + 2;
  v3 = *(_DWORD *)(a1 + 200);
LABEL_137:
  v49 = v4 + 3;
  if ((v3 & 0x40000) == 0)
    v49 = v4;
  if ((v3 & 0x80000) != 0)
    v49 += 10;
  if ((v3 & 0x100000) != 0)
    v50 = v49 + 10;
  else
    v50 = v49;
  v51 = *(_DWORD *)(a1 + 88);
  v14 = v51 + v50;
  if (v51 >= 1)
  {
LABEL_145:
    v52 = 0;
    do
    {
      v54 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8 * v52);
      v55 = (*(unsigned __int8 *)(v54 + 76) << 29 >> 31) & 9;
      v56 = *(_DWORD *)(v54 + 24);
      v57 = 8 * v56;
      if (v56 >= 1)
      {
        if (v57 >= 0x80)
          v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v56), a2)+ 1;
        else
          v58 = 2;
        v55 += v58;
      }
      *(_DWORD *)(v54 + 32) = v57;
      v59 = v55 + v57;
      v60 = *(_DWORD *)(v54 + 48);
      v61 = 8 * v60;
      if (v60 >= 1)
      {
        if (v61 >= 0x80)
          v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v60), a2)+ 1;
        else
          v62 = 2;
        v59 += v62;
      }
      v63 = *(_QWORD **)(v54 + 8);
      *(_DWORD *)(v54 + 56) = v61;
      v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v59 + v61);
      if (v63 && *v63 != v63[1])
        v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v54 + 8), a2)+ v64);
      *(_DWORD *)(v54 + 72) = (_DWORD)v64;
      if (v64 >= 0x80)
        v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64, a2);
      else
        v53 = 1;
      v14 += (_DWORD)v64 + v53;
      ++v52;
    }
    while (v52 < *(int *)(a1 + 88));
  }
LABEL_163:
  v65 = *(_DWORD *)(a1 + 120);
  v66 = (v65 + v14);
  if (v65 >= 1)
  {
    v67 = 0;
    do
    {
      v69 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002E574C(*(_QWORD *)(*(_QWORD *)(a1 + 112)+ 8 * v67), a2);
      v70 = (int)v69;
      if (v69 >= 0x80)
        v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v69, a2);
      else
        v68 = 1;
      v66 = (v70 + v66 + v68);
      ++v67;
    }
    while (v67 < *(int *)(a1 + 120));
  }
  v71 = *(_QWORD **)(a1 + 8);
  if (v71 && *v71 != v71[1])
    v66 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v66;
  *(_DWORD *)(a1 + 196) = v66;
  return v66;
}

uint64_t sub_1002E7CCC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 2150);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002E6110((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E7D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E7D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E7DA8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E7DF0()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002E3FF0;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A290, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A250;
}

void sub_1002E7E64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E7E78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

uint64_t sub_1002E7E80(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10042EA58;
  if (!qword_10042EA58)
  {
    sub_1002E43C8(0, a2, a3, a4);
    return qword_10042EA58;
  }
  return result;
}

void sub_1002E7EB8()
{
  operator new();
}

void sub_1002E7F1C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E7F44(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 40);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 40) & 1) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        this = sub_1002EA1E4(this);
        v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(v1 + 24);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(v1 + 32) = 1;
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 8) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_1002E7FD8(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    v10 = *(_QWORD *)(this + 16);
    if (v10)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0)
        goto LABEL_10;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(qword_10042EA58 + 16), a2, a4);
      v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0)
        goto LABEL_10;
    }
LABEL_3:
    if ((v6 & 4) == 0)
      goto LABEL_4;
    goto LABEL_11;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(2, *(_QWORD *)(v5 + 24), a2);
  if ((*(_DWORD *)(v5 + 40) & 4) == 0)
  {
LABEL_4:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), (int)a2, a4);
  v11 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v11;
  if (!v11)
    return this;
LABEL_12:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E80A4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  unsigned int *v10;
  unsigned int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v13;
  unsigned __int8 *v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  const void *v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    v10 = (unsigned int *)*((_QWORD *)this + 2);
    if (v10)
    {
      *(_BYTE *)a2 = 10;
      v11 = (_DWORD)a2 + 1;
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[8];
      if (v12 <= 0x7F)
        goto LABEL_8;
    }
    else
    {
      v10 = *(unsigned int **)(qword_10042EA58 + 16);
      *(_BYTE *)a2 = 10;
      v11 = (_DWORD)a2 + 1;
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[8];
      if (v12 <= 0x7F)
      {
LABEL_8:
        *((_BYTE *)v4 + 1) = (_BYTE)v12;
        v4 = sub_1002EA34C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
        v6 = *((_DWORD *)this + 10);
        if ((v6 & 2) != 0)
          goto LABEL_12;
LABEL_3:
        if ((v6 & 4) == 0)
          goto LABEL_4;
        goto LABEL_24;
      }
    }
    v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
    v4 = sub_1002EA34C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v13, v14);
    v6 = *((_DWORD *)this + 10);
    if ((v6 & 2) != 0)
      goto LABEL_12;
    goto LABEL_3;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_12:
  v15 = *((_QWORD *)this + 3);
  *(_BYTE *)v4 = 18;
  if (*(char *)(v15 + 23) < 0)
  {
    v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v15 + 8);
    if (v16 <= 0x7F)
      goto LABEL_14;
  }
  else
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v15 + 23);
    if (*(unsigned __int8 *)(v15 + 23) <= 0x7Fu)
    {
LABEL_14:
      *((_BYTE *)v4 + 1) = (_BYTE)v16;
      v17 = (_DWORD)v4 + 2;
      goto LABEL_17;
    }
  }
  v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v4 + 1, a3);
LABEL_17:
  v18 = *(char *)(v15 + 23);
  if (v18 >= 0)
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15;
  else
    v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v15;
  if (v18 >= 0)
    v20 = (const void *)*(unsigned __int8 *)(v15 + 23);
  else
    v20 = (const void *)*(unsigned int *)(v15 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v19, v20, v17, a4);
  if ((*((_DWORD *)this + 10) & 4) == 0)
  {
LABEL_4:
    v9 = (_QWORD *)*((_QWORD *)this + 1);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v7 = v9;
    if (!v9)
      return v4;
    goto LABEL_31;
  }
LABEL_24:
  v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *(_BYTE *)v4 = 24;
  v22 = (unint64_t)v4 + 1;
  if ((v21 & 0x80000000) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v21, v22, a3);
    v24 = (_QWORD *)*((_QWORD *)this + 1);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v7 = v24;
    if (!v24)
      return v4;
  }
  else if (v21 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v22, a3);
    v25 = (_QWORD *)*((_QWORD *)this + 1);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v7 = v25;
    if (!v25)
      return v4;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v21;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    v23 = (_QWORD *)*((_QWORD *)this + 1);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v7 = v23;
    if (!v23)
      return v4;
  }
LABEL_31:
  if (*v7 != v7[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
  return v4;
}

uint64_t sub_1002E8248(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  int v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  uint64_t v17;

  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_24;
    goto LABEL_32;
  }
  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0)
      goto LABEL_22;
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002EA4AC(v7, a2);
    if (v8 < 0x80)
      goto LABEL_9;
  }
  else
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002EA4AC(*(_QWORD *)(qword_10042EA58 + 16), a2);
    if (v8 < 0x80)
    {
LABEL_9:
      v4 = ((_DWORD)v8 + 2);
      v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0)
        goto LABEL_22;
      goto LABEL_13;
    }
  }
  v4 = v8
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)+ 1;
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) == 0)
    goto LABEL_22;
LABEL_13:
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(unsigned __int8 *)(v9 + 23);
  v11 = v10;
  v12 = *(_QWORD *)(v9 + 8);
  if ((v10 & 0x80u) == 0)
    v13 = *(unsigned __int8 *)(v9 + 23);
  else
    v13 = v12;
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13, a2);
    v10 = *(unsigned __int8 *)(v9 + 23);
    v12 = *(_QWORD *)(v9 + 8);
    v3 = *(_DWORD *)(a1 + 40);
    v11 = *(_BYTE *)(v9 + 23);
  }
  else
  {
    v14 = 1;
  }
  if (v11 < 0)
    v10 = v12;
  v4 = (v4 + v14 + v10 + 1);
LABEL_22:
  if ((v3 & 4) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v16 & 0x80000000) != 0)
    {
      v4 = (v4 + 11);
      v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v6 = *(_QWORD **)(a1 + 8);
      if (!v6)
        goto LABEL_24;
    }
    else if (v16 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)+ 1+ v4;
      v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v6 = *(_QWORD **)(a1 + 8);
      if (!v6)
        goto LABEL_24;
    }
    else
    {
      v4 = (v4 + 2);
      v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v6 = *(_QWORD **)(a1 + 8);
      if (!v6)
        goto LABEL_24;
    }
  }
  else
  {
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
    {
LABEL_24:
      *(_DWORD *)(a1 + 36) = v4;
      return v4;
    }
  }
LABEL_32:
  if (*v6 == v6[1])
    goto LABEL_24;
  v17 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 36) = v17;
  return v17;
}

uint64_t sub_1002E83EC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", 2545);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000729FC((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E84A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E84B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E84C8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E8510()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002E3FF0;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A290, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A260;
}

void sub_1002E8584(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E8598(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_1002E85A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1002E85A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1002E85B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 196);
}

uint64_t sub_1002E85B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1002E85C0(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    v5 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v5);
      v8 = *((_DWORD *)a1 + 3);
      v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      v6 = *(_QWORD *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      result = sub_1002E49B8(*(_QWORD *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1002E86CC()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E86F4(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    v5 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v5);
      v8 = *((_DWORD *)a1 + 3);
      v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      v6 = *(_QWORD *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      result = sub_1002E521C(*(_QWORD *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1002E8804()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E8830()
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v0;
  uint64_t v1;
  uint64_t FileByName;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *__p;
  __int128 v7;

  v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_1002E8B6C();
  v1 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  __p = operator new(0x20uLL);
  v7 = xmmword_100382FF0;
  strcpy((char *)__p, "protobuf/gen/coordinates.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v1, &__p);
  v3 = FileByName;
  if (SHIBYTE(v7) < 0)
  {
    operator delete(__p);
    if (v3)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(&__p, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/coordinates.pb.cc", 45);
  v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(&__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v5, v4);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
LABEL_6:
  qword_10041A2A8 = *(_QWORD *)(v3 + 80);
  operator new();
}

void sub_1002E8AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E8B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E8B20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002E8B6C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  int v4;

  if ((byte_10041A298 & 1) == 0)
  {
    byte_10041A298 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/coordinates.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x1Eprotobuf/gen/coordinates.proto\x12\x11proto.coordinates\"\"\n\x06LatLon\x12\v\n\x03lat\x18\x01 \x02(\x01\x12\v\n\x03lon\x18\x02 \x02(\x01\"#\n\vUniversal2d\x12\t\n\x01x\x18\x01 \x02(\x01\x12\t\n\x01y\x18\x02 \x02(\x01\"\x84\x02\n\x1EHomogeneousOrthonormalMatrix2d\x12P\n(universalLocationOfCoordinateFrameOrigin\x18\x01 \x02(\v2\x1E.proto.coordinates.Universal2d\x122\n*universalLengthOfCoordinateFrameUnitVector\x18\x02 \x02(\x01\x12)\n!localCoordinateFrameIsRightHanded\x18\x03 \x02(\b\x121\n&universalOrientationOfCoordinateFrameX\x18\x04 \x02(\x01:\x010\"~\n\x1ABoundedCellCoordinateFrame\x12\f\n\x04rows\x18\x01 \x02(\r\x12\f\n"
                                                                "\x04cols\x18\x02 \x02(\r\x12D\n"
                                                                "\ttransform\x18\x03 \x02(\v21.proto.coordinates.Homogene"
                                                                "ousOrthonormalMatrix2dB'\n"
                                                                "%com.apple.indoor.proto.javacommon.api",
      (const void *)0x22C,
      v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("protobuf/gen/coordinates.proto", sub_1002E8E8C);
    operator new();
  }
}

void sub_1002E8D3C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E8D64()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1002E8D8C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E8DB8()
{
  uint64_t result;

  if (qword_10042EA60)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA60 + 8))(qword_10042EA60);
  if (qword_10041A2B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A2B0 + 8))(qword_10041A2B0);
  if (qword_10042EA68)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA68 + 8))(qword_10042EA68);
  if (qword_10041A2C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A2C0 + 8))(qword_10041A2C0);
  if (qword_10042EA70)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA70 + 8))(qword_10042EA70);
  if (qword_10041A2D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A2D0 + 8))(qword_10041A2D0);
  if (qword_10042EA78)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EA78 + 8))(qword_10042EA78);
  result = qword_10041A2E0;
  if (qword_10041A2E0)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_10041A2E0 + 8))(qword_10041A2E0);
  return result;
}

uint64_t sub_1002E8E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  char v10;

  v0 = qword_10041A2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v9[1] = sub_1002E8830;
    v10 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A2E8, v9);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v9);
  }
  v1 = qword_10041A2A8;
  if (!qword_10042EA60)
    ((void (*)(void))sub_1002E8B6C)();
  v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  v3 = qword_10041A2B8;
  if (!qword_10042EA68)
    sub_1002E8B6C(v2);
  v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
  v5 = qword_10041A2C8;
  if (!qword_10042EA70)
    sub_1002E8B6C(v4);
  v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5);
  v7 = qword_10041A2D8;
  if (qword_10042EA78)
    return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(qword_10041A2D8);
  sub_1002E8B6C(v6);
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v7);
}

void sub_1002E8F9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E8FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/coordinates.pb.cc", 385);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_QWORD *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1002E9064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E9078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E908C(uint64_t a1)
{
  *(_QWORD *)a1 = off_100403CC0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1002E90BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_1002E90C4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10042EA60;
  if (!qword_10042EA60)
  {
    sub_1002E8B6C(0, a2, a3, a4);
    return qword_10042EA60;
  }
  return result;
}

void sub_1002E90FC()
{
  operator new();
}

void sub_1002E914C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E9174(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002E9194(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 2) == 0)
    {
LABEL_3:
      v8 = *(_QWORD **)(v4 + 8);
      v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      v6 = v8;
      if (!v8)
        return this;
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_7:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1002E921C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = *(_QWORD *)(a1 + 24);
    *(_BYTE *)a2 = 17;
    *(_QWORD *)(a2 + 1) = v8;
    a2 += 9;
    v9 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v9;
    if (!v9)
      return a2;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a1 + 16);
  *(_BYTE *)a2 = 9;
  *(_QWORD *)(a2 + 1) = v7;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 36) & 2) != 0)
    goto LABEL_6;
LABEL_3:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_7:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1002E92F4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 36);
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v4 += 9;
  if (*(_BYTE *)(a1 + 36))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_1002E9358(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/coordinates.pb.cc", 373);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1002E8FB0((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E940C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E9420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E9434(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E947C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002E8830;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A2E8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A2A8;
}

void sub_1002E94F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1002E9504(uint64_t a1)
{
  *(_QWORD *)a1 = off_100403D70;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1002E9534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1002E953C()
{
  operator new();
}

void sub_1002E958C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002E95B4(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1002E95D4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 2) == 0)
    {
LABEL_3:
      v8 = *(_QWORD **)(v4 + 8);
      v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      v6 = v8;
      if (!v8)
        return this;
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_7:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1002E965C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = *(_QWORD *)(a1 + 24);
    *(_BYTE *)a2 = 17;
    *(_QWORD *)(a2 + 1) = v8;
    a2 += 9;
    v9 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v9;
    if (!v9)
      return a2;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a1 + 16);
  *(_BYTE *)a2 = 9;
  *(_QWORD *)(a2 + 1) = v7;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 36) & 2) != 0)
    goto LABEL_6;
LABEL_3:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_7:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1002E9734(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 36);
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v4 += 9;
  if (*(_BYTE *)(a1 + 36))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_1002E9798(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/coordinates.pb.cc", 618);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100072F18((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E984C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E9860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E9874(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002E98BC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002E8830;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A2E8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A2B8;
}

void sub_1002E9930(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1002E9944(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_100403E20;
  if ((_QWORD *)qword_10042EA70 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1002E999C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1002E99A4()
{
  operator new();
}

void sub_1002E99FC()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002E9A24(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  uint64_t v4;

  v1 = this;
  if (*(_BYTE *)(this + 48))
  {
    if ((*(_BYTE *)(this + 48) & 1) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 36))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
        }
        v2 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v2)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 0;
  }
  v4 = *(_QWORD *)(v1 + 8);
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 10) = 0;
  if (v4)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  return this;
}

uint64_t sub_1002E9A94(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    v10 = *(_QWORD *)(this + 16);
    if (v10)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      v6 = *(_DWORD *)(v5 + 48);
      if ((v6 & 2) != 0)
        goto LABEL_11;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(qword_10042EA70 + 16), a2, a4);
      v6 = *(_DWORD *)(v5 + 48);
      if ((v6 & 2) != 0)
        goto LABEL_11;
    }
LABEL_3:
    if ((v6 & 4) == 0)
      goto LABEL_4;
    goto LABEL_12;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 40), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 8) == 0)
  {
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  v11 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v11;
  if (!v11)
    return this;
LABEL_14:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

_BYTE *sub_1002E9B7C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  uint64_t v4;
  unsigned int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  int v14;
  _QWORD *v15;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;

  if ((*((_BYTE *)this + 48) & 1) == 0)
    goto LABEL_15;
  v4 = *((_QWORD *)this + 2);
  if (v4)
  {
    *a2 = 10;
    v5 = (_DWORD)a2 + 1;
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v4 + 32);
    if (v6 <= 0x7F)
      goto LABEL_4;
  }
  else
  {
    v4 = *(_QWORD *)(qword_10042EA70 + 16);
    *a2 = 10;
    v5 = (_DWORD)a2 + 1;
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v4 + 32);
    if (v6 <= 0x7F)
    {
LABEL_4:
      a2[1] = (_BYTE)v6;
      a2 += 2;
      v7 = *(_DWORD *)(v4 + 36);
      if ((v7 & 1) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
  }
  a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v5, a3);
  v7 = *(_DWORD *)(v4 + 36);
  if ((v7 & 1) != 0)
  {
LABEL_8:
    v8 = *(_QWORD *)(v4 + 16);
    *a2 = 9;
    *(_QWORD *)(a2 + 1) = v8;
    a2 += 9;
    v7 = *(_DWORD *)(v4 + 36);
  }
LABEL_9:
  if ((v7 & 2) != 0)
  {
    v12 = *(_QWORD *)(v4 + 24);
    *a2 = 17;
    *(_QWORD *)(a2 + 1) = v12;
    a2 += 9;
    v13 = *(_QWORD **)(v4 + 8);
    v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    v9 = v13;
    if (!v13)
      goto LABEL_15;
  }
  else
  {
    v11 = *(_QWORD **)(v4 + 8);
    v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    v9 = v11;
    if (!v11)
      goto LABEL_15;
  }
  if (*v9 != v9[1])
    a2 = (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
LABEL_15:
  v14 = *((_DWORD *)this + 12);
  if ((v14 & 2) != 0)
  {
    v18 = *((_QWORD *)this + 3);
    *a2 = 17;
    *(_QWORD *)(a2 + 1) = v18;
    a2 += 9;
    v14 = *((_DWORD *)this + 12);
    if ((v14 & 4) == 0)
    {
LABEL_17:
      if ((v14 & 8) == 0)
        goto LABEL_18;
LABEL_22:
      v20 = *((_QWORD *)this + 4);
      *a2 = 33;
      *(_QWORD *)(a2 + 1) = v20;
      a2 += 9;
      v21 = (_QWORD *)*((_QWORD *)this + 1);
      v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      v15 = v21;
      if (!v21)
        return a2;
      goto LABEL_23;
    }
  }
  else if ((v14 & 4) == 0)
  {
    goto LABEL_17;
  }
  v19 = *((_BYTE *)this + 40);
  *a2 = 24;
  a2[1] = v19;
  a2 += 2;
  if ((*((_DWORD *)this + 12) & 8) != 0)
    goto LABEL_22;
LABEL_18:
  v17 = (_QWORD *)*((_QWORD *)this + 1);
  v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v15 = v17;
  if (!v17)
    return a2;
LABEL_23:
  if (*v15 != v15[1])
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1002E9DD8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v12;
  _QWORD *v13;
  int v14;
  uint64_t v15;

  LOBYTE(v3) = *(_BYTE *)(a1 + 48);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 48) & 1) == 0)
    {
      v4 = 0;
      goto LABEL_21;
    }
    v9 = *(_QWORD *)(a1 + 16);
    if (v9)
    {
      v10 = *(unsigned __int8 *)(v9 + 36);
      if (*(_BYTE *)(v9 + 36))
        goto LABEL_8;
    }
    else
    {
      v9 = *(_QWORD *)(qword_10042EA70 + 16);
      v10 = *(unsigned __int8 *)(v9 + 36);
      if (*(_BYTE *)(v9 + 36))
      {
LABEL_8:
        if ((v10 & 2) != 0)
          LODWORD(v11) = ((v10 << 31 >> 31) & 9) + 9;
        else
          LODWORD(v11) = (v10 << 31 >> 31) & 9;
        v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        v13 = *(_QWORD **)(v9 + 8);
        if (!v13)
          goto LABEL_18;
LABEL_15:
        if (*v13 != v13[1])
        {
          v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v12, a2)+ v11);
          *(_DWORD *)(v9 + 32) = (_DWORD)v11;
          if (v11 >= 0x80)
            v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
          else
            v14 = 1;
          goto LABEL_20;
        }
LABEL_18:
        *(_DWORD *)(v9 + 32) = (_DWORD)v11;
        v14 = 1;
LABEL_20:
        v4 = (_DWORD)v11 + v14 + 1;
        v3 = *(_DWORD *)(a1 + 48);
LABEL_21:
        if ((v3 & 2) != 0)
          v4 += 9;
        if ((v3 & 4) != 0)
          v4 += 2;
        if ((v3 & 8) != 0)
          v5 = v4 + 9;
        else
          v5 = v4;
        v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        v7 = *(_QWORD **)(a1 + 8);
        if (!v7)
          goto LABEL_5;
        goto LABEL_29;
      }
    }
    LODWORD(v11) = 0;
    v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    v13 = *(_QWORD **)(v9 + 8);
    if (!v13)
      goto LABEL_18;
    goto LABEL_15;
  }
  v5 = 0;
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 8);
  if (!v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 44) = v5;
    return v5;
  }
LABEL_29:
  if (*v7 == v7[1])
    goto LABEL_5;
  v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 44) = v15;
  return v15;
}

uint64_t sub_1002E9F28(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/coordinates.pb.cc", 938);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100072D5C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002E9FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002E9FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002EA004(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002EA04C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002E8830;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A2E8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A2C8;
}

void sub_1002EA0C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1002EA0D4(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_100403ED0;
  if ((_QWORD *)qword_10042EA78 != a1)
  {
    v2 = a1[3];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1002EA12C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_1002EA134(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10042EA78;
  if (!qword_10042EA78)
  {
    sub_1002E8B6C(0, a2, a3, a4);
    return qword_10042EA78;
  }
  return result;
}

void sub_1002EA16C()
{
  operator new();
}

void sub_1002EA1BC()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1002EA1E4(uint64_t this)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  uint64_t v8;

  v1 = this;
  v2 = *(_BYTE *)(this + 36);
  if (v2)
  {
    *(_QWORD *)(this + 16) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 48))
        {
          if ((*(_BYTE *)(v3 + 48) & 1) != 0)
          {
            this = *(_QWORD *)(v3 + 16);
            if (this)
            {
              if (*(_BYTE *)(this + 36))
              {
                *(_QWORD *)(this + 16) = 0;
                *(_QWORD *)(this + 24) = 0;
              }
              v4 = *(_QWORD *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 28) = 0;
              if (v4)
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
            }
          }
          *(_QWORD *)(v3 + 24) = 0;
          *(_QWORD *)(v3 + 32) = 0;
          *(_BYTE *)(v3 + 40) = 0;
        }
        v6 = *(_QWORD *)(v3 + 8);
        v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 8);
        *((_DWORD *)v5 + 10) = 0;
        if (v6)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
      }
    }
  }
  v8 = *(_QWORD *)(v1 + 8);
  v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v7 + 7) = 0;
  if (v8)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  return this;
}

uint64_t sub_1002EA280(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) == 0)
  {
LABEL_4:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_12;
  }
LABEL_8:
  v10 = *(_QWORD *)(v5 + 24);
  if (v10)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v10, a2, a4);
    v11 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v11;
    if (!v11)
      return this;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(qword_10042EA78 + 24), a2, a4);
    v12 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v12;
    if (!v12)
      return this;
  }
LABEL_12:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1002EA34C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  unsigned int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  unsigned int *v11;
  unsigned int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  _QWORD *v14;
  _BYTE *v15;
  unsigned __int8 *v16;
  _QWORD *v17;

  v3 = a2;
  if ((*((_BYTE *)this + 36) & 1) == 0)
  {
    if ((*((_BYTE *)this + 36) & 2) == 0)
      goto LABEL_3;
LABEL_10:
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)v3 = 16;
    if (v10 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
      if ((*((_BYTE *)this + 36) & 4) != 0)
        goto LABEL_14;
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((_BYTE *)this + 36) & 4) != 0)
        goto LABEL_14;
    }
LABEL_4:
    v7 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v7;
    if (!v7)
      return v3;
    goto LABEL_20;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  *(_BYTE *)a2 = 8;
  v9 = (_DWORD)a2 + 1;
  if (v8 > 0x7F)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v9, a3);
    if ((*((_BYTE *)this + 36) & 2) != 0)
      goto LABEL_10;
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v8;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((_BYTE *)this + 36) & 2) != 0)
      goto LABEL_10;
  }
LABEL_3:
  if ((*((_BYTE *)this + 36) & 4) == 0)
    goto LABEL_4;
LABEL_14:
  v11 = (unsigned int *)*((_QWORD *)this + 3);
  if (v11)
  {
    *(_BYTE *)v3 = 26;
    v12 = (_DWORD)v3 + 1;
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[11];
    if (v13 <= 0x7F)
      goto LABEL_16;
LABEL_19:
    v15 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E9B7C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v15, v16);
    v17 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v17;
    if (!v17)
      return v3;
    goto LABEL_20;
  }
  v11 = *(unsigned int **)(qword_10042EA78 + 24);
  *(_BYTE *)v3 = 26;
  v12 = (_DWORD)v3 + 1;
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[11];
  if (v13 > 0x7F)
    goto LABEL_19;
LABEL_16:
  *((_BYTE *)v3 + 1) = (_BYTE)v13;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1002E9B7C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (_BYTE *)v3 + 2, a3);
  v14 = (_QWORD *)*((_QWORD *)this + 1);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v5 = v14;
  if (!v14)
    return v3;
LABEL_20:
  if (*v5 != v5[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, v3, a3);
  return v3;
}

uint64_t sub_1002EA4AC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  uint64_t v14;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_17;
    goto LABEL_24;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)+ 1;
      v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0)
        goto LABEL_15;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_15;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_15;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v9 = 2;
  }
  v4 = (v9 + v4);
LABEL_15:
  if ((v3 & 4) != 0)
  {
    v11 = *(_QWORD *)(a1 + 24);
    if (v11)
    {
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002E9DD8(v11, a2);
      if (v12 < 0x80)
      {
LABEL_20:
        v13 = 1;
        goto LABEL_23;
      }
    }
    else
    {
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002E9DD8(*(_QWORD *)(qword_10042EA78 + 24), a2);
      if (v12 < 0x80)
        goto LABEL_20;
    }
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
LABEL_23:
    v4 = (v4 + (_DWORD)v12 + v13 + 1);
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_17;
    goto LABEL_24;
  }
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = *(_QWORD **)(a1 + 8);
  if (!v6)
  {
LABEL_17:
    *(_DWORD *)(a1 + 32) = v4;
    return v4;
  }
LABEL_24:
  if (*v6 == v6[1])
    goto LABEL_17;
  v14 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 32) = v14;
  return v14;
}

uint64_t sub_1002EA5E8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/coordinates.pb.cc", 1239);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100072BB4((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1002EA69C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1002EA6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002EA6C4(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1002EA70C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1002E8830;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A2E8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A2D8;
}

void sub_1002EA780(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002EA794(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1002EA79C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1002EA7A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1002EA7AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1002EA7B8(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = operator new(0x38uLL);
  v5 = v4;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = off_100404030;
  v6 = v4 + 3;
  v4[5] = 0;
  *v4 = off_100403FE0;
  v4[4] = v4 + 5;
  v4[6] = 0;
  if (v4 + 4 != a1)
    sub_1002EACE4(v4 + 4, (_QWORD *)*a1, a1 + 1);
  *a2 = v6;
  a2[1] = v5;
}

void sub_1002EA844(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;

  sub_1002EB080(v2, *(_QWORD **)(v1 + 40));
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_1002EA868(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100403FE0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002EA878(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100403FE0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1002EA8A8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1002EA8B8(uint64_t a1)
{
  *(_QWORD *)a1 = off_100404030;
  sub_1002EB080(a1 + 8, *(_QWORD **)(a1 + 16));
  return a1;
}

void sub_1002EA8EC(uint64_t a1)
{
  *(_QWORD *)a1 = off_100404030;
  sub_1002EB080(a1 + 8, *(_QWORD **)(a1 + 16));
  operator delete();
}

uint64_t sub_1002EA930(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;

  v1 = *(_QWORD **)(a1 + 8);
  v2 = (_QWORD *)(a1 + 16);
  v3 = 1;
  if (v1 != (_QWORD *)(a1 + 16))
  {
    do
    {
      v5 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v1[5] + 16))(v1[5]);
      v6 = (_QWORD *)v1[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v1[2];
          v8 = *v7 == (_QWORD)v1;
          v1 = v7;
        }
        while (!v8);
      }
      v3 = v3 & v5;
      v1 = v7;
    }
    while (v7 != v2);
  }
  return v3;
}

uint64_t sub_1002EA9B8(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  _QWORD *v6;
  BOOL v7;

  v2 = *(_QWORD **)(result + 8);
  v3 = (_QWORD *)(result + 16);
  if (v2 != (_QWORD *)(result + 16))
  {
    do
    {
      result = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)v2[5] + 24))(v2[5], a2);
      v5 = (_QWORD *)v2[1];
      if (v5)
      {
        do
        {
          v6 = v5;
          v5 = (_QWORD *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v6 = (_QWORD *)v2[2];
          v7 = *v6 == (_QWORD)v2;
          v2 = v6;
        }
        while (!v7);
      }
      v2 = v6;
    }
    while (v6 != v3);
  }
  return result;
}

uint64_t sub_1002EAA40(uint64_t result, float a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  _QWORD *v6;
  BOOL v7;

  v2 = *(_QWORD **)(result + 8);
  v3 = (_QWORD *)(result + 16);
  if (v2 != (_QWORD *)(result + 16))
  {
    do
    {
      result = (*(uint64_t (**)(_QWORD, float))(*(_QWORD *)v2[5] + 32))(v2[5], a2);
      v5 = (_QWORD *)v2[1];
      if (v5)
      {
        do
        {
          v6 = v5;
          v5 = (_QWORD *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v6 = (_QWORD *)v2[2];
          v7 = *v6 == (_QWORD)v2;
          v2 = v6;
        }
        while (!v7);
      }
      v2 = v6;
    }
    while (v6 != v3);
  }
  return result;
}

WifiScannerSettings *sub_1002EAAC8(_QWORD *a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  float v11;
  uint64_t v12;
  void *v13;
  void *v14;
  float v15;
  float v16;
  unsigned int v17;
  _QWORD *v18;
  _QWORD *v19;
  BOOL v20;
  WifiScannerSettings *v21;
  double v22;
  WifiScannerSettings *v23;

  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", a1[3]));
  v7 = (_QWORD *)a1[1];
  v8 = a1 + 2;
  if (v7 == a1 + 2)
  {
    v9 = 0;
    v11 = 0.0;
    v10 = 1;
  }
  else
  {
    v9 = 0;
    LODWORD(v10) = 1;
    v11 = 0.0;
    do
    {
      v12 = (*(uint64_t (**)(_QWORD, uint64_t, id))(*(_QWORD *)v7[5] + 40))(v7[5], a2, v5);
      v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "channels"));
      objc_msgSend(v6, "addObjectsFromArray:", v14);

      objc_msgSend(v13, "dutyCycle");
      if (v15 > v11)
      {
        objc_msgSend(v13, "dutyCycle");
        v11 = v16;
      }
      if ((uint64_t)v9 < (uint64_t)objc_msgSend(v13, "dwell"))
        v9 = objc_msgSend(v13, "dwell");
      v17 = objc_msgSend(v13, "lowPriorityScan");

      v18 = (_QWORD *)v7[1];
      if (v18)
      {
        do
        {
          v19 = v18;
          v18 = (_QWORD *)*v18;
        }
        while (v18);
      }
      else
      {
        do
        {
          v19 = (_QWORD *)v7[2];
          v20 = *v19 == (_QWORD)v7;
          v7 = v19;
        }
        while (!v20);
      }
      v10 = v17 & v10;
      v7 = v19;
    }
    while (v19 != v8);
  }
  v21 = [WifiScannerSettings alloc];
  *(float *)&v22 = v11;
  v23 = -[WifiScannerSettings initWithChannels:dwell:scanType:includingOffChannelResults:atDutyCycle:asLowPriority:](v21, "initWithChannels:dwell:scanType:includingOffChannelResults:atDutyCycle:asLowPriority:", v6, v9, 2, 0, v10, v22);

  return v23;
}

void sub_1002EAC58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002EAC68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002EACCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1002EACE4(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t **v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *i;
  _QWORD *v30;
  uint64_t ***v31;
  uint64_t *v32;
  uint64_t *v33;
  int v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t **v38;
  uint64_t **v39;
  uint64_t **v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;

  v4 = a2;
  v5 = (uint64_t)a1;
  if (a1[2])
  {
    v6 = (_QWORD *)*a1;
    v8 = (uint64_t **)(a1 + 1);
    v7 = a1[1];
    *a1 = a1 + 1;
    *(_QWORD *)(v7 + 16) = 0;
    a1[2] = 0;
    a1[1] = 0;
    if (v6[1])
      v9 = (_QWORD *)v6[1];
    else
      v9 = v6;
    if (!v9)
    {
      v30 = 0;
LABEL_56:
      sub_1002EB080((uint64_t)a1, v30);
      goto LABEL_57;
    }
    v10 = (_QWORD *)v9[2];
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if ((_QWORD *)*v10 == v9)
      {
        *v10 = 0;
        while (1)
        {
          v44 = (_QWORD *)v10[1];
          if (!v44)
            break;
          do
          {
            v10 = v44;
            v44 = (_QWORD *)*v44;
          }
          while (v44);
        }
      }
      else
      {
        for (v10[1] = 0; v11; v11 = (_QWORD *)v10[1])
        {
          do
          {
            v10 = v11;
            v11 = (_QWORD *)*v11;
          }
          while (v11);
        }
      }
    }
    if (a2 != a3)
    {
      v12 = v9;
      v13 = a2;
      while (1)
      {
        v9 = v10;
        *((_BYTE *)v12 + 32) = *((_BYTE *)v13 + 32);
        v15 = v13[5];
        v14 = v13[6];
        if (v14)
        {
          v16 = (unint64_t *)(v14 + 8);
          do
            v17 = __ldxr(v16);
          while (__stxr(v17 + 1, v16));
        }
        v18 = (std::__shared_weak_count *)v12[6];
        v12[5] = v15;
        v12[6] = v14;
        if (!v18)
          goto LABEL_20;
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
          v21 = *v8;
          v22 = (_QWORD *)(v5 + 8);
          v23 = (_QWORD *)(v5 + 8);
          if (*v8)
          {
LABEL_21:
            if (*((_BYTE *)v12 + 32))
            {
              do
              {
                v22 = v21;
                v21 = (uint64_t *)v21[1];
              }
              while (v21);
LABEL_23:
              v23 = v22 + 1;
            }
            else
            {
              do
              {
                while (1)
                {
                  v22 = v21;
                  if (*((_BYTE *)v21 + 32))
                    break;
                  v21 = (uint64_t *)v21[1];
                  if (!v21)
                    goto LABEL_23;
                }
                v21 = (uint64_t *)*v21;
                v23 = v22;
              }
              while (*v22);
            }
          }
        }
        else
        {
LABEL_20:
          v21 = *v8;
          v22 = (_QWORD *)(v5 + 8);
          v23 = (_QWORD *)(v5 + 8);
          if (*v8)
            goto LABEL_21;
        }
        *v12 = 0;
        v12[1] = 0;
        v12[2] = v22;
        *v23 = v12;
        v24 = **(_QWORD **)v5;
        if (v24)
        {
          *(_QWORD *)v5 = v24;
          v12 = (_QWORD *)*v23;
        }
        sub_1000E05F4(*(uint64_t **)(v5 + 8), v12);
        ++*(_QWORD *)(v5 + 16);
        if (v10)
        {
          v10 = (_QWORD *)v10[2];
          if (v10)
          {
            v27 = (_QWORD *)*v10;
            if ((_QWORD *)*v10 == v9)
            {
              *v10 = 0;
              while (1)
              {
                v28 = (_QWORD *)v10[1];
                if (!v28)
                  break;
                do
                {
                  v10 = v28;
                  v28 = (_QWORD *)*v28;
                }
                while (v28);
              }
            }
            else
            {
              for (v10[1] = 0; v27; v27 = (_QWORD *)v10[1])
              {
                do
                {
                  v10 = v27;
                  v27 = (_QWORD *)*v27;
                }
                while (v27);
              }
            }
          }
        }
        else
        {
          v10 = 0;
        }
        v25 = (_QWORD *)v13[1];
        if (v25)
        {
          do
          {
            v4 = v25;
            v25 = (_QWORD *)*v25;
          }
          while (v25);
        }
        else
        {
          do
          {
            v4 = (_QWORD *)v13[2];
            v26 = *v4 == (_QWORD)v13;
            v13 = v4;
          }
          while (!v26);
        }
        if (v9)
        {
          v12 = v9;
          v13 = v4;
          if (v4 != a3)
            continue;
        }
        break;
      }
    }
    sub_1002EB080(v5, v9);
    if (v10)
    {
      for (i = (_QWORD *)v10[2]; i; i = (_QWORD *)i[2])
        v10 = i;
      a1 = (_QWORD *)v5;
      v30 = v10;
      goto LABEL_56;
    }
  }
LABEL_57:
  if (v4 != a3)
  {
    v31 = (uint64_t ***)(v5 + 8);
    do
    {
      v32 = (uint64_t *)operator new(0x38uLL);
      v33 = v32;
      v34 = *((unsigned __int8 *)v4 + 32);
      *((_BYTE *)v32 + 32) = v34;
      v35 = v4[6];
      v32[5] = v4[5];
      v32[6] = v35;
      if (v35)
      {
        v36 = (unint64_t *)(v35 + 8);
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
      }
      v38 = *v31;
      v39 = (uint64_t **)(v5 + 8);
      v40 = (uint64_t **)(v5 + 8);
      if (*v31)
      {
        if (v34)
        {
          do
          {
            v39 = v38;
            v38 = (uint64_t **)v38[1];
          }
          while (v38);
LABEL_66:
          v40 = v39 + 1;
        }
        else
        {
          do
          {
            while (1)
            {
              v39 = v38;
              if (*((_BYTE *)v38 + 32))
                break;
              v38 = (uint64_t **)v38[1];
              if (!v38)
                goto LABEL_66;
            }
            v38 = (uint64_t **)*v38;
            v40 = v39;
          }
          while (*v39);
        }
      }
      *v32 = 0;
      v32[1] = 0;
      v32[2] = (uint64_t)v39;
      *v40 = v32;
      v41 = **(_QWORD **)v5;
      if (v41)
      {
        *(_QWORD *)v5 = v41;
        v33 = *v40;
      }
      sub_1000E05F4(*(uint64_t **)(v5 + 8), v33);
      ++*(_QWORD *)(v5 + 16);
      v42 = (_QWORD *)v4[1];
      if (v42)
      {
        do
        {
          v43 = v42;
          v42 = (_QWORD *)*v42;
        }
        while (v42);
      }
      else
      {
        do
        {
          v43 = (_QWORD *)v4[2];
          v26 = *v43 == (_QWORD)v4;
          v4 = v43;
        }
        while (!v26);
      }
      v4 = v43;
    }
    while (v43 != a3);
  }
}

void sub_1002EB080(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  if (a2)
  {
    sub_1002EB080(a1, *a2);
    sub_1002EB080(a1, a2[1]);
    v4 = (std::__shared_weak_count *)a2[6];
    if (!v4)
      goto LABEL_6;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      operator delete(a2);
    }
    else
    {
LABEL_6:
      operator delete(a2);
    }
  }
}

uint64_t sub_1002EB108()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002EB164()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002EB1C0()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002EB1D4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100404098;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002EB1E4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100404098;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_1002EB214(_QWORD *a1)
{
  void *v2;
  void *v3;

  *a1 = off_1004040E8;
  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[3];
  if (v3)
  {
    a1[4] = v3;
    operator delete(v3);
  }
  operator delete();
}

uint64_t sub_1002EB270(uint64_t result, unsigned __int8 a2)
{
  atomic_store(a2, (unsigned __int8 *)(result + 80));
  return result;
}

uint64_t sub_1002EB27C(uint64_t result, float a2)
{
  atomic_store(LODWORD(a2), (unsigned int *)(result + 16));
  return result;
}

uint64_t sub_1002EB28C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002EB2E8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002EB344()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002EB418(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002EB4B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002EB544(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

void sub_1002EB574()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002EB5B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1002EB5C4()
{
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_100404290);
  return (id)qword_100417EE0;
}

id sub_1002EB610(uint64_t a1, uint64_t a2)
{
  id result;
  uint64_t v5;

  result = *(id *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

void sub_1002EB640(uint64_t a1)
{

}

void sub_1002EB64C(uint64_t a1, void *a2)
{
  NSObject *v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  id v8;
  __int128 buf;
  void (*v10)(uint64_t);
  void *v11;
  _QWORD *v12;
  id *v13;

  if (qword_100417ED8 != -1)
  {
    dispatch_once(&qword_100417ED8, &stru_100404290);
    v3 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
      goto LABEL_4;
    goto LABEL_3;
  }
  v3 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    LODWORD(buf) = 134217984;
    *(_QWORD *)((char *)&buf + 4) = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "wifid restarted. refcon %p", (uint8_t *)&buf, 0xCu);
  }
LABEL_4:
  v8 = a2;
  v4 = v8;
  v5 = v4;
  if (v4)
  {
    v6 = (void *)v4[3];
    if (v6)
    {
      *(_QWORD *)&buf = _NSConcreteStackBlock;
      *((_QWORD *)&buf + 1) = 3321888768;
      v10 = sub_1002EC288;
      v11 = &unk_1004042B0;
      v12 = v4;
      v13 = &v8;
      v7 = v6;
      dispatch_sync(v7, &buf);

    }
  }

}

void sub_1002EB7B8(uint64_t a1, void *a2, void *a3)
{
  NSObject *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  id v10[2];
  __int128 buf;
  void (*v12)(uint64_t);
  void *v13;
  _QWORD *v14;
  id *v15;

  if (qword_100417ED8 != -1)
  {
    dispatch_once(&qword_100417ED8, &stru_100404290);
    v5 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
      goto LABEL_4;
    goto LABEL_3;
  }
  v5 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    LODWORD(buf) = 134217984;
    *(_QWORD *)((char *)&buf + 4) = a3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "wifi device attached. refcon %p", (uint8_t *)&buf, 0xCu);
  }
LABEL_4:
  v10[0] = a3;
  v10[1] = a2;
  v6 = v10[0];
  v7 = v6;
  if (v6)
  {
    v8 = (void *)v6[3];
    if (v8)
    {
      *(_QWORD *)&buf = _NSConcreteStackBlock;
      *((_QWORD *)&buf + 1) = 3321888768;
      v12 = sub_1002EC314;
      v13 = &unk_1004042E0;
      v14 = v6;
      v15 = v10;
      v9 = v8;
      dispatch_sync(v9, &buf);

    }
  }

}

void sub_1002EBA1C(uint64_t a1, int a2)
{
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  const char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint32_t v11;
  NSObject *v12;
  uint64_t v13;
  const void *v14;
  NSObject *v15;
  dispatch_source_t *v16;
  _BYTE *v17;
  dispatch_time_t v18;
  _BYTE v19[24];
  void *v20;
  uint64_t v21;

  if (!*(_QWORD *)(a1 + 8))
  {
    if (qword_100417ED8 == -1)
    {
      v12 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
        return;
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_100404290);
      v12 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
        return;
    }
    *(_DWORD *)v19 = 67109120;
    *(_DWORD *)&v19[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Ignoring request to invalidate scan with error: %d. Already invalidated", v19, 8u);
    return;
  }
  *(_DWORD *)(a1 + 64) = a2;
  v4 = *(_QWORD *)(a1 + 56) - std::chrono::steady_clock::now().__d_.__rep_;
  v5 = objc_msgSend(*(id *)(a1 + 24), "estimatedScanTime");
  v6 = (v4 + 1000000 * (_QWORD)v5) & ~((v4 + 1000000 * (uint64_t)v5) >> 63);
  if (a2 != 82)
  {
    if (qword_100417ED8 == -1)
    {
      v13 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
        goto LABEL_13;
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_100404290);
      v13 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
        goto LABEL_13;
    }
    *(_DWORD *)v19 = 67109376;
    *(_DWORD *)&v19[4] = a2;
    *(_WORD *)&v19[8] = 2048;
    *(_QWORD *)&v19[10] = v6 / 0xF4240;
    v8 = "Cancelling pending scan due to wifi error %d.  Cancellation will be handled in %lld ms";
    v9 = v13;
    v10 = OS_LOG_TYPE_ERROR;
    v11 = 18;
    goto LABEL_12;
  }
  if (qword_100417ED8 != -1)
  {
    dispatch_once(&qword_100417ED8, &stru_100404290);
    v7 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_DEBUG))
      goto LABEL_13;
    goto LABEL_5;
  }
  v7 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_5:
    *(_DWORD *)v19 = 134217984;
    *(_QWORD *)&v19[4] = v6 / 0xF4240;
    v8 = "Wifi is powered off - cancellation will be handled in %lld ms";
    v9 = v7;
    v10 = OS_LOG_TYPE_DEBUG;
    v11 = 12;
LABEL_12:
    _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, v19, v11);
  }
LABEL_13:
  v14 = *(const void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v14)
    CFRelease(v14);
  v16 = (dispatch_source_t *)(a1 + 40);
  v15 = *(NSObject **)(a1 + 40);
  *(_QWORD *)v19 = _NSConcreteStackBlock;
  *(_QWORD *)&v19[8] = 3321888768;
  *(_QWORD *)&v19[16] = sub_1002EC3A0;
  v20 = &unk_100404310;
  v21 = a1;
  v17 = objc_retainBlock(v19);
  dispatch_source_set_event_handler(v15, v17);

  v18 = dispatch_time(0, v6);
  dispatch_source_set_timer(*v16, v18, 0xFFFFFFFFFFFFFFFFLL, 0);
}

void sub_1002EBCF0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_1000CDD68(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1002EBD9C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  id *v5;
  id *v6;

  v2 = (_QWORD *)*a1;
  if (*a1)
  {
    v3 = (_QWORD *)a1[1];
    v4 = (_QWORD *)*a1;
    if (v3 != v2)
    {
      do
      {
        v6 = (id *)*--v3;
        v5 = v6;
        *v3 = 0;
        if (v6)
        {
          sub_100049E84(v5);
          operator delete();
        }
      }
      while (v3 != v2);
      v4 = (_QWORD *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_1002EBE1C(uint64_t a1, CFTypeRef cf, int a3, id *a4)
{
  uint64_t v6;
  CFTypeID v8;
  const __CFArray *v9;
  NSObject *v10;
  CFTypeID v11;
  const __CFString *v12;
  int v13;
  const char *CStringPtr;

  v6 = a1;
  if (!cf)
  {
    v9 = 0;
    goto LABEL_5;
  }
  v8 = CFGetTypeID(cf);
  if (v8 == CFArrayGetTypeID())
  {
    a1 = v6;
    v9 = (const __CFArray *)cf;
LABEL_5:
    sub_10003693C(a1, v9, a3, a4);
    return;
  }
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_100404290);
  v10 = (id)qword_100417EE0;
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    v11 = CFGetTypeID(cf);
    v12 = CFCopyTypeIDDescription(v11);
    v13 = 136315138;
    CStringPtr = CFStringGetCStringPtr(v12, 0x8000100u);
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "We expect that networkScan is of type CFArray, but it's not. Memory smasher? Got %s", (uint8_t *)&v13, 0xCu);
  }

}

void sub_1002EBFA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id **sub_1002EBFB0(id **a1)
{
  id *v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_100049E84(v2);
    operator delete();
  }
  return a1;
}

void sub_1002EC258(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

void sub_1002EC288(uint64_t a1)
{
  void *v2;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 32))
  {
    v2 = objc_autoreleasePoolPush();
    objc_msgSend(**(id **)(a1 + 40), "onQueueHandlerServerRestart");
    objc_autoreleasePoolPop(v2);
  }
}

id sub_1002EC2DC(uint64_t a1, uint64_t a2)
{
  id result;
  uint64_t v5;

  result = *(id *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

void sub_1002EC30C(uint64_t a1)
{

}

void sub_1002EC314(uint64_t a1)
{
  void *v2;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 32))
  {
    v2 = objc_autoreleasePoolPush();
    objc_msgSend(**(id **)(a1 + 40), "onQueueHandleDeviceAttached:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8));
    objc_autoreleasePoolPop(v2);
  }
}

id sub_1002EC368(uint64_t a1, uint64_t a2)
{
  id result;
  uint64_t v5;

  result = *(id *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

void sub_1002EC398(uint64_t a1)
{

}

uint64_t sub_1002EC3A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 48) + 16))();
}

uint64_t sub_1002EC3B8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 32) = *(_QWORD *)(a2 + 32);
  return result;
}

void sub_1002EC3C4(uint64_t a1, uint64_t a2, CFTypeRef cf, int a4, void *a5)
{
  CFTypeID v10;
  NSObject *v11;
  CFIndex Count;
  CFTypeID v13;
  const __CFString *v14;
  NSObject *v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  CFTypeRef v23;
  int v24;
  _BYTE buf[32];
  _QWORD *v26;
  uint64_t *v27;

  if (cf && (v10 = CFGetTypeID(cf), v10 != CFArrayGetTypeID()))
  {
    v13 = CFGetTypeID(cf);
    v14 = CFCopyTypeIDDescription(v13);
    if (qword_100417ED8 != -1)
      dispatch_once(&qword_100417ED8, &stru_100404290);
    v15 = (id)qword_100417EE0;
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)&buf[4] = CFStringGetCStringPtr(v14, 0x8000100u);
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "We expect that networkScanResults is of type CFArray, but it's not. Memory smasher? Got %s", buf, 0xCu);
    }

    CFRelease(v14);
  }
  else
  {
    if (qword_100417ED8 != -1)
      dispatch_once(&qword_100417ED8, &stru_100404290);
    v11 = (id)qword_100417EE0;
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      if (cf)
        Count = CFArrayGetCount((CFArrayRef)cf);
      else
        Count = -1;
      *(_DWORD *)buf = 134218496;
      *(_QWORD *)&buf[4] = Count;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = a4;
      *(_WORD *)&buf[18] = 2048;
      *(_QWORD *)&buf[20] = a5;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Got cached scan from framework: %ld APs, errcode %d, refcon %p", buf, 0x1Cu);
    }

    v20 = a1;
    v21 = a5;
    v22 = a2;
    v23 = cf;
    v24 = a4;
    v16 = v21;
    v17 = v16;
    if (v16)
    {
      v18 = (void *)v16[3];
      if (v18)
      {
        *(_QWORD *)buf = _NSConcreteStackBlock;
        *(_QWORD *)&buf[8] = 3321888768;
        *(_QWORD *)&buf[16] = sub_1002EC65C;
        *(_QWORD *)&buf[24] = &unk_100404340;
        v26 = v16;
        v27 = &v20;
        v19 = v18;
        dispatch_sync(v19, buf);

      }
    }

  }
}

void sub_1002EC638(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002EC648(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002EC65C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 32))
  {
    v2 = objc_autoreleasePoolPush();
    v3 = *(_QWORD *)(a1 + 40);
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[WifiScannerCommonDarwin dictionaryToScanSettings:](WifiScannerCommonDarwin, "dictionaryToScanSettings:", *(_QWORD *)(v3 + 16)));
    objc_msgSend(*(id *)(v3 + 8), "onQueueHandleScanFor:withResults:forScan:withSettings:withRequest:withError:", *(_QWORD *)v3, *(_QWORD *)(v3 + 24), 0, v4, *(_QWORD *)(v3 + 16), *(unsigned int *)(v3 + 32));

    objc_autoreleasePoolPop(v2);
  }
}

void sub_1002EC6E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1002EC6F8(uint64_t a1, uint64_t a2)
{
  id result;
  uint64_t v5;

  result = *(id *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

void sub_1002EC728(uint64_t a1)
{

}

dispatch_source_t *sub_1002EC730(dispatch_source_t *a1)
{
  NSObject *v2;

  v2 = *a1;
  if (v2)
  {
    dispatch_source_set_timer(v2, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
    dispatch_source_set_event_handler(*a1, &stru_100404370);
    dispatch_source_cancel(*a1);

  }
  else
  {

  }
  return a1;
}

const void **sub_1002EC7A0(const void **a1)
{
  const void *v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
    CFRelease(v2);
  return a1;
}

uint64_t *sub_1002EC7D4(uint64_t *a1)
{
  NSObject *v2;
  uint64_t v3;
  int v5;
  uint64_t v6;

  if (qword_100417ED8 != -1)
  {
    dispatch_once(&qword_100417ED8, &stru_100404290);
    v2 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
      return a1;
    goto LABEL_3;
  }
  v2 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    v3 = *a1;
    v5 = 134217984;
    v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Pending scan information destroyed: %p", (uint8_t *)&v5, 0xCu);
  }
  return a1;
}

std::string *sub_1002EC8BC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002EC8EC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_1002EC908(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 32))
  {
    v2 = objc_autoreleasePoolPush();
    v3 = *(_QWORD *)(a1 + 40);
    objc_msgSend(*(id *)v3, "onQueueHandleScanFor:withResults:forScan:withSettings:withRequest:withError:", *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(unsigned int *)(v3 + 48));
    objc_autoreleasePoolPop(v2);
  }
}

id sub_1002EC968(uint64_t a1, uint64_t a2)
{
  id result;
  uint64_t v5;

  result = *(id *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

void sub_1002EC998(uint64_t a1)
{

}

_QWORD *sub_1002EC9A0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  void *v27;

  v3 = a1[1] - *a1;
  v4 = v3 >> 3;
  v5 = (v3 >> 3) + 1;
  if (v5 >> 61)
    sub_1000D02C0();
  v7 = a1[2] - *a1;
  if (v7 >> 2 > v5)
    v5 = v7 >> 2;
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8)
    v8 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v8 = v5;
  if (v8)
  {
    if (v8 >> 61)
      sub_1000CDEB8();
    v9 = (char *)operator new(8 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[8 * v4];
  v11 = &v9[8 * v8];
  v12 = *a2;
  *a2 = 0;
  *(_QWORD *)v10 = v12;
  v13 = v10 + 8;
  v14 = (char *)*a1;
  v15 = (char *)a1[1];
  if (v15 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v13;
    a1[2] = v11;
    if (!v15)
      return v13;
    goto LABEL_23;
  }
  v16 = (unint64_t)&v15[-*a1 - 8];
  if (v16 < 0x78 || &v15[-(v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v10 && &v9[v3 - (v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v15)
    goto LABEL_31;
  v17 = (v16 >> 3) + 1;
  v18 = 8 * (v17 & 0x3FFFFFFFFFFFFFFCLL);
  v10 -= v18;
  v19 = &v15[-v18];
  v20 = v15 - 16;
  v21 = &v9[8 * v4 - 16];
  v22 = v17 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    v24 = *((_OWORD *)v20 - 1);
    v23 = *(_OWORD *)v20;
    *((_OWORD *)v20 - 1) = 0uLL;
    *(_OWORD *)v20 = 0uLL;
    *((_OWORD *)v21 - 1) = v24;
    *(_OWORD *)v21 = v23;
    v20 -= 32;
    v21 -= 32;
    v22 -= 4;
  }
  while (v22);
  v15 = v19;
  if (v17 != (v17 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_31:
    do
    {
      v25 = *((_QWORD *)v15 - 1);
      v15 -= 8;
      *(_QWORD *)v15 = 0;
      *((_QWORD *)v10 - 1) = v25;
      v10 -= 8;
    }
    while (v15 != v14);
  }
  v26 = (char *)*a1;
  v15 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v11;
  if (v15 != v26)
  {
    do
    {
      v27 = (void *)*((_QWORD *)v15 - 1);
      v15 -= 8;

    }
    while (v15 != v26);
    v15 = v26;
  }
  if (v15)
LABEL_23:
    operator delete(v15);
  return v13;
}

uint64_t *sub_1002ECB3C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  if (a3 != a4)
  {
    v8 = operator new(0x18uLL);
    v9 = v8;
    *v8 = 0;
    v8[1] = 0;
    v10 = *a3;
    *a3 = 0;
    v11 = a3 + 1;
    v8[2] = v10;
    v12 = 1;
    if (v11 != a4)
    {
      v13 = v8;
      do
      {
        v8 = operator new(0x18uLL);
        *v8 = v13;
        v8[1] = 0;
        v14 = *v11;
        *v11++ = 0;
        v8[2] = v14;
        v13[1] = v8;
        ++v12;
        v13 = v8;
      }
      while (v11 != a4);
    }
    v15 = *a2;
    *(_QWORD *)(v15 + 8) = v9;
    *v9 = v15;
    *a2 = (uint64_t)v8;
    v8[1] = a2;
    *(_QWORD *)(a1 + 16) += v12;
    return v9;
  }
  return a2;
}

void sub_1002ECC0C(void *a1)
{
  void **v1;

  __cxa_begin_catch(a1);
  sub_100344AAC(v1);
  __cxa_rethrow();
}

void sub_1002ECC20(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1002ECC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v8;
  id WeakRetained;

  v7 = sub_10005F0F0();
  v8 = v7 - std::chrono::steady_clock::now().__d_.__rep_ + *(_QWORD *)(a2 + 56);
  WeakRetained = objc_loadWeakRetained((id *)(a2 + 16));
  objc_msgSend(WeakRetained, "onQueueScanTimedOut:withReason:errorCode:forScanInitiated:", a2, a3, a4, v8);

}

void sub_1002ECCA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002ECCB8(uint64_t a1)
{
  sub_1002ECCC0((_QWORD *)(a1 + 32));
}

void sub_1002ECCC0(_QWORD *a1)
{
  void *v2;
  NSObject *v3;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v8;

  if (qword_100417ED8 == -1)
  {
    v2 = (void *)qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      return;
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_100404290);
    v2 = (void *)qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      return;
  }
  v3 = v2;
  v4 = (std::chrono::steady_clock::now().__d_.__rep_ - *a1) / 1000000000;
  v5 = 134218240;
  v6 = 30;
  v7 = 2048;
  v8 = v4;
  _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Timeout from Wi-Fi framework, shouldn't take longer than %lld seconds. Last scan was %lld seconds ago", (uint8_t *)&v5, 0x16u);

}

std::string *sub_1002ECDE4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002ECE14(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *sub_1002ECE30@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002ECE60(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_1002ECE90()
{
  operator delete();
}

uint64_t sub_1002ECEA4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002ECF00()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002ECF5C()
{
  void *v0;

  v0 = objc_autoreleasePoolPush();
  qword_10041A2F8 = (uint64_t)kWiFiDeviceScanRequestClientPid;
  qword_10041A300 = (uint64_t)kWiFiDeviceScanRequestReceiptTimestamp;
  objc_autoreleasePoolPop(v0);
}

void sub_1002ED2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  void *v31;
  void *v32;
  void *v33;
  void *v34;

  if (a25 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1002ED384(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002ED3B4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002ED410()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002ED46C()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002ED480(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002ED4B0()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002ED50C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002ED568()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002ED57C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004044E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002ED58C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004044E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_1002ED5BC(uint64_t a1)
{
  sub_1000B88F4(a1);
  operator delete();
}

BOOL sub_1002ED5E0(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) == 2;
}

uint64_t sub_1002ED5F0(uint64_t result, unsigned __int8 a2)
{
  atomic_store(a2, (unsigned __int8 *)(result + 104));
  return result;
}

void sub_1002ED5FC(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v15;
  size_t v16;
  uint8x8_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  size_t v21;
  size_t v22;
  void *v23;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime <= *(_QWORD *)&v4)
  {
    if (prime >= *(_QWORD *)&v4)
      return;
    v16 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v17 = (uint8x8_t)vcnt_s8(v4), v17.i16[0] = vaddlv_u8(v17), v17.u32[0] > 1uLL))
    {
      v22 = std::__next_prime(v16);
      if (prime <= v22)
        prime = v22;
      if (prime >= *(_QWORD *)&v4)
        return;
    }
    else
    {
      v18 = 1 << -(char)__clz(v16 - 1);
      if (v16 >= 2)
        v16 = v18;
      if (prime <= v16)
        prime = v16;
      if (prime >= *(_QWORD *)&v4)
        return;
    }
    if (!prime)
    {
      v23 = *(void **)a1;
      *(_QWORD *)a1 = 0;
      if (v23)
        operator delete(v23);
      *(_QWORD *)(a1 + 8) = 0;
      return;
    }
  }
  if (prime >> 61)
    sub_1000CDEB8();
  v5 = operator new(8 * prime);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v5;
  if (v6)
    operator delete(v6);
  v7 = 0;
  *(_QWORD *)(a1 + 8) = prime;
  do
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v7++) = 0;
  while (prime != v7);
  v9 = a1 + 16;
  v8 = *(_QWORD **)(a1 + 16);
  if (v8)
  {
    v10 = v8[1];
    v11 = prime - 1;
    if ((prime & (prime - 1)) == 0)
    {
      v12 = v10 & v11;
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v9;
      while (1)
      {
        v13 = (_QWORD *)*v8;
        if (!*v8)
          break;
        v14 = v13[1] & v11;
        if (v14 == v12)
        {
          v8 = (_QWORD *)*v8;
        }
        else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v14))
        {
          *v8 = *v13;
          v15 = 8 * v14;
          *v13 = **(_QWORD **)(*(_QWORD *)a1 + v15);
          **(_QWORD **)(*(_QWORD *)a1 + v15) = v13;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v14) = v8;
          v8 = v13;
          v12 = v14;
        }
      }
      return;
    }
    if (v10 >= prime)
      v10 %= prime;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v10) = v9;
    v19 = (_QWORD *)*v8;
    if (*v8)
    {
      while (1)
      {
        v21 = v19[1];
        if (v21 >= prime)
          v21 %= prime;
        if (v21 == v10)
          goto LABEL_34;
        if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v21))
        {
          *v8 = *v19;
          v20 = 8 * v21;
          *v19 = **(_QWORD **)(*(_QWORD *)a1 + v20);
          **(_QWORD **)(*(_QWORD *)a1 + v20) = v19;
          v19 = v8;
LABEL_34:
          v8 = v19;
          v19 = (_QWORD *)*v19;
          if (!v19)
            return;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v21) = v8;
          v8 = v19;
          v19 = (_QWORD *)*v19;
          v10 = v21;
          if (!v19)
            return;
        }
      }
    }
  }
}

id sub_1002ED868(uint64_t a1)
{
  id v2;
  uint64_t **i;
  void *v4;

  v2 = objc_alloc_init((Class)NSMutableArray);
  for (i = *(uint64_t ***)(a1 + 16); i; i = (uint64_t **)*i)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *((unsigned int *)i + 4)));
    objc_msgSend(v2, "addObject:", v4);

  }
  return v2;
}

void sub_1002ED8D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002ED8EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t *sub_1002ED8FC(uint64_t a1, int *a2, _DWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t **v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v14;
  float v15;
  float v16;
  uint64_t v17;
  _QWORD *v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t prime;
  unint64_t v23;
  uint8x8_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v7 <= v6)
        v3 = v6 % v7;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
    v9 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == v6)
            {
              if (*((_DWORD *)v10 + 4) == (_DWORD)v6)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_23;
            }
            v10 = (uint64_t *)*v10;
            if (!v10)
              goto LABEL_23;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == (_DWORD)v6)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (uint64_t *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_23:
  v14 = operator new(0x18uLL);
  *v14 = 0;
  v14[1] = v6;
  *((_DWORD *)v14 + 4) = *a3;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (v7 && (float)(v16 * (float)v7) >= v15)
  {
    v17 = *(_QWORD *)a1;
    v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v18)
    {
LABEL_26:
      *v14 = *v18;
LABEL_61:
      *v18 = v14;
      goto LABEL_62;
    }
  }
  else
  {
    v19 = 1;
    if (v7 >= 3)
      v19 = (v7 & (v7 - 1)) != 0;
    v20 = v19 | (2 * v7);
    v21 = vcvtps_u32_f32(v15 / v16);
    if (v20 <= v21)
      prime = v21;
    else
      prime = v20;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_37;
    if (prime < v7)
    {
      v23 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v24 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v24.i16[0] = vaddlv_u8(v24), v24.u32[0] > 1uLL))
      {
        v23 = std::__next_prime(v23);
      }
      else
      {
        v25 = 1 << -(char)__clz(v23 - 1);
        if (v23 >= 2)
          v23 = v25;
      }
      if (prime <= v23)
        prime = v23;
      if (prime < v7)
LABEL_37:
        sub_100005DD8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    v26 = v7 - 1;
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
      {
        v3 = v6 % v7;
        v17 = *(_QWORD *)a1;
        v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v6 % v7));
        if (v18)
          goto LABEL_26;
      }
      else
      {
        v3 = v6;
        v17 = *(_QWORD *)a1;
        v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v6);
        if (v18)
          goto LABEL_26;
      }
    }
    else
    {
      v3 = v26 & v6;
      v17 = *(_QWORD *)a1;
      v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v26 & v6));
      if (v18)
        goto LABEL_26;
    }
  }
  *v14 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(v17 + 8 * v3) = a1 + 16;
  if (*v14)
  {
    v27 = *(_QWORD *)(*v14 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v27 >= v7)
        v27 %= v7;
    }
    else
    {
      v27 &= v7 - 1;
    }
    v18 = (_QWORD *)(*(_QWORD *)a1 + 8 * v27);
    goto LABEL_61;
  }
LABEL_62:
  ++*(_QWORD *)(a1 + 24);
  return v14;
}

void sub_1002EDC08(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002EDC1C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  int v20;
  double v21;
  double v23;
  double v24;
  long double v25;
  long double v26;
  BOOL v27;
  double v28;
  long double v29;
  long double v30;
  BOOL v31;
  double v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v47;
  double v48;
  long double v49;
  long double v50;
  BOOL v51;
  double v52;
  long double v53;
  long double v54;
  BOOL v55;
  double v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v67;
  double v68;
  long double v69;
  long double v70;
  BOOL v71;
  double v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  double v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v8 = *a4;
  v9 = *(_QWORD *)(*a4 + 144);
  v10 = *a2;
  v11 = 1000000 * *(_QWORD *)(*a4 + 136) + 50000000;
  v12 = v11 + *a2;
  v13 = 1000000 * v9;
  v14 = *a1;
  v15 = *a1 + v11;
  if (v12 >= 1000000 * v9 || v15 >= v13)
  {
    if (v14 < v10 || v10 == v14 && *((_DWORD *)a1 + 6) > *((_DWORD *)a2 + 6))
    {
      v17 = *a3;
      v18 = *a3 + v11;
      if (v12 >= v13 || v18 >= v13)
        goto LABEL_31;
      v20 = *(unsigned __int8 *)(v8 + 152);
      v21 = (double)v9 * 1000000.0;
      goto LABEL_28;
    }
    v17 = *a3;
    v18 = *a3 + v11;
    if (v12 >= v13 || v18 >= v13)
    {
LABEL_54:
      if (v10 >= v17 && (v17 != v10 || *((_DWORD *)a2 + 6) <= *((_DWORD *)a3 + 6)))
        return 0;
      goto LABEL_62;
    }
    v20 = *(unsigned __int8 *)(v8 + 152);
    v21 = (double)v9 * 1000000.0;
LABEL_51:
    v52 = (double)v18 / v21;
    if (v20)
    {
      v53 = v52 * (1.0 - exp(-*((double *)a3 + 1)));
      v54 = (double)v12 / v21 * (1.0 - exp(-*((double *)a2 + 1)));
      v55 = v53 == v54;
      if (v53 > v54)
        goto LABEL_62;
    }
    else
    {
      v56 = (double)v12 / v21;
      v55 = v52 == v56;
      if (v52 > v56)
        goto LABEL_62;
    }
    if (!v55 || *((_DWORD *)a2 + 6) <= *((_DWORD *)a3 + 6))
      return 0;
LABEL_62:
    v58 = *(_OWORD *)a2;
    v57 = *((_OWORD *)a2 + 1);
    v59 = *((_OWORD *)a3 + 1);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *((_OWORD *)a2 + 1) = v59;
    *(_OWORD *)a3 = v58;
    *((_OWORD *)a3 + 1) = v57;
    v60 = *(_QWORD *)(*a4 + 144);
    v61 = *a2;
    v62 = 1000000 * *(_QWORD *)(*a4 + 136) + 50000000;
    v63 = v62 + *a2;
    v64 = *a1;
    v65 = *a1 + v62;
    if (v63 < 1000000 * v60 && v65 < 1000000 * v60)
    {
      v67 = (double)v60 * 1000000.0;
      v68 = (double)v63 / v67;
      if (*(_BYTE *)(*a4 + 152))
      {
        v69 = v68 * (1.0 - exp(-*((double *)a2 + 1)));
        v70 = (double)v65 / v67 * (1.0 - exp(-*((double *)a1 + 1)));
        v71 = v69 == v70;
        if (v69 > v70)
          goto LABEL_82;
      }
      else
      {
        v76 = (double)v65 / v67;
        v71 = v68 == v76;
        if (v68 > v76)
          goto LABEL_82;
      }
      if (!v71)
        return 1;
    }
    else
    {
      if (v64 < v61)
        goto LABEL_82;
      if (v61 != v64)
        return 1;
    }
    if (*((_DWORD *)a1 + 6) <= *((_DWORD *)a2 + 6))
      return 1;
LABEL_82:
    v78 = *(_OWORD *)a1;
    v77 = *((_OWORD *)a1 + 1);
    v79 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v79;
    *(_OWORD *)a2 = v78;
    *((_OWORD *)a2 + 1) = v77;
    return 2;
  }
  v20 = *(unsigned __int8 *)(v8 + 152);
  v21 = (double)v9 * 1000000.0;
  v23 = (double)v12 / v21;
  v24 = (double)v15;
  if (*(_BYTE *)(v8 + 152))
  {
    v25 = v23 * (1.0 - exp(-*((double *)a2 + 1)));
    v26 = v24 / v21 * (1.0 - exp(-*((double *)a1 + 1)));
    v27 = v25 == v26;
    if (v25 > v26)
    {
LABEL_22:
      v17 = *a3;
      v18 = *a3 + v11;
      goto LABEL_27;
    }
  }
  else
  {
    v27 = v23 == v24 / v21;
    if (v23 > v24 / v21)
      goto LABEL_22;
  }
  if (!v27)
  {
    v17 = *a3;
    v18 = *a3 + v11;
    goto LABEL_50;
  }
  v17 = *a3;
  v18 = *a3 + v11;
  if (*((_DWORD *)a1 + 6) <= *((_DWORD *)a2 + 6))
  {
LABEL_50:
    if (v18 >= v13)
      goto LABEL_54;
    goto LABEL_51;
  }
LABEL_27:
  if (v18 >= v13)
  {
LABEL_31:
    if (v10 < v17)
      goto LABEL_38;
    if (v17 != v10)
      goto LABEL_40;
LABEL_37:
    if (*((_DWORD *)a2 + 6) <= *((_DWORD *)a3 + 6))
      goto LABEL_40;
LABEL_38:
    v34 = *(_OWORD *)a1;
    v33 = *((_OWORD *)a1 + 1);
    v35 = *((_OWORD *)a3 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a3;
    *((_OWORD *)a1 + 1) = v35;
    *(_OWORD *)a3 = v34;
    *((_OWORD *)a3 + 1) = v33;
    return 1;
  }
LABEL_28:
  v28 = (double)v18 / v21;
  if (v20)
  {
    v29 = v28 * (1.0 - exp(-*((double *)a3 + 1)));
    v30 = (double)v12 / v21 * (1.0 - exp(-*((double *)a2 + 1)));
    v31 = v29 == v30;
    if (v29 > v30)
      goto LABEL_38;
  }
  else
  {
    v32 = (double)v12 / v21;
    v31 = v28 == v32;
    if (v28 > v32)
      goto LABEL_38;
  }
  if (v31)
    goto LABEL_37;
LABEL_40:
  v38 = *(_OWORD *)a1;
  v37 = *((_OWORD *)a1 + 1);
  v39 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v39;
  *(_OWORD *)a2 = v38;
  *((_OWORD *)a2 + 1) = v37;
  v40 = *(_QWORD *)(*a4 + 144);
  v41 = *a3;
  v42 = 1000000 * *(_QWORD *)(*a4 + 136) + 50000000;
  v43 = v42 + *a3;
  v44 = *a2;
  v45 = *a2 + v42;
  if (v43 < 1000000 * v40 && v45 < 1000000 * v40)
  {
    v47 = (double)v40 * 1000000.0;
    v48 = (double)v43 / v47;
    if (*(_BYTE *)(*a4 + 152))
    {
      v49 = v48 * (1.0 - exp(-*((double *)a3 + 1)));
      v50 = (double)v45 / v47 * (1.0 - exp(-*((double *)a2 + 1)));
      v51 = v49 == v50;
      if (v49 > v50)
        goto LABEL_77;
    }
    else
    {
      v72 = (double)v45 / v47;
      v51 = v48 == v72;
      if (v48 > v72)
        goto LABEL_77;
    }
    if (!v51)
      return 1;
LABEL_76:
    if (*((_DWORD *)a2 + 6) > *((_DWORD *)a3 + 6))
      goto LABEL_77;
    return 1;
  }
  if (v44 >= v41)
  {
    if (v41 != v44)
      return 1;
    goto LABEL_76;
  }
LABEL_77:
  v74 = *(_OWORD *)a2;
  v73 = *((_OWORD *)a2 + 1);
  v75 = *((_OWORD *)a3 + 1);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *((_OWORD *)a2 + 1) = v75;
  *(_OWORD *)a3 = v74;
  *((_OWORD *)a3 + 1) = v73;
  return 2;
}

uint64_t sub_1002EE10C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002EE168()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002EE1C4()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002EE1D8(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, _QWORD *a7@<X8>, float a8@<S0>)
{
  _QWORD *v10;
  char v11;
  char v12;
  char v13;
  char v14;
  float v15;
  uint64_t v16;
  char v17;

  v16 = a1;
  v15 = a8;
  v14 = a3;
  v13 = a4;
  v12 = a5;
  v11 = a6;
  v10 = operator new(0x58uLL);
  v10[1] = 0;
  v10[2] = 0;
  *v10 = off_100404588;
  sub_1002EE2D8((uint64_t)&v17, (uint64_t)(v10 + 3), &v16, &v15, a2, &v14, &v13, &v12, &v11);
  *a7 = v10 + 3;
  a7[1] = v10;
}

void sub_1002EE270(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_1002EE288(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100404588;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002EE298(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100404588;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1002EE2C8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1002EE2D8(uint64_t a1, uint64_t a2, uint64_t *a3, float *a4, uint64_t a5, char *a6, char *a7, char *a8, char *a9)
{
  uint64_t v13;
  float v14;
  uint64_t v15;
  const void *v16;
  int64_t v17;
  char *v18;
  char *v19;
  void *__p;
  void *v21;
  char *v22;

  v13 = *a3;
  v14 = *a4;
  v21 = 0;
  v22 = 0;
  __p = 0;
  v16 = *(const void **)a5;
  v15 = *(_QWORD *)(a5 + 8);
  v17 = v15 - *(_QWORD *)a5;
  if (v15 != *(_QWORD *)a5)
  {
    if (v17 < 0)
      sub_1000D02C0();
    v18 = (char *)operator new(v15 - *(_QWORD *)a5);
    v19 = &v18[4 * (v17 >> 2)];
    __p = v18;
    v22 = v19;
    memcpy(v18, v16, v17);
    v21 = v19;
  }
  sub_1002EE3D4(a2, v13, (uint64_t)&__p, *a6, *a7, *a8, *a9, v14);
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_1002EE3B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002EE3D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6, char a7, float a8)
{
  uint64_t v14;
  const void *v15;
  int64_t v16;
  char *v17;
  char *v18;
  void *v20;
  void *v21[2];
  char v22;
  std::string __p;

  *(_QWORD *)a1 = off_1004045D8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 24) = 0;
  *(float *)(a1 + 16) = a8;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v15 = *(const void **)a3;
  v14 = *(_QWORD *)(a3 + 8);
  v16 = v14 - *(_QWORD *)a3;
  if (v14 != *(_QWORD *)a3)
  {
    if (v16 < 0)
      sub_1000D02C0();
    v17 = (char *)operator new(v14 - *(_QWORD *)a3);
    *(_QWORD *)(a1 + 24) = v17;
    *(_QWORD *)(a1 + 32) = v17;
    v18 = &v17[4 * (v16 >> 2)];
    *(_QWORD *)(a1 + 40) = v18;
    memcpy(v17, v15, v16);
    *(_QWORD *)(a1 + 32) = v18;
  }
  *(_BYTE *)(a1 + 48) = a4;
  *(_BYTE *)(a1 + 49) = a5;
  *(_BYTE *)(a1 + 50) = a6;
  *(_BYTE *)(a1 + 51) = a7;
  *(_QWORD *)(a1 + 56) = 0;
  if (a2 > 0x10000)
  {
    sub_1000D5048(v21, "");
    sub_1001E18C4("Dwell requested is too long", &__p);
    sub_100174738((uint64_t)v21, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v22 < 0)
      operator delete(v21[0]);
    sub_1000F2AE4((uint64_t)&v20);
  }
  return a1;
}

void sub_1002EE548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;
  void **v21;
  void *v23;

  if (a14 < 0)
    operator delete(__p);
  v23 = *v21;
  if (*v21)
  {
    *(_QWORD *)(v20 + 32) = v23;
    operator delete(v23);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1002EE598(_QWORD *a1)
{
  void *v2;

  *a1 = off_1004045D8;
  v2 = (void *)a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1002EE5D4(_QWORD *a1)
{
  void *v2;

  *a1 = off_1004045D8;
  v2 = (void *)a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }
  operator delete();
}

uint64_t sub_1002EE620()
{
  return 1;
}

uint64_t sub_1002EE628(uint64_t result, unsigned __int8 a2)
{
  atomic_store(a2, (unsigned __int8 *)(result + 51));
  return result;
}

uint64_t sub_1002EE634(uint64_t result, float a2)
{
  atomic_store(LODWORD(a2), (unsigned int *)(result + 16));
  return result;
}

WifiScannerSettings *sub_1002EE644(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  unsigned int *v6;
  unsigned int *i;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  WifiScannerSettings *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  WifiScannerSettings *v18;
  void *v20;

  v4 = a3;
  if (*(_BYTE *)(a1 + 48))
  {
    v5 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", (uint64_t)(*(_QWORD *)(a1 + 32) - *(_QWORD *)(a1 + 24)) >> 2);
    v6 = *(unsigned int **)(a1 + 24);
    for (i = *(unsigned int **)(a1 + 32); v6 != i; ++v6)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *v6));
      objc_msgSend(v5, "addObject:", v8);

    }
  }
  else
  {
    v9 = *(_QWORD *)(a1 + 24);
    if (v9 == *(_QWORD *)(a1 + 32))
    {
      v5 = 0;
    }
    else
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(v9 + 4 * *(_QWORD *)(a1 + 56))));
      v20 = v10;
      v5 = (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v20, 1));

      *(_QWORD *)(a1 + 56) = (*(_QWORD *)(a1 + 56) + 1)
                           % (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 32) - *(_QWORD *)(a1 + 24)) >> 2);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + 49);
  v12 = [WifiScannerSettings alloc];
  if (v11)
    v14 = 1;
  else
    v14 = 2;
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(unsigned __int8 *)(a1 + 50);
  v17 = atomic_load((unsigned int *)(a1 + 16));
  LODWORD(v13) = v17;
  LOBYTE(v17) = atomic_load((unsigned __int8 *)(a1 + 51));
  v18 = -[WifiScannerSettings initWithChannels:dwell:scanType:includingOffChannelResults:atDutyCycle:asLowPriority:](v12, "initWithChannels:dwell:scanType:includingOffChannelResults:atDutyCycle:asLowPriority:", v5, v15, v14, v16, v17 & 1, v13);

  return v18;
}

void sub_1002EE7E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_1002EE838()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002EE894()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002EE8F0()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t *sub_1002EE904(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
    sub_1002EED0C((uint64_t)a1, v2);
  return a1;
}

uint64_t sub_1002EE938(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  if (*(_BYTE *)(a1 + 88))
  {
    v2 = *(void **)(a1 + 112);
    if (v2)
    {
      *(_QWORD *)(a1 + 120) = v2;
      operator delete(v2);
    }
    *(_BYTE *)(a1 + 88) = 0;
  }
  v3 = *(void **)(a1 + 40);
  if (v3)
  {
    *(_QWORD *)(a1 + 48) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 16);
  if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_1002EE994(id a1)
{
  operator new();
}

void sub_1002EE9F0()
{
  operator delete();
}

uint64_t sub_1002EEA14(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[2];
  char v5;

  *(_DWORD *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 30000;
  *(_DWORD *)(a1 + 16) = 1065353216;
  *(_BYTE *)(a1 + 20) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_1000A3814(a1 + 40);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_1002F1234(a1 + 152);
  v5 = 0;
  if (sub_1002CCF2C())
  {
    v4[0] = sub_10016E2D8();
    v4[1] = v2;
    *(_BYTE *)(a1 + 120) = sub_1000AC110((uint64_t)v4, &v5);
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
  }
  return a1;
}

void sub_1002EEAC4(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1002EEA9CLL);
}

void sub_1002EEAE4(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1001D4FB4(v3);
  sub_1001B68CC(v2);
  sub_1000E095C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002EEB2C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
  sub_1002EECBC(a1, *(_QWORD **)(a1 + 8));
  return a1;
}

void sub_1002EEB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;

  *(_BYTE *)(a1 + 20) = a2;
  v4 = *(_QWORD *)(a1 + 24);
  if (!v4)
  {
    sub_1000AB668(a1, &v17);
    v5 = v17;
    v17 = 0uLL;
    v6 = *(std::__shared_weak_count **)(a1 + 32);
    *(_OWORD *)(a1 + 24) = v5;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v9 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
    if (*((_QWORD *)&v17 + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    v4 = *(_QWORD *)(a1 + 24);
  }
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 24))(v4, a2);
  if (v12)
  {
    v15 = (unint64_t *)&v12->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_1002EECA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000E095C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002EECBC(uint64_t a1, _QWORD *a2)
{
  void *v4;

  if (a2)
  {
    sub_1002EECBC(a1, *a2);
    sub_1002EECBC(a1, a2[1]);
    v4 = (void *)a2[5];
    if (v4)
    {
      a2[6] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

void sub_1002EED0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a2)
  {
    v3 = a2 + 152;
    v4 = *(void **)(a2 + 176);
    if (v4)
    {
      *(_QWORD *)(a2 + 184) = v4;
      operator delete(v4);
    }
    sub_1002EECBC(v3, *(_QWORD **)(a2 + 160));
    v5 = *(_QWORD **)(a2 + 128);
    if (v5)
    {
      v6 = *(_QWORD **)(a2 + 136);
      v7 = *(void **)(a2 + 128);
      if (v6 != v5)
      {
        do
        {
          v9 = *--v6;
          v8 = v9;
          *v6 = 0;
          if (v9)
            (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
        }
        while (v6 != v5);
        v7 = *(void **)(a2 + 128);
      }
      *(_QWORD *)(a2 + 136) = v5;
      operator delete(v7);
    }
    sub_1001B68CC((_QWORD *)(a2 + 40));
    v10 = *(std::__shared_weak_count **)(a2 + 32);
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    operator delete();
  }
}

void sub_1002EEDF8(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_1002EEE24(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1002EEE54()
{
  sub_1002EEEEC();
}

float sub_1002EEE64@<S0>(int *a1@<X8>)
{
  return (float)*a1;
}

float sub_1002EEE78@<S0>(uint64_t *a1@<X8>)
{
  return (float)*a1;
}

float sub_1002EEE8C@<S0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1002EF040(a1, a2);
}

float sub_1002EEEA0@<S0>(double *a1@<X8>)
{
  double v1;

  v1 = *a1;
  sub_1002EF62C(*a1);
  return v1;
}

void sub_1002EEEBC()
{
  sub_1002EF6C0();
}

void sub_1002EEED4()
{
  sub_1002EF814();
}

void sub_1002EEEEC()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6A0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert empty value to a type");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<float>::operator()(boost::none_t) const [T = float]", (uint64_t)"../../../common/util/overridable_setting.h", 111, (uint64_t)v0);
}

void sub_1002EEFA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1002EF008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1002EEFF8);
}

void sub_1002EF02C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

float sub_1002EF040(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  std::bad_cast_vtbl *v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  BOOL v7;
  float v9;
  std::bad_cast v10;
  _UNKNOWN **v11;
  void *v12;

  v9 = 0.0;
  v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) == 0)
    v3 = (std::bad_cast_vtbl *)a2;
  else
    v3 = *(std::bad_cast_vtbl **)a2;
  if ((v2 & 0x80u) != 0)
    v2 = *(_QWORD *)(a2 + 8);
  v10.__vftable = v3;
  v11 = (_UNKNOWN **)((char *)v3 + v2);
  if (!sub_1002EF2C4((unsigned __int8 *)v3, (unsigned __int8 *)v3 + v2, &v9, "NAN", "nan", "INFINITY", "infinity", 0x28u, 0x29u))
  {
    if (!sub_1002EF148((uint64_t *)&v10, (uint64_t)&v9)
      || ((v4 = *((unsigned __int8 *)v11 - 1) - 43, v5 = v4 > 0x3A, v6 = (1 << v4) & 0x400000004000005, !v5)
        ? (v7 = v6 == 0)
        : (v7 = 1),
          !v7))
    {
      std::bad_cast::bad_cast(&v10);
      v10.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v10);
    }
  }
  return v9;
}

void sub_1002EF134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  std::bad_cast::~bad_cast(&a10);
  _Unwind_Resume(a1);
}

BOOL sub_1002EF148(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  std::ios_base *v6;
  uint64_t v7;
  _QWORD *v8;
  _BOOL8 v9;
  _QWORD v11[2];
  std::ios_base v12;
  uint64_t v13;
  int v14;
  _QWORD __sb[8];

  std::streambuf::basic_streambuf(__sb);
  v4 = *a1;
  v5 = a1[1];
  __sb[0] = &off_1004046D8;
  __sb[2] = v4;
  __sb[3] = v4;
  __sb[4] = v5;
  v11[1] = 0;
  std::ios_base::init(&v12, __sb);
  v13 = 0;
  v14 = -1;
  v6->__exceptions_ = 1;
  std::ios_base::clear(v6, v6->__rdstate_);
  v7 = v11[0];
  *(_DWORD *)((char *)&v11[1] + *(_QWORD *)(v11[0] - 24)) &= ~0x1000u;
  *(_QWORD *)((char *)&v11[2] + *(_QWORD *)(v7 - 24)) = 9;
  v8 = (_QWORD *)std::istream::operator>>(v11, a2);
  v9 = (*((_BYTE *)v8 + *(_QWORD *)(*v8 - 24) + 32) & 5) == 0 && std::istream::get(v11) == -1;
  std::istream::~istream(v11);
  std::streambuf::~streambuf(__sb);
  return v9;
}

void sub_1002EF26C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  std::istream::~istream(va);
  std::streambuf::~streambuf(v2 - 96);
  _Unwind_Resume(a1);
}

void sub_1002EF288(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::ios::~ios(v1);
  std::streambuf::~streambuf(v2 - 96);
  _Unwind_Resume(a1);
}

uint64_t sub_1002EF2C4(unsigned __int8 *a1, unsigned __int8 *a2, float *a3, unsigned __int8 *a4, unsigned __int8 *a5, unsigned __int8 *a6, unsigned __int8 *a7, unsigned __int8 a8, unsigned __int8 a9)
{
  int v9;
  BOOL v10;
  unsigned __int8 *v11;
  int64_t v12;
  int v14;
  int v15;
  int v16;
  unsigned __int8 *v17;
  float v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  float v28;

  if (a1 == a2)
    return 0;
  v9 = *a1;
  v10 = v9 == 45 || v9 == 43;
  v11 = v10 ? a1 + 1 : a1;
  v12 = a2 - v11;
  if (a2 - v11 < 3)
    return 0;
  v14 = *v11;
  if (v14 == *a5 || v14 == *a4)
  {
    v15 = v11[1];
    if (v15 == a5[1] || v15 == a4[1])
    {
      v16 = v11[2];
      if (v16 == a5[2] || v16 == a4[2])
      {
        v17 = v11 + 3;
        if (v17 == a2 || a2 - v17 >= 2 && *v17 == a8 && *(a2 - 1) == a9)
        {
          v18 = NAN;
          if (v9 == 45)
            v18 = NAN;
          *a3 = v18;
          return 1;
        }
        return 0;
      }
    }
  }
  if (v12 == 8)
  {
    if (v14 != *a7 && v14 != *a6)
      return 0;
    v22 = v11[1];
    if (v22 != a7[1] && v22 != a6[1])
      return 0;
    v23 = v11[2];
    if (v23 != a7[2] && v23 != a6[2])
      return 0;
    v24 = v11[3];
    if (v24 != a7[3] && v24 != a6[3])
      return 0;
    v25 = v11[4];
    if (v25 != a7[4] && v25 != a6[4])
      return 0;
    v26 = v11[5];
    if (v26 != a7[5] && v26 != a6[5])
      return 0;
    v27 = v11[6];
    if (v27 != a7[6] && v27 != a6[6])
      return 0;
    v20 = v11[7];
    if (v20 == a7[7])
      goto LABEL_48;
    v21 = a6[7];
  }
  else
  {
    if (v12 != 3 || v14 != *a7 && v14 != *a6)
      return 0;
    v19 = v11[1];
    if (v19 != a7[1] && v19 != a6[1])
      return 0;
    v20 = v11[2];
    if (v20 == a7[2])
      goto LABEL_48;
    v21 = a6[2];
  }
  if (v20 != v21)
    return 0;
LABEL_48:
  v28 = INFINITY;
  if (v9 == 45)
    v28 = -INFINITY;
  *a3 = v28;
  return 1;
}

_QWORD *sub_1002EF4FC(_QWORD *result, uint64_t a2, uint64_t a3)
{
  result[2] = a2;
  result[3] = a2;
  result[4] = a2 + a3;
  return result;
}

void sub_1002EF510(uint64_t a1)
{
  std::streambuf::~streambuf(a1);
  operator delete();
}

double sub_1002EF534@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if ((a4 & 0x10) != 0)
  {
    v7 = -1;
    goto LABEL_19;
  }
  v5 = a1[2];
  v6 = a1[4] - v5;
  if (!a3)
  {
    v7 = -1;
    if (a2 < 0 || v6 < a2)
      goto LABEL_19;
    v9 = v5 + a2;
LABEL_15:
    v8 = a1[4];
    goto LABEL_16;
  }
  if (a3 == 1)
  {
    v7 = -1;
    v10 = a1[3] - v5 + a2;
    if (v10 < 0 || v10 > v6)
      goto LABEL_19;
    v9 = a1[3] + a2;
    goto LABEL_15;
  }
  if (a3 != 2)
  {
    v9 = a1[3];
    goto LABEL_18;
  }
  v7 = -1;
  if ((a2 & 0x8000000000000000) == 0 && v6 >= a2)
  {
    v8 = a1[4];
    v9 = v8 - a2;
LABEL_16:
    a1[3] = v9;
    a1[4] = v8;
LABEL_18:
    v7 = v9 - v5;
  }
LABEL_19:
  result = 0.0;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  *(_OWORD *)(a5 + 80) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_QWORD *)(a5 + 128) = v7;
  return result;
}

double sub_1002EF5E4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  if ((a3 & 0x10) == 0)
  {
    v4 = a1[2];
    v5 = *(_QWORD *)(a2 + 128);
    if (v5 <= a1[4] - v4)
    {
      v6 = v4 + v5;
      v7 = a1[4];
      a1[3] = v6;
      a1[4] = v7;
    }
  }
  result = 0.0;
  *(_OWORD *)(a4 + 96) = 0u;
  *(_OWORD *)(a4 + 112) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_QWORD *)(a4 + 128) = -1;
  return result;
}

void sub_1002EF62C(double a1)
{
  int v1;
  std::bad_cast *exception;
  std::bad_cast *v3;
  std::bad_cast *v4;
  std::bad_cast *v5;

  v1 = 2 * (a1 > 3.40282347e38);
  if (a1 < -3.40282347e38)
    v1 = 1;
  if (v1 == 2)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    v3 = sub_10016A6B8(exception);
  }
  if (v1 == 1)
  {
    v4 = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    v4->__vftable = 0;
    v5 = sub_10016A694(v4);
  }
}

void sub_1002EF6C0()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<float>::operator()(const F &) const [T = float, F = std::vector<boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_1002EF774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1002EF7DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1002EF7CCLL);
}

void sub_1002EF800(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002EF814()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<float>::operator()(const F &) const [T = float, F = std::unordered_map<std::string, boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_1002EF8C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1002EF930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1002EF920);
}

void sub_1002EF954(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_1002EF968(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)(a2 + 40);
  *(__n128 *)(a1 + 40) = result;
  return result;
}

_QWORD *sub_1002EF978(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD *result;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v3 = *(_QWORD **)(v1 + 40);
  v2 = *(uint64_t **)(v1 + 48);
  v4 = (uint64_t *)v3[17];
  if ((unint64_t)v4 >= v3[18])
  {
    result = sub_1001D5028(v3 + 16, v2);
  }
  else
  {
    v5 = *v2;
    *v2 = 0;
    *v4 = v5;
    result = v4 + 1;
  }
  v3[17] = result;
  return result;
}

__n128 sub_1002EF9D0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(__n128 *)(a1 + 40) = result;
  return result;
}

_QWORD *sub_1002EF9E8(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(result[4] + 8);
  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(uint64_t **)(v2 + 128);
  v4 = *(uint64_t **)(v2 + 136);
  if (v3 == v4)
  {
    v4 = *(uint64_t **)(v2 + 128);
  }
  else
  {
    v5 = *(_QWORD **)(v1 + 48);
    while (*v3 != *v5)
    {
      if (++v3 == v4)
      {
        v3 = *(uint64_t **)(v2 + 136);
        goto LABEL_16;
      }
    }
    if (v3 != v4)
    {
      v6 = v3 + 1;
      if (v3 + 1 != v4)
      {
        do
        {
          v7 = *v6;
          if (*v6 != *v5)
          {
            *v6 = 0;
            result = (_QWORD *)*v3;
            *v3 = v7;
            if (result)
              result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
            ++v3;
          }
          ++v6;
        }
        while (v6 != v4);
        v4 = *(uint64_t **)(v2 + 136);
      }
    }
  }
LABEL_16:
  **(_BYTE **)(v1 + 56) = v3 != v4;
  if (v3 != v4)
  {
    while (v4 != v3)
    {
      v8 = (_QWORD *)*--v4;
      result = v8;
      *v4 = 0;
      if (v8)
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
    }
    *(_QWORD *)(v2 + 136) = v3;
  }
  return result;
}

uint64_t sub_1002EFB44()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002EFBA0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002EFBFC()
{
  return __cxa_atexit((void (*)(void *))sub_1002EE904, &qword_10041A310, (void *)&_mh_execute_header);
}

double sub_1002EFC18@<D0>(uint64_t a1@<X8>)
{
  char *v2;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)a1 = v2;
  *(_OWORD *)(a1 + 8) = xmmword_1003830B0;
  strcpy(v2, "DynamicScanPriorityObserver");
  return *(double *)"PriorityObserver";
}

void sub_1002EFC68(uint64_t a1, uint64_t a2)
{
  NSObject *v3;
  void *v4;
  void *__p[2];
  char v6;
  std::string buf;

  if (!*(_BYTE *)(a1 + 16))
  {
    sub_1000D5048(__p, "");
    sub_1002EFEC8("Should have a high priority start timestamp if we're scanning in high priority", &buf);
    sub_100174738((uint64_t)__p, (uint64_t)&buf, 1);
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
      operator delete(buf.__r_.__value_.__l.__data_);
    if (v6 < 0)
      operator delete(__p[0]);
    sub_10015C2DC((uint64_t)&v4);
  }
  if (*(float *)(sub_10005D8AC(*(_QWORD *)(a1 + 8)) + 56) * 1000000000.0 < (double)(a2 - *(_QWORD *)(a1 + 24)))
  {
    if (qword_100417ED8 == -1)
    {
      v3 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_DEBUG))
      {
LABEL_6:
        if (*(_BYTE *)(a1 + 16))
          *(_BYTE *)(a1 + 16) = 0;
        sub_1002EEB68(*(_QWORD *)(a1 + 8), 1);
        return;
      }
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_100404810);
      v3 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_DEBUG))
        goto LABEL_6;
    }
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Scanning on High Priority too long -- switching to low priority scans", (uint8_t *)&buf, 2u);
    goto LABEL_6;
  }
}

void sub_1002EFE00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002EFE44(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_1004047D8;
  v2 = *(void **)(a1 + 32);
  if (v2)
    operator delete(v2);
  if (*(_BYTE *)(a1 + 16))
    *(_BYTE *)(a1 + 16) = 0;
  operator delete();
}

void sub_1002EFE98(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

std::string *sub_1002EFEC8@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002EFEF8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *sub_1002EFF14@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002EFF44(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002EFF60(_QWORD *a1, unsigned int a2, uint64_t a3, unsigned int a4, _BYTE *a5)
{
  int8x16_t *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  uint64_t result;
  unint64_t v11;
  int8x8_t *v12;
  unint64_t v13;
  uint8x8_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  int64x2_t v18;
  int64x2_t v19;
  int8x16_t *v20;
  uint64_t v21;
  int8x8_t v22;
  uint8x8_t v23;
  unint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  int64x2_t v27;
  int8x16_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint8x8_t v31;
  uint8x8_t v32;

  v5 = (int8x16_t *)a1;
  v6 = a4 - (unint64_t)a2;
  v7 = v6 + 8 * (a3 - (_QWORD)a1);
  if (*a5)
  {
    if (a2)
    {
      if (64 - a2 >= v7)
        v8 = v6 + 8 * (a3 - (_QWORD)a1);
      else
        v8 = 64 - a2;
      v5 = (int8x16_t *)(a1 + 1);
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)((0xFFFFFFFFFFFFFFFFLL >> (64 - a2 - v8)) & (-1 << a2) & *a1));
      v9.i16[0] = vaddlv_u8(v9);
      result = v9.u32[0];
      v7 -= v8;
      v11 = v7 - 64;
      if (v7 >= 0x40)
        goto LABEL_7;
    }
    else
    {
      result = 0;
      v11 = v7 - 64;
      if (v7 >= 0x40)
      {
LABEL_7:
        if (v11 >= 0xC0)
        {
          v17 = (v11 >> 6) + 1;
          v12 = (int8x8_t *)v5 + (v17 & 0x7FFFFFFFFFFFFFCLL);
          v7 -= (v17 & 0x7FFFFFFFFFFFFFCLL) << 6;
          v18 = 0uLL;
          v19 = (int64x2_t)(unint64_t)result;
          v20 = v5 + 1;
          v21 = v17 & 0x7FFFFFFFFFFFFFCLL;
          do
          {
            v19 = (int64x2_t)vpadalq_u32((uint64x2_t)v19, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(v20[-1]))));
            v18 = (int64x2_t)vpadalq_u32((uint64x2_t)v18, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(*v20))));
            v20 += 2;
            v21 -= 4;
          }
          while (v21);
          result = vaddvq_s64(vaddq_s64(v18, v19));
          if (v17 == (v17 & 0x7FFFFFFFFFFFFFCLL))
            goto LABEL_22;
        }
        else
        {
          v12 = (int8x8_t *)v5;
        }
        do
        {
          v22 = *v12++;
          v23 = (uint8x8_t)vcnt_s8(v22);
          v23.i16[0] = vaddlv_u8(v23);
          result += v23.u32[0];
          v7 -= 64;
        }
        while (v7 > 0x3F);
LABEL_22:
        if (!v7)
          return result;
        v24 = *(_QWORD *)v12 & (0xFFFFFFFFFFFFFFFFLL >> -(char)v7);
        goto LABEL_32;
      }
    }
    v12 = (int8x8_t *)v5;
    goto LABEL_22;
  }
  if (a2)
  {
    if (64 - a2 >= v7)
      v13 = v6 + 8 * (a3 - (_QWORD)a1);
    else
      v13 = 64 - a2;
    v5 = (int8x16_t *)(a1 + 1);
    v14 = (uint8x8_t)vcnt_s8((int8x8_t)((0xFFFFFFFFFFFFFFFFLL >> (64 - a2 - v13)) & (-1 << a2) & ~*a1));
    v14.i16[0] = vaddlv_u8(v14);
    result = v14.u32[0];
    v7 -= v13;
    v15 = v7 - 64;
    if (v7 >= 0x40)
      goto LABEL_14;
LABEL_25:
    v16 = (uint64_t *)v5;
    goto LABEL_30;
  }
  result = 0;
  v15 = v7 - 64;
  if (v7 < 0x40)
    goto LABEL_25;
LABEL_14:
  if (v15 >= 0xC0)
  {
    v25 = (v15 >> 6) + 1;
    v16 = &v5->i64[v25 & 0x7FFFFFFFFFFFFFCLL];
    v7 -= (v25 & 0x7FFFFFFFFFFFFFCLL) << 6;
    v26 = 0uLL;
    v27 = (int64x2_t)(unint64_t)result;
    v28 = v5 + 1;
    v29 = v25 & 0x7FFFFFFFFFFFFFCLL;
    do
    {
      v27 = (int64x2_t)vpadalq_u32((uint64x2_t)v27, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(vmvnq_s8(v28[-1])))));
      v26 = (int64x2_t)vpadalq_u32((uint64x2_t)v26, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(vmvnq_s8(*v28)))));
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    result = vaddvq_s64(vaddq_s64(v26, v27));
    if (v25 == (v25 & 0x7FFFFFFFFFFFFFCLL))
      goto LABEL_30;
  }
  else
  {
    v16 = (uint64_t *)v5;
  }
  do
  {
    v30 = *v16++;
    v31 = (uint8x8_t)vcnt_s8((int8x8_t)~v30);
    v31.i16[0] = vaddlv_u8(v31);
    result += v31.u32[0];
    v7 -= 64;
  }
  while (v7 > 0x3F);
LABEL_30:
  if (!v7)
    return result;
  v24 = (0xFFFFFFFFFFFFFFFFLL >> -(char)v7) & ~*v16;
LABEL_32:
  v32 = (uint8x8_t)vcnt_s8((int8x8_t)v24);
  v32.i16[0] = vaddlv_u8(v32);
  result += v32.u32[0];
  return result;
}

uint64_t sub_1002F01D4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F0230()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F028C()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F02CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F0338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1002F03F4(uint64_t result)
{
  **(_QWORD **)(result + 40) = *(_QWORD *)(*(_QWORD *)(result + 32) + 8);
  return result;
}

id sub_1002F0404(uint64_t a1, uint64_t a2)
{
  id result;
  uint64_t v5;

  result = *(id *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

void sub_1002F0434(uint64_t a1)
{

}

uint64_t sub_1002F0504(uint64_t result)
{
  **(_QWORD **)(result + 40) = *(_QWORD *)(*(_QWORD *)(result + 32) + 16);
  return result;
}

id sub_1002F0514(uint64_t a1, uint64_t a2)
{
  id result;
  uint64_t v5;

  result = *(id *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

void sub_1002F0544(uint64_t a1)
{

}

uint64_t sub_1002F058C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F05E8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F0644()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F06B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002F06CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F06DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F0794(uint64_t a1)
{
  void *v2;

  v2 = objc_autoreleasePoolPush();
  objc_msgSend(*(id *)(a1 + 32), "onQueueHandleScan:forSettings:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  objc_autoreleasePoolPop(v2);
}

void sub_1002F07DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002F080C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 48) = 0;
  return result;
}

void sub_1002F081C(std::promise<void> *a1)
{
  std::promise<void>::~promise(a1 + 6);
}

uint64_t sub_1002F0824()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F0880()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F08DC()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F091C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F09C0()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t **sub_1002F09D4(uint64_t **a1)
{
  uint64_t **v2;
  char *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t **v6;
  uint64_t **v7;
  int v8;
  _DWORD *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t **v13;
  uint64_t **v14;
  int v15;
  _DWORD *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t **v20;
  uint64_t **v21;
  int v22;
  _DWORD *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t **v27;
  uint64_t **v28;
  int v29;
  _DWORD *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t **v34;
  uint64_t **v35;
  int v36;
  _DWORD *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t **v41;
  uint64_t **v42;
  int v43;
  _DWORD *v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t **v48;
  uint64_t **v49;
  int v50;
  _DWORD *v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t **v55;
  uint64_t **v56;
  int v57;
  _DWORD *v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t **v62;
  int v63;
  _DWORD *v64;
  uint64_t *v65;
  uint64_t *v66;
  __int128 v68;
  _BYTE v69[32];
  __int128 v70;
  char v71[8];

  a1[1] = 0;
  v2 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
  v68 = xmmword_1003996E0;
  *(_OWORD *)v69 = unk_1003996F0;
  *(_OWORD *)&v69[12] = unk_1003996FC;
  v3 = (char *)operator new(0x40uLL);
  *((_DWORD *)v3 + 8) = 0;
  *((_QWORD *)v3 + 5) = 0;
  v4 = v3 + 40;
  *((_QWORD *)v3 + 6) = 0;
  *((_QWORD *)v3 + 7) = 0;
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *((_QWORD *)v3 + 2) = v2;
  *a1 = (uint64_t *)v3;
  a1[1] = (uint64_t *)v3;
  sub_1000E05F4((uint64_t *)v3, (uint64_t *)v3);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  sub_1001A7ED4(v4, (char *)&v68, &v69[28], 0xBuLL);
  *(_QWORD *)&v68 = 0x600000001;
  DWORD2(v68) = 11;
  v5 = *v2;
  v6 = v2;
  v7 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        v7 = (uint64_t **)v5;
        v8 = *((_DWORD *)v5 + 8);
        if (v8 < 2)
          break;
        v5 = *v7;
        v6 = v7;
        if (!*v7)
          goto LABEL_8;
      }
      if (v8 == 1)
        break;
      v5 = v7[1];
      if (!v5)
      {
        v6 = v7 + 1;
        goto LABEL_8;
      }
    }
    v9 = v7;
  }
  else
  {
LABEL_8:
    v9 = operator new(0x40uLL);
    v9[8] = 1;
    *((_QWORD *)v9 + 6) = 0;
    *((_QWORD *)v9 + 7) = 0;
    *((_QWORD *)v9 + 5) = 0;
    *(_QWORD *)v9 = 0;
    *((_QWORD *)v9 + 1) = 0;
    *((_QWORD *)v9 + 2) = v7;
    *v6 = (uint64_t *)v9;
    v10 = (uint64_t *)**a1;
    v11 = (uint64_t *)v9;
    if (v10)
    {
      *a1 = v10;
      v11 = *v6;
    }
    sub_1000E05F4(a1[1], v11);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_1001A7ED4((_QWORD *)v9 + 5, (char *)&v68, (char *)&v68 + 12, 3uLL);
  v68 = xmmword_10039970C;
  *(_OWORD *)v69 = unk_10039971C;
  *(_OWORD *)&v69[16] = xmmword_10039972C;
  LODWORD(v70) = 13;
  v12 = *v2;
  v13 = v2;
  v14 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        v14 = (uint64_t **)v12;
        v15 = *((_DWORD *)v12 + 8);
        if (v15 < 3)
          break;
        v12 = *v14;
        v13 = v14;
        if (!*v14)
          goto LABEL_19;
      }
      if (v15 == 2)
        break;
      v12 = v14[1];
      if (!v12)
      {
        v13 = v14 + 1;
        goto LABEL_19;
      }
    }
    v16 = v14;
  }
  else
  {
LABEL_19:
    v16 = operator new(0x40uLL);
    v16[8] = 2;
    *((_QWORD *)v16 + 6) = 0;
    *((_QWORD *)v16 + 7) = 0;
    *((_QWORD *)v16 + 5) = 0;
    *(_QWORD *)v16 = 0;
    *((_QWORD *)v16 + 1) = 0;
    *((_QWORD *)v16 + 2) = v14;
    *v13 = (uint64_t *)v16;
    v17 = (uint64_t *)**a1;
    v18 = (uint64_t *)v16;
    if (v17)
    {
      *a1 = v17;
      v18 = *v13;
    }
    sub_1000E05F4(a1[1], v18);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_1001A7ED4((_QWORD *)v16 + 5, (char *)&v68, (char *)&v70 + 4, 0xDuLL);
  v68 = xmmword_100399740;
  *(_OWORD *)v69 = unk_100399750;
  *(_DWORD *)&v69[16] = 165;
  v19 = *v2;
  v20 = v2;
  v21 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        v21 = (uint64_t **)v19;
        v22 = *((_DWORD *)v19 + 8);
        if (v22 < 4)
          break;
        v19 = *v21;
        v20 = v21;
        if (!*v21)
          goto LABEL_30;
      }
      if (v22 == 3)
        break;
      v19 = v21[1];
      if (!v19)
      {
        v20 = v21 + 1;
        goto LABEL_30;
      }
    }
    v23 = v21;
  }
  else
  {
LABEL_30:
    v23 = operator new(0x40uLL);
    v23[8] = 3;
    *((_QWORD *)v23 + 6) = 0;
    *((_QWORD *)v23 + 7) = 0;
    *((_QWORD *)v23 + 5) = 0;
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    *((_QWORD *)v23 + 2) = v21;
    *v20 = (uint64_t *)v23;
    v24 = (uint64_t *)**a1;
    v25 = (uint64_t *)v23;
    if (v24)
    {
      *a1 = v24;
      v25 = *v20;
    }
    sub_1000E05F4(a1[1], v25);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_1001A7ED4((_QWORD *)v23 + 5, (char *)&v68, &v69[20], 9uLL);
  v68 = xmmword_100399764;
  *(_OWORD *)v69 = unk_100399774;
  *(_OWORD *)&v69[16] = xmmword_100399784;
  v70 = unk_100399794;
  v26 = *v2;
  v27 = v2;
  v28 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        v28 = (uint64_t **)v26;
        v29 = *((_DWORD *)v26 + 8);
        if (v29 < 5)
          break;
        v26 = *v28;
        v27 = v28;
        if (!*v28)
          goto LABEL_41;
      }
      if (v29 == 4)
        break;
      v26 = v28[1];
      if (!v26)
      {
        v27 = v28 + 1;
        goto LABEL_41;
      }
    }
    v30 = v28;
  }
  else
  {
LABEL_41:
    v30 = operator new(0x40uLL);
    v30[8] = 4;
    *((_QWORD *)v30 + 6) = 0;
    *((_QWORD *)v30 + 7) = 0;
    *((_QWORD *)v30 + 5) = 0;
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    *((_QWORD *)v30 + 2) = v28;
    *v27 = (uint64_t *)v30;
    v31 = (uint64_t *)**a1;
    v32 = (uint64_t *)v30;
    if (v31)
    {
      *a1 = v31;
      v32 = *v27;
    }
    sub_1000E05F4(a1[1], v32);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_1001A7ED4((_QWORD *)v30 + 5, (char *)&v68, v71, 0x10uLL);
  v68 = xmmword_1003996C0;
  v33 = *v2;
  v34 = v2;
  v35 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        v35 = (uint64_t **)v33;
        v36 = *((_DWORD *)v33 + 8);
        if (v36 < 6)
          break;
        v33 = *v35;
        v34 = v35;
        if (!*v35)
          goto LABEL_52;
      }
      if (v36 == 5)
        break;
      v33 = v35[1];
      if (!v33)
      {
        v34 = v35 + 1;
        goto LABEL_52;
      }
    }
    v37 = v35;
  }
  else
  {
LABEL_52:
    v37 = operator new(0x40uLL);
    v37[8] = 5;
    *((_QWORD *)v37 + 6) = 0;
    *((_QWORD *)v37 + 7) = 0;
    *((_QWORD *)v37 + 5) = 0;
    *(_QWORD *)v37 = 0;
    *((_QWORD *)v37 + 1) = 0;
    *((_QWORD *)v37 + 2) = v35;
    *v34 = (uint64_t *)v37;
    v38 = (uint64_t *)**a1;
    v39 = (uint64_t *)v37;
    if (v38)
    {
      *a1 = v38;
      v39 = *v34;
    }
    sub_1000E05F4(a1[1], v39);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_1001A7ED4((_QWORD *)v37 + 5, (char *)&v68, v69, 4uLL);
  v68 = xmmword_1003997A4;
  *(_DWORD *)v69 = 165;
  v40 = *v2;
  v41 = v2;
  v42 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        v42 = (uint64_t **)v40;
        v43 = *((_DWORD *)v40 + 8);
        if (v43 < 7)
          break;
        v40 = *v42;
        v41 = v42;
        if (!*v42)
          goto LABEL_63;
      }
      if (v43 == 6)
        break;
      v40 = v42[1];
      if (!v40)
      {
        v41 = v42 + 1;
        goto LABEL_63;
      }
    }
    v44 = v42;
  }
  else
  {
LABEL_63:
    v44 = operator new(0x40uLL);
    v44[8] = 6;
    *((_QWORD *)v44 + 6) = 0;
    *((_QWORD *)v44 + 7) = 0;
    *((_QWORD *)v44 + 5) = 0;
    *(_QWORD *)v44 = 0;
    *((_QWORD *)v44 + 1) = 0;
    *((_QWORD *)v44 + 2) = v42;
    *v41 = (uint64_t *)v44;
    v45 = (uint64_t *)**a1;
    v46 = (uint64_t *)v44;
    if (v45)
    {
      *a1 = v45;
      v46 = *v41;
    }
    sub_1000E05F4(a1[1], v46);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_1001A7ED4((_QWORD *)v44 + 5, (char *)&v68, &v69[4], 5uLL);
  v68 = xmmword_1003996D0;
  v47 = *v2;
  v48 = v2;
  v49 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        v49 = (uint64_t **)v47;
        v50 = *((_DWORD *)v47 + 8);
        if (v50 < 8)
          break;
        v47 = *v49;
        v48 = v49;
        if (!*v49)
          goto LABEL_74;
      }
      if (v50 == 7)
        break;
      v47 = v49[1];
      if (!v47)
      {
        v48 = v49 + 1;
        goto LABEL_74;
      }
    }
    v51 = v49;
  }
  else
  {
LABEL_74:
    v51 = operator new(0x40uLL);
    v51[8] = 7;
    *((_QWORD *)v51 + 6) = 0;
    *((_QWORD *)v51 + 7) = 0;
    *((_QWORD *)v51 + 5) = 0;
    *(_QWORD *)v51 = 0;
    *((_QWORD *)v51 + 1) = 0;
    *((_QWORD *)v51 + 2) = v49;
    *v48 = (uint64_t *)v51;
    v52 = (uint64_t *)**a1;
    v53 = (uint64_t *)v51;
    if (v52)
    {
      *a1 = v52;
      v53 = *v48;
    }
    sub_1000E05F4(a1[1], v53);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_1001A7ED4((_QWORD *)v51 + 5, (char *)&v68, v69, 4uLL);
  v68 = xmmword_1003997B8;
  *(_OWORD *)v69 = unk_1003997C8;
  *(_OWORD *)&v69[12] = unk_1003997D4;
  v54 = *v2;
  v55 = v2;
  v56 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        v56 = (uint64_t **)v54;
        v57 = *((_DWORD *)v54 + 8);
        if (v57 < 9)
          break;
        v54 = *v56;
        v55 = v56;
        if (!*v56)
          goto LABEL_85;
      }
      if (v57 == 8)
        break;
      v54 = v56[1];
      if (!v54)
      {
        v55 = v56 + 1;
        goto LABEL_85;
      }
    }
    v58 = v56;
  }
  else
  {
LABEL_85:
    v58 = operator new(0x40uLL);
    v58[8] = 8;
    *((_QWORD *)v58 + 6) = 0;
    *((_QWORD *)v58 + 7) = 0;
    *((_QWORD *)v58 + 5) = 0;
    *(_QWORD *)v58 = 0;
    *((_QWORD *)v58 + 1) = 0;
    *((_QWORD *)v58 + 2) = v56;
    *v55 = (uint64_t *)v58;
    v59 = (uint64_t *)**a1;
    v60 = (uint64_t *)v58;
    if (v59)
    {
      *a1 = v59;
      v60 = *v55;
    }
    sub_1000E05F4(a1[1], v60);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_1001A7ED4((_QWORD *)v58 + 5, (char *)&v68, &v69[28], 0xBuLL);
  *(_QWORD *)&v68 = 0x6400000034;
  v61 = *v2;
  v62 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        v62 = (uint64_t **)v61;
        v63 = *((_DWORD *)v61 + 8);
        if (v63 < 10)
          break;
        v61 = *v62;
        v2 = v62;
        if (!*v62)
          goto LABEL_96;
      }
      if (v63 == 9)
        break;
      v61 = v62[1];
      if (!v61)
      {
        v2 = v62 + 1;
        goto LABEL_96;
      }
    }
    v64 = v62;
  }
  else
  {
LABEL_96:
    v64 = operator new(0x40uLL);
    v64[8] = 9;
    *((_QWORD *)v64 + 6) = 0;
    *((_QWORD *)v64 + 7) = 0;
    *((_QWORD *)v64 + 5) = 0;
    *(_QWORD *)v64 = 0;
    *((_QWORD *)v64 + 1) = 0;
    *((_QWORD *)v64 + 2) = v62;
    *v2 = (uint64_t *)v64;
    v65 = (uint64_t *)**a1;
    v66 = (uint64_t *)v64;
    if (v65)
    {
      *a1 = v65;
      v66 = *v2;
    }
    sub_1000E05F4(a1[1], v66);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_1001A7ED4((_QWORD *)v64 + 5, (char *)&v68, (char *)&v68 + 8, 2uLL);
  return a1;
}

void sub_1002F11E8(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v4;
    operator delete(v4);
  }
  sub_1002EECBC(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

char *sub_1002F1238(unint64_t *a1, void *a2, char *__src, char *a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v11;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int64_t v25;
  unint64_t v26;
  char *v27;
  size_t v28;
  uint64_t v29;
  int *v30;
  _DWORD *v31;
  unint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 *v40;
  uint64_t v41;
  __int128 v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 *v49;
  _OWORD *v50;
  uint64_t v51;
  __int128 v52;
  int v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  __int128 *v60;
  uint64_t v61;
  __int128 v62;
  int v63;
  char *v64;
  size_t v65;
  int v66;
  char *v67;
  unint64_t v70;

  v6 = *a1;
  v7 = (uint64_t)a2 - *a1;
  v8 = (char *)(*a1 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
  v9 = a5 - 1;
  if (a5 < 1)
    return v8;
  v11 = __src;
  v13 = v7 >> 2;
  v15 = a1[1];
  v14 = a1[2];
  if (a5 > (uint64_t)(v14 - v15) >> 2)
  {
    v16 = a5 + ((uint64_t)(v15 - v6) >> 2);
    if (v16 >> 62)
      sub_1000D02C0();
    v17 = v14 - v6;
    if (v17 >> 1 > v16)
      v16 = v17 >> 1;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFFCLL)
      v18 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v18 = v16;
    if (v18)
    {
      if (v18 >> 62)
        sub_1000CDEB8();
      v19 = *a1 + (v7 & 0xFFFFFFFFFFFFFFFCLL);
      v20 = v18;
      v21 = operator new(4 * v18);
      v18 = v20;
      v8 = (char *)v19;
      v13 = v7 >> 2;
      v11 = __src;
    }
    else
    {
      v21 = 0;
    }
    v43 = &v21[4 * v13];
    v44 = &v43[4 * a5];
    v45 = v43;
    v46 = v11;
    if ((v9 & 0x3FFFFFFFFFFFFFFFuLL) < 7)
      goto LABEL_57;
    v45 = &v21[4 * v13];
    v46 = v11;
    if ((unint64_t)(&v21[v7 & 0xFFFFFFFFFFFFFFFCLL] - v11) < 0x20)
      goto LABEL_57;
    v47 = (v9 & 0x3FFFFFFFFFFFFFFFLL) + 1;
    v48 = 4 * (v47 & 0x7FFFFFFFFFFFFFF8);
    v45 = &v43[v48];
    v46 = &v11[v48];
    v49 = (__int128 *)(v11 + 16);
    v50 = &v21[4 * v13 + 16];
    v51 = v47 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v52 = *v49;
      *(v50 - 1) = *(v49 - 1);
      *v50 = v52;
      v49 += 2;
      v50 += 2;
      v51 -= 8;
    }
    while (v51);
    if (v47 != (v47 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_57:
      do
      {
        v53 = *(_DWORD *)v46;
        v46 += 4;
        *(_DWORD *)v45 = v53;
        v45 += 4;
      }
      while (v45 != v44);
    }
    v54 = &v21[4 * v13];
    if ((void *)v6 != a2)
    {
      v55 = v8;
      v54 = &v21[4 * v13];
      if ((unint64_t)(v7 - 4) < 0x3C)
        goto LABEL_58;
      v55 = v8;
      v54 = &v21[4 * v13];
      if ((v7 & 0xFFFFFFFFFFFFFFFCLL) + v6 - (unint64_t)&v21[v7 & 0xFFFFFFFFFFFFFFFCLL] < 0x20)
        goto LABEL_58;
      v56 = ((unint64_t)(v7 - 4) >> 2) + 1;
      v57 = 4 * (v56 & 0x7FFFFFFFFFFFFFF8);
      v55 = &v8[-v57];
      v54 = &v43[-v57];
      v58 = 4 * v13 - 16;
      v59 = &v21[v58];
      v60 = (__int128 *)(v6 + v58);
      v61 = v56 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v62 = *v60;
        *(v59 - 1) = *(v60 - 1);
        *v59 = v62;
        v59 -= 2;
        v60 -= 2;
        v61 -= 8;
      }
      while (v61);
      if (v56 != (v56 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_58:
        do
        {
          v63 = *((_DWORD *)v55 - 1);
          v55 -= 4;
          *((_DWORD *)v54 - 1) = v63;
          v54 -= 4;
        }
        while (v55 != (char *)v6);
      }
    }
    v64 = &v21[4 * v18];
    v65 = v15 - (_QWORD)v8;
    if (v65)
      memmove(&v43[4 * a5], v8, v65);
    *a1 = (unint64_t)v54;
    a1[1] = (unint64_t)&v44[v65];
    a1[2] = (unint64_t)v64;
    if (v6)
      operator delete((void *)v6);
    return v43;
  }
  v22 = v15 - (_QWORD)v8;
  v23 = (uint64_t)(v15 - (_QWORD)v8) >> 2;
  if (v23 >= a5)
  {
    v24 = &__src[4 * a5];
    v26 = a1[1];
  }
  else
  {
    v24 = &__src[4 * v23];
    v25 = a4 - v24;
    if (a4 != v24)
    {
      v70 = *a1 + (v7 & 0xFFFFFFFFFFFFFFFCLL);
      memmove((void *)a1[1], &__src[4 * v23], a4 - v24);
      v13 = v7 >> 2;
      v8 = (char *)v70;
    }
    v26 = v15 + v25;
    a1[1] = v15 + v25;
    if (v22 < 1)
      return v8;
  }
  v27 = &v8[4 * a5];
  v28 = v26 - (_QWORD)v27;
  v29 = (uint64_t)(v26 - (_QWORD)v27) >> 2;
  v30 = (int *)(v26 - 4 * a5);
  v31 = (_DWORD *)v26;
  if ((unint64_t)v30 < v15)
  {
    v32 = (v7 & 0xFFFFFFFFFFFFFFFCLL) + v28;
    v33 = (char *)(v32 + v6);
    v34 = v32 + v6 + 4;
    if (v15 > v34)
      v34 = v15;
    v35 = v34 + ~v6 - v32;
    if (v35 < 0x2C)
    {
      v31 = (_DWORD *)v26;
    }
    else
    {
      v36 = v26 - (_QWORD)v33;
      v31 = (_DWORD *)v26;
      if (v36 >= 0x20)
      {
        v37 = (v35 >> 2) + 1;
        v38 = 4 * (v37 & 0x7FFFFFFFFFFFFFF8);
        v30 = (int *)((char *)v30 + v38);
        v31 = (_DWORD *)(v26 + v38);
        v39 = (_OWORD *)(v26 + 16);
        v40 = (__int128 *)(4 * v29 + 4 * v13 + v6 + 16);
        v41 = v37 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v42 = *v40;
          *(v39 - 1) = *(v40 - 1);
          *v39 = v42;
          v39 += 2;
          v40 += 2;
          v41 -= 8;
        }
        while (v41);
        if (v37 == (v37 & 0x7FFFFFFFFFFFFFF8))
          goto LABEL_47;
      }
    }
    do
    {
      v66 = *v30++;
      *v31++ = v66;
    }
    while ((unint64_t)v30 < v15);
  }
LABEL_47:
  a1[1] = (unint64_t)v31;
  if ((char *)v26 != v27)
  {
    v67 = v8;
    memmove((void *)(v26 - 4 * v29), v8, v28);
    v8 = v67;
  }
  if (v24 != v11)
  {
    v43 = v8;
    memmove(v8, v11, v24 - v11);
    return v43;
  }
  return v8;
}

void sub_1002F15E0(int *a1@<X1>, int *a2@<X2>, int *a3@<X3>, uint64_t *a4@<X4>, int **a5@<X8>)
{
  int *v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t *v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t *v18;

  v6 = a1;
  if (a1 != a2)
  {
    while (1)
    {
      v9 = sub_1002F16F4(a3, a4, &v18, &v17, v6);
      v10 = *v9;
      if (*v9)
      {
        v11 = *(uint64_t **)(v10 + 8);
        if (v11)
          goto LABEL_10;
      }
      else
      {
        v12 = v9;
        v10 = (uint64_t)operator new(0x20uLL);
        *(_DWORD *)(v10 + 28) = *v6;
        v13 = v18;
        *(_QWORD *)v10 = 0;
        *(_QWORD *)(v10 + 8) = 0;
        *(_QWORD *)(v10 + 16) = v13;
        *v12 = v10;
        v14 = **(_QWORD ***)a3;
        v15 = (uint64_t *)v10;
        if (v14)
        {
          *(_QWORD *)a3 = v14;
          v15 = (uint64_t *)*v12;
        }
        sub_1000E05F4(*((uint64_t **)a3 + 1), v15);
        ++*((_QWORD *)a3 + 2);
        v11 = *(uint64_t **)(v10 + 8);
        if (v11)
        {
          do
          {
LABEL_10:
            a4 = v11;
            v11 = (uint64_t *)*v11;
          }
          while (v11);
          goto LABEL_3;
        }
      }
      do
      {
        a4 = *(uint64_t **)(v10 + 16);
        v16 = *a4 == v10;
        v10 = (uint64_t)a4;
      }
      while (!v16);
LABEL_3:
      if (++v6 == a2)
      {
        v6 = a2;
        break;
      }
    }
  }
  *a5 = v6;
  a5[1] = a3;
  a5[2] = (int *)a4;
}

uint64_t *sub_1002F16F4(_QWORD *a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, int *a5)
{
  uint64_t *v5;
  int v6;
  int v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  uint64_t *v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  int v24;

  v5 = a1 + 1;
  if (a1 + 1 == a2 || (v6 = *a5, v7 = *((_DWORD *)a2 + 7), *a5 < v7))
  {
    v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      v9 = (uint64_t *)*a2;
      do
      {
        v10 = v9;
        v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      v14 = a2;
      do
      {
        v10 = (uint64_t *)v14[2];
        v15 = *v10 == (_QWORD)v14;
        v14 = v10;
      }
      while (v15);
    }
    v16 = *a5;
    if (*((_DWORD *)v10 + 7) < *a5)
      goto LABEL_17;
    v18 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          v19 = (uint64_t *)v18;
          v20 = *(_DWORD *)(v18 + 28);
          if (v16 >= v20)
            break;
          v18 = *v19;
          v5 = v19;
          if (!*v19)
            goto LABEL_25;
        }
        if (v20 >= v16)
          break;
        v5 = v19 + 1;
        v18 = v19[1];
      }
      while (v18);
LABEL_25:
      *a3 = v19;
      return v5;
    }
    else
    {
      *a3 = v5;
      return a1 + 1;
    }
  }
  else if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = a2;
    return (uint64_t *)a4;
  }
  else
  {
    v11 = a2[1];
    if (v11)
    {
      v12 = (uint64_t *)a2[1];
      do
      {
        v13 = v12;
        v12 = (uint64_t *)*v12;
      }
      while (v12);
    }
    else
    {
      v21 = a2;
      do
      {
        v13 = (uint64_t *)v21[2];
        v15 = *v13 == (_QWORD)v21;
        v21 = v13;
      }
      while (!v15);
    }
    if (v13 == v5 || v6 < *((_DWORD *)v13 + 7))
    {
      if (v11)
      {
        *a3 = v13;
        return v13;
      }
      else
      {
        *a3 = a2;
        return a2 + 1;
      }
    }
    else
    {
      v22 = *v5;
      if (*v5)
      {
        do
        {
          while (1)
          {
            v23 = (uint64_t *)v22;
            v24 = *(_DWORD *)(v22 + 28);
            if (v6 >= v24)
              break;
            v22 = *v23;
            v5 = v23;
            if (!*v23)
              goto LABEL_41;
          }
          if (v24 >= v6)
            break;
          v5 = v23 + 1;
          v22 = v23[1];
        }
        while (v22);
LABEL_41:
        *a3 = v23;
        return v5;
      }
      else
      {
        *a3 = v5;
        return a1 + 1;
      }
    }
  }
}

_QWORD *sub_1002F18A4(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _DWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2 != a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = a2;
    do
    {
      v8 = v6;
      v9 = (_QWORD *)v7[1];
      if (v9)
      {
        do
        {
          v10 = v9;
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          v10 = (_QWORD *)v7[2];
          v11 = *v10 == (_QWORD)v7;
          v7 = v10;
        }
        while (!v11);
      }
      ++v6;
      v7 = v10;
    }
    while (v10 != a3);
    if (v8 >= 0x3FFFFFFFFFFFFFFFLL)
      sub_1000D02C0();
    v12 = operator new(4 * v6);
    *a1 = v12;
    a1[1] = v12;
    a1[2] = &v12[v6];
    do
    {
      *v12 = *((_DWORD *)v5 + 7);
      v13 = (_QWORD *)v5[1];
      if (v13)
      {
        do
        {
          v14 = v13;
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          v14 = (_QWORD *)v5[2];
          v11 = *v14 == (_QWORD)v5;
          v5 = v14;
        }
        while (!v11);
      }
      ++v12;
      v5 = v14;
    }
    while (v14 != a3);
    a1[1] = v12;
  }
  return a1;
}

void sub_1002F19B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F1A14(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

void sub_1002F1A44()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

id sub_1002F1A58(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  v2 = objc_msgSend(WeakRetained, "sensorPresent");

  return v2;
}

void sub_1002F1A8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F1BA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1002F1BDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 96));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_1002F1C68(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002F1C98()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F1CF4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F1D50()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F1D70(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002F1DA0()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F1DFC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F1E58()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F1E6C(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)CMMotionManager);
  v2 = (void *)qword_10041A348;
  qword_10041A348 = (uint64_t)v1;

  objc_msgSend((id)qword_10041A348, "setDeviceMotionUpdateInterval:", 0.01);
}

_QWORD *sub_1002F1EAC(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  *a1 = off_1004063D8;
  v2 = (_QWORD *)a1[8];
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = (void *)a1[6];
  a1[6] = 0;
  if (v4)
    operator delete(v4);
  v5 = (void *)a1[3];
  if (v5)
  {
    a1[4] = v5;
    operator delete(v5);
  }
  v6 = (std::__shared_weak_count *)a1[2];
  if (!v6)
    return a1;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_1002F1F5C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  sub_10001D9FC((id *)(a1 + 88));
  *(_QWORD *)a1 = off_1004063D8;
  v2 = *(_QWORD **)(a1 + 64);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = 0;
  if (v4)
    operator delete(v4);
  v5 = *(void **)(a1 + 24);
  if (v5)
  {
    *(_QWORD *)(a1 + 32) = v5;
    operator delete(v5);
  }
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  operator delete();
}

void sub_1002F2014(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1002F2014(a1, *a2);
    sub_1002F2014(a1, a2[1]);

    operator delete(a2);
  }
}

uint64_t sub_1002F205C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F20B8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F2114()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F222C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F2544(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002F2574()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F25D0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F262C()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

id sub_1002F2640(uint64_t a1, uint64_t a2)
{
  id result;

  result = *(id *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

void sub_1002F2668(uint64_t a1)
{

}

void sub_1002F2748(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F28EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F2934(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002F2964(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 96));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

id sub_1002F29F0(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  v2 = objc_msgSend(WeakRetained, "sensorPresent");

  return v2;
}

void sub_1002F2A24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F2A34(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  objc_msgSend(WeakRetained, "start");

}

void sub_1002F2A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002F2A7C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  objc_msgSend(WeakRetained, "stop");

}

void sub_1002F2AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002F2AC4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  size_t v13;
  size_t v14;
  unsigned __int8 *v15;
  void *v16;
  void *v17;
  uint64_t *v18;
  uint64_t *v19;
  unsigned __int8 v20;
  void *v21;
  void *v22;
  NSObject *v23;
  uint64_t *v24;
  uint64_t *v25;
  unsigned __int8 v26;
  uint64_t v27;
  void *v28;
  void *v29;
  _QWORD *v30;
  std::__shared_weak_count *size;
  unint64_t *v32;
  unint64_t v33;
  BOOL v34;
  BOOL v35;
  std::string v36[7];
  std::string __p;
  uint64_t (**v38)();
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[80];
  uint64_t v44;
  __int16 v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "identifier"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "UUIDString"));

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", CBAdvertisementDataManufacturerDataKey));
  v13 = (size_t)objc_msgSend(v12, "length");
  v14 = v13;
  v49 = 0;
  v50 = 0;
  v51 = 0;
  if (v13)
  {
    if ((v13 & 0x8000000000000000) != 0)
      sub_1000D02C0();
    v15 = (unsigned __int8 *)operator new(v13);
    v49 = v15;
    v51 = &v15[v14];
    bzero(v15, v14);
    v50 = &v15[v14];
  }
  else
  {
    v15 = 0;
  }
  objc_msgSend(v12, "getBytes:length:", v15, objc_msgSend(v12, "length"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "name"));
  v17 = v16;
  if (v16)
  {
    objc_msgSend(v16, "ps_STLStringOnNil:", &stru_100409048);
  }
  else
  {
    v46 = 0;
    v47 = 0;
    v48 = 0;
  }

  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  memset(v43, 0, 29);
  memset(&v43[32], 0, 48);
  v38 = off_1003F9B88;
  v44 = 0;
  v45 &= 0xF000u;
  v18 = sub_100315900();
  v19 = v18;
  v20 = atomic_load((unsigned __int8 *)v18 + 20);
  if ((v20 & 1) != 0 || *((_BYTE *)v18 + 16))
  {
    if (!*((_BYTE *)v18 + 17))
      goto LABEL_17;
LABEL_11:
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", CBAdvertisementDataServiceDataKey));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "description"));

    if (v22)
      objc_msgSend(v22, "ps_STLStringOnNil:", &stru_100409048);
    else
      memset(v36, 0, 24);
    sub_1002F3230(v49, v50);
    sub_1001A3D58((uint64_t)&v38, v36);
    sub_1001A3D88((uint64_t)&v38, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v36[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_16;
    }
    else if ((SHIBYTE(v36[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_16:

      goto LABEL_17;
    }
    operator delete(v36[0].__r_.__value_.__l.__data_);
    goto LABEL_16;
  }
  v34 = sub_1000AC110((uint64_t)v18, (_BYTE *)v18 + 9);
  *((_BYTE *)v19 + 17) = v34;
  *((_BYTE *)v19 + 16) = 1;
  atomic_store(1u, (unsigned __int8 *)v19 + 20);
  if (v34)
    goto LABEL_11;
LABEL_17:
  if (!sub_100307A5C(&v49))
  {
    v24 = sub_100315900();
    v25 = v24;
    v26 = atomic_load((unsigned __int8 *)v24 + 20);
    if ((v26 & 1) != 0 || *((_BYTE *)v24 + 16))
    {
      if (!*((_BYTE *)v24 + 17))
        goto LABEL_38;
    }
    else
    {
      v35 = sub_1000AC110((uint64_t)v24, (_BYTE *)v24 + 9);
      *((_BYTE *)v25 + 17) = v35;
      *((_BYTE *)v25 + 16) = 1;
      atomic_store(1u, (unsigned __int8 *)v25 + 20);
      if (!v35)
        goto LABEL_38;
    }
    goto LABEL_25;
  }
  if ((sub_100307BFC((uint64_t)&v38, &v49) & 1) != 0)
  {
LABEL_25:
    v27 = sub_10003C888();
    sub_100060878((uint64_t)&v38, v27);
    if (v11)
      objc_msgSend(v11, "ps_STLString");
    else
      memset(v36, 0, 24);
    sub_1001A3D50((uint64_t)&v38, v36);
    if (SHIBYTE(v36[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(v36[0].__r_.__value_.__l.__data_);
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", CBAdvertisementDataTxPowerLevelKey, v36[0].__r_.__value_.__r.__words[0], v36[0].__r_.__value_.__l.__size_, v36[0].__r_.__value_.__r.__words[2]));
    sub_1001A3DB8((uint64_t)&v38, (int)objc_msgSend(v28, "intValue"));

    sub_1001A3DC0((uint64_t)&v38, (int)objc_msgSend(v9, "intValue"));
    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", CBAdvertisementDataChannel));
    sub_1001A3DC8((uint64_t)&v38, (int)objc_msgSend(v29, "intValue"));

    sub_1003096BC((uint64_t)v36, (uint64_t)&v38);
    v30 = operator new(0x108uLL);
    v30[1] = 0;
    v30[2] = 0;
    *v30 = off_1003F0840;
    sub_1001A4778((uint64_t)(v30 + 4), (uint64_t)v36);
    *((_DWORD *)v30 + 6) = 4;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)(v30 + 3);
    __p.__r_.__value_.__l.__size_ = (std::string::size_type)v30;
    sub_10005C2A4(a1, (uint64_t)&__p);
    size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
    if (__p.__r_.__value_.__l.__size_)
    {
      v32 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
        std::__shared_weak_count::__release_weak(size);
      }
    }
    sub_1001A3BF4((uint64_t)v36);
    goto LABEL_38;
  }
  if (qword_100417ED8 == -1)
  {
    v23 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      goto LABEL_38;
    goto LABEL_21;
  }
  dispatch_once(&qword_100417ED8, &stru_100404BE0);
  v23 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
LABEL_21:
    LOWORD(v36[0].__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "failed to parse Beacon fields!", (uint8_t *)v36, 2u);
  }
LABEL_38:
  sub_1001A3BF4((uint64_t)&v38);
  if (SHIBYTE(v48) < 0)
    operator delete(v46);
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }

}

void sub_1002F2FC0(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1002F2F64);
}

void sub_1002F2FDC(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1002F2F34);
}

void sub_1002F2FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v47;

  sub_1001A3BF4((uint64_t)&a40);
  if (*(char *)(v45 - 105) < 0)
  {
    operator delete(*(void **)(v45 - 128));
    v47 = *(void **)(v45 - 104);
    if (!v47)
      goto LABEL_6;
  }
  else
  {
    v47 = *(void **)(v45 - 104);
    if (!v47)
    {
LABEL_6:

      _Unwind_Resume(a1);
    }
  }
  *(_QWORD *)(v45 - 96) = v47;
  operator delete(v47);
  goto LABEL_6;
}

uint64_t sub_1002F3230(unsigned __int8 *a1, unsigned __int8 *a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  void (__cdecl **v7)(std::ostringstream *__hidden);
  char *v8;
  const std::locale::facet *v9;
  void (__cdecl **v11)(std::ostringstream *__hidden);
  _QWORD v12[8];
  void *__p[2];
  __int128 v14;
  int v15;
  void (__cdecl **v16)(std::ostringstream *__hidden);
  std::locale v17;

  v11 = v4;
  *(_QWORD *)((char *)&v12[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v12[-1] + (_QWORD)*(v11 - 3));
  std::ios_base::init(v6, v12);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v12);
  *(_OWORD *)__p = 0u;
  v14 = 0u;
  v15 = 16;
  v7 = v11;
  v8 = (char *)&v12[-1] + (_QWORD)*(v11 - 3);
  if (*((_DWORD *)v8 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)&v12[-1] + (_QWORD)*(v11 - 3)));
    v9 = std::locale::use_facet(&v17, &std::ctype<char>::id);
    ((void (*)(const std::locale::facet *, uint64_t))v9->__vftable[2].~facet_0)(v9, 32);
    std::locale::~locale(&v17);
    v7 = v11;
  }
  *((_DWORD *)v8 + 36) = 48;
  for (*(_DWORD *)((char *)v12 + (_QWORD)*(v7 - 3)) = *(_DWORD *)((_BYTE *)v12 + (_QWORD)*(v7 - 3)) & 0xFFFFFFB5 | 8;
        a1 != a2;
        ++a1)
  {
    *(_QWORD *)((char *)&v12[2] + (_QWORD)*(v11 - 3)) = 2;
    std::ostream::operator<<(&v11, *a1);
  }
  std::stringbuf::str(v12);
  if (SBYTE7(v14) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(v12);
  return std::ios::~ios(&v16);
}

void sub_1002F3410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F0484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002F3424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  std::locale::~locale((std::locale *)(v9 - 88));
  sub_1000F0484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002F3440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F0484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002F3454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  std::ostream::~ostream(&a9, v10 + 8);
  std::ios::~ios(v9);
  _Unwind_Resume(a1);
}

void sub_1002F3474(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1002F3488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F0484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F349C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F34F8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F3554()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t sub_1002F3568(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 152));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

id sub_1002F35F4(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 152));
  v2 = objc_msgSend(WeakRetained, "sensorPresent");

  return v2;
}

void sub_1002F3628(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F3638(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  NSObject *v9;
  int v10;
  double v11;
  double v12;
  double v13;
  double v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  double v18;
  NSObject *v19;
  double v20;
  int v21;
  double v22;
  void *v23;
  void *__p[2];
  char v25;
  uint8_t buf[8];
  __int16 v27;
  double v28;
  __int16 v29;
  double v30;
  __int16 v31;
  double v32;
  __int16 v33;
  double v34;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = sub_10005F0F0();
  if ((uint64_t)(v3 - v4) >= 0)
    v5 = v3 - v4;
  else
    v5 = v4 - v3;
  v6 = (double)v5 / 1000000.0;
  *(double *)(a1 + 112) = *(double *)(a1 + 112) + v6;
  ++*(_QWORD *)(a1 + 120);
  v7 = *(double *)(a1 + 128);
  v8 = *(double *)(a1 + 136);
  if (v7 < v6)
    v7 = (double)v5 / 1000000.0;
  if (v6 < v8)
    v8 = (double)v5 / 1000000.0;
  *(double *)(a1 + 128) = v7;
  *(double *)(a1 + 136) = v8;
  if (qword_100417ED8 == -1)
  {
    v9 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
      goto LABEL_11;
    goto LABEL_10;
  }
  dispatch_once(&qword_100417ED8, &stru_100404CC8);
  v9 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
  {
LABEL_10:
    v10 = *(_DWORD *)(a1 + 96);
    v12 = *(double *)(a1 + 128);
    v11 = *(double *)(a1 + 136);
    *(_DWORD *)buf = 67110144;
    v13 = *(double *)(a1 + 112);
    v14 = (double)*(unint64_t *)(a1 + 120);
    *(_DWORD *)&buf[4] = v10;
    v27 = 2048;
    v28 = v11;
    v29 = 2048;
    v30 = v12;
    v31 = 2048;
    v32 = v13 / v14;
    v33 = 2048;
    v34 = (double)v5 / 1000000.0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Sensor %d time stats - minOffset: %f maxOffset: %f avgOffset: %f currentOffset: %f", buf, 0x30u);
  }
LABEL_11:
  if ((unint64_t)v5 < 0x3B9ACA01)
    return;
  if (qword_100417ED8 == -1)
  {
    v15 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      goto LABEL_15;
    goto LABEL_14;
  }
  dispatch_once(&qword_100417ED8, &stru_100404CC8);
  v15 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
LABEL_14:
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Sensor time offsets are too high, these events are going to drop and PDR will suffer", buf, 2u);
  }
LABEL_15:
  if ((unint64_t)v5 < 0xDF8475801)
    return;
  if (qword_100417ED8 == -1)
  {
    v16 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      goto LABEL_19;
    goto LABEL_18;
  }
  dispatch_once(&qword_100417ED8, &stru_100404CC8);
  v16 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
LABEL_18:
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Sensor time offsets are exceedingly high, this may indicate a systemic issue.  If this persists we will crash", buf, 2u);
  }
LABEL_19:
  v17 = *(_QWORD *)(a1 + 144) + 1;
  *(_QWORD *)(a1 + 144) = v17;
  v18 = (double)(unint64_t)v17;
  if (qword_100417ED8 != -1)
  {
    v22 = (double)*(unint64_t *)(a1 + 120);
    dispatch_once(&qword_100417ED8, &stru_100404CC8);
    v19 = qword_100417EE0;
    v20 = v18 / v22;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      goto LABEL_22;
    goto LABEL_21;
  }
  v19 = qword_100417EE0;
  v20 = v18 / (double)*(unint64_t *)(a1 + 120);
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
LABEL_21:
    v21 = *(_DWORD *)(a1 + 96);
    *(_DWORD *)buf = 67109632;
    *(_DWORD *)&buf[4] = v21;
    v27 = 2048;
    v28 = (double)v5 / 1000000.0;
    v29 = 2048;
    v30 = v20;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Failed time sanity check, sensor %d, time offset %f ms, failure rate %f", buf, 0x1Cu);
  }
LABEL_22:
  if (*(_QWORD *)(a1 + 120) >= 0x1F4uLL && v20 >= 0.1)
  {
    sub_1000D5048(__p, "");
    sub_100263E2C("We are consistently seeing a large difference between motion and system timestamps, which violates our assumptions about time and would cause our system to break", (std::string *)buf);
    sub_100174738((uint64_t)__p, (uint64_t)buf, 1);
    if (SBYTE3(v30) < 0)
      operator delete(*(void **)buf);
    if (v25 < 0)
      operator delete(__p[0]);
    sub_1000F2AE4((uint64_t)&v23);
  }
}

void sub_1002F3A10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F3A54(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  _BYTE v9[96];
  int v10;
  char *v11;
  std::__shared_weak_count *v12;

  sub_10004F494(v9, *(unsigned int *)(a1 + 96), a2);
  v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_1003F0840;
  sub_10004F148((uint64_t)(v4 + 4), (uint64_t)v9);
  *((_DWORD *)v4 + 32) = v10;
  *((_DWORD *)v4 + 6) = 8;
  v11 = (char *)(v4 + 3);
  v12 = (std::__shared_weak_count *)v4;
  sub_10005C2A4(a1, (uint64_t)&v11);
  v5 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  nullsub_8(v9);
  v8 = *(_QWORD *)(a1 + 104) + 1;
  *(_QWORD *)(a1 + 104) = v8;
  if (__ROR8__(0x8F5C28F5C28F5C29 * v8, 2) <= 0x28F5C28F5C28F5CuLL)
    sub_1002F3638(a1, a2);
}

void sub_1002F3B78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_1000FEAD8(v2 - 48);
  nullsub_8(va);
  _Unwind_Resume(a1);
}

void sub_1002F3B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  void *v12;

  std::__shared_weak_count::~__shared_weak_count(v10);
  operator delete(v12);
  nullsub_8(&a10);
  _Unwind_Resume(a1);
}

void sub_1002F3BB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_8(va);
  _Unwind_Resume(a1);
}

void sub_1002F3BC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002F3BF8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F3C54()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F3CB0()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F3CC4()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F3DE8()
{
  void *v0;

  operator delete();
}

void sub_1002F3E14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1002F3E24(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_alloc_init((Class)CLLocationManager);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v2;

  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "setDelegate:");
}

id sub_1002F3E64(uint64_t a1, uint64_t a2)
{
  id result;

  result = *(id *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

void sub_1002F3E8C(uint64_t a1)
{

}

void sub_1002F3F10(uint64_t a1)
{
  _BYTE *v2;
  char v3;
  id v4;
  id v5;
  id v6;
  id v7;

  if (+[CLLocationManager authorizationStatus](CLLocationManager, "authorizationStatus") != kCLAuthorizationStatusAuthorizedAlways)
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "locationManager"));
    objc_msgSend(v4, "requestWhenInUseAuthorization");

  }
  v2 = *(_BYTE **)(a1 + 32);
  if (!v2[16])
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "locationManager"));
    v3 = objc_opt_respondsToSelector(v5, "setAllowsBackgroundLocationUpdates:");

    v2 = *(_BYTE **)(a1 + 32);
    if ((v3 & 1) != 0)
    {
      v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "locationManager"));
      objc_msgSend(v6, "setAllowsBackgroundLocationUpdates:", 1);

      v2 = *(_BYTE **)(a1 + 32);
    }
  }
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "locationManager"));
  objc_msgSend(v7, "startUpdatingLocation");

}

void sub_1002F3FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1002F3FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1002F3FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1002F400C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1002F4078(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "locationManager"));
  objc_msgSend(v1, "stopUpdatingLocation");

}

void sub_1002F40B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1002F413C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 96));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_1002F41C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 96));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  operator delete();
}

id sub_1002F4264(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  v2 = objc_msgSend(WeakRetained, "sensorPresent");

  return v2;
}

void sub_1002F4298(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F42A8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  objc_msgSend(WeakRetained, "start");

}

void sub_1002F42DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002F42F0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  objc_msgSend(WeakRetained, "stop");

}

void sub_1002F4324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1002F4338()
{
  return 7;
}

void sub_1002F4340(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  _QWORD *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::string __p[8];
  char *v19;
  std::__shared_weak_count *v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t (**v34)();
  int v35;
  char v36;
  __int16 v37;
  char v38;

  v3 = a2;
  v21 = off_1003F9B48;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v25[1] = 0;
  v25[2] = 0;
  v25[0] = off_1003F9A88;
  v26 = 0;
  v34 = off_1003F9B28;
  v35 = 0;
  v36 = 0;
  v38 = 0;
  v37 = 0;
  objc_msgSend(v3, "horizontalAccuracy");
  sub_1000CBBC8((uint64_t)&v21, v4);
  objc_msgSend(v3, "altitude");
  sub_1000CBBB4((uint64_t)&v21, v5);
  objc_msgSend(v3, "course");
  sub_1000CBBDC((uint64_t)&v21, v6);
  objc_msgSend(v3, "speed");
  sub_1000CBBF0((uint64_t)&v21, v7);
  objc_msgSend(v3, "coordinate");
  sub_1000504A8((uint64_t)v25, v8);
  objc_msgSend(v3, "coordinate");
  sub_1000504A0((uint64_t)v25, v9);
  v37 |= 8u;
  v10 = sub_10003C888();
  sub_100060878((uint64_t)&v21, v10);
  sub_100063BA8((uint64_t)&v21, v22);
  std::to_string(__p, (int)objc_msgSend(v3, "type"));
  sub_1000CBB84((uint64_t)&v21, __p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p[0].__r_.__value_.__l.__data_);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "timestamp"));
  objc_msgSend(v11, "timeIntervalSince1970");
  v13 = v12;

  sub_100060870((uint64_t)&v21, (uint64_t)(v13 * 1000000000.0));
  sub_1003094A8((uint64_t)__p, (uint64_t)&v21);
  v14 = operator new(0x108uLL);
  v14[1] = 0;
  v14[2] = 0;
  *v14 = off_1003F0840;
  sub_1001A3BF0(v14 + 4, __p);
  *((_DWORD *)v14 + 6) = 7;
  v19 = (char *)(v14 + 3);
  v20 = (std::__shared_weak_count *)v14;
  sub_10005C2A4(a1, (uint64_t)&v19);
  v15 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  sub_10000CF0C((uint64_t)__p);
  sub_10000CF0C((uint64_t)&v21);

}

void sub_1002F4568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,char a36)
{
  void *v36;

  sub_1000FEAD8((uint64_t)&a34);
  sub_10000CF0C((uint64_t)&a9);
  sub_10000CF0C((uint64_t)&a36);

  _Unwind_Resume(a1);
}

void sub_1002F45AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  void *v36;

  sub_10000CF0C((uint64_t)&a36);

  _Unwind_Resume(a1);
}

void sub_1002F45C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  void *v36;
  void *v37;

  sub_10000CF0C((uint64_t)&a36);
  _Unwind_Resume(a1);
}

void sub_1002F45E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  void *v36;

  sub_10000CF0C((uint64_t)&a36);

  _Unwind_Resume(a1);
}

void sub_1002F45F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  void *v39;

  if (a14 < 0)
  {
    operator delete(__p);
    sub_10000CF0C((uint64_t)&a39);

    _Unwind_Resume(a1);
  }
  sub_10000CF0C((uint64_t)&a39);

  _Unwind_Resume(a1);
}

uint64_t sub_1002F4680()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F46DC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F4738()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F4778(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1002F4788(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 96));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_1002F4814(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  id v10;
  int v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = v5;
  v8 = v6;
  if (v7)
  {
    sub_1002F4A80(*(_QWORD *)(a1 + 32) + 32, v7);
  }
  else
  {
    if (qword_100417ED8 != -1)
      dispatch_once(&qword_100417ED8, &stru_100404E10);
    v9 = (id)qword_100417EE0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "description")));
      v11 = 136315138;
      v12 = objc_msgSend(v10, "UTF8String");
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to get data from altimeter: %s", (uint8_t *)&v11, 0xCu);

    }
  }

}

void sub_1002F4950(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1002F4980(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002F49A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 96));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  operator delete();
}

id sub_1002F4A3C(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  v2 = objc_msgSend(WeakRetained, "sensorPresent");

  return v2;
}

void sub_1002F4A70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F4A80(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  double v9;
  void *v10;
  double v11;
  _QWORD *v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  _BYTE v16[56];
  char *v17;
  std::__shared_weak_count *v18;
  uint64_t (**v19)();
  __int128 v20;
  _BYTE v21[25];

  v3 = a2;
  objc_msgSend(v3, "timestamp");
  v5 = sub_10004F1AC(v4);
  v19 = off_1003F9988;
  v20 = 0u;
  memset(v21, 0, sizeof(v21));
  objc_msgSend(v3, "timestamp");
  sub_1000504A8((uint64_t)&v19, v6);
  v7 = sub_10003C888();
  sub_100060870((uint64_t)&v19, v7);
  sub_1001A1034((uint64_t)&v19, v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "relativeAltitude"));
  objc_msgSend(v8, "doubleValue");
  sub_100050498((uint64_t)&v19, v9);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "pressure"));
  objc_msgSend(v10, "doubleValue");
  sub_100071548((uint64_t)&v19, v11);

  sub_100309820((uint64_t)v16, (uint64_t)&v19);
  v12 = operator new(0x108uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = off_1003F0840;
  sub_1001A1538((uint64_t)(v12 + 4), (uint64_t)v16);
  *((_DWORD *)v12 + 6) = 1;
  v17 = (char *)(v12 + 3);
  v18 = (std::__shared_weak_count *)v12;
  sub_10005C2A4(a1, (uint64_t)&v17);
  v13 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  nullsub_109(v16);
  nullsub_109(&v19);

}

void sub_1002F4BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18)
{
  void *v18;

  sub_1000FEAD8((uint64_t)&a16);
  nullsub_109(&a9);
  nullsub_109(&a18);

  _Unwind_Resume(a1);
}

void sub_1002F4C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  va_list va;

  va_start(va, a10);
  nullsub_109(va);

  _Unwind_Resume(a1);
}

void sub_1002F4C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  va_list va;

  va_start(va, a10);

  nullsub_109(va);
  _Unwind_Resume(a1);
}

void sub_1002F4C5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F4C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  va_list va;

  va_start(va, a10);
  nullsub_109(va);

  _Unwind_Resume(a1);
}

void sub_1002F4C84(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

void sub_1002F4CB4(uint64_t a1, _QWORD *a2, _QWORD *a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  std::__shared_weak_count *v12;
  char *v13;
  unint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;

  v6 = a2;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(char **)a1;
  if (__sz > (v8 - *(_QWORD *)a1) >> 4)
  {
    if (v9)
    {
      v10 = *(char **)(a1 + 8);
      v11 = *(char **)a1;
      if (v10 != v9)
      {
        do
        {
          v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 1);
          if (v12)
            std::__shared_weak_count::__release_weak(v12);
          v10 -= 16;
        }
        while (v10 != v9);
        v11 = *(char **)a1;
      }
      *(_QWORD *)(a1 + 8) = v9;
      operator delete(v11);
      v8 = 0;
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
    }
    if (__sz >> 60)
      goto LABEL_56;
    v27 = v8 >> 3;
    if (v8 >> 3 <= __sz)
      v27 = __sz;
    v28 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0;
    v29 = 0xFFFFFFFFFFFFFFFLL;
    if (!v28)
      v29 = v27;
    if (v29 >> 60)
LABEL_56:
      sub_1000D02C0();
    v30 = 2 * v29;
    v31 = operator new(16 * v29);
    *(_QWORD *)a1 = v31;
    *(_QWORD *)(a1 + 8) = v31;
    *(_QWORD *)(a1 + 16) = &v31[v30];
    while (v6 != a3)
    {
      v32 = v6[1];
      *v31 = *v6;
      v31[1] = v32;
      if (v32)
      {
        v33 = (unint64_t *)(v32 + 16);
        do
          v34 = __ldxr(v33);
        while (__stxr(v34 + 1, v33));
      }
      v6 += 2;
      v31 += 2;
    }
    *(_QWORD *)(a1 + 8) = v31;
    return;
  }
  v13 = *(char **)(a1 + 8);
  v14 = (v13 - v9) >> 4;
  if (v14 < __sz)
  {
    v15 = &a2[2 * v14];
    if (v13 == v9)
    {
      v16 = *(char **)a1;
      if (v15 == a3)
      {
LABEL_49:
        *(_QWORD *)(a1 + 8) = v16;
        return;
      }
    }
    else
    {
      do
      {
        v18 = *v6;
        v17 = v6[1];
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 16);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        v21 = (std::__shared_weak_count *)*((_QWORD *)v9 + 1);
        *(_QWORD *)v9 = v18;
        *((_QWORD *)v9 + 1) = v17;
        if (v21)
          std::__shared_weak_count::__release_weak(v21);
        v6 += 2;
        v9 += 16;
      }
      while (v6 != v15);
      v9 = *(char **)(a1 + 8);
      v16 = v9;
      if (v15 == a3)
        goto LABEL_49;
    }
    v16 = v9;
    do
    {
      v35 = v15[1];
      *(_QWORD *)v16 = *v15;
      *((_QWORD *)v16 + 1) = v35;
      if (v35)
      {
        v36 = (unint64_t *)(v35 + 16);
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
      }
      v15 += 2;
      v16 += 16;
    }
    while (v15 != a3);
    goto LABEL_49;
  }
  if (a2 != a3)
  {
    do
    {
      v23 = *v6;
      v22 = v6[1];
      if (v22)
      {
        v24 = (unint64_t *)(v22 + 16);
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
      }
      v26 = (std::__shared_weak_count *)*((_QWORD *)v9 + 1);
      *(_QWORD *)v9 = v23;
      *((_QWORD *)v9 + 1) = v22;
      if (v26)
        std::__shared_weak_count::__release_weak(v26);
      v6 += 2;
      v9 += 16;
    }
    while (v6 != a3);
    v13 = *(char **)(a1 + 8);
  }
  while (v13 != v9)
  {
    v38 = (std::__shared_weak_count *)*((_QWORD *)v13 - 1);
    if (v38)
      std::__shared_weak_count::__release_weak(v38);
    v13 -= 16;
  }
  *(_QWORD *)(a1 + 8) = v9;
}

uint64_t sub_1002F4F38()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F4F94()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F4FF0()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F5098(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F51B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002F51C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F51D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F51E4(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  id v12;
  objc_super v13;
  _QWORD v14[5];
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  __int16 v21;

  v3 = a2;
  objc_msgSend(v3, "magneticField");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(v3, "timestamp");
  v14[0] = off_1003F98E8;
  v20 = 0;
  v15 = 0;
  v17 = 0;
  v18 = 0;
  v16 = 0;
  v19 = 0;
  v21 = 0;
  v14[1] = v5;
  v14[2] = v7;
  v14[3] = v9;
  v14[4] = sub_10004F1AC(v10);
  objc_msgSend(v3, "timestamp");
  sub_10004F1D0((uint64_t)v14, v11);
  v13.receiver = *(id *)(a1 + 32);
  v13.super_class = (Class)IOSMagnetometer;
  v12 = objc_msgSendSuper2(&v13, "sensorBridge");
  sub_1002F3A54((uint64_t)v12, (uint64_t)v14);
  nullsub_8(v14);

}

void sub_1002F52B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  va_list va;

  va_start(va, a3);
  nullsub_8(va);

  _Unwind_Resume(a1);
}

void sub_1002F52D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F532C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1002F5348()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F53A4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F5400()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F541C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

void sub_1002F544C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100404E88;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002F545C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100404E88;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_1002F548C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, int *a5, int *a6, uint64_t a7, uint64_t *a8, uint64_t a9, int *a10, float *a11, int *a12, __int16 *a13, uint64_t *a14, char *a15)
{
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  void *__p[2];
  uint64_t v23;
  char v24[8];
  __int128 v25;
  uint64_t v26;

  v17 = *a3;
  v18 = *a4;
  v19 = *a5;
  v20 = *a6;
  v24[0] = 0;
  if (*(_BYTE *)a7)
  {
    if (*(char *)(a7 + 31) < 0)
    {
      sub_10006CED8(&v25, *(void **)(a7 + 8), *(_QWORD *)(a7 + 16));
    }
    else
    {
      v25 = *(_OWORD *)(a7 + 8);
      v26 = *(_QWORD *)(a7 + 24);
    }
    v24[0] = 1;
  }
  v21 = *a8;
  *(_OWORD *)__p = *(_OWORD *)a9;
  v23 = *(_QWORD *)(a9 + 16);
  *(_QWORD *)(a9 + 8) = 0;
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)a9 = 0;
  sub_1000562EC(a2, v17, v18, v19, v20, (uint64_t)v24, v21, (uint64_t)__p, *a11, *a10, *a12, *a13, *a14, *a15);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v24[0])
  {
    if (SHIBYTE(v26) < 0)
      operator delete((void *)v25);
  }
}

void sub_1002F55E4(std::logic_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  const void *v9;
  size_t v10;
  void *v11;
  std::logic_error v12;
  uint64_t (**v13)();
  uint64_t v14;
  __int128 v15;
  int v16;
  std::logic_error v17;
  _QWORD v18[2];
  __int128 v19;
  int v20;
  uint64_t (**v21)();

  std::logic_error::logic_error(&v12, a1);
  v14 = 0;
  v15 = 0uLL;
  v16 = -1;
  v12.__vftable = (std::logic_error_vtbl *)off_100404FF0;
  v13 = off_100405018;
  v21 = (uint64_t (**)())&off_1003EDEA0;
  std::logic_error::logic_error(&v17, &v12);
  v18[0] = &off_1003EDD90;
  v18[1] = v14;
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14);
  v19 = v15;
  v20 = v16;
  v17.__vftable = (std::logic_error_vtbl *)off_100404F50;
  v18[0] = off_100404F88;
  v21 = &off_100404FC0;
  sub_1000CE34C((uint64_t)v18, (uint64_t)&v13);
  *(_QWORD *)&v19 = a2;
  *((_QWORD *)&v19 + 1) = a3;
  v20 = a4;
  v9 = *(const void **)a5;
  v10 = *(_QWORD *)(a5 + 8) - *(_QWORD *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_1000D02C0();
    v11 = operator new(v10);
    memcpy(v11, v9, v10);
  }
  sub_1002F5A30();
}

void sub_1002F5844(void *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  sub_1000CDD68(a1);
}

void sub_1002F5858(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::out_of_range a20)
{
  std::out_of_range::~out_of_range(&a20);
  sub_1000CDD68(a1);
}

void sub_1002F5870(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::out_of_range a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;

  a21 = v22 + 16;
  if (a22)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a22 + 32))(a22))
    {
      a22 = 0;
      std::out_of_range::~out_of_range(&a20);
      sub_1000CDD68(a1);
    }
  }
  std::out_of_range::~out_of_range(&a20);
  sub_1000CDD68(a1);
}

void sub_1002F58BC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (!__p)
    sub_1000CDD68(a1);
  operator delete(__p);
  sub_1000CDD68(a1);
}

void sub_1002F58E0(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

uint64_t sub_1002F5930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(a1 + 56) = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = off_100404F50;
  *(_QWORD *)(a1 + 16) = off_100404F88;
  *(_QWORD *)(a1 + 56) = &off_100404FC0;
  return a1;
}

void sub_1002F59CC(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_1002F59E0(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_1002F5A30()
{
  operator new();
}

void sub_1002F5C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1000EFE2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002F5C6C(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_1002F5C88(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1002F5C9C(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_1002F5CEC(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_1002F5D50()
{
  operator new();
}

void sub_1002F5E2C()
{
  std::out_of_range *v0;

  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_1002F5E68(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002F5930((uint64_t)exception, a1);
}

void sub_1002F5EA4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002F5EB8(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_1002F5F08(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

void sub_1002F5F6C()
{
  sub_1002F5D50();
}

void sub_1002F5F7C(_QWORD *a1)
{
  uint64_t v1;
  void *exception;

  v1 = (uint64_t)a1 + *(_QWORD *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002F5930((uint64_t)exception, v1);
}

void sub_1002F5FC0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002F5FD4(_QWORD *a1)
{
  std::out_of_range *v1;
  const char *imp;

  v1 = (std::out_of_range *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    v1[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(v1);
}

void sub_1002F602C(_QWORD *a1)
{
  std::out_of_range *v1;
  const char *imp;

  v1 = (std::out_of_range *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(v1);
  operator delete();
}

void sub_1002F6098(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_1002F60FC(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_1002F614C(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

uint64_t sub_1002F61B0(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 8));
  return a1;
}

uint64_t sub_1002F61D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 == v2)
  {
    v4 = *(void **)a1;
    if (*(_QWORD *)a1)
LABEL_3:
      operator delete(v4);
  }
  else
  {
    do
    {
      if (*(_BYTE *)(v3 - 48))
        *(_BYTE *)(v3 - 48) = 0;
      v3 -= 88;
    }
    while (v3 != v2);
    *(_QWORD *)(a1 + 16) = v2;
    v4 = *(void **)a1;
    if (*(_QWORD *)a1)
      goto LABEL_3;
  }
  return a1;
}

uint64_t sub_1002F623C(void **a1, int *a2, int *a3, int *a4, int *a5, char *a6, char *a7, int *a8, double *a9, uint64_t *a10)
{
  uint64_t v11;
  unint64_t v12;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  _DWORD *v24;
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  _QWORD *v33;
  int v34;
  char *v35;
  int v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char v45[4];
  int v46;
  int v47;
  __int128 v48;
  int v49;

  v11 = 0x2E8BA2E8BA2E8BA3 * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v12 = v11 + 1;
  if ((unint64_t)(v11 + 1) > 0x2E8BA2E8BA2E8BALL)
    sub_1000D02C0();
  if (0x5D1745D1745D1746 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v12)
    v12 = 0x5D1745D1745D1746 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3)) >= 0x1745D1745D1745DLL)
    v20 = 0x2E8BA2E8BA2E8BALL;
  else
    v20 = v12;
  if (v20)
  {
    if (v20 > 0x2E8BA2E8BA2E8BALL)
      sub_1000CDEB8();
    v21 = (char *)operator new(88 * v20);
  }
  else
  {
    v21 = 0;
  }
  v22 = (uint64_t)&v21[88 * v11];
  v42 = v22;
  v43 = v22;
  v44 = &v21[88 * v20];
  v25 = *a2;
  v24 = a2 + 2;
  v23 = v25;
  v26 = v25 >> 31;
  if (v25 >> 31 == v25)
  {
    *(_QWORD *)&v48 = *(_QWORD *)v24;
    v26 = v23;
  }
  else
  {
    v48 = *(_OWORD *)v24;
    v49 = v24[4];
  }
  v47 = v26 ^ v23;
  v46 = *a4;
  v45[0] = 1;
  sub_100054B44(v22, &v47, (uint64_t)v45, *a5, *a6, *a7, *a8, *a10, (double)*a3, *a9);
  v27 = v42;
  v29 = (char *)*a1;
  v28 = (char *)a1[1];
  if (v28 == *a1)
  {
    v40 = (char *)a1[1];
  }
  else
  {
    v30 = 0;
    do
    {
      v33 = (_QWORD *)(v42 + v30 - 80);
      v34 = *(_DWORD *)&v28[v30 - 88];
      v35 = &v28[v30 - 80];
      if (v34 == v34 >> 31)
      {
        *v33 = *(_QWORD *)v35;
        v36 = v34;
      }
      else
      {
        v37 = *(_OWORD *)v35;
        *(_DWORD *)(v42 + v30 - 64) = *(_DWORD *)&v28[v30 - 64];
        *(_OWORD *)v33 = v37;
        v36 = *(_DWORD *)&v28[v30 - 88];
        v34 = v36 >> 31;
      }
      *(_DWORD *)(v42 + v30 - 88) = v36 ^ v34;
      v38 = v42 + v30;
      v39 = &v28[v30];
      *(_QWORD *)(v38 - 56) = *(_QWORD *)&v28[v30 - 56];
      *(_BYTE *)(v38 - 48) = 0;
      if (v28[v30 - 48])
      {
        *(_DWORD *)(v38 - 44) = *((_DWORD *)v39 - 11);
        *(_BYTE *)(v38 - 48) = 1;
      }
      v31 = *(_OWORD *)(v39 - 40);
      v32 = *(_OWORD *)(v39 - 24);
      *(_DWORD *)(v38 - 8) = *((_DWORD *)v39 - 2);
      *(_OWORD *)(v38 - 24) = v32;
      *(_OWORD *)(v38 - 40) = v31;
      v30 -= 88;
    }
    while (&v28[v30] != v29);
    v40 = (char *)*a1;
    v28 = (char *)a1[1];
    v27 = v42 + v30;
  }
  *a1 = (void *)v27;
  a1[1] = (void *)(v43 + 88);
  a1[2] = v44;
  while (v28 != v40)
  {
    if (*(v28 - 48))
      *(v28 - 48) = 0;
    v28 -= 88;
  }
  if (v40)
    operator delete(v40);
  return v43 + 88;
}

void sub_1002F650C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1002F61D8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F6520()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F657C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F65D8()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F6618(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F682C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002F6E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35)
{
  sub_1000FEAD8((uint64_t)&a14);
  sub_1002F6F84((uint64_t)&a16);
  sub_1002F6FF4(&a35);

  _Unwind_Resume(a1);
}

uint64_t sub_1002F6F84(uint64_t a1)
{
  void (***v2)(_QWORD);
  void (***v3)(_QWORD);
  void *v4;
  void (***v5)(_QWORD);
  void (***v6)(_QWORD);
  void (**v7)(_QWORD);
  BOOL v8;

  v2 = *(void (****)(_QWORD))(a1 + 8);
  if (v2)
  {
    v3 = *(void (****)(_QWORD))(a1 + 16);
    v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      v5 = v3 - 11;
      v6 = v3 - 11;
      do
      {
        v7 = *v6;
        v6 -= 11;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  return a1;
}

void **sub_1002F6FF4(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  char *v5;
  char *v6;
  void (**v7)(char *);
  BOOL v8;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      v5 = v3 - 88;
      v6 = v3 - 88;
      do
      {
        v7 = *(void (***)(char *))v6;
        v6 -= 88;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_1002F729C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F7384(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002F7398(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002F73C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 96));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

id sub_1002F7454(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  v2 = objc_msgSend(WeakRetained, "sensorPresent");

  return v2;
}

void sub_1002F7488(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002F7498(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  objc_msgSend(WeakRetained, "start");

}

void sub_1002F74CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002F74E0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  objc_msgSend(WeakRetained, "stop");

}

void sub_1002F7514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1002F7528(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t i;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  void (**v15)(char *);
  BOOL v16;
  uint64_t v18;
  __int128 v19;

  v3 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x2E8BA2E8BA2E8BALL)
    sub_1000D02C0();
  if (0x5D1745D1745D1746 * ((uint64_t)(a1[2] - *a1) >> 3) > v4)
    v4 = 0x5D1745D1745D1746 * ((uint64_t)(a1[2] - *a1) >> 3);
  if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a1[2] - *a1) >> 3)) >= 0x1745D1745D1745DLL)
    v6 = 0x2E8BA2E8BA2E8BALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x2E8BA2E8BA2E8BALL)
      sub_1000CDEB8();
    v7 = (char *)operator new(88 * v6);
  }
  else
  {
    v7 = 0;
  }
  v18 = (uint64_t)&v7[88 * v3];
  *((_QWORD *)&v19 + 1) = &v7[88 * v6];
  sub_100130DA0(v18, a2);
  v8 = 0;
  v10 = (char *)*a1;
  for (i = a1[1]; (char *)(i + v8) != v10; sub_100130DA0(v8 + v18, v8 + i))
    v8 -= 88;
  v12 = (char *)*a1;
  v11 = (char *)a1[1];
  *a1 = v18 + v8;
  *(_QWORD *)&v19 = v18 + 88;
  *(_OWORD *)(a1 + 1) = v19;
  if (v11 != v12)
  {
    v13 = v11 - 88;
    v14 = v11 - 88;
    do
    {
      v15 = *(void (***)(char *))v14;
      v14 -= 88;
      (*v15)(v13);
      v16 = v13 == v12;
      v13 = v14;
    }
    while (!v16);
  }
  if (v12)
    operator delete(v12);
  return v18 + 88;
}

void sub_1002F76B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1002F76FC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F76FC(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void (**v4)(void);

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = *(void (***)(void))(i - 88);
    *(_QWORD *)(a1 + 16) = i - 88;
    (*v4)();
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_1002F7750(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;

  if (a4)
  {
    v5 = (_QWORD *)result;
    if (a4 >= 0x2E8BA2E8BA2E8BBLL)
      sub_1000D02C0();
    result = (uint64_t)operator new(88 * a4);
    v8 = result;
    *v5 = result;
    v5[1] = result;
    v5[2] = result + 88 * a4;
    if (a2 != a3)
    {
      v9 = 0;
      do
      {
        result = sub_100130DA0(v8 + v9, a2 + v9);
        v9 += 88;
      }
      while (a2 + v9 != a3);
      v8 += v9;
    }
    v5[1] = v8;
  }
  return result;
}

void sub_1002F7810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_1002F785C(&a9);
  _Unwind_Resume(a1);
}

void sub_1002F7824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  for (; v11; v11 -= 88)
    (**(void (***)(uint64_t))(v10 - 88 + v11))(v10 - 88 + v11);
  *(_QWORD *)(v9 + 8) = v10;
  sub_1002F785C(&a9);
  _Unwind_Resume(a1);
}

void ***sub_1002F785C(void ***result)
{
  void ***v1;
  void **v2;
  char *v3;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  void (**v8)(char *);
  BOOL v9;

  v1 = result;
  if (!*((_BYTE *)result + 8))
  {
    v2 = *result;
    v3 = (char *)**result;
    if (v3)
    {
      v4 = (char *)v2[1];
      v5 = **result;
      if (v4 != v3)
      {
        v6 = v4 - 88;
        v7 = v4 - 88;
        do
        {
          v8 = *(void (***)(char *))v7;
          v7 -= 88;
          (*v8)(v6);
          v9 = v6 == v3;
          v6 = v7;
        }
        while (!v9);
        v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

uint64_t sub_1002F78FC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F7958()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F79B4()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F79C8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  double v12;
  uint64_t v13;
  void *v14;
  void *v15;
  double v16;
  void *v17;
  BOOL v18;
  void *v19;
  void *v20;
  BOOL v21;
  void *v22;
  void *v23;
  BOOL v24;
  void *v25;
  double v26;
  void *v27;
  BOOL v28;
  void *v29;
  double v30;
  void *v31;
  BOOL v32;
  void *v33;
  double v34;
  uint64_t v35;
  _QWORD *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  NSObject *v40;
  id v41;
  _BYTE v42[88];
  char *v43;
  std::__shared_weak_count *v44;
  __int128 buf;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  __int16 v49;
  __int128 v50;
  __int128 v51;
  char v52;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "endDate"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "startDate"));
    objc_msgSend(v7, "timeIntervalSinceDate:", v8);
    v10 = v9;

    v48 = 0;
    v49 = 0;
    v46 = 0;
    *(_QWORD *)&buf = off_1003F9968;
    v47 = 0;
    v50 = 0u;
    v51 = 0u;
    v52 &= 0x80u;
    *((_QWORD *)&buf + 1) = sub_10003C888();
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "endDate"));
    objc_msgSend(v11, "timeIntervalSince1970");
    sub_1001A0778((uint64_t)&buf, v12);

    v46 = (uint64_t)(v10 * 1000000000.0);
    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "numberOfSteps"));
    v47 = objc_msgSend((id)v13, "intValue");

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "distance"));
    LOBYTE(v13) = v14 == 0;

    if ((v13 & 1) == 0)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "distance"));
      objc_msgSend(v15, "doubleValue");
      sub_1001A073C((uint64_t)&buf, v16);

    }
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "floorsAscended"));
    v18 = v17 == 0;

    if (!v18)
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "floorsAscended"));
      sub_1001A0750((uint64_t)&buf, (char)objc_msgSend(v19, "charValue"));

    }
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "floorsDescended"));
    v21 = v20 == 0;

    if (!v21)
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "floorsDescended"));
      sub_1001A0764((uint64_t)&buf, (char)objc_msgSend(v22, "charValue"));

    }
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstStepTime"));
    v24 = v23 == 0;

    if (!v24)
    {
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstStepTime"));
      objc_msgSend(v25, "timeIntervalSince1970");
      sub_1001A078C((uint64_t)&buf, v26);

    }
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "activeTime"));
    v28 = v27 == 0;

    if (!v28)
    {
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "activeTime"));
      objc_msgSend(v29, "doubleValue");
      sub_1001A07A0((uint64_t)&buf, v30);

    }
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "currentPace"));
    v32 = v31 == 0;

    if (!v32)
    {
      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "currentPace"));
      objc_msgSend(v33, "doubleValue");
      sub_1001A07B4((uint64_t)&buf, v34);

    }
    v35 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
    sub_1003097DC((uint64_t)v42, (uint64_t)&buf);
    v36 = operator new(0x108uLL);
    v36[1] = 0;
    v36[2] = 0;
    *v36 = off_1003F0840;
    sub_1001A0F8C((uint64_t)(v36 + 4), (uint64_t)v42);
    *((_DWORD *)v36 + 6) = 10;
    v43 = (char *)(v36 + 3);
    v44 = (std::__shared_weak_count *)v36;
    sub_10005C2A4(v35, (uint64_t)&v43);
    v37 = v44;
    if (v44)
    {
      p_shared_owners = (unint64_t *)&v44->__shared_owners_;
      do
        v39 = __ldaxr(p_shared_owners);
      while (__stlxr(v39 - 1, p_shared_owners));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    nullsub_108(v42);
    nullsub_108(&buf);
  }
  else
  {
    if (qword_100417ED8 != -1)
      dispatch_once(&qword_100417ED8, &stru_100405120);
    v40 = (id)qword_100417EE0;
    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
    {
      v41 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "description")));
      LODWORD(buf) = 136315138;
      *(_QWORD *)((char *)&buf + 4) = objc_msgSend(v41, "UTF8String");
      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_ERROR, "Pedometry update failed.  Got error %s", (uint8_t *)&buf, 0xCu);

    }
  }

}

void sub_1002F7DCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1002F7EC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1002F7EF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 96));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

id sub_1002F7F84(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  v2 = objc_msgSend(WeakRetained, "sensorPresent");

  return v2;
}

void sub_1002F7FB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1002F7FC8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002F8024()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002F8080()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1002F8094(uint64_t a1@<X0>, unsigned int a2@<W1>, std::string *a3@<X8>)
{
  char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *__dst[2];
  unint64_t v12;

  v5 = sub_1002F8200(a2);
  v6 = strlen(v5);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v12 = v10 | 0x8000000000000000;
    __dst[0] = v8;
LABEL_9:
    memmove(v8, v5, (size_t)v7);
    *((_BYTE *)v7 + (_QWORD)v8) = 0;
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
  HIBYTE(v12) = v6;
  v8 = __dst;
  if (v6)
    goto LABEL_9;
  LOBYTE(__dst[0]) = 0;
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
LABEL_5:
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a3->__r_.__value_.__r.__words[2] = *(_QWORD *)(a1 + 16);
    goto LABEL_11;
  }
LABEL_10:
  sub_10006CED8(a3, *(void **)a1, *(_QWORD *)(a1 + 8));
LABEL_11:
  sub_1000675EC(a3, (uint64_t)__dst);
  if (SHIBYTE(v12) < 0)
    operator delete(__dst[0]);
}

void sub_1002F81B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_1002F8200(unsigned int a1)
{
  unsigned int v2;
  void *__p;
  void *v4[2];
  char v5;
  std::string v6;
  std::string v7;

  v2 = a1;
  if (a1 >= 8)
  {
    sub_1000D5048(v4, "");
    sub_10025FA04("Invalid dir type ", &v6);
    sub_10026A3D8((int *)&v2, &v7);
    sub_100174738((uint64_t)v4, (uint64_t)&v6, 2);
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v7.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v6.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v5 & 0x80000000) == 0)
          goto LABEL_6;
LABEL_9:
        operator delete(v4[0]);
LABEL_6:
        sub_1000F2AE4((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v6.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v6.__r_.__value_.__l.__data_);
    if ((v5 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_9;
  }
  return (&off_100418F88)[a1];
}

void sub_1002F830C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F8368(uint64_t a1, __int128 *a2, int a3, unsigned __int8 *a4, int a5)
{
  int v9;
  _QWORD *v10;
  __int128 v12;
  uint64_t v13;
  int v14;
  char v15;
  int v16;
  __int128 __p;
  uint64_t v18;
  _QWORD v19[5];
  __int128 v20;
  uint64_t v21;
  int v22;
  char v23;
  int v24;
  __int128 v25;
  uint64_t v26;

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3321888768;
  v19[2] = sub_1002FB148;
  v19[3] = &unk_1004052B0;
  if (*((char *)a2 + 23) < 0)
  {
    sub_10006CED8(&v12, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v12 = *a2;
    v13 = *((_QWORD *)a2 + 2);
  }
  v14 = a3;
  v15 = 0;
  v9 = *a4;
  if (*a4)
  {
    v16 = *((_DWORD *)a4 + 2);
    if ((char)a4[39] < 0)
    {
      sub_10006CED8(&__p, *((void **)a4 + 2), *((_QWORD *)a4 + 3));
    }
    else
    {
      __p = *((_OWORD *)a4 + 1);
      v18 = *((_QWORD *)a4 + 4);
    }
    v9 = 1;
    v15 = 1;
  }
  v19[4] = a1;
  if (SHIBYTE(v13) < 0)
  {
    sub_10006CED8(&v20, (void *)v12, *((unint64_t *)&v12 + 1));
    v22 = v14;
    v23 = 0;
    if (!v15)
      goto LABEL_17;
  }
  else
  {
    v20 = v12;
    v21 = v13;
    v22 = v14;
    v23 = 0;
    if (!v9)
      goto LABEL_17;
  }
  v24 = v16;
  if (SHIBYTE(v18) < 0)
  {
    sub_10006CED8(&v25, (void *)__p, *((unint64_t *)&__p + 1));
  }
  else
  {
    v25 = __p;
    v26 = v18;
  }
  v23 = 1;
LABEL_17:
  v10 = objc_retainBlock(v19);
  if (v15)
  {
    if (SHIBYTE(v18) < 0)
      operator delete((void *)__p);
    v15 = 0;
  }
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if (a5)
      goto LABEL_23;
LABEL_27:
    dispatch_sync(*(dispatch_queue_t *)(a1 + 544), v10);
    goto LABEL_29;
  }
  operator delete((void *)v12);
  if (!a5)
    goto LABEL_27;
LABEL_23:
  if (a5 == 1)
  {
    ((void (*)(_QWORD *))v10[2])(v10);
  }
  else if (a5 == 2)
  {
    dispatch_async(*(dispatch_queue_t *)(a1 + 544), v10);
  }
LABEL_29:

  if (v23)
  {
    if (SHIBYTE(v26) < 0)
      operator delete((void *)v25);
    v23 = 0;
  }
  if (SHIBYTE(v21) < 0)
    operator delete((void *)v20);
}

void sub_1002F85D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a33 < 0)
  {
    operator delete(__p);
    sub_1002FB2B8((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_1002FB2B8((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_1002F8790(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  id v16;
  id v17;
  void **v18;
  id v19;
  id v20;
  void **v21;
  NSObject *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  _QWORD block[4];
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 __p;
  uint64_t v35;
  void *v36[2];
  uint64_t v37;
  void *v38[2];
  uint64_t v39;
  uint8_t buf[24];
  id v41;
  __int16 v42;
  void **v43;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "originalRequest"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLProtocol propertyForKey:inRequest:](NSURLProtocol, "propertyForKey:inRequest:", CFSTR("CLSurveyUploadRunId"), v10));

  v24 = v11;
  if (v11)
  {
    objc_msgSend(v11, "ps_STLString");
  }
  else
  {
    v38[0] = 0;
    v38[1] = 0;
    v39 = 0;
  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "originalRequest"));
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLProtocol propertyForKey:inRequest:](NSURLProtocol, "propertyForKey:inRequest:", CFSTR("CLSurveyUploadPath"), v12));

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "path"));
  v14 = v13;
  if (v13)
    objc_msgSend(v13, "ps_STLString");
  else
    memset(buf, 0, sizeof(buf));
  *(_OWORD *)v36 = *(_OWORD *)buf;
  v37 = *(_QWORD *)&buf[16];
  memset(buf, 0, sizeof(buf));

  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1004052F0);
  v15 = (id)qword_100417EE0;
  if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
  {
    v16 = v9;
    v17 = v7;
    if (v39 >= 0)
      v18 = v38;
    else
      v18 = (void **)v38[0];
    v19 = objc_msgSend(v8, "countOfBytesSent");
    v20 = objc_msgSend(v8, "countOfBytesExpectedToSend");
    v21 = v36;
    if (v37 < 0)
      v21 = (void **)v36[0];
    *(_DWORD *)buf = 136315906;
    *(_QWORD *)&buf[4] = v18;
    *(_WORD *)&buf[12] = 2048;
    *(_QWORD *)&buf[14] = v19;
    *(_WORD *)&buf[22] = 2048;
    v41 = v20;
    v42 = 2080;
    v43 = v21;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Received onComplete notification for %s which uploaded %llu of %llu - %s", buf, 0x2Au);
    v7 = v17;
    v9 = v16;
  }

  sub_10006DB18((const char *)v36, 0, (int *)buf);
  if (*(_DWORD *)buf != 2)
  {
    if (qword_100417ED8 == -1)
    {
      v23 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        goto LABEL_31;
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_1004052F0);
      v23 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        goto LABEL_31;
    }
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Doesn't exist anymore, ignoring completion notification", buf, 2u);
    goto LABEL_31;
  }
  objc_msgSend(v7, "flushWithCompletionHandler:", &stru_100405258);
  v22 = *(NSObject **)(a1 + 768);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_1002FA02C;
  block[3] = &unk_100405280;
  v31 = a1;
  v27 = v8;
  v28 = v9;
  v29 = v25;
  if (SHIBYTE(v37) < 0)
  {
    sub_10006CED8(&v32, v36[0], (unint64_t)v36[1]);
  }
  else
  {
    v32 = *(_OWORD *)v36;
    v33 = v37;
  }
  v30 = v7;
  if (SHIBYTE(v39) < 0)
  {
    sub_10006CED8(&__p, v38[0], (unint64_t)v38[1]);
  }
  else
  {
    __p = *(_OWORD *)v38;
    v35 = v39;
  }
  dispatch_async(v22, block);
  if (SHIBYTE(v35) < 0)
    operator delete((void *)__p);

  if (SHIBYTE(v33) < 0)
    operator delete((void *)v32);

LABEL_31:
  if (SHIBYTE(v37) < 0)
    operator delete(v36[0]);

  if (SHIBYTE(v39) < 0)
    operator delete(v38[0]);

}

void sub_1002F8BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  void *v41;
  void *v42;
  void *v43;

  if (a26 < 0)
    operator delete(__p);

  if (a35 < 0)
    operator delete(a30);

  if (a41 < 0)
    operator delete(a36);

  _Unwind_Resume(a1);
}

void sub_1002F8D70(std::string *a1, _BYTE *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  void *v10;
  void *__p[2];
  char v12;
  void *v13[2];
  char v14;
  void *v15[2];
  char v16;
  std::string v17;

  sub_1000D9204(a2, &v17);
  v4 = sub_1000FF1D0((unint64_t)&v17, ".zip");
  v5 = v4;
  if ((SHIBYTE(v17.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (v4)
      goto LABEL_3;
LABEL_13:
    sub_1000D9140(a2, (unint64_t)&v17);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_10006CED8(a1, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
LABEL_25:
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      {
        v10 = (void *)v17.__r_.__value_.__r.__words[0];
LABEL_37:
        operator delete(v10);
        return;
      }
      return;
    }
LABEL_14:
    *a1 = v17;
    return;
  }
  operator delete(v17.__r_.__value_.__l.__data_);
  if (!v5)
    goto LABEL_13;
LABEL_3:
  sub_1000D9204(a2, &v17);
  v6 = sub_1000FF1D0((unint64_t)&v17, ".piece");
  v7 = v6;
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v17.__r_.__value_.__l.__data_);
    if (v7)
    {
LABEL_5:
      sub_1000D9204(a2, &v17);
      v8 = sub_1000FF1D0((unint64_t)&v17, ".replica");
      v9 = v8;
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v17.__r_.__value_.__l.__data_);
        if (v9)
        {
LABEL_7:
          sub_1000D9204(a2, __p);
          if (sub_1000FF1D0((unint64_t)__p, ""))
          {
            sub_1000D5048(v15, "");
            sub_100163210("Only know how to deal with the path being the runid from here", &v17);
            sub_100174738((uint64_t)v15, (uint64_t)&v17, 1);
            if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v17.__r_.__value_.__l.__data_);
            if (v16 < 0)
              operator delete(v15[0]);
            sub_1000F2AE4((uint64_t)v13);
          }
          if (v12 < 0)
            operator delete(__p[0]);
          sub_1000D9140(a2, (unint64_t)&v17);
          if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
          {
            sub_10006CED8(a1, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
            goto LABEL_25;
          }
          goto LABEL_14;
        }
      }
      else if (v8)
      {
        goto LABEL_7;
      }
      sub_1000D9140(a2, (unint64_t)__p);
      sub_1000D9140(__p, (unint64_t)v13);
      sub_1000D9140(v13, (unint64_t)v15);
      sub_1000D9140(v15, (unint64_t)&v17);
      if ((SHIBYTE(v17.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        *a1 = v17;
        if (v16 < 0)
          goto LABEL_21;
LABEL_33:
        if (v14 < 0)
        {
LABEL_22:
          operator delete(v13[0]);
          if ((v12 & 0x80000000) == 0)
            return;
          goto LABEL_36;
        }
LABEL_34:
        if ((v12 & 0x80000000) == 0)
          return;
LABEL_36:
        v10 = __p[0];
        goto LABEL_37;
      }
      sub_10006CED8(a1, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v17.__r_.__value_.__l.__data_);
        if ((v16 & 0x80000000) == 0)
          goto LABEL_33;
      }
      else if ((v16 & 0x80000000) == 0)
      {
        goto LABEL_33;
      }
LABEL_21:
      operator delete(v15[0]);
      if (v14 < 0)
        goto LABEL_22;
      goto LABEL_34;
    }
  }
  else if (v6)
  {
    goto LABEL_5;
  }
  sub_1000D9140(a2, (unint64_t)v15);
  sub_1000D9140(v15, (unint64_t)&v17);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_10006CED8(a1, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v17.__r_.__value_.__l.__data_);
  }
  else
  {
    *a1 = v17;
  }
  if (v16 < 0)
  {
    v10 = v15[0];
    goto LABEL_37;
  }
}

void sub_1002F90C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F91E4(uint64_t a1, __int128 *a2)
{
  NSObject *v4;
  NSObject *v5;
  _QWORD v6[5];
  __int128 v7;
  uint64_t v8;
  std::string __p;
  _QWORD block[5];
  std::string v11;
  __int128 __dst;
  uint64_t v13;
  std::string v14;

  if (*((char *)a2 + 23) < 0)
  {
    sub_10006CED8(&__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    __dst = *a2;
    v13 = *((_QWORD *)a2 + 2);
  }
  sub_1002F8D70(&v14, &__dst);
  if (SHIBYTE(v13) < 0)
    operator delete((void *)__dst);
  v4 = *(NSObject **)(a1 + 800);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_1002F9440;
  block[3] = &unk_1004051A0;
  block[4] = a1;
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
    sub_10006CED8(&v11, v14.__r_.__value_.__l.__data_, v14.__r_.__value_.__l.__size_);
  else
    v11 = v14;
  dispatch_sync(v4, block);
  v5 = *(NSObject **)(a1 + 768);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768;
  v6[2] = sub_1002F949C;
  v6[3] = &unk_1004051D0;
  v6[4] = a1;
  if (*((char *)a2 + 23) < 0)
  {
    sub_10006CED8(&v7, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v7 = *a2;
    v8 = *((_QWORD *)a2 + 2);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
    sub_10006CED8(&__p, v14.__r_.__value_.__l.__data_, v14.__r_.__value_.__l.__size_);
  else
    __p = v14;
  dispatch_async(v5, v6);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v8) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_18;
      goto LABEL_22;
    }
  }
  else if ((SHIBYTE(v8) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete((void *)v7);
  if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_18:
    if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_23:
    operator delete(v14.__r_.__value_.__l.__data_);
    return;
  }
LABEL_22:
  operator delete(v11.__r_.__value_.__l.__data_);
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_23;
}

void sub_1002F93B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  uint64_t v34;

  if (a20 < 0)
  {
    operator delete(__p);
    if ((a34 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v34 - 65) & 0x80000000) == 0)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(*(void **)(v34 - 88));
      goto LABEL_8;
    }
  }
  else if ((a34 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a29);
  if ((*(char *)(v34 - 65) & 0x80000000) == 0)
    goto LABEL_8;
  goto LABEL_7;
}

uint64_t *sub_1002F9440(uint64_t a1)
{
  return sub_1002FF0BC((uint64_t **)(*(_QWORD *)(a1 + 32) + 776), (const void **)(a1 + 40), a1 + 40);
}

_QWORD *sub_1002F9458(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  __int128 v3;

  result = (_QWORD *)(a1 + 40);
  if (*(char *)(a2 + 63) < 0)
    return sub_10006CED8(result, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
  v3 = *(_OWORD *)(a2 + 40);
  result[2] = *(_QWORD *)(a2 + 56);
  *(_OWORD *)result = v3;
  return result;
}

void sub_1002F9488(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0)
    operator delete(*(void **)(a1 + 40));
}

void sub_1002F949C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  _QWORD *v4;
  std::string *p_p;
  uint64_t *v6;
  const void **v7;
  const void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  uint64_t *v16;
  uint64_t *v17;
  void *v18;
  _BYTE buf[12];
  __int16 v20;
  _QWORD *v21;
  char v22;
  std::string __p;

  v2 = *(_QWORD *)(a1 + 32);
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1004052F0);
  v3 = (id)qword_100417EE0;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = (_QWORD *)(a1 + 40);
    sub_1000C1E68((_BYTE *)(a1 + 40), (uint64_t)&__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if (*(char *)(a1 + 63) < 0)
      v4 = (_QWORD *)*v4;
    *(_DWORD *)buf = 136315394;
    *(_QWORD *)&buf[4] = p_p;
    v20 = 2080;
    v21 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Uploading %s at %s", buf, 0x16u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }

  v6 = (uint64_t *)(a1 + 64);
  __p.__r_.__value_.__s.__data_[0] = 0;
  sub_1002F8368(v2, (__int128 *)(a1 + 64), 2, (unsigned __int8 *)&__p, 0);
  v7 = (const void **)(a1 + 40);
  v8 = (const void *)(a1 + 40);
  if (*(char *)(a1 + 63) < 0)
    v8 = *v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v8));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v9));

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](NSMutableURLRequest, "requestWithURL:", *(_QWORD *)(v2 + 480)));
  if (*(_DWORD *)(v2 + 568) != 1)
  {
    sub_1000D5048(buf, "");
    sub_10015C750("Haven't implemented multipart with NSURLSession yet, since we're not using it right now", &__p);
    sub_100174738((uint64_t)buf, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v22 < 0)
      operator delete(*(void **)buf);
    sub_1000F2AE4((uint64_t)&v18);
  }
  objc_msgSend(v11, "setHTTPMethod:", CFSTR("POST"));
  objc_msgSend(v11, "addValue:forHTTPHeaderField:", CFSTR("application/octet-stream"), CFSTR("Content-Type"));
  +[NSURLProtocol setProperty:forKey:inRequest:](NSURLProtocol, "setProperty:forKey:inRequest:", v10, CFSTR("CLSurveyUploadPath"), v11);
  v12 = a1 + 64;
  if (*(char *)(a1 + 87) < 0)
    v12 = *v6;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  +[NSURLProtocol setProperty:forKey:inRequest:](NSURLProtocol, "setProperty:forKey:inRequest:", v13, CFSTR("CLSurveyUploadRunId"), v11);

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 576), "uploadTaskWithRequest:fromFile:", v11, v10));
  objc_msgSend(*(id *)(v2 + 600), "setObject:forKeyedSubscript:", v14, v10);
  v15 = sub_10006CE40((uint64_t)v7, 0);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v6;
  v16 = sub_1002FE780(v2 + 608, (uint64_t)v6, (uint64_t)&unk_100395958, (__int128 **)&__p);
  *((_DWORD *)v16 + 10) += v15;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v6;
  v17 = sub_1002FEBF0(v2 + 688, (uint64_t)v6, (uint64_t)&unk_100395958, (__int128 **)&__p);
  sub_1002FF0BC((uint64_t **)v17 + 5, v7, (uint64_t)v7);
  objc_msgSend(v14, "resume");

}

void sub_1002F97F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  void *v22;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

_QWORD *sub_1002F9880(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _QWORD *result;
  __int128 v6;

  if (*(char *)(a2 + 63) < 0)
  {
    sub_10006CED8((_BYTE *)(a1 + 40), *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
    result = (_QWORD *)(a1 + 64);
    if ((*(char *)(a2 + 87) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v4;
    result = (_QWORD *)(a1 + 64);
    if ((*(char *)(a2 + 87) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = *(_OWORD *)(a2 + 64);
      result[2] = *(_QWORD *)(a2 + 80);
      *(_OWORD *)result = v6;
      return result;
    }
  }
  return sub_10006CED8(result, *(void **)(a2 + 64), *(_QWORD *)(a2 + 72));
}

void sub_1002F9918(_Unwind_Exception *exception_object)
{
  void **v1;
  uint64_t v2;

  if (*(char *)(v2 + 63) < 0)
    operator delete(*v1);
  _Unwind_Resume(exception_object);
}

void sub_1002F9934(uint64_t a1)
{
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 63) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(*(void **)(a1 + 40));
    return;
  }
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 63) < 0)
    goto LABEL_5;
}

void sub_1002F9980(uint64_t a1)
{
  sub_1002F9994(*(_QWORD *)(a1 + 48), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
}

void sub_1002F9994(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  uint64_t *v18;
  NSObject *v19;
  void *v20;
  int v21;
  void **v22;
  int v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  _QWORD v30[4];
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  void *v35[2];
  uint64_t v36;
  void *__p[2];
  uint64_t v38;
  void **v39;
  uint8_t buf[24];
  uint64_t v41;
  __int128 v42;

  v9 = a2;
  v10 = a3;
  v28 = v9;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "originalRequest"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLProtocol propertyForKey:inRequest:](NSURLProtocol, "propertyForKey:inRequest:", CFSTR("CLSurveyUploadRunId"), v11));

  if (v12)
  {
    objc_msgSend(v12, "ps_STLString");
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v38 = 0;
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "originalRequest"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLProtocol propertyForKey:inRequest:](NSURLProtocol, "propertyForKey:inRequest:", CFSTR("CLSurveyUploadPath"), v13));

  v29 = v14;
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "path"));
  v16 = v15;
  if (v15)
    objc_msgSend(v15, "ps_STLString");
  else
    memset(buf, 0, sizeof(buf));
  *(_OWORD *)v35 = *(_OWORD *)buf;
  v36 = *(_QWORD *)&buf[16];
  memset(buf, 0, sizeof(buf));

  buf[0] = 0;
  sub_1002F8368(a1, (__int128 *)__p, 2, buf, 0);
  *(_QWORD *)buf = v35;
  v17 = *((_DWORD *)sub_1002FE780(a1 + 728, (uint64_t)v35, (uint64_t)&unk_100395958, (__int128 **)buf) + 10);
  *(_QWORD *)buf = __p;
  v18 = sub_1002FE780(a1 + 648, (uint64_t)__p, (uint64_t)&unk_100395958, (__int128 **)buf);
  *((_DWORD *)v18 + 10) += a4 - v17;
  *(_QWORD *)buf = v35;
  *((_DWORD *)sub_1002FE780(a1 + 728, (uint64_t)v35, (uint64_t)&unk_100395958, (__int128 **)buf) + 10) = a4;
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1004052F0);
  v19 = (id)qword_100417EE0;
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    v20 = v12;
    v21 = SHIBYTE(v36);
    v22 = (void **)v35[0];
    v39 = v35;
    v23 = *((_DWORD *)sub_1002FE780(a1 + 728, (uint64_t)v35, (uint64_t)&unk_100395958, (__int128 **)&v39) + 10);
    if (v21 >= 0)
      v24 = v35;
    else
      v24 = v22;
    *(_DWORD *)buf = 136315906;
    *(_QWORD *)&buf[4] = v24;
    *(_WORD *)&buf[12] = 2048;
    *(_QWORD *)&buf[14] = a4;
    *(_WORD *)&buf[22] = 2048;
    v41 = a5;
    LOWORD(v42) = 1024;
    *(_DWORD *)((char *)&v42 + 2) = v23;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Sent for %s; %lld of %lld, %d", buf, 0x26u);
    v12 = v20;
  }

  *(_QWORD *)buf = __p;
  v25 = *((int *)sub_1002FE780(a1 + 648, (uint64_t)__p, (uint64_t)&unk_100395958, (__int128 **)buf) + 10);
  *(_QWORD *)buf = __p;
  v26 = *((int *)sub_1002FE780(a1 + 608, (uint64_t)__p, (uint64_t)&unk_100395958, (__int128 **)buf) + 10);
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3321888768;
  v30[2] = sub_1002F9EFC;
  v30[3] = &unk_100405228;
  *(_QWORD *)buf = a1;
  if ((SHIBYTE(v38) & 0x80000000) == 0)
  {
    *(_OWORD *)&buf[8] = *(_OWORD *)__p;
    v41 = v38;
    *(_QWORD *)&v42 = v25;
    *((_QWORD *)&v42 + 1) = v26;
    v31 = a1;
LABEL_16:
    v32 = *(_OWORD *)&buf[8];
    v33 = v41;
    goto LABEL_19;
  }
  sub_10006CED8(&buf[8], __p[0], (unint64_t)__p[1]);
  *(_QWORD *)&v42 = v25;
  *((_QWORD *)&v42 + 1) = v26;
  v31 = *(_QWORD *)buf;
  if ((SHIBYTE(v41) & 0x80000000) == 0)
    goto LABEL_16;
  sub_10006CED8(&v32, *(void **)&buf[8], *(unint64_t *)&buf[16]);
LABEL_19:
  v34 = v42;
  v27 = objc_retainBlock(v30);
  if (SHIBYTE(v41) < 0)
    operator delete(*(void **)&buf[8]);
  dispatch_async(*(dispatch_queue_t *)(a1 + 544), v27);

  if (SHIBYTE(v33) < 0)
  {
    operator delete((void *)v32);
    if ((SHIBYTE(v36) & 0x80000000) == 0)
      goto LABEL_23;
  }
  else if ((SHIBYTE(v36) & 0x80000000) == 0)
  {
    goto LABEL_23;
  }
  operator delete(v35[0]);
LABEL_23:

  if (SHIBYTE(v38) < 0)
    operator delete(__p[0]);

}

void sub_1002F9E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  void *v34;
  void *v35;
  uint64_t v36;

  if (*(char *)(v36 - 129) < 0)
    operator delete(*(void **)(v36 - 152));
  if (a28 < 0)
    operator delete(__p);

  if (a34 < 0)
    operator delete(a29);

  _Unwind_Resume(a1);
}

void sub_1002F9EFC(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 488) + 32);
  if (*(char *)(a1 + 63) < 0)
  {
    sub_10006CED8(__p, *(void **)(a1 + 40), *(_QWORD *)(a1 + 48));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a1 + 40);
    v4 = *(_QWORD *)(a1 + 56);
  }
  v5 = *(_OWORD *)(a1 + 64);
  sub_1002FBC04(v2, (uint64_t)__p);
  if (SHIBYTE(v4) < 0)
    operator delete(__p[0]);
}

void sub_1002F9F8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 sub_1002F9FA8(__n128 *a1, uint64_t a2)
{
  __int8 *v4;
  __int128 v5;
  __n128 result;

  a1[2].n128_u64[0] = *(_QWORD *)(a2 + 32);
  v4 = &a1[2].n128_i8[8];
  if (*(char *)(a2 + 63) < 0)
  {
    sub_10006CED8(v4, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
    result = *(__n128 *)(a2 + 64);
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 40);
    *((_QWORD *)v4 + 2) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v4 = v5;
    result = *(__n128 *)(a2 + 64);
  }
  a1[4] = result;
  return result;
}

void sub_1002FA014(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0)
    operator delete(*(void **)(a1 + 40));
}

void sub_1002FA02C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  std::string *v7;
  __int128 v8;
  int v9;
  void *v10;
  void *v11;
  std::string *p_buf;
  std::string::size_type size;
  std::string *v14;
  std::string::size_type v15;
  char v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  off_t v20;
  uint64_t v21;
  uint64_t v22;
  std::string::size_type *v23;
  uint64_t *v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  NSObject *v29;
  std::string::size_type v30;
  std::string::size_type v31;
  int v32;
  _QWORD *v33;
  uint64_t *v34;
  unsigned int v35;
  uint64_t *v36;
  NSObject *v37;
  std::string *v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  uint64_t v41;
  const char *v42;
  NSObject *v43;
  uint32_t v44;
  NSObject *v45;
  std::string::size_type v46;
  uint64_t *v47;
  std::string::size_type v48;
  uint64_t *v49;
  std::string::size_type v50;
  uint64_t *v51;
  std::string::size_type v52;
  NSObject *v53;
  uint64_t v54;
  void *v55;
  int v56;
  size_t v57;
  unint64_t v58;
  __int128 *p_dst;
  uint64_t v60;
  uint64_t v61;
  const void *v62;
  int v63;
  size_t v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  const void *v69;
  NSObject *v70;
  NSObject *v71;
  void *v72;
  __int128 v73;
  uint64_t v74;
  __int128 __dst;
  unint64_t v76;
  void *__p[2];
  unint64_t v78;
  uint8_t v79[16];
  unint64_t v80;
  _QWORD block[5];
  __int128 v82;
  uint64_t v83;
  std::string v84;
  std::string v85;
  std::string v86;
  std::string buf;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "response"));
  memset(&v85, 0, sizeof(v85));
  v4 = *(void **)(a1 + 40);
  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedFailureReason"));
    v6 = v5;
    if (v5)
    {
      objc_msgSend(v5, "ps_STLString");
      v7 = std::string::insert(&v84, 0, " because ");
      v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
      buf.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
      *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v8;
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v84.__r_.__value_.__l.__data_);
    }
    else
    {
      *((_BYTE *)&buf.__r_.__value_.__s + 23) = 0;
      buf.__r_.__value_.__s.__data_[0] = 0;
    }
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "localizedDescription"));
    v11 = v10;
    if (v10)
      objc_msgSend(v10, "ps_STLString");
    else
      memset(&v84, 0, sizeof(v84));
    if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_buf = &buf;
    else
      p_buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(buf.__r_.__value_.__r.__words[2]);
    else
      size = buf.__r_.__value_.__l.__size_;
    v14 = std::string::append(&v84, (const std::string::value_type *)p_buf, size);
    v15 = v14->__r_.__value_.__r.__words[0];
    v86.__r_.__value_.__r.__words[0] = v14->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v86.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v14->__r_.__value_.__r.__words[1] + 7);
    v16 = HIBYTE(v14->__r_.__value_.__r.__words[2]);
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    *(std::string::size_type *)((char *)&v85.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v86.__r_.__value_.__r.__words + 7);
    v85.__r_.__value_.__r.__words[0] = v15;
    v85.__r_.__value_.__l.__size_ = v86.__r_.__value_.__r.__words[0];
    *((_BYTE *)&v85.__r_.__value_.__s + 23) = v16;
    if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v84.__r_.__value_.__l.__data_);

    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
      operator delete(buf.__r_.__value_.__l.__data_);

  }
  else
  {
    if (objc_msgSend(v3, "statusCode") == (id)200)
    {
      v9 = 1;
      goto LABEL_27;
    }
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Server responded with code %d"), objc_msgSend(v3, "statusCode")));
    v18 = v17;
    if (v17)
      objc_msgSend(v17, "ps_STLString");
    else
      memset(&buf, 0, sizeof(buf));
    v85 = buf;
    *((_BYTE *)&buf.__r_.__value_.__s + 23) = 0;
    buf.__r_.__value_.__s.__data_[0] = 0;

  }
  v9 = 0;
LABEL_27:
  objc_msgSend(*(id *)(v2 + 600), "removeObjectForKey:", *(_QWORD *)(a1 + 48));
  if (!v9)
  {
    buf.__r_.__value_.__r.__words[0] = a1 + 72;
    v32 = *((_DWORD *)sub_1002FE780(v2 + 728, a1 + 72, (uint64_t)&unk_100395958, (__int128 **)&buf) + 10);
    v33 = (_QWORD *)(a1 + 96);
    buf.__r_.__value_.__r.__words[0] = a1 + 96;
    v34 = sub_1002FE780(v2 + 648, a1 + 96, (uint64_t)&unk_100395958, (__int128 **)&buf);
    *((_DWORD *)v34 + 10) -= v32;
    buf.__r_.__value_.__r.__words[0] = a1 + 72;
    *((_DWORD *)sub_1002FE780(v2 + 728, a1 + 72, (uint64_t)&unk_100395958, (__int128 **)&buf) + 10) = 0;
    v35 = objc_msgSend(*(id *)(a1 + 32), "countOfBytesExpectedToSend");
    buf.__r_.__value_.__r.__words[0] = a1 + 96;
    v36 = sub_1002FE780(v2 + 608, a1 + 96, (uint64_t)&unk_100395958, (__int128 **)&buf);
    *((_DWORD *)v36 + 10) -= v35;
    if (objc_msgSend(*(id *)(a1 + 40), "code") == (id)-999)
    {
      sub_10006DB18((const char *)(a1 + 72), 0, (int *)&buf);
      if (LODWORD(buf.__r_.__value_.__l.__data_) != 2)
      {
        if (qword_100417ED8 == -1)
        {
          v54 = qword_100417EE0;
          if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
            goto LABEL_164;
        }
        else
        {
          dispatch_once(&qword_100417ED8, &stru_1004052F0);
          v54 = qword_100417EE0;
          if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
            goto LABEL_164;
        }
        if (*(char *)(a1 + 119) < 0)
          v33 = (_QWORD *)*v33;
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
        v42 = "Task for %s was cancelled";
        v43 = v54;
        v44 = 12;
        goto LABEL_94;
      }
    }
    if (qword_100417ED8 == -1)
    {
      v37 = qword_100417EE0;
      if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
      {
LABEL_47:
        if (*(char *)(a1 + 119) < 0)
          v33 = (_QWORD *)*v33;
        v38 = &v85;
        if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v38 = (std::string *)v85.__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v38;
        _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_INFO, "Failed to upload %s; will retry soon: %s",
          (uint8_t *)&buf,
          0x16u);
      }
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_1004052F0);
      v37 = qword_100417EE0;
      if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        goto LABEL_47;
    }
    v39 = atomic_load((unsigned __int8 *)(v2 + 472));
    if ((v39 & 1) != 0)
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 560) + 16))(*(_QWORD *)(v2 + 560));
    v40 = atomic_load((unsigned __int8 *)(v2 + 472));
    if ((v40 & 1) != 0)
    {
      if (*(char *)(a1 + 95) < 0)
      {
        sub_10006CED8(&v73, *(void **)(a1 + 72), *(_QWORD *)(a1 + 80));
      }
      else
      {
        v73 = *(_OWORD *)(a1 + 72);
        v74 = *(_QWORD *)(a1 + 88);
      }
      sub_1002F91E4(v2, &v73);
      if ((SHIBYTE(v74) & 0x80000000) == 0)
        goto LABEL_164;
      v55 = (void *)v73;
      goto LABEL_163;
    }
    if (qword_100417ED8 == -1)
    {
      v41 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        goto LABEL_164;
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_1004052F0);
      v41 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        goto LABEL_164;
    }
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    v42 = "Shutdown in progress, not going to retry upload";
    v43 = v41;
    v44 = 2;
LABEL_94:
    _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_INFO, v42, (uint8_t *)&buf, v44);
    goto LABEL_164;
  }
  v19 = (_QWORD *)(a1 + 72);
  v20 = sub_10006CE40(a1 + 72, 0);
  sub_1002F9994(v2, *(void **)(a1 + 56), *(void **)(a1 + 32), v20, v20);
  v21 = v2 + 8;
  sub_1002F8094(v2 + 8, 6u, &v84);
  sub_1000C1E68((_BYTE *)(a1 + 72), (uint64_t)&v86);
  sub_1000675EC(&v84, (uint64_t)&v86);
  buf = v84;
  memset(&v84, 0, sizeof(v84));
  sub_100009FDC(a1 + 72, (uint64_t)&buf, 0);
  if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_30;
LABEL_59:
    operator delete(v86.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v84.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_31;
LABEL_60:
    operator delete(v84.__r_.__value_.__l.__data_);
    goto LABEL_31;
  }
  operator delete(buf.__r_.__value_.__l.__data_);
  if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_59;
LABEL_30:
  if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_60;
LABEL_31:
  v22 = v2 + 688;
  v23 = (std::string::size_type *)(a1 + 96);
  buf.__r_.__value_.__r.__words[0] = a1 + 96;
  v24 = sub_1002FEBF0(v2 + 688, a1 + 96, (uint64_t)&unk_100395958, (__int128 **)&buf);
  sub_1002FF2B0(v24 + 5, a1 + 72);
  v25 = (unsigned int *)(v2 + 504);
  do
    v26 = __ldaxr(v25);
  while (__stlxr(v26 - 1, v25));
  v27 = (unsigned int *)(v2 + 508);
  do
    v28 = __ldaxr(v27);
  while (__stlxr(v28 + 1, v27));
  buf.__r_.__value_.__r.__words[0] = a1 + 96;
  if (!sub_1002FEBF0(v2 + 688, a1 + 96, (uint64_t)&unk_100395958, (__int128 **)&buf)[7])
  {
    buf.__r_.__value_.__s.__data_[0] = 0;
    sub_1002F8368(v2, (__int128 *)(a1 + 96), 3, (unsigned __int8 *)&buf, 0);
    if (qword_100417ED8 != -1)
      dispatch_once(&qword_100417ED8, &stru_1004052F0);
    v45 = (id)qword_100417EE0;
    if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
    {
      v46 = a1 + 96;
      if (*(char *)(a1 + 119) < 0)
        v46 = *v23;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v46;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_INFO, "Completed uploading %s", (uint8_t *)&buf, 0xCu);
    }

    v47 = sub_1002FF44C((_QWORD *)(v2 + 688), a1 + 96);
    if (v47)
    {
      sub_10002BB38((_QWORD *)(v2 + 688), v47, (uint64_t)&buf);
      v48 = buf.__r_.__value_.__r.__words[0];
      buf.__r_.__value_.__r.__words[0] = 0;
      if (v48)
      {
        if (buf.__r_.__value_.__s.__data_[16])
        {
          sub_1000608EC(v48 + 40, *(char **)(v48 + 48));
          if (*(char *)(v48 + 39) < 0)
            operator delete(*(void **)(v48 + 16));
        }
        operator delete((void *)v48);
      }
    }
    v49 = sub_1002FF678((_QWORD *)(v2 + 608), a1 + 96);
    if (v49)
    {
      sub_10002BB38((_QWORD *)(v2 + 608), v49, (uint64_t)&buf);
      v50 = buf.__r_.__value_.__r.__words[0];
      buf.__r_.__value_.__r.__words[0] = 0;
      if (v50)
      {
        if (buf.__r_.__value_.__s.__data_[16] && *(char *)(v50 + 39) < 0)
          operator delete(*(void **)(v50 + 16));
        operator delete((void *)v50);
      }
    }
    v51 = sub_1002FF678((_QWORD *)(v2 + 648), a1 + 96);
    if (v51)
    {
      sub_10002BB38((_QWORD *)(v2 + 648), v51, (uint64_t)&buf);
      v52 = buf.__r_.__value_.__r.__words[0];
      buf.__r_.__value_.__r.__words[0] = 0;
      if (v52)
      {
        if (buf.__r_.__value_.__s.__data_[16] && *(char *)(v52 + 39) < 0)
          operator delete(*(void **)(v52 + 16));
        operator delete((void *)v52);
      }
    }
    v53 = *(NSObject **)(v2 + 800);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3321888768;
    block[2] = sub_1002FB034;
    block[3] = &unk_1004051A0;
    block[4] = v2;
    if (*(char *)(a1 + 119) < 0)
    {
      sub_10006CED8(&v82, *(void **)(a1 + 96), *(_QWORD *)(a1 + 104));
    }
    else
    {
      v82 = *(_OWORD *)v23;
      v83 = *(_QWORD *)(a1 + 112);
    }
    dispatch_sync(v53, block);
    v72 = v3;
    sub_1002F8094(v2 + 8, 5u, &v86);
    if (*(char *)(a1 + 119) < 0)
    {
      sub_10006CED8(v79, *(void **)(a1 + 96), *(_QWORD *)(a1 + 104));
    }
    else
    {
      *(_OWORD *)v79 = *(_OWORD *)v23;
      v80 = *(_QWORD *)(a1 + 112);
    }
    sub_1000675EC(&v86, (uint64_t)v79);
    v84 = v86;
    memset(&v86, 0, sizeof(v86));
    v56 = *(char *)(a1 + 119);
    if (v56 >= 0)
      v57 = *(unsigned __int8 *)(a1 + 119);
    else
      v57 = *(_QWORD *)(a1 + 104);
    v58 = v57 + 4;
    if (v57 + 4 > 0x7FFFFFFFFFFFFFF7)
      sub_1000CDE30();
    if (v58 >= 0x17)
    {
      v60 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v58 | 7) != 0x17)
        v60 = v58 | 7;
      v61 = v60 + 1;
      p_dst = (__int128 *)operator new(v60 + 1);
      *((_QWORD *)&__dst + 1) = v57 + 4;
      v76 = v61 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      v76 = 0;
      __dst = 0uLL;
      p_dst = &__dst;
      HIBYTE(v76) = v57 + 4;
      if (!v57)
        goto LABEL_116;
    }
    if (v56 >= 0)
      v62 = (const void *)(a1 + 96);
    else
      v62 = (const void *)*v23;
    memmove(p_dst, v62, v57);
LABEL_116:
    strcpy((char *)p_dst + v57, ".zip");
    *(_OWORD *)__p = __dst;
    v78 = v76;
    sub_1000675EC(&v84, (uint64_t)__p);
    buf = v84;
    memset(&v84, 0, sizeof(v84));
    if (SHIBYTE(v78) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v84.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_118:
        if ((SHIBYTE(v80) & 0x80000000) == 0)
          goto LABEL_119;
        goto LABEL_155;
      }
    }
    else if ((SHIBYTE(v84.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_118;
    }
    operator delete(v84.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v80) & 0x80000000) == 0)
    {
LABEL_119:
      if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_120;
LABEL_156:
      operator delete(v86.__r_.__value_.__l.__data_);
LABEL_120:
      sub_1002F8094(v21, 6u, &v86);
      v63 = *(char *)(a1 + 119);
      if (v63 >= 0)
        v64 = *(unsigned __int8 *)(a1 + 119);
      else
        v64 = *(_QWORD *)(a1 + 104);
      v65 = v64 + 4;
      if (v64 + 4 > 0x7FFFFFFFFFFFFFF7)
        sub_1000CDE30();
      if (v65 >= 0x17)
      {
        v67 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v65 | 7) != 0x17)
          v67 = v65 | 7;
        v68 = v67 + 1;
        v66 = operator new(v67 + 1);
        __p[1] = (void *)(v64 + 4);
        v78 = v68 | 0x8000000000000000;
        __p[0] = v66;
      }
      else
      {
        __p[1] = 0;
        v78 = 0;
        __p[0] = 0;
        v66 = __p;
        HIBYTE(v78) = v64 + 4;
        if (!v64)
          goto LABEL_134;
      }
      if (v63 >= 0)
        v69 = (const void *)(a1 + 96);
      else
        v69 = (const void *)*v23;
      memmove(v66, v69, v64);
LABEL_134:
      v3 = v72;
      strcpy((char *)v66 + v64, ".zip");
      *(_OWORD *)v79 = *(_OWORD *)__p;
      v80 = v78;
      sub_1000675EC(&v86, (uint64_t)v79);
      v84 = v86;
      memset(&v86, 0, sizeof(v86));
      if (SHIBYTE(v80) < 0)
      {
        operator delete(*(void **)v79);
        if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_136:
          if (qword_100417ED8 == -1)
            goto LABEL_137;
LABEL_159:
          dispatch_once(&qword_100417ED8, &stru_1004052F0);
LABEL_137:
          v70 = (id)qword_100417EE0;
          if (os_log_type_enabled(v70, OS_LOG_TYPE_INFO))
          {
            if (*(char *)(a1 + 95) < 0)
              v19 = (_QWORD *)*v19;
            LODWORD(v86.__r_.__value_.__l.__data_) = 136315138;
            *(std::string::size_type *)((char *)v86.__r_.__value_.__r.__words + 4) = (std::string::size_type)v19;
            _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_INFO, "Saving %s in the uploaded directory for future re-upload", (uint8_t *)&v86, 0xCu);
          }

          memset(&v86, 0, sizeof(v86));
          sub_100009FDC((uint64_t)&buf, (uint64_t)&v84, (uint64_t)&v86);
          if ((v86.__r_.__value_.__s.__data_[16] & 1) != 0
            && (v86.__r_.__value_.__r.__words[2] != 1 || LODWORD(v86.__r_.__value_.__l.__data_)))
          {
            if (qword_100417ED8 != -1)
              dispatch_once(&qword_100417ED8, &stru_1004052F0);
            v71 = (id)qword_100417EE0;
            if (os_log_type_enabled(v71, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v79 = 0;
              _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_INFO, "Oops... we already moved the uploading file", v79, 2u);
            }

          }
          if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v84.__r_.__value_.__l.__data_);
            if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_151:
              if ((SHIBYTE(v83) & 0x80000000) == 0)
                goto LABEL_164;
LABEL_162:
              v55 = (void *)v82;
LABEL_163:
              operator delete(v55);
              goto LABEL_164;
            }
          }
          else if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            goto LABEL_151;
          }
          operator delete(buf.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v83) & 0x80000000) == 0)
            goto LABEL_164;
          goto LABEL_162;
        }
      }
      else if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_136;
      }
      operator delete(v86.__r_.__value_.__l.__data_);
      if (qword_100417ED8 == -1)
        goto LABEL_137;
      goto LABEL_159;
    }
LABEL_155:
    operator delete(*(void **)v79);
    if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_120;
    goto LABEL_156;
  }
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1004052F0);
  v29 = (id)qword_100417EE0;
  if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
  {
    v30 = a1 + 96;
    if (*(char *)(a1 + 119) < 0)
      v30 = *v23;
    v84.__r_.__value_.__r.__words[0] = a1 + 96;
    v31 = sub_1002FEBF0(v22, a1 + 96, (uint64_t)&unk_100395958, (__int128 **)&v84)[7];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v30;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v31;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "Uploaded part of %s with %zu pieces remaining", (uint8_t *)&buf, 0x16u);
  }

LABEL_164:
  if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v85.__r_.__value_.__l.__data_);

}

void sub_1002FADC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  uint64_t v50;

  if (*(char *)(v50 - 153) < 0)
    operator delete(*(void **)(v50 - 176));
  if (a44 < 0)
    operator delete(__p);
  if (*(char *)(v50 - 185) < 0)
    operator delete(*(void **)(v50 - 208));

  _Unwind_Resume(a1);
}

uint64_t sub_1002FB034(uint64_t a1)
{
  return sub_1002FF2B0((_QWORD *)(*(_QWORD *)(a1 + 32) + 776), a1 + 40);
}

_QWORD *sub_1002FB048(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _QWORD *result;
  __int128 v6;

  if (*(char *)(a2 + 95) < 0)
  {
    sub_10006CED8((_BYTE *)(a1 + 72), *(void **)(a2 + 72), *(_QWORD *)(a2 + 80));
    result = (_QWORD *)(a1 + 96);
    if ((*(char *)(a2 + 119) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = v4;
    result = (_QWORD *)(a1 + 96);
    if ((*(char *)(a2 + 119) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = *(_OWORD *)(a2 + 96);
      result[2] = *(_QWORD *)(a2 + 112);
      *(_OWORD *)result = v6;
      return result;
    }
  }
  return sub_10006CED8(result, *(void **)(a2 + 96), *(_QWORD *)(a2 + 104));
}

void sub_1002FB0E0(_Unwind_Exception *exception_object)
{
  void **v1;
  uint64_t v2;

  if (*(char *)(v2 + 95) < 0)
    operator delete(*v1);
  _Unwind_Resume(exception_object);
}

void sub_1002FB0FC(uint64_t a1)
{
  if ((*(char *)(a1 + 119) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 95) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(*(void **)(a1 + 72));
    return;
  }
  operator delete(*(void **)(a1 + 96));
  if (*(char *)(a1 + 95) < 0)
    goto LABEL_5;
}

void sub_1002FB148(uint64_t a1)
{
  sub_1002FD07C(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 488) + 32), a1 + 40, (int *)(a1 + 64), a1 + 72);
}

char *sub_1002FB168(char *result, uint64_t a2)
{
  char *v3;
  __int128 v4;
  __int128 v5;

  v3 = result;
  *((_QWORD *)result + 4) = *(_QWORD *)(a2 + 32);
  if (*(char *)(a2 + 63) < 0)
  {
    result = (char *)sub_10006CED8(result + 40, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
    *((_DWORD *)v3 + 16) = *(_DWORD *)(a2 + 64);
    v3[72] = 0;
    if (!*(_BYTE *)(a2 + 72))
      return result;
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 40);
    *((_QWORD *)result + 7) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(result + 40) = v4;
    *((_DWORD *)result + 16) = *(_DWORD *)(a2 + 64);
    result[72] = 0;
    if (!*(_BYTE *)(a2 + 72))
      return result;
  }
  *((_DWORD *)v3 + 20) = *(_DWORD *)(a2 + 80);
  result = v3 + 88;
  if (*(char *)(a2 + 111) < 0)
  {
    result = (char *)sub_10006CED8(result, *(void **)(a2 + 88), *(_QWORD *)(a2 + 96));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 88);
    *((_QWORD *)v3 + 13) = *(_QWORD *)(a2 + 104);
    *(_OWORD *)result = v5;
  }
  v3[72] = 1;
  return result;
}

void sub_1002FB24C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 63) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_1002FB268(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 72))
  {
    if (*(char *)(a1 + 111) < 0)
      operator delete(*(void **)(a1 + 88));
    *(_BYTE *)(a1 + 72) = 0;
  }
  if (*(char *)(a1 + 63) < 0)
    operator delete(*(void **)(a1 + 40));
}

uint64_t sub_1002FB2B8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40))
  {
    if (*(char *)(a1 + 79) < 0)
      operator delete(*(void **)(a1 + 56));
    *(_BYTE *)(a1 + 40) = 0;
  }
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_1002FB314(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

double sub_1002FB344(uint64_t a1, uint64_t a2)
{
  const void *v3;
  size_t v4;
  void *v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;
  uint64_t v11;
  void *__dst[2];
  unint64_t v13;

  v3 = (const void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  v4 = strlen((const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL));
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    v13 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v13) = v4;
  v6 = __dst;
  if (v4)
LABEL_8:
    memmove(v6, v3, (size_t)v5);
  *((_BYTE *)v5 + (_QWORD)v6) = 0;
  sub_10000EA1C(__dst, (uint64_t)&v10);
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
  result = *(double *)&v10;
  *(_OWORD *)a1 = v10;
  *(_QWORD *)(a1 + 16) = v11;
  return result;
}

void sub_1002FB424(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002FB440(uint64_t *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  void *__p;
  char *v12;
  char *v13;
  char *v14;
  uint64_t *v15;

  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 4) >= a2)
    return;
  if (a2 >= 0x555555555555556)
    sub_1000D02C0();
  v3 = a1[1] - *a1;
  v15 = a1 + 2;
  v4 = 48 * a2;
  __p = operator new(48 * a2);
  v12 = (char *)__p + v3;
  v13 = (char *)__p + v3;
  v14 = (char *)__p + v4;
  sub_10016C698(a1, &__p);
  v5 = v12;
  while (1)
  {
    v6 = v13;
    if (v13 == v5)
      break;
    v13 -= 48;
    v7 = (std::__shared_weak_count *)*((_QWORD *)v6 - 1);
    if (!v7)
      goto LABEL_9;
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      v10 = *((_QWORD *)v6 - 5);
      if (v10)
LABEL_10:
        (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    }
    else
    {
LABEL_9:
      v10 = *((_QWORD *)v6 - 5);
      if (v10)
        goto LABEL_10;
    }
  }
  if (__p)
    operator delete(__p);
}

void sub_1002FB568(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10016C7A8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002FB57C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  exception[4] = 0;
  exception[5] = 0;
  *((_DWORD *)exception + 12) = -1;
  *exception = &off_100405390;
  exception[1] = off_1004053C0;
  exception[2] = off_1004053E8;
  exception[3] = 0;
}

std::bad_cast *sub_1002FB5CC(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1[2].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
    a1[3].__vftable = 0;
  std::bad_cast::~bad_cast(a1 + 1);
  return a1;
}

void sub_1002FB624()
{
  operator new();
}

void sub_1002FB6F0()
{
  std::bad_cast *v0;

  std::bad_cast::~bad_cast(v0);
  operator delete();
}

void sub_1002FB71C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1002FB738(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_1002FB998((uint64_t)exception, a1);
}

void sub_1002FB774(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002FB788(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1[2].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
      a1[3].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 + 1);
  operator delete();
}

void sub_1002FB7F0(std::bad_cast *this)
{
  std::bad_cast_vtbl *v2;

  this[1].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
    this[2].__vftable = 0;
  std::bad_cast::~bad_cast(this);
}

void sub_1002FB840(std::bad_cast *this)
{
  std::bad_cast_vtbl *v2;

  this[1].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
      this[2].__vftable = 0;
  }
  std::bad_cast::~bad_cast(this);
  operator delete();
}

const char *sub_1002FB8AC()
{
  return "boost::bad_any_cast: failed conversion using boost::any_cast";
}

void sub_1002FB8B8(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1->__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
    a1[1].__vftable = 0;
  std::bad_cast::~bad_cast(a1 - 1);
}

void sub_1002FB908(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1->__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 - 1);
  operator delete();
}

void sub_1002FB974(std::bad_cast *a1)
{
  std::bad_cast::~bad_cast(a1);
  operator delete();
}

uint64_t sub_1002FB998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  *(_QWORD *)(a1 + 8) = &off_100405408;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_100405390;
  *(_QWORD *)(a1 + 8) = off_1004053C0;
  *(_QWORD *)(a1 + 16) = off_1004053E8;
  return a1;
}

void sub_1002FBA38(_Unwind_Exception *a1)
{
  std::bad_cast *v1;

  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FBA4C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(_QWORD *)(a1 + 16);
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  return a1;
}

void sub_1002FBAC4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(_QWORD *)(a1 + 16);
    if (!v5)
LABEL_7:
      operator delete();
  }
  else
  {
LABEL_5:
    v5 = *(_QWORD *)(a1 + 16);
    if (!v5)
      goto LABEL_7;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  goto LABEL_7;
}

_UNKNOWN **sub_1002FBB4C()
{
}

void sub_1002FBB58()
{
  operator new();
}

void sub_1002FBBE0()
{
  operator delete();
}

void sub_1002FBC04(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t ***v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::string *v18;
  __int128 v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t ***v24;
  uint64_t **v25;
  uint64_t *v26;
  NSObject *v27;
  std::string *v28;
  char *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  char *v36;
  void *v37;
  std::__shared_weak_count *v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  uint64_t v41;
  __int128 *v42;
  uint64_t v43;
  std::string v44;
  void *v45;
  char *v46;
  void *v47[2];
  std::string::size_type v48;
  void *__p;
  char *v50;
  unint64_t v51;
  __int128 buf;
  void **v53;
  __int128 *p_buf;

  __p = 0;
  v50 = 0;
  v51 = 0;
  v4 = (std::mutex *)(a1 + 48);
  std::mutex::lock((std::mutex *)(a1 + 48));
  if (*(_QWORD *)(a1 + 16))
  {
    v6 = 21 * ((265 * (v5 ^ (v5 >> 24))) ^ ((265 * (v5 ^ (v5 >> 24))) >> 14));
    v7 = (*(_QWORD *)(a1 + 8) - 1) & (2147483649u * (v6 ^ (v6 >> 28)));
    v8 = *(uint64_t ****)(*(_QWORD *)(a1 + 40) + 8 * v7);
    if (v8)
    {
      v9 = *v8;
      if (*v8)
      {
        {
          v10 = v9[1];
LABEL_6:
          if (((unint64_t)v10 & 0x7FFFFFFFFFFFFFFFLL) == v7)
          {
            while (1)
            {
              v9 = (uint64_t **)*v9;
              if (!v9)
                break;
              v10 = v9[1];
              if (((unint64_t)v10 & 0x8000000000000000) == 0)
              {
                  goto LABEL_6;
                goto LABEL_10;
              }
            }
          }
          goto LABEL_35;
        }
LABEL_10:
        sub_1002FB440((uint64_t *)&__p, 0xAAAAAAAAAAAAAAABLL * (((char *)v9[4] - (char *)v9[3]) >> 4));
        v11 = (uint64_t)v9[3];
        v12 = v9[4];
        if ((uint64_t *)v11 != v12)
        {
          v13 = (unint64_t)v50;
          do
          {
            while (v13 >= v51)
            {
              v13 = sub_10016C4BC((uint64_t *)&__p, v11);
              v50 = (char *)v13;
              v11 += 48;
              if ((uint64_t *)v11 == v12)
                goto LABEL_21;
            }
            *(_QWORD *)v13 = *(_QWORD *)v11;
            v14 = *(_QWORD *)(v11 + 8);
            if (v14)
              v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14);
            *(_QWORD *)(v13 + 8) = v14;
            *(_OWORD *)(v13 + 16) = *(_OWORD *)(v11 + 16);
            *(_QWORD *)(v13 + 32) = *(_QWORD *)(v11 + 32);
            v15 = *(_QWORD *)(v11 + 40);
            *(_QWORD *)(v13 + 40) = v15;
            if (v15)
            {
              v16 = (unint64_t *)(v15 + 8);
              do
                v17 = __ldxr(v16);
              while (__stxr(v17 + 1, v16));
            }
            v13 += 48;
            v50 = (char *)v13;
            v11 += 48;
          }
          while ((uint64_t *)v11 != v12);
        }
LABEL_21:
        std::mutex::unlock(v4);
        sub_1002FB344((uint64_t)&v44, (uint64_t)"N7actions9upload_db14UploadProgressE");
        v18 = std::string::insert(&v44, 0, "delivering event ");
        v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
        v48 = v18->__r_.__value_.__r.__words[2];
        *(_OWORD *)v47 = v19;
        v18->__r_.__value_.__l.__size_ = 0;
        v18->__r_.__value_.__r.__words[2] = 0;
        v18->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v44.__r_.__value_.__l.__data_);
        *(_QWORD *)&buf = off_100405498;
        *((_QWORD *)&buf + 1) = a2;
        v53 = v47;
        p_buf = &buf;
        sub_1001749C8(&__p, (uint64_t)&buf, &v45);
        v20 = (char *)v45;
        if (v45 != v46)
        {
          std::mutex::lock(v4);
          if (*(_QWORD *)(a1 + 16))
          {
            v22 = 21 * ((265 * (v21 ^ (v21 >> 24))) ^ ((265 * (v21 ^ (v21 >> 24))) >> 14));
            v23 = (*(_QWORD *)(a1 + 8) - 1) & (2147483649u * (v22 ^ (v22 >> 28)));
            v24 = *(uint64_t ****)(*(_QWORD *)(a1 + 40) + 8 * v23);
            if (v24)
            {
              v25 = *v24;
              if (v25)
              {
                {
LABEL_33:
                  if (v45 != v46)
                    operator new();
                }
                else
                {
                  v26 = v25[1];
LABEL_29:
                  if (((unint64_t)v26 & 0x7FFFFFFFFFFFFFFFLL) == v23)
                  {
                    while (1)
                    {
                      v25 = (uint64_t **)*v25;
                      if (!v25)
                        break;
                      v26 = v25[1];
                      if (((unint64_t)v26 & 0x8000000000000000) == 0)
                      {
                          goto LABEL_29;
                        goto LABEL_33;
                      }
                    }
                  }
                }
              }
            }
          }
          std::mutex::unlock(v4);
          v20 = (char *)v45;
        }
        if (v20)
        {
          v36 = v46;
          v37 = v20;
          if (v46 != v20)
          {
            do
            {
              v38 = (std::__shared_weak_count *)*((_QWORD *)v36 - 1);
              if (v38)
              {
                p_shared_owners = (unint64_t *)&v38->__shared_owners_;
                do
                  v40 = __ldaxr(p_shared_owners);
                while (__stlxr(v40 - 1, p_shared_owners));
                if (!v40)
                {
                  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
                  std::__shared_weak_count::__release_weak(v38);
                }
              }
              v41 = *((_QWORD *)v36 - 5);
              if (v41)
                (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
              v36 -= 48;
            }
            while (v36 != v20);
            v37 = v45;
          }
          v46 = v20;
          operator delete(v37);
        }
        v42 = p_buf;
        if (p_buf == &buf)
        {
          v43 = 4;
          v42 = &buf;
        }
        else
        {
          if (!p_buf)
            goto LABEL_78;
          v43 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v42 + 8 * v43))();
LABEL_78:
        if (SHIBYTE(v48) < 0)
          operator delete(v47[0]);
        goto LABEL_44;
      }
    }
  }
LABEL_35:
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1004052F0);
  v27 = (id)qword_100417EE0;
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
  {
    sub_1002FB344((uint64_t)&v44, (uint64_t)"N7actions9upload_db14UploadProgressE");
    v28 = (v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v44
        : (std::string *)v44.__r_.__value_.__r.__words[0];
    LODWORD(buf) = 136315138;
    *(_QWORD *)((char *)&buf + 4) = v28;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "No listeners for event %s", (uint8_t *)&buf, 0xCu);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
  }

  std::mutex::unlock(v4);
LABEL_44:
  v29 = (char *)__p;
  if (!__p)
    return;
  v30 = v50;
  v31 = __p;
  if (v50 != __p)
  {
    while (1)
    {
      v33 = (std::__shared_weak_count *)*((_QWORD *)v30 - 1);
      if (v33)
      {
        v34 = (unint64_t *)&v33->__shared_owners_;
        do
          v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
          break;
      }
      v32 = *((_QWORD *)v30 - 5);
      if (v32)
        goto LABEL_48;
LABEL_49:
      v30 -= 48;
      if (v30 == v29)
      {
        v31 = __p;
        goto LABEL_57;
      }
    }
    ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
    std::__shared_weak_count::__release_weak(v33);
    v32 = *((_QWORD *)v30 - 5);
    if (!v32)
      goto LABEL_49;
LABEL_48:
    (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    goto LABEL_49;
  }
LABEL_57:
  v50 = v29;
  operator delete(v31);
}

void sub_1002FC320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;

  sub_10016BE6C(&a21);
  v35 = *(_QWORD **)(v33 - 104);
  if (v35 == (_QWORD *)(v33 - 128))
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 128);
  }
  else
  {
    if (!v35)
      goto LABEL_6;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_6:
  if (a29 < 0)
  {
    operator delete(__p);
    sub_10016BE6C(&a30);
    _Unwind_Resume(a1);
  }
  sub_10016BE6C(&a30);
  _Unwind_Resume(a1);
}

void sub_1002FC4B0()
{
  operator delete();
}

__n128 sub_1002FC4C4(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = off_100405498;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1002FC4FC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = off_100405498;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_1002FC51C(uint64_t a1, uint64_t *a2)
{
  sub_1002FC59C((_QWORD *)(a1 + 8), a2);
}

uint64_t sub_1002FC524(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_EUlRKN9event_bus2"
                                "1GenericCallbackHandleEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_1002FC590()
{
}

void sub_1002FC59C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  void *__p[2];
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v3 = a2[4];
  v5 = (__int128 *)*a1;
  v4 = a1[1];
  if (*(char *)(*a1 + 23) < 0)
  {
    sub_10006CED8(__p, *(void **)v5, *((_QWORD *)v5 + 1));
    v16 = *(__int128 *)((char *)v5 + 24);
    v7 = a2[1];
    v17 = *a2;
    if (!v7)
      goto LABEL_6;
    goto LABEL_5;
  }
  v6 = *v5;
  v15 = *((_QWORD *)v5 + 2);
  *(_OWORD *)__p = v6;
  v16 = *(__int128 *)((char *)v5 + 24);
  v7 = a2[1];
  v17 = *a2;
  if (v7)
LABEL_5:
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
LABEL_6:
  v18 = v7;
  v19 = *((_OWORD *)a2 + 1);
  v8 = (std::__shared_weak_count *)a2[5];
  v20 = a2[4];
  v21 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  sub_1002FC708(v3, v4, (uint64_t)__p);
  v11 = v21;
  if (v21)
  {
    v12 = (unint64_t *)&v21->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v18)
    (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_1002FC6D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002FC708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  void *__p[2];
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  _BYTE v31[24];
  _BYTE *v32;

  if (*(char *)(a3 + 23) < 0)
  {
    sub_10006CED8(__p, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v24 = *(_QWORD *)(a3 + 16);
  }
  v25 = *(_OWORD *)(a3 + 24);
  v6 = *(_QWORD *)(a3 + 48);
  v26 = *(_QWORD *)(a3 + 40);
  if (v6)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v27 = v6;
  v28 = *(_OWORD *)(a3 + 56);
  v7 = *(std::__shared_weak_count **)(a3 + 80);
  v29 = *(_QWORD *)(a3 + 72);
  v30 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v32 = 0;
  v10 = (char *)operator new(0x60uLL);
  *(_QWORD *)v10 = off_100405508;
  v11 = v26;
  *((_QWORD *)v10 + 3) = v24;
  *(_OWORD *)(v10 + 8) = *(_OWORD *)__p;
  __p[0] = 0;
  __p[1] = 0;
  v24 = 0;
  *((_OWORD *)v10 + 2) = v25;
  *((_QWORD *)v10 + 6) = v11;
  v12 = v27;
  if (v27)
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 24))(v27);
  *((_QWORD *)v10 + 7) = v12;
  *((_OWORD *)v10 + 4) = v28;
  v13 = v30;
  *((_QWORD *)v10 + 10) = v29;
  *((_QWORD *)v10 + 11) = v13;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  v32 = v10;
  (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(_QWORD *)a1 + 16))(a1, a2, v31);
  v18 = v32;
  if (v32 == v31)
  {
    v19 = 4;
    v18 = v31;
    goto LABEL_18;
  }
  if (v32)
  {
    v19 = 5;
LABEL_18:
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v18 + 8 * v19))(v18, v16, v17);
  }
  v20 = v30;
  if (v30)
  {
    v21 = (unint64_t *)&v30->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  if (v27)
    (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
  if (SHIBYTE(v24) < 0)
    operator delete(__p[0]);
}

void sub_1002FC924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char *v9;
  void **v10;

  if (v9[31] < 0)
    operator delete(*v10);
  operator delete(v9);
  sub_1002FC9C0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002FC950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002FC96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char *a23)
{
  char *v23;
  char *v25;
  uint64_t v26;

  v25 = a23;
  if (a23 == v23)
  {
    v26 = 4;
    v25 = &a20;
  }
  else
  {
    if (!a23)
    {
      sub_1002FC9C0((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v26 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v25 + 8 * v26))();
  sub_1002FC9C0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FC9C0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(_QWORD *)(a1 + 48);
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(_QWORD *)(a1 + 48);
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
LABEL_7:
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_1002FCA58(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = off_100405508;
  v2 = *(std::__shared_weak_count **)(a1 + 88);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(_QWORD *)(a1 + 56);
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(_QWORD *)(a1 + 56);
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
LABEL_7:
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_1002FCAFC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = off_100405508;
  v2 = *(std::__shared_weak_count **)(a1 + 88);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(_QWORD *)(a1 + 56);
    if (!v5)
    {
LABEL_7:
      if (*(char *)(a1 + 31) < 0)
        operator delete(*(void **)(a1 + 8));
      operator delete();
    }
  }
  else
  {
LABEL_5:
    v5 = *(_QWORD *)(a1 + 56);
    if (!v5)
      goto LABEL_7;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  goto LABEL_7;
}

char *sub_1002FCBA0(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = (char *)operator new(0x60uLL);
  v3 = v2;
  *(_QWORD *)v2 = off_100405508;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_10006CED8(v2 + 8, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  *((_QWORD *)v3 + 6) = *(_QWORD *)(a1 + 48);
  if (v4)
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  *((_QWORD *)v3 + 7) = v4;
  *((_OWORD *)v3 + 4) = *(_OWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 88);
  *((_QWORD *)v3 + 10) = *(_QWORD *)(a1 + 80);
  *((_QWORD *)v3 + 11) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  return v3;
}

void sub_1002FCC5C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1002FCC70(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FCC94(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  *(_QWORD *)a2 = off_100405508;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_10006CED8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
    result = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
    if (!result)
      goto LABEL_6;
    goto LABEL_5;
  }
  v5 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)v4 = v5;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  result = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a2 + 48) = v7;
  if (result)
LABEL_5:
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
LABEL_6:
  *(_QWORD *)(a2 + 56) = result;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a2 + 80) = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a2 + 88) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return result;
}

void sub_1002FCD58(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_1002FCD74(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  v2 = *(std::__shared_weak_count **)(a1 + 88);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(_QWORD *)(a1 + 56);
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(_QWORD *)(a1 + 56);
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
LABEL_7:
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_1002FCE00(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 11);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *((_QWORD *)__p + 7);
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *((_QWORD *)__p + 7);
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
LABEL_7:
  if (__p[31] < 0)
    operator delete(*((void **)__p + 1));
  operator delete(__p);
}

uint64_t sub_1002FCE98(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 24);
  if (!v2)
    sub_10016CA74();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 48))(v2, a1 + 8);
}

uint64_t sub_1002FCEC8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_ENKUlRKN9event_bus21Generic"
                     "CallbackHandleEE_clES9_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_ENKUlRKN9event_b"
                                "us21GenericCallbackHandleEE_clES9_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_ENKUlRKN9event_bus21GenericCallbackHandleEE_clES9_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_ENKUlRKN9event_bus21GenericCallbackHandleEE_clES9_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_1002FCF34()
{
}

uint64_t sub_1002FCF40(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_1002FCFA8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  operator delete();
}

_UNKNOWN **sub_1002FD010()
{
}

void sub_1002FD01C()
{
  operator new();
}

void sub_1002FD07C(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  void *v7[2];
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  __int128 __p;
  uint64_t v13;

  if (*(char *)(a2 + 23) < 0)
  {
    sub_10006CED8(v7, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)v7 = *(_OWORD *)a2;
    v8 = *(_QWORD *)(a2 + 16);
  }
  v9 = *a3;
  v10 = 0;
  if (*(_BYTE *)a4)
  {
    v11 = *(_DWORD *)(a4 + 8);
    if (*(char *)(a4 + 39) < 0)
    {
      sub_10006CED8(&__p, *(void **)(a4 + 16), *(_QWORD *)(a4 + 24));
    }
    else
    {
      __p = *(_OWORD *)(a4 + 16);
      v13 = *(_QWORD *)(a4 + 32);
    }
    v10 = 1;
  }
  sub_1002FD1D0(a1, (uint64_t)v7);
  if (v10)
  {
    if (SHIBYTE(v13) < 0)
      operator delete((void *)__p);
    v10 = 0;
  }
  if (SHIBYTE(v8) < 0)
    operator delete(v7[0]);
}

void sub_1002FD194(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002FD1BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1002FDA78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002FD1D0(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t ***v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::string *v18;
  __int128 v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t ***v24;
  uint64_t **v25;
  uint64_t *v26;
  NSObject *v27;
  std::string *v28;
  char *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  char *v36;
  void *v37;
  std::__shared_weak_count *v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  uint64_t v41;
  __int128 *v42;
  uint64_t v43;
  std::string v44;
  void *v45;
  char *v46;
  void *v47[2];
  std::string::size_type v48;
  void *__p;
  char *v50;
  unint64_t v51;
  __int128 buf;
  void **v53;
  __int128 *p_buf;

  __p = 0;
  v50 = 0;
  v51 = 0;
  v4 = (std::mutex *)(a1 + 48);
  std::mutex::lock((std::mutex *)(a1 + 48));
  if (*(_QWORD *)(a1 + 16))
  {
    v6 = 21 * ((265 * (v5 ^ (v5 >> 24))) ^ ((265 * (v5 ^ (v5 >> 24))) >> 14));
    v7 = (*(_QWORD *)(a1 + 8) - 1) & (2147483649u * (v6 ^ (v6 >> 28)));
    v8 = *(uint64_t ****)(*(_QWORD *)(a1 + 40) + 8 * v7);
    if (v8)
    {
      v9 = *v8;
      if (*v8)
      {
        {
          v10 = v9[1];
LABEL_6:
          if (((unint64_t)v10 & 0x7FFFFFFFFFFFFFFFLL) == v7)
          {
            while (1)
            {
              v9 = (uint64_t **)*v9;
              if (!v9)
                break;
              v10 = v9[1];
              if (((unint64_t)v10 & 0x8000000000000000) == 0)
              {
                  goto LABEL_6;
                goto LABEL_10;
              }
            }
          }
          goto LABEL_35;
        }
LABEL_10:
        sub_1002FB440((uint64_t *)&__p, 0xAAAAAAAAAAAAAAABLL * (((char *)v9[4] - (char *)v9[3]) >> 4));
        v11 = (uint64_t)v9[3];
        v12 = v9[4];
        if ((uint64_t *)v11 != v12)
        {
          v13 = (unint64_t)v50;
          do
          {
            while (v13 >= v51)
            {
              v13 = sub_10016C4BC((uint64_t *)&__p, v11);
              v50 = (char *)v13;
              v11 += 48;
              if ((uint64_t *)v11 == v12)
                goto LABEL_21;
            }
            *(_QWORD *)v13 = *(_QWORD *)v11;
            v14 = *(_QWORD *)(v11 + 8);
            if (v14)
              v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14);
            *(_QWORD *)(v13 + 8) = v14;
            *(_OWORD *)(v13 + 16) = *(_OWORD *)(v11 + 16);
            *(_QWORD *)(v13 + 32) = *(_QWORD *)(v11 + 32);
            v15 = *(_QWORD *)(v11 + 40);
            *(_QWORD *)(v13 + 40) = v15;
            if (v15)
            {
              v16 = (unint64_t *)(v15 + 8);
              do
                v17 = __ldxr(v16);
              while (__stxr(v17 + 1, v16));
            }
            v13 += 48;
            v50 = (char *)v13;
            v11 += 48;
          }
          while ((uint64_t *)v11 != v12);
        }
LABEL_21:
        std::mutex::unlock(v4);
        sub_1002FB344((uint64_t)&v44, (uint64_t)"N7actions9upload_db11StateChangeE");
        v18 = std::string::insert(&v44, 0, "delivering event ");
        v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
        v48 = v18->__r_.__value_.__r.__words[2];
        *(_OWORD *)v47 = v19;
        v18->__r_.__value_.__l.__size_ = 0;
        v18->__r_.__value_.__r.__words[2] = 0;
        v18->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v44.__r_.__value_.__l.__data_);
        *(_QWORD *)&buf = off_100405600;
        *((_QWORD *)&buf + 1) = a2;
        v53 = v47;
        p_buf = &buf;
        sub_1001749C8(&__p, (uint64_t)&buf, &v45);
        v20 = (char *)v45;
        if (v45 != v46)
        {
          std::mutex::lock(v4);
          if (*(_QWORD *)(a1 + 16))
          {
            v22 = 21 * ((265 * (v21 ^ (v21 >> 24))) ^ ((265 * (v21 ^ (v21 >> 24))) >> 14));
            v23 = (*(_QWORD *)(a1 + 8) - 1) & (2147483649u * (v22 ^ (v22 >> 28)));
            v24 = *(uint64_t ****)(*(_QWORD *)(a1 + 40) + 8 * v23);
            if (v24)
            {
              v25 = *v24;
              if (v25)
              {
                {
LABEL_33:
                  if (v45 != v46)
                    operator new();
                }
                else
                {
                  v26 = v25[1];
LABEL_29:
                  if (((unint64_t)v26 & 0x7FFFFFFFFFFFFFFFLL) == v23)
                  {
                    while (1)
                    {
                      v25 = (uint64_t **)*v25;
                      if (!v25)
                        break;
                      v26 = v25[1];
                      if (((unint64_t)v26 & 0x8000000000000000) == 0)
                      {
                          goto LABEL_29;
                        goto LABEL_33;
                      }
                    }
                  }
                }
              }
            }
          }
          std::mutex::unlock(v4);
          v20 = (char *)v45;
        }
        if (v20)
        {
          v36 = v46;
          v37 = v20;
          if (v46 != v20)
          {
            do
            {
              v38 = (std::__shared_weak_count *)*((_QWORD *)v36 - 1);
              if (v38)
              {
                p_shared_owners = (unint64_t *)&v38->__shared_owners_;
                do
                  v40 = __ldaxr(p_shared_owners);
                while (__stlxr(v40 - 1, p_shared_owners));
                if (!v40)
                {
                  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
                  std::__shared_weak_count::__release_weak(v38);
                }
              }
              v41 = *((_QWORD *)v36 - 5);
              if (v41)
                (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
              v36 -= 48;
            }
            while (v36 != v20);
            v37 = v45;
          }
          v46 = v20;
          operator delete(v37);
        }
        v42 = p_buf;
        if (p_buf == &buf)
        {
          v43 = 4;
          v42 = &buf;
        }
        else
        {
          if (!p_buf)
            goto LABEL_78;
          v43 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v42 + 8 * v43))();
LABEL_78:
        if (SHIBYTE(v48) < 0)
          operator delete(v47[0]);
        goto LABEL_44;
      }
    }
  }
LABEL_35:
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1004052F0);
  v27 = (id)qword_100417EE0;
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
  {
    sub_1002FB344((uint64_t)&v44, (uint64_t)"N7actions9upload_db11StateChangeE");
    v28 = (v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v44
        : (std::string *)v44.__r_.__value_.__r.__words[0];
    LODWORD(buf) = 136315138;
    *(_QWORD *)((char *)&buf + 4) = v28;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "No listeners for event %s", (uint8_t *)&buf, 0xCu);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
  }

  std::mutex::unlock(v4);
LABEL_44:
  v29 = (char *)__p;
  if (!__p)
    return;
  v30 = v50;
  v31 = __p;
  if (v50 != __p)
  {
    while (1)
    {
      v33 = (std::__shared_weak_count *)*((_QWORD *)v30 - 1);
      if (v33)
      {
        v34 = (unint64_t *)&v33->__shared_owners_;
        do
          v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
          break;
      }
      v32 = *((_QWORD *)v30 - 5);
      if (v32)
        goto LABEL_48;
LABEL_49:
      v30 -= 48;
      if (v30 == v29)
      {
        v31 = __p;
        goto LABEL_57;
      }
    }
    ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
    std::__shared_weak_count::__release_weak(v33);
    v32 = *((_QWORD *)v30 - 5);
    if (!v32)
      goto LABEL_49;
LABEL_48:
    (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    goto LABEL_49;
  }
LABEL_57:
  v50 = v29;
  operator delete(v31);
}

void sub_1002FD8EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;

  sub_10016BE6C(&a21);
  v35 = *(_QWORD **)(v33 - 104);
  if (v35 == (_QWORD *)(v33 - 128))
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 128);
  }
  else
  {
    if (!v35)
      goto LABEL_6;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_6:
  if (a29 < 0)
  {
    operator delete(__p);
    sub_10016BE6C(&a30);
    _Unwind_Resume(a1);
  }
  sub_10016BE6C(&a30);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FDA78(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
  {
    if (*(char *)(a1 + 71) < 0)
      operator delete(*(void **)(a1 + 48));
    *(_BYTE *)(a1 + 32) = 0;
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_1002FDAD8()
{
  operator delete();
}

__n128 sub_1002FDAEC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = off_100405600;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1002FDB24(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = off_100405600;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_1002FDB44(uint64_t a1, uint64_t *a2)
{
  sub_1002FDBC4((_QWORD *)(a1 + 8), a2);
}

uint64_t sub_1002FDB4C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_EUlRKN9event_bus21Ge"
                                "nericCallbackHandleEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_1002FDBB8()
{
}

void sub_1002FDBC4(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  void *v15[2];
  uint64_t v16;
  int v17;
  char v18;
  int v19;
  __int128 __p;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  std::__shared_weak_count *v26;

  v3 = a2[4];
  v5 = (__int128 *)*a1;
  v4 = a1[1];
  if (*(char *)(*a1 + 23) < 0)
  {
    sub_10006CED8(v15, *(void **)v5, *((_QWORD *)v5 + 1));
  }
  else
  {
    v6 = *v5;
    v16 = *((_QWORD *)v5 + 2);
    *(_OWORD *)v15 = v6;
  }
  v17 = *((_DWORD *)v5 + 6);
  v18 = 0;
  if (*((_BYTE *)v5 + 32))
  {
    v19 = *((_DWORD *)v5 + 10);
    if (*((char *)v5 + 71) < 0)
    {
      sub_10006CED8(&__p, *((void **)v5 + 6), *((_QWORD *)v5 + 7));
    }
    else
    {
      v7 = v5[3];
      v21 = *((_QWORD *)v5 + 8);
      __p = v7;
    }
    v18 = 1;
  }
  v8 = a2[1];
  v22 = *a2;
  if (v8)
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8);
  v23 = v8;
  v24 = *((_OWORD *)a2 + 1);
  v9 = (std::__shared_weak_count *)a2[5];
  v25 = a2[4];
  v26 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  sub_1002FDDBC(v3, v4, (__int128 *)v15);
  v12 = v26;
  if (v26)
  {
    v13 = (unint64_t *)&v26->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v23)
    (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
  if (v18)
  {
    if (SHIBYTE(v21) < 0)
      operator delete((void *)__p);
    v18 = 0;
  }
  if (SHIBYTE(v16) < 0)
    operator delete(v15[0]);
}

void sub_1002FDD6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002FDD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1002FDA78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002FDDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1002FDF80((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1002FDDBC(uint64_t a1, uint64_t a2, __int128 *a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *v11[2];
  char v12;
  char v13;
  void *__p;
  char v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  _BYTE v18[24];
  _BYTE *v19;

  sub_1002FE034((char *)v11, a3);
  v19 = 0;
  v5 = operator new(0x80uLL);
  *v5 = off_100405670;
  sub_1002FE558((uint64_t)(v5 + 1), (__int128 *)v11);
  v19 = v5;
  (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(_QWORD *)a1 + 16))(a1, a2, v18);
  v6 = v19;
  if (v19 == v18)
  {
    v7 = 4;
    v6 = v18;
    goto LABEL_5;
  }
  if (v19)
  {
    v7 = 5;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  v8 = v17;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  if (v13)
  {
    if (v15 < 0)
      operator delete(__p);
    v13 = 0;
  }
  if (v12 < 0)
    operator delete(v11[0]);
}

void sub_1002FDF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 48);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 72);
  }
  else
  {
    if (!v12)
    {
      sub_1002FDF80((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_1002FDF80((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FDF80(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  v2 = *(std::__shared_weak_count **)(a1 + 112);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(_QWORD *)(a1 + 80);
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(_QWORD *)(a1 + 80);
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
LABEL_7:
  if (*(_BYTE *)(a1 + 32))
  {
    if (*(char *)(a1 + 71) < 0)
      operator delete(*(void **)(a1 + 48));
    *(_BYTE *)(a1 + 32) = 0;
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

char *sub_1002FE034(char *__dst, __int128 *a2)
{
  __int128 v4;
  uint64_t v5;
  _BYTE *v6;
  __int128 v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if ((*((char *)a2 + 23) & 0x80000000) == 0)
  {
    v4 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
    *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
    __dst[32] = 0;
    if (!*((_BYTE *)a2 + 32))
      goto LABEL_3;
LABEL_6:
    *((_DWORD *)__dst + 10) = *((_DWORD *)a2 + 10);
    v6 = __dst + 48;
    if (*((char *)a2 + 71) < 0)
    {
      sub_10006CED8(v6, *((void **)a2 + 6), *((_QWORD *)a2 + 7));
    }
    else
    {
      v7 = a2[3];
      *((_QWORD *)__dst + 8) = *((_QWORD *)a2 + 8);
      *(_OWORD *)v6 = v7;
    }
    __dst[32] = 1;
    v5 = *((_QWORD *)a2 + 10);
    *((_QWORD *)__dst + 9) = *((_QWORD *)a2 + 9);
    if (!v5)
      goto LABEL_11;
    goto LABEL_10;
  }
  sub_10006CED8(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
  __dst[32] = 0;
  if (*((_BYTE *)a2 + 32))
    goto LABEL_6;
LABEL_3:
  v5 = *((_QWORD *)a2 + 10);
  *((_QWORD *)__dst + 9) = *((_QWORD *)a2 + 9);
  if (v5)
LABEL_10:
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
LABEL_11:
  *((_QWORD *)__dst + 10) = v5;
  *(_OWORD *)(__dst + 88) = *(__int128 *)((char *)a2 + 88);
  v8 = *((_QWORD *)a2 + 14);
  *((_QWORD *)__dst + 13) = *((_QWORD *)a2 + 13);
  *((_QWORD *)__dst + 14) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return __dst;
}

void sub_1002FE134(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_1002FE150(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1002FDA78(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FE164(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = off_100405670;
  v2 = *(std::__shared_weak_count **)(a1 + 120);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(_QWORD *)(a1 + 88);
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(_QWORD *)(a1 + 88);
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
LABEL_7:
  if (*(_BYTE *)(a1 + 40))
  {
    if (*(char *)(a1 + 79) < 0)
      operator delete(*(void **)(a1 + 56));
    *(_BYTE *)(a1 + 40) = 0;
  }
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_1002FE224(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = off_100405670;
  v2 = *(std::__shared_weak_count **)(a1 + 120);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(_QWORD *)(a1 + 88);
    if (!v5)
    {
LABEL_7:
      if (*(_BYTE *)(a1 + 40))
      {
        if (*(char *)(a1 + 79) < 0)
          operator delete(*(void **)(a1 + 56));
        *(_BYTE *)(a1 + 40) = 0;
      }
      if (*(char *)(a1 + 31) < 0)
        operator delete(*(void **)(a1 + 8));
      operator delete();
    }
  }
  else
  {
LABEL_5:
    v5 = *(_QWORD *)(a1 + 88);
    if (!v5)
      goto LABEL_7;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  goto LABEL_7;
}

char *sub_1002FE2E4(uint64_t a1)
{
  __int128 *v1;
  char *v2;

  v1 = (__int128 *)(a1 + 8);
  v2 = (char *)operator new(0x80uLL);
  *(_QWORD *)v2 = off_100405670;
  sub_1002FE034(v2 + 8, v1);
  return v2;
}

void sub_1002FE324(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_1002FE338(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a2 = off_100405670;
  return sub_1002FE034((char *)(a2 + 8), (__int128 *)(a1 + 8));
}

void sub_1002FE354(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  v2 = *(std::__shared_weak_count **)(a1 + 120);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(_QWORD *)(a1 + 88);
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(_QWORD *)(a1 + 88);
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
LABEL_7:
  if (*(_BYTE *)(a1 + 40))
  {
    if (*(char *)(a1 + 79) < 0)
      operator delete(*(void **)(a1 + 56));
    *(_BYTE *)(a1 + 40) = 0;
  }
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_1002FE3FC(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 15);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *((_QWORD *)__p + 11);
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *((_QWORD *)__p + 11);
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
LABEL_7:
  if (__p[40])
  {
    if (__p[79] < 0)
      operator delete(*((void **)__p + 7));
    __p[40] = 0;
  }
  if (__p[31] < 0)
    operator delete(*((void **)__p + 1));
  operator delete(__p);
}

uint64_t sub_1002FE4B0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 24);
  if (!v2)
    sub_10016CA74();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 48))(v2, a1 + 8);
}

uint64_t sub_1002FE4E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_ENKUlRKN9event_bus21GenericCal"
                     "lbackHandleEE_clES9_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_ENKUlRKN9event_bus2"
                                "1GenericCallbackHandleEE_clES9_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_ENKUlRKN9event_bus21GenericCallbackHandleEE_clES9_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_ENKUlRKN9event_bus21GenericCallbackHandleEE_clES9_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_1002FE54C()
{
}

uint64_t sub_1002FE558(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v4 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((_QWORD *)a2 + 1) = 0;
  *((_QWORD *)a2 + 2) = 0;
  *(_QWORD *)a2 = 0;
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  *(_BYTE *)(a1 + 32) = 0;
  if (*((_BYTE *)a2 + 32))
  {
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    v5 = a2[3];
    *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
    *(_OWORD *)(a1 + 48) = v5;
    *((_QWORD *)a2 + 7) = 0;
    *((_QWORD *)a2 + 8) = 0;
    *((_QWORD *)a2 + 6) = 0;
    *(_BYTE *)(a1 + 32) = 1;
  }
  v6 = *((_QWORD *)a2 + 10);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  if (v6)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  *(_QWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
  v7 = *((_QWORD *)a2 + 14);
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  *(_QWORD *)(a1 + 112) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return a1;
}

void sub_1002FE614(_Unwind_Exception *a1)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 32))
  {
    if (*(char *)(v1 + 71) < 0)
      operator delete(*(void **)(v1 + 48));
    *(_BYTE *)(v1 + 32) = 0;
  }
  sub_100344AF0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FE644(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_1002FE6AC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  operator delete();
}

_UNKNOWN **sub_1002FE714()
{
}

void sub_1002FE720()
{
  operator new();
}

uint64_t *sub_1002FE780(uint64_t a1, uint64_t a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _BYTE *v6;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  uint64_t **v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _BYTE *v27;
  __int128 *v28;
  __int128 v29;
  float v30;
  float v31;
  _QWORD *v32;
  _QWORD *v33;
  _BOOL8 v34;
  unint64_t v35;
  unint64_t v36;
  size_t prime;
  int8x8_t v38;
  unint64_t v39;
  uint8x8_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD v45[2];
  char v46;

  v6 = (_BYTE *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v9 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v9 = v8;
  }
  v10 = sub_1000CFA7C((uint64_t)v45, (uint64_t *)a2, v9);
  v11 = v10;
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      v4 = v10;
      if (v10 >= v12)
        v4 = v10 % v12;
    }
    else
    {
      v4 = (v12 - 1) & v10;
    }
    v14 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      v15 = *v14;
      if (*v14)
      {
        v16 = v6[23];
        if (v16 >= 0)
          v17 = v6[23];
        else
          v17 = *((_QWORD *)v6 + 1);
        if (v16 < 0)
          v6 = *(_BYTE **)v6;
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            v22 = v15[1];
            if (v22 == v11)
            {
              v23 = *((unsigned __int8 *)v15 + 39);
              if ((v23 & 0x80u) == 0)
                v24 = *((unsigned __int8 *)v15 + 39);
              else
                v24 = v15[3];
              if (v24 == v17)
              {
                if ((v23 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v15[2], v6, v15[3]))
                    return v15;
                }
                else
                {
                  if (!*((_BYTE *)v15 + 39))
                    return v15;
                  v25 = 0;
                  while (*((unsigned __int8 *)v15 + v25 + 16) == v6[v25])
                  {
                    if (v23 == ++v25)
                      return v15;
                  }
                }
              }
            }
            else if ((v22 & (v12 - 1)) != v4)
            {
              goto LABEL_51;
            }
            v15 = (uint64_t *)*v15;
            if (!v15)
              goto LABEL_51;
          }
        }
        do
        {
          v18 = v15[1];
          if (v18 == v11)
          {
            v19 = *((unsigned __int8 *)v15 + 39);
            if ((v19 & 0x80u) == 0)
              v20 = *((unsigned __int8 *)v15 + 39);
            else
              v20 = v15[3];
            if (v20 == v17)
            {
              if ((v19 & 0x80) != 0)
              {
                if (!memcmp((const void *)v15[2], v6, v15[3]))
                  return v15;
              }
              else
              {
                if (!*((_BYTE *)v15 + 39))
                  return v15;
                v21 = 0;
                while (*((unsigned __int8 *)v15 + v21 + 16) == v6[v21])
                {
                  if (v19 == ++v21)
                    return v15;
                }
              }
            }
          }
          else
          {
            if (v18 >= v12)
              v18 %= v12;
            if (v18 != v4)
              break;
          }
          v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
    }
  }
LABEL_51:
  v26 = (char *)operator new(0x30uLL);
  v45[0] = v26;
  v45[1] = a1 + 16;
  v46 = 0;
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = v11;
  v27 = v26 + 16;
  v28 = *a4;
  if (*((char *)*a4 + 23) < 0)
  {
    sub_10006CED8(v27, *(void **)v28, *((_QWORD *)v28 + 1));
  }
  else
  {
    v29 = *v28;
    *((_QWORD *)v26 + 4) = *((_QWORD *)v28 + 2);
    *(_OWORD *)v27 = v29;
  }
  *((_DWORD *)v26 + 10) = 0;
  v46 = 1;
  v30 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v31 = *(float *)(a1 + 32);
  if (!v12 || (float)(v31 * (float)v12) < v30)
  {
    v34 = 1;
    if (v12 >= 3)
      v34 = (v12 & (v12 - 1)) != 0;
    v35 = v34 | (2 * v12);
    v36 = vcvtps_u32_f32(v30 / v31);
    if (v35 <= v36)
      prime = v36;
    else
      prime = v35;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v38 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v38)
      goto LABEL_68;
    if (prime < *(_QWORD *)&v38)
    {
      v39 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v38 < 3uLL || (v40 = (uint8x8_t)vcnt_s8(v38), v40.i16[0] = vaddlv_u8(v40), v40.u32[0] > 1uLL))
      {
        v39 = std::__next_prime(v39);
      }
      else
      {
        v41 = 1 << -(char)__clz(v39 - 1);
        if (v39 >= 2)
          v39 = v41;
      }
      if (prime <= v39)
        prime = v39;
      if (prime < *(_QWORD *)&v38)
LABEL_68:
        sub_100005DD8(a1, prime);
    }
    v12 = *(_QWORD *)(a1 + 8);
    v42 = v12 - 1;
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
      {
        v4 = v11 % v12;
        v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v11 % v12));
        v33 = (_QWORD *)v45[0];
        if (v32)
          goto LABEL_57;
      }
      else
      {
        v4 = v11;
        v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v11);
        v33 = (_QWORD *)v45[0];
        if (v32)
          goto LABEL_57;
      }
    }
    else
    {
      v4 = v42 & v11;
      v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v42 & v11));
      v33 = (_QWORD *)v45[0];
      if (v32)
        goto LABEL_57;
    }
LABEL_81:
    *v33 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v45[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v45[0])
    {
      v43 = *(_QWORD *)(*(_QWORD *)v45[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v43 >= v12)
          v43 %= v12;
      }
      else
      {
        v43 &= v12 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v43) = v45[0];
    }
    goto LABEL_92;
  }
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  v33 = (_QWORD *)v45[0];
  if (!v32)
    goto LABEL_81;
LABEL_57:
  *v33 = *v32;
  *v32 = v45[0];
LABEL_92:
  v15 = (uint64_t *)v45[0];
  ++*(_QWORD *)(a1 + 24);
  return v15;
}

void sub_1002FEBC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000FCF60((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1002FEBD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000FCF60((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1002FEBF0(uint64_t a1, uint64_t a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _BYTE *v6;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  uint64_t **v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _BYTE *v27;
  __int128 *v28;
  __int128 v29;
  float v30;
  float v31;
  _QWORD *v32;
  _QWORD *v33;
  _BOOL8 v34;
  unint64_t v35;
  unint64_t v36;
  size_t prime;
  int8x8_t v38;
  unint64_t v39;
  uint8x8_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD v45[2];
  char v46;

  v6 = (_BYTE *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v9 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v9 = v8;
  }
  v10 = sub_1000CFA7C((uint64_t)v45, (uint64_t *)a2, v9);
  v11 = v10;
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      v4 = v10;
      if (v10 >= v12)
        v4 = v10 % v12;
    }
    else
    {
      v4 = (v12 - 1) & v10;
    }
    v14 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      v15 = *v14;
      if (*v14)
      {
        v16 = v6[23];
        if (v16 >= 0)
          v17 = v6[23];
        else
          v17 = *((_QWORD *)v6 + 1);
        if (v16 < 0)
          v6 = *(_BYTE **)v6;
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            v22 = v15[1];
            if (v22 == v11)
            {
              v23 = *((unsigned __int8 *)v15 + 39);
              if ((v23 & 0x80u) == 0)
                v24 = *((unsigned __int8 *)v15 + 39);
              else
                v24 = v15[3];
              if (v24 == v17)
              {
                if ((v23 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v15[2], v6, v15[3]))
                    return v15;
                }
                else
                {
                  if (!*((_BYTE *)v15 + 39))
                    return v15;
                  v25 = 0;
                  while (*((unsigned __int8 *)v15 + v25 + 16) == v6[v25])
                  {
                    if (v23 == ++v25)
                      return v15;
                  }
                }
              }
            }
            else if ((v22 & (v12 - 1)) != v4)
            {
              goto LABEL_51;
            }
            v15 = (uint64_t *)*v15;
            if (!v15)
              goto LABEL_51;
          }
        }
        do
        {
          v18 = v15[1];
          if (v18 == v11)
          {
            v19 = *((unsigned __int8 *)v15 + 39);
            if ((v19 & 0x80u) == 0)
              v20 = *((unsigned __int8 *)v15 + 39);
            else
              v20 = v15[3];
            if (v20 == v17)
            {
              if ((v19 & 0x80) != 0)
              {
                if (!memcmp((const void *)v15[2], v6, v15[3]))
                  return v15;
              }
              else
              {
                if (!*((_BYTE *)v15 + 39))
                  return v15;
                v21 = 0;
                while (*((unsigned __int8 *)v15 + v21 + 16) == v6[v21])
                {
                  if (v19 == ++v21)
                    return v15;
                }
              }
            }
          }
          else
          {
            if (v18 >= v12)
              v18 %= v12;
            if (v18 != v4)
              break;
          }
          v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
    }
  }
LABEL_51:
  v26 = operator new(0x40uLL);
  v45[0] = v26;
  v45[1] = a1 + 16;
  v46 = 0;
  *v26 = 0;
  v26[1] = v11;
  v27 = v26 + 2;
  v28 = *a4;
  if (*((char *)*a4 + 23) < 0)
  {
    sub_10006CED8(v27, *(void **)v28, *((_QWORD *)v28 + 1));
  }
  else
  {
    v29 = *v28;
    v26[4] = *((_QWORD *)v28 + 2);
    *(_OWORD *)v27 = v29;
  }
  v26[6] = 0;
  v26[7] = 0;
  v26[5] = v26 + 6;
  v46 = 1;
  v30 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v31 = *(float *)(a1 + 32);
  if (!v12 || (float)(v31 * (float)v12) < v30)
  {
    v34 = 1;
    if (v12 >= 3)
      v34 = (v12 & (v12 - 1)) != 0;
    v35 = v34 | (2 * v12);
    v36 = vcvtps_u32_f32(v30 / v31);
    if (v35 <= v36)
      prime = v36;
    else
      prime = v35;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v38 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v38)
      goto LABEL_68;
    if (prime < *(_QWORD *)&v38)
    {
      v39 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v38 < 3uLL || (v40 = (uint8x8_t)vcnt_s8(v38), v40.i16[0] = vaddlv_u8(v40), v40.u32[0] > 1uLL))
      {
        v39 = std::__next_prime(v39);
      }
      else
      {
        v41 = 1 << -(char)__clz(v39 - 1);
        if (v39 >= 2)
          v39 = v41;
      }
      if (prime <= v39)
        prime = v39;
      if (prime < *(_QWORD *)&v38)
LABEL_68:
        sub_100005DD8(a1, prime);
    }
    v12 = *(_QWORD *)(a1 + 8);
    v42 = v12 - 1;
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
      {
        v4 = v11 % v12;
        v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v11 % v12));
        v33 = (_QWORD *)v45[0];
        if (v32)
          goto LABEL_57;
      }
      else
      {
        v4 = v11;
        v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v11);
        v33 = (_QWORD *)v45[0];
        if (v32)
          goto LABEL_57;
      }
    }
    else
    {
      v4 = v42 & v11;
      v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v42 & v11));
      v33 = (_QWORD *)v45[0];
      if (v32)
        goto LABEL_57;
    }
LABEL_81:
    *v33 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v45[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v45[0])
    {
      v43 = *(_QWORD *)(*(_QWORD *)v45[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v43 >= v12)
          v43 %= v12;
      }
      else
      {
        v43 &= v12 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v43) = v45[0];
    }
    goto LABEL_92;
  }
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  v33 = (_QWORD *)v45[0];
  if (!v32)
    goto LABEL_81;
LABEL_57:
  *v33 = *v32;
  *v32 = v45[0];
LABEL_92:
  v15 = (uint64_t *)v45[0];
  ++*(_QWORD *)(a1 + 24);
  return v15;
}

void sub_1002FF038(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1002FF064((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1002FF04C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1002FF064((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1002FF064(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16))
    {
      sub_1000608EC(v2 + 40, *(char **)(v2 + 48));
      if (*(char *)(v2 + 39) < 0)
        operator delete(*(void **)(v2 + 16));
    }
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t *sub_1002FF0BC(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t **v6;
  int v7;
  size_t v8;
  const void *v9;
  uint64_t **v10;
  _QWORD *v11;
  const void *v12;
  const void *v13;
  int v14;
  size_t v15;
  const void *v16;
  size_t v17;
  int v18;
  _BOOL4 v19;
  int v20;
  _BOOL4 v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t *v25;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *((char *)a2 + 23);
    if (v7 >= 0)
      v8 = *((unsigned __int8 *)a2 + 23);
    else
      v8 = (size_t)a2[1];
    if (v7 >= 0)
      v9 = a2;
    else
      v9 = *a2;
    do
    {
      while (1)
      {
        v10 = (uint64_t **)v5;
        v13 = (const void *)v5[4];
        v11 = v5 + 4;
        v12 = v13;
        v14 = *((char *)v11 + 23);
        if (v14 >= 0)
          v15 = *((unsigned __int8 *)v11 + 23);
        else
          v15 = v11[1];
        if (v14 >= 0)
          v16 = v11;
        else
          v16 = v12;
        if (v15 >= v8)
          v17 = v8;
        else
          v17 = v15;
        v18 = memcmp(v9, v16, v17);
        v19 = v8 < v15;
        if (v18)
          v19 = v18 < 0;
        if (!v19)
          break;
        v5 = *v10;
        v6 = v10;
        if (!*v10)
          goto LABEL_26;
      }
      v20 = memcmp(v16, v9, v17);
      v21 = v15 < v8;
      if (v20)
        v21 = v20 < 0;
      if (!v21)
        return (uint64_t *)v10;
      v5 = v10[1];
    }
    while (v5);
    v6 = v10 + 1;
LABEL_26:
    v22 = (uint64_t *)operator new(0x38uLL);
    v23 = v22 + 4;
    if (*(char *)(a3 + 23) < 0)
      goto LABEL_29;
  }
  else
  {
    v10 = a1 + 1;
    v22 = (uint64_t *)operator new(0x38uLL);
    v23 = v22 + 4;
    if (*(char *)(a3 + 23) < 0)
    {
LABEL_29:
      sub_10006CED8(v23, *(void **)a3, *(_QWORD *)(a3 + 8));
      goto LABEL_30;
    }
  }
  *(_OWORD *)v23 = *(_OWORD *)a3;
  v23[2] = *(_QWORD *)(a3 + 16);
LABEL_30:
  *v22 = 0;
  v22[1] = 0;
  v22[2] = (uint64_t)v10;
  *v6 = v22;
  v24 = (uint64_t *)**a1;
  v25 = v22;
  if (v24)
  {
    *a1 = v24;
    v25 = *v6;
  }
  sub_1000E05F4(a1[1], v25);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v22;
}

void sub_1002FF250(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1002FF264@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1002FF294(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002FF2B0(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  char v5;
  size_t v6;
  const void *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  size_t v11;
  const void *v12;
  size_t v13;
  int v14;
  _BOOL4 v15;
  BOOL v16;
  uint64_t *v17;
  int v18;
  size_t v19;
  const void *v20;
  size_t v21;
  int v22;
  BOOL v23;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;

  v3 = a1 + 1;
  v2 = (uint64_t *)a1[1];
  if (!v2)
    return 0;
  v5 = *(_BYTE *)(a2 + 23);
  v6 = v5 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(_QWORD *)(a2 + 8);
  v7 = v5 >= 0 ? (const void *)a2 : *(const void **)a2;
  v8 = a1 + 1;
  v9 = a1[1];
  do
  {
    v10 = *(char *)(v9 + 55);
    if (v10 >= 0)
      v11 = *(unsigned __int8 *)(v9 + 55);
    else
      v11 = *(_QWORD *)(v9 + 40);
    if (v10 >= 0)
      v12 = (const void *)(v9 + 32);
    else
      v12 = *(const void **)(v9 + 32);
    if (v6 >= v11)
      v13 = v11;
    else
      v13 = v6;
    v14 = memcmp(v12, v7, v13);
    v15 = v11 < v6;
    if (v14)
      v15 = v14 < 0;
    v16 = !v15;
    if (v15)
      v17 = (uint64_t *)(v9 + 8);
    else
      v17 = (uint64_t *)v9;
    if (v16)
      v8 = (_QWORD *)v9;
    v9 = *v17;
  }
  while (*v17);
  if (v8 == v3)
    return 0;
  v18 = *((char *)v8 + 55);
  if (v18 >= 0)
    v19 = *((unsigned __int8 *)v8 + 55);
  else
    v19 = v8[5];
  if (v18 >= 0)
    v20 = v8 + 4;
  else
    v20 = (const void *)v8[4];
  if (v19 >= v6)
    v21 = v6;
  else
    v21 = v19;
  v22 = memcmp(v7, v20, v21);
  v23 = v6 < v19;
  if (v22)
    v23 = v22 < 0;
  if (v23)
    return 0;
  v25 = (_QWORD *)v8[1];
  if (v25)
  {
    do
    {
      v26 = v25;
      v25 = (_QWORD *)*v25;
    }
    while (v25);
  }
  else
  {
    v27 = v8;
    do
    {
      v26 = (_QWORD *)v27[2];
      v16 = *v26 == (_QWORD)v27;
      v27 = v26;
    }
    while (!v16);
  }
  if ((_QWORD *)*a1 == v8)
    *a1 = v26;
  --a1[2];
  sub_1002503B4(v2, v8);
  if (*((char *)v8 + 55) < 0)
    operator delete((void *)v8[4]);
  operator delete(v8);
  return 1;
}

uint64_t *sub_1002FF44C(_QWORD *a1, uint64_t a2)
{
  _BYTE *v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int8x8_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  uint64_t *result;
  uint64_t **v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v2 = (_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v5 = v4;
  }
  v6 = sub_1000CFA7C((uint64_t)&v25, (uint64_t *)a2, v5);
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = v6;
  v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = v6;
    if (v6 >= *(_QWORD *)&v7)
      v10 = v6 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v6;
  }
  v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    v13 = *v12;
    if (*v12)
    {
      v14 = v2[23];
      if (v14 >= 0)
        v15 = v2[23];
      else
        v15 = *((_QWORD *)v2 + 1);
      if (v14 < 0)
        v2 = *(_BYTE **)v2;
      if (v9.u32[0] < 2uLL)
      {
        v16 = *(_QWORD *)&v7 - 1;
        while (1)
        {
          v21 = v13[1];
          if (v21 == v8)
          {
            v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0)
              v23 = *((unsigned __int8 *)v13 + 39);
            else
              v23 = v13[3];
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3]))
                  return v13;
              }
              else
              {
                if (!*((_BYTE *)v13 + 39))
                  return v13;
                v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24)
                    return v13;
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          result = 0;
          v13 = (uint64_t *)*v13;
          if (!v13)
            return result;
        }
      }
      while (1)
      {
        v17 = v13[1];
        if (v17 == v8)
        {
          v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0)
            v19 = *((unsigned __int8 *)v13 + 39);
          else
            v19 = v13[3];
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3]))
                return v13;
            }
            else
            {
              if (!*((_BYTE *)v13 + 39))
                return v13;
              v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20)
                  return v13;
              }
            }
          }
        }
        else
        {
          if (v17 >= *(_QWORD *)&v7)
            v17 %= *(_QWORD *)&v7;
          if (v17 != v10)
            return 0;
        }
        result = 0;
        v13 = (uint64_t *)*v13;
        if (!v13)
          return result;
      }
    }
  }
  return 0;
}

uint64_t *sub_1002FF678(_QWORD *a1, uint64_t a2)
{
  _BYTE *v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int8x8_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  uint64_t *result;
  uint64_t **v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v2 = (_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v5 = v4;
  }
  v6 = sub_1000CFA7C((uint64_t)&v25, (uint64_t *)a2, v5);
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = v6;
  v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = v6;
    if (v6 >= *(_QWORD *)&v7)
      v10 = v6 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v6;
  }
  v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    v13 = *v12;
    if (*v12)
    {
      v14 = v2[23];
      if (v14 >= 0)
        v15 = v2[23];
      else
        v15 = *((_QWORD *)v2 + 1);
      if (v14 < 0)
        v2 = *(_BYTE **)v2;
      if (v9.u32[0] < 2uLL)
      {
        v16 = *(_QWORD *)&v7 - 1;
        while (1)
        {
          v21 = v13[1];
          if (v21 == v8)
          {
            v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0)
              v23 = *((unsigned __int8 *)v13 + 39);
            else
              v23 = v13[3];
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3]))
                  return v13;
              }
              else
              {
                if (!*((_BYTE *)v13 + 39))
                  return v13;
                v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24)
                    return v13;
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          result = 0;
          v13 = (uint64_t *)*v13;
          if (!v13)
            return result;
        }
      }
      while (1)
      {
        v17 = v13[1];
        if (v17 == v8)
        {
          v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0)
            v19 = *((unsigned __int8 *)v13 + 39);
          else
            v19 = v13[3];
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3]))
                return v13;
            }
            else
            {
              if (!*((_BYTE *)v13 + 39))
                return v13;
              v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20)
                  return v13;
              }
            }
          }
        }
        else
        {
          if (v17 >= *(_QWORD *)&v7)
            v17 %= *(_QWORD *)&v7;
          if (v17 != v10)
            return 0;
        }
        result = 0;
        v13 = (uint64_t *)*v13;
        if (!v13)
          return result;
      }
    }
  }
  return 0;
}

uint64_t sub_1002FF8A4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1002FF900()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1002FF95C()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t sub_1002FF970@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  void *v7;
  void *v8[2];
  char v9;
  std::string __p;

  v3 = *(_QWORD *)(result + 8);
  if (!v3)
  {
    sub_1000D5048(v8, "");
    sub_10023DB34("Attempt to access event buses before they were set", &__p);
    sub_100174738((uint64_t)v8, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v9 < 0)
      operator delete(v8[0]);
    sub_10015AD4C((uint64_t)&v7);
  }
  v4 = *(_QWORD *)(result + 16);
  *a2 = v3;
  a2[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

void sub_1002FFA68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1002FFAAC@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  _QWORD *result;

  v2 = &_dispatch_main_q;
  result = operator new(0x30uLL);
  result[1] = 0;
  result[2] = 0;
  *result = off_100405828;
  result[3] = off_100405878;
  result[4] = &_dispatch_main_q;
  result[5] = &stru_1004057B0;
  *a1 = result + 3;
  a1[1] = result;
  return result;
}

void sub_1002FFB0C(_Unwind_Exception *a1)
{

  _Unwind_Resume(a1);
}

void sub_1002FFB28(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSArray *v6;
  void *v7;
  id v8;
  const char *v9;
  size_t v10;
  std::string::size_type v11;
  std::string *p_dst;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16[2];
  char v17;
  std::string __p;
  std::string __dst;
  char v20;

  if (*(_BYTE *)(a1 + 24))
  {
    v3 = a1 + 32;
    v4 = a1 + 64;
    v5 = (char *)operator new(0x48uLL);
    *((_QWORD *)v5 + 1) = 0;
    *((_QWORD *)v5 + 2) = 0;
    *(_QWORD *)v5 = off_100405990;
    sub_100300A90((int)&__dst, v5 + 24, v3, v4);
    *a2 = v5 + 24;
    a2[1] = v5;
    return;
  }
  v6 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectAtIndex:", 0)));
  v9 = (const char *)objc_msgSend(v8, "UTF8String");
  v10 = strlen(v9);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    p_dst = (std::string *)operator new(v13 + 1);
    __dst.__r_.__value_.__l.__size_ = v11;
    __dst.__r_.__value_.__r.__words[2] = v14 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_10;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v10;
  p_dst = &__dst;
  if (v10)
LABEL_10:
    memmove(p_dst, v9, v11);
  p_dst->__r_.__value_.__s.__data_[v11] = 0;
  v17 = 4;
  strcpy((char *)v16, "base");
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    sub_10006CED8(&__p, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  else
    __p = __dst;
  sub_1000675EC(&__p, (uint64_t)v16);
  v15 = (char *)operator new(0x48uLL);
  *((_QWORD *)v15 + 1) = 0;
  *((_QWORD *)v15 + 2) = 0;
  *(_QWORD *)v15 = off_100405990;
  sub_100300A90((int)&v20, v15 + 24, (uint64_t)&__p, (uint64_t)&__dst);
  *a2 = v15 + 24;
  a2[1] = v15;
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((v17 & 0x80000000) == 0)
      goto LABEL_16;
LABEL_19:
    operator delete(v16[0]);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_17;
LABEL_20:
    operator delete(__dst.__r_.__value_.__l.__data_);
    goto LABEL_17;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (v17 < 0)
    goto LABEL_19;
LABEL_16:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_20;
LABEL_17:

}

void sub_1002FFD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  void *v28;
  void *v29;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((a28 & 0x80000000) == 0)
      goto LABEL_6;
  }
  else if ((a28 & 0x80000000) == 0)
  {
LABEL_6:

    _Unwind_Resume(a1);
  }
  operator delete(a23);

  _Unwind_Resume(a1);
}

void sub_1002FFDF0(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 *v8;
  void **v9;
  __int128 v10;
  __int128 v11;

  v6 = a1 + 88;
  if (*(char *)(a1 + 111) < 0)
    operator delete(*(void **)v6);
  v7 = *a2;
  *(_QWORD *)(v6 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)v6 = v7;
  *((_BYTE *)a2 + 23) = 0;
  *(_BYTE *)a2 = 0;
  if (*(_BYTE *)a3)
  {
    v8 = (__int128 *)(a3 + 8);
    v9 = (void **)(a1 + 120);
    if (*(_BYTE *)(a1 + 112))
    {
      if (*(char *)(a1 + 143) < 0)
        operator delete(*v9);
      v10 = *v8;
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a3 + 24);
      *(_OWORD *)v9 = v10;
      *(_BYTE *)(a3 + 31) = 0;
      *(_BYTE *)(a3 + 8) = 0;
    }
    else
    {
      v11 = *v8;
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a3 + 24);
      *(_OWORD *)v9 = v11;
      *(_QWORD *)(a3 + 16) = 0;
      *(_QWORD *)(a3 + 24) = 0;
      *(_QWORD *)v8 = 0;
      *(_BYTE *)(a1 + 112) = 1;
    }
  }
  else if (*(_BYTE *)(a1 + 112))
  {
    if (*(char *)(a1 + 143) < 0)
      operator delete(*(void **)(a1 + 120));
    *(_BYTE *)(a1 + 112) = 0;
  }
}

void sub_1002FFEF8(char *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  uint64_t v14;

  v4 = a1 + 88;
  if (a1[111] < 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", *v4));
    if (a1[112])
      goto LABEL_3;
LABEL_7:
    v7 = 0;
    goto LABEL_8;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v4));
  if (!a1[112])
    goto LABEL_7;
LABEL_3:
  v6 = a1 + 120;
  if (a1[143] < 0)
    v6 = (_QWORD *)*v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v6));
LABEL_8:
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "pathForResource:ofType:", v5, v7));

  if (v9)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v9));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "absoluteString"));
    v12 = v11;
    if (v11)
    {
      objc_msgSend(v11, "ps_STLString");
      *(_OWORD *)(a2 + 8) = v13;
      *(_QWORD *)(a2 + 24) = v14;
      *(_BYTE *)a2 = 1;
    }
    else
    {
      *(_BYTE *)a2 = 0;
    }

  }
  else
  {
    *(_BYTE *)a2 = 0;
  }

}

void sub_100300038(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_100300060(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100300078(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100300088(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003000A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003000B4(uint64_t a1)
{
  sub_1000C8754(a1);
  operator delete();
}

id sub_1003000D8()
{
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1004057F8);
  return (id)qword_100417EE0;
}

void sub_100300124(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

void sub_100300154(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100405828;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100300164(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100405828;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_100300194(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1003001A4(uint64_t a1)
{

  return a1;
}

void sub_1003001D4(uint64_t a1)
{

  operator delete();
}

void sub_100300214(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *__p[2];
  uint64_t v13;
  _QWORD v14[3];
  _QWORD *v15;
  id v16;
  _QWORD block[4];
  __int128 v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE *v21;
  id v22;

  v5 = *(NSObject **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100300508;
  block[3] = &unk_1004058D0;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_10006CED8(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v13 = *(_QWORD *)(a2 + 16);
  }
  v6 = v14;
  v7 = a3[3];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v15 = (_QWORD *)v7;
    goto LABEL_9;
  }
  v15 = v14;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v14);
LABEL_9:
  v16 = objc_retainBlock(*(id *)(a1 + 16));
  if (SHIBYTE(v13) < 0)
  {
    sub_10006CED8(&v18, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    v18 = *(_OWORD *)__p;
    v19 = v13;
  }
  v8 = v20;
  v9 = (uint64_t)v15;
  if (!v15)
    goto LABEL_15;
  if (v15 != v14)
  {
    v9 = (*(uint64_t (**)(void))(*v15 + 16))();
LABEL_15:
    v21 = (_BYTE *)v9;
    goto LABEL_17;
  }
  v21 = v20;
  (*(void (**)(_QWORD *, _BYTE *))(v14[0] + 24))(v14, v20);
LABEL_17:
  v22 = objc_retainBlock(v16);
  dispatch_async(v5, block);

  if (v15 == v14)
  {
    v10 = 4;
  }
  else
  {
    if (!v15)
      goto LABEL_22;
    v10 = 5;
    v6 = v15;
  }
  (*(void (**)(_QWORD *))(*v6 + 8 * v10))(v6);
LABEL_22:
  if (SHIBYTE(v13) < 0)
    operator delete(__p[0]);

  if (v21 == v20)
  {
    v11 = 4;
  }
  else
  {
    if (!v21)
      goto LABEL_29;
    v11 = 5;
    v8 = v21;
  }
  (*(void (**)(_QWORD *))(*v8 + 8 * v11))(v8);
LABEL_29:
  if (SHIBYTE(v19) < 0)
    operator delete((void *)v18);
}

void sub_100300448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100300654((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10030045C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  sub_100300654((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100300480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003004A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v3;
  _QWORD block[7];

  v3 = *(NSObject **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100300994;
  block[3] = &unk_100405900;
  block[4] = a2;
  block[5] = a3;
  block[6] = a1;
  dispatch_sync(v3, block);
}

void sub_100300508(uint64_t a1)
{
  sub_1003006CC((uint64_t)"async", a1 + 32, a1 + 56, *(void **)(a1 + 88));
}

id sub_100300520(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  id result;

  if (*(char *)(a2 + 55) < 0)
  {
    sub_10006CED8((_BYTE *)(a1 + 32), *(void **)(a2 + 32), *(_QWORD *)(a2 + 40));
    v5 = *(_QWORD *)(a2 + 80);
    if (!v5)
      goto LABEL_7;
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
    v5 = *(_QWORD *)(a2 + 80);
    if (!v5)
      goto LABEL_7;
  }
  if (v5 == a2 + 56)
  {
    *(_QWORD *)(a1 + 80) = a1 + 56;
    (*(void (**)(_QWORD))(**(_QWORD **)(a2 + 80) + 24))(*(_QWORD *)(a2 + 80));
    goto LABEL_9;
  }
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
LABEL_7:
  *(_QWORD *)(a1 + 80) = v5;
LABEL_9:
  result = objc_retainBlock(*(id *)(a2 + 88));
  *(_QWORD *)(a1 + 88) = result;
  return result;
}

void sub_1003005CC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 55) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_1003005E8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(a1 + 80);
  if (v2 == (_QWORD *)(a1 + 56))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 56);
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
}

uint64_t sub_100300654(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(a1 + 48);
  if (v2 == (_QWORD *)(a1 + 24))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 24);
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_1003006CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v5;
  uint64_t v6;
  void (**v7)(void);

  v7 = a4;
  v5 = objc_autoreleasePoolPush();
  v7[2]();
  v6 = *(_QWORD *)(a3 + 24);
  if (!v6)
    sub_10016CA74();
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 48))(v6);
  objc_autoreleasePoolPop(v5);

}

void sub_100300778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

void sub_100300780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, int buf, __int128 a17, uint64_t a18)
{
  uint64_t *v18;
  void *v20;
  id v21;
  NSObject *v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t *v25;

  if (a2)
  {
    if (a2 == 3)
    {
      __cxa_begin_catch(a1);
      sub_10016A398();
    }
    v20 = __cxa_begin_catch(a1);
    v21 = sub_1003000D8();
    v22 = objc_claimAutoreleasedReturnValue(v21);
    v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);
    if (a2 == 2)
    {
      if (v23)
      {
        if (*((char *)v18 + 23) < 0)
          v18 = (uint64_t *)*v18;
        v24 = (*(uint64_t (**)(void *))(*(_QWORD *)v20 + 16))(v20);
        buf = 136315650;
        WORD2(a17) = 2080;
        *(_QWORD *)((char *)&a17 + 6) = v18;
        HIWORD(a17) = 2080;
        a18 = v24;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "Unhandled unwrapped exception executing %s task %s on GL thread: %s", (uint8_t *)&buf, 0x20u);
      }

      __cxa_rethrow();
    }
    if (v23)
    {
      if (*((char *)v18 + 23) >= 0)
        v25 = v18;
      else
        v25 = (uint64_t *)*v18;
      buf = 136315394;
      WORD2(a17) = 2080;
      *(_QWORD *)((char *)&a17 + 6) = v25;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "Unknown unhandled exception executing %s task %s on GL thread", (uint8_t *)&buf, 0x16u);
    }

    __cxa_rethrow();
  }
  _Unwind_Resume(a1);
}

void sub_100300934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  __cxa_end_catch();

  JUMPOUT(0x10030098CLL);
}

void sub_100300940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  __cxa_end_catch();

  JUMPOUT(0x10030098CLL);
}

void sub_10030094C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x10030096CLL);
}

void sub_100300978(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_1000CDD68(a1);
  _Unwind_Resume(a1);
}

void sub_100300994(uint64_t *a1)
{
  sub_1003006CC((uint64_t)"sync", a1[4], a1[5], *(void **)(a1[6] + 16));
}

__n128 sub_1003009AC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[2];
  a1[3].n128_u64[0] = a2[3].n128_u64[0];
  a1[2] = result;
  return result;
}

void sub_1003009C0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100405940;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003009D0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100405940;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_100300A00(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100405990;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100300A10(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100405990;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_100300A40(uint64_t a1)
{
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(*(void **)(a1 + 24));
    return;
  }
  operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0)
    goto LABEL_5;
}

void sub_100300A90(int a1, char *__dst, uint64_t a3, uint64_t a4)
{
  void *__p[2];
  uint64_t v7;
  void *__dsta[2];
  uint64_t v9;

  if (*(char *)(a3 + 23) < 0)
  {
    sub_10006CED8(__dsta, *(void **)a3, *(_QWORD *)(a3 + 8));
    if ((*(char *)(a4 + 23) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    *(_OWORD *)__dsta = *(_OWORD *)a3;
    v9 = *(_QWORD *)(a3 + 16);
    if ((*(char *)(a4 + 23) & 0x80000000) == 0)
    {
LABEL_3:
      *(_OWORD *)__p = *(_OWORD *)a4;
      v7 = *(_QWORD *)(a4 + 16);
      goto LABEL_6;
    }
  }
  sub_10006CED8(__p, *(void **)a4, *(_QWORD *)(a4 + 8));
LABEL_6:
  sub_10030C9CC(__dst, (__int128 *)__dsta, (__int128 *)__p);
  if ((SHIBYTE(v7) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v9) & 0x80000000) == 0)
      return;
LABEL_10:
    operator delete(__dsta[0]);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v9) < 0)
    goto LABEL_10;
}

void sub_100300B54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if ((a21 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100300BA0(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, unsigned int *a5, _QWORD *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE v15[24];
  _BYTE *v16;

  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1004059E0;
  v8 = *a3;
  v9 = *a4;
  v10 = *a5;
  v11 = a6[3];
  if (!v11)
    goto LABEL_4;
  if ((_QWORD *)v11 != a6)
  {
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
LABEL_4:
    v16 = (_BYTE *)v11;
    goto LABEL_6;
  }
  v16 = v15;
  (*(void (**)(_QWORD *, _BYTE *))(*a6 + 24))(a6, v15);
LABEL_6:
  sub_1000C8250(a1 + 3, a2, v8, v9, v10, v15);
  v12 = v16;
  if (v16 == v15)
  {
    v13 = 4;
    v12 = v15;
    goto LABEL_10;
  }
  if (v16)
  {
    v13 = 5;
LABEL_10:
    (*(void (**)(void))(*v12 + 8 * v13))();
  }
  return a1;
}

void sub_100300CB0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100300CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  std::__shared_weak_count *v13;
  char *v14;
  char *v16;
  uint64_t v17;

  v16 = a13;
  if (a13 == v14)
  {
    v17 = 4;
    v16 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v17 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v16 + 8 * v17))();
LABEL_6:
  std::__shared_weak_count::~__shared_weak_count(v13);
  _Unwind_Resume(a1);
}

void sub_100300D04(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004059E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100300D14(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004059E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_100300D44()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100300DA0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100300DFC()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

const std::locale::facet *sub_100300E10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  const std::locale *v3;
  uint64_t i;
  unsigned __int8 *v5;
  uint64_t v6;
  const std::locale::facet *result;
  void *__p[2];
  void *v9[2];
  char v10;
  std::string v11;
  __int128 v12;
  uint64_t v13;

  sub_10016E418(a1);
  v2 = *(unsigned __int8 *)(a1 + 23);
  if ((v2 & 0x80u) != 0)
    v2 = *(_QWORD *)(a1 + 8);
  if (v2 != 12)
  {
    sub_1000D5048(v9, "");
    sub_100170980("Improperly formatted wifi mac address", &v11);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_10006CED8(&v12, *(void **)a1, *(_QWORD *)(a1 + 8));
    }
    else
    {
      v12 = *(_OWORD *)a1;
      v13 = *(_QWORD *)(a1 + 16);
    }
    sub_100174738((uint64_t)v9, (uint64_t)&v11, 2);
    if (SHIBYTE(v13) < 0)
    {
      operator delete((void *)v12);
      if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_27:
        if ((v10 & 0x80000000) == 0)
          goto LABEL_28;
LABEL_31:
        operator delete(v9[0]);
LABEL_28:
        sub_1000F2AE4((uint64_t)__p);
      }
    }
    else if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_27;
    }
    operator delete(v11.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_28;
    goto LABEL_31;
  }
  v3 = std::locale::classic();
  for (i = 0; i != 12; ++i)
  {
    if (*(char *)(a1 + 23) >= 0)
      v5 = (unsigned __int8 *)a1;
    else
      v5 = *(unsigned __int8 **)a1;
    v6 = v5[i];
    result = std::locale::use_facet(v3, &std::ctype<char>::id);
    if ((v6 & 0x80) != 0 || (*((_DWORD *)&result[1].~facet + v6) & 0x10000) == 0)
    {
      sub_1000D5048(v9, "");
      sub_100170980("Improperly formatted wifi mac address", &v11);
      if (*(char *)(a1 + 23) < 0)
      {
        sub_10006CED8(&v12, *(void **)a1, *(_QWORD *)(a1 + 8));
      }
      else
      {
        v12 = *(_OWORD *)a1;
        v13 = *(_QWORD *)(a1 + 16);
      }
      sub_100174738((uint64_t)v9, (uint64_t)&v11, 2);
      if (SHIBYTE(v13) < 0)
      {
        operator delete((void *)v12);
        if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_17:
          if ((v10 & 0x80000000) == 0)
            goto LABEL_18;
LABEL_21:
          operator delete(v9[0]);
LABEL_18:
          sub_1000F2AE4((uint64_t)__p);
        }
      }
      else if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_17;
      }
      operator delete(v11.__r_.__value_.__l.__data_);
      if ((v10 & 0x80000000) == 0)
        goto LABEL_18;
      goto LABEL_21;
    }
  }
  return result;
}

void sub_10030107C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a27 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (*(char *)(v27 + 23) < 0)
    operator delete(*(void **)v27);
  _Unwind_Resume(exception_object);
}

void sub_1003010F4(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[DarwinDeviceInfo currentDevice](DarwinDeviceInfo, "currentDevice"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "name"));
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "ps_STLString");

  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;

  }
}

void sub_100301170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100301188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030119C()
{
  operator delete();
}

uint64_t sub_1003011B0()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030120C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100301268()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100301330(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100301340(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030182C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100301840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,std::bad_cast a22)
{
  uint64_t v22;
  void *v24;

  v24 = *(void **)v22;
  if (*(_QWORD *)v22)
  {
    *(_QWORD *)(v22 + 8) = v24;
    operator delete(v24);
    if ((a21 & 0x80000000) == 0)
      goto LABEL_3;
  }
  else if ((a21 & 0x80000000) == 0)
  {
LABEL_3:
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_100301AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;
  void *v11;
  void *v12;
  void **v13;

  if (*(char *)(v10 + 55) < 0)
    operator delete(*v13);

  if (*(char *)(v10 + 23) < 0)
  {
    operator delete(*(void **)v10);

    _Unwind_Resume(a1);
  }

  _Unwind_Resume(a1);
}

void sub_100301C20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_100301C50()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100301CAC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100301D08()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100301D1C(_QWORD *a1@<X8>)
{
  sub_100016654(a1);
  operator new();
}

void sub_100301FD4()
{
  operator delete();
}

void sub_100302084(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302098(_QWORD *a1@<X8>)
{
  sub_100016654(a1);
  operator new();
}

void sub_1003021D8()
{
  operator delete();
}

void sub_100302240(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302254(_QWORD *a1@<X8>)
{
  sub_100016654(a1);
  operator new();
}

void sub_100302394()
{
  operator delete();
}

void sub_1003023FC(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302410(_QWORD *a1@<X8>)
{
  sub_100016654(a1);
  operator new();
}

void sub_100302550()
{
  operator delete();
}

void sub_1003025B8(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_1003025CC(_QWORD *a1@<X8>)
{
  sub_100016654(a1);
  operator new();
}

void sub_1003027AC()
{
  operator delete();
}

void sub_10030283C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302850(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302864(_QWORD *a1@<X8>)
{
  sub_100016654(a1);
  operator new();
}

void sub_100302A1C()
{
  operator delete();
}

void sub_100302A90(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302AA4(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302AB8(_QWORD *a1@<X8>)
{
  sub_100016654(a1);
  operator new();
}

void sub_100302C7C()
{
  operator delete();
}

void sub_100302CF0(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302D04(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302D18(_QWORD *a1@<X8>)
{
  sub_100016654(a1);
  operator new();
}

void sub_100302EF8()
{
  operator delete();
}

void sub_100302F88(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100302F9C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100302FB0(unsigned int *a1)
{
  if (*a1 - 1 >= 3)
    return 0;
  else
    return *a1;
}

void sub_100302FC4(uint64_t a1@<X1>, char a2@<W4>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  double v14;
  int v15;
  __int16 v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  _BOOL4 v21;
  void *v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  int v37;
  __int128 *v38;
  _QWORD v39[2];
  unsigned __int8 v40;
  void *__p[3];

  v5 = 0;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned __int8 *)(a1 + 20);
  v8 = *(unsigned __int8 *)(a1 + 21);
  v40 = 0;
  if ((*(_BYTE *)(a1 + 104) & 2) != 0)
  {
    if (*(char *)(a1 + 47) < 0)
    {
      sub_10006CED8(__p, *(void **)(a1 + 24), *(_QWORD *)(a1 + 32));
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)(a1 + 24);
      __p[2] = *(void **)(a1 + 40);
    }
    v5 = 1;
    v40 = 1;
  }
  v9 = *(__int16 *)(a1 + 48);
  v35 = 0uLL;
  v36 = 0;
  v11 = *(char **)(a1 + 56);
  v10 = *(char **)(a1 + 64);
  v12 = v10 - v11;
  if (v10 != v11)
  {
    if (v12 < 0)
      sub_1000D02C0();
    *(_QWORD *)&v35 = operator new(v10 - v11);
    *((_QWORD *)&v35 + 1) = v35;
    v36 = v35 + 4 * (v12 >> 2);
    v38 = &v35;
    do
    {
      v37 = *(_DWORD *)v11;
      sub_10022CFEC((uint64_t *)&v38, &v37);
      v11 += 4;
    }
    while (v11 != v10);
    v5 = v40;
  }
  v13 = *(unsigned __int8 *)(a1 + 104);
  v14 = *(double *)(a1 + 88);
  if ((v13 & 4) == 0)
    v14 = NAN;
  if (*(_BYTE *)(a1 + 96))
    v15 = 1;
  else
    v15 = 2;
  v16 = *(unsigned __int8 *)(a1 + 97);
  v17 = v13 & 0x40;
  v18 = *(unsigned int *)(a1 + 100);
  v19 = (v13 >> 6) & 1;
  v20 = *(_BYTE *)(a1 + 98) != 0;
  v21 = *(unsigned __int8 *)(a1 + 80) == 0;
  v22 = (void *)((unint64_t)*(unsigned int *)(a1 + 16) << 32);
  if ((v13 & 1) != 0)
    v23 = (unint64_t)*(unsigned int *)(a1 + 16) << 32;
  else
    v23 = 0;
  if (v5)
  {
    v22 = __p[0];
    v39[0] = __p[1];
    *(void **)((char *)v39 + 7) = *(void **)((char *)&__p[1] + 7);
    a2 = HIBYTE(__p[2]);
    memset(__p, 0, sizeof(__p));
  }
  v24 = v15 & ((int)((_DWORD)v13 << 28) >> 31);
  v25 = v23 & 0xFFFFFFFFFFFFFFFELL | v13 & 1;
  v26 = (v13 & 0x10) >> 4;
  v27 = v35;
  v28 = v36;
  v29 = v18 << 32;
  v30 = v20 & (v13 >> 5);
  if (v17)
    v31 = v29;
  else
    v31 = 0;
  v32 = v31 | v19;
  *(_BYTE *)a3 = 0;
  v33 = v26 | (v16 << 8);
  if (v5)
  {
    v34 = v39[0];
    *(_QWORD *)(a3 + 8) = v22;
    *(_QWORD *)(a3 + 16) = v34;
    *(_QWORD *)(a3 + 23) = *(_QWORD *)((char *)v39 + 7);
    *(_BYTE *)(a3 + 31) = a2;
    *(_BYTE *)a3 = 1;
  }
  *(_QWORD *)(a3 + 32) = v6;
  *(_QWORD *)(a3 + 40) = v9;
  *(_QWORD *)(a3 + 48) = v25;
  *(_DWORD *)(a3 + 56) = v7 == 0;
  *(_DWORD *)(a3 + 60) = v8;
  *(_OWORD *)(a3 + 64) = v27;
  *(_QWORD *)(a3 + 80) = v28;
  *(_DWORD *)(a3 + 88) = v21;
  *(double *)(a3 + 96) = v14;
  *(_DWORD *)(a3 + 104) = v24;
  *(_WORD *)(a3 + 108) = v33;
  *(_QWORD *)(a3 + 112) = v32;
  *(_BYTE *)(a3 + 120) = v30;
  if (v40)
  {
    if (SHIBYTE(__p[2]) < 0)
      operator delete(__p[0]);
  }
}

void sub_100303224(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_1000CDD68(a1);
  _Unwind_Resume(a1);
}

uint64_t sub_10030323C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v6;
  __int128 v7;
  _BYTE v9[8];
  void *__p[2];
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;

  sub_100302FC4(a2, a5, (uint64_t)v9);
  *(_BYTE *)a1 = 0;
  v6 = v9[0];
  if (v9[0])
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)__p;
    *(_QWORD *)(a1 + 24) = v11;
    __p[1] = 0;
    v11 = 0;
    __p[0] = 0;
    *(_BYTE *)a1 = 1;
  }
  v7 = v13;
  *(_OWORD *)(a1 + 32) = v12;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_OWORD *)(a1 + 88) = v16;
  *(_OWORD *)(a1 + 104) = v17;
  *(_BYTE *)(a1 + 120) = v18;
  if (v6 && SHIBYTE(v11) < 0)
    operator delete(__p[0]);
  return a1;
}

int32x2_t sub_10030330C@<D0>(uint64_t a1@<X0>, int32x2_t *a2@<X8>, uint64_t a3@<D0>)
{
  float64x2_t v3;
  int32x2_t result;

  v3 = *(float64x2_t *)a1;
  v3.f64[1] = *(float64_t *)(a1 + 24);
  result = vrev64_s32(vmovn_s64(vcvtq_s64_f64(vrndpq_f64(vdivq_f64(vsubq_f64(*(float64x2_t *)(a1 + 8), v3), (float64x2_t)vdupq_lane_s64(a3, 0))))));
  *a2 = result;
  return result;
}

double sub_100303340(_QWORD *a1, double *a2)
{
  double result;

  result = *a2;
  *a1 = *(_QWORD *)a2;
  return result;
}

uint64_t sub_10030334C(_DWORD *a1, int *a2, int *a3)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;

  v3 = *a2;
  if (*a2 < 0)
    return 0xFFFFFFFFLL;
  v4 = *a3;
  if (*a3 < 0)
    return 0xFFFFFFFFLL;
  v5 = a1[1];
  if (v3 >= v5)
    return 0xFFFFFFFFLL;
  v6 = v3 + v5 * v4;
  if (v4 < *a1)
    return v6;
  else
    return 0xFFFFFFFFLL;
}

uint64_t sub_100303388(uint64_t a1, uint64_t a2, uint64_t __x)
{
  uint64_t result;

  result = div(__x, *(unsigned int *)(a1 + 4)).quot;
  *(_QWORD *)(a2 + 16) = __ROR8__(result, 32);
  return result;
}

void sub_1003033B8(long double a1)
{
  fmod(a1, 6.28318531);
}

float64x2_t **sub_100303410(float64x2_t **a1, double a2)
{
  float64x2_t *v3;
  uint64_t v4;
  double v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  float64x2_t *v10;
  float64x2_t v11;
  unint64_t v12;
  double *v13;
  long double v14;
  float64x2_t v16;
  float64x2_t __x;
  long double v19;

  v3 = *a1;
  v4 = (char *)a1[1] - (char *)*a1;
  if (v4)
  {
    v5 = a2;
    v6 = v4 >> 3;
    if (v6 <= 1)
      v7 = 1;
    else
      v7 = v6;
    if (v7 < 2)
    {
      v8 = 0;
LABEL_10:
      v12 = v7 - v8;
      v13 = &v3->f64[v8];
      do
      {
        v14 = exp(*v13 - v5);
        v5 = a2;
        *v13++ = v14;
        --v12;
      }
      while (v12);
      return a1;
    }
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    v16 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&a2, 0);
    v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
    v10 = *a1;
    do
    {
      __x = vsubq_f64(*v10, v16);
      v19 = exp(__x.f64[1]);
      v11.f64[0] = exp(__x.f64[0]);
      v11.f64[1] = v19;
      *v10++ = v11;
      v9 -= 2;
    }
    while (v9);
    v5 = a2;
    if (v7 != v8)
      goto LABEL_10;
  }
  return a1;
}

uint64_t sub_1003034F4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100303550()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003035AC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100303608()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

double *sub_100303664(double *result, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v10;
  void *__p;
  void *v12[2];
  char v13;
  std::string v14;
  std::string v15;
  std::string v16;
  std::string v17;

  v2 = *a2;
  v3 = result[1];
  if (*result >= *a2)
    v2 = *result;
  *result = v2;
  v4 = a2[1];
  if (v4 >= v3)
    v4 = v3;
  result[1] = v4;
  v5 = a2[3];
  v6 = result[2];
  if (result[3] >= v5)
    v5 = result[3];
  result[3] = v5;
  v7 = a2[2];
  if (v7 >= v6)
    v7 = v6;
  result[2] = v7;
  if (v2 >= v4 || v5 >= v7)
  {
    v10 = (uint64_t)result;
    sub_1000D5048(v12, "");
    sub_100227518("Please check intersects() first. new this=", &v14);
    sub_100304008(v10, &v15);
    sub_1001E2F54(", input other=", &v16);
    sub_100304008((uint64_t)a2, &v17);
    sub_100174738((uint64_t)v12, (uint64_t)&v14, 4);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v17.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_15:
        if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_16;
        goto LABEL_22;
      }
    }
    else if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_15;
    }
    operator delete(v16.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_23;
    }
LABEL_22:
    operator delete(v15.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_17:
      if ((v13 & 0x80000000) == 0)
        goto LABEL_18;
LABEL_24:
      operator delete(v12[0]);
LABEL_18:
      sub_1000F2AE4((uint64_t)&__p);
    }
LABEL_23:
    operator delete(v14.__r_.__value_.__l.__data_);
    if ((v13 & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_24;
  }
  return result;
}

void sub_100303810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100303854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  void **v16;

  while (1)
  {
    if (*((char *)v16 - 1) < 0)
      operator delete(*(v16 - 3));
    v16 -= 3;
    if (v16 == (void **)&a16)
      JUMPOUT(0x100303830);
  }
}

BOOL sub_100303880(double *a1, double *a2)
{
  return *a1 < a2[1] && a1[1] > *a2 && a1[3] < a2[2] && a1[2] > a2[3];
}

double sub_1003038CC@<D0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v20;
  double v23;

  v4 = a4.n128_f64[0] * -0.5;
  v5 = *a1 - a4.n128_f64[0] * -0.5;
  v6 = a4.n128_f64[0] * -0.5 + a1[1];
  if (v5 < v6 && (v7 = v4 + a1[2], v8 = a1[3] - v4, v8 < v7))
  {
    v9 = *(double *)(a2 + 8);
    if (v9 >= v5 && v9 <= v6)
    {
      v23 = *(double *)(a2 + 16);
      if (v23 >= v8 && v23 <= v7)
      {
        a4.n128_u64[0] = sub_1001A2040(a3, a2).n128_u64[0];
        return a4.n128_f64[0];
      }
    }
  }
  else
  {
    v9 = *(double *)(a2 + 8);
    v7 = NAN;
    v5 = NAN;
    v6 = NAN;
    v8 = NAN;
  }
  *(_QWORD *)a3 = off_1003F9A68;
  *(_BYTE *)(a3 + 24) &= 0xFCu;
  v10 = v9 - a4.n128_f64[0];
  v11 = *(double *)(a2 + 16);
  v12 = v11 - a4.n128_f64[0];
  *(double *)(a3 + 8) = v9 - a4.n128_f64[0];
  *(double *)(a3 + 16) = v11 - a4.n128_f64[0];
  if (v9 - a4.n128_f64[0] >= v5)
  {
    if (v10 <= v6 && v12 >= v8 && v12 <= v7)
      return a4.n128_f64[0];
    v13 = v11 + a4.n128_f64[0];
    *(double *)(a3 + 16) = v13;
    v20 = v10 > v6 || v13 < v8;
    if (!v20 && v13 <= v7)
      return a4.n128_f64[0];
  }
  else
  {
    v13 = v11 + a4.n128_f64[0];
  }
  a4.n128_f64[0] = v9 + a4.n128_f64[0];
  *(_QWORD *)(a3 + 8) = a4.n128_u64[0];
  *(double *)(a3 + 16) = v12;
  if (a4.n128_f64[0] < v5
    || (a4.n128_f64[0] <= v6 ? (v14 = v12 < v8) : (v14 = 1),
        !v14 ? (v15 = v12 > v7) : (v15 = 1),
        v15
     && ((*(double *)(a3 + 16) = v13, a4.n128_f64[0] <= v6) ? (v16 = v13 < v8) : (v16 = 1),
         !v16 ? (v17 = v13 > v7) : (v17 = 1),
         v17)))
  {
    a4 = (__n128)vdupq_n_s64(0x7FF4000000000000uLL);
    *(__n128 *)(a3 + 8) = a4;
  }
  return a4.n128_f64[0];
}

BOOL sub_1003039E4(double *a1, uint64_t a2)
{
  double v2;
  double v4;

  v2 = *(double *)(a2 + 8);
  if (v2 < *a1)
    return 0;
  if (v2 > a1[1])
    return 0;
  v4 = *(double *)(a2 + 16);
  return v4 >= a1[3] && v4 <= a1[2];
}

BOOL sub_100303A38(double *a1)
{
  if (fabs(*a1) == INFINITY)
    return 1;
  if (fabs(a1[1]) == INFINITY)
    return 1;
  if (fabs(a1[2]) == INFINITY)
    return 1;
  return fabs(a1[3]) == INFINITY;
}

double *sub_100303AA8@<X0>(double *result@<X0>, uint64_t (***a2)()@<X1>, uint64_t a3@<X8>)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t (**v12)();
  double v13;
  double v14;
  char v15;

  v3 = *((double *)a2 + 1);
  v4 = *result;
  if (v3 <= *result)
  {
    v5 = result[3];
    if (*((double *)a2 + 2) <= v5)
    {
      *(_QWORD *)a3 = off_1003F9A68;
      *(_BYTE *)(a3 + 24) &= 0xFCu;
      *(double *)(a3 + 8) = v4;
      *(double *)(a3 + 16) = v5;
      return result;
    }
  }
  v6 = result[1];
  if (v3 >= v6)
  {
    v7 = *((double *)a2 + 2);
    v8 = result[3];
    if (v7 <= v8 || (v8 = result[2], v7 >= v8))
    {
      *(_QWORD *)a3 = off_1003F9A68;
      *(_BYTE *)(a3 + 24) &= 0xFCu;
      *(double *)(a3 + 8) = v6;
      *(double *)(a3 + 16) = v8;
      return result;
    }
  }
  if (v3 <= v4)
  {
    v9 = result[2];
    if (*((double *)a2 + 2) >= v9)
    {
      *(_QWORD *)a3 = off_1003F9A68;
      *(_BYTE *)(a3 + 24) &= 0xFCu;
      *(double *)(a3 + 8) = v4;
      *(double *)(a3 + 16) = v9;
      return result;
    }
  }
  v13 = 0.0;
  v14 = 0.0;
  v12 = off_1003F9A68;
  v15 = 0;
  if (v3 >= v4)
  {
    if (v3 <= v6)
    {
      v11 = *((double *)a2 + 2);
      v10 = result[2];
      if (v11 <= v10)
      {
        v10 = result[3];
        if (v11 >= v10)
          goto LABEL_19;
      }
      v13 = v3;
    }
    else
    {
      v13 = v6;
      v10 = *((double *)a2 + 2);
    }
  }
  else
  {
    v13 = v4;
    v10 = *((double *)a2 + 2);
  }
  v14 = v10;
  a2 = &v12;
LABEL_19:
  sub_1001A2040(a3, (uint64_t)a2);
  return (double *)nullsub_23(&v12);
}

void sub_100303C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_23(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100303C44@<X0>(double *a1@<X0>, uint64_t (***a2)()@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  __n128 v7;
  _BYTE v9[32];

  sub_100303AA8(a1, a2, (uint64_t)v9);
  v7.n128_f64[0] = a4;
  sub_1003038CC(a1, (uint64_t)v9, a3, v7);
  return nullsub_23(v9);
}

void sub_100303C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_23(&a9);
  _Unwind_Resume(a1);
}

double sub_100303CB0@<D0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double result;
  void *__p;
  void *v9[2];
  char v10;
  std::string v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  if (*a1 >= v3 || v5 >= v4)
  {
    sub_1000D5048(v9, "");
    sub_1002FF264("Rectangle has no middle", &v11);
    sub_100174738((uint64_t)v9, (uint64_t)&v11, 1);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v11.__r_.__value_.__l.__data_);
      if ((v10 & 0x80000000) == 0)
        goto LABEL_7;
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_7;
    }
    operator delete(v9[0]);
LABEL_7:
    sub_1000F2AE4((uint64_t)&__p);
  }
  *(_QWORD *)a2 = off_1003F9A68;
  *(_BYTE *)(a2 + 24) &= 0xFCu;
  result = (v2 + v3) * 0.5;
  *(double *)(a2 + 8) = result;
  *(double *)(a2 + 16) = (v4 + v5) * 0.5;
  return result;
}

void sub_100303DF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100303E34(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = off_1003F9A68;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) &= 0xFCu;
  *(double *)(a3 + 8) = (*(double (**)(uint64_t, double, double))(*(_QWORD *)a2 + 24))(a2, *a1, a1[1]);
  *(double *)(a3 + 16) = (*(double (**)(uint64_t, double, double))(*(_QWORD *)a2 + 24))(a2, a1[3], a1[2]);
}

void sub_100303EB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_23(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100303ECC(double *a1, double *a2)
{
  if (*a1 > *a2)
    return 0;
  if (a1[1] < a2[1])
    return 0;
  if (a1[2] >= a2[2])
    return a1[3] <= a2[3];
  return 0;
}

_QWORD *sub_100303F28(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (**v10)();
  __int128 v11;
  char v12;
  _QWORD v13[3];
  char v14;

  v3 = sub_1000F0508(a1, (uint64_t)"UniversalRect2d(bottomLeft=", 27);
  v13[0] = off_1003F9A68;
  v14 = 0;
  v4 = *(_QWORD *)(a2 + 24);
  v13[1] = *(_QWORD *)a2;
  v13[2] = v4;
  v5 = sub_1001A206C(v3, (uint64_t)v13);
  v6 = sub_1000F0508(v5, (uint64_t)", topRight=", 11);
  v10 = off_1003F9A68;
  v12 = 0;
  v11 = *(_OWORD *)(a2 + 8);
  v7 = sub_1001A206C(v6, (uint64_t)&v10);
  v8 = sub_1000F0508(v7, (uint64_t)")", 1);
  nullsub_23(&v10);
  nullsub_23(v13);
  return v8;
}

void sub_100303FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  nullsub_23(&a9);
  nullsub_23(&a13);
  _Unwind_Resume(a1);
}

void sub_100303FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  nullsub_23(va);
  _Unwind_Resume(a1);
}

uint64_t sub_100304008@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t result;
  std::bad_cast v3;
  _UNKNOWN **v4;
  _UNKNOWN **v5;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  result = sub_1003040A4(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v3);
  }
  return result;
}

void sub_100304078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  uint64_t v10;

  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0)
    operator delete(*(void **)v10);
  _Unwind_Resume(a1);
}

uint64_t sub_1003040A4(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_100303F28(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_100304310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100304344(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10030435C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003043B8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

double sub_100304418(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_100304420(uint64_t a1)
{
  return *(double *)(a1 + 16) / *(double *)(a1 + 8);
}

std::string *sub_10030442C@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10030445C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100304478()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003044D4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100304530(double *a1, uint64_t a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  long double v12;
  __double2 v13;
  double v15[4];

  v3 = *a1;
  v4 = *(double *)(a2 + 8);
  v5 = *(double *)(a2 + 16);
  sub_1001A2040((uint64_t)v15, *(_QWORD *)a1 + 32);
  v6 = v15[2];
  v7 = (v4 - v15[1]) / *(double *)(*(_QWORD *)&v3 + 64);
  a1[2] = v7;
  v8 = (double)*(int *)(*(_QWORD *)&v3 + 16);
  v9 = (v5 - v6) * v8 / *(double *)(*(_QWORD *)&v3 + 64);
  a1[3] = v9;
  v10 = *(double *)(*(_QWORD *)&v3 + 80);
  if (v10 != 0.0)
  {
    v11 = hypot(v7, v9);
    v12 = atan2(v9, v7);
    v13 = __sincos_stret(v12 - v8 * v10);
    a1[2] = v11 * v13.__cosval;
    a1[3] = v11 * v13.__sinval;
  }
  return nullsub_23(v15);
}

double *sub_1003045F8(double *a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  sub_100304530(a1, a3);
  return a1;
}

void sub_10030462C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
    sub_100344030(v3);
  _Unwind_Resume(exception_object);
}

void sub_100304644(uint64_t a1, long double *a2, double *a3, double a4, double a5)
{
  double v10;
  double v11;
  double v12;
  double v13;
  long double v14;
  double v15;
  long double v16;
  __double2 v17;
  double v18[4];

  sub_1001A2040((uint64_t)v18, a1 + 32);
  v10 = v18[2];
  *a2 = (a4 - v18[1]) / *(double *)(a1 + 64);
  v11 = (double)*(int *)(a1 + 16);
  v12 = (a5 - v10) * v11 / *(double *)(a1 + 64);
  *a3 = v12;
  v13 = *(double *)(a1 + 80);
  if (v13 != 0.0)
  {
    v14 = *a2;
    v15 = hypot(*a2, v12);
    v16 = atan2(v12, v14);
    v17 = __sincos_stret(v16 - v11 * v13);
    *a2 = v15 * v17.__cosval;
    *a3 = v15 * v17.__sinval;
  }
  nullsub_23(v18);
}

uint64_t sub_100304724()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100304780()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1003047DC()
{
  operator delete();
}

uint64_t sub_1003047F0(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  *(_QWORD *)result = off_100405AE8;
  if (*(char *)(result + 47) < 0)
  {
    operator delete(*(void **)(result + 24));
    return v1;
  }
  return result;
}

void sub_10030483C(uint64_t a1)
{
  *(_QWORD *)a1 = off_100405AE8;
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  operator delete();
}

std::string *sub_100304888(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 1, a2);
}

uint64_t sub_100304890(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t result;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "PowerEvent");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "utcTimestampNanos", 10, 2);
  v11 = v10 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 16));
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "description", 11, 3);
  LODWORD(a1) = v13 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 24);
  LODWORD(a1) = a1 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  LODWORD(a1) = v12 + a1 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = a1 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_100304A4C(uint64_t result, __int128 *a2, int a3, unint64_t a4)
{
  uint64_t v5;
  __int128 v6;
  unint64_t v7;
  unsigned int disk_set_symlink_physical;

  v5 = result;
  v6 = *a2;
  *(_QWORD *)(result + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)result = v6;
  *((_QWORD *)a2 + 1) = 0;
  *((_QWORD *)a2 + 2) = 0;
  *(_QWORD *)a2 = 0;
  v7 = HIDWORD(a4);
  switch(a3)
  {
    case 0:
      *(_QWORD *)(result + 24) = archive_read_new();
      *(_QWORD *)(v5 + 32) = a4;
      *(_DWORD *)(v5 + 40) = 0;
      sub_100304B94(v5, v7);
      goto LABEL_3;
    case 1:
      *(_QWORD *)(result + 24) = archive_write_new();
      *(_QWORD *)(v5 + 32) = a4;
      *(_DWORD *)(v5 + 40) = 1;
      sub_100304C68(v5, v7);
      goto LABEL_3;
    case 2:
      *(_QWORD *)(result + 24) = archive_read_disk_new();
      *(_QWORD *)(v5 + 32) = a4;
      *(_DWORD *)(v5 + 40) = 2;
      disk_set_symlink_physical = archive_read_disk_set_symlink_physical();
      sub_1003062A4(v5, disk_set_symlink_physical, "Failed to set to physical");
      goto LABEL_3;
    case 3:
      *(_QWORD *)(result + 24) = archive_write_disk_new();
      *(_QWORD *)(v5 + 32) = a4;
      *(_DWORD *)(v5 + 40) = 3;
      archive_write_disk_set_options();
LABEL_3:
      result = v5;
      break;
    default:
      *(_QWORD *)(result + 32) = a4;
      *(_DWORD *)(result + 40) = a3;
      break;
  }
  return result;
}

void sub_100304B54(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100304B94(uint64_t result, int a2)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int support_filter_xz;
  unsigned int support_format_zip;
  unsigned int support_format_raw;
  unsigned int support_filter_gzip;

  v2 = result;
  switch(a2)
  {
    case 2:
      support_format_zip = archive_read_support_format_zip(*(_QWORD *)(result + 24));
      return sub_1003061B8(v2, support_format_zip, "Failed to setup file for zip format");
    case 1:
      support_format_raw = archive_read_support_format_raw(*(_QWORD *)(result + 24));
      sub_100305EF4(v2, support_format_raw, "Failed to setup raw gz file format");
      support_filter_gzip = archive_read_support_filter_gzip(*(_QWORD *)(v2 + 24));
      return sub_1003060CC(v2, support_filter_gzip, "Failed to setup file for gzip compression");
    case 0:
      v3 = archive_read_support_format_raw(*(_QWORD *)(result + 24));
      sub_100305EF4(v2, v3, "Failed to setup raw xz file format");
      support_filter_xz = archive_read_support_filter_xz(*(_QWORD *)(v2 + 24));
      return sub_100305FE0(v2, support_filter_xz, "Failed to setup file for xz compression");
  }
  return result;
}

uint64_t sub_100304C68(uint64_t result, int a2)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  _BYTE v6[24];
  _BYTE v7[24];
  std::string v8;
  std::runtime_error v9;

  v2 = result;
  switch(a2)
  {
    case 2:
      v3 = archive_write_set_format_zip(*(_QWORD *)(result + 24));
      return sub_100305844(v2, v3, "Failed to set archive as zip");
    case 0:
      v4 = archive_write_add_filter_xz(*(_QWORD *)(result + 24));
      sub_100305FE0(v2, v4, "Failed to set archive as xz file format");
      __cxa_allocate_exception(0x40uLL);
      sub_1000D5048(&v8, "cannot write gzip archive at the moment");
      std::runtime_error::runtime_error(&v9, &v8);
      v9.__vftable = (std::runtime_error_vtbl *)&off_1003EF600;
      sub_10018D04C((uint64_t)v6);
      sub_1000EF6D4(&v9, (uint64_t)"void ArchiveHandle::setupArchiveWrite(Archive::Kind)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/archive_handle.cpp", 358, (uint64_t)v6);
    case 1:
      v5 = archive_write_add_filter_gzip(*(_QWORD *)(result + 24));
      sub_100305FE0(v2, v5, "Failed to set archive as gz file format");
      __cxa_allocate_exception(0x40uLL);
      sub_1000D5048(&v8, "cannot write gzip archive at the moment");
      std::runtime_error::runtime_error(&v9, &v8);
      v9.__vftable = (std::runtime_error_vtbl *)&off_1003EF600;
      sub_10018D04C((uint64_t)v7);
      sub_1000EF6D4(&v9, (uint64_t)"void ArchiveHandle::setupArchiveWrite(Archive::Kind)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/archive_handle.cpp", 349, (uint64_t)v7);
  }
  return result;
}

void sub_100304E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error((std::runtime_error *)(v21 - 48));
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(a1);
}

void sub_100304E94(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 24))
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
      case 2:
        sub_10030503C((uint64_t *)a1);
        return;
      case 1:
      case 3:
        if (qword_100417ED8 == -1)
        {
          v2 = qword_100417EE0;
          if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
            goto LABEL_9;
        }
        else
        {
          dispatch_once(&qword_100417ED8, &stru_100405B28);
          v2 = qword_100417EE0;
          if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
            goto LABEL_9;
        }
        v3 = a1;
        if (*(char *)(a1 + 23) < 0)
          v3 = *(_QWORD *)a1;
        v4 = 136315138;
        v5 = v3;
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "WARNING: File %s not gracefully closed - closing", (uint8_t *)&v4, 0xCu);
LABEL_9:
        sub_10030530C(a1);
        break;
      default:
        return;
    }
  }
}

uint64_t sub_100304FF4(uint64_t a1)
{
  sub_100304E94(a1);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10030503C(uint64_t *a1)
{
  uint64_t *v1;
  int close;
  NSObject *v3;
  uint64_t *v4;
  int free;
  uint64_t v6;
  const char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint32_t v10;
  uint64_t v11;
  void *__p;
  _BYTE buf[12];
  __int16 v14;
  int v15;
  char v16;

  v1 = a1;
  if (((*((_DWORD *)a1 + 10) - 1) & 0xFFFFFFFD) == 0)
  {
    sub_1000D5048(buf, "");
    sub_100174738((uint64_t)buf, 0, 0);
    if (v16 < 0)
      operator delete(*(void **)buf);
    sub_1000F2AE4((uint64_t)&__p);
  }
  if (!a1[3])
  {
    if (qword_100417ED8 == -1)
    {
      v11 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        return;
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_100405B28);
      v11 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        return;
    }
    *(_WORD *)buf = 0;
    v7 = "WARNING: Archive already closed for reading";
    v8 = v11;
    v9 = OS_LOG_TYPE_INFO;
    v10 = 2;
    goto LABEL_18;
  }
  close = archive_read_close();
  if (close)
  {
    if (qword_100417ED8 == -1)
    {
      v3 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
        goto LABEL_9;
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_100405B28);
      v3 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
        goto LABEL_9;
    }
    v4 = v1;
    if (*((char *)v1 + 23) < 0)
      v4 = (uint64_t *)*v1;
    *(_DWORD *)buf = 136380931;
    *(_QWORD *)&buf[4] = v4;
    v14 = 1024;
    v15 = close;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to close handle for %{private}s: %d", buf, 0x12u);
  }
LABEL_9:
  free = archive_read_free(v1[3]);
  v1[3] = 0;
  if (!free)
    return;
  if (qword_100417ED8 == -1)
  {
    v6 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_12;
  }
  dispatch_once(&qword_100417ED8, &stru_100405B28);
  v6 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
LABEL_12:
    if (*((char *)v1 + 23) < 0)
      v1 = (uint64_t *)*v1;
    *(_DWORD *)buf = 136380931;
    *(_QWORD *)&buf[4] = v1;
    v14 = 1024;
    v15 = free;
    v7 = "Failed to finish reading %{private}s: %d";
    v8 = v6;
    v9 = OS_LOG_TYPE_ERROR;
    v10 = 18;
LABEL_18:
    _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, buf, v10);
  }
}

void sub_1003052E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10030530C(uint64_t a1)
{
  unsigned int v2;
  NSObject *v3;
  void *__p;
  uint8_t buf[8];
  char v6;

  if (((*(_DWORD *)(a1 + 40) - 1) & 0xFFFFFFFD) != 0)
  {
    sub_1000D5048(buf, "");
    sub_100174738((uint64_t)buf, 0, 0);
    if (v6 < 0)
      operator delete(*(void **)buf);
    sub_1000F2AE4((uint64_t)&__p);
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v2 = archive_write_close();
    sub_100305A1C(a1, v2, "Failed to close archive");
    archive_read_free(*(_QWORD *)(a1 + 24));
    *(_QWORD *)(a1 + 24) = 0;
    return;
  }
  if (qword_100417ED8 == -1)
  {
    v3 = qword_100417EE0;
    if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
    {
LABEL_7:
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "WARNING: Archive already closed for writing", buf, 2u);
    }
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_100405B28);
    v3 = qword_100417EE0;
    if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
      goto LABEL_7;
  }
}

void sub_10030544C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100305494(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int open_filename;
  __int32 v5;
  int v6;
  __int32 v7;
  __int32 *v8;
  __int32 *v9;
  int v10;
  __int32 *v11;
  __int32 *v12;
  __int32 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  _BYTE v20[24];
  std::runtime_error v21;
  std::string v22;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v3 = a1;
      if (*(char *)(a1 + 23) < 0)
        v3 = *(_QWORD *)a1;
      open_filename = archive_read_open_filename(v2, v3, 0x2000);
      sub_100305758(a1, open_filename, "Failed to open file for reading");
      if (*(_BYTE *)(a1 + 32))
      {
        v5 = archive_filter_code(*(_QWORD *)(a1 + 24), 0);
        v6 = *(_DWORD *)(a1 + 36);
        LODWORD(v21.__vftable) = v5;
        if (v6 != 2)
        {
          v7 = v5;
          v8 = (__int32 *)operator new(4uLL);
          v9 = v8;
          if (v6 == 1)
            v10 = 1;
          else
            v10 = 6;
          *v8 = v10;
          v11 = v8 + 1;
          v22.__r_.__value_.__l.__size_ = (std::string::size_type)(v8 + 1);
          v22.__r_.__value_.__r.__words[2] = (std::string::size_type)(v8 + 1);
          v22.__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
          v12 = wmemchr(v8, v7, 1uLL);
          if (v12)
            v13 = v12;
          else
            v13 = v11;
          if ((char *)v13 - (char *)v9 != 4
            || (sub_1003063BC(a1, 0x16u, "Expected compression code one of ", (unsigned int **)&v22, ", instead ", (int *)&v21), (v9 = (__int32 *)v22.__r_.__value_.__r.__words[0]) != 0))
          {
            v22.__r_.__value_.__l.__size_ = (std::string::size_type)v9;
            operator delete(v9);
          }
        }
      }
      break;
    case 1:
      v14 = *(_QWORD *)(a1 + 24);
      v15 = a1;
      if (*(char *)(a1 + 23) < 0)
        v15 = *(_QWORD *)a1;
      v16 = archive_write_open_filename(v14, v15);
      sub_100305844(a1, v16, "Failed open file for writing");
      break;
    case 2:
      __cxa_allocate_exception(0x40uLL);
      sub_1000D5048(&v22, "Cannot open a directory for reading");
      std::runtime_error::runtime_error(&v21, &v22);
      v21.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
      sub_10018D04C((uint64_t)v20);
      sub_1000F2F7C(&v21, (uint64_t)"void ArchiveHandle::open()", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/archive_handle.cpp", 211, (uint64_t)v20);
    case 3:
      v17 = *(_QWORD *)(a1 + 24);
      v18 = a1;
      if (*(char *)(a1 + 23) < 0)
        v18 = *(_QWORD *)a1;
      v19 = archive_write_open_filename(v17, v18);
      sub_100305930(a1, v19, "Failed to open directory for writing");
      break;
    default:
      return;
  }
}

void sub_1003056B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, std::runtime_error a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a12);
  if (a18 < 0)
    operator delete(a13);
  _Unwind_Resume(a1);
}

uint64_t sub_100305758(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  uint64_t v3;
  const void *v5;
  void *__p;
  char v7;
  std::string v8;

  if (a2)
  {
    v3 = result;
    v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_100174738((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (v7 < 0)
      operator delete(__p);
    sub_100305B08(v3, a2, &v5);
  }
  return result;
}

void sub_100305814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100305844(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  uint64_t v3;
  const void *v5;
  void *__p;
  char v7;
  std::string v8;

  if (a2)
  {
    v3 = result;
    v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_100174738((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (v7 < 0)
      operator delete(__p);
    sub_100305B08(v3, a2, &v5);
  }
  return result;
}

void sub_100305900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100305930(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  uint64_t v3;
  const void *v5;
  void *__p;
  char v7;
  std::string v8;

  if (a2)
  {
    v3 = result;
    v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_100174738((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (v7 < 0)
      operator delete(__p);
    sub_100305B08(v3, a2, &v5);
  }
  return result;
}

void sub_1003059EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100305A1C(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  uint64_t v3;
  const void *v5;
  void *__p;
  char v7;
  std::string v8;

  if (a2)
  {
    v3 = result;
    v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_100174738((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (v7 < 0)
      operator delete(__p);
    sub_100305B08(v3, a2, &v5);
  }
  return result;
}

void sub_100305AD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100305B08(uint64_t a1, uint64_t a2, const void **a3)
{
  int v5;
  _BOOL4 v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  int v10;
  size_t v11;
  unint64_t v12;
  std::string *p_dst;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  const std::string::value_type *v17;
  std::string *v18;
  __int128 v19;
  uint64_t v20;
  _BYTE v21[24];
  _DWORD v22[2];
  uint64_t (***v23)();
  uint64_t v24;
  std::string __dst;
  __int128 v26;
  std::string::size_type v27;
  _BYTE v28[48];

  v5 = archive_errno(*(_QWORD *)(a1 + 24));
  if ((unint64_t)qword_100417F98 >> 1 == 0x595588BD12BF6FE8)
    v6 = v5 != 0;
  else
    v6 = ((BOOL (*)(uint64_t, int))boost::system::detail::system_cat_holder<void>::instance[6])((uint64_t)&boost::system::detail::system_cat_holder<void>::instance, v5);
  if (v6)
    v7 = 3;
  else
    v7 = 2;
  std::system_category();
  v8 = atomic_load((unsigned __int8 *)&qword_100419090);
  if ((v8 & 1) == 0 && __cxa_guard_acquire(&qword_100419090))
  {
    __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_100419088, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_100419090);
  }
  v9 = archive_error_string(*(_QWORD *)(a1 + 24));
  __cxa_allocate_exception(0x60uLL);
  v10 = *((char *)a3 + 23);
  if (v10 >= 0)
    v11 = *((unsigned __int8 *)a3 + 23);
  else
    v11 = (size_t)a3[1];
  v12 = v11 + 2;
  if (v11 + 2 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v20 = v7;
  if (v12 >= 0x17)
  {
    v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v14 = v12 | 7;
    v15 = v14 + 1;
    p_dst = (std::string *)operator new(v14 + 1);
    __dst.__r_.__value_.__l.__size_ = v11 + 2;
    __dst.__r_.__value_.__r.__words[2] = v15 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = &__dst;
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v11 + 2;
    if (!v11)
      goto LABEL_23;
  }
  if (v10 >= 0)
    v16 = a3;
  else
    v16 = *a3;
  memmove(p_dst, v16, v11);
LABEL_23:
  strcpy((char *)p_dst + v11, ": ");
  if (v9)
    v17 = (const std::string::value_type *)v9;
  else
    v17 = "";
  v18 = std::string::append(&__dst, v17);
  v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v27 = v18->__r_.__value_.__r.__words[2];
  v26 = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  v22[0] = v5;
  v22[1] = 0;
  v23 = &boost::system::detail::system_cat_holder<void>::instance;
  v24 = v20;
  boost::filesystem::filesystem_error::filesystem_error(v28, &v26, v22);
  sub_10018D04C((uint64_t)v21);
  sub_1001798D4((uint64_t)v28, (uint64_t)"void ArchiveHandle::throw_err(int, const std::string &) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/archive_handle.cpp", 301, (uint64_t)v21);
}

void sub_100305DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39)
{
  void *v39;
  uint64_t v40;
  uint64_t v42;

  *(_QWORD *)(v40 - 136) = &off_1003EDD90;
  v42 = *(_QWORD *)(v40 - 128);
  if (v42 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v42 + 32))(v42))
    *(_QWORD *)(v40 - 128) = 0;
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(v40 - 184));
  if (__p)
  {
    operator delete(__p);
    boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)&a39);
    if ((a38 & 0x80000000) == 0)
    {
LABEL_9:
      if (a32 < 0)
        operator delete(a27);
      __cxa_free_exception(v39);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)&a39);
    if ((a38 & 0x80000000) == 0)
      goto LABEL_9;
  }
  operator delete(a33);
  goto LABEL_9;
}

void sub_100305EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;

  if (a29 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v29);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100305EA8);
}

void sub_100305EDC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100305EF4(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  uint64_t v3;
  const void *v5;
  void *__p;
  char v7;
  std::string v8;

  if (a2)
  {
    v3 = result;
    v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_100174738((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (v7 < 0)
      operator delete(__p);
    sub_100305B08(v3, a2, &v5);
  }
  return result;
}

void sub_100305FB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100305FE0(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  uint64_t v3;
  const void *v5;
  void *__p;
  char v7;
  std::string v8;

  if (a2)
  {
    v3 = result;
    v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_100174738((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (v7 < 0)
      operator delete(__p);
    sub_100305B08(v3, a2, &v5);
  }
  return result;
}

void sub_10030609C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003060CC(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  uint64_t v3;
  const void *v5;
  void *__p;
  char v7;
  std::string v8;

  if (a2)
  {
    v3 = result;
    v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_100174738((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (v7 < 0)
      operator delete(__p);
    sub_100305B08(v3, a2, &v5);
  }
  return result;
}

void sub_100306188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003061B8(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  uint64_t v3;
  const void *v5;
  void *__p;
  char v7;
  std::string v8;

  if (a2)
  {
    v3 = result;
    v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_100174738((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (v7 < 0)
      operator delete(__p);
    sub_100305B08(v3, a2, &v5);
  }
  return result;
}

void sub_100306274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003062A4(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  uint64_t v3;
  const void *v5;
  void *__p;
  char v7;
  std::string v8;

  if (a2)
  {
    v3 = result;
    v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_100174738((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (v7 < 0)
      operator delete(__p);
    sub_100305B08(v3, a2, &v5);
  }
  return result;
}

void sub_100306360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100306390(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_1003063BC(uint64_t result, unsigned int a2, std::string::value_type *__s, unsigned int **a4, const std::string::value_type *a5, int *a6)
{
  std::string *p_p;
  int v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  std::string *v13;
  std::bad_cast *v14;
  unint64_t v15;
  std::string::value_type *v16;
  __int128 *v17;
  std::string::size_type *v18;
  unint64_t v19;
  __int128 v20;
  std::string::value_type v21;
  uint64_t v22;
  void *v26;
  char v27;
  int v28;
  char *v29;
  char v30;
  int v31;
  std::string v32;
  std::string v33;
  std::string v34;
  std::string __p;
  std::bad_cast v36;
  _UNKNOWN **v37;
  _UNKNOWN **v38;
  char *v39;
  char *v40;

  if (a2)
  {
    v22 = result;
    v27 = 0;
    LOBYTE(v26) = 0;
    memset(&v32, 0, sizeof(v32));
    std::string::assign(&v32, __s);
    memset(&v33, 0, sizeof(v33));
    if ((sub_100306738(a4, &v33) & 1) == 0)
    {
      v14 = std::bad_cast::bad_cast(&v36);
      v36.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)v14);
    }
    memset(&v34, 0, sizeof(v34));
    std::string::assign(&v34, a5);
    p_p = &__p;
    memset(&__p, 0, sizeof(__p));
    v39 = (char *)&v36.__vftable + 2;
    v40 = (char *)&v38 + 7;
    v8 = *a6;
    if (*a6 >= 0)
      v9 = *a6;
    else
      v9 = -v8;
    v28 = v9;
    v29 = (char *)&v38 + 7;
    v30 = 48;
    v31 = 48;
    v10 = sub_10000EDD4((uint64_t)&v28);
    v11 = (_QWORD *)v10;
    if (v8 < 0)
    {
      *(_BYTE *)(v10 - 1) = 45;
      v11 = (_QWORD *)(v10 - 1);
    }
    v39 = (char *)v11;
    v40 = (char *)&v38 + 7;
    v12 = (char *)((char *)&v38 + 7 - (char *)v11);
    if ((unint64_t)((char *)&v38 + 7 - (char *)v11) >= 0x17)
    {
      std::string::__grow_by(&__p, 0x16uLL, (std::string::size_type)(v12 - 22), 0, 0, 0, 0);
      __p.__r_.__value_.__l.__size_ = 0;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if (v11 == (_UNKNOWN ***)((char *)&v38 + 7))
    {
      v13 = p_p;
    }
    else
    {
      v15 = (char *)&v36 - (char *)v11 + 23;
      if (v15 < 0x20 || (unint64_t)((char *)p_p - (char *)v11) < 0x20)
      {
        v13 = p_p;
        v16 = (std::string::value_type *)v11;
      }
      else
      {
        v13 = (std::string *)((char *)p_p + (v15 & 0xFFFFFFFFFFFFFFE0));
        v16 = (char *)v11 + (v15 & 0xFFFFFFFFFFFFFFE0);
        v17 = (__int128 *)(v11 + 2);
        v18 = &p_p->__r_.__value_.__r.__words[2];
        v19 = v15 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v20 = *v17;
          *((_OWORD *)v18 - 1) = *(v17 - 1);
          *(_OWORD *)v18 = v20;
          v17 += 2;
          v18 += 4;
          v19 -= 32;
        }
        while (v19);
        if (v15 == (v15 & 0xFFFFFFFFFFFFFFE0))
          goto LABEL_22;
      }
      do
      {
        v21 = *v16++;
        v13->__r_.__value_.__s.__data_[0] = v21;
        v13 = (std::string *)((char *)v13 + 1);
      }
      while (v16 != (char *)&v38 + 7);
    }
LABEL_22:
    v13->__r_.__value_.__s.__data_[0] = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      __p.__r_.__value_.__l.__size_ = (char *)&v38 + 7 - (char *)v11;
    else
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = v12 & 0x7F;
    sub_100174738((uint64_t)&v26, (uint64_t)&v32, 4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_27;
    }
    else if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_27:
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_28;
      goto LABEL_34;
    }
    operator delete(v34.__r_.__value_.__l.__data_);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    {
LABEL_28:
      operator delete(v33.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_29;
      goto LABEL_35;
    }
LABEL_34:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_29:
      if ((v27 & 0x80000000) == 0)
        goto LABEL_31;
      goto LABEL_30;
    }
LABEL_35:
    operator delete(v32.__r_.__value_.__l.__data_);
    if ((v27 & 0x80000000) == 0)
LABEL_31:
      sub_100305B08(v22, a2, (const void **)&v36.__vftable);
LABEL_30:
    operator delete(v26);
    goto LABEL_31;
  }
  return result;
}

void sub_100306694(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (*(char *)(v42 - 73) < 0)
  {
    operator delete(*(void **)(v42 - 96));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100306738(unsigned int **a1, std::string *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  std::string *v9;
  std::string::size_type size;
  std::string::size_type v11;
  unint64_t v12;
  unint64_t v13;
  std::string *v14;
  char *v15;
  __int128 *v16;
  std::string::size_type *v17;
  unint64_t v18;
  __int128 v19;
  std::string::value_type v20;
  __n128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void *__p[2];
  __int128 v27;
  uint64_t v28;
  void (__cdecl **v29)(std::ostream *__hidden);
  std::ios_base v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v28 = 0;
  *(_OWORD *)__p = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  std::streambuf::basic_streambuf(&v22);
  *(_OWORD *)__p = 0u;
  v27 = 0u;
  LODWORD(v28) = 24;
  *(_QWORD *)&v24 = 0;
  v23 = 0uLL;
  v22.n128_u64[0] = (unint64_t)off_1003EFE30;
  std::ios_base::init(&v30, &v22);
  v31 = 0;
  v32 = -1;
  v34 = (char *)&v33;
  v35 = (char *)&v33 + 2;
  sub_100306990(&v22, a1);
  v5 = v4;
  if ((v4 & 1) != 0)
  {
    v7 = v34;
    v6 = v35;
    v8 = v35 - v34;
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v12 = a2->__r_.__value_.__r.__words[2];
      v11 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v11 >= v8)
      {
        v13 = HIBYTE(v12);
LABEL_9:
        if ((v13 & 0x80u) == 0)
          v9 = a2;
        else
          v9 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_12:
        if (v7 == v6)
        {
          v14 = v9;
        }
        else
        {
          if (v8 < 0x20 || (unint64_t)((char *)v9 - v7) < 0x20)
          {
            v14 = v9;
            v15 = v7;
          }
          else
          {
            v14 = (std::string *)((char *)v9 + (v8 & 0xFFFFFFFFFFFFFFE0));
            v15 = &v7[v8 & 0xFFFFFFFFFFFFFFE0];
            v16 = (__int128 *)(v7 + 16);
            v17 = &v9->__r_.__value_.__r.__words[2];
            v18 = v8 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v19 = *v16;
              *((_OWORD *)v17 - 1) = *(v16 - 1);
              *(_OWORD *)v17 = v19;
              v16 += 2;
              v17 += 4;
              v18 -= 32;
            }
            while (v18);
            if (v8 == (v8 & 0xFFFFFFFFFFFFFFE0))
              goto LABEL_22;
          }
          do
          {
            v20 = *v15++;
            v14->__r_.__value_.__s.__data_[0] = v20;
            v14 = (std::string *)((char *)v14 + 1);
          }
          while (v15 != v6);
        }
LABEL_22:
        v14->__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
          a2->__r_.__value_.__l.__size_ = v8;
        else
          *((_BYTE *)&a2->__r_.__value_.__s + 23) = v8 & 0x7F;
        goto LABEL_25;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v9 = a2;
      if (v8 <= 0x16)
        goto LABEL_12;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v11 = 22;
    }
    std::string::__grow_by(a2, v11, v8 - v11, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v13) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_9;
  }
LABEL_25:
  std::ostream::~ostream(&v29);
  if (SBYTE7(v27) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v22);
  return v5;
}

void sub_100306950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100306964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100306978(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

__n128 sub_100306990(__n128 *a1, unsigned int **a2)
{
  unint64_t *v4;
  std::ios_base *v5;
  void **v6;
  uint64_t v7;
  __n128 result;
  void *__p[2];
  unsigned __int8 v10;

  v4 = &a1[6].n128_u64[1];
  v5 = (std::ios_base *)&a1[6].n128_i8[*(_QWORD *)(a1[6].n128_u64[1] - 24) + 8];
  v5->__exceptions_ = 1;
  std::ios_base::clear(v5, v5->__rdstate_);
  sub_10022F81C(a2);
  if ((v10 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v10 & 0x80u) == 0)
    v7 = v10;
  else
    v7 = (uint64_t)__p[1];
  sub_1000F0508(v4, (uint64_t)v6, v7);
  if ((char)v10 < 0)
    operator delete(__p[0]);
  result = *(__n128 *)(*(unint64_t *)((char *)v4 + *(_QWORD *)(a1[6].n128_u64[1] - 24) + 40) + 40);
  a1[17] = result;
  return result;
}

uint64_t sub_100306A58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  void *v24;
  char v25;

  if (v25 < 0)
    operator delete(v24);
  if (a2 != 1)
    _Unwind_Resume(exception_object);
  __cxa_begin_catch(exception_object);
  __cxa_end_catch();
  return 0;
}

void sub_100306AB0(std::error_category *a1)
{
  std::error_category::~error_category(a1);
  operator delete();
}

const char *sub_100306AD4()
{
  return "libarchive_error";
}

void sub_100306AE0(int __val@<W1>, uint64_t a2@<X8>)
{
  char *v3;
  std::string *v4;
  std::string v5;

  switch(__val)
  {
    case -30:
      v3 = (char *)operator new(0x20uLL);
      *(_QWORD *)a2 = v3;
      *(_OWORD *)(a2 + 8) = xmmword_1003830B0;
      strcpy(v3, "no more operations possible");
      break;
    case -25:
      *(_BYTE *)(a2 + 23) = 15;
      strcpy((char *)a2, "cannot complete");
      break;
    case -20:
      *(_BYTE *)(a2 + 23) = 4;
      strcpy((char *)a2, "warn");
      break;
    case -10:
      *(_BYTE *)(a2 + 23) = 5;
      strcpy((char *)a2, "retry");
      break;
    case 0:
      *(_BYTE *)(a2 + 23) = 2;
      strcpy((char *)a2, "ok");
      break;
    case 1:
      *(_BYTE *)(a2 + 23) = 3;
      *(_DWORD *)a2 = 6713189;
      break;
    default:
      std::to_string(&v5, __val);
      v4 = std::string::insert(&v5, 0, "unknown error code ");
      *(std::string *)a2 = *v4;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      v4->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v5.__r_.__value_.__l.__data_);
      break;
  }
}

void sub_100306C84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100306CA0()
{
  operator new();
}

void sub_100306EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10016314C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100306EDC(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100306EF8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100306F10()
{
  operator new();
}

void sub_100306F58()
{
  operator delete();
}

void sub_100306F6C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::const_iterator v4;
  std::string *v5;
  __int128 v6;
  void **v7;
  std::string::size_type v8;
  std::string *v9;
  __int128 v10;
  void *__p[2];
  unsigned __int8 v12;
  std::string v13;
  std::string v14;
  std::string v15;
  std::string v16;

  sub_1000F020C((const char *)((unint64_t)"P25tag_libarchive_error_code" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  else
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  std::string::insert(&v13, v4, 91);
  v14 = v13;
  memset(&v13, 0, sizeof(v13));
  v5 = std::string::append(&v14, "] = ");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_1003071AC((unsigned int *)(a1 + 8));
  if ((v12 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v12 & 0x80u) == 0)
    v8 = v12;
  else
    v8 = (std::string::size_type)__p[1];
  v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_13;
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_18;
}

void sub_1003070E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
LABEL_6:
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003071AC(unsigned int *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  const char *v5;
  size_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void (__cdecl **v10)(std::ostringstream *__hidden);
  _QWORD v11[8];
  void *__p[2];
  __int128 v13;
  int v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  char v16;

  v10 = v2;
  *(_QWORD *)((char *)&v11[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v11[-1] + (_QWORD)*(v10 - 3));
  std::ios_base::init(v4, v11);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v11);
  *(_OWORD *)__p = 0u;
  v13 = 0u;
  v14 = 16;
  v5 = (const char *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a1 + 1) + 16))(*((_QWORD *)a1 + 1));
  v6 = strlen(v5);
  v7 = sub_1000F0508(&v10, (uint64_t)v5, v6);
  v16 = 58;
  v8 = sub_1000F0508(v7, (uint64_t)&v16, 1);
  std::ostream::operator<<(v8, *a1);
  std::stringbuf::str(v11);
  if (SBYTE7(v13) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(v11);
  return std::ios::~ios(&v15);
}

void sub_100307320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  std::ostream::~ostream(&a9, v10 + 8);
  std::ios::~ios(v9);
  _Unwind_Resume(a1);
}

void sub_100307340(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_100307354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F0484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100307368()
{
  operator new();
}

void sub_100307570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1003075C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100307594(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_1003075B0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_1003075C4(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100307644()
{
  operator delete();
}

uint64_t sub_100307658(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_100307670()
{
  return 0;
}

uint64_t sub_100307678()
{
  return 0;
}

uint64_t sub_100307680()
{
  return 0;
}

uint64_t sub_100307688()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003076E4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

std::string *sub_100307740@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = atomic_load((unsigned __int8 *)&qword_10041A378);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_10041A378))
    sub_1002092AC((uint64_t)&unk_10041A380, "[^a-f0-9]", 0);
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  v5 = *(unsigned __int8 *)(a1 + 23);
  if ((v5 & 0x80u) == 0)
    v6 = a1;
  else
    v6 = *(_QWORD *)a1;
  if ((v5 & 0x80u) != 0)
    v5 = *(_QWORD *)(a1 + 8);
  return sub_10030783C(a2, v6, (char *)(v6 + v5), (uint64_t)&unk_10041A380, "", 0);
}

void sub_100307808(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_10041A378);
  _Unwind_Resume(a1);
}

void sub_100307820(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *sub_10030783C(std::string *a1, uint64_t a2, char *a3, uint64_t a4, char *a5, int a6)
{
  __int16 v6;
  std::string::value_type *v9;
  void *v11;
  unsigned __int8 *v12;
  std::string::value_type *v13;
  std::string::value_type *v14;
  std::string::value_type *v15;
  std::string::value_type *j;
  std::string::value_type *v18;
  std::string::value_type *i;
  _BYTE v20[32];
  void *__p;
  void *v22;
  std::string::value_type *v23;
  std::string::value_type *v24;
  std::string::value_type *v25;
  std::string::value_type *v26;

  v6 = a6;
  v9 = (std::string::value_type *)a2;
  sub_100308148((uint64_t)v20, a2, a3, a4, a6);
  v11 = v22;
  if (v22 == __p)
  {
    if ((v6 & 0x200) != 0)
      goto LABEL_20;
    for (; v9 != a3; ++v9)
      std::string::push_back(a1, *v9);
  }
  else
  {
    v12 = (unsigned __int8 *)&a5[strlen(a5)];
    if ((v6 & 0x200) != 0)
    {
      if ((v6 & 0x400) != 0)
      {
        a1 = sub_100307CEC((uint64_t)&__p, a1, (unsigned __int8 *)a5, v12, v6);
        goto LABEL_19;
      }
      do
      {
        a1 = sub_100307CEC((uint64_t)&__p, a1, (unsigned __int8 *)a5, v12, v6);
        v13 = v25;
        v14 = v26;
        sub_100307F84((uint64_t)v20);
      }
      while (v22 != __p);
    }
    else
    {
      if ((v6 & 0x400) != 0)
      {
        v18 = v23;
        for (i = v24; v18 != i; ++v18)
          std::string::push_back(a1, *v18);
        a1 = sub_100307CEC((uint64_t)&__p, a1, (unsigned __int8 *)a5, v12, v6);
        v13 = v25;
        v14 = v26;
        if ((v6 & 0x200) != 0)
          goto LABEL_19;
        goto LABEL_15;
      }
      do
      {
        v15 = v23;
        for (j = v24; v15 != j; ++v15)
          std::string::push_back(a1, *v15);
        a1 = sub_100307CEC((uint64_t)&__p, a1, (unsigned __int8 *)a5, v12, v6);
        v13 = v25;
        v14 = v26;
        sub_100307F84((uint64_t)v20);
      }
      while (v22 != __p);
    }
    if ((v6 & 0x200) == 0)
    {
LABEL_15:
      while (v13 != v14)
        std::string::push_back(a1, *v13++);
    }
  }
LABEL_19:
  v11 = __p;
LABEL_20:
  if (v11)
  {
    v22 = v11;
    operator delete(v11);
  }
  return a1;
}

void sub_100307A1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_100307A5C(_QWORD *a1)
{
  return a1[1] - *a1 == 25 && *(unsigned __int16 *)(*a1 + 2) == 5378;
}

BOOL sub_100307A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(a1 + 87);
  if ((v1 & 0x80u) != 0)
    v1 = *(_QWORD *)(a1 + 72);
  if (v1)
    return sub_100307AC8(a1 + 64);
  v3 = *(unsigned __int8 *)(a1 + 135);
  if ((v3 & 0x80u) != 0)
    v3 = *(_QWORD *)(a1 + 120);
  return v3 == 32;
}

BOOL sub_100307AC8(uint64_t a1)
{
  _DWORD *v1;
  __int16 v2;
  __int16 v3;
  _BOOL8 v4;
  std::string __p;
  std::string v7;

  sub_100307740(a1, &v7);
  if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) != 50)
      return 0;
    v1 = (_DWORD *)v7.__r_.__value_.__r.__words + 1;
    goto LABEL_6;
  }
  if (v7.__r_.__value_.__l.__size_ == 50)
  {
    v1 = (_DWORD *)(v7.__r_.__value_.__r.__words[0] + 4);
LABEL_6:
    *((_BYTE *)&__p.__r_.__value_.__s + 23) = 4;
    LODWORD(__p.__r_.__value_.__l.__data_) = *v1;
    __p.__r_.__value_.__s.__data_[4] = 0;
    v2 = std::stoi(&__p, 0, 16);
    v3 = v2;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      v4 = v3 == 533;
      if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return v4;
    }
    else
    {
      v4 = v2 == 533;
      if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return v4;
    }
    goto LABEL_12;
  }
  v4 = 0;
LABEL_12:
  operator delete(v7.__r_.__value_.__l.__data_);
  return v4;
}

void sub_100307BC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100307BFC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unsigned int v5;
  std::string __p;

  v2 = *a2;
  if (a2[1] - *a2 != 25 || *(_WORD *)(v2 + 2) != 5378)
    return 0;
  sub_1002F3230((unsigned __int8 *)(v2 + 4), (unsigned __int8 *)(v2 + 20));
  sub_1000CA390(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v5 = *(unsigned __int16 *)(*a2 + 22);
  sub_1001A3DE0(a1, bswap32(*(unsigned __int16 *)(*a2 + 20)) >> 16);
  sub_1001A3DD8(a1, bswap32(v5) >> 16);
  sub_1001A3DD0(a1, *(_BYTE *)(*a2 + 24));
  return 1;
}

void sub_100307CD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_100307CEC(uint64_t a1, std::string *this, unsigned __int8 *a3, unsigned __int8 *a4, __int16 a5)
{
  unsigned __int8 *v6;
  unsigned __int8 *v9;
  int v10;
  std::string::value_type *v11;
  std::string::value_type *v12;
  std::string::value_type v13;
  unint64_t v14;
  uint64_t v15;
  std::string::value_type *v16;
  std::string::value_type *v17;
  std::string::value_type v18;
  int v19;
  unsigned __int8 *v20;
  int v22;
  std::string::value_type *v23;
  std::string::value_type *v24;
  std::string::value_type v25;
  std::string::value_type *v26;
  std::string::value_type *v27;
  std::string::value_type v28;
  std::string::value_type *v29;
  std::string::value_type *v30;
  std::string::value_type v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  std::string::value_type *v37;
  std::string::value_type *v38;
  std::string::value_type v39;

  v6 = a3;
  if ((a5 & 0x100) != 0)
  {
    if (a3 == a4)
      return this;
    while (1)
    {
      v10 = *v6;
      if (v10 == 92)
      {
        v9 = v6 + 1;
        if (v6 + 1 != a4)
        {
          v10 = *v9;
          if ((v10 - 48) <= 9u)
          {
            v14 = (v10 - 48);
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3) <= v14)
              v15 = a1 + 24;
            else
              v15 = *(_QWORD *)a1 + 24 * v14;
            v16 = *(std::string::value_type **)v15;
            v17 = *(std::string::value_type **)(v15 + 8);
            if (*(std::string::value_type **)v15 != v17)
            {
              do
              {
                v18 = *v16++;
                std::string::push_back(this, v18);
              }
              while (v16 != v17);
            }
            goto LABEL_9;
          }
          ++v6;
        }
      }
      else if (v10 == 38)
      {
        v11 = **(std::string::value_type ***)a1;
        v12 = *(std::string::value_type **)(*(_QWORD *)a1 + 8);
        while (v11 != v12)
        {
          v13 = *v11++;
          std::string::push_back(this, v13);
        }
        goto LABEL_8;
      }
      std::string::push_back(this, v10);
LABEL_8:
      v9 = v6;
LABEL_9:
      v6 = v9 + 1;
      if (v9 + 1 == a4)
        return this;
    }
  }
  if (a3 != a4)
  {
    do
    {
      v19 = *v6;
      v20 = v6 + 1;
      if (v19 == 36 && v20 != a4)
      {
        v22 = (char)*v20;
        v19 = *v20;
        if (v22 > 38)
        {
          if (v22 == 39)
          {
            v29 = *(std::string::value_type **)(a1 + 72);
            v30 = *(std::string::value_type **)(a1 + 80);
            while (v29 != v30)
            {
              v31 = *v29++;
              std::string::push_back(this, v31);
            }
            goto LABEL_26;
          }
          if (v22 == 96)
          {
            v26 = *(std::string::value_type **)(a1 + 48);
            v27 = *(std::string::value_type **)(a1 + 56);
            while (v26 != v27)
            {
              v28 = *v26++;
              std::string::push_back(this, v28);
            }
            goto LABEL_26;
          }
        }
        else
        {
          if (v22 == 36)
            goto LABEL_25;
          if (v22 == 38)
          {
            v23 = **(std::string::value_type ***)a1;
            v24 = *(std::string::value_type **)(*(_QWORD *)a1 + 8);
            while (v23 != v24)
            {
              v25 = *v23++;
              std::string::push_back(this, v25);
            }
            goto LABEL_26;
          }
        }
        if ((v19 - 48) <= 9)
        {
          v32 = *v20 - 48;
          if (v6 + 2 != a4)
          {
            v33 = v6[2];
            v34 = v33 - 48;
            v35 = v33 + 10 * (int)v32 - 48;
            if (v34 > 9)
            {
              v20 = v6 + 1;
            }
            else
            {
              v32 = v35;
              v20 = v6 + 2;
            }
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3) <= v32)
            v36 = a1 + 24;
          else
            v36 = *(_QWORD *)a1 + 24 * (int)v32;
          v37 = *(std::string::value_type **)v36;
          v38 = *(std::string::value_type **)(v36 + 8);
          if (*(std::string::value_type **)v36 != v38)
          {
            do
            {
              v39 = *v37++;
              std::string::push_back(this, v39);
            }
            while (v37 != v38);
          }
          goto LABEL_26;
        }
        LOBYTE(v19) = 36;
      }
      v20 = v6;
LABEL_25:
      std::string::push_back(this, v19);
LABEL_26:
      v6 = v20 + 1;
    }
    while (v20 + 1 != a4);
  }
  return this;
}

uint64_t sub_100307F84(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char *v12;
  uint64_t v13;
  char v14;
  void *__p[2];
  _BYTE v16[25];
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;

  v3 = a1 + 32;
  v2 = *(_QWORD **)(a1 + 32);
  v4 = *(_DWORD *)(v3 - 8);
  v5 = v4 | 0x800;
  *(_DWORD *)(v3 - 8) = v4 | 0x800;
  if (*(_QWORD **)(v3 + 8) == v2)
    v6 = (_QWORD *)(v3 + 24);
  else
    v6 = v2;
  v7 = v6[1];
  if (*v6 != v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 24) = v5 | 0x80;
    v9 = *(char **)(a1 + 8);
    v8 = *(_QWORD *)(a1 + 16);
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    *(_OWORD *)__p = 0u;
    memset(v16, 0, sizeof(v16));
    v10 = sub_1002139D0(v8, v7, (uint64_t)v9, (uint64_t)__p, v5 | 0x80u);
    sub_100213CDC((void **)v3, v7, v9, (uint64_t *)__p, (v5 & 0x800) != 0);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if ((v10 & 1) == 0)
    {
      v2 = *(_QWORD **)v3;
      if (!*(_QWORD *)v3)
      {
LABEL_10:
        *(_BYTE *)(a1 + 128) = 0;
        *(_OWORD *)v3 = 0u;
        *(_OWORD *)(v3 + 16) = 0u;
        *(_OWORD *)(v3 + 25) = 0u;
        *(_QWORD *)(a1 + 80) = 0;
        *(_QWORD *)(a1 + 88) = 0;
        *(_BYTE *)(a1 + 96) = 0;
        *(_QWORD *)(a1 + 104) = 0;
        *(_QWORD *)(a1 + 112) = 0;
        *(_BYTE *)(a1 + 120) = 0;
        *(_QWORD *)(a1 + 136) = 0;
        return a1;
      }
LABEL_9:
      *(_QWORD *)(a1 + 40) = v2;
      operator delete(v2);
      *(_QWORD *)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
      *(_QWORD *)(v3 + 16) = 0;
      goto LABEL_10;
    }
    return a1;
  }
  v12 = *(char **)(a1 + 8);
  if (v12 == (char *)v7)
  {
    if (!v2)
      goto LABEL_10;
    goto LABEL_9;
  }
  v13 = *(_QWORD *)(a1 + 16);
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  *(_OWORD *)__p = 0u;
  memset(v16, 0, sizeof(v16));
  v14 = sub_1002139D0(v13, v7, (uint64_t)v12, (uint64_t)__p, v4 | 0x860u);
  sub_100213CDC((void **)v3, v7, v12, (uint64_t *)__p, 1);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if ((v14 & 1) == 0)
  {
    ++v7;
    v5 = *(_DWORD *)(a1 + 24);
    goto LABEL_5;
  }
  return a1;
}

void sub_100308128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100308148(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, int a5)
{
  __int16 v5;
  void **v9;
  void *__p[2];
  _BYTE v12[25];
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;

  v5 = a5;
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a4;
  *(_DWORD *)(a1 + 24) = a5;
  *(_OWORD *)(a1 + 32) = 0u;
  v9 = (void **)(a1 + 32);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 57) = 0u;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  *(_OWORD *)__p = 0u;
  memset(v12, 0, sizeof(v12));
  sub_1002139D0(a4, a2, (uint64_t)a3, (uint64_t)__p, a5);
  sub_100213CDC(v9, a2, a3, (uint64_t *)__p, (v5 & 0x800) != 0);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return a1;
}

void sub_10030821C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  uint64_t v10;
  void **v11;
  void *v13;

  if (__p)
  {
    operator delete(__p);
    v13 = *v11;
    if (!*v11)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v13 = *v11;
    if (!*v11)
      goto LABEL_3;
  }
  *(_QWORD *)(v10 + 40) = v13;
  operator delete(v13);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100308258()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003082B4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

id sub_100308310()
{
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_100405C60);
  return (id)qword_100417EE0;
}

void sub_10030835C(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_100308394()
{
  sub_1003084C8();
}

uint64_t sub_1003083AC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  double *v16;
  std::string *v17;
  uint64_t result;
  double v19;
  std::bad_cast v20[7];

  v19 = *v16;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  result = sub_10016EED0(&v19, v17);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(v20);
    v20[0].__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)v20);
  }
  return result;
}

void sub_100308440()
{
  int *v0;
  std::string *v1;

  sub_10030861C(*v0, v1);
}

void sub_100308458()
{
  sub_1003089D0();
}

void sub_100308478()
{
  sub_100308B24();
}

void sub_100308498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  uint64_t v10;

  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0)
    operator delete(*(void **)v10);
  _Unwind_Resume(a1);
}

void sub_1003084C8()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6A0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert empty value to a type");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<std::string>::operator()(boost::none_t) const [T = std::string]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/overridable_setting.h", 111, (uint64_t)v0);
}

void sub_10030857C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1003085E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1003085D4);
}

void sub_100308608(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10030861C(int a1@<W0>, std::string *a2@<X8>)
{
  int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  std::string *v8;
  unint64_t v9;
  std::string *v10;
  char *v11;
  __int128 *v12;
  std::string::size_type *v13;
  unint64_t v14;
  __int128 v15;
  std::string::value_type v16;
  int v17;
  char *v18;
  char v19;
  int v20;
  char v21;
  _BYTE v22[6];
  char v23;
  _BYTE *v24;
  char *v25;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  v24 = v22;
  v25 = &v23;
  if (a1 >= 0)
    v4 = a1;
  else
    v4 = -a1;
  v17 = v4;
  v18 = &v23;
  v19 = 48;
  v20 = 48;
  v5 = sub_10000EDD4((uint64_t)&v17);
  v6 = (char *)v5;
  if ((a1 & 0x80000000) == 0)
  {
    v24 = (_BYTE *)v5;
    v25 = &v23;
    v7 = (unint64_t)(&v23 - v5);
    v8 = a2;
    if ((unint64_t)(&v23 - v5) < 0x17)
      goto LABEL_6;
LABEL_14:
    std::string::__grow_by(a2, 0x16uLL, v7 - 22, 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = a2;
    else
      v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    if (v6 != &v23)
      goto LABEL_7;
LABEL_18:
    v10 = v8;
    goto LABEL_21;
  }
  *(_BYTE *)(v5 - 1) = 45;
  v6 = (char *)(v5 - 1);
  v24 = (_BYTE *)(v5 - 1);
  v25 = &v23;
  v7 = (unint64_t)(&v23 - v5 + 1);
  v8 = a2;
  if (v7 >= 0x17)
    goto LABEL_14;
LABEL_6:
  if (v6 == &v23)
    goto LABEL_18;
LABEL_7:
  v9 = &v21 - v6 + 23;
  if (v9 < 0x20 || (unint64_t)((char *)v8 - v6) < 0x20)
  {
    v10 = v8;
    v11 = v6;
  }
  else
  {
    v10 = (std::string *)((char *)v8 + (v9 & 0xFFFFFFFFFFFFFFE0));
    v11 = &v6[v9 & 0xFFFFFFFFFFFFFFE0];
    v12 = (__int128 *)(v6 + 16);
    v13 = &v8->__r_.__value_.__r.__words[2];
    v14 = v9 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      v15 = *v12;
      *((_OWORD *)v13 - 1) = *(v12 - 1);
      *(_OWORD *)v13 = v15;
      v12 += 2;
      v13 += 4;
      v14 -= 32;
    }
    while (v14);
    if (v9 == (v9 & 0xFFFFFFFFFFFFFFE0))
      goto LABEL_21;
  }
  do
  {
    v16 = *v11++;
    v10->__r_.__value_.__s.__data_[0] = v16;
    v10 = (std::string *)((char *)v10 + 1);
  }
  while (v11 != &v23);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    a2->__r_.__value_.__l.__size_ = v7;
  else
    *((_BYTE *)&a2->__r_.__value_.__s + 23) = v7 & 0x7F;
}

void sub_1003087DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_1003087F8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  std::string *v8;
  unint64_t v9;
  std::string *v10;
  char *v11;
  __int128 *v12;
  std::string::size_type *v13;
  unint64_t v14;
  __int128 v15;
  std::string::value_type v16;
  _QWORD v17[2];
  char v18;
  int v19;
  char v20;
  _BYTE v21[6];
  _BYTE v22[7];
  _BYTE *v23;
  _BYTE *v24;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  v23 = v21;
  v24 = v22;
  if (a1 >= 0)
    v4 = a1;
  else
    v4 = -a1;
  v17[0] = v4;
  v17[1] = v22;
  v18 = 48;
  v19 = 48;
  v5 = sub_100173F80((uint64_t)v17);
  v6 = (_BYTE *)v5;
  if ((a1 & 0x8000000000000000) == 0)
  {
    v23 = (_BYTE *)v5;
    v24 = v22;
    v7 = (unint64_t)&v22[-v5];
    v8 = a2;
    if ((unint64_t)&v22[-v5] < 0x17)
      goto LABEL_6;
LABEL_14:
    std::string::__grow_by(a2, 0x16uLL, v7 - 22, 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = a2;
    else
      v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    if (v6 != v22)
      goto LABEL_7;
LABEL_18:
    v10 = v8;
    goto LABEL_21;
  }
  *(_BYTE *)(v5 - 1) = 45;
  v6 = (_BYTE *)(v5 - 1);
  v23 = (_BYTE *)(v5 - 1);
  v24 = v22;
  v7 = (unint64_t)&v22[-v5 + 1];
  v8 = a2;
  if (v7 >= 0x17)
    goto LABEL_14;
LABEL_6:
  if (v6 == v22)
    goto LABEL_18;
LABEL_7:
  v9 = &v20 - v6 + 41;
  if (v9 < 0x20 || (unint64_t)((char *)v8 - v6) < 0x20)
  {
    v10 = v8;
    v11 = v6;
  }
  else
  {
    v10 = (std::string *)((char *)v8 + (v9 & 0xFFFFFFFFFFFFFFE0));
    v11 = &v6[v9 & 0xFFFFFFFFFFFFFFE0];
    v12 = (__int128 *)(v6 + 16);
    v13 = &v8->__r_.__value_.__r.__words[2];
    v14 = v9 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      v15 = *v12;
      *((_OWORD *)v13 - 1) = *(v12 - 1);
      *(_OWORD *)v13 = v15;
      v12 += 2;
      v13 += 4;
      v14 -= 32;
    }
    while (v14);
    if (v9 == (v9 & 0xFFFFFFFFFFFFFFE0))
      goto LABEL_21;
  }
  do
  {
    v16 = *v11++;
    v10->__r_.__value_.__s.__data_[0] = v16;
    v10 = (std::string *)((char *)v10 + 1);
  }
  while (v11 != v22);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    a2->__r_.__value_.__l.__size_ = v7;
  else
    *((_BYTE *)&a2->__r_.__value_.__s + 23) = v7 & 0x7F;
}

void sub_1003089B4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_1003089D0()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<std::string>::operator()(const F &) const [T = std::string, F = std::vector<boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_100308A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_100308AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100308ADCLL);
}

void sub_100308B10(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100308B24()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<std::string>::operator()(const F &) const [T = std::string, F = std::unordered_map<std::string, boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_100308BD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_100308C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100308C30);
}

void sub_100308C64(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100308C78(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_100308CA8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100308D04()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100308D60()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100308D74(signed int a1@<W0>, std::string *a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  signed int v5;
  BOOL v6;
  uint64_t *v7;
  std::string *v8;
  __int128 v9;
  void **v10;
  std::string::size_type v11;
  std::bad_cast *v12;
  std::string v13;
  void *__p[2];
  int64_t v15;
  signed int v16;
  std::bad_cast v17;
  _UNKNOWN **v18;
  _UNKNOWN **v19;

  v16 = a1;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  a2->__r_.__value_.__r.__words[0] = 0;
  v3 = qword_10041AFA0;
  if (qword_10041AFA0)
  {
    v4 = &qword_10041AFA0;
    do
    {
      v5 = *(_DWORD *)(v3 + 32);
      v6 = v5 < a1;
      if (v5 >= a1)
        v7 = (uint64_t *)v3;
      else
        v7 = (uint64_t *)(v3 + 8);
      if (!v6)
        v4 = (uint64_t *)v3;
      v3 = *v7;
    }
    while (*v7);
    if (v4 != &qword_10041AFA0 && *((_DWORD *)v4 + 8) <= a1)
    {
      std::string::assign(a2, (const std::string::value_type *)v4[5]);
      return;
    }
  }
  std::string::assign(a2, "out-of-range '");
  memset(&v13, 0, sizeof(v13));
  if ((sub_100169C98((unsigned int *)&v16, &v13) & 1) == 0)
  {
    v12 = std::bad_cast::bad_cast(&v17);
    v17.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)v12);
  }
  v8 = std::string::append(&v13, "'");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v15 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  if (v15 >= 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  if (v15 >= 0)
    v11 = HIBYTE(v15);
  else
    v11 = (std::string::size_type)__p[1];
  std::string::append(a2, (const std::string::value_type *)v10, v11);
  if ((SHIBYTE(v15) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_22:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_22;
}

void sub_100308EDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  if (a21 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v21 + 23) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((*(char *)(v21 + 23) & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*(void **)v21);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100308F78(_QWORD *a1, int a2)
{
  const char *v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 == 2)
    {
      v2 = "screen-recording";
      v3 = 16;
    }
    else
    {
      v2 = "front-facing-camera";
      v3 = 19;
    }
  }
  else
  {
    v2 = "rear-facing-camera";
    v3 = 18;
  }
  return sub_1000F0508(a1, (uint64_t)v2, v3);
}

void sub_100308FB4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4;
  std::string::size_type v5;
  uint64_t v6;
  _BYTE *v7;
  std::string::size_type v8;
  std::string *v9;
  std::string *v10;
  unint64_t v11;
  std::string::value_type *v12;
  __int128 *v13;
  std::string::size_type *v14;
  unint64_t v15;
  __int128 v16;
  std::string::value_type v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  std::string::size_type size;
  std::string *v22;
  std::string __p;
  std::string v24;
  std::string v25;
  std::string v26;
  _BYTE v27[7];
  std::string::value_type *v28;
  _BYTE *v29;

  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = 0uLL;
  v28 = &v26.__r_.__value_.__s.__data_[2];
  v29 = v27;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 >= 0)
    v5 = *(_QWORD *)(a1 + 32);
  else
    v5 = -v4;
  v24.__r_.__value_.__r.__words[2] = 0;
  v25.__r_.__value_.__r.__words[0] = v5;
  v25.__r_.__value_.__l.__size_ = (std::string::size_type)v27;
  v25.__r_.__value_.__s.__data_[16] = 48;
  HIDWORD(v25.__r_.__value_.__r.__words[2]) = 48;
  v6 = sub_100173F80((uint64_t)&v25);
  v7 = (_BYTE *)v6;
  if (v4 < 0)
  {
    *(_BYTE *)(v6 - 1) = 45;
    v7 = (_BYTE *)(v6 - 1);
    v28 = (std::string::value_type *)(v6 - 1);
    v29 = v27;
    v8 = (std::string::size_type)&v27[-v6 + 1];
    if (v8 >= 0x17)
    {
LABEL_6:
      std::string::__grow_by(&v24, 0x16uLL, v8 - 22, 0, 0, 0, 0);
      v24.__r_.__value_.__l.__size_ = 0;
      if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v9 = &v24;
      else
        v9 = (std::string *)v24.__r_.__value_.__r.__words[0];
      if (v7 == v27)
        goto LABEL_10;
      goto LABEL_13;
    }
  }
  else
  {
    v28 = (std::string::value_type *)v6;
    v29 = v27;
    v8 = (std::string::size_type)&v27[-v6];
    if ((unint64_t)&v27[-v6] >= 0x17)
      goto LABEL_6;
  }
  v9 = &v24;
  if (v7 == v27)
  {
LABEL_10:
    v10 = v9;
    goto LABEL_21;
  }
LABEL_13:
  v11 = (char *)&v26 - v7 + 41;
  if (v11 < 0x20 || (unint64_t)((char *)v9 - v7) < 0x20)
  {
    v10 = v9;
    v12 = v7;
  }
  else
  {
    v10 = (std::string *)((char *)v9 + (v11 & 0xFFFFFFFFFFFFFFE0));
    v12 = &v7[v11 & 0xFFFFFFFFFFFFFFE0];
    v13 = (__int128 *)(v7 + 16);
    v14 = &v9->__r_.__value_.__r.__words[2];
    v15 = v11 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      v16 = *v13;
      *((_OWORD *)v14 - 1) = *(v13 - 1);
      *(_OWORD *)v14 = v16;
      v13 += 2;
      v14 += 4;
      v15 -= 32;
    }
    while (v15);
    if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
      goto LABEL_21;
  }
  do
  {
    v17 = *v12++;
    v10->__r_.__value_.__s.__data_[0] = v17;
    v10 = (std::string *)((char *)v10 + 1);
  }
  while (v12 != v27);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    v24.__r_.__value_.__l.__size_ = v8;
  else
    *((_BYTE *)&v24.__r_.__value_.__s + 23) = v8 & 0x7F;
  sub_100308D74(*(_DWORD *)(a1 + 96), &v26);
  std::operator+<char>("Inertial Input Event ", &v26);
  v18 = std::string::append(&__p, " @ ");
  v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v20 = &v24;
  else
    v20 = (std::string *)v24.__r_.__value_.__r.__words[0];
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  else
    size = v24.__r_.__value_.__l.__size_;
  v22 = std::string::append(&v25, (const std::string::value_type *)v20, size);
  *a2 = *v22;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v25.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_32:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_33;
      goto LABEL_37;
    }
  }
  else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_32;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_38:
    operator delete(v24.__r_.__value_.__l.__data_);
    return;
  }
LABEL_37:
  operator delete(v26.__r_.__value_.__l.__data_);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_38;
}

void sub_10030925C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a26 < 0)
  {
    operator delete(a21);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a32 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a20 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_9:
  operator delete(a27);
  if ((a20 & 0x80000000) == 0)
LABEL_6:
    _Unwind_Resume(exception_object);
LABEL_5:
  operator delete(__p);
  goto LABEL_6;
}

void sub_1003092E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if ((a17 & 0x80000000) == 0)
    JUMPOUT(0x100309288);
  JUMPOUT(0x100309280);
}

void sub_1003092F8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v3;
  std::string v4;

  std::to_string(&v4, *(_QWORD *)(a1 + 32));
  v3 = std::string::insert(&v4, 0, "AttitudeX Input Event @ ");
  *a2 = *v3;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__r_.__value_.__l.__data_);
}

void sub_100309374(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100309390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE *v10;
  uint64_t i;
  void *__p;
  _BYTE *v14;

  v4 = *(_QWORD *)(a2 + 8);
  if ((*(_BYTE *)(a2 + 152) & 4) != 0)
  {
    v6 = operator new(0x98uLL);
    v6[1] = 0;
    v6[2] = 0;
    *v6 = off_100404E88;
    v5 = v6 + 3;
    sub_10030323C((uint64_t)(v6 + 3), a2 + 40, v7, v8, v9);
  }
  else
  {
    v5 = 0;
    v6 = 0;
  }
  sub_100314BC4((_QWORD *)(a2 + 16), (uint64_t)&__p);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_100309F90((char *)(a1 + 24), (uint64_t)__p, (uint64_t)v14, 0x2E8BA2E8BA2E8BA3 * ((v14 - (_BYTE *)__p) >> 3));
  v10 = __p;
  if (__p)
  {
    for (i = (uint64_t)v14; (_BYTE *)i != v10; i -= 88)
    {
      if (*(_BYTE *)(i - 48))
        *(_BYTE *)(i - 48) = 0;
    }
    v14 = v10;
    operator delete(v10);
  }
  return a1;
}

void sub_100309488(void *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  sub_1000CDD68(a1);
}

uint64_t sub_1003094A8(uint64_t a1, uint64_t a2)
{
  return sub_1001A3BF0(a1, a2);
}

void sub_1003094C0(char *a1@<X8>)
{
  a1[23] = 13;
  strcpy(a1, "GPSInputEvent");
}

void sub_1003094E8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string *p_p;
  std::string::size_type size;
  std::string *v10;
  std::string __p;
  std::string v12;
  std::string v13;
  std::string v14;

  std::to_string(&v12, *(_DWORD *)(a1 + 8));
  v4 = std::string::insert(&v12, 0, "AppOrientationInputEvent ");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  v6 = std::string::append(&v13, " @ t=");
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, *(_QWORD *)a1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v10 = std::string::append(&v14, (const std::string::value_type *)p_p, size);
  *a2 = *v10;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_10;
      goto LABEL_14;
    }
  }
  else if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_9;
  }
  operator delete(v14.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_10:
    if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v12.__r_.__value_.__l.__data_);
    return;
  }
LABEL_14:
  operator delete(v13.__r_.__value_.__l.__data_);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_15;
}

void sub_100309620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v26 - 25) & 0x80000000) == 0)
    {
LABEL_3:
      if ((a26 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((*(char *)(v26 - 25) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v26 - 48));
  if ((a26 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a20 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
LABEL_5:
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003096BC(uint64_t a1, uint64_t a2)
{
  return sub_1001A4778(a1, a2);
}

void sub_1003096D4(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "BeaconInputEvent");
}

uint64_t sub_1003096F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  *(_QWORD *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  v6 = *(_QWORD *)(a4 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)a4;
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  sub_1000B347C(a1 + 32, a4 + 16);
  v9 = *(_QWORD *)(a4 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a4 + 56);
  *(_QWORD *)(a1 + 80) = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a4 + 72);
  return a1;
}

void sub_100309774(void *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 24);
  if (v3)
    sub_1003440F4(v3);
  sub_1000CDD68(a1);
}

void sub_10030978C(char *a1@<X8>)
{
  a1[23] = 15;
  strcpy(a1, "ResetInputEvent");
}

void sub_1003097B4(char *a1@<X8>)
{
  a1[23] = 14;
  strcpy(a1, "CellInputEvent");
}

double sub_1003097DC(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)&result = sub_1001A0F8C(a1, a2).n128_u64[0];
  return result;
}

void sub_1003097F4(char *a1@<X8>)
{
  a1[23] = 19;
  strcpy(a1, "PedometryInputEvent");
}

double sub_100309820(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)&result = sub_1001A1538(a1, a2).n128_u64[0];
  return result;
}

void sub_100309838(char *a1@<X8>)
{
  a1[23] = 19;
  strcpy(a1, "AltimeterInputEvent");
}

uint64_t sub_100309864()
{
  return sub_10019E744();
}

double sub_10030987C@<D0>(uint64_t a1@<X8>)
{
  char *v2;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)a1 = v2;
  *(_OWORD *)(a1 + 8) = xmmword_100382FE0;
  strcpy(v2, "DynamicUniverseInputEvent");
  return *(double *)"iverseInputEvent";
}

void sub_1003098CC(char *a1@<X8>)
{
  a1[23] = 18;
  strcpy(a1, "CascadiaInputEvent");
}

uint64_t sub_1003098F4(uint64_t a1, uint64_t a2, uint64_t *a3, double a4, double a5, double a6)
{
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1002F7750(a1 + 8, *a3, a3[1], 0x2E8BA2E8BA2E8BA3 * ((a3[1] - *a3) >> 3));
  *(double *)(a1 + 32) = a4;
  *(double *)(a1 + 40) = a5;
  *(double *)(a1 + 48) = a6;
  return a1;
}

void sub_10030996C(char *a1@<X8>)
{
  strcpy(a1, "NearbyObjectInputEvent");
  a1[23] = 22;
}

uint64_t sub_100309990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v4 = *(_QWORD *)(a2 + 40);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 48);
    if (v5)
      goto LABEL_3;
LABEL_6:
    v6 = *(_QWORD *)(*(_QWORD *)(qword_10041AAF8 + 48) + 40);
    if (v6)
      goto LABEL_4;
LABEL_7:
    v6 = *(_QWORD *)(qword_10041A8F0 + 40);
    goto LABEL_4;
  }
  v4 = *(_QWORD *)(qword_10041AAF8 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  if (!v5)
    goto LABEL_6;
LABEL_3:
  v6 = *(_QWORD *)(v5 + 40);
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v7 = *(_DWORD *)(v6 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v4 + 40);
  *(_DWORD *)(a1 + 8) = v7;
  sub_100018EC4(a1 + 16, v4);
  return a1;
}

char *sub_100309A2C@<X0>(uint64_t a1@<X8>)
{
  char *result;

  result = (char *)operator new(0x20uLL);
  *(_QWORD *)a1 = result;
  *(_OWORD *)(a1 + 8) = xmmword_100383010;
  strcpy(result, "ARSessionStateInputEvent");
  return result;
}

_QWORD *sub_100309A7C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 40);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 48);
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)(qword_10041AAF8 + 40);
    v4 = *(_QWORD *)(a2 + 48);
    if (v4)
    {
LABEL_3:
      v5 = *(_QWORD *)(v4 + 40);
      if (v5)
        goto LABEL_4;
LABEL_8:
      v6 = *(_QWORD *)(*(_QWORD *)(qword_10041A8F0 + 40) + 16);
      if (v6)
        goto LABEL_5;
LABEL_9:
      v6 = *(_QWORD *)(qword_10041AA40 + 16);
      goto LABEL_5;
    }
  }
  v5 = *(_QWORD *)(*(_QWORD *)(qword_10041AAF8 + 48) + 40);
  if (!v5)
    goto LABEL_8;
LABEL_4:
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    goto LABEL_9;
LABEL_5:
  *a1 = *(_QWORD *)(v3 + 40);
  sub_10010AFBC((uint64_t)(a1 + 1), v6);
  sub_100018EC4((uint64_t)(a1 + 14), v3);
  return a1;
}

_QWORD *sub_100309B38(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  *a1 = *(_QWORD *)(a2 + 40);
  sub_10010AFBC((uint64_t)(a1 + 1), a3);
  sub_100018EC4((uint64_t)(a1 + 14), a2);
  return a1;
}

char *sub_100309B7C@<X0>(uint64_t a1@<X8>)
{
  char *result;

  result = (char *)operator new(0x19uLL);
  *(_QWORD *)a1 = result;
  *(_OWORD *)(a1 + 8) = xmmword_100382C20;
  strcpy(result, "VIOEstimationInputEvent");
  return result;
}

_QWORD *sub_100309BCC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 40);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 48);
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)(qword_10041AAF8 + 40);
    v4 = *(_QWORD *)(a2 + 48);
    if (v4)
    {
LABEL_3:
      v5 = *(_QWORD *)(v4 + 40);
      if (v5)
        goto LABEL_4;
LABEL_8:
      v6 = *(_QWORD *)(*(_QWORD *)(qword_10041A8F0 + 40) + 32);
      if (v6)
        goto LABEL_5;
LABEL_9:
      v6 = *(_QWORD *)(qword_10041AA40 + 32);
      goto LABEL_5;
    }
  }
  v5 = *(_QWORD *)(*(_QWORD *)(qword_10041AAF8 + 48) + 40);
  if (!v5)
    goto LABEL_8;
LABEL_4:
  v6 = *(_QWORD *)(v5 + 32);
  if (!v6)
    goto LABEL_9;
LABEL_5:
  *a1 = *(_QWORD *)(v3 + 40);
  sub_100114E28((uint64_t)(a1 + 1), v6);
  sub_100018EC4((uint64_t)(a1 + 10), v3);
  return a1;
}

_QWORD *sub_100309C88(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  *a1 = *(_QWORD *)(a2 + 40);
  sub_100114E28((uint64_t)(a1 + 1), a3);
  sub_100018EC4((uint64_t)(a1 + 10), a2);
  return a1;
}

double sub_100309CCC@<D0>(uint64_t a1@<X8>)
{
  char *v2;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)a1 = v2;
  *(_OWORD *)(a1 + 8) = xmmword_100382FF0;
  strcpy(v2, "VLLocalizationResultInputEvent");
  return *(double *)"ResultInputEvent";
}

uint64_t sub_100309D1C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a3 + 40);
  if (v4)
  {
    v5 = *(_QWORD *)(a3 + 48);
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)(qword_10041AAF8 + 40);
    v5 = *(_QWORD *)(a3 + 48);
    if (v5)
    {
LABEL_3:
      v6 = *(_QWORD *)(v5 + 48);
      if (v6)
        goto LABEL_4;
LABEL_8:
      v7 = *(_QWORD *)(*(_QWORD *)(qword_10041A8F0 + 48) + 72);
      if (v7)
        goto LABEL_5;
LABEL_9:
      v7 = *(_QWORD *)(qword_10041AA78 + 72);
      goto LABEL_5;
    }
  }
  v6 = *(_QWORD *)(*(_QWORD *)(qword_10041AAF8 + 48) + 48);
  if (!v6)
    goto LABEL_8;
LABEL_4:
  v7 = *(_QWORD *)(v6 + 72);
  if (!v7)
    goto LABEL_9;
LABEL_5:
  *(_QWORD *)a1 = *(_QWORD *)(v4 + 40);
  *(_DWORD *)(a1 + 8) = a2;
  sub_100157C2C(a1 + 16, v7);
  sub_100018EC4(a1 + 176, v4);
  return a1;
}

uint64_t sub_100309DE0(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)a1 = *(_QWORD *)(a3 + 40);
  *(_DWORD *)(a1 + 8) = a2;
  sub_100157C2C(a1 + 16, a4);
  sub_100018EC4(a1 + 176, a3);
  return a1;
}

double sub_100309E2C@<D0>(uint64_t a1@<X8>)
{
  char *v2;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)a1 = v2;
  *(_OWORD *)(a1 + 8) = xmmword_100382C10;
  strcpy(v2, "CLProviderPositionInputEvent");
  return *(double *)"sitionInputEvent";
}

_QWORD *sub_100309E7C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 40);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 48);
    if (v4)
      goto LABEL_3;
LABEL_6:
    v5 = *(_QWORD *)(*(_QWORD *)(qword_10041AAF8 + 48) + 64);
    if (v5)
      goto LABEL_4;
LABEL_7:
    v5 = *(_QWORD *)(qword_10041A8F0 + 64);
    goto LABEL_4;
  }
  v3 = *(_QWORD *)(qword_10041AAF8 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  if (!v4)
    goto LABEL_6;
LABEL_3:
  v5 = *(_QWORD *)(v4 + 64);
  if (!v5)
    goto LABEL_7;
LABEL_4:
  *a1 = *(_QWORD *)(v3 + 40);
  sub_1000333F0((uint64_t)(a1 + 1), v5);
  sub_10001B9B8((uint64_t)(a1 + 13));
  return a1;
}

char *sub_100309F14@<X0>(uint64_t a1@<X8>)
{
  char *result;

  result = (char *)operator new(0x28uLL);
  *(_QWORD *)a1 = result;
  *(_OWORD *)(a1 + 8) = xmmword_100382FD0;
  strcpy(result, "OutdoorEstimatorLogEntryInputEvent");
  return result;
}

void sub_100309F64(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

char *sub_100309F90(char *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  int v12;
  _QWORD *v13;
  int v14;
  int v15;
  char *v16;

  if (a4)
  {
    v5 = result;
    if (a4 >= 0x2E8BA2E8BA2E8BBLL)
      sub_1000D02C0();
    result = (char *)operator new(88 * a4);
    *v5 = result;
    v5[1] = result;
    v5[2] = &result[88 * a4];
    if (a2 != a3)
    {
      v8 = 0;
      do
      {
        v10 = a2 + v8;
        v11 = &result[v8 + 8];
        v13 = (_QWORD *)(a2 + v8 + 8);
        v12 = *(_DWORD *)(a2 + v8);
        v14 = v12 >> 31;
        if (v12 >> 31 == v12)
        {
          *(_QWORD *)v11 = *v13;
          v14 = v12;
        }
        else
        {
          *(_OWORD *)v11 = *(_OWORD *)v13;
          *(_DWORD *)&result[v8 + 24] = *(_DWORD *)(a2 + v8 + 24);
        }
        v15 = v14 ^ v12;
        v16 = &result[v8];
        *(_DWORD *)v16 = v15;
        *((_QWORD *)v16 + 4) = *(_QWORD *)(v10 + 32);
        v16[40] = 0;
        if (*(_BYTE *)(v10 + 40))
        {
          *((_DWORD *)v16 + 11) = *(_DWORD *)(a2 + v8 + 44);
          v16[40] = 1;
        }
        v9 = *(_OWORD *)(v10 + 64);
        *((_OWORD *)v16 + 3) = *(_OWORD *)(v10 + 48);
        *((_OWORD *)v16 + 4) = v9;
        *((_DWORD *)v16 + 20) = *(_DWORD *)(v10 + 80);
        v8 += 88;
      }
      while (v10 + 88 != a3);
      result += v8;
    }
    v5[1] = result;
  }
  return result;
}

void sub_10030A0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_10030A0D8(&a9);
  _Unwind_Resume(a1);
}

void ***sub_10030A0D8(void ***a1)
{
  void **v3;
  char *v4;
  char *i;

  if (*((_BYTE *)a1 + 8))
    return a1;
  v3 = *a1;
  v4 = (char *)**a1;
  if (!v4)
    return a1;
  for (i = (char *)v3[1]; i != v4; i -= 88)
  {
    if (*(i - 48))
      *(i - 48) = 0;
  }
  v3[1] = v4;
  operator delete(v4);
  return a1;
}

uint64_t sub_10030A190()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030A1EC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030A248()
{
  return __cxa_atexit((void (*)(void *))sub_1000FEAD8, &qword_10042EA80, (void *)&_mh_execute_header);
}

void sub_10030A264()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_10030A278(const char *a1@<X0>, int *a2@<X8>)
{
  _QWORD *v3;
  int v4;
  int v5;
  void *v6;
  void *__p[2];
  char v8;
  char v9[8];
  int v10;
  __int128 v11;
  int v12;
  std::logic_error v13;
  uint64_t v14;
  std::logic_error __dst;
  uint64_t v16;

  sub_1000553C0(a1, (uint64_t)v9);
  if (!v9[0])
  {
    sub_1000D5048(__p, "");
    if (SHIBYTE(v14) < 0)
    {
      sub_10006CED8(&__dst, v13.__vftable, (unint64_t)v13.__imp_.__imp_);
    }
    else
    {
      __dst = v13;
      v16 = v14;
    }
    sub_100174738((uint64_t)__p, (uint64_t)&__dst, 1);
    if (SHIBYTE(v16) < 0)
      operator delete(__dst.__vftable);
    if (v8 < 0)
      operator delete(__p[0]);
    sub_1000F2AE4((uint64_t)&v6);
  }
  v3 = a2 + 2;
  v4 = v10;
  v5 = v10 >> 31;
  if (v10 >> 31 == v10)
  {
    *v3 = v11;
    *a2 = 0;
    if ((SHIBYTE(v14) & 0x80000000) == 0)
      return;
LABEL_6:
    operator delete(v13.__vftable);
    return;
  }
  *(_OWORD *)v3 = v11;
  a2[6] = v12;
  *a2 = v5 ^ v4;
  if (SHIBYTE(v14) < 0)
    goto LABEL_6;
}

void sub_10030A418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  char v31;
  uint64_t v32;

  std::logic_error::~logic_error((std::logic_error *)(v32 - 64));
  if (v31 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_10030A480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::string::size_type size;
  std::string *v6;
  __int16 v7;
  std::string::size_type *p_size;
  unint64_t v9;
  std::string::size_type v10;
  std::string *p_dst;
  uint64_t v12;
  std::string *v13;
  size_t v14;
  std::string *v15;
  size_t v16;
  int v17;
  size_t v18;
  int v19;
  size_t v20;
  unint64_t v21;
  std::string *v22;
  std::string *v23;
  char *v24;
  std::string *v25;
  std::string *p_p;
  std::string::size_type v27;
  std::string *v28;
  __int128 v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  std::string __dst;
  std::string v40;
  std::string __p;
  std::string v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  std::string v46;

  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)a1 = 0;
  if (!sub_100307A88(a2))
  {
    sub_1000D5048(&v42, "");
    sub_1002240C8("Invalid IBeacon measurement!", &v46);
    sub_100174738((uint64_t)&v42, (uint64_t)&v46, 1);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v46.__r_.__value_.__l.__data_);
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v42.__r_.__value_.__l.__data_);
    sub_1000F2AE4((uint64_t)&__p);
  }
  memset(&v46, 0, sizeof(v46));
  memset(&v42, 0, sizeof(v42));
  memset(&__p, 0, sizeof(__p));
  v4 = *(unsigned __int8 *)(a2 + 87);
  if ((v4 & 0x80u) != 0)
    v4 = *(_QWORD *)(a2 + 72);
  if (!v4)
  {
    std::string::operator=(&v46, (const std::string *)(a2 + 112));
    LOWORD(__dst.__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 108);
    sub_10030AB8C((unsigned __int16 *)&__dst);
    v7 = *(_DWORD *)(a2 + 104);
    v42 = v40;
    LOWORD(__dst.__r_.__value_.__l.__data_) = v7;
    sub_10030AB8C((unsigned __int16 *)&__dst);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    __p = v40;
    goto LABEL_36;
  }
  sub_100307740(a2 + 64, &v40);
  if ((SHIBYTE(v40.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    size = HIBYTE(v40.__r_.__value_.__r.__words[2]);
    if (HIBYTE(v40.__r_.__value_.__r.__words[2]) > 7u)
    {
      v6 = &v40;
      goto LABEL_13;
    }
LABEL_106:
    sub_10018CB84();
  }
  size = v40.__r_.__value_.__l.__size_;
  if (v40.__r_.__value_.__l.__size_ < 8)
    goto LABEL_106;
  v6 = (std::string *)v40.__r_.__value_.__r.__words[0];
LABEL_13:
  p_size = &v6->__r_.__value_.__l.__size_;
  v9 = size - 8;
  if (v9 >= 0x20)
    v10 = 32;
  else
    v10 = v9;
  if (v10 >= 0x17)
  {
    v36 = (v10 & 0x38) + 8;
    if ((v10 | 7) != 0x17)
      v36 = v10 | 7;
    v37 = v36 + 1;
    p_dst = (std::string *)operator new(v36 + 1);
    __dst.__r_.__value_.__l.__size_ = v10;
    __dst.__r_.__value_.__r.__words[2] = v37 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v10;
    p_dst = &__dst;
    if (!v10)
    {
      __dst.__r_.__value_.__s.__data_[0] = 0;
      if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_19;
      goto LABEL_80;
    }
  }
  memmove(p_dst, p_size, v10);
  p_dst->__r_.__value_.__s.__data_[v10] = 0;
  if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_19:
    v46 = __dst;
    v12 = HIBYTE(v40.__r_.__value_.__r.__words[2]);
    if ((*((_BYTE *)&v40.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_20;
LABEL_81:
    if (v40.__r_.__value_.__l.__size_ >= 0x28)
    {
      v13 = (std::string *)v40.__r_.__value_.__r.__words[0];
      if (v40.__r_.__value_.__l.__size_ - 40 >= 4)
        v14 = 4;
      else
        v14 = v40.__r_.__value_.__l.__size_ - 40;
      *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v14;
      if (v14)
        goto LABEL_25;
      goto LABEL_26;
    }
LABEL_107:
    sub_10018CB84();
  }
LABEL_80:
  operator delete(v46.__r_.__value_.__l.__data_);
  v46 = __dst;
  v12 = HIBYTE(v40.__r_.__value_.__r.__words[2]);
  if ((*((_BYTE *)&v40.__r_.__value_.__s + 23) & 0x80) != 0)
    goto LABEL_81;
LABEL_20:
  if (v12 <= 0x27)
    goto LABEL_107;
  v13 = &v40;
  if ((unint64_t)(v12 - 40) >= 4)
    v14 = 4;
  else
    v14 = v12 - 40;
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v14;
  if (v14)
LABEL_25:
    memmove(&__dst, &v13[1].__r_.__value_.__r.__words[2], v14);
LABEL_26:
  __dst.__r_.__value_.__s.__data_[v14] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v42.__r_.__value_.__l.__data_);
    LODWORD(v12) = HIBYTE(v40.__r_.__value_.__r.__words[2]);
    v42 = __dst;
    if ((*((_BYTE *)&v40.__r_.__value_.__s + 23) & 0x80) == 0)
    {
LABEL_28:
      if (v12 > 0x2B)
      {
        v15 = &v40;
        if ((unint64_t)v12 - 44 >= 4)
          v16 = 4;
        else
          v16 = v12 - 44;
        *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v16;
        if (!v16)
          goto LABEL_34;
        goto LABEL_33;
      }
LABEL_108:
      sub_10018CB84();
    }
  }
  else
  {
    v42 = __dst;
    if ((v12 & 0x80) == 0)
      goto LABEL_28;
  }
  if (v40.__r_.__value_.__l.__size_ < 0x2C)
    goto LABEL_108;
  v15 = (std::string *)v40.__r_.__value_.__r.__words[0];
  if (v40.__r_.__value_.__l.__size_ - 44 >= 4)
    v16 = 4;
  else
    v16 = v40.__r_.__value_.__l.__size_ - 44;
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v16;
  if (!v16)
    goto LABEL_34;
LABEL_33:
  memmove(&__dst, (char *)&v15[1].__r_.__value_.__r.__words[2] + 4, v16);
LABEL_34:
  __dst.__r_.__value_.__s.__data_[v16] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    __p = __dst;
    if ((*((_BYTE *)&v40.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_36;
  }
  else
  {
    __p = __dst;
    if ((v12 & 0x80) == 0)
      goto LABEL_36;
  }
  operator delete(v40.__r_.__value_.__l.__data_);
LABEL_36:
  v43 = 0;
  v44 = 0;
  v45 = 0;
  v17 = SHIBYTE(v46.__r_.__value_.__r.__words[2]);
  if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
  else
    v18 = v46.__r_.__value_.__l.__size_;
  v19 = SHIBYTE(v42.__r_.__value_.__r.__words[2]);
  if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v20 = HIBYTE(v42.__r_.__value_.__r.__words[2]);
  else
    v20 = v42.__r_.__value_.__l.__size_;
  v21 = v20 + v18;
  if (v20 + v18 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  if (v21 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    v22 = &__dst;
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v20 + v18;
    if (!v18)
      goto LABEL_49;
    goto LABEL_45;
  }
  v32 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v21 | 7) != 0x17)
    v32 = v21 | 7;
  v33 = v32 + 1;
  v22 = (std::string *)operator new(v32 + 1);
  __dst.__r_.__value_.__l.__size_ = v20 + v18;
  __dst.__r_.__value_.__r.__words[2] = v33 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v22;
  if (v18)
  {
LABEL_45:
    if (v17 >= 0)
      v23 = &v46;
    else
      v23 = (std::string *)v46.__r_.__value_.__r.__words[0];
    memmove(v22, v23, v18);
  }
LABEL_49:
  v24 = (char *)v22 + v18;
  if (v20)
  {
    if (v19 >= 0)
      v25 = &v42;
    else
      v25 = (std::string *)v42.__r_.__value_.__r.__words[0];
    memmove(v24, v25, v20);
  }
  v24[v20] = 0;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v27 = __p.__r_.__value_.__l.__size_;
  v28 = std::string::append(&__dst, (const std::string::value_type *)p_p, v27);
  v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  sub_10030ADDC((uint64_t *)&v40, (uint64_t)&v43);
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_62:
      v30 = v43;
      v31 = *(_DWORD *)a1;
      if (v31 == v31 >> 31)
        goto LABEL_63;
LABEL_72:
      v34 = v44;
      *(_QWORD *)(a1 + 8) = v30;
      *(_QWORD *)(a1 + 16) = v34;
      *(_DWORD *)(a1 + 24) = v45;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_88;
      goto LABEL_73;
    }
  }
  else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_62;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
  v30 = v43;
  v31 = *(_DWORD *)a1;
  if (v31 != v31 >> 31)
    goto LABEL_72;
LABEL_63:
  if (v31 != 1)
  {
    v38 = v44;
    *(_QWORD *)(a1 + 8) = v30;
    *(_QWORD *)(a1 + 16) = v38;
    *(_DWORD *)(a1 + 24) = v45;
    *(_DWORD *)a1 = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_88;
LABEL_73:
    if (v19 < 0)
      goto LABEL_89;
    goto LABEL_74;
  }
  *(_QWORD *)(a1 + 8) = v30;
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_73;
LABEL_88:
  operator delete(__p.__r_.__value_.__l.__data_);
  if (v19 < 0)
  {
LABEL_89:
    operator delete(v42.__r_.__value_.__l.__data_);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_90;
    return a1;
  }
LABEL_74:
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
LABEL_90:
    operator delete(v46.__r_.__value_.__l.__data_);
  return a1;
}

void sub_10030AAA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a28 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030AB8C(unsigned __int16 *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  void (__cdecl **v5)(std::ostringstream *__hidden);
  char *v6;
  const std::locale::facet *v7;
  void (__cdecl **v9)(std::ostringstream *__hidden);
  _QWORD v10[8];
  void *__p[2];
  __int128 v12;
  int v13;
  void (__cdecl **v14)(std::ostringstream *__hidden);
  std::locale v15;

  v9 = v2;
  *(_QWORD *)((char *)&v10[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v10[-1] + (_QWORD)*(v9 - 3));
  std::ios_base::init(v4, v10);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v10);
  *(_OWORD *)__p = 0u;
  v12 = 0u;
  v13 = 16;
  v5 = v9;
  v6 = (char *)&v10[-1] + (_QWORD)*(v9 - 3);
  if (*((_DWORD *)v6 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)&v10[-1] + (_QWORD)*(v9 - 3)));
    v7 = std::locale::use_facet(&v15, &std::ctype<char>::id);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale(&v15);
    v5 = v9;
  }
  *((_DWORD *)v6 + 36) = 48;
  *(_DWORD *)((char *)v10 + (_QWORD)*(v5 - 3)) = *(_DWORD *)((_BYTE *)v10 + (_QWORD)*(v5 - 3)) & 0xFFFFFFB5 | 8;
  *(_QWORD *)((char *)&v10[2] + (_QWORD)*(v5 - 3)) = 4;
  std::ostream::operator<<(&v9, *a1);
  std::stringbuf::str(v10);
  if (SBYTE7(v12) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(v10);
  return std::ios::~ios(&v14);
}

void sub_10030AD50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F0484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10030AD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  std::locale::~locale((std::locale *)(v9 - 88));
  sub_1000F0484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10030AD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F0484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10030AD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F0484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10030ADA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  std::ostream::~ostream(&a9, v10 + 8);
  std::ios::~ios(v9);
  _Unwind_Resume(a1);
}

void sub_10030ADC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_10030ADDC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  size_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *__p;
  void *v15[2];
  char v16;
  std::string __dst;
  std::string v18;

  v4 = *((char *)a1 + 23);
  if (v4 < 0)
  {
    v13 = a1[1];
    if (v13 != 40)
      goto LABEL_23;
  }
  else
  {
    v13 = *((unsigned __int8 *)a1 + 23);
    if (v4 != 40)
    {
LABEL_23:
      sub_1000D5048(v15, "");
      sub_10023DBCC("Invalid hex string length ", &__dst);
      sub_1001E2B30(&v13, &v18);
      sub_100174738((uint64_t)v15, (uint64_t)&__dst, 2);
      if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v18.__r_.__value_.__l.__data_);
        if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_25:
          if ((v16 & 0x80000000) == 0)
            goto LABEL_26;
LABEL_29:
          operator delete(v15[0]);
LABEL_26:
          sub_1000F2AE4((uint64_t)&__p);
        }
      }
      else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_25;
      }
      operator delete(__dst.__r_.__value_.__l.__data_);
      if ((v16 & 0x80000000) == 0)
        goto LABEL_26;
      goto LABEL_29;
    }
  }
  v5 = 0;
  v6 = 0;
  while ((*((char *)a1 + 23) & 0x80000000) == 0)
  {
    v7 = *((unsigned __int8 *)a1 + 23);
    if (v6 >= v7)
      return;
    v8 = a1;
    v9 = v7 + v5;
    if (v9 >= 2)
      v10 = 2;
    else
      v10 = v9;
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v10;
    if (v10)
LABEL_13:
      memmove(&__dst, (char *)v8 + v6, v10);
LABEL_14:
    __dst.__r_.__value_.__s.__data_[v10] = 0;
    *(_BYTE *)(a2 + (v6 >> 1)) = std::stoi(&__dst, 0, 16);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
    v6 += 2;
    v5 -= 2;
  }
  v11 = a1[1];
  if (v6 < v11)
  {
    v8 = (uint64_t *)*a1;
    v12 = v11 + v5;
    if (v12 >= 2)
      v10 = 2;
    else
      v10 = v12;
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v10;
    if (v10)
      goto LABEL_13;
    goto LABEL_14;
  }
}

void sub_10030AFC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10030B03C@<X0>(const void **a1@<X0>, void *a2@<X8>)
{
  int v3;
  const void *v4;
  size_t v5;
  const void *v7;
  void *__p;
  void *v9[2];
  char v10;
  std::string v11;
  std::string v12;
  std::string v13;

  v3 = *((char *)a1 + 23);
  if ((v3 & 0x80000000) == 0)
  {
    v7 = (const void *)*((unsigned __int8 *)a1 + 23);
    if (v3 == 20)
    {
      LOBYTE(v3) = 20;
      goto LABEL_5;
    }
LABEL_12:
    sub_1000D5048(v9, "");
    sub_100169714("Beacon mac address was", &v11);
    sub_1001E2B30(&v7, &v12);
    sub_1001E18C4(" bytes, should have been 20", &v13);
    sub_100174738((uint64_t)v9, (uint64_t)&v11, 3);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v13.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_14:
        if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_15;
        goto LABEL_19;
      }
    }
    else if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_14;
    }
    operator delete(v12.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_15:
      if ((v10 & 0x80000000) == 0)
        goto LABEL_16;
LABEL_20:
      operator delete(v9[0]);
LABEL_16:
      sub_1000F2AE4((uint64_t)&__p);
    }
LABEL_19:
    operator delete(v11.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_16;
    goto LABEL_20;
  }
  v7 = a1[1];
  if (v7 != (const void *)20)
    goto LABEL_12;
LABEL_5:
  if ((v3 & 0x80u) == 0)
    v4 = a1;
  else
    v4 = *a1;
  if ((v3 & 0x80u) == 0)
    v5 = v3;
  else
    v5 = (size_t)a1[1];
  return memcpy(a2, v4, v5);
}

void sub_10030B1C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10030B208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  void **v17;

  while (1)
  {
    if (*((char *)v17 - 1) < 0)
      operator delete(*(v17 - 3));
    v17 -= 3;
    if (v17 == (void **)&a17)
      JUMPOUT(0x10030B1E4);
  }
}

uint64_t sub_10030B234()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030B290()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10030B2EC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100405CD0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10030B2FC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100405CD0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_10030B32C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030B388()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10030B480(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10030B4EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

dispatch_queue_t *sub_10030B554(dispatch_queue_t *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  dispatch_queue_t v8;

  v5 = a2;
  v6 = a3;
  *a1 = dispatch_queue_create("dynamic settings runtime configuration", 0);
  a1[2] = (dispatch_queue_t)objc_alloc_init((Class)NSMutableArray);
  a1[3] = 0;
  if (v6)
    v7 = v6;
  else
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByAppendingString:", CFSTR("/Prefs")));
  v8 = a1[3];
  a1[3] = v7;

  sub_10030B638((uint64_t)a1);
  return a1;
}

void sub_10030B5F0(_Unwind_Exception *a1)
{
  void *v1;
  id *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10030B60C(_Unwind_Exception *a1)
{
  void *v1;
  id *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t sub_10030B638(uint64_t a1)
{
  const char *v2;
  NSObject *v3;
  uint64_t result;
  _QWORD handler[5];
  void *v6;
  void *__p[2];
  char v8;
  std::string v9;

  v2 = (const char *)objc_msgSend(*(id *)(a1 + 24), "UTF8String");
  v3 = *(NSObject **)a1;
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3321888768;
  handler[2] = sub_10030B8B0;
  handler[3] = &unk_100405D10;
  handler[4] = a1;
  result = notify_register_dispatch(v2, (int *)(a1 + 8), v3, handler);
  if ((_DWORD)result)
  {
    sub_1000D5048(__p, "");
    sub_10030C8B4("Failed to register", &v9);
    sub_100174738((uint64_t)__p, (uint64_t)&v9, 1);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v9.__r_.__value_.__l.__data_);
    if (v8 < 0)
      operator delete(__p[0]);
    sub_1000F2AE4((uint64_t)&v6);
  }
  return result;
}

void sub_10030B744(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a20 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030B788(uint64_t a1)
{
  notify_cancel(*(_DWORD *)(a1 + 8));

  return a1;
}

void **sub_10030B7CC(void **a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  *a1 = 0;
  a1[2] = 0;
  a1[3] = 0;
  notify_cancel(*(_DWORD *)(a2 + 8));
  v4 = *a1;
  *a1 = 0;
  v5 = *(void **)a2;
  *(_QWORD *)a2 = 0;
  v6 = *a1;
  *a1 = v5;

  v7 = *(void **)a2;
  *(_QWORD *)a2 = v4;

  v8 = a1[2];
  a1[2] = 0;
  v9 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0;
  v10 = a1[2];
  a1[2] = v9;

  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v8;

  v12 = a1[3];
  a1[3] = 0;
  v13 = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  v14 = a1[3];
  a1[3] = v13;

  v15 = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v12;

  sub_10030B638((uint64_t)a1);
  return a1;
}

void sub_10030B888(_Unwind_Exception *a1)
{
  id *v1;

  _Unwind_Resume(a1);
}

void sub_10030B8B0(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = v1;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "notify", (_QWORD)v6);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_10030B99C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_10030B9BC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 32) = *(_QWORD *)(a2 + 32);
  return result;
}

void sub_10030B9C8(NSObject **a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NotificationListener *v7;
  NSObject *v8;
  NotificationListener *v9;
  _QWORD v10[4];
  NotificationListener *v11;
  NSObject **v12;

  v5 = a2;
  v6 = a3;
  v7 = -[NotificationListener initWithCallback:onQueue:]([NotificationListener alloc], "initWithCallback:onQueue:", v6, v5);
  v8 = *a1;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3321888768;
  v10[2] = sub_10030BA98;
  v10[3] = &unk_100405D40;
  v9 = v7;
  v11 = v9;
  v12 = a1;
  dispatch_async(v8, v10);

}

void sub_10030BA84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_10030BA98(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 16), "addObject:", *(_QWORD *)(a1 + 32));
}

id sub_10030BAA4(uint64_t a1, uint64_t a2)
{
  id result;
  uint64_t v5;

  result = *(id *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

void sub_10030BAD4(uint64_t a1)
{

}

void sub_10030BADC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  void **v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *, uint64_t, _BYTE *);
  void *v7;
  id v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  __n128 (*v13)(__n128 *, __n128 *);
  uint64_t (*v14)();
  uint64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 32);
  v1 = *(void **)(a1 + 40);
  v10 = 0;
  v11 = &v10;
  v12 = 0x4012000000;
  v13 = sub_1000BCD18;
  v14 = nullsub_40;
  v15 = 0;
  v16 = 0;
  v3 = *(void **)(v2 + 16);
  v4 = _NSConcreteStackBlock;
  v5 = 3221225472;
  v6 = sub_10030C070;
  v7 = &unk_100405E28;
  v8 = v1;
  v9 = &v10;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", &v4);
  if (*((_BYTE *)v11 + 48))
    objc_msgSend(*(id *)(v2 + 16), "removeObjectAtIndex:", v11[7], v4, v5, v6, v7);

  _Block_object_dispose(&v10, 8);
}

void sub_10030BBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10030BBCC(uint64_t a1, uint64_t a2)
{
  void *v3;
  id result;

  v3 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  result = objc_retainBlock(v3);
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_10030BBF8(uint64_t a1)
{

}

uint64_t sub_10030BC00(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v16[2];
  void *v17[2];
  char v18;
  std::string __p;

  v9 = a2;
  v10 = a3;
  v11 = a4;
  *(_QWORD *)a1 = off_100405DB0;
  v12 = v9;
  *(_QWORD *)(a1 + 8) = v12;
  v13 = v10;
  *(_QWORD *)(a1 + 16) = v13;
  v14 = v11;
  *(_QWORD *)(a1 + 24) = v14;
  sub_10030B554((dispatch_queue_t *)(a1 + 32), v12, a5);
  if (!*(_QWORD *)(a1 + 8))
  {
    sub_1000D5048(v17, "");
    sub_1001E18C4("applicationId cannot be nil", &__p);
    sub_100174738((uint64_t)v17, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v18 < 0)
      operator delete(v17[0]);
    sub_10015C2DC((uint64_t)v16);
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    sub_1000D5048(v17, "");
    sub_10030C8B4("user cannot be nil", &__p);
    sub_100174738((uint64_t)v17, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v18 < 0)
      operator delete(v17[0]);
    sub_10015C2DC((uint64_t)v16);
  }

  return a1;
}

void sub_10030BDC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  id *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;

  if (a14 < 0)
    operator delete(__p);
  sub_10030B788(v24);

  _Unwind_Resume(a1);
}

const void **sub_10030BE4C(const void **a1)
{
  const void *v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
    CFRelease(v2);
  return a1;
}

void sub_10030BE80(uint64_t a1, void *a2, void *a3)
{
  sub_10030B9C8((NSObject **)(a1 + 32), a2, a3);
}

void sub_10030BE88(uint64_t a1, id a2)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  _QWORD v5[5];
  id v6;

  v2 = a1 + 32;
  v3 = *(NSObject **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3321888768;
  v5[2] = sub_10030BADC;
  v5[3] = &unk_100405D70;
  v4 = objc_retainBlock(a2);
  v5[4] = v2;
  v6 = objc_retainBlock(v4);
  dispatch_async(v3, v5);

}

void sub_10030BF14(uint64_t a1)
{
  notify_cancel(*(_DWORD *)(a1 + 40));

  operator delete();
}

void sub_10030BF80()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "cannot override values in this kind of configuration");
}

void sub_10030BFBC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10030BFD0()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "cannot override values in this kind of configuration");
}

void sub_10030C00C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10030C020()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "cannot override values in this kind of configuration");
}

void sub_10030C05C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10030C070(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  uint64_t v9;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "cb"));
  v8 = *(void **)(a1 + 32);

  if (v7 == v8)
  {
    *a4 = 1;
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    *(_QWORD *)(v9 + 56) = a3;
    *(_BYTE *)(v9 + 48) = 1;
  }
}

void sub_10030C0F0(char **a1, unint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;

  v2 = *a1;
  if (a2 > (a1[2] - *a1) >> 5)
  {
    if (a2 >> 59)
      sub_1000D02C0();
    v4 = a1[1];
    v5 = 32 * a2;
    v6 = (char *)operator new(32 * a2);
    v7 = 0;
    v8 = &v6[v4 - v2];
    *(_QWORD *)&v12 = v8;
    *((_QWORD *)&v12 + 1) = &v6[v5];
    while (&v4[v7] != v2)
    {
      v7 -= 32;
      sub_1000D0028((uint64_t)&v8[v7], (uint64_t)&v4[v7]);
    }
    v9 = &v8[v7];
    v10 = *a1;
    v11 = (uint64_t)a1[1];
    *a1 = v9;
    *(_OWORD *)(a1 + 1) = v12;
    while ((char *)v11 != v10)
    {
      v11 -= 32;
      sub_1000B3D5C(v11);
    }
    if (v10)
      operator delete(v10);
  }
}

void **sub_10030C204(void **a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = *a1;
    if ((void *)v3 != v2)
    {
      do
      {
        v3 -= 32;
        sub_1000B3D5C(v3);
      }
      while ((void *)v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_10030C264(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 32;
    sub_1000B3D5C(i - 32);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_10030C2B4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;

  v3 = (uint64_t)(a1[1] - *a1) >> 5;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59)
    sub_1000D02C0();
  v6 = a1[2] - *a1;
  if (v6 >> 4 > v4)
    v4 = v6 >> 4;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFE0)
    v7 = 0x7FFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  if (v7)
  {
    if (v7 >> 59)
      sub_1000CDEB8();
    v8 = (char *)operator new(32 * v7);
  }
  else
  {
    v8 = 0;
  }
  v16 = (uint64_t)&v8[32 * v3];
  *((_QWORD *)&v17 + 1) = &v8[32 * v7];
  sub_1000CFEC8(v16, a2);
  v9 = 0;
  v11 = (void *)*a1;
  for (i = a1[1]; (void *)(i + v9) != v11; sub_1000D0028(v9 + v16, v9 + i))
    v9 -= 32;
  v12 = v16 + v9;
  v13 = (void *)*a1;
  v14 = a1[1];
  *a1 = v12;
  *(_QWORD *)&v17 = v16 + 32;
  *(_OWORD *)(a1 + 1) = v17;
  while ((void *)v14 != v13)
  {
    v14 -= 32;
    sub_1000B3D5C(v14);
  }
  if (v13)
    operator delete(v13);
  return v16 + 32;
}

void sub_10030C3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_10030C264((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_10030C434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  _BYTE *v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint8x8_t v14;
  uint64_t **v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  float v28;
  float v29;
  _QWORD *v30;
  _QWORD *v31;
  _BOOL8 v32;
  unint64_t v33;
  unint64_t v34;
  size_t prime;
  int8x8_t v36;
  unint64_t v37;
  uint8x8_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD v43[2];
  char v44;

  v7 = (_BYTE *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v10 = v9;
  }
  v11 = sub_1000CFA7C((uint64_t)v43, (uint64_t *)a2, v10);
  v12 = v11;
  v13 = *(_QWORD *)(a1 + 8);
  if (v13)
  {
    v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    if (v14.u32[0] > 1uLL)
    {
      v4 = v11;
      if (v11 >= v13)
        v4 = v11 % v13;
    }
    else
    {
      v4 = (v13 - 1) & v11;
    }
    v15 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v15)
    {
      v16 = *v15;
      if (*v15)
      {
        v17 = v7[23];
        if (v17 >= 0)
          v18 = v7[23];
        else
          v18 = *((_QWORD *)v7 + 1);
        if (v17 < 0)
          v7 = *(_BYTE **)v7;
        if (v14.u32[0] < 2uLL)
        {
          while (1)
          {
            v23 = v16[1];
            if (v23 == v12)
            {
              v24 = *((unsigned __int8 *)v16 + 39);
              if ((v24 & 0x80u) == 0)
                v25 = *((unsigned __int8 *)v16 + 39);
              else
                v25 = v16[3];
              if (v25 == v18)
              {
                if ((v24 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v16[2], v7, v16[3]))
                    return v16;
                }
                else
                {
                  if (!*((_BYTE *)v16 + 39))
                    return v16;
                  v26 = 0;
                  while (*((unsigned __int8 *)v16 + v26 + 16) == v7[v26])
                  {
                    if (v24 == ++v26)
                      return v16;
                  }
                }
              }
            }
            else if ((v23 & (v13 - 1)) != v4)
            {
              goto LABEL_51;
            }
            v16 = (uint64_t *)*v16;
            if (!v16)
              goto LABEL_51;
          }
        }
        do
        {
          v19 = v16[1];
          if (v19 == v12)
          {
            v20 = *((unsigned __int8 *)v16 + 39);
            if ((v20 & 0x80u) == 0)
              v21 = *((unsigned __int8 *)v16 + 39);
            else
              v21 = v16[3];
            if (v21 == v18)
            {
              if ((v20 & 0x80) != 0)
              {
                if (!memcmp((const void *)v16[2], v7, v16[3]))
                  return v16;
              }
              else
              {
                if (!*((_BYTE *)v16 + 39))
                  return v16;
                v22 = 0;
                while (*((unsigned __int8 *)v16 + v22 + 16) == v7[v22])
                {
                  if (v20 == ++v22)
                    return v16;
                }
              }
            }
          }
          else
          {
            if (v19 >= v13)
              v19 %= v13;
            if (v19 != v4)
              break;
          }
          v16 = (uint64_t *)*v16;
        }
        while (v16);
      }
    }
  }
LABEL_51:
  v27 = operator new(0x48uLL);
  v43[0] = v27;
  v43[1] = a1 + 16;
  v44 = 0;
  *v27 = 0;
  v27[1] = v12;
  *((_OWORD *)v27 + 1) = *(_OWORD *)a3;
  v27[4] = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  sub_1000CFEC8((uint64_t)(v27 + 5), a4);
  v44 = 1;
  v28 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v29 = *(float *)(a1 + 32);
  if (!v13 || (float)(v29 * (float)v13) < v28)
  {
    v32 = 1;
    if (v13 >= 3)
      v32 = (v13 & (v13 - 1)) != 0;
    v33 = v32 | (2 * v13);
    v34 = vcvtps_u32_f32(v28 / v29);
    if (v33 <= v34)
      prime = v34;
    else
      prime = v33;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v36 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v36)
      goto LABEL_65;
    if (prime < *(_QWORD *)&v36)
    {
      v37 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v36 < 3uLL || (v38 = (uint8x8_t)vcnt_s8(v36), v38.i16[0] = vaddlv_u8(v38), v38.u32[0] > 1uLL))
      {
        v37 = std::__next_prime(v37);
      }
      else
      {
        v39 = 1 << -(char)__clz(v37 - 1);
        if (v37 >= 2)
          v37 = v39;
      }
      if (prime <= v37)
        prime = v37;
      if (prime < *(_QWORD *)&v36)
LABEL_65:
        sub_100005DD8(a1, prime);
    }
    v13 = *(_QWORD *)(a1 + 8);
    v40 = v13 - 1;
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13)
      {
        v4 = v12 % v13;
        v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v12 % v13));
        v31 = (_QWORD *)v43[0];
        if (v30)
          goto LABEL_54;
      }
      else
      {
        v4 = v12;
        v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
        v31 = (_QWORD *)v43[0];
        if (v30)
          goto LABEL_54;
      }
    }
    else
    {
      v4 = v40 & v12;
      v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v40 & v12));
      v31 = (_QWORD *)v43[0];
      if (v30)
        goto LABEL_54;
    }
LABEL_78:
    *v31 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v43[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v43[0])
    {
      v41 = *(_QWORD *)(*(_QWORD *)v43[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v41 >= v13)
          v41 %= v13;
      }
      else
      {
        v41 &= v13 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v41) = v43[0];
    }
    goto LABEL_89;
  }
  v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  v31 = (_QWORD *)v43[0];
  if (!v30)
    goto LABEL_78;
LABEL_54:
  *v31 = *v30;
  *v30 = v43[0];
LABEL_89:
  v16 = (uint64_t *)v43[0];
  ++*(_QWORD *)(a1 + 24);
  return v16;
}

void sub_10030C878(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000D08E4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_10030C88C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v3;
  va_list va;

  va_start(va, a2);
  if (*(char *)(v2 + 39) < 0)
    operator delete(*v3);
  sub_1000D08E4((uint64_t *)va);
  _Unwind_Resume(a1);
}

std::string *sub_10030C8B4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10030C8E4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030C900()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030C95C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10030C9B8()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

char *sub_10030C9CC(char *__dst, __int128 *a2, __int128 *a3)
{
  __int128 v5;
  char *v6;
  __int128 v7;

  if (*((char *)a2 + 23) < 0)
  {
    sub_10006CED8(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    v6 = __dst + 24;
    if ((*((char *)a3 + 23) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v5 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v5;
    v6 = __dst + 24;
    if ((*((char *)a3 + 23) & 0x80000000) == 0)
    {
LABEL_3:
      v7 = *a3;
      *((_QWORD *)v6 + 2) = *((_QWORD *)a3 + 2);
      *(_OWORD *)v6 = v7;
      return __dst;
    }
  }
  sub_10006CED8(v6, *(void **)a3, *((_QWORD *)a3 + 1));
  return __dst;
}

void sub_10030CA58(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_10030CA74(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_10030CAA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  const void *v9;
  size_t v10;
  void *v11;
  std::runtime_error v12[3];
  uint64_t (**v13)();
  uint64_t v14;
  __int128 v15;
  int v16;
  std::runtime_error v17;
  _QWORD v18[2];
  __int128 v19;
  int v20;
  uint64_t (**v21)();

  boost::filesystem::filesystem_error::filesystem_error(v12, a1);
  v14 = 0;
  v15 = 0uLL;
  v16 = -1;
  v12[0].__vftable = (std::runtime_error_vtbl *)off_1003F7020;
  v13 = off_1003F7048;
  v21 = (uint64_t (**)())&off_1003EDEA0;
  boost::filesystem::filesystem_error::filesystem_error(&v17, (uint64_t)v12);
  v18[0] = &off_1003EDD90;
  v18[1] = v14;
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14);
  v19 = v15;
  v20 = v16;
  v17.__vftable = (std::runtime_error_vtbl *)off_1003F6F80;
  v18[0] = off_1003F6FB8;
  v21 = &off_1003F6FF0;
  sub_1000CE34C((uint64_t)v18, (uint64_t)&v13);
  *(_QWORD *)&v19 = a2;
  *((_QWORD *)&v19 + 1) = a3;
  v20 = a4;
  v9 = *(const void **)a5;
  v10 = *(_QWORD *)(a5 + 8) - *(_QWORD *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_1000D02C0();
    v11 = operator new(v10);
    memcpy(v11, v9, v10);
  }
  sub_10017ADB0();
}

void sub_10030CCE8(void *a1)
{
  boost::filesystem::filesystem_error *v1;

  boost::filesystem::filesystem_error::~filesystem_error(v1);
  sub_1000CDD68(a1);
}

void sub_10030CCFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)va);
  sub_1000CDD68(a1);
}

void sub_10030CD10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;

  a31 = v32 + 16;
  if (a32)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a32 + 32))(a32))
    {
      a32 = 0;
      boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)&a25);
      sub_1000CDD68(a1);
    }
  }
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)&a25);
  sub_1000CDD68(a1);
}

void sub_10030CD5C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000CDD68(a1);
  }
  sub_1000CDD68(a1);
}

uint64_t sub_10030CD84()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030CDE0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

std::string *sub_10030CE3C@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10030CE6C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030CE88()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030CEE4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10030CF40()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t sub_10030CF54()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030CFB0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10030D00C()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

Class sub_10030D020()
{
  Class result;

  if (qword_10041A488 != -1)
    dispatch_once(&qword_10041A488, &stru_100405E88);
  result = objc_getClass("AVAssetWriter");
  qword_10041A4B0 = (uint64_t)result;
  return result;
}

Class sub_10030D06C()
{
  Class result;

  if (qword_10041A488 != -1)
    dispatch_once(&qword_10041A488, &stru_100405E88);
  result = objc_getClass("AVAssetWriterInput");
  qword_10041A4B8 = (uint64_t)result;
  return result;
}

Class sub_10030D0B8()
{
  Class result;

  if (qword_10041A488 != -1)
    dispatch_once(&qword_10041A488, &stru_100405E88);
  result = objc_getClass("AVAssetWriterInputPixelBufferAdaptor");
  qword_10041A4C0 = (uint64_t)result;
  return result;
}

Class sub_10030D104()
{
  Class result;

  if (qword_10041A488 != -1)
    dispatch_once(&qword_10041A488, &stru_100405E88);
  result = objc_getClass("AVAssetReader");
  qword_10041A4D0 = (uint64_t)result;
  return result;
}

Class sub_10030D150()
{
  Class result;

  if (qword_10041A488 != -1)
    dispatch_once(&qword_10041A488, &stru_100405E88);
  result = objc_getClass("AVURLAsset");
  qword_10041A4D8 = (uint64_t)result;
  return result;
}

Class sub_10030D19C()
{
  Class result;

  if (qword_10041A488 != -1)
    dispatch_once(&qword_10041A488, &stru_100405E88);
  result = objc_getClass("AVAssetReaderTrackOutput");
  qword_10041A4E0 = (uint64_t)result;
  return result;
}

id sub_10030D1E8()
{
  id *v0;

  if (qword_10041A488 != -1)
  {
    dispatch_once(&qword_10041A488, &stru_100405E88);
    v0 = (id *)dlsym((void *)qword_10041A490, "AVMediaTypeVideo");
    if (!v0)
      return (id)qword_10041A3E8;
    goto LABEL_3;
  }
  v0 = (id *)dlsym((void *)qword_10041A490, "AVMediaTypeVideo");
  if (v0)
LABEL_3:
    objc_storeStrong((id *)&qword_10041A3E8, *v0);
  return (id)qword_10041A3E8;
}

id sub_10030D268()
{
  id *v0;

  if (qword_10041A488 != -1)
  {
    dispatch_once(&qword_10041A488, &stru_100405E88);
    v0 = (id *)dlsym((void *)qword_10041A490, "AVFileTypeMPEG4");
    if (!v0)
      return (id)qword_10041A3F0;
    goto LABEL_3;
  }
  v0 = (id *)dlsym((void *)qword_10041A490, "AVFileTypeMPEG4");
  if (v0)
LABEL_3:
    objc_storeStrong((id *)&qword_10041A3F0, *v0);
  return (id)qword_10041A3F0;
}

id sub_10030D2E8()
{
  id *v0;

  if (qword_10041A488 != -1)
  {
    dispatch_once(&qword_10041A488, &stru_100405E88);
    v0 = (id *)dlsym((void *)qword_10041A490, "AVVideoCodecKey");
    if (!v0)
      return (id)qword_10041A3F8;
    goto LABEL_3;
  }
  v0 = (id *)dlsym((void *)qword_10041A490, "AVVideoCodecKey");
  if (v0)
LABEL_3:
    objc_storeStrong((id *)&qword_10041A3F8, *v0);
  return (id)qword_10041A3F8;
}

id sub_10030D368()
{
  id *v0;

  if (qword_10041A488 != -1)
  {
    dispatch_once(&qword_10041A488, &stru_100405E88);
    v0 = (id *)dlsym((void *)qword_10041A490, "AVVideoCodecH264");
    if (!v0)
      return (id)qword_10041A400;
    goto LABEL_3;
  }
  v0 = (id *)dlsym((void *)qword_10041A490, "AVVideoCodecH264");
  if (v0)
LABEL_3:
    objc_storeStrong((id *)&qword_10041A400, *v0);
  return (id)qword_10041A400;
}

id sub_10030D3E8()
{
  id *v0;

  if (qword_10041A488 != -1)
  {
    dispatch_once(&qword_10041A488, &stru_100405E88);
    v0 = (id *)dlsym((void *)qword_10041A490, "AVVideoWidthKey");
    if (!v0)
      return (id)qword_10041A408;
    goto LABEL_3;
  }
  v0 = (id *)dlsym((void *)qword_10041A490, "AVVideoWidthKey");
  if (v0)
LABEL_3:
    objc_storeStrong((id *)&qword_10041A408, *v0);
  return (id)qword_10041A408;
}

id sub_10030D468()
{
  id *v0;

  if (qword_10041A488 != -1)
  {
    dispatch_once(&qword_10041A488, &stru_100405E88);
    v0 = (id *)dlsym((void *)qword_10041A490, "AVVideoHeightKey");
    if (!v0)
      return (id)qword_10041A410;
    goto LABEL_3;
  }
  v0 = (id *)dlsym((void *)qword_10041A490, "AVVideoHeightKey");
  if (v0)
LABEL_3:
    objc_storeStrong((id *)&qword_10041A410, *v0);
  return (id)qword_10041A410;
}

uint64_t sub_10030D4E8(uint64_t a1)
{
  return off_100419100(a1);
}

uint64_t sub_10030D4F4(uint64_t a1)
{
  __int128 v2;
  uint64_t v3;

  v2 = *(_OWORD *)a1;
  v3 = *(_QWORD *)(a1 + 16);
  return off_100419108(&v2);
}

uint64_t sub_10030D52C(uint64_t a1)
{
  return off_100419110(a1);
}

uint64_t sub_10030D538(uint64_t a1, uint64_t a2)
{
  return off_100419118(a1, a2);
}

uint64_t sub_10030D544()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_10041A508 == -1)
  {
    v0 = (uint64_t *)dlsym((void *)qword_10041A510, "kCVPixelBufferPixelFormatTypeKey");
    if (v0)
    {
LABEL_3:
      result = *v0;
      qword_10041A500 = result;
      return result;
    }
  }
  else
  {
    dispatch_once(&qword_10041A508, &stru_100405EC8);
    v0 = (uint64_t *)dlsym((void *)qword_10041A510, "kCVPixelBufferPixelFormatTypeKey");
    if (v0)
      goto LABEL_3;
  }
  return qword_10041A500;
}

uint64_t sub_10030D5C4(uint64_t a1)
{
  return off_100419128(a1);
}

uint64_t sub_10030D5D0(uint64_t a1)
{
  return off_100419130(a1);
}

void sub_10030D5DC(id a1)
{
  qword_10041A490 = (uint64_t)dlopen("/System/Library/\"Frameworks\"/AVFoundation.framework/AVFoundation", 2);
}

void sub_10030D604(id a1)
{
  qword_10041A4F8 = (uint64_t)dlopen("/System/Library/\"Frameworks\"/CoreMedia.framework/CoreMedia", 2);
}

uint64_t sub_10030D62C(uint64_t a1)
{
  if (qword_10041A4F0 != -1)
    dispatch_once(&qword_10041A4F0, &stru_100405EA8);
  off_100419100 = (uint64_t (*)())dlsym((void *)qword_10041A4F8, "CMSampleBufferGetPresentationTimeStamp");
  return ((uint64_t (*)(uint64_t))off_100419100)(a1);
}

uint64_t sub_10030D69C(__int128 *a1)
{
  __int128 v3;
  uint64_t v4;

  if (qword_10041A4F0 != -1)
    dispatch_once(&qword_10041A4F0, &stru_100405EA8);
  off_100419108 = (uint64_t (*)())dlsym((void *)qword_10041A4F8, "CMTimeGetSeconds");
  v3 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  return ((uint64_t (*)(__int128 *))off_100419108)(&v3);
}

uint64_t sub_10030D720(uint64_t a1)
{
  if (qword_10041A4F0 != -1)
    dispatch_once(&qword_10041A4F0, &stru_100405EA8);
  off_100419110 = (uint64_t (*)())dlsym((void *)qword_10041A4F8, "CMSampleBufferGetImageBuffer");
  return ((uint64_t (*)(uint64_t))off_100419110)(a1);
}

uint64_t sub_10030D788(uint64_t a1, uint64_t a2)
{
  if (qword_10041A4F0 != -1)
    dispatch_once(&qword_10041A4F0, &stru_100405EA8);
  off_100419118 = (uint64_t (*)())dlsym((void *)qword_10041A4F8, "CMTimeMake");
  return ((uint64_t (*)(uint64_t, uint64_t))off_100419118)(a1, a2);
}

void sub_10030D808(id a1)
{
  qword_10041A510 = (uint64_t)dlopen("/System/Library/\"Frameworks\"/CoreVideo.framework/CoreVideo", 2);
}

uint64_t sub_10030D830(uint64_t a1)
{
  if (qword_10041A508 != -1)
    dispatch_once(&qword_10041A508, &stru_100405EC8);
  off_100419128 = (uint64_t (*)())dlsym((void *)qword_10041A510, "CVPixelBufferGetWidth");
  return ((uint64_t (*)(uint64_t))off_100419128)(a1);
}

uint64_t sub_10030D898(uint64_t a1)
{
  if (qword_10041A508 != -1)
    dispatch_once(&qword_10041A508, &stru_100405EC8);
  off_100419130 = (uint64_t (*)())dlsym((void *)qword_10041A510, "CVPixelBufferGetHeight");
  return ((uint64_t (*)(uint64_t))off_100419130)(a1);
}

void sub_10030D900()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t sub_10030D914()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030D970()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030D9CC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030DA28()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10030DA84()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t sub_10030DA98()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030DAF4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030DB50()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030DBAC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10030DC08()
{
  sub_10030DC98();
}

void sub_10030DC40(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_10030DC54(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_10030DC54(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_100304FF4(v2);
    operator delete();
  }
  return a1;
}

void sub_10030DC98()
{
  operator new();
}

void sub_10030DD50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  operator delete();
}

uint64_t sub_10030DD8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t next_header2;
  int v13;
  const char *v14;
  size_t v15;
  size_t v16;
  __int128 *p_dst;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  __int128 *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;
  char *v29;
  int v30;
  uint64_t extract2;
  uint64_t v32;
  uint64_t **v34;
  uint64_t v36;
  void *__p[2];
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  __int128 __dst;
  int64_t v46;
  uint8_t buf[4];
  int v48;
  __int16 v49;
  __int128 *v50;

  if (*(char *)(a2 + 23) < 0)
  {
    sub_10006CED8(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v38 = *(_QWORD *)(a2 + 16);
  }
  v7 = sub_100304FF0(v39, __p, 3, 0);
  v36 = a2;
  if (SHIBYTE(v38) < 0)
    operator delete(__p[0]);
  v34 = (uint64_t **)a1;
  v8 = *a1;
  v9 = archive_entry_new(v7);
  v10 = *(_QWORD *)(v8 + 24);
  v11 = v40;
  v44 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  while (1)
  {
    next_header2 = archive_read_next_header2(v10, v9);
    if ((_DWORD)next_header2 == 1)
      break;
    ++v44;
    sub_10030E29C(v8, next_header2, "Failed to read entry ", &v44);
    v13 = v44;
    v14 = (const char *)archive_entry_pathname(v9);
    v15 = strlen(v14);
    if (v15 >= 0x7FFFFFFFFFFFFFF8)
      sub_1000CDE30();
    v16 = v15;
    if (v15 >= 0x17)
    {
      v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v15 | 7) != 0x17)
        v18 = v15 | 7;
      v19 = v18 + 1;
      p_dst = (__int128 *)operator new(v18 + 1);
      *((_QWORD *)&__dst + 1) = v16;
      v46 = v19 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
LABEL_15:
      memmove(p_dst, v14, v16);
      goto LABEL_16;
    }
    HIBYTE(v46) = v15;
    p_dst = &__dst;
    if (v15)
      goto LABEL_15;
LABEL_16:
    *((_BYTE *)p_dst + v16) = 0;
    sub_1000681BC(&__dst);
    if (!v20)
    {
      v23 = *(_QWORD *)(a3 + 24);
      if (!v23)
        sub_10016CA74();
      (*(void (**)(void **__return_ptr, uint64_t, __int128 *))(*(_QWORD *)v23 + 48))(&v41, v23, &__dst);
      goto LABEL_25;
    }
    if (qword_100417ED8 == -1)
    {
      v21 = qword_100417EE0;
      if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
        goto LABEL_19;
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_100405F08);
      v21 = qword_100417EE0;
      if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      {
LABEL_19:
        v22 = &__dst;
        if (v46 < 0)
          v22 = (__int128 *)__dst;
        *(_DWORD *)buf = 67109378;
        v48 = v13;
        v49 = 2080;
        v50 = v22;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "Cannot extract entry %d (%s) - it is absolute", buf, 0x12u);
      }
    }
    v41 = 0;
    v42 = 0;
    v43 = 0;
LABEL_25:
    if (SHIBYTE(v46) < 0)
    {
      operator delete((void *)__dst);
      v24 = HIBYTE(v43);
      if (v43 >= 0)
        v25 = HIBYTE(v43);
      else
        v25 = v42;
      if (v25)
        goto LABEL_37;
LABEL_30:
      if (v24 < 0)
        goto LABEL_44;
LABEL_31:
      if (v25)
        goto LABEL_45;
    }
    else
    {
      v24 = HIBYTE(v43);
      if (v43 >= 0)
        v25 = HIBYTE(v43);
      else
        v25 = v42;
      if (!v25)
        goto LABEL_30;
LABEL_37:
      sub_100067DEC((uint64_t)&v41, v36, 0, (uint64_t)&__dst);
      v26 = *(_QWORD *)(a4 + 8);
      if (v26 < *(_QWORD *)(a4 + 16))
      {
        v27 = __dst;
        *(_QWORD *)(v26 + 16) = v46;
        *(_OWORD *)v26 = v27;
        *(_QWORD *)(a4 + 8) = v26 + 24;
        v28 = (char *)v26;
        if ((*(char *)(v26 + 23) & 0x80000000) == 0)
          goto LABEL_43;
LABEL_42:
        v28 = *(char **)v28;
        goto LABEL_43;
      }
      v29 = sub_1001697DC((void **)a4, (uint64_t)&__dst);
      v30 = SHIBYTE(v46);
      *(_QWORD *)(a4 + 8) = v29;
      if ((v30 & 0x80000000) == 0)
      {
        v28 = v29 - 24;
        if ((*(v29 - 1) & 0x80000000) == 0)
          goto LABEL_43;
        goto LABEL_42;
      }
      operator delete((void *)__dst);
      v32 = *(_QWORD *)(a4 + 8);
      v28 = (char *)(v32 - 24);
      if (*(char *)(v32 - 1) < 0)
        goto LABEL_42;
LABEL_43:
      archive_entry_set_pathname(v9, v28);
      if ((v43 & 0x8000000000000000) == 0)
        goto LABEL_31;
LABEL_44:
      operator delete(v41);
      if (v25)
      {
LABEL_45:
        if (!*(_WORD *)(archive_entry_stat(v9) + 4))
          archive_entry_set_perm(v9, 384);
        extract2 = archive_read_extract2(v10, v9, v11);
        *(_QWORD *)&__dst = archive_entry_pathname(v9);
        sub_10030E538((uint64_t)v39, extract2, "Failed to save entry ", &v44, (const std::string::value_type **)&__dst);
      }
    }
  }
  if (v9)
    archive_entry_free(v9);
  sub_10030530C((uint64_t)v39);
  sub_10030503C(*v34);
  return sub_100304FF4((uint64_t)v39);
}

void sub_10030E1B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_1000CDD68(exception_object);
}

uint64_t sub_10030E29C(uint64_t result, uint64_t a2, std::string::value_type *__s, int *a4)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  std::string *v11;
  std::string::size_type v12;
  unint64_t v13;
  std::string *v14;
  std::string::value_type *v15;
  __int128 *v16;
  std::string::size_type *v17;
  unint64_t v18;
  __int128 v19;
  std::string::value_type v20;
  void *__p;
  void *v22;
  char v23;
  int v24;
  char *v25;
  char v26;
  int v27;
  std::string v28;
  std::string v29;
  char v30;
  _BYTE v31[6];
  char v32;
  _BYTE *v33;
  char *v34;

  if ((_DWORD)a2)
  {
    v6 = result;
    v23 = 0;
    LOBYTE(v22) = 0;
    memset(&v28, 0, sizeof(v28));
    std::string::assign(&v28, __s);
    memset(&v29, 0, sizeof(v29));
    v33 = v31;
    v34 = &v32;
    v7 = *a4;
    if (*a4 >= 0)
      v8 = *a4;
    else
      v8 = -v7;
    v24 = v8;
    v25 = &v32;
    v26 = 48;
    v27 = 48;
    v9 = sub_10000EDD4((uint64_t)&v24);
    v10 = (char *)v9;
    v11 = &v29;
    if (v7 < 0)
    {
      *(_BYTE *)(v9 - 1) = 45;
      v10 = (char *)(v9 - 1);
      v33 = (_BYTE *)(v9 - 1);
      v34 = &v32;
      v12 = (std::string::size_type)(&v32 - v9 + 1);
      if (v12 < 0x17)
      {
LABEL_7:
        if (v10 != &v32)
        {
LABEL_8:
          v13 = &v30 - v10 + 23;
          if (v13 < 0x20 || (unint64_t)((char *)v11 - v10) < 0x20)
          {
            v14 = v11;
            v15 = v10;
          }
          else
          {
            v14 = (std::string *)((char *)v11 + (v13 & 0xFFFFFFFFFFFFFFE0));
            v15 = &v10[v13 & 0xFFFFFFFFFFFFFFE0];
            v16 = (__int128 *)(v10 + 16);
            v17 = &v11->__r_.__value_.__r.__words[2];
            v18 = v13 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v19 = *v16;
              *((_OWORD *)v17 - 1) = *(v16 - 1);
              *(_OWORD *)v17 = v19;
              v16 += 2;
              v17 += 4;
              v18 -= 32;
            }
            while (v18);
            if (v13 == (v13 & 0xFFFFFFFFFFFFFFE0))
              goto LABEL_21;
          }
          do
          {
            v20 = *v15++;
            v14->__r_.__value_.__s.__data_[0] = v20;
            v14 = (std::string *)((char *)v14 + 1);
          }
          while (v15 != &v32);
LABEL_21:
          v14->__r_.__value_.__s.__data_[0] = 0;
          if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
            v29.__r_.__value_.__l.__size_ = v12;
          else
            *((_BYTE *)&v29.__r_.__value_.__s + 23) = v12 & 0x7F;
          sub_100174738((uint64_t)&v22, (uint64_t)&v28, 2);
          if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v29.__r_.__value_.__l.__data_);
            if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_26:
              if ((v23 & 0x80000000) == 0)
                goto LABEL_27;
LABEL_31:
              operator delete(v22);
LABEL_27:
              sub_100305B08(v6, a2, (const void **)&__p);
            }
          }
          else if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            goto LABEL_26;
          }
          operator delete(v28.__r_.__value_.__l.__data_);
          if ((v23 & 0x80000000) == 0)
            goto LABEL_27;
          goto LABEL_31;
        }
LABEL_18:
        v14 = v11;
        goto LABEL_21;
      }
    }
    else
    {
      v33 = (_BYTE *)v9;
      v34 = &v32;
      v12 = (std::string::size_type)(&v32 - v9);
      if ((unint64_t)(&v32 - v9) < 0x17)
        goto LABEL_7;
    }
    std::string::__grow_by(&v29, 0x16uLL, v12 - 22, 0, 0, 0, 0);
    v29.__r_.__value_.__l.__size_ = 0;
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v11 = (std::string *)v29.__r_.__value_.__r.__words[0];
    if (v10 != &v32)
      goto LABEL_8;
    goto LABEL_18;
  }
  return result;
}

void sub_10030E4F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030E538(uint64_t result, uint64_t a2, std::string::value_type *__s, int *a4, const std::string::value_type **a5)
{
  uint64_t v8;
  std::string *v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  std::string::size_type v14;
  unint64_t v15;
  std::string *v16;
  std::string::value_type *v17;
  __int128 *v18;
  std::string::size_type *v19;
  unint64_t v20;
  __int128 v21;
  std::string::value_type v22;
  void *__p;
  void *v24;
  char v25;
  int v26;
  char *v27;
  char v28;
  int v29;
  std::string v30;
  std::string v31;
  std::string v32;
  char v33;
  _BYTE v34[6];
  char v35;
  _BYTE *v36;
  char *v37;

  if ((_DWORD)a2)
  {
    v8 = result;
    v25 = 0;
    LOBYTE(v24) = 0;
    memset(&v30, 0, sizeof(v30));
    std::string::assign(&v30, __s);
    v9 = &v31;
    memset(&v31, 0, sizeof(v31));
    v36 = v34;
    v37 = &v35;
    v10 = *a4;
    if (*a4 >= 0)
      v11 = *a4;
    else
      v11 = -v10;
    v26 = v11;
    v27 = &v35;
    v28 = 48;
    v29 = 48;
    v12 = sub_10000EDD4((uint64_t)&v26);
    v13 = (char *)v12;
    if (v10 < 0)
    {
      *(_BYTE *)(v12 - 1) = 45;
      v13 = (char *)(v12 - 1);
      v36 = (_BYTE *)(v12 - 1);
      v37 = &v35;
      v14 = (std::string::size_type)(&v35 - v12 + 1);
      if (v14 < 0x17)
      {
LABEL_7:
        if (v13 != &v35)
        {
LABEL_8:
          v15 = &v33 - v13 + 23;
          if (v15 < 0x20 || (unint64_t)((char *)v9 - v13) < 0x20)
          {
            v16 = v9;
            v17 = v13;
          }
          else
          {
            v16 = (std::string *)((char *)v9 + (v15 & 0xFFFFFFFFFFFFFFE0));
            v17 = &v13[v15 & 0xFFFFFFFFFFFFFFE0];
            v18 = (__int128 *)(v13 + 16);
            v19 = &v9->__r_.__value_.__r.__words[2];
            v20 = v15 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v21 = *v18;
              *((_OWORD *)v19 - 1) = *(v18 - 1);
              *(_OWORD *)v19 = v21;
              v18 += 2;
              v19 += 4;
              v20 -= 32;
            }
            while (v20);
            if (v15 == (v15 & 0xFFFFFFFFFFFFFFE0))
              goto LABEL_21;
          }
          do
          {
            v22 = *v17++;
            v16->__r_.__value_.__s.__data_[0] = v22;
            v16 = (std::string *)((char *)v16 + 1);
          }
          while (v17 != &v35);
LABEL_21:
          v16->__r_.__value_.__s.__data_[0] = 0;
          if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
            v31.__r_.__value_.__l.__size_ = v14;
          else
            *((_BYTE *)&v31.__r_.__value_.__s + 23) = v14 & 0x7F;
          memset(&v32, 0, sizeof(v32));
          std::string::assign(&v32, *a5);
          sub_100174738((uint64_t)&v24, (uint64_t)&v30, 3);
          if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v32.__r_.__value_.__l.__data_);
            if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_26:
              if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                goto LABEL_27;
              goto LABEL_32;
            }
          }
          else if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            goto LABEL_26;
          }
          operator delete(v31.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_27:
            if ((v25 & 0x80000000) == 0)
              goto LABEL_28;
LABEL_33:
            operator delete(v24);
LABEL_28:
            sub_100305B08(v8, a2, (const void **)&__p);
          }
LABEL_32:
          operator delete(v30.__r_.__value_.__l.__data_);
          if ((v25 & 0x80000000) == 0)
            goto LABEL_28;
          goto LABEL_33;
        }
LABEL_18:
        v16 = v9;
        goto LABEL_21;
      }
    }
    else
    {
      v36 = (_BYTE *)v12;
      v37 = &v35;
      v14 = (std::string::size_type)(&v35 - v12);
      if ((unint64_t)(&v35 - v12) < 0x17)
        goto LABEL_7;
    }
    std::string::__grow_by(&v31, 0x16uLL, v14 - 22, 0, 0, 0, 0);
    v31.__r_.__value_.__l.__size_ = 0;
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v9 = (std::string *)v31.__r_.__value_.__r.__words[0];
    if (v13 != &v35)
      goto LABEL_8;
    goto LABEL_18;
  }
  return result;
}

void sub_10030E7CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10030E858(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_10030E884()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10030E8E0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10030E998(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030EA78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10030EA8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030EA9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10030EB80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030EB90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10030EBE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030EC4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10030EC60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030EDBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10030EFB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_10030F070(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030F23C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10030F30C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030F324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030F37C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030F460(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10030F474(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030F590(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10030F5B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030F69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030F6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030F884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030F898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030F8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10030F8CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030F8E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030F8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030F910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030F924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030F93C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10030F958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030F9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030FA0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030FB08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v19;

  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error((std::runtime_error *)(v19 - 48));
  if (a19 < 0)
    operator delete(a14);
  _Unwind_Resume(a1);
}

void sub_10030FB80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030FB94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030FBFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030FC14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030FC94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030FCAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030FD0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030FD24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030FDA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10030FDBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030FE34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030FE4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10030FEA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10030FFC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10030FFDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10030FFF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100310008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100310020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100310034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003100C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1003100DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10031016C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_100310188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100310424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void *v20;
  void *v21;

  if (a14 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_100310598(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003105AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003105BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100310708(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100310720(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100310738(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_100310760(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100310774(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100310850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_100310870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10031088C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100310968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_100310990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1003109A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100310C94(uint64_t *a1)
{
  sub_1000B3964(*a1);
  __asm { BR              X10 }
}

double sub_100310CF0()
{
  double *v0;
  double v1;
  uint64_t v3;

  v1 = *v0;
  sub_1000B3D5C((uint64_t)&v3);
  return v1;
}

void sub_100310E74(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  void *v3;
  id v5;
  NSObject *v6;
  void *v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  void *__p;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t buf;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v7 = va_arg(va1, void *);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  __p = va_arg(va1, void *);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  buf = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  if (a2)
  {

    __cxa_begin_catch(a1);
    v5 = sub_100310FCC();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      sub_10016A280((int *)va1, (uint64_t)va);
      sub_10016A398();
    }

    __cxa_rethrow();
  }
  _Unwind_Resume(a1);
}

id sub_100310FCC()
{
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_100405F28);
  return (id)qword_100417EE0;
}

double sub_100311018(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  std::bad_cast_vtbl *v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  BOOL v7;
  double v9;
  std::bad_cast v10;
  _UNKNOWN **v11;
  void *v12;

  v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) == 0)
    v3 = (std::bad_cast_vtbl *)a2;
  else
    v3 = *(std::bad_cast_vtbl **)a2;
  if ((v2 & 0x80u) != 0)
    v2 = *(_QWORD *)(a2 + 8);
  v9 = 0.0;
  v10.__vftable = v3;
  v11 = (_UNKNOWN **)((char *)v3 + v2);
  if (!sub_10031129C((unsigned __int8 *)v3, (unsigned __int8 *)v3 + v2, &v9, "NAN", "nan", "INFINITY", "infinity", 0x28u, 0x29u))
  {
    if (!sub_100311120((uint64_t *)&v10, (uint64_t)&v9)
      || ((v4 = *((unsigned __int8 *)v11 - 1) - 43, v5 = v4 > 0x3A, v6 = (1 << v4) & 0x400000004000005, !v5)
        ? (v7 = v6 == 0)
        : (v7 = 1),
          !v7))
    {
      std::bad_cast::bad_cast(&v10);
      v10.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v10);
    }
  }
  return v9;
}

void sub_10031110C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::bad_cast a12)
{
  std::bad_cast::~bad_cast(&a12);
  _Unwind_Resume(a1);
}

BOOL sub_100311120(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  std::ios_base *v6;
  uint64_t v7;
  _QWORD *v8;
  _BOOL8 v9;
  _QWORD v11[2];
  std::ios_base v12;
  uint64_t v13;
  int v14;
  _QWORD __sb[8];

  std::streambuf::basic_streambuf(__sb);
  v4 = *a1;
  v5 = a1[1];
  __sb[0] = &off_1004046D8;
  __sb[2] = v4;
  __sb[3] = v4;
  __sb[4] = v5;
  v11[1] = 0;
  std::ios_base::init(&v12, __sb);
  v13 = 0;
  v14 = -1;
  v6->__exceptions_ = 1;
  std::ios_base::clear(v6, v6->__rdstate_);
  v7 = v11[0];
  *(_DWORD *)((char *)&v11[1] + *(_QWORD *)(v11[0] - 24)) &= ~0x1000u;
  *(_QWORD *)((char *)&v11[2] + *(_QWORD *)(v7 - 24)) = 17;
  v8 = (_QWORD *)std::istream::operator>>(v11, a2);
  v9 = (*((_BYTE *)v8 + *(_QWORD *)(*v8 - 24) + 32) & 5) == 0 && std::istream::get(v11) == -1;
  std::istream::~istream(v11);
  std::streambuf::~streambuf(__sb);
  return v9;
}

void sub_100311244(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  std::istream::~istream(va);
  std::streambuf::~streambuf(v2 - 96);
  _Unwind_Resume(a1);
}

void sub_100311260(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::ios::~ios(v1);
  std::streambuf::~streambuf(v2 - 96);
  _Unwind_Resume(a1);
}

uint64_t sub_10031129C(unsigned __int8 *a1, unsigned __int8 *a2, double *a3, unsigned __int8 *a4, unsigned __int8 *a5, unsigned __int8 *a6, unsigned __int8 *a7, unsigned __int8 a8, unsigned __int8 a9)
{
  int v9;
  BOOL v10;
  unsigned __int8 *v11;
  int64_t v12;
  int v14;
  int v15;
  int v16;
  unsigned __int8 *v17;
  double v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  double v28;

  if (a1 == a2)
    return 0;
  v9 = *a1;
  v10 = v9 == 45 || v9 == 43;
  v11 = v10 ? a1 + 1 : a1;
  v12 = a2 - v11;
  if (a2 - v11 < 3)
    return 0;
  v14 = *v11;
  if (v14 == *a5 || v14 == *a4)
  {
    v15 = v11[1];
    if (v15 == a5[1] || v15 == a4[1])
    {
      v16 = v11[2];
      if (v16 == a5[2] || v16 == a4[2])
      {
        v17 = v11 + 3;
        if (v17 == a2 || a2 - v17 >= 2 && *v17 == a8 && *(a2 - 1) == a9)
        {
          v18 = NAN;
          if (v9 == 45)
            v18 = NAN;
          *a3 = v18;
          return 1;
        }
        return 0;
      }
    }
  }
  if (v12 == 8)
  {
    if (v14 != *a7 && v14 != *a6)
      return 0;
    v22 = v11[1];
    if (v22 != a7[1] && v22 != a6[1])
      return 0;
    v23 = v11[2];
    if (v23 != a7[2] && v23 != a6[2])
      return 0;
    v24 = v11[3];
    if (v24 != a7[3] && v24 != a6[3])
      return 0;
    v25 = v11[4];
    if (v25 != a7[4] && v25 != a6[4])
      return 0;
    v26 = v11[5];
    if (v26 != a7[5] && v26 != a6[5])
      return 0;
    v27 = v11[6];
    if (v27 != a7[6] && v27 != a6[6])
      return 0;
    v20 = v11[7];
    if (v20 == a7[7])
      goto LABEL_48;
    v21 = a6[7];
  }
  else
  {
    if (v12 != 3 || v14 != *a7 && v14 != *a6)
      return 0;
    v19 = v11[1];
    if (v19 != a7[1] && v19 != a6[1])
      return 0;
    v20 = v11[2];
    if (v20 == a7[2])
      goto LABEL_48;
    v21 = a6[2];
  }
  if (v20 != v21)
    return 0;
LABEL_48:
  v28 = INFINITY;
  if (v9 == 45)
    v28 = -INFINITY;
  *a3 = v28;
  return 1;
}

void sub_1003114D4()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<double>::operator()(const F &) const [T = double, F = std::vector<boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_100311588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1003115F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1003115E0);
}

void sub_100311614(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100311628()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<double>::operator()(const F &) const [T = double, F = std::unordered_map<std::string, boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_1003116DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_100311744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100311734);
}

void sub_100311768(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10031177C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_1003117AC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100311808()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100311864()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

_QWORD *sub_100311878(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *a1 = off_100406000;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      *a1 = off_1004060B0;
      v5 = (std::__shared_weak_count *)a1[2];
      if (v5)
        goto LABEL_6;
      return a1;
    }
  }
  *a1 = off_1004060B0;
  v5 = (std::__shared_weak_count *)a1[2];
  if (!v5)
    return a1;
LABEL_6:
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (v7)
    return a1;
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_100311948(_QWORD *a1)
{
  sub_10004A7A8(a1);
  operator delete();
}

double sub_10031196C(uint64_t a1)
{
  void *v3;
  void *v4[2];
  char v5;
  std::string __p;

  if (sub_100303A38((double *)(a1 + 8)))
  {
    sub_1000D5048(v4, "");
    sub_1002BEB54("Radio map tile must have finite bounds. Localizer doesn't know about floorplans.", &__p);
    sub_100174738((uint64_t)v4, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v5 < 0)
      operator delete(v4[0]);
    sub_1000F2AE4((uint64_t)&v3);
  }
  return *(double *)(a1 + 8);
}

void sub_100311A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

double sub_100311A84@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  double result;
  _BYTE v13[1920];
  void *v14[2];
  char v15;
  _QWORD v16[2];
  std::string v17;
  std::__shared_weak_count *v18;
  std::__shared_weak_count *v19;

  *(_QWORD *)(a3 + 8) = 0;
  v5 = (_QWORD *)(a3 + 8);
  *(_QWORD *)a3 = off_1003F9A88;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) &= 0xFCu;
  if ((*(_BYTE *)(a1 + 1993) & 0x80) == 0)
  {
    sub_1000D5048(v14, "");
    sub_100169760("Only production tiles are allowed.", &v17);
    sub_100174738((uint64_t)v14, (uint64_t)&v17, 1);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v17.__r_.__value_.__l.__data_);
    if (v15 < 0)
      operator delete(v14[0]);
    sub_1000F2AE4((uint64_t)v16);
  }
  sub_1000B53CC(v13, a1 + 80);
  sub_100159F88((uint64_t)v13, &v17);
  sub_100159BA4((uint64_t)&v17, a2, (uint64_t)v14);
  sub_100077D9C(a3, (uint64_t)v14);
  nullsub_22(v14);
  v6 = v19;
  if (v19)
  {
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = v18;
  if (v18)
  {
    v10 = (unint64_t *)&v18->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_22(&v17);
  sub_100073738(v13);
  result = *(double *)(a3 + 16);
  if ((*v5 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
    || (*(_QWORD *)&result & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    sub_1000D5048(v14, "");
    sub_100263C90("Latitude and longitude must be finite.", &v17);
    sub_100174738((uint64_t)v14, (uint64_t)&v17, 1);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v17.__r_.__value_.__l.__data_);
    if (v15 < 0)
      operator delete(v14[0]);
    sub_1000F2AE4((uint64_t)v16);
  }
  return result;
}

void sub_100311CF8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(char *)(v2 - 121) < 0)
  {
    operator delete(*(void **)(v2 - 144));
    nullsub_22(v1);
    _Unwind_Resume(a1);
  }
  nullsub_22(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100311DAC(uint64_t a1)
{
  return a1 + 80;
}

uint64_t sub_100311DB4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 2000);
}

void sub_100311DBC(char *a1@<X8>)
{
  strcpy(a1, "StaticFloorEnvironment");
  a1[23] = 22;
}

double sub_100311DE0(uint64_t a1)
{
  return *(double *)(a1 + 40);
}

uint64_t sub_100311DE8(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_100311DF0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(result + 72);
  *a2 = *(_QWORD *)(result + 64);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

uint64_t sub_100311E14(uint64_t a1)
{
  return a1 + 2008;
}

uint64_t sub_100311E1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 2024);
}

uint64_t sub_100311E24(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 48) + 128))(*(_QWORD *)(a1 + 48));
}

uint64_t sub_100311E34(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 48) + 136))(*(_QWORD *)(a1 + 48));
}

void sub_100311E44(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *a1 = off_100406000;
  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *a1 = off_1004060B0;
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    *a1 = off_1004060B0;
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  operator delete();
}

uint64_t sub_100311F14()
{
  return 0;
}

void sub_100311F1C()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x40uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10039A800;
  strcpy(v1.__r_.__value_.__l.__data_, "TODO(dtay): Where do particles generate if they are outdoors?");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF600;
  sub_10018D04C((uint64_t)v0);
  sub_1000EF6D4(&v2, (uint64_t)"virtual UniversalRect2d StaticFloorEnvironment::OffMapFloorEnvironment::getBounds() const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/static_floor_environment.h", 20, (uint64_t)v0);
}

void sub_100311FD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_100312040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100312030);
}

void sub_100312064(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100312078()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x28uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6C0;
  strcpy(v1.__r_.__value_.__l.__data_, "OffMap does not include surveyedArea");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF600;
  sub_10018D04C((uint64_t)v0);
  sub_1000EF6D4(&v2, (uint64_t)"virtual double StaticFloorEnvironment::OffMapFloorEnvironment::surveyedArea() const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/static_floor_environment.h", 21, (uint64_t)v0);
}

void sub_100312130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_100312198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100312188);
}

void sub_1003121BC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003121D0(uint64_t a1)
{
  return a1 + 8;
}

void sub_1003121D8(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

char *sub_1003121E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *result;
  __int128 v4;

  result = (char *)sub_100050DB0(a1 + 24);
  if (result[23] < 0)
    return (char *)sub_10006CED8((_BYTE *)a2, *(void **)result, *((_QWORD *)result + 1));
  v4 = *(_OWORD *)result;
  *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 2);
  *(_OWORD *)a2 = v4;
  return result;
}

void sub_100312234(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_100312258(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN22StaticFloorEnvironment22offmapFloorEnvironmentEvE3$_0")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN22StaticFloorEnvironment22offmapFloorEnvironmentEvE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN22StaticFloorEnvironment22offmapFloorEnvironmentEvE3$_0"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN22StaticFloorEnvironment22offmapFloorEnvironmentEvE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_1003122C8()
{
  operator delete();
}

uint64_t sub_1003122DC(uint64_t a1, double a2, double a3)
{
  _BOOL4 v3;
  int v4;
  _QWORD v6[3];
  char v7;

  v6[0] = off_1003F9A68;
  v7 = 0;
  *(double *)&v6[1] = a2;
  *(double *)&v6[2] = a3;
  v3 = sub_1003039E4((double *)(a1 + 8), (uint64_t)v6);
  nullsub_23(v6);
  if (v3)
    v4 = 256;
  else
    v4 = 0;
  return v4 | v3;
}

void sub_10031233C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_23(&a9);
  _Unwind_Resume(a1);
}

void sub_100312350()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x20uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_100382FF0;
  strcpy(v1.__r_.__value_.__l.__data_, "Not implemented for base type.");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF600;
  sub_10018D04C((uint64_t)v0);
  sub_1000EF6D4(&v2, (uint64_t)"virtual Index2d OccupancyGrid::gridIndex2d(double, double) const", (uint64_t)"../../../common/localize/occupancy_grid.h", 78, (uint64_t)v0);
}

void sub_100312404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_10031246C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10031245CLL);
}

void sub_100312490(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double sub_1003124A4(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

void sub_1003124B0(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1003124B8()
{
  return 0;
}

uint64_t sub_1003124C0(uint64_t a1, uint64_t a2, _QWORD *a3, double a4, double a5, double a6, double a7)
{
  double v9;
  double v10;
  __int16 v14;
  double v15;
  double v16;
  __double2 v17;
  int v18;

  v9 = a7;
  v10 = a6;
  v14 = (*(uint64_t (**)(uint64_t, double, double))(*(_QWORD *)a1 + 16))(a1, a6, a7);
  if ((v14 & 1) != 0)
  {
    v18 = HIBYTE(v14);
  }
  else
  {
    v15 = atan2(v9 - a5, v10 - a4) + 1.57079633;
    v16 = (*(double (**)(_QWORD, double, double))(*(_QWORD *)*a3 + 64))(*a3, 0.0, 3.0);
    v17 = __sincos_stret(v15);
    v10 = v10 + v16 * v17.__cosval;
    v9 = v9 + v16 * v17.__sinval;
    v14 = (*(uint64_t (**)(uint64_t, double, double))(*(_QWORD *)a1 + 16))(a1, v10, v9);
    v18 = HIBYTE(v14);
    if ((v14 & 1) == 0)
      return v14 | (v18 << 8);
  }
  *(double *)(a2 + 16) = v10;
  *(double *)(a2 + 24) = v9;
  return v14 | (v18 << 8);
}

uint64_t sub_10031259C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003125F8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100312654()
{
  qword_10042EA98 = 0;
  unk_10042EAA0 = 0;
  qword_10042EA90 = (uint64_t)off_100406000;
  sub_10004BE28(qword_10042EAA8, "OffMap");
  return __cxa_atexit((void (*)(void *))sub_100311878, &qword_10042EA90, (void *)&_mh_execute_header);
}

void sub_1003126AC(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v2;
  std::__shared_weak_count *v4;

  v2 = v1;
  *v2 = off_1004060B0;
  v4 = (std::__shared_weak_count *)v2[2];
  if (v4)
    sub_100344CE0(v4);
  _Unwind_Resume(exception_object);
}

void sub_100312794(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003127BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003128E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100312910(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1003129B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003129C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  if (a15 < 0)
  {
    operator delete(__p);

    _Unwind_Resume(a1);
  }

  _Unwind_Resume(a1);
}

void sub_100312B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  sub_100312BBC(&a9);
  _Unwind_Resume(a1);
}

void **sub_100312BBC(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  void *v5;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = (void *)*((_QWORD *)v3 - 2);
        v3 -= 16;

      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_100312CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  _Unwind_Resume(a1);
}

void sub_100312CE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100312E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_100312E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_100312EAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100312EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_100313028(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100313198(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003131A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003131B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_10031334C(_QWORD *a1, id *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  void *v26;

  v3 = a1[1] - *a1;
  v4 = v3 >> 3;
  v5 = (v3 >> 3) + 1;
  if (v5 >> 61)
    sub_1000D02C0();
  v7 = a1[2] - *a1;
  if (v7 >> 2 > v5)
    v5 = v7 >> 2;
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8)
    v8 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v8 = v5;
  if (v8)
  {
    if (v8 >> 61)
      sub_1000CDEB8();
    v9 = (char *)operator new(8 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[8 * v4];
  v11 = &v9[8 * v8];
  *(_QWORD *)v10 = *a2;
  v12 = v10 + 8;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v12;
    a1[2] = v11;
    if (!v14)
      return v12;
    goto LABEL_23;
  }
  v15 = (unint64_t)&v14[-*a1 - 8];
  if (v15 < 0x78 || &v14[-(v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v10 && &v9[v3 - (v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v14)
    goto LABEL_31;
  v16 = (v15 >> 3) + 1;
  v17 = 8 * (v16 & 0x3FFFFFFFFFFFFFFCLL);
  v10 -= v17;
  v18 = &v14[-v17];
  v19 = v14 - 16;
  v20 = &v9[8 * v4 - 16];
  v21 = v16 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    v23 = *((_OWORD *)v19 - 1);
    v22 = *(_OWORD *)v19;
    *((_OWORD *)v19 - 1) = 0uLL;
    *(_OWORD *)v19 = 0uLL;
    *((_OWORD *)v20 - 1) = v23;
    *(_OWORD *)v20 = v22;
    v19 -= 32;
    v20 -= 32;
    v21 -= 4;
  }
  while (v21);
  v14 = v18;
  if (v16 != (v16 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_31:
    do
    {
      v24 = *((_QWORD *)v14 - 1);
      v14 -= 8;
      *(_QWORD *)v14 = 0;
      *((_QWORD *)v10 - 1) = v24;
      v10 -= 8;
    }
    while (v14 != v13);
  }
  v25 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v12;
  a1[2] = v11;
  if (v14 != v25)
  {
    do
    {
      v26 = (void *)*((_QWORD *)v14 - 1);
      v14 -= 8;

    }
    while (v14 != v25);
    v14 = v25;
  }
  if (v14)
LABEL_23:
    operator delete(v14);
  return v12;
}

uint64_t sub_1003134F4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100313550()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1003135AC()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1003135C0()
{
  operator new();
}

void sub_1003136F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_1000E095C((uint64_t)&a9);
  sub_1000E095C((uint64_t)&a11);
  operator delete();
}

void sub_100313724(uint64_t a1@<X0>, const void ***a2@<X1>, uint64_t a3@<X8>)
{
  const void ***v6;
  const void ***v7;
  std::__shared_weak_count *v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  const void **v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t (**v20)();
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t (**v26)();
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t (**v32)();
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t (**v37)();
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  int v42;
  uint64_t (**v43)();
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t (**v46)();
  __int128 v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  __int128 v54;
  uint64_t (**v55)();
  __int128 v56;
  __int128 v57;
  char v58;
  uint64_t (**v59)();
  __int128 v60;
  __int128 v61;
  char v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t (**v66)();
  __int128 v67;
  char v68;
  uint64_t (**v69)();
  __int128 v70;
  char v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int16 v75;
  char v76;
  uint64_t (**v77)();
  __int128 v78;
  uint64_t v79;
  char v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int16 v93;
  __int128 v94;
  uint64_t v95;
  char v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  char v100;
  uint64_t (**v101)();
  __int128 *v102;
  __int128 v103;
  __int128 *v104;
  __int128 v105;
  char v106;
  uint64_t (**v107)();
  uint64_t (**v108)();
  __int128 v109;
  __int128 v110;
  char v111;
  uint64_t (**v112)();
  uint64_t (**v113)();
  __int128 v114;
  char v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t (**v120)();
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  char v125;
  __int128 v126;
  uint64_t v127;
  char v128;
  uint64_t (**v129)();
  __int128 v130;
  char v131;
  uint64_t (**v132)();
  __int128 v133;
  char v134;
  uint64_t (**v135)();
  __int128 v136;
  __int128 v137;
  char v138;
  __int128 v139;
  uint64_t v140;
  __int16 v141;
  uint64_t (**v142)();
  uint64_t (**v143)();
  __int128 v144;
  __int128 v145;
  char v146;
  uint64_t (**v147)();
  uint64_t (**v148)();
  __int128 v149;
  char v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  char v154;
  __int128 v155;
  uint64_t v156;
  char v157;
  __int128 v158;
  int v159;
  uint64_t (**v160)();
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t (**v164)();
  __int128 v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  char v169;
  uint64_t (**v170)();
  __int128 v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  char v175;
  __int128 v176;
  __int128 v177;
  _BYTE v178[80];
  int v179;
  const void **v180;
  std::__shared_weak_count *v181;

  if (sub_1000790EC(a2, (unsigned __int8 ***)&qword_10041AD40))
    sub_10007A51C();
  v180 = 0;
  v181 = 0;
  v6 = sub_10002BCA4((_QWORD *)(a1 + 40), (uint64_t ***)a2);
  v7 = v6;
  if (v6)
  {
    v8 = (std::__shared_weak_count *)v6[5];
    if (v8 && (v9 = std::__shared_weak_count::lock(v8)) != 0)
    {
      v10 = v9;
      v11 = v7[4];
      v180 = v11;
      v181 = v10;
      if (v11)
      {
        v12 = (*((uint64_t (**)(const void **))*v11 + 7))(v11);
        sub_1000B53CC(a3, v12);
LABEL_16:
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
        return;
      }
    }
    else
    {
      v180 = 0;
      v181 = 0;
    }
  }
  v20 = off_1003F9698;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0;
  v26 = off_1003F9618;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0;
  v32 = off_1003F9CB8;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0;
  v37 = off_1003F9A08;
  v40 = 0u;
  v39 = 0u;
  v38 = 0u;
  v41 &= 0xFCu;
  v42 = 0;
  v43 = off_1003F9AC8;
  v44 = 0;
  v45 = off_1003F9AA8;
  v46 = off_1003F9A68;
  v47 = 0u;
  v48 &= 0xFCu;
  v49 = 0;
  v50 = 0;
  v51 = 0;
  v52 = v52 & 0xF8 | 4;
  v53 &= 0xF8u;
  v54 = 0u;
  v55 = off_1003F9A28;
  v56 = xmmword_10038DC80;
  v57 = xmmword_10038DC90;
  v58 |= 0xFu;
  v59 = off_1003F9A28;
  v60 = xmmword_10038DC80;
  v61 = xmmword_10038DC90;
  v62 |= 0xFu;
  v63 = 0u;
  v64 = 0u;
  v65 = 0;
  v66 = off_1003F9A68;
  v67 = 0u;
  v68 &= 0xFCu;
  v69 = off_1003F9A68;
  v70 = 0u;
  v71 &= 0xFCu;
  v73 = 0u;
  v74 = 0u;
  v72 = 0u;
  v75 = 0;
  v76 &= ~1u;
  v77 = off_1003F9778;
  v79 = 0;
  v78 = 0u;
  v80 &= ~1u;
  v91 = 0u;
  v92 = 0u;
  v89 = 0u;
  v90 = 0u;
  v87 = 0u;
  v88 = 0u;
  v85 = 0u;
  v86 = 0u;
  v83 = 0u;
  v84 = 0u;
  v81 = 0u;
  v82 = 0u;
  v93 &= 0xE000u;
  v94 = 0u;
  v96 = 0;
  v95 = 0;
  v98 = 0u;
  v99 = 0u;
  v97 = 0u;
  v100 = 0;
  v101 = off_1003F95F8;
  v103 = 0u;
  v105 = 0u;
  v102 = &v103;
  v104 = &v105;
  v106 &= 0xFCu;
  v107 = off_1003F9DE8;
  v108 = off_1003F9D88;
  v110 = 0u;
  v109 = 0u;
  v111 &= 0xF8u;
  v112 = off_1003F9AA8;
  v113 = off_1003F9A68;
  v114 = 0u;
  v115 &= 0xFCu;
  v116 = 0;
  v117 = 0;
  v118 = 0;
  v119 = v119 & 0xF8 | 4;
  v120 = off_1003F9DA8;
  v124 = 0u;
  v123 = 0u;
  v122 = 0u;
  v121 = 0u;
  v125 &= 0xC0u;
  v128 = 0;
  v127 = 0;
  v126 = 0u;
  v129 = off_1003F9A88;
  v130 = 0u;
  v131 &= 0xFCu;
  v132 = off_1003F9A88;
  v133 = 0u;
  v134 &= 0xFCu;
  v135 = off_1003F9D88;
  v137 = 0u;
  v136 = 0u;
  v138 &= 0xF8u;
  v140 = 0;
  v139 = 0u;
  v141 &= 0xF800u;
  v142 = off_1003F9E08;
  v143 = off_1003F9D88;
  v145 = 0u;
  v144 = 0u;
  v146 &= 0xF8u;
  v147 = off_1003F9AA8;
  v148 = off_1003F9A68;
  v149 = 0u;
  v150 &= 0xFCu;
  v151 = 0;
  v152 = 0;
  v153 = 0;
  v154 = v154 & 0xF8 | 4;
  v156 = 0;
  v155 = 0u;
  v157 &= 0xF8u;
  v159 = 0;
  v158 = 0u;
  v160 = off_1003F9A88;
  v162 = 0;
  v161 = 0;
  v163 &= 0xFCu;
  v164 = off_1003F9638;
  v168 = 0;
  v167 = 0u;
  v166 = 0u;
  v165 = 0u;
  v169 &= 0x80u;
  v170 = off_1003F9638;
  v173 = 0u;
  v172 = 0u;
  v171 = 0u;
  v174 = 0;
  v175 &= 0x80u;
  v177 = 0u;
  memset(v178, 0, 29);
  v176 = 0u;
  memset(&v178[32], 0, 48);
  v179 &= 0xFE000000;
  (*(void (**)(uint64_t *__return_ptr, _QWORD, const void ***))(**(_QWORD **)(a1 + 8) + 120))(&v18, *(_QWORD *)(a1 + 8), a2);
  sub_10007024C(&v18, a3);
  v13 = v19;
  if (v19)
  {
    v14 = (unint64_t *)&v19->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  sub_100073738(&v20);
  v10 = v181;
  if (v181)
    goto LABEL_16;
}

void sub_100313D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  sub_1000E095C((uint64_t)&a9);
  sub_100073738(&a11);
  sub_1000E095C(v11 - 64);
  _Unwind_Resume(a1);
}

void sub_100313D58(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1000E095C(v1 - 64);
  _Unwind_Resume(a1);
}

void sub_100313D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100313D80(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 96))(*(_QWORD *)(a1 + 8));
}

void sub_100313D94(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_100313DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v7 = *a4;
  if (v7)
    operator new();
  v8 = 0;
  *a4 = 0;
  sub_10006FC3C(a2, a3, (uint64_t)&v7);
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_100313E98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
    sub_100341FCC(a10);
  _Unwind_Resume(exception_object);
}

void sub_100313EB0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100406298;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100313EC0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100406298;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_100313EF4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_100313F18(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteI15OnDiskRadioMapsEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteI15OnDiskRadioMapsEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteI15OnDiskRadioMapsEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteI15OnDiskRadioMapsEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_100313F84(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100406338;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100313F94(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100406338;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_100313FC4(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;

  v11 = *a4;
  *(_QWORD *)a4 = 0;
  *((_QWORD *)a4 + 1) = 0;
  v5 = *a5;
  *a5 = 0;
  v10 = v5;
  sub_10006F414(a2, a3, &v11, &v10);
  v6 = v10;
  v10 = 0;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
  if (*((_QWORD *)&v11 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_100314074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  if (a3)
    (*(void (**)(uint64_t))(*(_QWORD *)a3 + 8))(a3);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003140A0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100406388;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003140B0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100406388;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1003140E0(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v2 = *(_QWORD **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
    {
      v3 = (std::__shared_weak_count *)v2[5];
      if (v3)
        std::__shared_weak_count::__release_weak(v3);
      v4 = (std::__shared_weak_count *)v2[3];
      if (v4)
      {
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v6 = __ldaxr(p_shared_owners);
        while (__stlxr(v6 - 1, p_shared_owners));
        if (!v6)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
      }
    }
    operator delete(v2);
  }
  return a1;
}

char *sub_100314168(char **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;

  v3 = (a1[1] - *a1) >> 4;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60)
    sub_1000D02C0();
  v5 = a1[2] - *a1;
  if (v5 >> 3 > v4)
    v4 = v5 >> 3;
  v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFF0;
  v7 = 0xFFFFFFFFFFFFFFFLL;
  if (!v6)
    v7 = v4;
  if (v7 >> 60)
    sub_1000CDEB8();
  v9 = 16 * v7;
  v10 = (char *)operator new(16 * v7);
  v11 = &v10[16 * v3];
  *(_OWORD *)v11 = *(_OWORD *)a2;
  v12 = v11 + 16;
  v13 = &v10[v9];
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v14 = *a1;
  v15 = a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v13;
    if (!v15)
      return v12;
    goto LABEL_19;
  }
  do
  {
    v16 = *((_OWORD *)v15 - 1);
    v15 -= 16;
    *((_OWORD *)v11 - 1) = v16;
    v11 -= 16;
    *(_QWORD *)v15 = 0;
    *((_QWORD *)v15 + 1) = 0;
  }
  while (v15 != v14);
  v17 = *a1;
  v15 = a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v13;
  if (v15 != v17)
  {
    do
    {
      v18 = (std::__shared_weak_count *)*((_QWORD *)v15 - 1);
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      v15 -= 16;
    }
    while (v15 != v17);
    v15 = v17;
  }
  if (v15)
LABEL_19:
    operator delete(v15);
  return v12;
}

uint64_t sub_1003142A8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100314304()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100314360(uint64_t a1)
{
  return a1 + 48;
}

_QWORD *sub_100314368(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  *a1 = off_1004063D8;
  v2 = (_QWORD *)a1[8];
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = (void *)a1[6];
  a1[6] = 0;
  if (v4)
    operator delete(v4);
  v5 = (void *)a1[3];
  if (v5)
  {
    a1[4] = v5;
    operator delete(v5);
  }
  v6 = (std::__shared_weak_count *)a1[2];
  if (!v6)
    return a1;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_100314414(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  *a1 = off_1004063D8;
  v2 = (_QWORD *)a1[8];
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = (void *)a1[6];
  a1[6] = 0;
  if (v4)
    operator delete(v4);
  v5 = (void *)a1[3];
  if (v5)
  {
    a1[4] = v5;
    operator delete(v5);
  }
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  operator delete();
}

void sub_1003144C0(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_1003144EC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100314548()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1003145A4(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  CFAbsoluteTime Current;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  float v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;

  v39 = a1;
  sub_100016654((_QWORD *)a4);
  *(_DWORD *)(a4 + 60) |= 1u;
  v7 = *(_QWORD *)(a4 + 40);
  if (!v7)
    operator new();
  v8 = sub_10005F0F0();
  *(_DWORD *)(v7 + 52) |= 8u;
  *(_QWORD *)(v7 + 40) = v8;
  *(_DWORD *)(a4 + 60) |= 1u;
  v9 = *(_QWORD *)(a4 + 40);
  if (!v9)
    operator new();
  v10 = sub_10001BAC8();
  *(_DWORD *)(v9 + 52) |= 2u;
  *(double *)(v9 + 24) = v10;
  *(_DWORD *)(a4 + 60) |= 1u;
  v11 = *(_QWORD *)(a4 + 40);
  if (!v11)
    operator new();
  v12 = sub_10001BA08();
  *(_DWORD *)(v11 + 52) |= 4u;
  *(double *)(v11 + 32) = v12;
  *(_DWORD *)(a4 + 60) |= 1u;
  v13 = *(_QWORD *)(a4 + 40);
  if (!v13)
    operator new();
  Current = CFAbsoluteTimeGetCurrent();
  *(_DWORD *)(v13 + 52) |= 1u;
  *(CFAbsoluteTime *)(v13 + 16) = Current;
  *(_DWORD *)(a4 + 60) |= 2u;
  v15 = *(_QWORD *)(a4 + 48);
  if (!v15)
    operator new();
  *(_DWORD *)(v15 + 76) |= 4u;
  v16 = *(_QWORD *)(v15 + 32);
  if (!v16)
    operator new();
  *(_DWORD *)(v16 + 60) |= 1u;
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
    operator new();
  v18 = sub_10018EB80(&v39);
  *(_DWORD *)(v17 + 44) |= 2u;
  *(double *)(v17 + 24) = v18;
  if (*(_BYTE *)(a2 + 48) && *(_DWORD *)(a2 + 52))
    v19 = 5;
  else
    v19 = 4;
  v20 = *(_DWORD *)(v16 + 60);
  *(_DWORD *)(v16 + 28) = v19;
  *(_DWORD *)(v16 + 60) = v20 | 0x44;
  v21 = *(_QWORD *)(v16 + 40);
  if (!v21)
    operator new();
  v38 = a2;
  v22 = a3[1];
  if (*a3 != v22)
  {
    v23 = *a3 + 8;
    do
    {
      v24 = *(_DWORD *)(v21 + 36);
      v25 = *(int *)(v21 + 32);
      if ((int)v25 >= v24)
      {
        if (v24 == *(_DWORD *)(v21 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v21 + 24), v24 + 1);
          v24 = *(_DWORD *)(v21 + 36);
        }
        *(_DWORD *)(v21 + 36) = v24 + 1;
        operator new();
      }
      v26 = *(_QWORD *)(v21 + 24);
      *(_DWORD *)(v21 + 32) = v25 + 1;
      v27 = *(_QWORD *)(v26 + 8 * v25);
      v28 = v23 - 8;
      v41 = &v40;
      if (*(_DWORD *)(v23 - 8) != *(int *)(v23 - 8) >> 31)
        sub_1001D79E4();
      v29 = *(_QWORD *)v23;
      *(_DWORD *)(v27 + 64) |= 1u;
      *(_QWORD *)(v27 + 16) = v29;
      LODWORD(v41) = *(_DWORD *)(v23 + 56);
      v30 = sub_100302FB0((unsigned int *)&v41);
      v31 = *(_DWORD *)(v27 + 64);
      *(_DWORD *)(v27 + 36) = v30;
      v32 = *(double *)(v23 + 64);
      *(_DWORD *)(v27 + 64) = v31 | 0x28;
      *(float *)(v27 + 44) = v32;
      v33 = sub_100170BB4(*(_DWORD *)(v23 + 72));
      v34 = *(_DWORD *)(v27 + 64);
      *(_DWORD *)(v27 + 40) = v33;
      *(_DWORD *)(v27 + 32) = (int)*(double *)(v23 + 24);
      v35 = *(_BYTE *)(v23 + 41) == 1;
      *(_DWORD *)(v27 + 64) = v34 | 0x54;
      *(_BYTE *)(v27 + 48) = v35;
      v23 += 88;
    }
    while (v28 + 88 != v22);
  }
  *(_DWORD *)(v21 + 52) |= 1u;
  v36 = *(_QWORD *)(v21 + 16);
  if (!v36)
    operator new();
  v41 = *(char **)(v38 + 32);
  v37 = sub_10018EB80(&v41);
  *(_DWORD *)(v36 + 44) |= 2u;
  *(double *)(v36 + 24) = v37;
}

void sub_100314A40()
{
  operator delete();
}

void sub_100314B9C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100314BB0(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_100026CE8(v1);
  _Unwind_Resume(a1);
}

void sub_100314BC4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  double v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  char *v20;
  uint64_t v21;
  int v22;
  int v23;
  char v24;
  char v25;
  _QWORD *v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  char v31;
  unsigned __int8 v32[4];
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  sub_1000547D8(a2, a1[2]);
  v6 = (_QWORD *)*a1;
  v4 = a1 + 1;
  v5 = v6;
  if (v6 != v4)
  {
    do
    {
      v32[0] = 0;
      if ((v5[12] & 0x20) != 0)
      {
        v7 = *((_DWORD *)v5 + 23);
        v32[0] = 1;
        v33 = v7;
      }
      v31 = *((_BYTE *)v5 + 76) ^ 1;
      v8 = *((double *)v5 + 8);
      v30 = *((_BYTE *)v5 + 88);
      if (v8 < 0.0)
      {
        sub_10030A278((const char *)v5 + 32, &v34);
        v9 = v5[10];
        v29 = v9;
        v10 = (int *)(v5 + 9);
        v11 = *(_QWORD *)(a2 + 8);
        if (v11 >= *(_QWORD *)(a2 + 16))
        {
          v20 = sub_100314E28((void **)a2, (uint64_t)&v34, v5 + 8, v32, v10, &v31, &v30, &v29);
        }
        else
        {
          v12 = v34;
          if (v34 >> 31 != v34)
          {
            v38 = v36;
            v39 = v37;
            v12 = v34 >> 31;
          }
          v13 = v12 ^ v34;
          v14 = (v12 ^ v34) >> 31;
          v15 = v13;
          if (v14 != v13)
          {
            v40 = v38;
            v41 = v39;
            v15 = v13 >> 31;
          }
          v16 = v5[8];
          v17 = *v10;
          v18 = v15 ^ v13;
          v19 = v18 >> 31;
          if (v18 >> 31 == v18)
          {
            *(_QWORD *)(v11 + 8) = v35;
            v19 = v18;
          }
          else
          {
            v21 = v40;
            *(_QWORD *)(v11 + 8) = v35;
            *(_QWORD *)(v11 + 16) = v21;
            *(_DWORD *)(v11 + 24) = v41;
          }
          v22 = v32[0];
          v23 = v33;
          v24 = v31;
          v25 = v30;
          *(_DWORD *)v11 = v19 ^ v18;
          *(_QWORD *)(v11 + 32) = v16;
          *(_BYTE *)(v11 + 40) = 0;
          if (v22)
          {
            *(_DWORD *)(v11 + 44) = v23;
            *(_BYTE *)(v11 + 40) = 1;
          }
          *(_BYTE *)(v11 + 48) = v24;
          *(_BYTE *)(v11 + 49) = v25;
          *(_QWORD *)(v11 + 56) = v9;
          *(_DWORD *)(v11 + 64) = 0;
          *(_QWORD *)(v11 + 72) = 0;
          v20 = (char *)(v11 + 88);
          *(_DWORD *)(v11 + 80) = v17;
        }
        *(_QWORD *)(a2 + 8) = v20;
      }
      v26 = (_QWORD *)v5[1];
      if (v26)
      {
        do
        {
          v27 = v26;
          v26 = (_QWORD *)*v26;
        }
        while (v26);
      }
      else
      {
        do
        {
          v27 = (_QWORD *)v5[2];
          v28 = *v27 == (_QWORD)v5;
          v5 = v27;
        }
        while (!v28);
      }
      v5 = v27;
    }
    while (v27 != v4);
  }
}

void sub_100314DEC(_Unwind_Exception *a1)
{
  char **v1;

  sub_100275288(v1);
  _Unwind_Resume(a1);
}

void sub_100314E00(_Unwind_Exception *a1)
{
  char **v1;

  sub_100275288(v1);
  _Unwind_Resume(a1);
}

void sub_100314E14(_Unwind_Exception *a1)
{
  char **v1;

  sub_100275288(v1);
  _Unwind_Resume(a1);
}

char *sub_100314E28(void **a1, uint64_t a2, _QWORD *a3, unsigned __int8 *a4, int *a5, char *a6, char *a7, uint64_t *a8)
{
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  _DWORD *v19;
  int v20;
  int v21;
  int v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  char v32;
  char v33;
  uint64_t v34;
  char *v35;
  _BYTE *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  char *v43;
  int v44;
  char *v45;
  int v46;
  __int128 v47;
  char *v48;
  char *v49;
  char *v50;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;

  v10 = (char *)*a1;
  v9 = (char *)a1[1];
  v11 = 0x2E8BA2E8BA2E8BA3 * ((v9 - (_BYTE *)*a1) >> 3);
  v12 = v11 + 1;
  if ((unint64_t)(v11 + 1) > 0x2E8BA2E8BA2E8BALL)
    sub_1000D02C0();
  if (0x5D1745D1745D1746 * (((_BYTE *)a1[2] - v10) >> 3) > v12)
    v12 = 0x5D1745D1745D1746 * (((_BYTE *)a1[2] - v10) >> 3);
  if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * (((_BYTE *)a1[2] - v10) >> 3)) >= 0x1745D1745D1745DLL)
    v12 = 0x2E8BA2E8BA2E8BALL;
  v53 = v12;
  if (v12)
  {
    v52 = a3;
    if (v12 > 0x2E8BA2E8BA2E8BALL)
      sub_1000CDEB8();
    v19 = operator new(88 * v12);
    a3 = v52;
    v20 = *(_DWORD *)a2;
    v21 = *(int *)a2 >> 31;
    v22 = *(_DWORD *)a2;
    if (v21 != *(_DWORD *)a2)
      goto LABEL_9;
  }
  else
  {
    v19 = 0;
    v20 = *(_DWORD *)a2;
    v21 = *(int *)a2 >> 31;
    v22 = *(_DWORD *)a2;
    if (v21 != *(_DWORD *)a2)
    {
LABEL_9:
      v54 = *(_QWORD *)(a2 + 16);
      v55 = *(_DWORD *)(a2 + 24);
      v22 = v21;
    }
  }
  v23 = (char *)&v19[22 * v11];
  v24 = v22 ^ v20;
  v25 = v24;
  if (v24 >> 31 != v24)
  {
    v56 = v54;
    v57 = v55;
    v25 = v24 >> 31;
  }
  v26 = *a3;
  v27 = *a4;
  v28 = v25 ^ v24;
  v29 = (v25 ^ v24) >> 31;
  *((_QWORD *)v23 + 1) = *(_QWORD *)(a2 + 8);
  if (v29 == (v25 ^ v24))
  {
    v29 = v25 ^ v24;
  }
  else
  {
    *((_QWORD *)v23 + 2) = v56;
    *((_DWORD *)v23 + 6) = v57;
  }
  v30 = *((_DWORD *)a4 + 1);
  v31 = *a5;
  v32 = *a6;
  v33 = *a7;
  v34 = *a8;
  *(_DWORD *)v23 = v29 ^ v28;
  v35 = (char *)&v19[22 * v11];
  v35[40] = 0;
  v36 = v35 + 40;
  *((_QWORD *)v36 - 1) = v26;
  if (v27)
  {
    v19[22 * v11 + 11] = v30;
    *v36 = 1;
  }
  v37 = (char *)&v19[22 * v11];
  v37[48] = v32;
  v37[49] = v33;
  *((_QWORD *)v37 + 7) = v34;
  *((_DWORD *)v37 + 16) = 0;
  v38 = (char *)&v19[22 * v53];
  *((_QWORD *)v37 + 9) = 0;
  *((_DWORD *)v37 + 20) = v31;
  v39 = v23 + 88;
  if (v9 == v10)
  {
    *a1 = v23;
    a1[1] = v39;
    a1[2] = v38;
  }
  else
  {
    v40 = 0;
    do
    {
      v43 = &v23[v40 - 80];
      v44 = *(_DWORD *)&v9[v40 - 88];
      v45 = &v9[v40 - 80];
      if (v44 == v44 >> 31)
      {
        *(_QWORD *)v43 = *(_QWORD *)v45;
        v46 = v44;
      }
      else
      {
        v47 = *(_OWORD *)v45;
        *(_DWORD *)&v23[v40 - 64] = *(_DWORD *)&v9[v40 - 64];
        *(_OWORD *)v43 = v47;
        v46 = *(_DWORD *)&v9[v40 - 88];
        v44 = v46 >> 31;
      }
      *(_DWORD *)&v23[v40 - 88] = v46 ^ v44;
      v48 = &v23[v40];
      v49 = &v9[v40];
      *((_QWORD *)v48 - 7) = *(_QWORD *)&v9[v40 - 56];
      *(v48 - 48) = 0;
      if (v9[v40 - 48])
      {
        *((_DWORD *)v48 - 11) = *((_DWORD *)v49 - 11);
        *(v48 - 48) = 1;
      }
      v41 = *(_OWORD *)(v49 - 40);
      v42 = *(_OWORD *)(v49 - 24);
      *((_DWORD *)v48 - 2) = *((_DWORD *)v49 - 2);
      *(_OWORD *)(v48 - 24) = v42;
      *(_OWORD *)(v48 - 40) = v41;
      v40 -= 88;
    }
    while (&v9[v40] != v10);
    v9 = (char *)*a1;
    v50 = (char *)a1[1];
    *a1 = &v23[v40];
    a1[1] = v39;
    a1[2] = v38;
    while (v50 != v9)
    {
      if (*(v50 - 48))
        *(v50 - 48) = 0;
      v50 -= 88;
    }
  }
  if (v9)
    operator delete(v9);
  return v39;
}

uint64_t sub_10031516C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003151C8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

id sub_100315224(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v3 = objc_msgSend(WeakRetained, "sensorPresent");

    return v3;
  }
  else
  {

    return 0;
  }
}

void sub_100315278(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_100315288(_QWORD *a1)
{
  char *v2;
  char *i;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v2 = (char *)a1[3];
  if (v2)
  {
    for (i = (char *)a1[4]; i != v2; i -= 88)
    {
      if (*(i - 48))
        *(i - 48) = 0;
    }
    a1[4] = v2;
    operator delete(v2);
  }
  v4 = (std::__shared_weak_count *)a1[2];
  if (!v4)
    return a1;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return a1;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

uint64_t sub_100315324(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;

  objc_destroyWeak((id *)(a1 + 96));
  *(_QWORD *)a1 = off_1004064E8;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
          std::__shared_weak_count::__release_weak(v5);
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 72);
    }
    *(_QWORD *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

char *sub_1003153B0@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  char *result;

  v4 = (char *)operator new(0x108uLL);
  v5 = v4;
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = off_1003F0840;
  v6 = a1[1];
  *((_QWORD *)v4 + 4) = *a1;
  *((_QWORD *)v4 + 5) = v6;
  v7 = a1[2];
  *((_QWORD *)v4 + 6) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *((_QWORD *)v4 + 7) = 0;
  *((_QWORD *)v4 + 8) = 0;
  *((_QWORD *)v4 + 9) = 0;
  result = sub_100309F90(v4 + 56, a1[3], a1[4], 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a1[4] - a1[3]) >> 3));
  *((_DWORD *)v5 + 6) = 14;
  *a2 = v5 + 24;
  a2[1] = v5;
  return result;
}

void sub_10031545C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count *v3;
  void *v4;

  v3 = (std::__shared_weak_count *)v1[2].__vftable;
  if (v3)
    sub_100344030(v3);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

uint64_t sub_100315480()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003154DC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100315538()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

double sub_10031554C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  const char *v3;
  size_t v4;
  void *v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;
  uint64_t v11;
  void *__dst[2];
  unint64_t v13;

  if (!a1)
    __cxa_bad_typeid();
  v3 = (const char *)(*(_QWORD *)(*(_QWORD *)(*a1 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL);
  v4 = strlen(v3);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    v13 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_9;
  }
  HIBYTE(v13) = v4;
  v6 = __dst;
  if (v4)
LABEL_9:
    memmove(v6, v3, (size_t)v5);
  *((_BYTE *)v5 + (_QWORD)v6) = 0;
  sub_10000EA1C(__dst, (uint64_t)&v10);
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
  result = *(double *)&v10;
  *(_OWORD *)a2 = v10;
  *(_QWORD *)(a2 + 16) = v11;
  return result;
}

void sub_100315640(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10031565C(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

_OWORD *sub_100315688(uint64_t a1, __int128 *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  char *v15;
  _OWORD *v16;
  __int128 v17;
  _QWORD *v18;
  std::__shared_weak_count *v19;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD **)(a1 + 8);
  v5 = ((uint64_t)v4 - *(_QWORD *)a1) >> 4;
  v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 60)
    sub_1000D02C0();
  v7 = *(_QWORD *)(a1 + 16) - (_QWORD)v3;
  if (v7 >> 3 > v6)
    v6 = v7 >> 3;
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF0)
    v6 = 0xFFFFFFFFFFFFFFFLL;
  if (v6 >> 60)
    sub_1000CDEB8();
  v9 = 16 * v6;
  v10 = (char *)operator new(16 * v6);
  v11 = &v10[16 * v5];
  v12 = *a2;
  *(_OWORD *)v11 = *a2;
  if (*((_QWORD *)&v12 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 16);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    v3 = *(_QWORD **)a1;
    v4 = *(_QWORD **)(a1 + 8);
  }
  v15 = &v10[v9];
  v16 = v11 + 16;
  if (v4 == v3)
  {
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v15;
    if (!v3)
      return v16;
    goto LABEL_20;
  }
  do
  {
    v17 = *((_OWORD *)v4 - 1);
    v4 -= 2;
    *((_OWORD *)v11 - 1) = v17;
    v11 -= 16;
    *v4 = 0;
    v4[1] = 0;
  }
  while (v4 != v3);
  v18 = *(_QWORD **)a1;
  v3 = *(_QWORD **)(a1 + 8);
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = v15;
  if (v3 != v18)
  {
    do
    {
      v19 = (std::__shared_weak_count *)*(v3 - 1);
      if (v19)
        std::__shared_weak_count::__release_weak(v19);
      v3 -= 2;
    }
    while (v3 != v18);
    v3 = v18;
  }
  if (v3)
LABEL_20:
    operator delete(v3);
  return v16;
}

uint64_t sub_1003157BC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100315818()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t *sub_100315874()
{
  unsigned __int8 v0;
  uint64_t v2;

  v0 = atomic_load((unsigned __int8 *)qword_10041A548);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(qword_10041A548))
    return &qword_10041A5C0;
  qword_10041A5C0 = (uint64_t)sub_10016E1C4();
  unk_10041A5C8 = v2;
  byte_10041A5D0 = 0;
  byte_10041A5D2 = 0;
  byte_10041A5D4 = 0;
  __cxa_guard_release(qword_10041A548);
  return &qword_10041A5C0;
}

void sub_1003158E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(qword_10041A548);
  _Unwind_Resume(a1);
}

uint64_t *sub_100315900()
{
  unsigned __int8 v0;
  uint64_t v2;

  v0 = atomic_load((unsigned __int8 *)&qword_10041A578);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_10041A578))
    return &qword_10041A608;
  qword_10041A608 = (uint64_t)sub_10016E248();
  unk_10041A610 = v2;
  byte_10041A618 = 0;
  byte_10041A61A = 0;
  byte_10041A61C = 0;
  __cxa_guard_release(&qword_10041A578);
  return &qword_10041A608;
}

void sub_100315974(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_10041A578);
  _Unwind_Resume(a1);
}

uint64_t *sub_10031598C()
{
  unsigned __int8 v0;
  uint64_t v2;

  v0 = atomic_load((unsigned __int8 *)&qword_10041A588);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_10041A588))
    return &qword_10041A638;
  qword_10041A638 = (uint64_t)sub_10016E288();
  unk_10041A640 = v2;
  byte_10041A648 = 0;
  byte_10041A64A = 0;
  byte_10041A64C = 0;
  __cxa_guard_release(&qword_10041A588);
  return &qword_10041A638;
}

void sub_100315A00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_10041A588);
  _Unwind_Resume(a1);
}

uint64_t *sub_100315A18()
{
  unsigned __int8 v0;
  uint64_t v2;

  v0 = atomic_load((unsigned __int8 *)&qword_10041A590);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_10041A590))
    return &qword_10041A700;
  qword_10041A700 = (uint64_t)sub_10016E298();
  unk_10041A708 = v2;
  byte_10041A710 = 0;
  byte_10041A718 = 0;
  byte_10041A71A = 0;
  __cxa_guard_release(&qword_10041A590);
  return &qword_10041A700;
}

void sub_100315A8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_10041A590);
  _Unwind_Resume(a1);
}

uint64_t sub_100315AA4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100315B00()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100315B5C()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

_QWORD *sub_100315B70(_QWORD *a1, _DWORD *a2)
{
  const char *v2;
  uint64_t v3;
  _BYTE v5[24];
  std::string v6;
  std::runtime_error v7;

  switch(*a2)
  {
    case 0:
      v2 = "sensor list for localization (no pdr)";
      v3 = 37;
      break;
    case 1:
      v2 = "additional sensors needed for pdr";
      v3 = 33;
      break;
    case 2:
      v2 = "additional sensors for extra tracing of localizers";
      v3 = 50;
      break;
    case 3:
      v2 = "sensor list for survey capture";
      v3 = 30;
      break;
    case 4:
      v2 = "invalid control group (num control groups)";
      v3 = 42;
      break;
    default:
      __cxa_allocate_exception(0x40uLL);
      sub_1000D5048(&v6, "unsupported control group");
      std::runtime_error::runtime_error(&v7, &v6);
      v7.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
      sub_10018D04C((uint64_t)v5);
      sub_1000F2F7C(&v7, (uint64_t)"std::ostream &operator<<(std::ostream &, const SensorManager::ControlGroup &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/sensors/sensor_manager.cpp", 33, (uint64_t)v5);
  }
  return sub_1000F0508(a1, (uint64_t)v2, v3);
}

void sub_100315CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, std::runtime_error a20,std::runtime_error a21)
{
  void *v21;
  int v22;

  sub_1000F3264(&a21);
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a20);
  if (a19 < 0)
  {
    operator delete(a14);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_100315D80()
{
  operator new();
}

void sub_100315DC8()
{
  operator delete();
}

void sub_100315DDC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::const_iterator v4;
  std::string *v5;
  __int128 v6;
  void **v7;
  std::string::size_type v8;
  std::string *v9;
  __int128 v10;
  void *__p[2];
  unsigned __int8 v12;
  std::string v13;
  std::string v14;
  std::string v15;
  std::string v16;

  sub_1000F020C((const char *)((unint64_t)"PN13SensorManager12ControlGroupE" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  else
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  std::string::insert(&v13, v4, 91);
  v14 = v13;
  memset(&v13, 0, sizeof(v13));
  v5 = std::string::append(&v14, "] = ");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_10031601C((_DWORD *)(a1 + 8));
  if ((v12 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v12 & 0x80u) == 0)
    v8 = v12;
  else
    v8 = (std::string::size_type)__p[1];
  v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_13;
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_18;
}

void sub_100315F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
LABEL_6:
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031601C(_DWORD *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  void (__cdecl **v6)(std::ostringstream *__hidden);
  _QWORD v7[8];
  void *__p[2];
  __int128 v9;
  int v10;
  void (__cdecl **v11)(std::ostringstream *__hidden);

  v6 = v2;
  *(_QWORD *)((char *)&v7[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v7[-1] + (_QWORD)*(v6 - 3));
  std::ios_base::init(v4, v7);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v7);
  *(_OWORD *)__p = 0u;
  v9 = 0u;
  v10 = 16;
  sub_100315B70(&v6, a1);
  std::stringbuf::str(v7);
  if (SBYTE7(v9) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(v7);
  return std::ios::~ios(&v11);
}

void sub_100316154(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  std::ostream::~ostream(va, v3 + 8);
  std::ios::~ios(v2);
  _Unwind_Resume(a1);
}

void sub_100316174(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_100316188(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10031619C()
{
  operator new();
}

void sub_1003163A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1003163F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003163C8(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_1003163E4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_1003163F8(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100316478()
{
  operator delete();
}

uint64_t sub_10031648C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_1003164A4()
{
  return 0;
}

uint64_t sub_1003164AC()
{
  return 0;
}

uint64_t sub_1003164B4()
{
  return 0;
}

uint64_t sub_1003164BC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100316518()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100316688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_1003166E0(&a9);
  _Unwind_Resume(a1);
}

void sub_10031669C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_1003166E0(&a9);
  _Unwind_Resume(a1);
}

void sub_1003166B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, id a12)
{

  sub_1003166E0(&a9);
  _Unwind_Resume(a1);
}

void sub_1003166CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_1003166E0(&a9);
  _Unwind_Resume(a1);
}

void **sub_1003166E0(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  void *v5;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = (void *)*((_QWORD *)v3 - 1);
        v3 -= 8;

      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_10031673C()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

std::string *sub_100316750@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100316780(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031679C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003167F8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100316854(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  _QWORD *i;
  uint64_t *v6;

  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  sub_1000723A0((uint64_t *)a2, a1 + 1);
  sub_100317F54(a2 + 24, 0x8E38E38E38E38E39 * ((uint64_t)(a1[11] - a1[10]) >> 3));
  v4 = (_QWORD *)a1[10];
  for (i = (_QWORD *)a1[11]; v4 != i; v4 += 9)
  {
    v6 = (uint64_t *)sub_100318080((char **)(a2 + 24), *(_QWORD *)(a2 + 32));
    sub_1000723A0(v6, v4);
  }
  sub_10009C2FC((double **)a2);
}

void sub_100316900(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    v5 = *(_QWORD *)(v1 + 32);
    v6 = *(void **)(v1 + 24);
    if (v5 != v3)
    {
      v7 = *(_QWORD *)(v1 + 32);
      do
      {
        v9 = *(void **)(v7 - 24);
        v7 -= 24;
        v8 = v9;
        if (v9)
        {
          *(_QWORD *)(v5 - 16) = v8;
          operator delete(v8);
        }
        v5 = v7;
      }
      while (v7 != v3);
      v6 = *(void **)(v1 + 24);
    }
    *(_QWORD *)(v1 + 32) = v3;
    operator delete(v6);
    v4 = *(void **)v1;
    if (!*(_QWORD *)v1)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v4 = *(void **)v1;
    if (!*(_QWORD *)v1)
      goto LABEL_3;
  }
  *(_QWORD *)(v1 + 8) = v4;
  operator delete(v4);
  _Unwind_Resume(exception_object);
}

double sub_100316980(uint64_t a1, uint64_t a2, int a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  BOOL v16;
  double v17;
  double v18;
  double v19;
  _QWORD *v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  double v27;
  _BYTE v29[32];
  void *v30;
  void *v31;
  void *__p;
  _QWORD *v33;
  __int128 v34;
  int8x16_t v35;
  uint64_t v36;
  void (**v37)(std::exception *__hidden);

  v34 = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 1800);
  v5 = *(_QWORD *)(a1 + 1808);
  if (v4 == v5)
    return NAN;
  v10 = INFINITY;
  v11 = NAN;
  do
  {
    sub_100072330((_QWORD *)v4, (uint64_t)&v30);
    if (v30 == v31)
    {
      v26 = __p;
      if (__p == v33)
      {
LABEL_30:
        v37 = &off_1003FBE28;
        v35.i64[0] = (uint64_t)"/AppleInternal/Library/BuildRoots/ae269ea5-5122-11ef-a621-12147c76fa9d/Applications/Xcode."
                              "app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sd"
                              "k/usr/local/include/boost/geometry/algorithms/detail/throw_on_empty_input.hpp";
        v35.i64[1] = (uint64_t)"void boost::geometry::detail::throw_on_empty_input(const Geometry &) [Geometry = boost::ge"
                              "ometry::model::polygon<boost::geometry::model::d2::point_xy<double>>]";
        v36 = 54;
        sub_1001D0450((uint64_t)&v37, &v35);
      }
      while (*v26 == v26[1])
      {
        v26 += 3;
        if (v26 == v33)
          goto LABEL_30;
      }
    }
    v19 = sub_10005B834((double *)&v34, (uint64_t)&v30);
    v20 = __p;
    if (__p)
    {
      v21 = v33;
      v22 = __p;
      if (v33 != __p)
      {
        v23 = v33;
        do
        {
          v25 = (void *)*(v23 - 3);
          v23 -= 3;
          v24 = v25;
          if (v25)
          {
            *(v21 - 2) = v24;
            operator delete(v24);
          }
          v21 = v23;
        }
        while (v23 != v20);
        v22 = __p;
      }
      v33 = v20;
      operator delete(v22);
    }
    if (v30)
    {
      v31 = v30;
      operator delete(v30);
    }
    v12 = fabs(v19);
    v13 = *(double *)(v4 + 56);
    if (!a3)
      v13 = 0.0;
    v14 = v12 - v13;
    v15 = -(v12 - v13);
    if (v19 >= 0.0)
      v15 = v12 - v13;
    v16 = v12 < v13;
    if (v12 >= v13)
      v17 = v15;
    else
      v17 = 0.0;
    if (v16)
      v18 = 0.0;
    else
      v18 = v14;
    if (v18 < v10)
    {
      v10 = v18;
      v11 = v17;
    }
    v4 += 72;
  }
  while (v4 != v5);
  if (v11 <= 0.0 && (a4 & 1) != 0)
  {
    sub_1001A2040((uint64_t)v29, a2);
    sub_100316BC0(a1, (uint64_t)v29, a3);
    v11 = v27;
    nullsub_23(v29);
  }
  return v11;
}

void sub_100316B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_23(&a9);
  _Unwind_Resume(a1);
}

void sub_100316B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_100282B34((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100316BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  std::exception::~exception((std::exception *)(v5 - 104));
  sub_100282B34((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100316BC0(uint64_t a1, uint64_t a2, int a3)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  double *v16;
  double *v17;
  double *v18;
  unint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  double *v37;
  double *v38;
  unint64_t v40;
  double v41;
  double *v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  const double *v46;
  uint64_t v47;
  const double *v48;
  const double *v49;
  const double *v50;
  double v51;
  double *v52;
  BOOL v53;
  double *v54;
  BOOL v55;
  BOOL v56;
  double v57;
  double v58;
  double v59;
  double v60;
  int64_t v61;
  double *v62;
  double *v63;
  double *v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double *v74;
  uint64_t v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *__p[2];
  double *v102;
  __int128 v103;
  void (**v104)(std::exception *__hidden);
  int8x16_t v105;
  uint64_t v106;
  float64x2x2_t v107;
  float64x2x2_t v108;
  float64x2x2_t v109;
  float64x2x2_t v110;

  v103 = *(_OWORD *)(a2 + 8);
  v98 = *(_QWORD *)(a1 + 1840);
  if (*(_QWORD *)(a1 + 1832) == v98)
    return;
  v3 = INFINITY;
  v4 = *(_QWORD *)(a1 + 1832);
  while (2)
  {
    v5 = *(_QWORD *)(v4 + 80);
    v100 = *(_QWORD *)(v4 + 88);
    if (v5 == v100)
      goto LABEL_4;
    v99 = v4;
    while (2)
    {
      v102 = 0;
      *(_OWORD *)__p = 0u;
      v6 = *(_QWORD *)(v5 + 8);
      if (*(_QWORD *)(v5 + 16) == v6)
        goto LABEL_83;
      v7 = 0;
      v8 = 0;
      do
      {
        v9 = *(_QWORD *)(v6 + 8 * v8);
        v10 = *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v8);
        if (v7 < v102)
        {
          *(_QWORD *)v7 = v9;
          *((_QWORD *)v7 + 1) = v10;
          v7 += 2;
          goto LABEL_11;
        }
        v11 = ((char *)v7 - (char *)__p[0]) >> 4;
        v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) >> 60)
          goto LABEL_136;
        v13 = (char *)v102 - (char *)__p[0];
        if (((char *)v102 - (char *)__p[0]) >> 3 > v12)
          v12 = v13 >> 3;
        if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
          v14 = 0xFFFFFFFFFFFFFFFLL;
        else
          v14 = v12;
        if (v14)
        {
          if (v14 >> 60)
            goto LABEL_137;
          v15 = (char *)operator new(16 * v14);
          v16 = (double *)&v15[16 * v11];
          *(_QWORD *)v16 = v9;
          *((_QWORD *)v16 + 1) = v10;
          if (v7 == __p[0])
          {
LABEL_27:
            v18 = v7;
            v7 = v16 + 2;
            __p[0] = v16;
            v102 = (double *)&v15[16 * v14];
            if (!v18)
              goto LABEL_11;
LABEL_28:
            operator delete(v18);
            goto LABEL_11;
          }
        }
        else
        {
          v15 = 0;
          v16 = (double *)(16 * v11);
          *(_QWORD *)v16 = v9;
          *((_QWORD *)v16 + 1) = v10;
          if (v7 == __p[0])
            goto LABEL_27;
        }
        v17 = v16;
        do
        {
          *((_OWORD *)v17 - 1) = *((_OWORD *)v7 - 1);
          v17 -= 2;
          v7 -= 2;
        }
        while (v7 != __p[0]);
        v18 = (double *)__p[0];
        v7 = v16 + 2;
        __p[0] = v17;
        v102 = (double *)&v15[16 * v14];
        if (v18)
          goto LABEL_28;
LABEL_11:
        __p[1] = v7;
        ++v8;
        v6 = *(_QWORD *)(v5 + 8);
      }
      while (v8 < (*(_QWORD *)(v5 + 16) - v6) >> 3);
      v19 = (unint64_t)__p[0];
      v20 = (char *)v7 - (char *)__p[0];
      if ((unint64_t)((char *)v7 - (char *)__p[0]) < 0x30)
        goto LABEL_83;
      v21 = *(double *)__p[0];
      v22 = *(v7 - 2);
      if (*(double *)__p[0] != v22)
      {
        if ((*(_QWORD *)&v21 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || (*(_QWORD *)&v22 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
        {
          goto LABEL_50;
        }
        v57 = vabdd_f64(v21, v22);
        v58 = fabs(v21);
        v59 = fabs(v22);
        if (v58 >= v59)
          v59 = v58;
        v60 = v59 >= 1.0 ? v59 * 2.22044605e-16 : 2.22044605e-16;
        if (v57 > v60)
          goto LABEL_50;
      }
      v23 = *((double *)__p[0] + 1);
      v24 = *(v7 - 1);
      if (v23 != v24)
      {
        if ((*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || (*(_QWORD *)&v24 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
        {
          goto LABEL_50;
        }
        v26 = vabdd_f64(v23, v24);
        v27 = fabs(v23);
        v28 = fabs(v24);
        if (v27 < v28)
          v27 = v28;
        v29 = v27 >= 1.0 ? v27 * 2.22044605e-16 : 2.22044605e-16;
        if (v26 > v29)
        {
LABEL_50:
          v31 = *((_QWORD *)__p[0] + 1);
          if (v7 < v102)
          {
            *v7 = v21;
            *((_QWORD *)v7 + 1) = v31;
            v32 = (uint64_t)(v7 + 2);
LABEL_68:
            __p[1] = (void *)v32;
            v19 = (unint64_t)__p[0];
            v20 = v32 - (unint64_t)__p[0];
            v7 = (double *)v32;
            goto LABEL_69;
          }
          v33 = v20 >> 4;
          v34 = (v20 >> 4) + 1;
          if (v34 >> 60)
LABEL_136:
            sub_1000D02C0();
          v35 = (char *)v102 - (char *)__p[0];
          if (((char *)v102 - (char *)__p[0]) >> 3 > v34)
            v34 = v35 >> 3;
          if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF0)
            v36 = 0xFFFFFFFFFFFFFFFLL;
          else
            v36 = v34;
          if (v36)
          {
            if (v36 >> 60)
LABEL_137:
              sub_1000CDEB8();
            v37 = (double *)((char *)operator new(16 * v36) + 16 * v33);
            *v37 = v21;
            *((_QWORD *)v37 + 1) = v31;
            v32 = (uint64_t)(v37 + 2);
            if (v7 == __p[0])
              goto LABEL_66;
          }
          else
          {
            v37 = (double *)(16 * v33);
            *v37 = v21;
            *((_QWORD *)v37 + 1) = v31;
            v32 = 16 * v33 + 16;
            if (v7 == __p[0])
            {
LABEL_66:
              __p[0] = v37;
LABEL_67:
              operator delete(v7);
              goto LABEL_68;
            }
          }
          do
          {
            *((_OWORD *)v37 - 1) = *((_OWORD *)v7 - 1);
            v37 -= 2;
            v7 -= 2;
          }
          while (v7 != __p[0]);
          v7 = (double *)__p[0];
          __p[0] = v37;
          if (!v7)
            goto LABEL_68;
          goto LABEL_67;
        }
      }
LABEL_69:
      v38 = (double *)(v19 + 16);
      if ((unint64_t)v20 >= 0x40 && v38 != v7)
      {
        v40 = (unint64_t)v7 - v19 - 32;
        v41 = 0.0;
        v42 = (double *)(v19 + 16);
        v43 = (double *)v19;
        if (v40 < 0x30)
          goto LABEL_142;
        v44 = (v40 >> 4) + 1;
        v45 = 2 * (v44 & 0x1FFFFFFFFFFFFFFCLL);
        v42 = &v38[v45];
        v43 = (double *)(v19 + v45 * 8);
        v46 = (const double *)(v19 + 32);
        v47 = v44 & 0x1FFFFFFFFFFFFFFCLL;
        do
        {
          v48 = v46 - 4;
          v107 = vld2q_f64(v48);
          v108 = vld2q_f64(v46);
          v49 = v46 - 2;
          v50 = v46 + 2;
          v109 = vld2q_f64(v49);
          v110 = vld2q_f64(v50);
          v107.val[0] = vmulq_f64(vaddq_f64(v107.val[0], v109.val[0]), vsubq_f64(v107.val[1], v109.val[1]));
          v107.val[1] = vmulq_f64(vaddq_f64(v108.val[0], v110.val[0]), vsubq_f64(v108.val[1], v110.val[1]));
          v41 = v41 + v107.val[0].f64[0] + v107.val[0].f64[1] + v107.val[1].f64[0] + v107.val[1].f64[1];
          v46 += 8;
          v47 -= 4;
        }
        while (v47);
        if (v44 != (v44 & 0x1FFFFFFFFFFFFFFCLL))
        {
LABEL_142:
          do
          {
            v51 = *v42;
            v42 += 2;
            v41 = v41 + (*v43 + v51) * (v43[1] - v43[3]);
            v43 += 2;
          }
          while (v42 != v7);
        }
        if (v41 * 0.5 < 0.0 && (double *)v19 != v7)
        {
          v52 = v7 - 2;
          if ((unint64_t)(v7 - 2) > v19)
          {
            do
            {
              v105 = *(int8x16_t *)(v38 - 2);
              *((_OWORD *)v38 - 1) = *(_OWORD *)v52;
              *(int8x16_t *)v52 = v105;
              v52 -= 2;
              v53 = v38 >= v52;
              v38 += 2;
            }
            while (!v53);
          }
        }
      }
LABEL_83:
      v54 = (double *)__p[0];
      if ((void *)((char *)__p[1] - (char *)__p[0]) < (void *)0x40)
        goto LABEL_91;
      v105.i32[0] = 0;
      v105.i8[4] = 0;
      if ((char *)__p[0] + 16 == __p[1])
        goto LABEL_91;
      do
      {
        v55 = sub_10005B9D0((double *)&v103, v54, v54 + 2, (uint64_t)&v105);
        v56 = v54 + 4 != __p[1] && v55;
        v54 += 2;
      }
      while (v56);
      if (v105.i8[4] || !v105.i32[0])
      {
LABEL_91:
        if (__p[0])
          operator delete(__p[0]);
        v5 += 72;
        if (v5 == v100)
          goto LABEL_3;
        continue;
      }
      break;
    }
    v61 = (char *)__p[1] - (char *)__p[0];
    if (__p[1] == __p[0])
    {
      v104 = &off_1003FBE28;
      v105.i64[0] = (uint64_t)"/AppleInternal/Library/BuildRoots/ae269ea5-5122-11ef-a621-12147c76fa9d/Applications/Xcode.a"
                             "pp/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/"
                             "usr/local/include/boost/geometry/algorithms/detail/throw_on_empty_input.hpp";
      v105.i64[1] = (uint64_t)"void boost::geometry::detail::throw_on_empty_input(const Geometry &) [Geometry = boost::geo"
                             "metry::model::linestring<boost::geometry::model::d2::point_xy<double>>]";
      v106 = 54;
      sub_1001D0450((uint64_t)&v104, &v105);
    }
    if (v61 < 0)
      sub_1000D02C0();
    v62 = (double *)operator new((char *)__p[1] - (char *)__p[0]);
    memcpy(v62, __p[0], v61);
    v63 = v62;
    v64 = v62;
    if (v61 != 16)
    {
      v65 = v62[2];
      v66 = v62[3];
      v67 = v62[1];
      v68 = v65 - *v62;
      v69 = v66 - v67;
      v70 = *(double *)&v103 - *v62;
      v71 = (*((double *)&v103 + 1) - v67) * (v66 - v67) + v70 * v68;
      if (v71 <= 0.0)
      {
        v73 = v70 * v70 + 0.0 + (*((double *)&v103 + 1) - v67) * (*((double *)&v103 + 1) - v67);
        v64 = v62;
        if (v61 == 32)
          goto LABEL_121;
      }
      else
      {
        v72 = v69 * v69 + v68 * v68;
        if (v72 <= v71)
        {
          v73 = (*(double *)&v103 - v65) * (*(double *)&v103 - v65)
              + 0.0
              + (*((double *)&v103 + 1) - v66) * (*((double *)&v103 + 1) - v66);
          v64 = v62;
          if (v61 == 32)
          {
LABEL_121:
            v63 = v64 + 2;
            goto LABEL_123;
          }
        }
        else
        {
          v73 = (*(double *)&v103 - (*v62 + v68 * (v71 / v72))) * (*(double *)&v103 - (*v62 + v68 * (v71 / v72)))
              + 0.0
              + (*((double *)&v103 + 1) - (v67 + v69 * (v71 / v72)))
              * (*((double *)&v103 + 1) - (v67 + v69 * (v71 / v72)));
          v64 = v62;
          if (v61 == 32)
            goto LABEL_121;
        }
      }
      v74 = v62 + 5;
      v75 = 16 * (v61 >> 4) - 32;
      v64 = v62;
      while (1)
      {
        v76 = *(v74 - 3);
        v77 = *(v74 - 1);
        v78 = *(v74 - 2);
        v79 = v77 - v76;
        v80 = *v74 - v78;
        v81 = (*((double *)&v103 + 1) - v78) * v80 + (*(double *)&v103 - v76) * (v77 - v76);
        if (v81 <= 0.0)
        {
          v83 = (*(double *)&v103 - v76) * (*(double *)&v103 - v76)
              + 0.0
              + (*((double *)&v103 + 1) - v78) * (*((double *)&v103 + 1) - v78);
          if (v83 == 0.0)
            goto LABEL_122;
        }
        else
        {
          v82 = v80 * v80 + v79 * v79;
          if (v82 <= v81)
          {
            v83 = (*(double *)&v103 - v77) * (*(double *)&v103 - v77)
                + 0.0
                + (*((double *)&v103 + 1) - *v74) * (*((double *)&v103 + 1) - *v74);
            if (v83 == 0.0)
            {
LABEL_122:
              v64 = v74 - 3;
              v63 = v74 - 1;
              break;
            }
          }
          else
          {
            v83 = (*(double *)&v103 - (v76 + v79 * (v81 / v82))) * (*(double *)&v103 - (v76 + v79 * (v81 / v82)))
                + 0.0
                + (*((double *)&v103 + 1) - (v78 + v80 * (v81 / v82)))
                * (*((double *)&v103 + 1) - (v78 + v80 * (v81 / v82)));
            if (v83 == 0.0)
              goto LABEL_122;
          }
        }
        if (v83 < v73)
        {
          v73 = v83;
          v64 = v74 - 3;
        }
        v74 += 2;
        v75 -= 16;
        if (!v75)
          goto LABEL_121;
      }
    }
LABEL_123:
    v84 = v63[1];
    v85 = v64[1];
    v86 = *v63 - *v64;
    v87 = v84 - v85;
    v88 = *(double *)&v103 - *v64;
    v89 = (*((double *)&v103 + 1) - v85) * (v84 - v85) + v88 * v86;
    if (v89 <= 0.0)
    {
      v93 = v88 * v88 + 0.0 + (*((double *)&v103 + 1) - v85) * (*((double *)&v103 + 1) - v85);
    }
    else
    {
      v90 = v87 * v87 + v86 * v86;
      if (v90 <= v89)
      {
        v91 = *((double *)&v103 + 1) - v84;
        v92 = *(double *)&v103 - *v63;
      }
      else
      {
        v91 = *((double *)&v103 + 1) - (v85 + v87 * (v89 / v90));
        v92 = *(double *)&v103 - (*v64 + v86 * (v89 / v90));
      }
      v93 = v92 * v92 + 0.0 + v91 * v91;
    }
    v94 = sqrt(v93);
    operator delete(v62);
    v95 = *(double *)(v5 + 56);
    if (!a3)
      v95 = 0.0;
    v96 = fmax(v94 - v95, 0.0);
    if (v96 < v3)
      v3 = v96;
    if (__p[0])
      operator delete(__p[0]);
LABEL_3:
    v4 = v99;
LABEL_4:
    v4 += 112;
    if (v4 != v98)
      continue;
    break;
  }
}

void sub_1003177AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception a26)
{
  std::exception::~exception(&a26);
  sub_100282B34((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1003177C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  if (__p)
  {
    operator delete(__p);
    sub_100282B34((uint64_t)&a17);
    _Unwind_Resume(a1);
  }
  sub_100282B34((uint64_t)&a17);
  _Unwind_Resume(a1);
}

double sub_100317888(_QWORD *a1, uint64_t a2, int a3, int a4, int a5, double a6)
{
  uint64_t v7;
  uint64_t v8;
  double v14;
  double v15;
  char *v16;
  char *v17;
  void *v18;
  char *v19;
  void *v20;
  void *v21;
  double v22;
  char *v23;
  char *v24;
  void *v25;
  char *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v34;
  _BYTE v35[32];
  __int128 v36;
  void *v37;
  void *v38;
  void *__p;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v36 = *(_OWORD *)(a2 + 8);
  v7 = a1[225];
  v8 = a1[226];
  if (v7 == v8)
    return NAN;
  v14 = INFINITY;
  if (a3)
  {
    do
    {
      sub_100072330((_QWORD *)v7, (uint64_t)&v37);
      v15 = sub_100317B24((uint64_t)&v37, (double *)&v36, a4, 0.0, a6);
      if (v15 < v14)
        v14 = v15;
      v16 = (char *)__p;
      if (__p)
      {
        v17 = v40;
        v18 = __p;
        if (v40 != __p)
        {
          v19 = v40;
          do
          {
            v21 = (void *)*((_QWORD *)v19 - 3);
            v19 -= 24;
            v20 = v21;
            if (v21)
            {
              *((_QWORD *)v17 - 2) = v20;
              operator delete(v20);
            }
            v17 = v19;
          }
          while (v19 != v16);
          v18 = __p;
        }
        v40 = v16;
        operator delete(v18);
      }
      if (v37)
      {
        v38 = v37;
        operator delete(v37);
      }
      v7 += 72;
    }
    while (v7 != v8);
  }
  else
  {
    do
    {
      sub_100072330((_QWORD *)v7, (uint64_t)&v37);
      v22 = sub_100317B24((uint64_t)&v37, (double *)&v36, a4, *(double *)(v7 + 56), a6);
      if (v22 < v14)
        v14 = v22;
      v23 = (char *)__p;
      if (__p)
      {
        v24 = v40;
        v25 = __p;
        if (v40 != __p)
        {
          v26 = v40;
          do
          {
            v28 = (void *)*((_QWORD *)v26 - 3);
            v26 -= 24;
            v27 = v28;
            if (v28)
            {
              *((_QWORD *)v24 - 2) = v27;
              operator delete(v27);
            }
            v24 = v26;
          }
          while (v26 != v23);
          v25 = __p;
        }
        v40 = v23;
        operator delete(v25);
      }
      if (v37)
      {
        v38 = v37;
        operator delete(v37);
      }
      v7 += 72;
    }
    while (v7 != v8);
  }
  if (a5)
  {
    if (v14 < 0.0)
    {
      v29 = a1[229];
      v30 = a1[230];
      if (v29 != v30)
      {
        while (1)
        {
          sub_10007300C(&v37, v29);
          v31 = v41;
          v32 = v42;
          sub_1000737B8(&v37);
          if (v31 != v32)
            break;
          v29 += 112;
          if (v29 == v30)
            return v14;
        }
        sub_1001A2040((uint64_t)v35, a2);
        v34 = sub_100317D88((uint64_t)a1, (uint64_t)v35, a3, a4, a6);
        nullsub_23(v35);
        if ((*(_QWORD *)&v34 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL && v34 >= v14)
          return v34;
      }
    }
  }
  return v14;
}

void sub_100317AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_23(&a9);
  _Unwind_Resume(a1);
}

void sub_100317AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_100282B34((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100317B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_100282B34((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_100317B24(uint64_t a1, double *a2, int a3, double a4, double a5)
{
  double *v10;
  double *v11;
  int64_t v12;
  char *v13;
  char *v14;
  double v15;
  double *v16;
  double *v17;
  double *v18;
  double **v19;
  double **v20;
  double v21;
  double *v22;
  double *v23;
  int64_t v24;
  char *v25;
  char *v26;
  double *v27;
  double *v28;
  double *v29;
  double v30;
  void *__p;
  void *v33;
  char *v34;

  v11 = *(double **)a1;
  v10 = *(double **)(a1 + 8);
  v33 = 0;
  v34 = 0;
  __p = 0;
  v12 = (char *)v10 - (char *)v11;
  if (v10 != v11)
  {
    if (v12 < 0)
      sub_1000D02C0();
    v13 = (char *)operator new((char *)v10 - (char *)v11);
    v14 = &v13[16 * (v12 >> 4)];
    __p = v13;
    v34 = v14;
    memcpy(v13, v11, v12);
    v33 = v14;
  }
  v15 = sub_100283A38(a2, (double **)&__p);
  if (__p)
  {
    v33 = __p;
    operator delete(__p);
  }
  v16 = *(double **)a1;
  v17 = *(double **)(a1 + 8);
  if ((unint64_t)v17 - *(_QWORD *)a1 >= 0x40)
  {
    LODWORD(__p) = 0;
    BYTE4(__p) = 0;
    if (v16 + 2 != v17)
    {
      do
      {
        if (!sub_10005B9D0(a2, v16, v16 + 2, (uint64_t)&__p))
          break;
        v18 = v16 + 4;
        v16 += 2;
      }
      while (v18 != v17);
      if (!BYTE4(__p) && (_DWORD)__p)
      {
        v19 = *(double ***)(a1 + 24);
        v20 = *(double ***)(a1 + 32);
        v21 = v15;
        while (v19 != v20)
        {
          v23 = *v19;
          v22 = v19[1];
          __p = 0;
          v33 = 0;
          v34 = 0;
          v24 = (char *)v22 - (char *)v23;
          if (v22 != v23)
          {
            if (v24 < 0)
              sub_1000D02C0();
            v25 = (char *)operator new((char *)v22 - (char *)v23);
            v26 = &v25[16 * (v24 >> 4)];
            __p = v25;
            v34 = v26;
            memcpy(v25, v23, v24);
            v33 = v26;
          }
          v15 = sub_100283A38(a2, (double **)&__p);
          if (__p)
          {
            v33 = __p;
            operator delete(__p);
          }
          v27 = *v19;
          v28 = v19[1];
          if ((unint64_t)((char *)v28 - (char *)*v19) >= 0x40)
          {
            LODWORD(__p) = 0;
            BYTE4(__p) = 0;
            if (v27 + 2 != v28)
            {
              do
              {
                if (!sub_10005B9D0(a2, v27, v27 + 2, (uint64_t)&__p))
                  break;
                v29 = v27 + 4;
                v27 += 2;
              }
              while (v29 != v28);
              if (!BYTE4(__p) && (_DWORD)__p)
                goto LABEL_30;
            }
          }
          if (v15 < v21)
            v21 = v15;
          v19 += 3;
        }
        v15 = -v21;
      }
    }
  }
LABEL_30:
  v30 = -1.0;
  if (a3 == 1)
    v30 = 1.0;
  return v15 + v30 * (a4 + a5);
}

void sub_100317D60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_100317D88(uint64_t a1, uint64_t a2, int a3, int a4, double a5)
{
  uint64_t v6;
  uint64_t v7;
  double v9;
  double v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  void *v16;
  double v17;
  char *v18;
  char *v19;
  void *v20;
  char *v21;
  void *v22;
  void *v23;
  void *v25;
  void *v26;
  void *__p;
  char *v28;
  __int128 v29;

  v29 = *(_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a1 + 1832);
  v7 = *(_QWORD *)(a1 + 1840);
  if (v6 == v7)
    return NAN;
  v9 = INFINITY;
  if (a3)
  {
    do
    {
      sub_100316854((_QWORD *)v6, (uint64_t)&v25);
      v10 = sub_100317B24((uint64_t)&v25, (double *)&v29, a4, 0.0, a5);
      if (v10 < v9)
        v9 = v10;
      v11 = (char *)__p;
      if (__p)
      {
        v12 = v28;
        v13 = __p;
        if (v28 != __p)
        {
          v14 = v28;
          do
          {
            v16 = (void *)*((_QWORD *)v14 - 3);
            v14 -= 24;
            v15 = v16;
            if (v16)
            {
              *((_QWORD *)v12 - 2) = v15;
              operator delete(v15);
            }
            v12 = v14;
          }
          while (v14 != v11);
          v13 = __p;
        }
        v28 = v11;
        operator delete(v13);
      }
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      v6 += 112;
    }
    while (v6 != v7);
  }
  else
  {
    do
    {
      sub_100316854((_QWORD *)v6, (uint64_t)&v25);
      v17 = sub_100317B24((uint64_t)&v25, (double *)&v29, a4, *(double *)(v6 + 64), a5);
      if (v17 < v9)
        v9 = v17;
      v18 = (char *)__p;
      if (__p)
      {
        v19 = v28;
        v20 = __p;
        if (v28 != __p)
        {
          v21 = v28;
          do
          {
            v23 = (void *)*((_QWORD *)v21 - 3);
            v21 -= 24;
            v22 = v23;
            if (v23)
            {
              *((_QWORD *)v19 - 2) = v22;
              operator delete(v22);
            }
            v19 = v21;
          }
          while (v21 != v18);
          v20 = __p;
        }
        v28 = v18;
        operator delete(v20);
      }
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      v6 += 112;
    }
    while (v6 != v7);
  }
  return v9;
}

void sub_100317F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100282B34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100317F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100282B34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100317F54(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  __int128 v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;

  v2 = *(char **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      sub_1000D02C0();
    v4 = *(char **)(a1 + 8);
    v5 = 24 * a2;
    v6 = (char *)operator new(24 * a2);
    v7 = &v6[v5];
    v8 = &v6[24 * ((v4 - v2) / 24)];
    if (v4 == v2)
    {
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v2)
LABEL_13:
        operator delete(v2);
    }
    else
    {
      v9 = &v6[24 * ((v4 - v2) / 24)];
      do
      {
        v10 = *(_OWORD *)(v4 - 24);
        v4 -= 24;
        *(_OWORD *)(v9 - 24) = v10;
        v9 -= 24;
        *((_QWORD *)v9 + 2) = *((_QWORD *)v4 + 2);
        *(_QWORD *)v4 = 0;
        *((_QWORD *)v4 + 1) = 0;
        *((_QWORD *)v4 + 2) = 0;
      }
      while (v4 != v2);
      v11 = *(char **)a1;
      v2 = *(char **)(a1 + 8);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v2 != v11)
      {
        v12 = v2;
        do
        {
          v14 = (void *)*((_QWORD *)v12 - 3);
          v12 -= 24;
          v13 = v14;
          if (v14)
          {
            *((_QWORD *)v2 - 2) = v13;
            operator delete(v13);
          }
          v2 = v12;
        }
        while (v12 != v11);
        v2 = v11;
      }
      if (v2)
        goto LABEL_13;
    }
  }
}

char *sub_100318080(char **a1, uint64_t a2)
{
  unint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  __int128 v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  _QWORD *v36;

  v4 = *a1;
  v3 = (unint64_t)a1[1];
  v5 = (a2 - (uint64_t)*a1) / 24;
  v6 = &(*a1)[24 * v5];
  v7 = (unint64_t)a1[2];
  if (v3 >= v7)
  {
    v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v3 - (_QWORD)v4) >> 3) + 1;
    if (v12 > 0xAAAAAAAAAAAAAAALL)
      sub_1000D02C0();
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (_QWORD)v4) >> 3);
    if (2 * v13 > v12)
      v12 = 2 * v13;
    if (v13 >= 0x555555555555555)
      v14 = 0xAAAAAAAAAAAAAAALL;
    else
      v14 = v12;
    v36 = a1 + 2;
    if (v14)
    {
      if (v14 > 0xAAAAAAAAAAAAAAALL)
        sub_1000CDEB8();
      v15 = (char *)operator new(24 * v14);
    }
    else
    {
      v15 = 0;
    }
    v32 = v15;
    v33 = &v15[24 * v5];
    v34 = v33;
    v35 = &v15[24 * v14];
    sub_10031843C((uint64_t)&v32);
    v17 = v33;
    v18 = *a1;
    v19 = v33;
    if (*a1 != v6)
    {
      v19 = v33;
      v20 = v6;
      do
      {
        *((_QWORD *)v19 - 3) = 0;
        *((_QWORD *)v19 - 2) = 0;
        v19 -= 24;
        *((_QWORD *)v19 + 2) = 0;
        v21 = *(_OWORD *)(v20 - 24);
        v20 -= 24;
        *(_OWORD *)v19 = v21;
        *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
        *(_QWORD *)v20 = 0;
        *((_QWORD *)v20 + 1) = 0;
        *((_QWORD *)v20 + 2) = 0;
      }
      while (v20 != v18);
    }
    v33 = v19;
    v22 = a1[1];
    v23 = v34;
    if (v22 != v6)
    {
      do
      {
        *(_QWORD *)v23 = 0;
        *((_QWORD *)v23 + 1) = 0;
        *((_QWORD *)v23 + 2) = 0;
        *(_OWORD *)v23 = *(_OWORD *)v6;
        *((_QWORD *)v23 + 2) = *((_QWORD *)v6 + 2);
        *(_QWORD *)v6 = 0;
        *((_QWORD *)v6 + 1) = 0;
        *((_QWORD *)v6 + 2) = 0;
        v23 += 24;
        v6 += 24;
      }
      while (v6 != v22);
      v19 = v33;
      v6 = a1[1];
    }
    v24 = *a1;
    *a1 = v19;
    a1[1] = v23;
    v25 = a1[2];
    a1[2] = v35;
    v34 = v6;
    v35 = v25;
    v32 = v24;
    v33 = v24;
    if (v6 == v24)
    {
      if (!v6)
        return v17;
    }
    else
    {
      do
      {
        while (1)
        {
          v27 = v6 - 24;
          v26 = (void *)*((_QWORD *)v6 - 3);
          v34 = v6 - 24;
          if (!v26)
            break;
          *((_QWORD *)v6 - 2) = v26;
          operator delete(v26);
          v6 = v34;
          if (v34 == v24)
            goto LABEL_32;
        }
        v6 -= 24;
      }
      while (v27 != v24);
LABEL_32:
      v6 = v32;
      if (!v32)
        return v17;
    }
    operator delete(v6);
    return v17;
  }
  if (v6 == (char *)v3)
  {
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 0;
    *((_QWORD *)v6 + 2) = 0;
    a1[1] = v6 + 24;
    return v6;
  }
  v8 = v6 + 24;
  v9 = v3 - 24;
  if (v3 < 0x18)
  {
    a1[1] = (char *)v3;
    if ((_QWORD *)v3 == v8)
      goto LABEL_39;
LABEL_35:
    v28 = 8 * ((uint64_t)(v3 - (_QWORD)v8) >> 3);
    do
    {
      v30 = *(void **)v9;
      if (*(_QWORD *)v9)
      {
        *(_QWORD *)(v9 + 8) = v30;
        operator delete(v30);
        *(_QWORD *)v9 = 0;
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
      }
      v29 = (uint64_t)&v6[v28 - 24];
      *(_OWORD *)v9 = *(_OWORD *)v29;
      *(_QWORD *)(v9 + 16) = *(_QWORD *)&v6[v28 - 8];
      *(_QWORD *)v29 = 0;
      *(_QWORD *)(v29 + 8) = 0;
      *(_QWORD *)(v29 + 16) = 0;
      v9 -= 24;
      v28 -= 24;
    }
    while (v28);
    goto LABEL_39;
  }
  v10 = v3 - 24;
  v11 = a1[1];
  do
  {
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    *((_QWORD *)v11 + 2) = 0;
    *(_OWORD *)v11 = *(_OWORD *)v10;
    *((_QWORD *)v11 + 2) = *(_QWORD *)(v10 + 16);
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    v11 += 24;
    v10 += 24;
  }
  while (v10 < v3);
  a1[1] = v11;
  if ((_QWORD *)v3 != v8)
    goto LABEL_35;
LABEL_39:
  v31 = *(void **)v6;
  if (*(_QWORD *)v6)
  {
    *((_QWORD *)v6 + 1) = v31;
    operator delete(v31);
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 0;
    *((_QWORD *)v6 + 2) = 0;
  }
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  return v6;
}

void sub_1003183BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1003183D0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003183D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      while (1)
      {
        v5 = v2 - 24;
        v4 = *(void **)(v2 - 24);
        *(_QWORD *)(a1 + 16) = v2 - 24;
        if (!v4)
          break;
        *(_QWORD *)(v2 - 16) = v4;
        operator delete(v4);
        v2 = *(_QWORD *)(a1 + 16);
        if (v2 == v3)
          goto LABEL_6;
      }
      v2 -= 24;
    }
    while (v5 != v3);
  }
LABEL_6:
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10031843C(uint64_t a1)
{
  char *v2;
  char *v3;
  char *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char *v25;

  v2 = *(char **)(a1 + 16);
  if (v2 == *(char **)(a1 + 24))
  {
    v3 = *(char **)a1;
    v4 = *(char **)(a1 + 8);
    if ((unint64_t)v4 <= *(_QWORD *)a1)
    {
      v11 = 0x5555555555555556 * ((v2 - v3) >> 3);
      if (v2 == v3)
        v11 = 1;
      if (v11 >= 0xAAAAAAAAAAAAAABLL)
        sub_1000CDEB8();
      v12 = v11 >> 2;
      v13 = 24 * v11;
      v14 = (char *)operator new(24 * v11);
      v15 = &v14[24 * v12];
      v16 = &v14[v13];
      if (v2 == v4)
      {
        *(_QWORD *)a1 = v14;
        *(_QWORD *)(a1 + 8) = v15;
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
      }
      else
      {
        v17 = &v15[v2 - v4];
        v18 = 24 * v12;
        do
        {
          v19 = &v14[v18];
          *(_OWORD *)v19 = *(_OWORD *)v4;
          *((_QWORD *)v19 + 2) = *((_QWORD *)v4 + 2);
          *(_QWORD *)v4 = 0;
          *((_QWORD *)v4 + 1) = 0;
          *((_QWORD *)v4 + 2) = 0;
          v18 += 24;
          v4 += 24;
        }
        while (v19 + 24 != v17);
        v3 = *(char **)a1;
        v20 = *(_QWORD *)(a1 + 8);
        v21 = *(_QWORD *)(a1 + 16);
        *(_QWORD *)a1 = v14;
        *(_QWORD *)(a1 + 8) = v15;
        *(_QWORD *)(a1 + 16) = v17;
        *(_QWORD *)(a1 + 24) = v16;
        if (v21 != v20)
        {
          v22 = v21;
          do
          {
            v24 = *(void **)(v22 - 24);
            v22 -= 24;
            v23 = v24;
            if (v24)
            {
              *(_QWORD *)(v21 - 16) = v23;
              operator delete(v23);
            }
            v21 = v22;
          }
          while (v22 != v20);
        }
      }
      if (v3)
        operator delete(v3);
      v2 = *(char **)(a1 + 16);
    }
    else
    {
      v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v4[-*(_QWORD *)a1] >> 3);
      if (v5 >= -1)
        v6 = v5 + 1;
      else
        v6 = v5 + 2;
      v7 = v6 >> 1;
      v8 = -v7;
      if (v4 == v2)
      {
        v25 = &v4[-24 * v7];
      }
      else
      {
        do
        {
          v9 = (void **)&v4[24 * v8];
          v10 = *v9;
          if (*v9)
          {
            v9[1] = v10;
            operator delete(v10);
            *v9 = 0;
            v9[1] = 0;
            v9[2] = 0;
          }
          *(_OWORD *)v9 = *(_OWORD *)v4;
          v9[2] = (void *)*((_QWORD *)v4 + 2);
          *(_QWORD *)v4 = 0;
          *((_QWORD *)v4 + 1) = 0;
          *((_QWORD *)v4 + 2) = 0;
          v4 += 24;
        }
        while (v4 != v2);
        v2 = *(char **)(a1 + 8);
        v25 = &v4[24 * v8];
      }
      *(_QWORD *)(a1 + 8) = &v2[24 * v8];
      *(_QWORD *)(a1 + 16) = v25;
      v2 = v25;
    }
  }
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *((_QWORD *)v2 + 2) = 0;
  *(_QWORD *)(a1 + 16) += 24;
}

uint64_t sub_10031862C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100318688()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1003186E4()
{
  sub_10031885C();
}

void sub_100318814(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000F9ECC((uint64_t)va);
  operator delete();
}

void sub_100318848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F9ECC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10031885C()
{
  operator new();
}

void sub_100318960(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_10031896C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100318980()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003189DC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100318A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (__cdecl **v13)(std::ostringstream *__hidden);
  uint64_t v14;
  std::ios_base *v15;
  _QWORD *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  std::string v53;
  void (__cdecl **v54)(std::ostringstream *__hidden);
  _QWORD v55[8];
  void *__p[2];
  __int128 v57;
  int v58;
  void (__cdecl **v59)(std::ostringstream *__hidden);

  v54 = v13;
  *(_QWORD *)((char *)&v55[-1] + (_QWORD)*(v13 - 3)) = v14;
  v15 = (std::ios_base *)((char *)&v55[-1] + (_QWORD)*(v54 - 3));
  std::ios_base::init(v15, v55);
  v15[1].__vftable = 0;
  v15[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v55);
  *(_OWORD *)__p = 0u;
  v57 = 0u;
  v58 = 16;
  v16 = sub_1000F0508(&v54, (uint64_t)"dimension mismatch between '", 28);
  v17 = *(char *)(a2 + 23);
  if (v17 >= 0)
    v18 = a2;
  else
    v18 = *(_QWORD *)a2;
  if (v17 >= 0)
    v19 = *(unsigned __int8 *)(a2 + 23);
  else
    v19 = *(_QWORD *)(a2 + 8);
  v20 = sub_1000F0508(v16, v18, v19);
  v21 = sub_1000F0508(v20, (uint64_t)"' (", 3);
  v22 = (_QWORD *)std::ostream::operator<<(v21, a6);
  v23 = sub_1000F0508(v22, (uint64_t)") and '", 7);
  v24 = *(char *)(a5 + 23);
  if (v24 >= 0)
    v25 = a5;
  else
    v25 = *(_QWORD *)a5;
  if (v24 >= 0)
    v26 = *(unsigned __int8 *)(a5 + 23);
  else
    v26 = *(_QWORD *)(a5 + 8);
  v27 = sub_1000F0508(v23, v25, v26);
  v28 = sub_1000F0508(v27, (uint64_t)"'(", 2);
  v29 = (_QWORD *)std::ostream::operator<<(v28, a6);
  sub_1000F0508(v29, (uint64_t)")", 1);
  v30 = sub_1000F0508(&v54, (uint64_t)".  ", 3);
  v31 = *(char *)(a2 + 23);
  if (v31 >= 0)
    v32 = a2;
  else
    v32 = *(_QWORD *)a2;
  if (v31 >= 0)
    v33 = *(unsigned __int8 *)(a2 + 23);
  else
    v33 = *(_QWORD *)(a2 + 8);
  v34 = sub_1000F0508(v30, v32, v33);
  v35 = sub_1000F0508(v34, (uint64_t)"=", 1);
  v36 = *(char *)(a4 + 23);
  if (v36 >= 0)
    v37 = a4;
  else
    v37 = *(_QWORD *)a4;
  if (v36 >= 0)
    v38 = *(unsigned __int8 *)(a4 + 23);
  else
    v38 = *(_QWORD *)(a4 + 8);
  v39 = sub_1000F0508(v35, v37, v38);
  v40 = sub_1000F0508(v39, (uint64_t)", ", 2);
  v41 = *(char *)(a5 + 23);
  if (v41 >= 0)
    v42 = a5;
  else
    v42 = *(_QWORD *)a5;
  if (v41 >= 0)
    v43 = *(unsigned __int8 *)(a5 + 23);
  else
    v43 = *(_QWORD *)(a5 + 8);
  v44 = sub_1000F0508(v40, v42, v43);
  v45 = sub_1000F0508(v44, (uint64_t)"=", 1);
  v46 = *(char *)(a7 + 23);
  if (v46 >= 0)
    v47 = a7;
  else
    v47 = *(_QWORD *)a7;
  if (v46 >= 0)
    v48 = *(unsigned __int8 *)(a7 + 23);
  else
    v48 = *(_QWORD *)(a7 + 8);
  sub_1000F0508(v45, v47, v48);
  std::stringbuf::str(v55);
  if (SBYTE7(v57) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(v55);
  std::ios::~ios(&v59);
  std::logic_error::logic_error((std::logic_error *)a1, &v53);
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v53.__r_.__value_.__l.__data_);
  *(_QWORD *)a1 = off_100406628;
  v49 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v49;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a1 + 40) = a3;
  v50 = *(_OWORD *)a5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a5 + 16);
  *(_OWORD *)(a1 + 48) = v50;
  *(_QWORD *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a1 + 72) = a6;
  return a1;
}

void sub_100318D3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (a17 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100318D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100318DA0(std::logic_error *this)
{
  this->__vftable = (std::logic_error_vtbl *)off_100406628;
  if (SHIBYTE(this[4].__vftable) < 0)
  {
    operator delete(this[3].__vftable);
    if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_6:
    operator delete(this[1].__vftable);
    std::logic_error::~logic_error(this);
    return;
  }
  if (SHIBYTE(this[2].__vftable) < 0)
    goto LABEL_6;
LABEL_3:
  std::logic_error::~logic_error(this);
}

void sub_100318E04(std::logic_error *this)
{
  this->__vftable = (std::logic_error_vtbl *)off_100406628;
  if (SHIBYTE(this[4].__vftable) < 0)
  {
    operator delete(this[3].__vftable);
    if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_6:
    operator delete(this[1].__vftable);
    std::logic_error::~logic_error(this);
    return;
  }
  if (SHIBYTE(this[2].__vftable) < 0)
    goto LABEL_6;
LABEL_3:
  std::logic_error::~logic_error(this);
}

void sub_100318E68(std::logic_error *this)
{
  this->__vftable = (std::logic_error_vtbl *)off_100406628;
  if (SHIBYTE(this[4].__vftable) < 0)
  {
    operator delete(this[3].__vftable);
    if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(this[1].__vftable);
LABEL_3:
  std::logic_error::~logic_error(this);
  operator delete();
}

uint64_t sub_100318ED4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100318F30()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100319008(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100319018(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10031902C()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1003191BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  if (a21 < 0)
  {
    operator delete(a16);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003192A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1003192CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100319334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10031934C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_100319360()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003193BC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100319418()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100319498(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100319584(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100319594()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1003195F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100319688(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100319698()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100319800(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10031994C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10031995C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10031996C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100319AB4()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100319C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  if (a16 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

id sub_100319CD0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "onQueueInvalidate");
}

void sub_100319E4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_100319E70(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "notifyDevicePowerChanged");
}

void sub_100319F68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_100319FB0(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "deviceAttached:", a2);
}

id sub_10031A058(uint64_t a1)
{
  void *v2;

  objc_storeWeak((id *)(*(_QWORD *)(a1 + 32) + 32), *(id *)(a1 + 40));
  if (*(_QWORD *)(a1 + 40))
  {
    objc_msgSend(*(id *)(a1 + 32), "onQueueRegisterDevices");
    v2 = *(void **)(a1 + 40);
  }
  else
  {
    v2 = 0;
  }
  return objc_msgSend(v2, "wifiDidChangeIsPowered:", objc_msgSend(*(id *)(a1 + 32), "isDisabled") ^ 1);
}

id sub_10031A104(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "onQueueReEnumerateDevices");
}

void sub_10031A1BC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 32));
  objc_msgSend(WeakRetained, "wifiDidChangeIsPowered:", objc_msgSend(*(id *)(a1 + 32), "isDisabled") ^ 1);

}

void sub_10031A208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_10031A26C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10031A2C8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10031A324()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_10031A338(uint64_t a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  int v4;
  size_t v5;
  unint64_t v6;
  std::string *p_dst;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  _BOOL4 v13;
  uint64_t v14;
  std::string __dst;
  std::string v16;
  std::string __p;
  void *v18[2];
  char v19;

  v4 = *((char *)a2 + 23);
  if (v4 >= 0)
    v5 = *((unsigned __int8 *)a2 + 23);
  else
    v5 = (size_t)a2[1];
  v6 = v5 + 20;
  if (v5 + 20 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  if (v6 >= 0x17)
  {
    v10 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v10 = v6 | 7;
    v11 = v10 + 1;
    p_dst = (std::string *)operator new(v10 + 1);
    __dst.__r_.__value_.__l.__size_ = v5 + 20;
    __dst.__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = &__dst;
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v5 + 20;
    if (!v5)
      goto LABEL_15;
  }
  if (v4 >= 0)
    v12 = a2;
  else
    v12 = *a2;
  memmove(p_dst, v12, v5);
LABEL_15:
  strcpy((char *)p_dst + v5, "-%%%%-%%%%-%%%%-%%%%");
  v16 = __dst;
  if (*(char *)(a1 + 23) < 0)
    sub_10006CED8(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_1000675EC(&__p, (uint64_t)&v16);
  sub_100011E0C((uint64_t)&__p, 0, (uint64_t)v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_20;
  }
  else if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(v16.__r_.__value_.__l.__data_);
LABEL_20:
  sub_100011C28((uint64_t)v18, 0, 0);
  sub_10006821C(0, &v16);
  sub_1000D67D0((uint64_t)v18, (uint64_t)&v16, 0, (unint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_10006CED8((_BYTE *)a3, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v13 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
  }
  else
  {
    v13 = 0;
    *(std::string *)a3 = __p;
  }
  v14 = *(unsigned __int8 *)(a3 + 23);
  if ((v14 & 0x80u) != 0)
    v14 = *(_QWORD *)(a3 + 8);
  *(_BYTE *)(a3 + 24) = v14 != 0;
  if (v13)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_29:
      if ((v19 & 0x80000000) == 0)
        return;
LABEL_33:
      operator delete(v18[0]);
      return;
    }
  }
  else if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete(v16.__r_.__value_.__l.__data_);
  if (v19 < 0)
    goto LABEL_33;
}

void sub_10031A57C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a25 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(a26);
      goto LABEL_8;
    }
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  if ((a31 & 0x80000000) == 0)
    goto LABEL_8;
  goto LABEL_7;
}

_BYTE *sub_10031A62C(_BYTE *__dst, __int128 *a2)
{
  __int128 v4;

  if (*((char *)a2 + 23) < 0)
  {
    sub_10006CED8(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    __dst[24] = *((_BYTE *)a2 + 24);
    if ((*((char *)a2 + 23) & 0x80000000) == 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v4 = *a2;
  *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
  *(_OWORD *)__dst = v4;
  __dst[24] = *((_BYTE *)a2 + 24);
  if (*((char *)a2 + 23) < 0)
LABEL_3:
    operator delete(*(void **)a2);
LABEL_4:
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  *((_BYTE *)a2 + 24) = 0;
  *((_QWORD *)a2 + 2) = 0;
  return __dst;
}

void sub_10031A6AC(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  int v4;
  void *v5;

  if (!*(_BYTE *)(a1 + 24))
    return;
  if (qword_100417ED8 == -1)
  {
    v2 = qword_100417EE0;
    if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_DEBUG))
    {
LABEL_4:
      v3 = (void *)a1;
      if (*(char *)(a1 + 23) < 0)
        v3 = *(void **)a1;
      v4 = 136315138;
      v5 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Removing temporary path %s", (uint8_t *)&v4, 0xCu);
    }
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_100406678);
    v2 = qword_100417EE0;
    if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_DEBUG))
      goto LABEL_4;
  }
  sub_1000D8970(a1, 0);
  *(_BYTE *)(a1 + 24) = 0;
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t sub_10031A7CC(uint64_t a1)
{
  sub_10031A6AC(a1);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10031A814(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_10031A840()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10031A89C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10031A8F8(_QWORD *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  void **v8;
  std::string::size_type v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *p_p;
  std::string::size_type size;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  std::bad_cast *v19;
  std::string __p;
  void *v21[2];
  unsigned __int8 v22;
  std::string v23;
  std::string v24;
  std::string v25;
  std::string v26;
  std::string v27;
  std::string v28;
  std::bad_cast v29;
  void *v30;
  _UNKNOWN **v31;

  sub_10031B00C((uint64_t)&v23, *(_QWORD *)(a1[3] + 8));
  v4 = std::string::insert(&v23, 0, "Listener ");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  v6 = std::string::append(&v24, " for event ");
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  sub_10031B00C((uint64_t)v21, *(_QWORD *)(*a1 + 8));
  if ((v22 & 0x80u) == 0)
    v8 = v21;
  else
    v8 = (void **)v21[0];
  if ((v22 & 0x80u) == 0)
    v9 = v22;
  else
    v9 = (std::string::size_type)v21[1];
  v10 = std::string::append(&v25, (const std::string::value_type *)v8, v9);
  v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  v12 = std::string::append(&v26, " (0x");
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  memset(&__p, 0, sizeof(__p));
  if ((sub_100169944(a1 + 2, &__p) & 1) == 0)
  {
    v19 = std::bad_cast::bad_cast(&v29);
    v29.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)v19);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v16 = std::string::append(&v27, (const std::string::value_type *)p_p, size);
  v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v28.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  v18 = std::string::append(&v28, ")");
  *a2 = *v18;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v28.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_25;
    }
  }
  else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_16;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_17:
    if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_26;
  }
LABEL_25:
  operator delete(v27.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_18:
    if (((char)v22 & 0x80000000) == 0)
      goto LABEL_19;
    goto LABEL_27;
  }
LABEL_26:
  operator delete(v26.__r_.__value_.__l.__data_);
  if (((char)v22 & 0x80000000) == 0)
  {
LABEL_19:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_20;
    goto LABEL_28;
  }
LABEL_27:
  operator delete(v21[0]);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_20:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_21;
    goto LABEL_29;
  }
LABEL_28:
  operator delete(v25.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_30:
    operator delete(v23.__r_.__value_.__l.__data_);
    return;
  }
LABEL_29:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_30;
}

void sub_10031AB80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  uint64_t v47;

  if (*(char *)(v47 - 57) < 0)
  {
    operator delete(*(void **)(v47 - 80));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v47 - 89) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v47 - 89) & 0x80000000) == 0)
  {
LABEL_4:
    if ((a47 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v47 - 112));
  if ((a47 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
LABEL_9:
    _Unwind_Resume(exception_object);
LABEL_17:
  operator delete(a22);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_10031ACD4(_QWORD *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;

  v6 = *a2;
  v5 = a2[1];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = (char *)operator new(0x58uLL);
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = off_1004066E8;
  *((_QWORD *)v9 + 3) = v6;
  v11 = *a3;
  v10 = a3[1];
  *((_QWORD *)v9 + 4) = v5;
  *((_QWORD *)v9 + 5) = v11;
  if (v10)
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 24))(v10);
  *((_QWORD *)v9 + 6) = v10;
  *(_OWORD *)(v9 + 56) = *((_OWORD *)a3 + 1);
  v12 = a3[5];
  *((_QWORD *)v9 + 9) = a3[4];
  *((_QWORD *)v9 + 10) = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  *a1 = v9 + 24;
  a1[1] = v9;
  return a1;
}

void sub_10031AD90(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count *shared_owners;
  void *v4;

  shared_owners = (std::__shared_weak_count *)v1[1].__shared_owners_;
  if (shared_owners)
    std::__shared_weak_count::__release_weak(shared_owners);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_10031ADB4(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;

  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031ADD0(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  uint64_t *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  std::string *p_p;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::string __p;
  uint8_t buf[4];
  std::string *v20;

  v2 = *(uint64_t **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_21;
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3 || *(_QWORD *)(v3 + 8))
    goto LABEL_21;
  v4 = (std::__shared_weak_count *)v2[1];
  if (!v4)
  {
LABEL_9:
    v7 = 0;
    v9 = v2 + 2;
    if (qword_100417ED8 != -1)
      goto LABEL_28;
    goto LABEL_10;
  }
  v5 = std::__shared_weak_count::lock(v4);
  v6 = *(uint64_t **)a1;
  if (!v5)
  {
    v2 = *(uint64_t **)a1;
    goto LABEL_9;
  }
  v7 = v5;
  v8 = *v2;
  if (!*v2)
  {
    v9 = v6 + 2;
    if (qword_100417ED8 != -1)
    {
LABEL_28:
      dispatch_once(&qword_100417ED8, &stru_1004066B8);
      v10 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
        goto LABEL_16;
      goto LABEL_11;
    }
LABEL_10:
    v10 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
      goto LABEL_16;
LABEL_11:
    sub_10031A8F8(v9, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 136315138;
    v20 = p_p;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "WARNING: Registered listener handle %s still active but event bus is gone", buf, 0xCu);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
LABEL_16:
    if (!v7)
      goto LABEL_21;
    goto LABEL_17;
  }
  std::mutex::lock((std::mutex *)(v8 + 48));
  sub_100175ACC((_QWORD *)v8, v6[2], v6[4], v6[5]);
  std::mutex::unlock((std::mutex *)(v8 + 48));
LABEL_17:
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
LABEL_21:
  v14 = *(std::__shared_weak_count **)(a1 + 8);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  return a1;
}

void sub_10031AFDC(_Unwind_Exception *exception_object, int a2)
{
  std::mutex *v2;

  if (a2)
  {
    std::mutex::unlock(v2);
    sub_1000CDD68(exception_object);
  }
  _Unwind_Resume(exception_object);
}

double sub_10031B00C(uint64_t a1, uint64_t a2)
{
  const void *v3;
  size_t v4;
  void *v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;
  uint64_t v11;
  void *__dst[2];
  unint64_t v13;

  v3 = (const void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  v4 = strlen((const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL));
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    v13 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v13) = v4;
  v6 = __dst;
  if (v4)
LABEL_8:
    memmove(v6, v3, (size_t)v5);
  *((_BYTE *)v5 + (_QWORD)v6) = 0;
  sub_10000EA1C(__dst, (uint64_t)&v10);
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
  result = *(double *)&v10;
  *(_OWORD *)a1 = v10;
  *(_QWORD *)(a1 + 16) = v11;
  return result;
}

void sub_10031B0EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10031B108(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_10031B134(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004066E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10031B144(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004066E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_10031B174(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = a1[6];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = a1[6];
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[4];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

uint64_t sub_10031B200()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10031B25C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10031B2B8()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

const char *sub_10031B2CC(uint64_t a1)
{
  const char *result;
  uint64_t v3;

  result = (const char *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(_QWORD *)(a1 + 16))
      return *(const char **)result;
  }
  else if (*(_BYTE *)(a1 + 31))
  {
    return result;
  }
  v3 = *(int *)(a1 + 32);
  if (v3 > 7)
    return "TTransportException: (Invalid exception type)";
  else
    return off_100406768[v3];
}

void sub_10031B320(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)off_1003F0158;
  if (SHIBYTE(this[3].__vftable) < 0)
    operator delete(this[1].__vftable);
  std::exception::~exception(this);
  operator delete();
}

void sub_10031B370(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v4;
  uint64_t v5;
  uint64_t FileByName;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *__p;
  __int128 v11;

  sub_10031B83C(a1, a2, a3, a4);
  v5 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  __p = operator new(0x28uLL);
  v11 = xmmword_10038D7B0;
  strcpy((char *)__p, "protobuf/gen/indoor_availability.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v5, &__p);
  v7 = FileByName;
  if (SHIBYTE(v11) < 0)
  {
    operator delete(__p);
    if (v7)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(&__p, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 55);
  v8 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(&__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v8);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
LABEL_6:
  qword_10041A788 = *(_QWORD *)(v7 + 80);
  operator new();
}

void sub_10031B7BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031B7D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031B7E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10031B83C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  int v16;

  if ((byte_10041A780 & 1) == 0)
  {
    byte_10041A780 = 1;
    v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", a4);
    sub_1001AD688(v4, v5, v6, v7);
    sub_1001AF970(v8, v9, v10, v11);
    sub_1002E43C8(v12, v13, v14, v15);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n&protobuf/gen/indoor_availability.proto\x12\x12proto.availability\x1A'protobuf/gen/locationd_parameters.proto\x1A\x1Dprotobuf/gen/parameters.proto\x1A\x18protobuf/gen/venue.proto\"O\n\rLatLonPolygon\x12\x14\n\blatitude\x18\x01 \x03(\x01B\x02\x10\x01\x12\x15\n\tlongitude\x18\x02 \x03(\x01B\x02\x10\x01\x12\x11\n\ttolerance\x18\x03 \x02(\x01\"A\n\x19TileDownloadConfiguration\x12$\n\x1CfloorIdxsForWifiDownloadOnly\x18\x01 \x03(\r\"\xC2\x02\n\vVenueBounds\x12\v\n\x03ids\x18\x01 \x03(\t\x124\n\texteriors\x18\x03 \x03(\v2!.proto.availability.LatLonPolygon\x12P\n\x19tileDownloadConfiguration\x18\x05 \x01(\v2-.proto.availability.TileDownloadConfiguration\x12-\n\acontext\x18\x06 \x01(\x0E2\x1C.proto.venue.LocationCon"
                                                                "text\x12>\n"
                                                                "\x13DEPRECATED_exterior\x18\x02 \x01(\v2!.proto.availabi"
                                                                "lity.LatLonPolygon\x12/\n"
                                                                "'DEPRECATED_floorIdxsForWifiDownloadOnly\x18\x04 \x03(\r"
                                                                "\"\x99\x06\n"
                                                                "\x10AvailabilityTile\x12/\n"
                                                                "\x06venues\x18\x01 \x03(\v2\x1F.proto.availability.Venue"
                                                                "Bounds\x12=\n"
                                                                "\x12parameterOverrides\x18\x10 \x01(\v2!.proto.params.Lo"
                                                                "calizerParameters\x122\n"
                                                                "$availabilityZScoreConfidenceInterval\x18\x11 \x01(\x01:"
                                                                "\x041.96\x12#\n"
                                                                "\x16indoorPrefetchRadiusKM\x18\x12 \x01(\r:\x03200\x12%\n"
                                                                "\x18regionalPrefetchRadiusKM\x18\x16 \x01(\r:\x03200\x12"
                                                                "(\n"
                                                                "\x1BindoorPrefetchMaxFloorCount\x18\x13 \x01(\r:\x03200\x12"
                                                                "*\n"
                                                                "\x1DregionalPrefetchMaxFloorCount\x18\x17 \x01(\r:\x0320"
                                                                "0\x12.\n"
                                                                "\x1BindoorPrefetchMaxTotalBytes\x18\x19 \x01(\r:\t200000"
                                                                "000\x120\n"
                                                                "\x1DregionalPrefetchMaxTotalBytes\x18\x1A \x01(\r:\t1000"
                                                                "00000\x121\n"
                                                                "%indoorLocationOfInterestMergeRadiusKM\x18\x14 \x01(\r:\x02"
                                                                "50\x123\n"
                                                                "'regionalLocationOfInterestMergeRadiusKM\x18\x18 \x01(\r"
                                                                ":\x0250\x120\n"
                                                                "%preferPredictionWithinNActivityCycles\x18\x15 \x01(\r:\x01"
                                                                "1\x121\n"
                                                                "&indoorNumberOfDaysBeforeTileRedownload\x18\x1B \x01(\x02"
                                                                ":\x017\x123\n"
                                                                "(regionalNumberOfDaysBeforeTileRedownload\x18\x1C \x01(\x02"
                                                                ":\x017\x12[\n"
                                                                " motionActivityDebounceParameters\x18\x1D \x01(\v21.prot"
                                                                "o.locationd.MotionActivityDebounceParameters\"\xC8\x02\n"
                                                                "\x18AvailabilityTileMetadata\x12\f\n"
                                                                "\x04uuid\x18\x01 \x01(\t\x12\x15\n"
                                                                "\rtimeGenerated\x18\x02 \x01(\x01\x12\x10\n"
                                                                "\bnumTiles\x18\x03 \x01(\r\x12\x11\n"
                                                                "\tnumVenues\x18\x04 \x01(\r\x12\x11\n"
                                                                "\tsizeBytes\x18\x05 \x01(\r\x12\x1B\n"
                                                                "\x13compressedSizeBytes\x18\x06 \x01(\r\x12\x13\n"
                                                                "\vgeneratedBy\x18\a \x01(\t\x12\x17\n"
                                                                "\x0FgeneratedReason\x18\b \x01(\t\x12\x1B\n"
                                                                "\x13numOverriddenParams\x18\t \x01(\r\x12\f\n"
                                                                "\x04sha1\x18\n"
                                                                " \x01(\f\x12\x11\n"
                                                                "\tnumGroups\x18\v \x01(\r\x12F\n"
                                                                "\btileType\x18\f \x01(\x0E2(.proto.availability.Availabi"
                                                                "lityTileType:\n"
                                                                "IndoorOnly\"m\n"
                                                                "\x1BGroupedAvailabilityLocation\x12\x12\n"
                                                                "\n"
                                                                "locationId\x18\x01 \x01(\t\x12\x0F\n"
                                                                "\agroupId\x18\x02 \x01(\t\x12\x0F\n"
                                                                "\avenueId\x18\x03 \x01(\t\x12\v\n"
                                                                "\x03lat\x18\x04 \x01(\x01\x12\v\n"
                                                                "\x03lng\x18\x05 \x01(\x01\"\xB8\x01\n"
                                                                "\x17AvailabilityTileDetails\x12\f\n"
                                                                "\x04uuid\x18\x01 \x01(\t\x12\x11\n"
                                                                "\ttileUuids\x18\x02 \x03(\t\x122\n"
                                                                "\x04tile\x18\x03 \x01(\v2$.proto.availability.Availabili"
                                                                "tyTile\x12H\n"
                                                                "\x0FgroupingDetails\x18\x04 \x03(\v2/.proto.availability"
                                                                ".GroupedAvailabilityLocation*>\n"
                                                                "\x14AvailabilityTileType\x12\x0E\n"
                                                                "\n"
                                                                "IndoorOnly\x10\x01\x12\x16\n"
                                                                "\x12IndoorPlusRegional\x10\x02B\x1F\n"
                                                                "\x1Dcom.apple.indoor.availability",
      (const void *)0x869,
      v16);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("protobuf/gen/indoor_availability.proto", sub_10031BE20);
    operator new();
  }
}

void sub_10031BB88()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10031BBB4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10031BBE0()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10031BC0C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10031BC38()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10031BC64()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10031BC90()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10031BCBC()
{
  uint64_t result;

  if (qword_10042EAB8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EAB8 + 8))(qword_10042EAB8);
  if (qword_10041A790)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A790 + 8))(qword_10041A790);
  if (qword_10042EAC0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EAC0 + 8))(qword_10042EAC0);
  if (qword_10041A7A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A7A0 + 8))(qword_10041A7A0);
  if (qword_10042EAC8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EAC8 + 8))(qword_10042EAC8);
  if (qword_10041A7B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A7B0 + 8))(qword_10041A7B0);
  if (qword_10042EAD0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EAD0 + 8))(qword_10042EAD0);
  if (qword_10041A7C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A7C0 + 8))(qword_10041A7C0);
  if (qword_10042EAD8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EAD8 + 8))(qword_10042EAD8);
  if (qword_10041A7D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A7D0 + 8))(qword_10041A7D0);
  if (qword_10042EAE0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EAE0 + 8))(qword_10042EAE0);
  if (qword_10041A7E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041A7E0 + 8))(qword_10041A7E0);
  if (qword_10042EAE8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10042EAE8 + 8))(qword_10042EAE8);
  result = qword_10041A7F0;
  if (qword_10041A7F0)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_10041A7F0 + 8))(qword_10041A7F0);
  return result;
}

uint64_t sub_10031BE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;

  v0 = qword_10041A800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v15[1] = sub_10031B370;
    v16 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A800, v15);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v15);
  }
  v1 = qword_10041A788;
  if (!qword_10042EAB8)
    ((void (*)(void))sub_10031B83C)();
  v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  v3 = qword_10041A798;
  if (!qword_10042EAC0)
    sub_10031B83C(v2);
  v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
  v5 = qword_10041A7A8;
  if (!qword_10042EAC8)
    sub_10031B83C(v4);
  v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5);
  v7 = qword_10041A7B8;
  if (!qword_10042EAD0)
    sub_10031B83C(v6);
  v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v7);
  v9 = qword_10041A7C8;
  if (!qword_10042EAD8)
    sub_10031B83C(v8);
  v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v9);
  v11 = qword_10041A7D8;
  if (!qword_10042EAE0)
    sub_10031B83C(v10);
  v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v11);
  v13 = qword_10041A7E8;
  if (qword_10042EAE8)
    return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(qword_10041A7E8);
  sub_10031B83C(v12);
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v13);
}

void sub_10031BF9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10031BFB0(_QWORD *a1)
{
  *a1 = off_1004067B8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[5] = 0;
  a1[6] = 0;
  a1[8] = 0;
  a1[9] = 0;
  return a1;
}

void sub_10031BFEC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_10031C000(_QWORD *a1)
{
  *a1 = off_100406868;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10031C038(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10031C04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  char v17;
  _BYTE v18[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v18, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 636);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    v6 = *(_DWORD *)(a1 + 24);
    v7 = *(_DWORD *)(a1 + 28);
    v8 = v6 + v5;
    if (v7 < v8)
    {
      v9 = 2 * v7;
      if (2 * v7 <= v8)
        v9 = v8;
      if (v9 <= 4)
        v9 = 4;
      *(_DWORD *)(a1 + 28) = v9;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 16) + 8 * v6), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  v10 = *(_DWORD *)(a2 + 48);
  if (v10)
  {
    v11 = *(_DWORD *)(a1 + 48);
    v12 = *(_DWORD *)(a1 + 52);
    v13 = v11 + v10;
    if (v12 < v13)
    {
      v14 = 2 * v12;
      if (2 * v12 <= v13)
        v14 = v13;
      if (v14 <= 4)
        v14 = 4;
      *(_DWORD *)(a1 + 52) = v14;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 40) + 8 * v11), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  if ((*(_BYTE *)(a2 + 76) & 4) != 0)
  {
    v15 = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 76) |= 4u;
    *(_QWORD *)(a1 + 64) = v15;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10031C258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031C26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031C280(_QWORD *a1)
{
  *a1 = off_1004067B8;
  if (a1[5])
    operator delete[]();
  if (a1[2])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10031C2EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_10031C2F4()
{
  operator new();
}

void sub_10031C348()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10031C370(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if ((*(_WORD *)(a1 + 76) & 0x3FC) != 0)
    *(_QWORD *)(a1 + 64) = 0;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 17) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10031C39C(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, 0xAu);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, *(_DWORD *)(v4 + 32));
    if (*(int *)(v4 + 24) >= 1)
    {
      v5 = 0;
      do
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a2, *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8 * v5++));
      while (v5 < *(int *)(v4 + 24));
    }
  }
  if (*(int *)(v4 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, 0x12u);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, *(_DWORD *)(v4 + 56));
    if (*(int *)(v4 + 48) >= 1)
    {
      v6 = 0;
      do
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a2, *(_QWORD *)(*(_QWORD *)(v4 + 40) + 8 * v6++));
      while (v6 < *(int *)(v4 + 48));
    }
  }
  if ((*(_BYTE *)(v4 + 76) & 4) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 64), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

_BYTE *sub_10031C4B0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  if (*((int *)this + 6) >= 1)
  {
    *a2 = 10;
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v4 > 0x7F)
    {
      a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
      if (*((int *)this + 6) < 1)
        goto LABEL_8;
    }
    else
    {
      a2[1] = (_BYTE)v4;
      a2 += 2;
      if (*((int *)this + 6) < 1)
        goto LABEL_8;
    }
    v5 = 0;
    do
    {
      *(_QWORD *)a2 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * v5);
      a2 += 8;
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
LABEL_8:
  if (*((int *)this + 12) <= 0)
    goto LABEL_15;
  *a2 = 18;
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v6 > 0x7F)
  {
    a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    if (*((int *)this + 12) < 1)
      goto LABEL_15;
  }
  else
  {
    a2[1] = (_BYTE)v6;
    a2 += 2;
    if (*((int *)this + 12) < 1)
      goto LABEL_15;
  }
  v7 = 0;
  do
  {
    *(_QWORD *)a2 = *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v7);
    a2 += 8;
    ++v7;
  }
  while (v7 < *((int *)this + 12));
LABEL_15:
  if ((*((_BYTE *)this + 76) & 4) != 0)
  {
    v8 = *((_QWORD *)this + 8);
    *a2 = 25;
    *(_QWORD *)(a2 + 1) = v8;
    a2 += 9;
  }
  v11 = (_QWORD *)*((_QWORD *)this + 1);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v9 = v11;
  if (!v11 || *v9 == v9[1])
    return a2;
  else
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10031C630(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;

  v3 = (*(unsigned __int8 *)(a1 + 76) << 29 >> 31) & 9;
  v4 = *(_DWORD *)(a1 + 24);
  v5 = 8 * v4;
  if (v4 >= 1)
  {
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v4), a2)+ 1;
    else
      v6 = 2;
    v3 += v6;
  }
  *(_DWORD *)(a1 + 32) = v5;
  v7 = v3 + v5;
  v8 = *(_DWORD *)(a1 + 48);
  v9 = 8 * v8;
  if (v8 >= 1)
  {
    if (v9 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v8), a2)+ 1;
    else
      v10 = 2;
    v7 += v10;
  }
  v11 = *(_QWORD **)(a1 + 8);
  *(_DWORD *)(a1 + 56) = v9;
  v12 = v7 + v9;
  if (v11 && *v11 != v11[1])
    v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v12;
  *(_DWORD *)(a1 + 72) = v12;
  return v12;
}

uint64_t sub_10031C6FC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 624);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10031C04C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10031C7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031C7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031C7D8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10031C820(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 76) >> 2) & 1;
}

uint64_t sub_10031C82C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10031B370;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A800, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A788;
}

void sub_10031C8A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031C8B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10031C8BC()
{
  operator new();
}

void sub_10031C90C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10031C934(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10031C94C(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  uint64_t v8;
  unsigned int v9;
  char *v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;

  v14 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
    if (!(_DWORD)result)
      return result;
    v5 = v14;
  }
  else
  {
    v5 = *v4;
    v14 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v13 = 0;
      v10 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v13 = *v10;
        *((_QWORD *)this + 1) = v10 + 1;
      }
      v11 = *((_DWORD *)a2 + 2);
      if (v11 == *((_DWORD *)a2 + 3))
      {
        if (2 * v11 <= v11 + 1)
          v12 = v11 + 1;
        else
          v12 = 2 * v11;
        if (v12 <= 4)
          v12 = 4;
        *((_DWORD *)a2 + 3) = v12;
        operator new[]();
      }
      v8 = *a2;
      v9 = v13;
      *((_DWORD *)a2 + 2) = v11 + 1;
      *(_DWORD *)(v8 + 4 * v11) = v9;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_10031CADC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(*(_QWORD *)(v5 + 16) + 4 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10031CB64(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  if (*((int *)this + 6) >= 1)
  {
    v5 = 0;
    do
    {
      while (1)
      {
        v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 2)
                                                                                              + 4 * v5);
        *(_BYTE *)a2 = 8;
        if (v6 <= 0x7F)
          break;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
        if (++v5 >= *((int *)this + 6))
          goto LABEL_6;
      }
      *((_BYTE *)a2 + 1) = (_BYTE)v6;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
LABEL_6:
  v9 = (_QWORD *)*((_QWORD *)this + 1);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v7 = v9;
  if (!v9 || *v7 == v7[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, a2, a3);
}

uint64_t sub_10031CC1C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;
  uint64_t v12;

  v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    v8 = v3;
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v10 = *(_QWORD **)(a1 + 8);
    if (!v10)
    {
LABEL_7:
      *(_DWORD *)(a1 + 32) = v8;
      return v8;
    }
  }
  else
  {
    v4 = 0;
    v5 = 0;
    do
    {
      while (1)
      {
        v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 16)
                                                                                              + 4 * v4);
        if (v7 < 0x80)
          break;
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
        v3 = *(_DWORD *)(a1 + 24);
        v5 += v6;
        if (++v4 >= v3)
          goto LABEL_6;
      }
      ++v5;
      ++v4;
    }
    while (v4 < v3);
LABEL_6:
    v8 = (v3 + v5);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v10 = *(_QWORD **)(a1 + 8);
    if (!v10)
      goto LABEL_7;
  }
  if (*v10 == v10[1])
    goto LABEL_7;
  v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v9, a2)
      + v8;
  *(_DWORD *)(a1 + 32) = v12;
  return v12;
}

uint64_t sub_10031CCEC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 844);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10009BF28((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10031CDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031CDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031CDC8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10031CE10()
{
  return 1;
}

uint64_t sub_10031CE18()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10031B370;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A800, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A798;
}

void sub_10031CE8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031CEA0(uint64_t a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;

  v2 = *(_DWORD *)(a1 + 12);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*(_QWORD *)a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *(_DWORD *)(a1 + 12);
      }
    }
  }
  if (*(_QWORD *)a1)
    operator delete[]();
  return a1;
}

uint64_t sub_10031CF1C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = off_100406918;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 1;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  sub_10031D010(a1, a2);
  return a1;
}

void sub_10031CFB4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (*v5)
    operator delete[]();
  sub_10031CEA0(v4);
  sub_100135344(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10031CFFC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10031D010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::string *v5;
  uint64_t v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  const std::string *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  _BYTE v27[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v27, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 1279);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v26, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v27);
  }
  v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    v6 = 0;
    do
    {
      while (1)
      {
        v10 = *(const std::string **)(*(_QWORD *)(a2 + 16) + 8 * v6);
        v11 = *(_DWORD *)(a1 + 28);
        v12 = *(int *)(a1 + 24);
        if ((int)v12 >= v11)
          break;
        v13 = *(_QWORD *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v12 + 1;
        v5 = std::string::operator=(*(std::string **)(v13 + 8 * v12), v10);
        if (++v6 >= *(int *)(a2 + 24))
          goto LABEL_11;
      }
      if (v11 == *(_DWORD *)(a1 + 32))
      {
        v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v11 + 1);
        v11 = *(_DWORD *)(a1 + 28);
      }
      *(_DWORD *)(a1 + 28) = v11 + 1;
      v7 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v5);
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(int *)(a1 + 24);
      *(_DWORD *)(a1 + 24) = v9 + 1;
      *(_QWORD *)(v8 + 8 * v9) = v7;
      v5 = std::string::operator=(v7, v10);
      ++v6;
    }
    while (v6 < *(int *)(a2 + 24));
  }
LABEL_11:
  sub_100322DAC((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), a2 + 40);
  v14 = *(_DWORD *)(a2 + 88);
  if (v14)
  {
    v15 = *(_DWORD *)(a1 + 88);
    v16 = *(_DWORD *)(a1 + 92);
    v17 = v15 + v14;
    if (v16 < v17)
    {
      v18 = 2 * v16;
      if (2 * v16 <= v17)
        v18 = v17;
      if (v18 <= 4)
        v18 = 4;
      *(_DWORD *)(a1 + 92) = v18;
      operator new[]();
    }
    memcpy((void *)(*(_QWORD *)(a1 + 80) + 4 * v15), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 88));
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
  }
  v19 = *(_DWORD *)(a2 + 104);
  if ((v19 & 0x3FC) != 0)
  {
    if ((v19 & 4) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 4u;
      v20 = *(_QWORD *)(a1 + 64);
      if (!v20)
        operator new();
      v21 = *(_QWORD *)(a2 + 64);
      if (!v21)
        v21 = *(_QWORD *)(qword_10042EAC8 + 64);
      sub_10009BF28(v20, v21);
      v19 = *(_DWORD *)(a2 + 104);
    }
    if ((v19 & 8) != 0)
    {
      v22 = *(_DWORD *)(a2 + 96);
      *(_DWORD *)(a1 + 104) |= 8u;
      *(_DWORD *)(a1 + 96) = v22;
      v19 = *(_DWORD *)(a2 + 104);
    }
    if ((v19 & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 0x10u;
      v23 = *(_QWORD *)(a1 + 72);
      if (!v23)
        operator new();
      v24 = *(_QWORD *)(a2 + 72);
      if (!v24)
        v24 = *(_QWORD *)(qword_10042EAC8 + 72);
      sub_10031C04C(v23, v24);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10031D344()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10031D36C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10031D394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031D3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031D3C0(uint64_t a1)
{
  sub_10009DAD4(a1);
  operator delete();
}

uint64_t sub_10031D3E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 100) = a2;
  return result;
}

void sub_10031D3EC()
{
  operator new();
}

void sub_10031D45C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10031D484(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v9;
  uint64_t v10;

  v1 = this;
  v2 = *(_DWORD *)(this + 104);
  if ((v2 & 0x3FC) != 0)
  {
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 64);
      if (this)
      {
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 28) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    *(_DWORD *)(v1 + 96) = 1;
    if ((*(_BYTE *)(v1 + 104) & 0x10) != 0)
    {
      this = *(_QWORD *)(v1 + 72);
      if (this)
      {
        if ((*(_WORD *)(this + 76) & 0x3FC) != 0)
          *(_QWORD *)(this + 64) = 0;
        v4 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 40) = 0;
        *(_DWORD *)(this + 68) = 0;
        if (v4)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if (*(int *)(v1 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      while (1)
      {
        v6 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v5);
        if (*(char *)(v6 + 23) < 0)
          break;
        *(_BYTE *)v6 = 0;
        *(_BYTE *)(v6 + 23) = 0;
        if (++v5 >= *(int *)(v1 + 24))
          goto LABEL_17;
      }
      **(_BYTE **)v6 = 0;
      *(_QWORD *)(v6 + 8) = 0;
      ++v5;
    }
    while (v5 < *(int *)(v1 + 24));
  }
LABEL_17:
  *(_DWORD *)(v1 + 24) = 0;
  if (*(int *)(v1 + 48) >= 1)
  {
    v7 = 0;
    do
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v7);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 32))(v8);
      ++v7;
    }
    while (v7 < *(int *)(v1 + 48));
  }
  v10 = *(_QWORD *)(v1 + 8);
  v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v9 + 10) = 0;
  *((_DWORD *)v9 + 20) = 0;
  *((_DWORD *)v9 + 24) = 0;
  if (v10)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
  return this;
}

uint64_t sub_10031D5C0(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;

  v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2);
    while (v6 < *(int *)(v5 + 24));
  }
  if ((*(_BYTE *)(v5 + 104) & 0x10) != 0)
  {
    v7 = *(_QWORD *)(v5 + 72);
    if (!v7)
      v7 = *(_QWORD *)(qword_10042EAC8 + 72);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 88) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(*(_QWORD *)(v5 + 80) + 4 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 88));
  }
  v10 = *(_DWORD *)(v5 + 104);
  if ((v10 & 4) != 0)
  {
    v14 = *(_QWORD *)(v5 + 64);
    if (v14)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v14, a2, a4);
      if ((*(_DWORD *)(v5 + 104) & 8) != 0)
        goto LABEL_22;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(qword_10042EAC8 + 64), a2, a4);
      if ((*(_DWORD *)(v5 + 104) & 8) != 0)
        goto LABEL_22;
    }
LABEL_16:
    v13 = *(_QWORD **)(v5 + 8);
    v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v11 = v13;
    if (!v13)
      return this;
    goto LABEL_23;
  }
  if ((v10 & 8) == 0)
    goto LABEL_16;
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 96), (int)a2, a4);
  v15 = *(_QWORD **)(v5 + 8);
  v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v11 = v15;
  if (!v15)
    return this;
LABEL_23:
  if (*v11 != v11[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10031D740(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t i;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  const void *v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  unsigned int *v13;
  unsigned int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  unsigned int *v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  uint64_t v23;
  unsigned int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  uint64_t v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  _QWORD *v28;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v29;
  _QWORD *v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  char *v32;
  _QWORD *v33;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;

  if (*((int *)this + 6) >= 1)
  {
    for (i = 0; i < *((int *)this + 6); ++i)
    {
      v11 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * i);
      *(_BYTE *)a2 = 10;
      if (*(char *)(v11 + 23) < 0)
      {
        v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
        if (v12 <= 0x7F)
        {
LABEL_15:
          *((_BYTE *)a2 + 1) = (_BYTE)v12;
          v7 = (_DWORD)a2 + 2;
          goto LABEL_4;
        }
      }
      else
      {
        v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
        if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu)
          goto LABEL_15;
      }
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
LABEL_4:
      v8 = *(char *)(v11 + 23);
      if (v8 >= 0)
        v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
      else
        v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
      if (v8 >= 0)
        v10 = (const void *)*(unsigned __int8 *)(v11 + 23);
      else
        v10 = (const void *)*(unsigned int *)(v11 + 8);
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
    }
  }
  if ((*((_BYTE *)this + 104) & 0x10) != 0)
  {
    v13 = (unsigned int *)*((_QWORD *)this + 9);
    if (v13)
    {
      *(_BYTE *)a2 = 18;
      v14 = (_DWORD)a2 + 1;
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[18];
      if (v15 <= 0x7F)
      {
LABEL_19:
        *((_BYTE *)a2 + 1) = (_BYTE)v15;
        v16 = (char *)a2 + 2;
LABEL_22:
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10031C4B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v16, a3);
        goto LABEL_23;
      }
    }
    else
    {
      v13 = *(unsigned int **)(qword_10042EAC8 + 72);
      *(_BYTE *)a2 = 18;
      v14 = (_DWORD)a2 + 1;
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[18];
      if (v15 <= 0x7F)
        goto LABEL_19;
    }
    v16 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v14, a3);
    goto LABEL_22;
  }
LABEL_23:
  if (*((int *)this + 12) >= 1)
  {
    v17 = 0;
    do
    {
      v19 = *(unsigned int **)(*((_QWORD *)this + 5) + 8 * v17);
      *(_BYTE *)a2 = 26;
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[18];
      if (v20 > 0x7F)
      {
        v18 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v20;
        v18 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10031C4B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, v18, a3);
      ++v17;
    }
    while (v17 < *((int *)this + 12));
  }
  if (*((int *)this + 22) >= 1)
  {
    v21 = 0;
    do
    {
      while (1)
      {
        v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 10)
                                                                                               + 4 * v21);
        *(_BYTE *)a2 = 32;
        if (v22 <= 0x7F)
          break;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)a2 + 1, a3);
        if (++v21 >= *((int *)this + 22))
          goto LABEL_34;
      }
      *((_BYTE *)a2 + 1) = (_BYTE)v22;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      ++v21;
    }
    while (v21 < *((int *)this + 22));
  }
LABEL_34:
  if ((*((_BYTE *)this + 104) & 4) != 0)
  {
    v23 = *((_QWORD *)this + 8);
    if (v23)
    {
      *(_BYTE *)a2 = 42;
      v24 = (_DWORD)a2 + 1;
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 32);
      if (v25 <= 0x7F)
        goto LABEL_37;
    }
    else
    {
      v23 = *(_QWORD *)(qword_10042EAC8 + 64);
      *(_BYTE *)a2 = 42;
      v24 = (_DWORD)a2 + 1;
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 32);
      if (v25 <= 0x7F)
      {
LABEL_37:
        *((_BYTE *)a2 + 1) = (_BYTE)v25;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (*(int *)(v23 + 24) < 1)
        {
LABEL_45:
          v30 = *(_QWORD **)(v23 + 8);
          v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v23 + 8);
          v28 = v30;
          if (v30)
          {
            if (*v28 != v28[1])
              a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v29, a2, a3);
          }
          goto LABEL_48;
        }
LABEL_41:
        v26 = 0;
        do
        {
          while (1)
          {
            v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(v23 + 16) + 4 * v26);
            *(_BYTE *)a2 = 8;
            if (v27 <= 0x7F)
              break;
            a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)a2 + 1, a3);
            if (++v26 >= *(int *)(v23 + 24))
              goto LABEL_45;
          }
          *((_BYTE *)a2 + 1) = (_BYTE)v27;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
          ++v26;
        }
        while (v26 < *(int *)(v23 + 24));
        goto LABEL_45;
      }
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, v24, a3);
    if (*(int *)(v23 + 24) < 1)
      goto LABEL_45;
    goto LABEL_41;
  }
LABEL_48:
  if ((*((_BYTE *)this + 104) & 8) == 0)
  {
LABEL_52:
    v35 = (_QWORD *)*((_QWORD *)this + 1);
    v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v33 = v35;
    if (!v35)
      return a2;
    goto LABEL_57;
  }
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 24);
  *(_BYTE *)a2 = 48;
  v32 = (char *)a2 + 1;
  if ((v31 & 0x80000000) == 0)
  {
    if (v31 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, v32, a3);
      v37 = (_QWORD *)*((_QWORD *)this + 1);
      v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      v33 = v37;
      if (!v37)
        return a2;
      goto LABEL_57;
    }
    *((_BYTE *)a2 + 1) = (_BYTE)v31;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    goto LABEL_52;
  }
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v31, (unint64_t)v32, a3);
  v36 = (_QWORD *)*((_QWORD *)this + 1);
  v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v33 = v36;
  if (!v36)
    return a2;
LABEL_57:
  if (*v33 != v33[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v34, a2, a3);
  return a2;
}

uint64_t sub_10031DAA0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  unint64_t v13;
  _QWORD *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  _QWORD *v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  uint64_t i;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  _QWORD *v49;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  uint64_t v56;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v57;
  _QWORD *v58;

  v3 = *(_DWORD *)(a1 + 104);
  if ((v3 & 0x3FC) == 0)
  {
    v5 = *(_DWORD *)(a1 + 24);
    v6 = v5;
    if (v5 < 1)
      goto LABEL_61;
    goto LABEL_51;
  }
  if ((v3 & 4) == 0)
  {
    v4 = 0;
    if ((v3 & 8) == 0)
      goto LABEL_29;
    goto LABEL_23;
  }
  v7 = *(_QWORD *)(a1 + 64);
  if (v7)
  {
    v8 = *(_DWORD *)(v7 + 24);
    if (v8 >= 1)
      goto LABEL_9;
LABEL_15:
    v10 = 0;
    goto LABEL_16;
  }
  v7 = *(_QWORD *)(qword_10042EAC8 + 64);
  v8 = *(_DWORD *)(v7 + 24);
  if (v8 < 1)
    goto LABEL_15;
LABEL_9:
  v9 = 0;
  v10 = 0;
  do
  {
    while (1)
    {
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(v7 + 16)
                                                                                             + 4 * v9);
      if (v12 < 0x80)
        break;
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      v8 = *(_DWORD *)(v7 + 24);
      v10 += v11;
      if (++v9 >= v8)
        goto LABEL_16;
    }
    ++v10;
    ++v9;
  }
  while (v9 < v8);
LABEL_16:
  v13 = (v8 + v10);
  v14 = *(_QWORD **)(v7 + 8);
  if (v14 && *v14 != v14[1])
    v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8), a2)+ v13;
  *(_DWORD *)(v7 + 32) = v13;
  if (v13 >= 0x80)
  {
    v4 = v13
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13, a2)+ 1;
    v3 = *(_DWORD *)(a1 + 104);
    if ((v3 & 8) == 0)
      goto LABEL_29;
  }
  else
  {
    v4 = v13 + 2;
    v3 = *(_DWORD *)(a1 + 104);
    if ((v3 & 8) == 0)
      goto LABEL_29;
  }
LABEL_23:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if ((v15 & 0x80000000) != 0)
  {
    v16 = 10;
  }
  else if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    v3 = *(_DWORD *)(a1 + 104);
  }
  else
  {
    v16 = 1;
  }
  v4 += v16 + 1;
LABEL_29:
  if ((v3 & 0x10) == 0)
  {
    v5 = *(_DWORD *)(a1 + 24);
    v6 = v5 + v4;
    if (v5 < 1)
      goto LABEL_61;
    goto LABEL_51;
  }
  v17 = *(_QWORD *)(a1 + 72);
  if (!v17)
    v17 = *(_QWORD *)(qword_10042EAC8 + 72);
  v18 = (*(unsigned __int8 *)(v17 + 76) << 29 >> 31) & 9;
  v19 = *(_DWORD *)(v17 + 24);
  v20 = 8 * v19;
  if (v19 >= 1)
  {
    if (v20 >= 0x80)
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v19), a2)+ 1;
    else
      v21 = 2;
    v18 += v21;
  }
  *(_DWORD *)(v17 + 32) = v20;
  v22 = v18 + v20;
  v23 = *(_DWORD *)(v17 + 48);
  v24 = 8 * v23;
  if (v23 >= 1)
  {
    if (v24 >= 0x80)
      v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v23), a2)+ 1;
    else
      v25 = 2;
    v22 += v25;
  }
  v26 = *(_QWORD **)(v17 + 8);
  *(_DWORD *)(v17 + 56) = v24;
  v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v22 + v24);
  if (v26 && *v26 != v26[1])
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v17 + 8), a2)+ v27);
  *(_DWORD *)(v17 + 72) = (_DWORD)v27;
  if (v27 >= 0x80)
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
  else
    v28 = 1;
  v5 = *(_DWORD *)(a1 + 24);
  v6 = v5 + v4 + (_DWORD)v27 + v28 + 1;
  if (v5 >= 1)
  {
LABEL_51:
    for (i = 0; i < v5; ++i)
    {
      v34 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * i);
      v31 = *(unsigned __int8 *)(v34 + 23);
      v33 = v31;
      v32 = *(_QWORD *)(v34 + 8);
      if ((v31 & 0x80u) == 0)
        v35 = *(unsigned __int8 *)(v34 + 23);
      else
        v35 = v32;
      if (v35 >= 0x80)
      {
        v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35, a2);
        v31 = *(unsigned __int8 *)(v34 + 23);
        v32 = *(_QWORD *)(v34 + 8);
        v5 = *(_DWORD *)(a1 + 24);
        v33 = *(_BYTE *)(v34 + 23);
      }
      else
      {
        v30 = 1;
      }
      if (v33 < 0)
        v31 = v32;
      v6 += v30 + v31;
    }
  }
LABEL_61:
  v36 = *(_DWORD *)(a1 + 48);
  v37 = v36 + v6;
  if (v36 >= 1)
  {
    v38 = 0;
    do
    {
      v40 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8 * v38);
      v41 = (*(unsigned __int8 *)(v40 + 76) << 29 >> 31) & 9;
      v42 = *(_DWORD *)(v40 + 24);
      v43 = 8 * v42;
      if (v42 >= 1)
      {
        if (v43 >= 0x80)
          v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v42), a2)+ 1;
        else
          v44 = 2;
        v41 += v44;
      }
      *(_DWORD *)(v40 + 32) = v43;
      v45 = v41 + v43;
      v46 = *(_DWORD *)(v40 + 48);
      v47 = 8 * v46;
      if (v46 >= 1)
      {
        if (v47 >= 0x80)
          v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v46), a2)+ 1;
        else
          v48 = 2;
        v45 += v48;
      }
      v49 = *(_QWORD **)(v40 + 8);
      *(_DWORD *)(v40 + 56) = v47;
      v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v45 + v47);
      if (v49 && *v49 != v49[1])
        v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v40 + 8), a2)+ v50);
      *(_DWORD *)(v40 + 72) = (_DWORD)v50;
      if (v50 >= 0x80)
        v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50, a2);
      else
        v39 = 1;
      v37 += (_DWORD)v50 + v39;
      ++v38;
    }
    while (v38 < *(int *)(a1 + 48));
  }
  v51 = *(_DWORD *)(a1 + 88);
  if (v51 < 1)
  {
    v56 = (v37 + v51);
    v57 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v58 = *(_QWORD **)(a1 + 8);
    if (!v58)
      goto LABEL_90;
    goto LABEL_88;
  }
  v52 = 0;
  v53 = 0;
  do
  {
    while (1)
    {
      v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 80)
                                                                                             + 4 * v52);
      if (v55 < 0x80)
        break;
      v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55, a2);
      v51 = *(_DWORD *)(a1 + 88);
      v53 += v54;
      if (++v52 >= v51)
        goto LABEL_85;
    }
    ++v53;
    ++v52;
  }
  while (v52 < v51);
LABEL_85:
  v56 = (v53 + v37 + v51);
  v57 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v58 = *(_QWORD **)(a1 + 8);
  if (v58)
  {
LABEL_88:
    if (*v58 != v58[1])
      v56 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v57, a2)+ v56;
  }
LABEL_90:
  *(_DWORD *)(a1 + 100) = v56;
  return v56;
}

uint64_t sub_10031DF14(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 1267);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10031D010((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10031DFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031DFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031DFF0(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10031E038(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return sub_10031D010(v3, a2);
  }
  return result;
}

uint64_t sub_10031E078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (*(int *)(a1 + 48) < 1)
  {
LABEL_5:
    if ((*(_BYTE *)(a1 + 104) & 0x10) != 0)
    {
      v4 = *(_QWORD *)(a1 + 72);
      if (v4)
      {
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(qword_10042EAC8 + 72) + 40))(*(_QWORD *)(qword_10042EAC8 + 72));
        if (!(_DWORD)result)
          return result;
      }
    }
    return 1;
  }
  v2 = 0;
  while (1)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8 * v2);
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3) & 1) == 0)
      return 0;
    if (++v2 >= *(int *)(a1 + 48))
      goto LABEL_5;
  }
}

uint64_t sub_10031E128()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10031B370;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A800, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A7A8;
}

void sub_10031E19C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031E1B0(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  char v23;
  _BYTE v24[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v24, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 2022);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v23, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
    sub_100322EE0((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
    v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x1FE) == 0)
      goto LABEL_17;
  }
  else
  {
    sub_100322EE0((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
    v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x1FE) == 0)
      goto LABEL_17;
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 112) |= 2u;
    v6 = *(_QWORD *)(a1 + 40);
    if (!v6)
      operator new();
    v7 = *(_QWORD *)(a2 + 40);
    if (!v7)
      v7 = *(_QWORD *)(qword_10042EAD0 + 40);
    sub_1000A74E0(v6, v7);
    v4 = *(_DWORD *)(a2 + 112);
  }
  if ((v4 & 4) != 0)
  {
    v18 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 112) |= 4u;
    *(_QWORD *)(a1 + 48) = v18;
    v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 8) == 0)
    {
LABEL_12:
      if ((v4 & 0x10) == 0)
        goto LABEL_13;
      goto LABEL_39;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_12;
  }
  v19 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 112) |= 8u;
  *(_DWORD *)(a1 + 56) = v19;
  v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x10) == 0)
  {
LABEL_13:
    if ((v4 & 0x20) == 0)
      goto LABEL_14;
    goto LABEL_40;
  }
LABEL_39:
  v20 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 112) |= 0x10u;
  *(_DWORD *)(a1 + 60) = v20;
  v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x20) == 0)
  {
LABEL_14:
    if ((v4 & 0x40) == 0)
      goto LABEL_15;
    goto LABEL_41;
  }
LABEL_40:
  v21 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 112) |= 0x20u;
  *(_DWORD *)(a1 + 64) = v21;
  v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x40) == 0)
  {
LABEL_15:
    if ((v4 & 0x80) == 0)
      goto LABEL_17;
    goto LABEL_16;
  }
LABEL_41:
  v22 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 112) |= 0x40u;
  *(_DWORD *)(a1 + 68) = v22;
  v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x80) != 0)
  {
LABEL_16:
    v8 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 112) |= 0x80u;
    *(_DWORD *)(a1 + 72) = v8;
    v4 = *(_DWORD *)(a2 + 112);
  }
LABEL_17:
  if ((v4 & 0xFF00) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v4 & 0x100) != 0)
  {
    v9 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 112) |= 0x100u;
    *(_DWORD *)(a1 + 76) = v9;
    v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x200) == 0)
    {
LABEL_20:
      if ((v4 & 0x400) == 0)
        goto LABEL_21;
      goto LABEL_28;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  v10 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 112) |= 0x200u;
  *(_DWORD *)(a1 + 80) = v10;
  v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x400) == 0)
  {
LABEL_21:
    if ((v4 & 0x800) == 0)
      goto LABEL_22;
    goto LABEL_29;
  }
LABEL_28:
  v11 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 112) |= 0x400u;
  *(_DWORD *)(a1 + 84) = v11;
  v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x800) == 0)
  {
LABEL_22:
    if ((v4 & 0x1000) == 0)
      goto LABEL_23;
    goto LABEL_30;
  }
LABEL_29:
  v12 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 112) |= 0x800u;
  *(_DWORD *)(a1 + 88) = v12;
  v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x1000) == 0)
  {
LABEL_23:
    if ((v4 & 0x2000) == 0)
      goto LABEL_24;
LABEL_31:
    v14 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 112) |= 0x2000u;
    *(_DWORD *)(a1 + 104) = v14;
    if ((*(_DWORD *)(a2 + 112) & 0x4000) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_32;
  }
LABEL_30:
  v13 = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 112) |= 0x1000u;
  *(_DWORD *)(a1 + 92) = v13;
  v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x2000) != 0)
    goto LABEL_31;
LABEL_24:
  if ((v4 & 0x4000) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_32:
  *(_DWORD *)(a1 + 112) |= 0x4000u;
  v15 = *(_DWORD **)(a1 + 96);
  if (!v15)
    operator new();
  v16 = *(_QWORD *)(a2 + 96);
  if (!v16)
    v16 = *(_QWORD *)(qword_10042EAD0 + 96);
  sub_1001AD8B4(v15, v16);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10031E4BC()
{
  operator delete();
}

void sub_10031E4E0()
{
  operator delete();
}

void sub_10031E504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031E518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031E52C(uint64_t a1)
{
  sub_10009DD78(a1);
  operator delete();
}

uint64_t sub_10031E550(uint64_t result, int a2)
{
  *(_DWORD *)(result + 108) = a2;
  return result;
}

void sub_10031E558()
{
  operator new();
}

void sub_10031E5E8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10031E610(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 2) != 0)
  {
    v11 = *(_QWORD *)(v5 + 40);
    if (v11)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v11, a2, a4);
      v7 = *(_DWORD *)(v5 + 112);
      if ((v7 & 4) != 0)
        goto LABEL_24;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_QWORD *)(qword_10042EAD0 + 40), a2, a4);
      v7 = *(_DWORD *)(v5 + 112);
      if ((v7 & 4) != 0)
        goto LABEL_24;
    }
LABEL_6:
    if ((v7 & 8) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
  if ((v7 & 4) == 0)
    goto LABEL_6;
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(double *)(v5 + 48), a3);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x20) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_DWORD *)(v5 + 56), a2, a4);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x20) == 0)
  {
LABEL_8:
    if ((v7 & 0x200) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 64), a2, a4);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x200) == 0)
  {
LABEL_9:
    if ((v7 & 0x800) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(_DWORD *)(v5 + 80), a2, a4);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x800) == 0)
  {
LABEL_10:
    if ((v7 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(_DWORD *)(v5 + 88), a2, a4);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x10) == 0)
  {
LABEL_11:
    if ((v7 & 0x40) == 0)
      goto LABEL_12;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(_DWORD *)(v5 + 60), a2, a4);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x40) == 0)
  {
LABEL_12:
    if ((v7 & 0x400) == 0)
      goto LABEL_13;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(_DWORD *)(v5 + 68), a2, a4);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x400) == 0)
  {
LABEL_13:
    if ((v7 & 0x80) == 0)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(_DWORD *)(v5 + 84), a2, a4);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x80) == 0)
  {
LABEL_14:
    if ((v7 & 0x100) == 0)
      goto LABEL_15;
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(_DWORD *)(v5 + 72), a2, a4);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x100) == 0)
  {
LABEL_15:
    if ((v7 & 0x1000) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(_DWORD *)(v5 + 76), a2, a4);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x1000) == 0)
  {
LABEL_16:
    if ((v7 & 0x2000) == 0)
      goto LABEL_17;
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (int)a2, *(float *)(v5 + 92), a3);
  v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x2000) == 0)
  {
LABEL_17:
    if ((v7 & 0x4000) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, (int)a2, *(float *)(v5 + 104), a3);
  if ((*(_DWORD *)(v5 + 112) & 0x4000) == 0)
  {
LABEL_18:
    v10 = *(_QWORD **)(v5 + 8);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v8 = v10;
    if (!v10)
      return this;
    goto LABEL_40;
  }
LABEL_36:
  v12 = *(_QWORD *)(v5 + 96);
  if (v12)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v12, a2, a4);
    v13 = *(_QWORD **)(v5 + 8);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v8 = v13;
    if (!v13)
      return this;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(_QWORD *)(qword_10042EAD0 + 96), a2, a4);
    v14 = *(_QWORD **)(v5 + 8);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v8 = v14;
    if (!v14)
      return this;
  }
LABEL_40:
  if (*v8 != v8[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10031E878(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  unsigned int *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  _QWORD *v12;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v13;
  _QWORD *v14;
  unsigned int *v15;
  unsigned int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v18;
  unsigned __int8 *v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  unsigned int *v32;
  unsigned int v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  _QWORD *v35;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v36;
  unsigned __int8 *v37;
  _QWORD *v38;

  if (*((int *)this + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v8 = *(unsigned int **)(*((_QWORD *)this + 2) + 8 * v6);
      *(_BYTE *)a2 = 10;
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[25];
      if (v9 > 0x7F)
      {
        v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v9;
        v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = sub_10031D740((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v7, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  v10 = *((_DWORD *)this + 28);
  if ((v10 & 2) != 0)
  {
    v15 = (unsigned int *)*((_QWORD *)this + 5);
    if (v15)
    {
      *(_WORD *)a2 = 386;
      v16 = (_DWORD)a2 + 2;
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[74];
      if (v17 <= 0x7F)
        goto LABEL_25;
    }
    else
    {
      v15 = *(unsigned int **)(qword_10042EAD0 + 40);
      *(_WORD *)a2 = 386;
      v16 = (_DWORD)a2 + 2;
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[74];
      if (v17 <= 0x7F)
      {
LABEL_25:
        *((_BYTE *)a2 + 2) = (_BYTE)v17;
        a2 = sub_1001B9E00((wireless_diagnostics::google::protobuf::internal::WireFormat *)v15, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3), a3);
        v10 = *((_DWORD *)this + 28);
        if ((v10 & 4) != 0)
          goto LABEL_29;
LABEL_9:
        if ((v10 & 8) == 0)
          goto LABEL_10;
LABEL_30:
        v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
        *(_WORD *)a2 = 400;
        if (v21 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)a2 + 2, a3);
          if ((*((_BYTE *)this + 112) & 0x20) != 0)
            goto LABEL_34;
        }
        else
        {
          *((_BYTE *)a2 + 2) = (_BYTE)v21;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          if ((*((_BYTE *)this + 112) & 0x20) != 0)
            goto LABEL_34;
        }
LABEL_11:
        if ((*((_BYTE *)this + 113) & 2) == 0)
          goto LABEL_12;
LABEL_38:
        v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
        *(_WORD *)a2 = 416;
        if (v23 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)a2 + 2, a3);
          if ((*((_BYTE *)this + 113) & 8) != 0)
            goto LABEL_42;
        }
        else
        {
          *((_BYTE *)a2 + 2) = (_BYTE)v23;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          if ((*((_BYTE *)this + 113) & 8) != 0)
            goto LABEL_42;
        }
LABEL_13:
        if ((*((_BYTE *)this + 112) & 0x10) == 0)
          goto LABEL_14;
LABEL_46:
        v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
        *(_WORD *)a2 = 432;
        if (v25 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)a2 + 2, a3);
          if ((*((_BYTE *)this + 112) & 0x40) != 0)
            goto LABEL_50;
        }
        else
        {
          *((_BYTE *)a2 + 2) = (_BYTE)v25;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          if ((*((_BYTE *)this + 112) & 0x40) != 0)
            goto LABEL_50;
        }
LABEL_15:
        if ((*((_BYTE *)this + 113) & 4) == 0)
          goto LABEL_16;
LABEL_54:
        v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
        *(_WORD *)a2 = 448;
        if (v27 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)a2 + 2, a3);
          if ((*((_BYTE *)this + 112) & 0x80) != 0)
            goto LABEL_58;
        }
        else
        {
          *((_BYTE *)a2 + 2) = (_BYTE)v27;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          if ((*((_BYTE *)this + 112) & 0x80) != 0)
            goto LABEL_58;
        }
LABEL_17:
        if ((*((_BYTE *)this + 113) & 1) == 0)
          goto LABEL_18;
LABEL_62:
        v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
        *(_WORD *)a2 = 464;
        if (v29 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)a2 + 2, a3);
          v11 = *((_DWORD *)this + 28);
          if ((v11 & 0x1000) != 0)
            goto LABEL_66;
        }
        else
        {
          *((_BYTE *)a2 + 2) = (_BYTE)v29;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          v11 = *((_DWORD *)this + 28);
          if ((v11 & 0x1000) != 0)
            goto LABEL_66;
        }
LABEL_19:
        if ((v11 & 0x2000) == 0)
          goto LABEL_20;
        goto LABEL_67;
      }
    }
    v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v16, a3);
    a2 = sub_1001B9E00((wireless_diagnostics::google::protobuf::internal::WireFormat *)v15, v18, v19);
    v10 = *((_DWORD *)this + 28);
    if ((v10 & 4) != 0)
      goto LABEL_29;
    goto LABEL_9;
  }
  if ((v10 & 4) == 0)
    goto LABEL_9;
LABEL_29:
  v20 = *((_QWORD *)this + 6);
  *(_WORD *)a2 = 393;
  *(_QWORD *)((char *)a2 + 2) = v20;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 10);
  if ((*((_DWORD *)this + 28) & 8) != 0)
    goto LABEL_30;
LABEL_10:
  if ((*((_BYTE *)this + 112) & 0x20) == 0)
    goto LABEL_11;
LABEL_34:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  *(_WORD *)a2 = 408;
  if (v22 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)a2 + 2, a3);
    if ((*((_BYTE *)this + 113) & 2) != 0)
      goto LABEL_38;
  }
  else
  {
    *((_BYTE *)a2 + 2) = (_BYTE)v22;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if ((*((_BYTE *)this + 113) & 2) != 0)
      goto LABEL_38;
  }
LABEL_12:
  if ((*((_BYTE *)this + 113) & 8) == 0)
    goto LABEL_13;
LABEL_42:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
  *(_WORD *)a2 = 424;
  if (v24 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)a2 + 2, a3);
    if ((*((_BYTE *)this + 112) & 0x10) != 0)
      goto LABEL_46;
  }
  else
  {
    *((_BYTE *)a2 + 2) = (_BYTE)v24;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if ((*((_BYTE *)this + 112) & 0x10) != 0)
      goto LABEL_46;
  }
LABEL_14:
  if ((*((_BYTE *)this + 112) & 0x40) == 0)
    goto LABEL_15;
LABEL_50:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  *(_WORD *)a2 = 440;
  if (v26 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)a2 + 2, a3);
    if ((*((_BYTE *)this + 113) & 4) != 0)
      goto LABEL_54;
  }
  else
  {
    *((_BYTE *)a2 + 2) = (_BYTE)v26;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if ((*((_BYTE *)this + 113) & 4) != 0)
      goto LABEL_54;
  }
LABEL_16:
  if ((*((_BYTE *)this + 112) & 0x80) == 0)
    goto LABEL_17;
LABEL_58:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  *(_WORD *)a2 = 456;
  if (v28 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)a2 + 2, a3);
    if ((*((_BYTE *)this + 113) & 1) != 0)
      goto LABEL_62;
  }
  else
  {
    *((_BYTE *)a2 + 2) = (_BYTE)v28;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if ((*((_BYTE *)this + 113) & 1) != 0)
      goto LABEL_62;
  }
LABEL_18:
  v11 = *((_DWORD *)this + 28);
  if ((v11 & 0x1000) == 0)
    goto LABEL_19;
LABEL_66:
  v30 = *((_DWORD *)this + 23);
  *(_WORD *)a2 = 477;
  *(_DWORD *)((char *)a2 + 2) = v30;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 6);
  v11 = *((_DWORD *)this + 28);
  if ((v11 & 0x2000) == 0)
  {
LABEL_20:
    if ((v11 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_68;
  }
LABEL_67:
  v31 = *((_DWORD *)this + 26);
  *(_WORD *)a2 = 485;
  *(_DWORD *)((char *)a2 + 2) = v31;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 6);
  if ((*((_DWORD *)this + 28) & 0x4000) == 0)
  {
LABEL_21:
    v14 = (_QWORD *)*((_QWORD *)this + 1);
    v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v12 = v14;
    if (!v14)
      return a2;
    goto LABEL_74;
  }
LABEL_68:
  v32 = (unsigned int *)*((_QWORD *)this + 12);
  if (v32)
  {
    *(_WORD *)a2 = 490;
    v33 = (_DWORD)a2 + 2;
    v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32[8];
    if (v34 <= 0x7F)
      goto LABEL_70;
LABEL_73:
    v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, v33, a3);
    a2 = sub_1001ADFB0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v32, v36, v37);
    v38 = (_QWORD *)*((_QWORD *)this + 1);
    v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v12 = v38;
    if (!v38)
      return a2;
    goto LABEL_74;
  }
  v32 = *(unsigned int **)(qword_10042EAD0 + 96);
  *(_WORD *)a2 = 490;
  v33 = (_DWORD)a2 + 2;
  v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32[8];
  if (v34 > 0x7F)
    goto LABEL_73;
LABEL_70:
  *((_BYTE *)a2 + 2) = (_BYTE)v34;
  a2 = sub_1001ADFB0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v32, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3), a3);
  v35 = (_QWORD *)*((_QWORD *)this + 1);
  v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v12 = v35;
  if (!v35)
    return a2;
LABEL_74:
  if (*v12 != v12[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v13, a2, a3);
  return a2;
}

uint64_t sub_10031ED70(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  int v26;
  uint64_t v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;
  _QWORD *v36;

  v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x1FE) == 0)
  {
    v4 = 0;
    if ((v3 & 0xFF00) == 0)
      goto LABEL_78;
    goto LABEL_45;
  }
  if ((v3 & 2) == 0)
  {
    if ((v3 & 4) != 0)
      v4 = 10;
    else
      v4 = 0;
    if ((v3 & 8) == 0)
      goto LABEL_23;
LABEL_19:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      v3 = *(_DWORD *)(a1 + 112);
    }
    else
    {
      v9 = 1;
    }
    v4 += v9 + 2;
    goto LABEL_23;
  }
  v5 = *(_QWORD *)(a1 + 40);
  if (v5)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BB1F8(v5, a2);
    if (v6 < 0x80)
    {
LABEL_12:
      v7 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BB1F8(*(_QWORD *)(qword_10042EAD0 + 40), a2);
    if (v6 < 0x80)
      goto LABEL_12;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
LABEL_15:
  v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 4) != 0)
    v4 = (_DWORD)v6 + v7 + 12;
  else
    v4 = (_DWORD)v6 + v7 + 2;
  if ((v3 & 8) != 0)
    goto LABEL_19;
LABEL_23:
  if ((v3 & 0x10) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      v3 = *(_DWORD *)(a1 + 112);
      v4 += v11 + 2;
      if ((v3 & 0x20) != 0)
        goto LABEL_33;
    }
    else
    {
      v4 += 3;
      if ((v3 & 0x20) != 0)
        goto LABEL_33;
    }
LABEL_25:
    if ((v3 & 0x40) == 0)
      goto LABEL_26;
LABEL_37:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      v3 = *(_DWORD *)(a1 + 112);
      v4 += v15 + 2;
      if ((v3 & 0x80) != 0)
        goto LABEL_41;
    }
    else
    {
      v4 += 3;
      if ((v3 & 0x80) != 0)
        goto LABEL_41;
    }
LABEL_27:
    if ((v3 & 0xFF00) == 0)
      goto LABEL_78;
    goto LABEL_45;
  }
  if ((v3 & 0x20) == 0)
    goto LABEL_25;
LABEL_33:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    v3 = *(_DWORD *)(a1 + 112);
    v4 += v13 + 2;
    if ((v3 & 0x40) != 0)
      goto LABEL_37;
  }
  else
  {
    v4 += 3;
    if ((v3 & 0x40) != 0)
      goto LABEL_37;
  }
LABEL_26:
  if ((v3 & 0x80) == 0)
    goto LABEL_27;
LABEL_41:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    v3 = *(_DWORD *)(a1 + 112);
    v4 += v17 + 2;
    if ((v3 & 0xFF00) == 0)
      goto LABEL_78;
  }
  else
  {
    v4 += 3;
    if ((v3 & 0xFF00) == 0)
      goto LABEL_78;
  }
LABEL_45:
  if ((v3 & 0x100) == 0)
  {
    if ((v3 & 0x200) == 0)
      goto LABEL_47;
LABEL_54:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      v3 = *(_DWORD *)(a1 + 112);
      v4 += v21 + 2;
      if ((v3 & 0x400) != 0)
        goto LABEL_58;
    }
    else
    {
      v4 += 3;
      if ((v3 & 0x400) != 0)
        goto LABEL_58;
    }
LABEL_48:
    if ((v3 & 0x800) == 0)
      goto LABEL_66;
    goto LABEL_62;
  }
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
  if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
    v3 = *(_DWORD *)(a1 + 112);
    v4 += v19 + 2;
    if ((v3 & 0x200) != 0)
      goto LABEL_54;
  }
  else
  {
    v4 += 3;
    if ((v3 & 0x200) != 0)
      goto LABEL_54;
  }
LABEL_47:
  if ((v3 & 0x400) == 0)
    goto LABEL_48;
LABEL_58:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
    v3 = *(_DWORD *)(a1 + 112);
    v4 += v23 + 2;
    if ((v3 & 0x800) == 0)
      goto LABEL_66;
  }
  else
  {
    v4 += 3;
    if ((v3 & 0x800) == 0)
      goto LABEL_66;
  }
LABEL_62:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
  if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2) + 2;
    v3 = *(_DWORD *)(a1 + 112);
  }
  else
  {
    v25 = 3;
  }
  v4 += v25;
LABEL_66:
  v26 = v4 + 6;
  if ((v3 & 0x1000) == 0)
    v26 = v4;
  if ((v3 & 0x2000) != 0)
    v4 = v26 + 6;
  else
    v4 = v26;
  if ((v3 & 0x4000) != 0)
  {
    v27 = *(_QWORD *)(a1 + 96);
    if (v27)
    {
      v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001AE10C(v27, a2);
      if (v28 < 0x80)
      {
LABEL_74:
        v29 = 1;
LABEL_77:
        v4 += (_DWORD)v28 + v29 + 2;
        goto LABEL_78;
      }
    }
    else
    {
      v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001AE10C(*(_QWORD *)(qword_10042EAD0 + 96), a2);
      if (v28 < 0x80)
        goto LABEL_74;
    }
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
    goto LABEL_77;
  }
LABEL_78:
  v30 = *(_DWORD *)(a1 + 24);
  v31 = (v30 + v4);
  if (v30 >= 1)
  {
    v32 = 0;
    do
    {
      v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10031DAA0(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v32), a2);
      v35 = (int)v34;
      if (v34 >= 0x80)
        v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2);
      else
        v33 = 1;
      v31 = (v35 + v31 + v33);
      ++v32;
    }
    while (v32 < *(int *)(a1 + 24));
  }
  v36 = *(_QWORD **)(a1 + 8);
  if (v36 && *v36 != v36[1])
    v31 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v31;
  *(_DWORD *)(a1 + 108) = v31;
  return v31;
}

uint64_t sub_10031F0F8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 2010);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10031E1B0((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10031F1AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031F1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031F1D4(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10031F21C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10031B370;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A800, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A7B8;
}

void sub_10031F290(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031F2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  const std::string *v6;
  std::string *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  const std::string *v13;
  std::string *v14;
  const std::string *v15;
  std::string *v16;
  int v17;
  int v19;
  const std::string *v20;
  std::string *v21;
  int v22;
  char v23;
  _BYTE v24[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v24, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 2752);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v23, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  v5 = *(_DWORD *)(a2 + 88);
  if (!(_BYTE)v5)
    goto LABEL_12;
  if ((v5 & 1) != 0)
  {
    v6 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 88) |= 1u;
    v7 = *(std::string **)(a1 + 16);
    if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v7, v6);
    v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 88) |= 2u;
  *(_QWORD *)(a1 + 24) = v8;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  v9 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 88) |= 4u;
  *(_DWORD *)(a1 + 32) = v9;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  v10 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 88) |= 8u;
  *(_DWORD *)(a1 + 36) = v10;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  v11 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(_DWORD *)(a1 + 40) = v11;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  v12 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 88) |= 0x20u;
  *(_DWORD *)(a1 + 44) = v12;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x40) != 0)
  {
LABEL_22:
    v13 = *(const std::string **)(a2 + 48);
    *(_DWORD *)(a1 + 88) |= 0x40u;
    v14 = *(std::string **)(a1 + 48);
    if (v14 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v14, v13);
    v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 0x80) != 0)
      goto LABEL_25;
LABEL_12:
    if ((v5 & 0xFF00) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_28;
  }
LABEL_11:
  if ((v5 & 0x80) == 0)
    goto LABEL_12;
LABEL_25:
  v15 = *(const std::string **)(a2 + 56);
  *(_DWORD *)(a1 + 88) |= 0x80u;
  v16 = *(std::string **)(a1 + 56);
  if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v16, v15);
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0xFF00) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_28:
  if ((v5 & 0x100) != 0)
  {
    v19 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 88) |= 0x100u;
    *(_DWORD *)(a1 + 72) = v19;
    v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 0x200) == 0)
    {
LABEL_30:
      if ((v5 & 0x400) == 0)
        goto LABEL_31;
LABEL_38:
      v22 = *(_DWORD *)(a2 + 76);
      *(_DWORD *)(a1 + 88) |= 0x400u;
      *(_DWORD *)(a1 + 76) = v22;
      if ((*(_DWORD *)(a2 + 88) & 0x800) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_32;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_30;
  }
  v20 = *(const std::string **)(a2 + 64);
  *(_DWORD *)(a1 + 88) |= 0x200u;
  v21 = *(std::string **)(a1 + 64);
  if (v21 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v21, v20);
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x400) != 0)
    goto LABEL_38;
LABEL_31:
  if ((v5 & 0x800) != 0)
  {
LABEL_32:
    v17 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 88) |= 0x800u;
    *(_DWORD *)(a1 + 80) = v17;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10031F59C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031F5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10031F5C4(_QWORD *result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;

  v1 = result[2];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    operator delete();
  }
  v3 = result[6];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    operator delete();
  }
  v5 = result[7];
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    operator delete();
  }
  v7 = result[8];
  if ((_UNKNOWN *)v7 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    operator delete();
  }
  return result;
}

void sub_10031F70C(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_100406A78;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10031F5C4(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10031F748(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_100406A78;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10031F5C4(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10031F798(uint64_t result, int a2)
{
  *(_DWORD *)(result + 84) = a2;
  return result;
}

void sub_10031F7A0()
{
  operator new();
}

void sub_10031F810()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10031F838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v7;

  if (!*(_BYTE *)(a1 + 88))
    goto LABEL_17;
  if ((*(_BYTE *)(a1 + 88) & 1) == 0
    || (v1 = *(_QWORD *)(a1 + 16), (_UNKNOWN *)v1 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 40) = 0;
    if ((*(_BYTE *)(a1 + 88) & 0x40) == 0)
      goto LABEL_13;
    goto LABEL_7;
  }
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v1 = 0;
    *(_BYTE *)(v1 + 23) = 0;
    goto LABEL_6;
  }
  **(_BYTE **)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  if ((*(_BYTE *)(a1 + 88) & 0x40) == 0)
    goto LABEL_13;
LABEL_7:
  v2 = *(_QWORD *)(a1 + 48);
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
LABEL_13:
  if ((*(_BYTE *)(a1 + 88) & 0x80) != 0)
  {
    v3 = *(_QWORD *)(a1 + 56);
    if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
        v4 = *(_DWORD *)(a1 + 88);
        if ((v4 & 0xFF00) == 0)
          goto LABEL_26;
        goto LABEL_18;
      }
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
    }
  }
LABEL_17:
  v4 = *(_DWORD *)(a1 + 88);
  if ((v4 & 0xFF00) == 0)
    goto LABEL_26;
LABEL_18:
  *(_DWORD *)(a1 + 72) = 0;
  if ((v4 & 0x200) != 0)
  {
    v5 = *(_QWORD *)(a1 + 64);
    if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v5 + 23) < 0)
      {
        **(_BYTE **)v5 = 0;
        *(_QWORD *)(v5 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v5 = 0;
        *(_BYTE *)(v5 + 23) = 0;
      }
    }
  }
  *(_QWORD *)(a1 + 76) = &_mh_execute_header;
LABEL_26:
  v7 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 20) = 0;
  if (v7)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10031F96C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  void *v15;
  uint64_t result;
  _BYTE *v17;
  unint64_t v18;
  _BYTE *v19;
  char *v20;
  _BYTE *v21;
  char *v22;
  char *v23;
  char *v24;
  void *v25;
  _BYTE *v26;
  void *v27;
  unint64_t v28;
  _BYTE *v29;
  char *v30;
  _BYTE *v31;
  int v32;
  void *v33;
  unint64_t v34;
  _BYTE *v35;
  char *v36;
  _BYTE *v37;
  char *v38;
  unint64_t v39;
  signed int v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  int v44;
  unint64_t v45;
  unsigned int *v46;
  unint64_t v47;
  unsigned int v48;

  v46 = (unsigned int *)(a1 + 32);
  v6 = (unsigned int *)(a1 + 36);
  v7 = (unsigned int *)(a1 + 40);
  v8 = (unsigned int *)(a1 + 44);
  v9 = (unsigned int *)(a1 + 72);
  v10 = (unsigned int *)(a1 + 76);
  v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if (v14 != 2)
          goto LABEL_67;
        *(_DWORD *)(a1 + 88) |= 1u;
        v15 = *(void **)(a1 + 16);
        if (v15 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v15);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 != 17)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
LABEL_17:
        v47 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v47) & 1) != 0)
        {
          *(_QWORD *)(a1 + 24) = v47;
          *(_DWORD *)(a1 + 88) |= 2u;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v18 = *((_QWORD *)this + 2);
          if ((unint64_t)v19 < v18 && *v19 == 24)
          {
            v20 = v19 + 1;
            *((_QWORD *)this + 1) = v20;
LABEL_23:
            if ((unint64_t)v20 >= v18 || *v20 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
              if (!(_DWORD)result)
                return result;
              v21 = (_BYTE *)*((_QWORD *)this + 1);
              v18 = *((_QWORD *)this + 2);
              *(_DWORD *)(a1 + 88) |= 4u;
              if ((unint64_t)v21 < v18)
                goto LABEL_93;
            }
            else
            {
              *v46 = *v20;
              v21 = v20 + 1;
              *((_QWORD *)this + 1) = v21;
              *(_DWORD *)(a1 + 88) |= 4u;
              if ((unint64_t)v21 < v18)
              {
LABEL_93:
                if (*v21 == 32)
                {
                  v22 = v21 + 1;
                  *((_QWORD *)this + 1) = v22;
LABEL_95:
                  if ((unint64_t)v22 >= v18 || *v22 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                    if (!(_DWORD)result)
                      return result;
                    v41 = (_BYTE *)*((_QWORD *)this + 1);
                    v18 = *((_QWORD *)this + 2);
                    *(_DWORD *)(a1 + 88) |= 8u;
                    if ((unint64_t)v41 < v18)
                      goto LABEL_101;
                  }
                  else
                  {
                    *v6 = *v22;
                    v41 = v22 + 1;
                    *((_QWORD *)this + 1) = v41;
                    *(_DWORD *)(a1 + 88) |= 8u;
                    if ((unint64_t)v41 < v18)
                    {
LABEL_101:
                      if (*v41 == 40)
                      {
                        v23 = v41 + 1;
                        *((_QWORD *)this + 1) = v23;
LABEL_103:
                        if ((unint64_t)v23 >= v18 || *v23 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                          if (!(_DWORD)result)
                            return result;
                          v42 = (_BYTE *)*((_QWORD *)this + 1);
                          v18 = *((_QWORD *)this + 2);
                          *(_DWORD *)(a1 + 88) |= 0x10u;
                          if ((unint64_t)v42 < v18)
                            goto LABEL_109;
                        }
                        else
                        {
                          *v7 = *v23;
                          v42 = v23 + 1;
                          *((_QWORD *)this + 1) = v42;
                          *(_DWORD *)(a1 + 88) |= 0x10u;
                          if ((unint64_t)v42 < v18)
                          {
LABEL_109:
                            if (*v42 == 48)
                            {
                              v24 = v42 + 1;
                              *((_QWORD *)this + 1) = v24;
LABEL_111:
                              if ((unint64_t)v24 >= v18 || *v24 < 0)
                              {
                                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                                if (!(_DWORD)result)
                                  return result;
                                v43 = (_BYTE *)*((_QWORD *)this + 1);
                                v45 = *((_QWORD *)this + 2);
                                v44 = *(_DWORD *)(a1 + 88) | 0x20;
                                *(_DWORD *)(a1 + 88) = v44;
                                if ((unint64_t)v43 < v45)
                                {
LABEL_117:
                                  if (*v43 == 58)
                                  {
                                    *((_QWORD *)this + 1) = v43 + 1;
                                    *(_DWORD *)(a1 + 88) = v44 | 0x40;
                                    v25 = *(void **)(a1 + 48);
                                    if (v25 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
LABEL_35:
                                      operator new();
LABEL_36:
                                    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v25);
                                    if (!(_DWORD)result)
                                      return result;
                                    v26 = (_BYTE *)*((_QWORD *)this + 1);
                                    if ((unint64_t)v26 < *((_QWORD *)this + 2) && *v26 == 66)
                                    {
                                      *((_QWORD *)this + 1) = v26 + 1;
LABEL_41:
                                      *(_DWORD *)(a1 + 88) |= 0x80u;
                                      v27 = *(void **)(a1 + 56);
                                      if (v27 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
                                        operator new();
                                      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v27);
                                      if (!(_DWORD)result)
                                        return result;
                                      v29 = (_BYTE *)*((_QWORD *)this + 1);
                                      v28 = *((_QWORD *)this + 2);
                                      if ((unint64_t)v29 < v28 && *v29 == 72)
                                      {
                                        v30 = v29 + 1;
                                        *((_QWORD *)this + 1) = v30;
                                        if ((unint64_t)v30 >= v28)
                                          goto LABEL_71;
LABEL_50:
                                        if (*v30 < 0)
                                        {
LABEL_71:
                                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                                          if (!(_DWORD)result)
                                            return result;
                                          v31 = (_BYTE *)*((_QWORD *)this + 1);
                                          v39 = *((_QWORD *)this + 2);
                                          v32 = *(_DWORD *)(a1 + 88) | 0x100;
                                          *(_DWORD *)(a1 + 88) = v32;
                                          if ((unint64_t)v31 < v39)
                                          {
LABEL_73:
                                            if (*v31 == 82)
                                            {
                                              *((_QWORD *)this + 1) = v31 + 1;
                                              *(_DWORD *)(a1 + 88) = v32 | 0x200;
                                              v33 = *(void **)(a1 + 64);
                                              if (v33 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
LABEL_55:
                                                operator new();
LABEL_56:
                                              result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v33);
                                              if (!(_DWORD)result)
                                                return result;
                                              v35 = (_BYTE *)*((_QWORD *)this + 1);
                                              v34 = *((_QWORD *)this + 2);
                                              if ((unint64_t)v35 < v34 && *v35 == 88)
                                              {
                                                v36 = v35 + 1;
                                                *((_QWORD *)this + 1) = v36;
                                                if ((unint64_t)v36 >= v34)
                                                  goto LABEL_76;
LABEL_63:
                                                if (*v36 < 0)
                                                {
LABEL_76:
                                                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
                                                  if (!(_DWORD)result)
                                                    return result;
                                                  v37 = (_BYTE *)*((_QWORD *)this + 1);
                                                  v34 = *((_QWORD *)this + 2);
                                                  *(_DWORD *)(a1 + 88) |= 0x400u;
                                                  if ((unint64_t)v37 < v34)
                                                    goto LABEL_78;
                                                }
                                                else
                                                {
                                                  *v10 = *v36;
                                                  v37 = v36 + 1;
                                                  *((_QWORD *)this + 1) = v37;
                                                  *(_DWORD *)(a1 + 88) |= 0x400u;
                                                  if ((unint64_t)v37 < v34)
                                                  {
LABEL_78:
                                                    if (*v37 == 96)
                                                    {
                                                      v38 = v37 + 1;
                                                      *((_QWORD *)this + 1) = v38;
LABEL_80:
                                                      v48 = 0;
                                                      if ((unint64_t)v38 >= v34 || *v38 < 0)
                                                      {
                                                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
                                                        if (!(_DWORD)result)
                                                          return result;
                                                        v40 = v48;
                                                        if (v48 - 1 <= 1)
                                                          goto LABEL_83;
LABEL_87:
                                                        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v11, 12, v40);
                                                        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2))
                                                          goto LABEL_88;
                                                      }
                                                      else
                                                      {
                                                        v40 = *v38;
                                                        *((_QWORD *)this + 1) = v38 + 1;
                                                        if ((v40 - 1) > 1)
                                                          goto LABEL_87;
LABEL_83:
                                                        *(_DWORD *)(a1 + 88) |= 0x800u;
                                                        *(_DWORD *)(a1 + 80) = v40;
                                                        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2))
                                                        {
LABEL_88:
                                                          if (*((_DWORD *)this + 11)
                                                            || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
                                                          {
                                                            *((_DWORD *)this + 8) = 0;
                                                            result = 1;
                                                            *((_BYTE *)this + 36) = 1;
                                                            return result;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        else
                                        {
                                          *v9 = *v30;
                                          v31 = v30 + 1;
                                          *((_QWORD *)this + 1) = v31;
                                          v32 = *(_DWORD *)(a1 + 88) | 0x100;
                                          *(_DWORD *)(a1 + 88) = v32;
                                          if ((unint64_t)v31 < v28)
                                            goto LABEL_73;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              else
                              {
                                *v8 = *v24;
                                v43 = v24 + 1;
                                *((_QWORD *)this + 1) = v43;
                                v44 = *(_DWORD *)(a1 + 88) | 0x20;
                                *(_DWORD *)(a1 + 88) = v44;
                                if ((unint64_t)v43 < v18)
                                  goto LABEL_117;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 2u:
        v14 = TagFallback & 7;
        if (v14 == 1)
          goto LABEL_17;
        goto LABEL_67;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v20 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_23;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v22 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_95;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v23 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_103;
      case 6u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v24 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_111;
      case 7u:
        v14 = TagFallback & 7;
        if (v14 != 2)
          goto LABEL_67;
        *(_DWORD *)(a1 + 88) |= 0x40u;
        v25 = *(void **)(a1 + 48);
        if (v25 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          goto LABEL_35;
        goto LABEL_36;
      case 8u:
        v14 = TagFallback & 7;
        if (v14 == 2)
          goto LABEL_41;
        goto LABEL_67;
      case 9u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v30 = (char *)*((_QWORD *)this + 1);
        v28 = *((_QWORD *)this + 2);
        if ((unint64_t)v30 < v28)
          goto LABEL_50;
        goto LABEL_71;
      case 0xAu:
        v14 = TagFallback & 7;
        if (v14 != 2)
          goto LABEL_67;
        *(_DWORD *)(a1 + 88) |= 0x200u;
        v33 = *(void **)(a1 + 64);
        if (v33 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          goto LABEL_55;
        goto LABEL_56;
      case 0xBu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v36 = (char *)*((_QWORD *)this + 1);
        v34 = *((_QWORD *)this + 2);
        if ((unint64_t)v36 < v34)
          goto LABEL_63;
        goto LABEL_76;
      case 0xCu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v38 = (char *)*((_QWORD *)this + 1);
        v34 = *((_QWORD *)this + 2);
        goto LABEL_80;
      default:
        v14 = TagFallback & 7;
LABEL_67:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v11, a4) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_1003200D0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 88);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(this + 16), a2);
    v6 = *(_DWORD *)(v5 + 88);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), a2, a4);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 36), a2, a4);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 40), a2, a4);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 44), a2, a4);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(7, *(_QWORD *)(v5 + 48), a2);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(8, *(_QWORD *)(v5 + 56), a2);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 72), a2, a4);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(10, *(_QWORD *)(v5 + 64), a2);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 76), a2, a4);
  if ((*(_DWORD *)(v5 + 88) & 0x800) == 0)
  {
LABEL_13:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 80), (int)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_27:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100320270(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  int v7;
  int v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  const void *v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  const void *v29;
  uint64_t v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  int v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  const void *v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  uint64_t v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  int v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  const void *v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;

  v4 = a2;
  v6 = *((_DWORD *)this + 22);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
    goto LABEL_27;
  }
  v12 = *((_QWORD *)this + 2);
  *(_BYTE *)a2 = 10;
  v13 = (_DWORD)a2 + 1;
  if (*(char *)(v12 + 23) < 0)
  {
    v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v12 + 8);
    if (v14 <= 0x7F)
      goto LABEL_17;
  }
  else
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
    if (*(unsigned __int8 *)(v12 + 23) <= 0x7Fu)
    {
LABEL_17:
      *((_BYTE *)v4 + 1) = (_BYTE)v14;
      v15 = (_DWORD)v4 + 2;
      goto LABEL_20;
    }
  }
  v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v13, a3);
LABEL_20:
  v16 = *(char *)(v12 + 23);
  if (v16 >= 0)
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
  else
    v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v12;
  if (v16 >= 0)
    v18 = (const void *)*(unsigned __int8 *)(v12 + 23);
  else
    v18 = (const void *)*(unsigned int *)(v12 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v17, v18, v15, a4);
  v6 = *((_DWORD *)this + 22);
  if ((v6 & 2) == 0)
  {
LABEL_3:
    if ((v6 & 4) == 0)
      goto LABEL_4;
    goto LABEL_28;
  }
LABEL_27:
  v19 = *((_QWORD *)this + 3);
  *(_BYTE *)v4 = 17;
  *(_QWORD *)((char *)v4 + 1) = v19;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 22) & 4) == 0)
  {
LABEL_4:
    if ((*((_BYTE *)this + 88) & 8) == 0)
      goto LABEL_5;
LABEL_32:
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)v4 = 32;
    if (v21 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v4 + 1, a3);
      if ((*((_BYTE *)this + 88) & 0x10) != 0)
        goto LABEL_36;
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v21;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if ((*((_BYTE *)this + 88) & 0x10) != 0)
        goto LABEL_36;
    }
LABEL_6:
    if ((*((_BYTE *)this + 88) & 0x20) == 0)
      goto LABEL_7;
LABEL_40:
    v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(_BYTE *)v4 = 48;
    if (v23 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)v4 + 1, a3);
      v7 = *((_DWORD *)this + 22);
      if ((v7 & 0x40) != 0)
        goto LABEL_44;
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v23;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      v7 = *((_DWORD *)this + 22);
      if ((v7 & 0x40) != 0)
        goto LABEL_44;
    }
LABEL_8:
    if ((v7 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_56;
  }
LABEL_28:
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(_BYTE *)v4 = 24;
  if (v20 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
    if ((*((_BYTE *)this + 88) & 8) != 0)
      goto LABEL_32;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v20;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((_BYTE *)this + 88) & 8) != 0)
      goto LABEL_32;
  }
LABEL_5:
  if ((*((_BYTE *)this + 88) & 0x10) == 0)
    goto LABEL_6;
LABEL_36:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  *(_BYTE *)v4 = 40;
  if (v22 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)v4 + 1, a3);
    if ((*((_BYTE *)this + 88) & 0x20) != 0)
      goto LABEL_40;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v22;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((_BYTE *)this + 88) & 0x20) != 0)
      goto LABEL_40;
  }
LABEL_7:
  v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x40) == 0)
    goto LABEL_8;
LABEL_44:
  v24 = *((_QWORD *)this + 6);
  *(_BYTE *)v4 = 58;
  if (*(char *)(v24 + 23) < 0)
  {
    v25 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v24 + 8);
    if (v25 <= 0x7F)
      goto LABEL_46;
  }
  else
  {
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v24 + 23);
    if (*(unsigned __int8 *)(v24 + 23) <= 0x7Fu)
    {
LABEL_46:
      *((_BYTE *)v4 + 1) = (_BYTE)v25;
      v26 = (_DWORD)v4 + 2;
      goto LABEL_49;
    }
  }
  v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)v4 + 1, a3);
LABEL_49:
  v27 = *(char *)(v24 + 23);
  if (v27 >= 0)
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24;
  else
    v28 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v24;
  if (v27 >= 0)
    v29 = (const void *)*(unsigned __int8 *)(v24 + 23);
  else
    v29 = (const void *)*(unsigned int *)(v24 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v28, v29, v26, a4);
  v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x80) == 0)
  {
LABEL_9:
    if ((v7 & 0x100) == 0)
      goto LABEL_10;
LABEL_68:
    v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    *(_BYTE *)v4 = 72;
    if (v36 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, (int)v4 + 1, a3);
      v8 = *((_DWORD *)this + 22);
      if ((v8 & 0x200) != 0)
        goto LABEL_72;
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v36;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      v8 = *((_DWORD *)this + 22);
      if ((v8 & 0x200) != 0)
        goto LABEL_72;
    }
LABEL_11:
    if ((v8 & 0x400) == 0)
      goto LABEL_12;
LABEL_84:
    v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
    *(_BYTE *)v4 = 88;
    if (v43 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v43, (int)v4 + 1, a3);
      if ((*((_BYTE *)this + 89) & 8) != 0)
        goto LABEL_88;
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v43;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if ((*((_BYTE *)this + 89) & 8) != 0)
        goto LABEL_88;
    }
LABEL_13:
    v11 = (_QWORD *)*((_QWORD *)this + 1);
    v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v9 = v11;
    if (!v11)
      return v4;
    goto LABEL_95;
  }
LABEL_56:
  v30 = *((_QWORD *)this + 7);
  *(_BYTE *)v4 = 66;
  if (*(char *)(v30 + 23) < 0)
  {
    v31 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v30 + 8);
    if (v31 <= 0x7F)
      goto LABEL_58;
  }
  else
  {
    v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v30 + 23);
    if (*(unsigned __int8 *)(v30 + 23) <= 0x7Fu)
    {
LABEL_58:
      *((_BYTE *)v4 + 1) = (_BYTE)v31;
      v32 = (_DWORD)v4 + 2;
      goto LABEL_61;
    }
  }
  v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v4 + 1, a3);
LABEL_61:
  v33 = *(char *)(v30 + 23);
  if (v33 >= 0)
    v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30;
  else
    v34 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v30;
  if (v33 >= 0)
    v35 = (const void *)*(unsigned __int8 *)(v30 + 23);
  else
    v35 = (const void *)*(unsigned int *)(v30 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v34, v35, v32, a4);
  if ((*((_DWORD *)this + 22) & 0x100) != 0)
    goto LABEL_68;
LABEL_10:
  v8 = *((_DWORD *)this + 22);
  if ((v8 & 0x200) == 0)
    goto LABEL_11;
LABEL_72:
  v37 = *((_QWORD *)this + 8);
  *(_BYTE *)v4 = 82;
  if (*(char *)(v37 + 23) < 0)
  {
    v38 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v37 + 8);
    if (v38 <= 0x7F)
      goto LABEL_74;
  }
  else
  {
    v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v37 + 23);
    if (*(unsigned __int8 *)(v37 + 23) <= 0x7Fu)
    {
LABEL_74:
      *((_BYTE *)v4 + 1) = (_BYTE)v38;
      v39 = (_DWORD)v4 + 2;
      goto LABEL_77;
    }
  }
  v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v38, (int)v4 + 1, a3);
LABEL_77:
  v40 = *(char *)(v37 + 23);
  if (v40 >= 0)
    v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37;
  else
    v41 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v37;
  if (v40 >= 0)
    v42 = (const void *)*(unsigned __int8 *)(v37 + 23);
  else
    v42 = (const void *)*(unsigned int *)(v37 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v41, v42, v39, a4);
  if ((*((_DWORD *)this + 22) & 0x400) != 0)
    goto LABEL_84;
LABEL_12:
  if ((*((_BYTE *)this + 89) & 8) == 0)
    goto LABEL_13;
LABEL_88:
  v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 20);
  *(_BYTE *)v4 = 96;
  v45 = (unint64_t)v4 + 1;
  if ((v44 & 0x80000000) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v44, v45, a3);
    v47 = (_QWORD *)*((_QWORD *)this + 1);
    v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v9 = v47;
    if (!v47)
      return v4;
  }
  else if (v44 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v44, v45, a3);
    v48 = (_QWORD *)*((_QWORD *)this + 1);
    v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v9 = v48;
    if (!v48)
      return v4;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v44;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    v46 = (_QWORD *)*((_QWORD *)this + 1);
    v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v9 = v46;
    if (!v46)
      return v4;
  }
LABEL_95:
  if (*v9 != v9[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, v4, a3);
  return v4;
}

uint64_t sub_1003206DC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v32;
  _QWORD *v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  uint64_t v37;
  int v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  uint64_t v45;

  v3 = *(_DWORD *)(a1 + 88);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    if ((v3 & 0xFF00) == 0)
      goto LABEL_67;
    goto LABEL_63;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) != 0)
      v4 = 9;
    else
      v4 = 0;
    if ((v3 & 4) == 0)
      goto LABEL_26;
LABEL_22:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      v3 = *(_DWORD *)(a1 + 88);
    }
    else
    {
      v13 = 1;
    }
    v4 = (v4 + v13 + 1);
    goto LABEL_26;
  }
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v3 = *(_DWORD *)(a1 + 88);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v11 = v10 + v6 + 1;
  if ((v3 & 2) != 0)
    v4 = v11 + 9;
  else
    v4 = v11;
  if ((v3 & 4) != 0)
    goto LABEL_22;
LABEL_26:
  if ((v3 & 8) != 0)
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      v3 = *(_DWORD *)(a1 + 88);
      v4 = (v4 + v15 + 1);
      if ((v3 & 0x10) != 0)
        goto LABEL_37;
    }
    else
    {
      v4 = (v4 + 2);
      if ((v3 & 0x10) != 0)
        goto LABEL_37;
    }
LABEL_28:
    if ((v3 & 0x20) == 0)
      goto LABEL_29;
LABEL_41:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      v3 = *(_DWORD *)(a1 + 88);
      v4 = (v19 + 1 + v4);
      if ((v3 & 0x40) != 0)
        goto LABEL_45;
    }
    else
    {
      v4 = (v4 + 2);
      if ((v3 & 0x40) != 0)
        goto LABEL_45;
    }
LABEL_30:
    if ((v3 & 0x80) == 0)
      goto LABEL_31;
    goto LABEL_54;
  }
  if ((v3 & 0x10) == 0)
    goto LABEL_28;
LABEL_37:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    v3 = *(_DWORD *)(a1 + 88);
    v4 = (v4 + v17 + 1);
    if ((v3 & 0x20) != 0)
      goto LABEL_41;
  }
  else
  {
    v4 = (v4 + 2);
    if ((v3 & 0x20) != 0)
      goto LABEL_41;
  }
LABEL_29:
  if ((v3 & 0x40) == 0)
    goto LABEL_30;
LABEL_45:
  v20 = *(_QWORD *)(a1 + 48);
  v21 = *(unsigned __int8 *)(v20 + 23);
  v22 = v21;
  v23 = *(_QWORD *)(v20 + 8);
  if ((v21 & 0x80u) == 0)
    v24 = *(unsigned __int8 *)(v20 + 23);
  else
    v24 = v23;
  if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24, a2);
    v21 = *(unsigned __int8 *)(v20 + 23);
    v23 = *(_QWORD *)(v20 + 8);
    v3 = *(_DWORD *)(a1 + 88);
    v22 = *(_BYTE *)(v20 + 23);
  }
  else
  {
    v25 = 1;
  }
  if (v22 < 0)
    v21 = v23;
  v4 = (v4 + v25 + v21 + 1);
  if ((v3 & 0x80) == 0)
  {
LABEL_31:
    if ((v3 & 0xFF00) == 0)
      goto LABEL_67;
LABEL_63:
    if ((v3 & 0x100) == 0)
    {
      if ((v3 & 0x200) == 0)
        goto LABEL_65;
LABEL_73:
      v37 = *(_QWORD *)(a1 + 64);
      v38 = *(unsigned __int8 *)(v37 + 23);
      v39 = v38;
      v40 = *(_QWORD *)(v37 + 8);
      if ((v38 & 0x80u) == 0)
        v41 = *(unsigned __int8 *)(v37 + 23);
      else
        v41 = v40;
      if (v41 >= 0x80)
      {
        v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v41, a2);
        v38 = *(unsigned __int8 *)(v37 + 23);
        v40 = *(_QWORD *)(v37 + 8);
        v3 = *(_DWORD *)(a1 + 88);
        v39 = *(_BYTE *)(v37 + 23);
      }
      else
      {
        v42 = 1;
      }
      if (v39 < 0)
        v38 = v40;
      v4 = (v4 + v42 + v38 + 1);
      if ((v3 & 0x400) == 0)
      {
LABEL_66:
        if ((v3 & 0x800) == 0)
          goto LABEL_67;
        goto LABEL_86;
      }
LABEL_82:
      v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
      if (v43 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2)+ 1+ v4;
        if ((*(_DWORD *)(a1 + 88) & 0x800) == 0)
          goto LABEL_67;
      }
      else
      {
        v4 = (v4 + 2);
        if ((v3 & 0x800) == 0)
          goto LABEL_67;
      }
LABEL_86:
      v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
      if ((v44 & 0x80000000) != 0)
      {
        v4 = (v4 + 11);
        v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        v33 = *(_QWORD **)(a1 + 8);
        if (!v33)
          goto LABEL_68;
      }
      else if (v44 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44, a2)+ 1+ v4;
        v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        v33 = *(_QWORD **)(a1 + 8);
        if (!v33)
          goto LABEL_68;
      }
      else
      {
        v4 = (v4 + 2);
        v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        v33 = *(_QWORD **)(a1 + 8);
        if (!v33)
          goto LABEL_68;
      }
      goto LABEL_93;
    }
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if (v35 >= 0x80)
    {
      v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
      v3 = *(_DWORD *)(a1 + 88);
      v4 = (v36 + 1 + v4);
      if ((v3 & 0x200) != 0)
        goto LABEL_73;
    }
    else
    {
      v4 = (v4 + 2);
      if ((v3 & 0x200) != 0)
        goto LABEL_73;
    }
LABEL_65:
    if ((v3 & 0x400) == 0)
      goto LABEL_66;
    goto LABEL_82;
  }
LABEL_54:
  v26 = *(_QWORD *)(a1 + 56);
  v27 = *(unsigned __int8 *)(v26 + 23);
  v28 = v27;
  v29 = *(_QWORD *)(v26 + 8);
  if ((v27 & 0x80u) == 0)
    v30 = *(unsigned __int8 *)(v26 + 23);
  else
    v30 = v29;
  if (v30 >= 0x80)
  {
    v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30, a2);
    v27 = *(unsigned __int8 *)(v26 + 23);
    v29 = *(_QWORD *)(v26 + 8);
    v3 = *(_DWORD *)(a1 + 88);
    v28 = *(_BYTE *)(v26 + 23);
  }
  else
  {
    v31 = 1;
  }
  if (v28 < 0)
    v27 = v29;
  v4 = (v4 + v31 + v27 + 1);
  if ((v3 & 0xFF00) != 0)
    goto LABEL_63;
LABEL_67:
  v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v33 = *(_QWORD **)(a1 + 8);
  if (!v33)
  {
LABEL_68:
    *(_DWORD *)(a1 + 84) = v4;
    return v4;
  }
LABEL_93:
  if (*v33 == v33[1])
    goto LABEL_68;
  v45 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v32, a2)
      + v4;
  *(_DWORD *)(a1 + 84) = v45;
  return v45;
}

uint64_t sub_100320A88(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 2740);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10031F2A4((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100320B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100320B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100320B64(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100320BAC()
{
  return 1;
}

uint64_t sub_100320BB4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10031B370;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A800, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A7C8;
}

void sub_100320C28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100320C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  const std::string *v8;
  std::string *v9;
  const std::string *v10;
  std::string *v11;
  const std::string *v12;
  std::string *v13;
  uint64_t v14;
  char v15;
  _BYTE v16[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v16, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 3197);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 60);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 60) & 1) != 0)
  {
    v8 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 1u;
    v9 = *(std::string **)(a1 + 16);
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v9, v8);
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_17;
    }
  }
  else if ((*(_BYTE *)(a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  v10 = *(const std::string **)(a2 + 24);
  *(_DWORD *)(a1 + 60) |= 2u;
  v11 = *(std::string **)(a1 + 24);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v11, v10);
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
LABEL_20:
    v14 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(_QWORD *)(a1 + 40) = v14;
    if ((*(_DWORD *)(a2 + 60) & 0x10) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_9;
  }
LABEL_17:
  v12 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 60) |= 4u;
  v13 = *(std::string **)(a1 + 32);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v13, v12);
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 8) != 0)
    goto LABEL_20;
LABEL_8:
  if ((v5 & 0x10) != 0)
  {
LABEL_9:
    v6 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(_QWORD *)(a1 + 48) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100320E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100320E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_100320E2C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;

  v1 = result[2];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    operator delete();
  }
  v3 = result[3];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    operator delete();
  }
  v5 = result[4];
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    operator delete();
  }
  return result;
}

void sub_100320F2C(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_100406B28;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100320E2C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100320F68(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_100406B28;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100320E2C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_100320FB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_100320FC0()
{
  operator new();
}

void sub_10032101C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100321044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v5;

  if (!*(_BYTE *)(a1 + 60))
    goto LABEL_19;
  if ((*(_BYTE *)(a1 + 60) & 1) == 0
    || (v1 = *(_QWORD *)(a1 + 16), (_UNKNOWN *)v1 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    if ((*(_BYTE *)(a1 + 60) & 2) != 0)
      goto LABEL_7;
    goto LABEL_13;
  }
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v1 = 0;
    *(_BYTE *)(v1 + 23) = 0;
    goto LABEL_6;
  }
  **(_BYTE **)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  if ((*(_BYTE *)(a1 + 60) & 2) != 0)
  {
LABEL_7:
    v2 = *(_QWORD *)(a1 + 24);
    if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        **(_BYTE **)v2 = 0;
        *(_QWORD *)(v2 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v2 = 0;
        *(_BYTE *)(v2 + 23) = 0;
      }
    }
  }
LABEL_13:
  if ((*(_BYTE *)(a1 + 60) & 4) != 0)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
      }
    }
  }
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
LABEL_19:
  v5 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 13) = 0;
  if (v5)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10032110C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  void *v10;
  uint64_t result;
  _BYTE *v12;
  void *v13;
  _BYTE *v14;
  void *v15;
  _BYTE *v16;
  _BYTE *v17;
  unint64_t v18;

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_41;
        *(_DWORD *)(a1 + 60) |= 1u;
        v10 = *(void **)(a1 + 16);
        if (v10 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v10);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v12 < *((_QWORD *)this + 2) && *v12 == 18)
          {
            *((_QWORD *)this + 1) = v12 + 1;
            goto LABEL_17;
          }
          continue;
        }
        return result;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_41;
LABEL_17:
        *(_DWORD *)(a1 + 60) |= 2u;
        v13 = *(void **)(a1 + 24);
        if (v13 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v13);
        if ((_DWORD)result)
        {
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v14 < *((_QWORD *)this + 2) && *v14 == 26)
          {
            *((_QWORD *)this + 1) = v14 + 1;
            goto LABEL_24;
          }
          continue;
        }
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_41;
LABEL_24:
        *(_DWORD *)(a1 + 60) |= 4u;
        v15 = *(void **)(a1 + 32);
        if (v15 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v15);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v16 < *((_QWORD *)this + 2) && *v16 == 33)
          {
            *((_QWORD *)this + 1) = v16 + 1;
            goto LABEL_31;
          }
          continue;
        }
        return result;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_41;
LABEL_31:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0)
          goto LABEL_43;
        *(_QWORD *)(a1 + 40) = v18;
        *(_DWORD *)(a1 + 60) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 != 41)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
        goto LABEL_36;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_41;
LABEL_36:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0)
          goto LABEL_43;
        *(_QWORD *)(a1 + 48) = v18;
        *(_DWORD *)(a1 + 60) |= 0x10u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      default:
        v9 = TagFallback & 7;
LABEL_41:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) != 0)
          continue;
LABEL_43:
        result = 0;
        break;
    }
    return result;
  }
}

uint64_t sub_100321444(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 60);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(this + 16), a2);
    v5 = *(_DWORD *)(v4 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2, *(_QWORD *)(v4 + 24), a2);
  v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(3, *(_QWORD *)(v4 + 32), a2);
  v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  if ((*(_DWORD *)(v4 + 60) & 0x10) == 0)
  {
LABEL_6:
    v8 = *(_QWORD **)(v4 + 8);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    v6 = v8;
    if (!v8)
      return this;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_13:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100321520(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  const void *v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  const void *v22;
  uint64_t v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v4 = a2;
  v6 = *((_DWORD *)this + 15);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
    goto LABEL_20;
  }
  v10 = *((_QWORD *)this + 2);
  *(_BYTE *)a2 = 10;
  v11 = (_DWORD)a2 + 1;
  if (*(char *)(v10 + 23) < 0)
  {
    v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v10 + 8);
    if (v12 <= 0x7F)
      goto LABEL_10;
  }
  else
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v10 + 23);
    if (*(unsigned __int8 *)(v10 + 23) <= 0x7Fu)
    {
LABEL_10:
      *((_BYTE *)v4 + 1) = (_BYTE)v12;
      v13 = (_DWORD)v4 + 2;
      goto LABEL_13;
    }
  }
  v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
LABEL_13:
  v14 = *(char *)(v10 + 23);
  if (v14 >= 0)
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10;
  else
    v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v10;
  if (v14 >= 0)
    v16 = (const void *)*(unsigned __int8 *)(v10 + 23);
  else
    v16 = (const void *)*(unsigned int *)(v10 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v15, v16, v13, a4);
  v6 = *((_DWORD *)this + 15);
  if ((v6 & 2) == 0)
  {
LABEL_3:
    if ((v6 & 4) == 0)
      goto LABEL_4;
    goto LABEL_32;
  }
LABEL_20:
  v17 = *((_QWORD *)this + 3);
  *(_BYTE *)v4 = 18;
  if (*(char *)(v17 + 23) < 0)
  {
    v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v17 + 8);
    if (v18 <= 0x7F)
      goto LABEL_22;
  }
  else
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
    if (*(unsigned __int8 *)(v17 + 23) <= 0x7Fu)
    {
LABEL_22:
      *((_BYTE *)v4 + 1) = (_BYTE)v18;
      v19 = (_DWORD)v4 + 2;
      goto LABEL_25;
    }
  }
  v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
LABEL_25:
  v20 = *(char *)(v17 + 23);
  if (v20 >= 0)
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
  else
    v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
  if (v20 >= 0)
    v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
  else
    v22 = (const void *)*(unsigned int *)(v17 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v21, v22, v19, a4);
  v6 = *((_DWORD *)this + 15);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_44;
  }
LABEL_32:
  v23 = *((_QWORD *)this + 4);
  *(_BYTE *)v4 = 26;
  if (*(char *)(v23 + 23) < 0)
  {
    v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v23 + 8);
    if (v24 <= 0x7F)
      goto LABEL_34;
  }
  else
  {
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v23 + 23);
    if (*(unsigned __int8 *)(v23 + 23) <= 0x7Fu)
    {
LABEL_34:
      *((_BYTE *)v4 + 1) = (_BYTE)v24;
      v25 = (_DWORD)v4 + 2;
      goto LABEL_37;
    }
  }
  v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v4 + 1, a3);
LABEL_37:
  v26 = *(char *)(v23 + 23);
  if (v26 >= 0)
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23;
  else
    v27 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v23;
  if (v26 >= 0)
    v28 = (const void *)*(unsigned __int8 *)(v23 + 23);
  else
    v28 = (const void *)*(unsigned int *)(v23 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v27, v28, v25, a4);
  v6 = *((_DWORD *)this + 15);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
LABEL_45:
    v30 = *((_QWORD *)this + 6);
    *(_BYTE *)v4 = 41;
    *(_QWORD *)((char *)v4 + 1) = v30;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v31 = (_QWORD *)*((_QWORD *)this + 1);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v7 = v31;
    if (!v31)
      return v4;
    goto LABEL_46;
  }
LABEL_44:
  v29 = *((_QWORD *)this + 5);
  *(_BYTE *)v4 = 33;
  *(_QWORD *)((char *)v4 + 1) = v29;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 15) & 0x10) != 0)
    goto LABEL_45;
LABEL_6:
  v9 = (_QWORD *)*((_QWORD *)this + 1);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v7 = v9;
  if (!v9)
    return v4;
LABEL_46:
  if (*v7 != v7[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
  return v4;
}

uint64_t sub_100321780(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;
  int v10;
  unint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  uint64_t v27;

  LOBYTE(v3) = *(_BYTE *)(a1 + 60);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 60) & 2) == 0)
        goto LABEL_27;
      goto LABEL_18;
    }
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(unsigned __int8 *)(v9 + 23);
    if ((v10 & 0x80u) == 0)
      v11 = *(unsigned __int8 *)(v9 + 23);
    else
      v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
      v13 = *(unsigned __int8 *)(v9 + 23);
      v3 = *(_DWORD *)(a1 + 60);
      if (*(char *)(v9 + 23) < 0)
        v13 = *(_QWORD *)(v9 + 8);
      v4 = v12 + 1 + v13;
      if ((v3 & 2) == 0)
      {
LABEL_27:
        if ((v3 & 4) != 0)
        {
          v20 = *(_QWORD *)(a1 + 32);
          v21 = *(unsigned __int8 *)(v20 + 23);
          v22 = v21;
          v23 = *(_QWORD *)(v20 + 8);
          if ((v21 & 0x80u) == 0)
            v24 = *(unsigned __int8 *)(v20 + 23);
          else
            v24 = v23;
          if (v24 >= 0x80)
          {
            v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24, a2);
            v21 = *(unsigned __int8 *)(v20 + 23);
            v23 = *(_QWORD *)(v20 + 8);
            v3 = *(_DWORD *)(a1 + 60);
            v22 = *(_BYTE *)(v20 + 23);
          }
          else
          {
            v25 = 1;
          }
          if (v22 < 0)
            v21 = v23;
          v4 += v25 + v21 + 1;
        }
        v26 = v4 + 9;
        if ((v3 & 8) == 0)
          v26 = v4;
        if ((v3 & 0x10) != 0)
          v5 = v26 + 9;
        else
          v5 = v26;
        v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        v7 = *(_QWORD **)(a1 + 8);
        if (!v7)
          goto LABEL_6;
        goto LABEL_43;
      }
    }
    else
    {
      if ((v10 & 0x80u) != 0)
        v10 = *(_QWORD *)(v9 + 8);
      v4 = v10 + 2;
      if ((v3 & 2) == 0)
        goto LABEL_27;
    }
LABEL_18:
    v14 = *(_QWORD *)(a1 + 24);
    v15 = *(unsigned __int8 *)(v14 + 23);
    v16 = v15;
    v17 = *(_QWORD *)(v14 + 8);
    if ((v15 & 0x80u) == 0)
      v18 = *(unsigned __int8 *)(v14 + 23);
    else
      v18 = v17;
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18, a2);
      v15 = *(unsigned __int8 *)(v14 + 23);
      v17 = *(_QWORD *)(v14 + 8);
      v3 = *(_DWORD *)(a1 + 60);
      v16 = *(_BYTE *)(v14 + 23);
    }
    else
    {
      v19 = 1;
    }
    if (v16 < 0)
      v15 = v17;
    v4 += v19 + v15 + 1;
    goto LABEL_27;
  }
  v5 = 0;
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 8);
  if (!v7)
  {
LABEL_6:
    *(_DWORD *)(a1 + 56) = v5;
    return v5;
  }
LABEL_43:
  if (*v7 == v7[1])
    goto LABEL_6;
  v27 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 56) = v27;
  return v27;
}

uint64_t sub_100321938(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 3185);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100320C3C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1003219EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100321A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100321A14(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100321A5C()
{
  return 1;
}

uint64_t sub_100321A64()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10031B370;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A800, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A7D8;
}

void sub_100321AD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100321AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::string *v5;
  uint64_t v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  const std::string *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  const std::string *v15;
  std::string *v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  _BYTE v21[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v21, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 3563);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v20, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    v6 = 0;
    do
    {
      while (1)
      {
        v10 = *(const std::string **)(*(_QWORD *)(a2 + 24) + 8 * v6);
        v11 = *(_DWORD *)(a1 + 36);
        v12 = *(int *)(a1 + 32);
        if ((int)v12 >= v11)
          break;
        v13 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)(a1 + 32) = v12 + 1;
        v5 = std::string::operator=(*(std::string **)(v13 + 8 * v12), v10);
        if (++v6 >= *(int *)(a2 + 32))
          goto LABEL_11;
      }
      if (v11 == *(_DWORD *)(a1 + 40))
      {
        v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v11 + 1);
        v11 = *(_DWORD *)(a1 + 36);
      }
      *(_DWORD *)(a1 + 36) = v11 + 1;
      v7 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v5);
      v8 = *(_QWORD *)(a1 + 24);
      v9 = *(int *)(a1 + 32);
      *(_DWORD *)(a1 + 32) = v9 + 1;
      *(_QWORD *)(v8 + 8 * v9) = v7;
      v5 = std::string::operator=(v7, v10);
      ++v6;
    }
    while (v6 < *(int *)(a2 + 32));
  }
LABEL_11:
  sub_100323038((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56), a2 + 56);
  LOBYTE(v14) = *(_BYTE *)(a2 + 84);
  if ((_BYTE)v14)
  {
    if ((*(_BYTE *)(a2 + 84) & 1) != 0)
    {
      v15 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 84) |= 1u;
      v16 = *(std::string **)(a1 + 16);
      if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v16, v15);
      v14 = *(_DWORD *)(a2 + 84);
    }
    if ((v14 & 4) != 0)
    {
      *(_DWORD *)(a1 + 84) |= 4u;
      v17 = *(_QWORD *)(a1 + 48);
      if (!v17)
        operator new();
      v18 = *(_QWORD *)(a2 + 48);
      if (!v18)
        v18 = *(_QWORD *)(qword_10042EAE8 + 48);
      sub_10031E1B0(v17, v18);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100321D60()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100321D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100321D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100321DB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = off_100406BD8;
  v2 = *(_QWORD *)(a1 + 16);
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    operator delete();
  }
  if (qword_10042EAE8 != a1)
  {
    v4 = *(_QWORD *)(a1 + 48);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
  v5 = *(_DWORD *)(a1 + 68);
  if (v5 >= 1)
  {
    for (i = 0; i < v5; ++i)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
      if (v7)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
        v5 = *(_DWORD *)(a1 + 68);
      }
    }
  }
  if (*(_QWORD *)(a1 + 56))
    operator delete[]();
  if (*(int *)(a1 + 36) >= 1)
  {
    v8 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete(*(_QWORD *)(*(_QWORD *)(a1 + 24)
                                                                                                + 8 * v8++));
    while (v8 < *(int *)(a1 + 36));
  }
  if (*(_QWORD *)(a1 + 24))
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100321EF4(uint64_t a1)
{
  sub_100321DB0(a1);
  operator delete();
}

uint64_t sub_100321F18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 80) = a2;
  return result;
}

void sub_100321F20()
{
  operator new();
}

void sub_100321F8C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100321FB4(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  uint64_t v8;

  v1 = this;
  if (!*(_BYTE *)(this + 84))
    goto LABEL_9;
  if ((*(_BYTE *)(this + 84) & 1) != 0)
  {
    v2 = *(_QWORD *)(this + 16);
    if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        **(_BYTE **)v2 = 0;
        *(_QWORD *)(v2 + 8) = 0;
        if ((*(_BYTE *)(this + 84) & 4) == 0)
          goto LABEL_9;
        goto LABEL_7;
      }
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  if ((*(_BYTE *)(this + 84) & 4) == 0)
    goto LABEL_9;
LABEL_7:
  this = *(_QWORD *)(this + 48);
  if (this)
    this = sub_1000BD1A8(this);
LABEL_9:
  if (*(int *)(v1 + 32) >= 1)
  {
    v3 = 0;
    do
    {
      while (1)
      {
        v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v3);
        if (*(char *)(v4 + 23) < 0)
          break;
        *(_BYTE *)v4 = 0;
        *(_BYTE *)(v4 + 23) = 0;
        if (++v3 >= *(int *)(v1 + 32))
          goto LABEL_14;
      }
      **(_BYTE **)v4 = 0;
      *(_QWORD *)(v4 + 8) = 0;
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
LABEL_14:
  *(_DWORD *)(v1 + 32) = 0;
  if (*(int *)(v1 + 64) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 64));
  }
  v8 = *(_QWORD *)(v1 + 8);
  v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v7 + 14) = 0;
  *((_DWORD *)v7 + 19) = 0;
  if (v8)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  return this;
}

uint64_t sub_1003220DC(uint64_t result, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  unsigned int v8;
  unsigned __int8 *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v10;
  int v11;
  void *v12;
  _BYTE *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v27;
  int v28;
  BOOL v29;
  int v30;
  _BYTE *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v41;
  int v42;
  int v43;
  _BYTE *v44;
  unsigned int v45;
  unsigned int v46;

  v5 = result;
  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 24);
  v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 56);
  v8 = result + 8;
LABEL_2:
  while (1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || (char)*v9 < 0)
      break;
    v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
    *((_DWORD *)this + 8) = (_DWORD)v10;
    *((_QWORD *)this + 1) = v9 + 1;
    if (!(_DWORD)v10)
      return 1;
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        v11 = v10 & 7;
        if (v11 != 2)
          goto LABEL_25;
        *(_DWORD *)(v5 + 84) |= 1u;
        v12 = *(void **)(v5 + 16);
        if (v12 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v12);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 != 18)
          continue;
        break;
      case 2u:
        v11 = v10 & 7;
        if (v11 != 2)
          goto LABEL_25;
        v14 = *(_DWORD *)(v5 + 36);
        v15 = *(int *)(v5 + 32);
        if ((int)v15 < v14)
          goto LABEL_18;
        goto LABEL_29;
      case 3u:
        v11 = v10 & 7;
        if (v11 != 2)
          goto LABEL_25;
        *(_DWORD *)(v5 + 84) |= 4u;
        v17 = *(_QWORD *)(v5 + 48);
        if (v17)
          goto LABEL_22;
        goto LABEL_36;
      case 4u:
        v11 = v10 & 7;
        if (v11 != 2)
          goto LABEL_25;
        goto LABEL_48;
      default:
        v11 = v10 & 7;
LABEL_25:
        if (v11 == 4)
          return 1;
        result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v10, v8, a4);
        if ((result & 1) == 0)
          return 0;
        continue;
    }
    do
    {
      *((_QWORD *)this + 1) = v13 + 1;
      v14 = *(_DWORD *)(v5 + 36);
      v15 = *(int *)(v5 + 32);
      if ((int)v15 < v14)
      {
LABEL_18:
        v16 = *(_QWORD *)(v5 + 24);
        *(_DWORD *)(v5 + 32) = v15 + 1;
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, *(_QWORD *)(v16 + 8 * v15));
        if (!(_DWORD)result)
          return result;
      }
      else
      {
LABEL_29:
        if (v14 == *(_DWORD *)(v5 + 40))
        {
          result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v14 + 1);
          v14 = *(_DWORD *)(v5 + 36);
        }
        *(_DWORD *)(v5 + 36) = v14 + 1;
        v19 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
        v20 = *(_QWORD *)(v5 + 24);
        v21 = *(int *)(v5 + 32);
        *(_DWORD *)(v5 + 32) = v21 + 1;
        *(_QWORD *)(v20 + 8 * v21) = v19;
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v19);
        if (!(_DWORD)result)
          return result;
      }
      v13 = (_BYTE *)*((_QWORD *)this + 1);
      if ((unint64_t)v13 >= *((_QWORD *)this + 2))
        goto LABEL_2;
      v22 = *v13;
    }
    while (v22 == 18);
    if (v22 == 26)
    {
      *((_QWORD *)this + 1) = v13 + 1;
      *(_DWORD *)(v5 + 84) |= 4u;
      v17 = *(_QWORD *)(v5 + 48);
      if (!v17)
LABEL_36:
        operator new();
LABEL_22:
      v45 = 0;
      v18 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0;
      }
      else
      {
        v45 = *v18;
        *((_QWORD *)this + 1) = v18 + 1;
      }
      v23 = *((_DWORD *)this + 14);
      v24 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v23 + 1;
      if (v23 >= v24)
        return 0;
      v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
      if (!sub_1000A3900(v17, this, v26, v27) || !*((_BYTE *)this + 36))
        return 0;
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
      v28 = *((_DWORD *)this + 14);
      v29 = __OFSUB__(v28, 1);
      v30 = v28 - 1;
      if (v30 < 0 == v29)
        *((_DWORD *)this + 14) = v30;
      v31 = (_BYTE *)*((_QWORD *)this + 1);
      if ((unint64_t)v31 < *((_QWORD *)this + 2) && *v31 == 34)
      {
        while (1)
        {
          *((_QWORD *)this + 1) = v31 + 1;
LABEL_48:
          v32 = *(_DWORD *)(v5 + 68);
          v33 = *(int *)(v5 + 64);
          if ((int)v33 >= v32)
          {
            if (v32 == *(_DWORD *)(v5 + 72))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v32 + 1);
              v32 = *(_DWORD *)(v5 + 68);
            }
            *(_DWORD *)(v5 + 68) = v32 + 1;
            operator new();
          }
          v34 = *(_QWORD *)(v5 + 56);
          *(_DWORD *)(v5 + 64) = v33 + 1;
          v35 = *(_QWORD *)(v34 + 8 * v33);
          v46 = 0;
          v36 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v36 >= *((_QWORD *)this + 2) || *v36 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0;
          }
          else
          {
            v46 = *v36;
            *((_QWORD *)this + 1) = v36 + 1;
          }
          v37 = *((_DWORD *)this + 14);
          v38 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v37 + 1;
          if (v37 >= v38)
            return 0;
          v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46);
          if (!sub_10032110C(v35, this, v40, v41) || !*((_BYTE *)this + 36))
            return 0;
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
          v42 = *((_DWORD *)this + 14);
          v29 = __OFSUB__(v42, 1);
          v43 = v42 - 1;
          if (v43 < 0 == v29)
            *((_DWORD *)this + 14) = v43;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v44 = (_BYTE *)*((_QWORD *)this + 2);
          if (v31 >= v44 || *v31 != 34)
          {
            if (v31 == v44 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              result = 1;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
        }
      }
    }
  }
  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
  *((_DWORD *)this + 8) = result;
  if ((_DWORD)result)
    goto LABEL_7;
  return 1;
}

void sub_100322604()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032262C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100322654(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  v5 = this;
  if ((*(_BYTE *)(this + 84) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(this + 16), a2);
  if (*(int *)(v5 + 32) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v6++), a2);
    while (v6 < *(int *)(v5 + 32));
  }
  if ((*(_BYTE *)(v5 + 84) & 4) != 0)
  {
    v7 = *(_QWORD *)(v5 + 48);
    if (!v7)
      v7 = *(_QWORD *)(qword_10042EAE8 + 48);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 64));
  }
  v11 = *(_QWORD **)(v5 + 8);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100322750(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v6;
  unsigned int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  const void *v12;
  uint64_t i;
  int v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  const void *v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  unsigned int *v20;
  unsigned int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v25;
  unsigned int *v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  _QWORD *v28;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v29;
  _QWORD *v30;

  v4 = a2;
  if ((*((_BYTE *)this + 84) & 1) == 0)
    goto LABEL_14;
  v6 = *((_QWORD *)this + 2);
  *(_BYTE *)a2 = 10;
  v7 = (_DWORD)a2 + 1;
  if (*(char *)(v6 + 23) < 0)
  {
    v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    if (v8 <= 0x7F)
      goto LABEL_4;
LABEL_6:
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    goto LABEL_7;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
  if (*(unsigned __int8 *)(v6 + 23) > 0x7Fu)
    goto LABEL_6;
LABEL_4:
  *((_BYTE *)v4 + 1) = (_BYTE)v8;
  v9 = (_DWORD)v4 + 2;
LABEL_7:
  v10 = *(char *)(v6 + 23);
  if (v10 >= 0)
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
  else
    v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
  if (v10 >= 0)
    v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
  else
    v12 = (const void *)*(unsigned int *)(v6 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
LABEL_14:
  if (*((int *)this + 8) >= 1)
  {
    for (i = 0; i < *((int *)this + 8); ++i)
    {
      v18 = *(_QWORD *)(*((_QWORD *)this + 3) + 8 * i);
      *(_BYTE *)v4 = 18;
      if (*(char *)(v18 + 23) < 0)
      {
        v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v18 + 8);
        if (v19 <= 0x7F)
        {
LABEL_28:
          *((_BYTE *)v4 + 1) = (_BYTE)v19;
          v14 = (_DWORD)v4 + 2;
          goto LABEL_17;
        }
      }
      else
      {
        v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
        if (*(unsigned __int8 *)(v18 + 23) <= 0x7Fu)
          goto LABEL_28;
      }
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
LABEL_17:
      v15 = *(char *)(v18 + 23);
      if (v15 >= 0)
        v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
      else
        v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
      if (v15 >= 0)
        v17 = (const void *)*(unsigned __int8 *)(v18 + 23);
      else
        v17 = (const void *)*(unsigned int *)(v18 + 8);
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
    }
  }
  if ((*((_BYTE *)this + 84) & 4) != 0)
  {
    v20 = (unsigned int *)*((_QWORD *)this + 6);
    if (v20)
    {
      *(_BYTE *)v4 = 26;
      v21 = (_DWORD)v4 + 1;
      v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[27];
      if (v22 <= 0x7F)
      {
LABEL_32:
        *((_BYTE *)v4 + 1) = (_BYTE)v22;
        v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_35:
        v4 = sub_10031E878((wireless_diagnostics::google::protobuf::internal::WireFormat *)v20, v23, a3, a4);
        goto LABEL_36;
      }
    }
    else
    {
      v20 = *(unsigned int **)(qword_10042EAE8 + 48);
      *(_BYTE *)v4 = 26;
      v21 = (_DWORD)v4 + 1;
      v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[27];
      if (v22 <= 0x7F)
        goto LABEL_32;
    }
    v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, v21, a3);
    goto LABEL_35;
  }
LABEL_36:
  if (*((int *)this + 16) >= 1)
  {
    v24 = 0;
    do
    {
      v26 = *(unsigned int **)(*((_QWORD *)this + 7) + 8 * v24);
      *(_BYTE *)v4 = 34;
      v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[14];
      if (v27 > 0x7F)
      {
        v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v27;
        v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      v4 = sub_100321520((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, v25, a3, a4);
      ++v24;
    }
    while (v24 < *((int *)this + 16));
  }
  v30 = (_QWORD *)*((_QWORD *)this + 1);
  v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v28 = v30;
  if (!v30 || *v28 == v28[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v29, v4, a3);
}

uint64_t sub_10032297C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3;
  int v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  int v14;
  uint64_t i;
  int v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  _QWORD *v28;

  v3 = *(_BYTE *)(a1 + 84);
  if (!v3)
  {
    v4 = 0;
    goto LABEL_23;
  }
  if ((*(_BYTE *)(a1 + 84) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 84) & 4) == 0)
      goto LABEL_23;
LABEL_17:
    v10 = *(_QWORD *)(a1 + 48);
    if (v10)
    {
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10031ED70(v10, a2);
      if (v11 < 0x80)
      {
LABEL_19:
        v12 = 1;
LABEL_22:
        v4 += (_DWORD)v11 + v12 + 1;
        goto LABEL_23;
      }
    }
    else
    {
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10031ED70(*(_QWORD *)(qword_10042EAE8 + 48), a2);
      if (v11 < 0x80)
        goto LABEL_19;
    }
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    goto LABEL_22;
  }
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned __int8 *)(v5 + 23);
  if ((v6 & 0x80u) == 0)
    v7 = *(unsigned __int8 *)(v5 + 23);
  else
    v7 = *(_QWORD *)(v5 + 8);
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7, a2);
    v9 = *(unsigned __int8 *)(v5 + 23);
    if (*(char *)(v5 + 23) < 0)
      v9 = *(_QWORD *)(v5 + 8);
    v4 = v8 + 1 + v9;
    if ((*(_DWORD *)(a1 + 84) & 4) != 0)
      goto LABEL_17;
  }
  else
  {
    if ((v6 & 0x80u) != 0)
      v6 = *(_QWORD *)(v5 + 8);
    v4 = v6 + 2;
    if ((v3 & 4) != 0)
      goto LABEL_17;
  }
LABEL_23:
  v13 = *(_DWORD *)(a1 + 32);
  v14 = v13 + v4;
  if (v13 >= 1)
  {
    for (i = 0; i < v13; ++i)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * i);
      v17 = *(unsigned __int8 *)(v20 + 23);
      v19 = v17;
      v18 = *(_QWORD *)(v20 + 8);
      if ((v17 & 0x80u) == 0)
        v21 = *(unsigned __int8 *)(v20 + 23);
      else
        v21 = v18;
      if (v21 >= 0x80)
      {
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21, a2);
        v17 = *(unsigned __int8 *)(v20 + 23);
        v18 = *(_QWORD *)(v20 + 8);
        v13 = *(_DWORD *)(a1 + 32);
        v19 = *(_BYTE *)(v20 + 23);
      }
      else
      {
        v16 = 1;
      }
      if (v19 < 0)
        v17 = v18;
      v14 += v16 + v17;
    }
  }
  v22 = *(_DWORD *)(a1 + 64);
  v23 = (v22 + v14);
  if (v22 >= 1)
  {
    v24 = 0;
    do
    {
      v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100321780(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v24), a2);
      v27 = (int)v26;
      if (v26 >= 0x80)
        v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
      else
        v25 = 1;
      v23 = (v27 + v23 + v25);
      ++v24;
    }
    while (v24 < *(int *)(a1 + 64));
  }
  v28 = *(_QWORD **)(a1 + 8);
  if (v28 && *v28 != v28[1])
    v23 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v23;
  *(_DWORD *)(a1 + 80) = v23;
  return v23;
}

uint64_t sub_100322B70(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", 3551);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100321AEC((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100322C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100322C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100322C4C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100322C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  if ((*(_BYTE *)(a1 + 84) & 4) == 0)
    return 1;
  v1 = *(_QWORD *)(a1 + 48);
  if (v1)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 40))(v1);
    if (!(_DWORD)result)
      return result;
    return 1;
  }
  result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(qword_10042EAE8 + 48) + 40))(*(_QWORD *)(qword_10042EAE8 + 48));
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_100322CEC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_10041A800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10031B370;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_10041A800, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10041A7E8;
}

void sub_100322D60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100322D74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_100322D7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100322D84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 100);
}

uint64_t sub_100322D8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 108);
}

uint64_t sub_100322D94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_100322D9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_100322DA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

uint64_t sub_100322DAC(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    v5 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v5);
      v8 = *((_DWORD *)a1 + 3);
      v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      v6 = *(_QWORD *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      result = sub_10031C04C(*(_QWORD *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_100322EB8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100322EE0(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    v5 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v5);
      v8 = *((_DWORD *)a1 + 3);
      v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      v6 = *(_QWORD *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      result = sub_10031D010(*(_QWORD *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_100323010()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100323038(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    v5 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v5);
      v8 = *((_DWORD *)a1 + 3);
      v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      v6 = *(_QWORD *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      result = sub_100320C3C(*(_QWORD *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_100323154()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

id sub_100323180(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100323188(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

uint64_t sub_1003231B8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100323214()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100323270()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1003232EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100323344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)IndoorServiceTransactionManager;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

id sub_100323374()
{
  if (qword_100417EF8 != -1)
    dispatch_once(&qword_100417EF8, &stru_100406D88);
  return (id)qword_100417F00;
}

void sub_1003233CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

void sub_1003233FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

void sub_100323458(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10032358C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100323694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  objc_sync_exit(v10);

  _Unwind_Resume(a1);
}

void sub_100323728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);

  _Unwind_Resume(a1);
}

void sub_100323784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003237EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100323804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003238B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100323A38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  objc_sync_exit(v4);

  _Unwind_Resume(a1);
}

void sub_100323A70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100323B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_100323B80(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

uint64_t sub_100323BB0(uint64_t result, uint64_t a2)
{
  unsigned int v2;

  v2 = *(_DWORD *)(result + 32);
  if (!v2)
    *(_QWORD *)(result + 24) = *(_QWORD *)(a2 + 240) - *(_QWORD *)(result + 8);
  *(double *)(result + 40) = (*(double *)(a2 + 280) + *(double *)(result + 40) * (double)v2) / ((double)v2 + 1.0);
  *(_DWORD *)(result + 32) = v2 + 1;
  if (!*(_DWORD *)(a2 + 524))
    ++*(_DWORD *)(result + 36);
  return result;
}

void sub_100323C10()
{
  operator delete();
}

void sub_100323C80(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

uint64_t sub_100323CB0()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100323D0C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100323D68()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100323D7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

uint64_t sub_100323DAC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100323E08()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100323E64()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100323F20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100323F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100323FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003241EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10032438C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003243DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100324564(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003247B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003247C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100324900(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100324910(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100324924(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100324938(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100324CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, id location)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_100324D94(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

void sub_100324DC4(uint64_t a1)
{
  id *v1;
  NSObject *v2;
  id WeakRetained;
  uint8_t v4[16];

  v1 = (id *)(a1 + 32);
  if (qword_100417EF8 != -1)
  {
    dispatch_once(&qword_100417EF8, &stru_100406F48);
    v2 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_4;
    goto LABEL_3;
  }
  v2 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Connection invalidated", v4, 2u);
  }
LABEL_4:
  WeakRetained = objc_loadWeakRetained(v1);
  objc_msgSend(WeakRetained, "setExportedObject:", 0);

}

void sub_100324E80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100324E90(uint64_t a1, uint64_t a2)
{
  objc_copyWeak((id *)(a1 + 32), (id *)(a2 + 32));
}

void sub_100324E9C(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 32));
}

void sub_100324EA4()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100324EB8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  std::string::size_type size;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  double v12;
  std::string *v13;
  std::string::size_type v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  double v19;
  std::string *p_p;
  std::string::size_type v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  std::string __p;
  std::string v26;
  std::string v27;
  std::string v28;
  std::string v29;
  std::string v30;
  std::string v31;
  std::string v32;
  std::string v33;
  std::string v34;

  *((_BYTE *)&v28.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v28, "ActivityPolicy[");
  v4 = std::string::append(&v28, "interval=");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v29.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v27, *(double *)(a1 + 8));
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = &v27;
  else
    v6 = (std::string *)v27.__r_.__value_.__r.__words[0];
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v27.__r_.__value_.__r.__words[2]);
  else
    size = v27.__r_.__value_.__l.__size_;
  v8 = std::string::append(&v29, (const std::string::value_type *)v6, size);
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  v10 = std::string::append(&v30, ",grace period=");
  v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  v12 = *(double *)(a1 + 24);
  if (!*(_BYTE *)(a1 + 16))
    v12 = *(double *)(a1 + 8) * 0.5;
  std::to_string(&v26, v12);
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &v26;
  else
    v13 = (std::string *)v26.__r_.__value_.__r.__words[0];
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
  else
    v14 = v26.__r_.__value_.__l.__size_;
  v15 = std::string::append(&v31, (const std::string::value_type *)v13, v14);
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  v17 = std::string::append(&v32, ",delay=");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = *(double *)(a1 + 40);
  if (!*(_BYTE *)(a1 + 32))
    v19 = *(double *)(a1 + 8) * 0.5;
  std::to_string(&__p, v19);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v21 = __p.__r_.__value_.__l.__size_;
  v22 = std::string::append(&v33, (const std::string::value_type *)p_p, v21);
  v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  v24 = std::string::append(&v34, " ]");
  *a2 = *v24;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v34.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_25:
      if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_26;
      goto LABEL_36;
    }
  }
  else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_25;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_26:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_27;
    goto LABEL_37;
  }
LABEL_36:
  operator delete(v33.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_28;
    goto LABEL_38;
  }
LABEL_37:
  operator delete(v32.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_30;
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v31.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_31;
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v30.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v29.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_32;
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v27.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v29.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_43:
    operator delete(v28.__r_.__value_.__l.__data_);
    return;
  }
LABEL_42:
  operator delete(v29.__r_.__value_.__l.__data_);
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_43;
}

void sub_1003251B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  uint64_t v52;

  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a52 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a15);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a45 & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a47);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a40);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a38 & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a21);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a32 & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
LABEL_11:
    _Unwind_Resume(exception_object);
LABEL_21:
  operator delete(a27);
  _Unwind_Resume(exception_object);
}

void sub_10032532C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    JUMPOUT(0x10032531CLL);
  JUMPOUT(0x100325204);
}

_BYTE *sub_10032533C(_BYTE *result)
{
  if (result[32])
    result[32] = 0;
  if (result[16])
    result[16] = 0;
  if (*result)
    *result = 0;
  return result;
}

void sub_100325390(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100325424(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003255F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;
  id *v16;
  uint64_t v17;
  id *v18;

  v18 = v16;
  objc_destroyWeak(v18);
  objc_destroyWeak((id *)&a9);
  objc_destroyWeak(&location);
  objc_destroyWeak(v15);
  objc_destroyWeak((id *)(v17 - 56));
  _Unwind_Resume(a1);
}

void sub_100325628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;
  uint64_t v16;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v16 - 56));
  _Unwind_Resume(a1);
}

void sub_10032564C(uint64_t a1, void *a2)
{
  id *v2;
  _xpc_activity_s *v3;
  id WeakRetained;
  xpc_activity_state_t state;
  NSObject *v6;
  NSObject *v7;
  uint8_t v8[16];
  uint8_t buf[16];

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  if (!WeakRetained)
    goto LABEL_12;
  state = xpc_activity_get_state(v3);
  if (!state)
  {
    if (qword_100417EF8 == -1)
    {
      v7 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_DEFAULT))
      {
LABEL_11:
        objc_msgSend(WeakRetained, "handleTileCleanupCheckIn:", v3);
        goto LABEL_12;
      }
    }
    else
    {
      dispatch_once(&qword_100417EF8, &stru_100406FF8);
      v7 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
    }
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "@CtsClear, CHECK_IN", buf, 2u);
    goto LABEL_11;
  }
  if (state == 2)
  {
    if (qword_100417EF8 == -1)
    {
      v6 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_DEFAULT))
      {
LABEL_7:
        objc_msgSend(WeakRetained, "handleTileCleanup:", v3);
        goto LABEL_12;
      }
    }
    else
    {
      dispatch_once(&qword_100417EF8, &stru_100406FF8);
      v6 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_DEFAULT))
        goto LABEL_7;
    }
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "@CtsClear, RUN", v8, 2u);
    goto LABEL_7;
  }
LABEL_12:

}

void sub_1003257D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003257EC(uint64_t a1, uint64_t a2)
{
  objc_copyWeak((id *)(a1 + 32), (id *)(a2 + 32));
}

void sub_1003257F8(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 32));
}

void sub_100325800(uint64_t a1, void *a2)
{
  id *v2;
  _xpc_activity_s *v3;
  id WeakRetained;
  xpc_activity_state_t state;
  NSObject *v6;
  NSObject *v7;
  uint8_t v8[16];
  uint8_t buf[16];

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  if (!WeakRetained)
    goto LABEL_12;
  state = xpc_activity_get_state(v3);
  if (!state)
  {
    if (qword_100417EF8 == -1)
    {
      v7 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_DEFAULT))
      {
LABEL_11:
        objc_msgSend(WeakRetained, "handleVacuumDBsCheckIn:", v3);
        goto LABEL_12;
      }
    }
    else
    {
      dispatch_once(&qword_100417EF8, &stru_100406FF8);
      v7 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
    }
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "@CtsVacuum, CHECK_IN", buf, 2u);
    goto LABEL_11;
  }
  if (state == 2)
  {
    if (qword_100417EF8 == -1)
    {
      v6 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_DEFAULT))
      {
LABEL_7:
        objc_msgSend(WeakRetained, "handleVacuumDBs:", v3);
        goto LABEL_12;
      }
    }
    else
    {
      dispatch_once(&qword_100417EF8, &stru_100406FF8);
      v6 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_DEFAULT))
        goto LABEL_7;
    }
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "@CtsVacuum, RUN", v8, 2u);
    goto LABEL_7;
  }
LABEL_12:

}

void sub_100325988(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003259A0(uint64_t a1, uint64_t a2)
{
  objc_copyWeak((id *)(a1 + 32), (id *)(a2 + 32));
}

void sub_1003259AC(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 32));
}

void sub_100325DD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100325E3C(uint64_t a1, void *a2)
{
  const char *v3;
  int v4;
  const char **v5;
  xpc_object_t xdict;

  xdict = a2;
  if (*(_BYTE *)a1)
    xpc_dictionary_set_double(xdict, XPC_ACTIVITY_INTERVAL, *(double *)(a1 + 8));
  if (*(_BYTE *)(a1 + 16))
    xpc_dictionary_set_double(xdict, XPC_ACTIVITY_GRACE_PERIOD, *(double *)(a1 + 24));
  if (*(_BYTE *)(a1 + 32))
    xpc_dictionary_set_double(xdict, XPC_ACTIVITY_DELAY, *(double *)(a1 + 40));
  v3 = *(const char **)(a1 + 48);
  if (v3)
    xpc_dictionary_set_string(xdict, XPC_ACTIVITY_PRIORITY, v3);
  v4 = *(_DWORD *)(a1 + 56);
  if (v4 == 1)
  {
    v5 = (const char **)&XPC_ACTIVITY_REQUIRES_CLASS_B;
    goto LABEL_13;
  }
  if (v4 == 2)
  {
    v5 = (const char **)&XPC_ACTIVITY_REQUIRES_CLASS_C;
LABEL_13:
    xpc_dictionary_set_BOOL(xdict, *v5, 1);
  }

}

void sub_100325F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100325F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100325F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100325F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_100325F70(uint64_t a1, void *a2)
{
  double v2;
  double v3;
  double v4;
  id v6;
  xpc_object_t value;
  void *v8;
  void *v9;
  xpc_object_t v10;
  void *v11;
  void *v12;
  xpc_object_t v13;
  void *v14;
  void *v15;
  const char *string;

  v6 = a2;
  value = xpc_dictionary_get_value(v6, XPC_ACTIVITY_INTERVAL);
  v8 = (void *)objc_claimAutoreleasedReturnValue(value);
  v9 = v8;
  if (v8)
    v2 = xpc_double_get_value(v8);

  v10 = xpc_dictionary_get_value(v6, XPC_ACTIVITY_GRACE_PERIOD);
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  v12 = v11;
  if (v11)
    v3 = xpc_double_get_value(v11);

  v13 = xpc_dictionary_get_value(v6, XPC_ACTIVITY_DELAY);
  v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  v15 = v14;
  if (v14)
    v4 = xpc_double_get_value(v14);

  string = xpc_dictionary_get_string(v6, XPC_ACTIVITY_PRIORITY);
  *(_BYTE *)a1 = 0;
  if (v9)
  {
    *(double *)(a1 + 8) = v2;
    *(_BYTE *)a1 = 1;
  }
  *(_BYTE *)(a1 + 16) = 0;
  if (v12)
  {
    *(double *)(a1 + 24) = v3;
    *(_BYTE *)(a1 + 16) = 1;
  }
  *(_BYTE *)(a1 + 32) = 0;
  if (v15)
  {
    *(double *)(a1 + 40) = v4;
    *(_BYTE *)(a1 + 32) = 1;
  }
  *(_QWORD *)(a1 + 48) = string;
  *(_DWORD *)(a1 + 56) = 0;

  return a1;
}

void sub_1003260AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003260C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003260D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003260E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003260F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100326108(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100326118(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003262F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  v17 = v16;

  _Unwind_Resume(a1);
}

void sub_100326318(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100326328(uint64_t a1)
{
  NSObject *v2;
  xpc_activity_state_t state;
  int v4;
  xpc_activity_state_t v5;

  if (!xpc_activity_set_state(*(xpc_activity_t *)(a1 + 32), 5))
  {
    if (qword_100417EF8 != -1)
      dispatch_once(&qword_100417EF8, &stru_100406FF8);
    v2 = (id)qword_100417F00;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      state = xpc_activity_get_state(*(xpc_activity_t *)(a1 + 32));
      v4 = 134349056;
      v5 = state;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to mark vacuum db activity as done.  current state is %{public}ld", (uint8_t *)&v4, 0xCu);
    }

  }
}

void sub_10032640C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10032658C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003268B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100326934(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

uint64_t sub_100326964()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003269C0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100326A1C()
{
  void *v0;

  v0 = objc_autoreleasePoolPush();
  qword_10041A818 = 0x40E5180000000000;
  byte_10041A810 = 1;
  byte_10041A820 = 0;
  byte_10041A830 = 0;
  qword_10041A840 = (uint64_t)XPC_ACTIVITY_PRIORITY_MAINTENANCE;
  dword_10041A848 = 2;
  __cxa_atexit((void (*)(void *))sub_10032533C, &byte_10041A810, (void *)&_mh_execute_header);
  qword_10041A858 = 0x411FA40000000000;
  byte_10041A850 = 1;
  byte_10041A860 = 0;
  byte_10041A870 = 0;
  qword_10041A880 = (uint64_t)XPC_ACTIVITY_PRIORITY_MAINTENANCE;
  dword_10041A888 = 2;
  __cxa_atexit((void (*)(void *))sub_10032533C, &byte_10041A850, (void *)&_mh_execute_header);
  byte_10041A890 = 1;
  qword_10041A898 = 0x40C5180000000000;
  byte_10041A8A0 = 0;
  byte_10041A8B0 = 0;
  qword_10041A8C0 = (uint64_t)XPC_ACTIVITY_PRIORITY_MAINTENANCE;
  dword_10041A8C8 = 2;
  __cxa_atexit((void (*)(void *))sub_10032533C, &byte_10041A890, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100326BC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100326CE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100326CFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100326D10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100326D60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100326DC8(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = off_1003F64D8;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 68) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 225) = 0u;
  *(_QWORD *)(a1 + 248) = off_1003F6498;
  *(_QWORD *)(a1 + 256) = 0;
  *(_DWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  *(_BYTE *)(a1 + 280) &= 0xF0u;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 288) = off_1003F64B8;
  *(_QWORD *)(a1 + 296) = a1 + 304;
  *(_QWORD *)(a1 + 328) = 0;
  *(_QWORD *)(a1 + 336) = 0;
  *(_DWORD *)(a1 + 344) = 0;
  *(_QWORD *)(a1 + 320) = 0;
  *(_BYTE *)(a1 + 348) &= 0xF8u;
  *(_QWORD *)(a1 + 384) = 0;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 368) = 0;
  v2 = *(_BYTE *)(a1 + 402);
  *(_QWORD *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 360) = 0;
  *(_WORD *)(a1 + 400) = 0;
  *(_BYTE *)(a1 + 402) = ((v2 >> 2 << 18) | 0x10000u) >> 16;
  sub_100179604(a2, 12, 7, &v5);
  if (v6)
  {
    v3 = (unint64_t *)(v6 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  sub_1000F9FEC();
}

void sub_1003270EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a4);
  sub_1000F9F48((uint64_t)va);
  sub_1000F9ECC(v5 - 48);
  sub_1000E095C(v5 - 32);
  sub_100172368(v4);
  _Unwind_Resume(a1);
}

void sub_100327138(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100172368(v1);
  _Unwind_Resume(a1);
}

void sub_10032714C(uint64_t a1)
{
  char __p[21];
  char v2;
  std::string __dst;

  v2 = 20;
  strcpy(__p, "datarun_metadata.bin");
  if (*(char *)(a1 + 23) < 0)
    sub_10006CED8(&__dst, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __dst = *(std::string *)a1;
  sub_1000675EC(&__dst, (uint64_t)__p);
  if (v2 < 0)
    operator delete(*(void **)__p);
  sub_100326DC8((uint64_t)__p, (uint64_t)&__dst);
}

void sub_100327410(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a40 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1003274D0(uint64_t a1, uint64_t a2, _QWORD *__src, int a4)
{
  size_t v7;
  void *__srca[2];
  size_t __n;
  _QWORD __dst[3];
  int v11;
  void *v12[2];
  size_t v13;

  v7 = __src[2];
  __n = v7;
  __srca[0] = 0;
  if (v7 < 0x11)
  {
    memcpy(__srca, __src, v7);
    v13 = __n;
    v12[0] = 0;
    if (__n < 0x11)
    {
      memcpy(v12, __srca, __n);
      __dst[2] = v13;
      __dst[0] = 0;
      if (v13 <= 0x10)
      {
        memcpy(__dst, v12, v13);
        v11 = a4;
        sub_100327E00(a1, a2, (uint64_t)__dst);
      }
      operator new[]();
    }
    operator new[]();
  }
  operator new[]();
}

void sub_1003276A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  unint64_t v17;

  if (a17)
    operator delete[]();
  if (v17 >= 0x11)
  {
    if (a10)
      operator delete[]();
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_100327718(std::string *__dst, __int128 *a2, int a3)
{
  __int128 v5;
  uint64_t v6;
  void *v8[2];
  void *v9[2];
  char v10;
  std::string __p;
  std::string v12;

  if (*((char *)a2 + 23) < 0)
  {
    sub_10006CED8(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    __dst->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = v5;
  }
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = 12;
  strcpy((char *)&__p, "hybridlogger");
  if (SHIBYTE(__dst->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_10006CED8(&__dst[1], __dst->__r_.__value_.__l.__data_, __dst->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&__dst[1].__r_.__value_.__l.__data_ = *(_OWORD *)&__dst->__r_.__value_.__l.__data_;
    __dst[1].__r_.__value_.__r.__words[2] = __dst->__r_.__value_.__r.__words[2];
  }
  sub_1000675EC(__dst + 1, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = 11;
  strcpy((char *)&__p, "unprocessed");
  if (SHIBYTE(__dst->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_10006CED8(&__dst[2], __dst->__r_.__value_.__l.__data_, __dst->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&__dst[2].__r_.__value_.__l.__data_ = *(_OWORD *)&__dst->__r_.__value_.__l.__data_;
    __dst[2].__r_.__value_.__r.__words[2] = __dst->__r_.__value_.__r.__words[2];
  }
  sub_1000675EC(__dst + 2, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  __dst[3].__r_.__value_.__s.__data_[0] = a3;
  sub_1000681BC(__dst);
  if (!v6)
  {
    sub_1000D5048(v9, "");
    sub_100170980("Need absolute directory for datarundb", &__p);
    sub_100174738((uint64_t)v9, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v10 < 0)
      operator delete(v9[0]);
    sub_1000F2AE4((uint64_t)v8);
  }
  if (a3)
  {
    sub_10006DB18((const char *)&__dst[2], 0, (int *)&__p);
    if (LODWORD(__p.__r_.__value_.__l.__data_) == 3)
    {
      sub_10003AAF0((uint64_t)&__dst[1], 0);
      goto LABEL_18;
    }
    sub_1000D5048(v9, "");
    sub_100263C90("Couldn't find unprocessed directory @ ", &__p);
    sub_1000F8A40((uint64_t)&__dst[2], &v12);
    sub_100174738((uint64_t)v9, (uint64_t)&__p, 2);
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v12.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_31:
        if ((v10 & 0x80000000) == 0)
          goto LABEL_32;
LABEL_38:
        operator delete(v9[0]);
LABEL_32:
        sub_1000F2AE4((uint64_t)v8);
      }
    }
    else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_31;
    }
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_32;
    goto LABEL_38;
  }
LABEL_18:
  sub_10006DB18((const char *)&__dst[1], 0, (int *)&__p);
  if (LODWORD(__p.__r_.__value_.__l.__data_) != 3)
  {
    sub_1000D5048(v9, "");
    sub_1000F9D38("Couldn't find rootdir @ ", &__p);
    sub_1000F8A40((uint64_t)&__dst[1], &v12);
    sub_100174738((uint64_t)v9, (uint64_t)&__p, 2);
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v12.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_27:
        if ((v10 & 0x80000000) == 0)
          goto LABEL_28;
LABEL_35:
        operator delete(v9[0]);
LABEL_28:
        sub_1000F2AE4((uint64_t)v8);
      }
    }
    else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_27;
    }
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_28;
    goto LABEL_35;
  }
  return __dst;
}

void sub_100327A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;
  void **v28;
  void **v29;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v27 + 71) < 0)
    operator delete(*v29);
  if (*(char *)(v27 + 47) < 0)
    operator delete(*v28);
  if (*(char *)(v27 + 23) < 0)
    operator delete(*(void **)v27);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100327B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  BOOL v8;
  int v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t *result;
  void *__p[2];
  uint64_t v14;
  void *v15[2];
  char v16;
  double v17;
  unsigned int *v18;
  unsigned int *v19;
  _QWORD v20[2];
  uint64_t v21;

  v20[0] = 0;
  v20[1] = 0;
  v21 = 0;
  v19 = 0;
  sub_1000D52F4(&v19, a1 + 24, 0, v20);
  v18 = 0;
  v5 = v19;
  if (v19)
  {
    v6 = 0;
    do
    {
      if ((!v5 || *((_QWORD *)v5 + 1) == *((_QWORD *)v5 + 2)) && (!v6 || *((_QWORD *)v6 + 1) == *((_QWORD *)v6 + 2)))
        break;
      if ((v21 & 1) == 0 || (v21 == 1 ? (v8 = LODWORD(v20[0]) == 0) : (v8 = 0), v8))
      {
        sub_10006D828(*(_QWORD *)(*((_QWORD *)v5 + 2) - 8) + 8, 0, &v17);
        if (LODWORD(v17) == 3)
        {
          sub_1000C1E68((_BYTE *)(*(_QWORD *)(*((_QWORD *)v19 + 2) - 8) + 8), (uint64_t)v15);
          if (*(char *)(a2 + 23) < 0)
          {
            sub_10006CED8(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
          }
          else
          {
            *(_OWORD *)__p = *(_OWORD *)a2;
            v14 = *(_QWORD *)(a2 + 16);
          }
          v9 = sub_10003B4F4((unint64_t)v15, (unint64_t)__p);
          if (SHIBYTE(v14) < 0)
          {
            operator delete(__p[0]);
            if (v16 < 0)
            {
LABEL_24:
              operator delete(v15[0]);
              if (!v9)
LABEL_29:
                sub_10032714C(*(_QWORD *)(*((_QWORD *)v19 + 2) - 8) + 8);
              goto LABEL_25;
            }
          }
          else if (v16 < 0)
          {
            goto LABEL_24;
          }
          if (!v9)
            goto LABEL_29;
        }
      }
LABEL_25:
      sub_1000D5710(&v19, v20);
      v10 = v19;
      __p[0] = v19;
      if (v19)
      {
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 + 1, v10));
        v10 = (unsigned int *)__p[0];
        v7 = v19;
      }
      else
      {
        v7 = 0;
      }
      __p[0] = v7;
      v19 = v10;
      sub_1000D6644((uint64_t *)__p);
      v6 = v18;
      v5 = v19;
    }
    while (v19 != v18);
  }
  sub_1000D6644((uint64_t *)&v18);
  result = sub_1000D6644((uint64_t *)&v19);
  *a3 = 0;
  return result;
}

void sub_100327D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  sub_1000D6644((uint64_t *)(v21 - 72));
  sub_1000D6644((uint64_t *)(v21 - 64));
  _Unwind_Resume(a1);
}

void sub_100327E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  _QWORD v10[3];
  _QWORD v11[3];
  int v12;

  v4 = *(char *)(a2 + 23);
  v5 = v4 < 0;
  if (v4 >= 0)
    v6 = a2;
  else
    v6 = *(_QWORD *)a2;
  v7 = *(unsigned __int8 *)(a2 + 23);
  if (v5)
    v7 = *(_QWORD *)(a2 + 8);
  v8 = v6 + v7;
  v9 = *(_QWORD *)(a3 + 16);
  v11[2] = v9;
  v11[0] = 0;
  if (v9 < 0x11)
  {
    memcpy(v11, (const void *)a3, v9);
    v12 = *(_DWORD *)(a3 + 24);
    sub_100328310(v10, v6, v8, (uint64_t)v11);
  }
  operator new[]();
}

void sub_1003281C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  if (a2)
    sub_1000CDD68(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100328270(uint64_t *a1)
{
  uint64_t v2;
  void (*v3)(uint64_t *, uint64_t *, uint64_t);

  v2 = *a1;
  if (*a1)
  {
    if ((v2 & 1) == 0)
    {
      v3 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 & 0xFFFFFFFFFFFFFFFELL);
      if (v3)
        v3(a1 + 1, a1 + 1, 2);
    }
    *a1 = 0;
  }
  return a1;
}

uint64_t *sub_1003282C0(uint64_t *a1)
{
  uint64_t v2;
  void (*v3)(uint64_t *, uint64_t *, uint64_t);

  v2 = *a1;
  if (*a1)
  {
    if ((v2 & 1) == 0)
    {
      v3 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 & 0xFFFFFFFFFFFFFFFELL);
      if (v3)
        v3(a1 + 1, a1 + 1, 2);
    }
    *a1 = 0;
  }
  return a1;
}

void sub_100328310(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  size_t v6;
  _QWORD v7[3];
  int v8;

  v6 = *(_QWORD *)(a4 + 16);
  v7[2] = v6;
  v7[0] = 0;
  if (v6 < 0x11)
  {
    memcpy(v7, (const void *)a4, v6);
    v8 = *(_DWORD *)(a4 + 24);
    sub_1003284D4(a1, (uint64_t)v7);
  }
  operator new[]();
}

void sub_100328484(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_100328684(v1);
  _Unwind_Resume(a1);
}

void sub_100328498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a12 >= 0x11)
  {
    if (a10)
      operator delete[]();
  }
  _Unwind_Resume(exception_object);
}

void sub_1003284D4(_QWORD *a1, uint64_t a2)
{
  size_t v4;
  int v5;
  void *__src[2];
  size_t __n;
  int v8;
  _QWORD v9[3];
  int v10;

  v4 = *(_QWORD *)(a2 + 16);
  __n = v4;
  __src[0] = 0;
  if (v4 < 0x11)
  {
    memcpy(__src, (const void *)a2, v4);
    v5 = *(_DWORD *)(a2 + 24);
    v8 = v5;
    *a1 = 0;
    v9[2] = __n;
    v9[0] = 0;
    if (__n < 0x11)
    {
      memcpy(v9, __src, __n);
      v10 = v5;
      sub_1003286D4((uint64_t)a1, (uint64_t)v9);
    }
    operator new[]();
  }
  operator new[]();
}

void sub_10032862C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  if (a10)
    operator delete[]();
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100328684(uint64_t *a1)
{
  uint64_t v2;
  void (*v3)(uint64_t *, uint64_t *, uint64_t);

  v2 = *a1;
  if (*a1)
  {
    if ((v2 & 1) == 0)
    {
      v3 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 & 0xFFFFFFFFFFFFFFFELL);
      if (v3)
        v3(a1 + 1, a1 + 1, 2);
    }
    *a1 = 0;
  }
  return a1;
}

void sub_1003286D4(uint64_t a1, uint64_t a2)
{
  size_t v3;
  int v4;
  void *__src[2];
  size_t __n;
  int v7;
  _QWORD v8[3];
  int v9;

  v3 = *(_QWORD *)(a2 + 16);
  __n = v3;
  __src[0] = 0;
  if (v3 < 0x11)
  {
    memcpy(__src, (const void *)a2, v3);
    v4 = *(_DWORD *)(a2 + 24);
    v7 = v4;
    v8[2] = __n;
    v8[0] = 0;
    if (__n < 0x11)
    {
      memcpy(v8, __src, __n);
      v9 = v4;
      sub_1003288A4((uint64_t)off_100407030, (uint64_t)v8);
    }
    operator new[]();
  }
  operator new[]();
}

void sub_100328844(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  if (a10)
    operator delete[]();
  _Unwind_Resume(exception_object);
}

char *sub_10032889C(_QWORD **a1, char *a2, char *a3)
{
  return sub_10022AC74(*a1, a2, a3);
}

void sub_1003288A4(uint64_t a1, uint64_t a2)
{
  size_t v3;
  _QWORD __src[3];
  int v5;

  v3 = *(_QWORD *)(a2 + 16);
  __src[2] = v3;
  __src[0] = 0;
  if (v3 < 0x11)
  {
    memcpy(__src, (const void *)a2, v3);
    v5 = *(_DWORD *)(a2 + 24);
    operator new();
  }
  operator new[]();
}

void sub_1003289EC()
{
  operator delete();
}

_QWORD *sub_100328A40(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  void (*v10)(__int128 *, __int128 *, uint64_t);
  void (*v11)(__int128 *, __int128 *, uint64_t);
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  char v24;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v19 = 0;
  v6 = *(_QWORD *)a2;
  if (*(_QWORD *)a2)
  {
    v19 = *(_QWORD *)a2;
    if ((v6 & 1) != 0)
    {
      v20 = *(_OWORD *)(a2 + 8);
      v21 = *(_QWORD *)(a2 + 24);
    }
    else
    {
      (*(void (**)(uint64_t, __int128 *, _QWORD))(v6 & 0xFFFFFFFFFFFFFFFELL))(a2 + 8, &v20, 0);
    }
  }
  v7 = *(_OWORD *)(a2 + 48);
  v22 = *(_OWORD *)(a2 + 32);
  v23 = v7;
  v24 = *(_BYTE *)(a2 + 64);
  v13 = 0;
  v8 = *a3;
  if (*a3)
  {
    v13 = *a3;
    if ((v8 & 1) != 0)
    {
      v14 = *(_OWORD *)(a3 + 1);
      v15 = a3[3];
    }
    else
    {
      (*(void (**)(uint64_t *, __int128 *, _QWORD))(v8 & 0xFFFFFFFFFFFFFFFELL))(a3 + 1, &v14, 0);
    }
  }
  v9 = *((_OWORD *)a3 + 3);
  v16 = *((_OWORD *)a3 + 2);
  v17 = v9;
  v18 = *((_BYTE *)a3 + 64);
  sub_100328BCC((uint64_t)a1, &v19, (uint64_t)&v13);
  if (v13)
  {
    if ((v13 & 1) == 0)
    {
      v10 = *(void (**)(__int128 *, __int128 *, uint64_t))(v13 & 0xFFFFFFFFFFFFFFFELL);
      if (v10)
        v10(&v14, &v14, 2);
    }
    v13 = 0;
  }
  if (v19)
  {
    if ((v19 & 1) == 0)
    {
      v11 = *(void (**)(__int128 *, __int128 *, uint64_t))(v19 & 0xFFFFFFFFFFFFFFFELL);
      if (v11)
        v11(&v20, &v20, 2);
    }
  }
  return a1;
}

void sub_100328B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_1003282C0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_100328BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  sub_1003282C0(&a9);
  sub_1003282C0(&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_100328BCC(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  BOOL v7;
  int v8;
  const void *v9;
  const void *v10;
  size_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  _OWORD *v15;
  _BYTE *v16;
  char *v17;
  __int128 *v18;
  _OWORD *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  uint64_t v31;
  void *__p[2];
  unint64_t v33;
  uint64_t v34;
  char v35;

  v5 = result;
  v34 = result;
  v35 = 0;
  v6 = a2 + 1;
  while (1)
  {
    v7 = *a2 && *((_BYTE *)a2 + 64) == 0;
    v8 = !v7;
    if (*(_QWORD *)a3)
      break;
    if ((v8 & 1) != 0)
      return result;
LABEL_19:
    v13 = a2[4];
    v12 = (char *)a2[5];
    v14 = (unint64_t)&v12[-v13];
    if ((unint64_t)&v12[-v13] >= 0x7FFFFFFFFFFFFFF8)
      sub_1000CDE30();
    if (v14 > 0x16)
    {
      v22 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v14 | 7) != 0x17)
        v22 = v14 | 7;
      v23 = v22 + 1;
      v15 = operator new(v22 + 1);
      __p[1] = &v12[-v13];
      v33 = v23 | 0x8000000000000000;
      __p[0] = v15;
      if ((char *)v13 == v12)
      {
LABEL_31:
        v16 = v15;
        goto LABEL_34;
      }
    }
    else
    {
      HIBYTE(v33) = (_BYTE)v12 - v13;
      v15 = __p;
      if ((char *)v13 == v12)
        goto LABEL_31;
    }
    if (v14 < 0x20 || (unint64_t)v15 - v13 < 0x20)
    {
      v16 = v15;
      v17 = (char *)v13;
      do
      {
LABEL_33:
        v24 = *v17++;
        *v16++ = v24;
      }
      while (v17 != v12);
      goto LABEL_34;
    }
    v16 = (char *)v15 + (v14 & 0xFFFFFFFFFFFFFFE0);
    v17 = (char *)(v13 + (v14 & 0xFFFFFFFFFFFFFFE0));
    v18 = (__int128 *)(v13 + 16);
    v19 = v15 + 1;
    v20 = v14 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      v21 = *v18;
      *(v19 - 1) = *(v18 - 1);
      *v19 = v21;
      v18 += 2;
      v19 += 2;
      v20 -= 32;
    }
    while (v20);
    if (v14 != (v14 & 0xFFFFFFFFFFFFFFE0))
      goto LABEL_33;
LABEL_34:
    *v16 = 0;
    v25 = *(_QWORD *)(v5 + 8);
    if (v25 >= *(_QWORD *)(v5 + 16))
    {
      v29 = sub_1001697DC((void **)v5, (uint64_t)__p);
      v30 = SHIBYTE(v33);
      *(_QWORD *)(v5 + 8) = v29;
      if (v30 < 0)
      {
        operator delete(__p[0]);
        v27 = a2[7];
        v28 = *a2;
        if (*a2)
        {
LABEL_39:
          result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))((v28 & 0xFFFFFFFFFFFFFFFELL) + 8))(v6, a2[6], v27);
          v27 = a2[7];
          if (result != v27)
            goto LABEL_2;
          goto LABEL_43;
        }
      }
      else
      {
        v27 = a2[7];
        v28 = *a2;
        if (*a2)
          goto LABEL_39;
      }
    }
    else
    {
      v26 = *(_OWORD *)__p;
      *(_QWORD *)(v25 + 16) = v33;
      *(_OWORD *)v25 = v26;
      *(_QWORD *)(v5 + 8) = v25 + 24;
      v27 = a2[7];
      v28 = *a2;
      if (*a2)
        goto LABEL_39;
    }
    v31 = v27;
    result = v27;
LABEL_43:
    if (v31 == v27 && a2[5] == v27)
      *((_BYTE *)a2 + 64) = 1;
LABEL_2:
    a2[4] = a2[6];
    a2[5] = result;
    a2[6] = v31;
  }
  if (((*(_BYTE *)(a3 + 64) == 0) & ~v8) == 0)
  {
    if (((v8 ^ (*(_BYTE *)(a3 + 64) != 0)) & 1) == 0)
      return result;
    goto LABEL_19;
  }
  v9 = (const void *)a2[4];
  v10 = *(const void **)(a3 + 32);
  v11 = a2[5] - (_QWORD)v9;
  if (v11 != *(_QWORD *)(a3 + 40) - (_QWORD)v10)
    goto LABEL_19;
  result = memcmp(v9, v10, v11);
  if ((_DWORD)result || a2[6] != *(_QWORD *)(a3 + 48) || a2[7] != *(_QWORD *)(a3 + 56))
    goto LABEL_19;
  return result;
}

void sub_100328E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void **a16)
{
  sub_1000FCFAC(&a16);
  _Unwind_Resume(a1);
}

void sub_100328E98(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100407050;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100328EA8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100407050;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_100328ED8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_100328EE8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100328F44()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10032915C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100329174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1003291AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003293C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_100195804((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_100329548(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10032955C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10032956C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003295AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1003295BC(uint64_t a1)
{

  return a1;
}

void sub_1003295E4(uint64_t a1, char a2, int a3)
{
  NSObject *v5;
  id v6;
  void *v7;
  _QWORD block[4];
  id v9[2];

  v5 = *(NSObject **)(a1 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100014054;
  block[3] = &unk_1004072A0;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  LOBYTE(v7) = a2;
  HIDWORD(v7) = a3;
  objc_copyWeak(v9, &v6);
  v9[1] = v7;
  dispatch_async(v5, block);
  objc_destroyWeak(&v6);
  objc_destroyWeak(v9);
}

uint64_t sub_100329690(uint64_t a1)
{

  return a1;
}

uint64_t sub_1003296E0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_10007CDC0(a1 + 16);
    *(_BYTE *)(a1 + 8) = 0;
  }

  return a1;
}

void sub_1003298E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100329A94(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x100329954);
}

void sub_100329AA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100329AB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100329ACC(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "xpcConnection"));
  objc_msgSend(WeakRetained, "notify:failedWithReason:", v3, *(_QWORD *)(a1 + 32));

  objc_autoreleasePoolPop(v2);
}

void sub_100329B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100329B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100329BB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100329BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100329CC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100329E80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

BOOL sub_100329ECC(id a1, CLPrefetchFloorRequest *a2, unint64_t a3, BOOL *a4)
{
  CLPrefetchFloorRequest *v4;
  BOOL v5;

  v4 = a2;
  v5 = !+[CLLocationContextUtil isRegional:](CLLocationContextUtil, "isRegional:", -[CLPrefetchFloorRequest locationContext](v4, "locationContext"));

  return v5;
}

void sub_100329F10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_100329F20(id a1, CLPrefetchFloorRequest *a2, unint64_t a3, BOOL *a4)
{
  CLPrefetchFloorRequest *v4;
  BOOL v5;

  v4 = a2;
  v5 = +[CLLocationContextUtil isRegional:](CLLocationContextUtil, "isRegional:", -[CLPrefetchFloorRequest locationContext](v4, "locationContext"));

  return v5;
}

void sub_100329F64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10032A058(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10032A33C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_10032A388(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  id v4;
  char v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  std::__shared_weak_count *v12;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 856);
    v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "floorUuid")));
    sub_10004BE28(&v11, (const char *)objc_msgSend(v4, "UTF8String"));
    v5 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(_QWORD *)v3 + 64))(v3, &v11);
    v6 = v12;
    if (!v12)
      goto LABEL_6;
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);

      if ((v5 & 1) != 0)
        goto LABEL_7;
    }
    else
    {
LABEL_6:

      if ((v5 & 1) != 0)
      {
LABEL_7:
        objc_msgSend(WeakRetained, "foregroundRequestCompleted:", *(_QWORD *)(a1 + 40));
        goto LABEL_13;
      }
    }
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentForegroundFetchRequest"));
    objc_msgSend(v9, "requestDidComplete:withError:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

    if (+[IndoorRequestInfo isMetadata:](IndoorRequestInfo, "isMetadata:", objc_msgSend(*(id *)(a1 + 40), "kind"))|| (objc_msgSend(*(id *)(a1 + 40), "allowCellularDownloadTile") & 1) != 0)
    {
      objc_msgSend(WeakRetained, "notifyProxyOfDownloadError");
    }
    else
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[CLIndoorProvider makeReason:withCode:withFailure:](CLIndoorProvider, "makeReason:withCode:withFailure:", CFSTR("wifi-only download request failed"), 4, 0));
      objc_msgSend(WeakRetained, "notifyProxyOfDownloadError:", v10);

    }
  }
LABEL_13:

}

void sub_10032A4F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10032A518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;

  sub_100195804((uint64_t)&a9);

  _Unwind_Resume(a1);
}

void sub_10032A534(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10032A544(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10032A558(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void **sub_10032A568(void **a1)
{
  void **v2;
  void **v3;
  void *v4;

  v2 = (void **)*a1;
  if (*a1)
  {
    v3 = (void **)a1[1];
    v4 = *a1;
    if (v3 == v2)
    {
LABEL_11:
      a1[1] = v2;
      operator delete(v4);
      return a1;
    }
    while (1)
    {
      if (*((char *)v3 - 9) < 0)
      {
        operator delete(*(v3 - 4));
        if (*((char *)v3 - 33) < 0)
LABEL_9:
          operator delete(*(v3 - 7));
      }
      else if (*((char *)v3 - 33) < 0)
      {
        goto LABEL_9;
      }
      v3 -= 7;
      if (v3 == v2)
      {
        v4 = *a1;
        goto LABEL_11;
      }
    }
  }
  return a1;
}

void sub_10032ADA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, std::runtime_error a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  void *v55;
  void *v56;

  if (a19 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

uint64_t sub_10032B014(uint64_t a1)
{
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_6:
    operator delete(*(void **)(a1 + 24));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
      return a1;
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0)
    goto LABEL_6;
LABEL_3:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
    return a1;
LABEL_7:
  operator delete(*(void **)a1);
  return a1;
}

void sub_10032B568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34)
{
  void *v34;

  if (a32 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_10032BAA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  void *v55;

  if (a14 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

uint64_t sub_10032BB28(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 32) = *(_QWORD *)(a2 + 32);
  return result;
}

id *sub_10032BB34(id *result, id *a2, int a3, char a4)
{
  NSObject *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  const char *v10;
  size_t v11;
  size_t v12;
  __int128 *p_dst;
  uint64_t v14;
  void **v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  __int128 v27;
  void **v28;
  id *v29;
  id obj;
  __int128 __dst;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD v37[3];
  char v38;
  uint8_t buf[8];
  uint64_t v40;
  uint64_t (**v41)();
  uint64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int16 v52;
  _BYTE v53[128];

  v29 = result;
  if (!a3 || (a4 & 1) != 0)
    goto LABEL_7;
  if (qword_100417EF8 != -1)
  {
    dispatch_once(&qword_100417EF8, &stru_100407200);
    v5 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_6;
    goto LABEL_5;
  }
  v5 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_5:
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "updateUniverse calling changeLocationGroup with the new universe", buf, 2u);
  }
LABEL_6:
  result = (id *)objc_msgSend(v29[4], "changeLocationGroups:", *a2);
LABEL_7:
  if (!*((_QWORD *)v29[4] + 31))
    return result;
  *(_QWORD *)buf = off_1003F9818;
  v40 = 0;
  v42 = 0;
  v43 = 0;
  v41 = off_1003F9A88;
  v44 &= 0xFCu;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v48 = 0;
  v49 = 0u;
  v50 = 0u;
  v51 = 0u;
  v52 &= 0xFE00u;
  sub_100060878((uint64_t)buf, (uint64_t)a2[1]);
  v37[1] = 0;
  v37[2] = 0;
  v37[0] = off_1003F9A88;
  v38 &= 0xFCu;
  sub_1000504A8((uint64_t)v37, *(double *)((char *)a2 + 116));
  sub_1000504A0((uint64_t)v37, *(double *)((char *)a2 + 124));
  sub_10019DB74((uint64_t)buf, (uint64_t)v37);
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  obj = *a2;
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v53, 16);
  if (!v6)
    goto LABEL_46;
  v7 = *(_QWORD *)v34;
  do
  {
    v8 = 0;
    do
    {
      if (*(_QWORD *)v34 != v7)
        objc_enumerationMutation(obj);
      v9 = objc_retainAutorelease(*(id *)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)v8));
      v10 = (const char *)objc_msgSend(v9, "UTF8String");
      v11 = strlen(v10);
      if (v11 >= 0x7FFFFFFFFFFFFFF8)
        sub_1000CDE30();
      v12 = v11;
      if (v11 >= 0x17)
      {
        v17 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v11 | 7) != 0x17)
          v17 = v11 | 7;
        v18 = v17 + 1;
        p_dst = (__int128 *)operator new(v17 + 1);
        *((_QWORD *)&__dst + 1) = v12;
        v32 = v18 | 0x8000000000000000;
        *(_QWORD *)&__dst = p_dst;
      }
      else
      {
        HIBYTE(v32) = v11;
        p_dst = &__dst;
        if (!v11)
        {
          LOBYTE(__dst) = 0;
          v15 = (void **)*((_QWORD *)&v45 + 1);
          v14 = v46;
          if (*((_QWORD *)&v45 + 1) < (unint64_t)v46)
            goto LABEL_17;
          goto LABEL_22;
        }
      }
      memmove(p_dst, v10, v12);
      *((_BYTE *)p_dst + v12) = 0;
      v15 = (void **)*((_QWORD *)&v45 + 1);
      v14 = v46;
      if (*((_QWORD *)&v45 + 1) < (unint64_t)v46)
      {
LABEL_17:
        v16 = __dst;
        v15[2] = (void *)v32;
        *(_OWORD *)v15 = v16;
        *((_QWORD *)&v45 + 1) = v15 + 3;
        goto LABEL_44;
      }
LABEL_22:
      v19 = (void **)v45;
      v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)((uint64_t)v15 - v45) >> 3);
      v21 = v20 + 1;
      if (v20 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_1000D02C0();
      v22 = 0xAAAAAAAAAAAAAAABLL * ((v14 - (uint64_t)v45) >> 3);
      if (2 * v22 > v21)
        v21 = 2 * v22;
      if (v22 >= 0x555555555555555)
        v23 = 0xAAAAAAAAAAAAAAALL;
      else
        v23 = v21;
      if (v23)
      {
        if (v23 > 0xAAAAAAAAAAAAAAALL)
          sub_1000CDEB8();
        v24 = (char *)operator new(24 * v23);
      }
      else
      {
        v24 = 0;
      }
      v25 = &v24[24 * v20];
      *(_OWORD *)v25 = __dst;
      *((_QWORD *)v25 + 2) = v32;
      v32 = 0;
      __dst = 0uLL;
      v26 = v25 + 24;
      if (v15 == v19)
      {
        *(_QWORD *)&v45 = v25;
        *((_QWORD *)&v45 + 1) = v25 + 24;
        *(_QWORD *)&v46 = &v24[24 * v23];
      }
      else
      {
        do
        {
          v27 = *(_OWORD *)(v15 - 3);
          *((_QWORD *)v25 - 1) = *(v15 - 1);
          *(_OWORD *)(v25 - 24) = v27;
          v25 -= 24;
          *(v15 - 2) = 0;
          *(v15 - 1) = 0;
          *(v15 - 3) = 0;
          v15 -= 3;
        }
        while (v15 != v19);
        v28 = (void **)*((_QWORD *)&v45 + 1);
        v15 = (void **)v45;
        *(_QWORD *)&v45 = v25;
        *((_QWORD *)&v45 + 1) = v26;
        *(_QWORD *)&v46 = &v24[24 * v23];
        while (v28 != v15)
        {
          if (*((char *)v28 - 1) < 0)
            operator delete(*(v28 - 3));
          v28 -= 3;
        }
      }
      if (v15)
        operator delete(v15);
      *((_QWORD *)&v45 + 1) = v26;
      if (SHIBYTE(v32) < 0)
        operator delete((void *)__dst);
LABEL_44:

      v8 = (char *)v8 + 1;
    }
    while (v8 != v6);
    v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v53, 16);
  }
  while (v6);
LABEL_46:

  sub_100166888(*((_QWORD *)v29[4] + 31), (uint64_t)buf);
  nullsub_22(v37);
  return (id *)sub_10019DB4C(buf);
}

void sub_10032BFB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{

  nullsub_22(&a26);
  sub_10019DB4C(&a30);
  _Unwind_Resume(a1);
}

id sub_10032C04C(uint64_t a1, uint64_t a2)
{
  id result;

  result = *(id *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

void sub_10032C074(uint64_t a1)
{

}

void sub_10032C5F0()
{
  operator delete();
}

void sub_10032C9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36)
{
  void *v36;
  uint64_t v37;

  sub_10010B1CC(&a36);
  sub_100051F2C(v37 - 120);

  _Unwind_Resume(a1);
}

void sub_10032CCE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32)
{
  void *v32;
  uint64_t v33;

  sub_100114EB8(&a32);
  sub_100051F2C(v33 - 120);

  _Unwind_Resume(a1);
}

void sub_10032CE68(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

void sub_10032CE98(uint64_t a1)
{

  operator delete();
}

void sub_10032CED0(uint64_t a1)
{

  operator delete();
}

void sub_10032CF08()
{
  operator delete();
}

uint64_t sub_10032CF1C()
{
  return 0;
}

void sub_10032CF24(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  void **v5;
  __int128 v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;

  if (*(_BYTE *)a1)
  {
    if (*(_BYTE *)a2)
    {
      v4 = (__int128 *)(a2 + 8);
      v5 = (void **)(a1 + 8);
      if (*(char *)(a1 + 31) < 0)
        operator delete(*v5);
      v6 = *v4;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_OWORD *)v5 = v6;
      *(_BYTE *)(a2 + 31) = 0;
      *(_BYTE *)(a2 + 8) = 0;
      v7 = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 40) = 0;
      v8 = *(std::__shared_weak_count **)(a1 + 40);
      *(_OWORD *)(a1 + 32) = v7;
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      return;
    }
    v12 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v12)
      goto LABEL_18;
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
      if ((*(char *)(a1 + 31) & 0x80000000) == 0)
        goto LABEL_19;
    }
    else
    {
LABEL_18:
      if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      {
LABEL_19:
        *(_BYTE *)a1 = 0;
        return;
      }
    }
    operator delete(*(void **)(a1 + 8));
    *(_BYTE *)a1 = 0;
    return;
  }
  if (*(_BYTE *)a2)
  {
    v11 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v11;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    *(_BYTE *)a1 = 1;
  }
}

id sub_10032D098()
{
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1004073A8);
  return (id)qword_100417EE0;
}

void sub_10032D0E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

dirent *sub_10032D114(unsigned int **a1, unsigned int **a2, uint64_t a3)
{
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  dirent *v7;
  dirent *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v18;
  unsigned int *v19;
  dirent *v20[2];
  _QWORD v21[3];

  v3 = *a1;
  v19 = v3;
  if (v3)
  {
    do
      v4 = __ldaxr(v3);
    while (__stlxr(v4 + 1, v3));
  }
  v5 = *a2;
  v18 = v5;
  if (v5)
  {
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 + 1, v5));
  }
  sub_10032D308(&v19, (uint64_t *)&v18, a3, v20);
  v8 = v20[0];
  v7 = v20[1];
  if (v20[0])
  {
    do
    {
      v9 = __ldaxr((unsigned int *)v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, (unsigned int *)v8));
    if (!v10)
    {
      sub_10006CF64((DIR **)&v8->d_name[27], (void **)&v8->d_name[35], v21);
      if (v8->d_name[10] < 0)
        operator delete((void *)v8->d_seekoff);
      operator delete();
    }
  }
  v11 = (uint64_t)v18;
  if (v18)
  {
    do
    {
      v12 = __ldaxr((unsigned int *)v11);
      v13 = v12 - 1;
    }
    while (__stlxr(v13, (unsigned int *)v11));
    if (!v13)
    {
      sub_10006CF64((DIR **)(v11 + 48), (void **)(v11 + 56), v21);
      if (*(char *)(v11 + 31) < 0)
        operator delete(*(void **)(v11 + 8));
      operator delete();
    }
  }
  v14 = v19;
  if (v19)
  {
    do
    {
      v15 = __ldaxr(v14);
      v16 = v15 - 1;
    }
    while (__stlxr(v16, v14));
    if (!v16)
    {
      sub_10006CF64((DIR **)v14 + 6, (void **)v14 + 7, v21);
      if (*((char *)v14 + 31) < 0)
        operator delete(*((void **)v14 + 1));
      operator delete();
    }
  }
  return v7;
}

void sub_10032D27C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_1000FE490((uint64_t *)va);
  sub_1000FE490((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void **sub_10032D298(void **a1)
{
  void **v2;
  void **v3;
  void *v4;

  v2 = (void **)*a1;
  if (*a1)
  {
    v3 = (void **)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        if (*((char *)v3 - 17) < 0)
          operator delete(*(v3 - 5));
        v3 -= 5;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_10032D308(unsigned int **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, dirent **a4@<X8>)
{
  unsigned int *v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  _QWORD v13[3];

  v4 = *a1;
  *a1 = 0;
  v11 = *a2;
  v12 = v4;
  *a2 = 0;
  sub_10032D40C(&v12, &v11, a3, a4);
  v5 = v11;
  if (v11)
  {
    do
    {
      v6 = __ldaxr((unsigned int *)v5);
      v7 = v6 - 1;
    }
    while (__stlxr(v7, (unsigned int *)v5));
    if (!v7)
    {
      sub_10006CF64((DIR **)(v5 + 48), (void **)(v5 + 56), v13);
      if (*(char *)(v5 + 31) < 0)
        operator delete(*(void **)(v5 + 8));
      operator delete();
    }
  }
  v8 = v12;
  if (v12)
  {
    do
    {
      v9 = __ldaxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
    {
      sub_10006CF64((DIR **)v8 + 6, (void **)v8 + 7, v13);
      if (*((char *)v8 + 31) < 0)
        operator delete(*((void **)v8 + 1));
      operator delete();
    }
  }
}

void sub_10032D3F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_1000FE490((uint64_t *)va);
  sub_1000FE490((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_10032D40C(unsigned int **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, dirent **a4@<X8>)
{
  unsigned int *v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  _QWORD v13[3];

  v4 = *a1;
  *a1 = 0;
  v11 = *a2;
  v12 = v4;
  *a2 = 0;
  sub_10032D510(&v12, &v11, a3, a4);
  v5 = v11;
  if (v11)
  {
    do
    {
      v6 = __ldaxr((unsigned int *)v5);
      v7 = v6 - 1;
    }
    while (__stlxr(v7, (unsigned int *)v5));
    if (!v7)
    {
      sub_10006CF64((DIR **)(v5 + 48), (void **)(v5 + 56), v13);
      if (*(char *)(v5 + 31) < 0)
        operator delete(*(void **)(v5 + 8));
      operator delete();
    }
  }
  v8 = v12;
  if (v12)
  {
    do
    {
      v9 = __ldaxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
    {
      sub_10006CF64((DIR **)v8 + 6, (void **)v8 + 7, v13);
      if (*((char *)v8 + 31) < 0)
        operator delete(*((void **)v8 + 1));
      operator delete();
    }
  }
}

void sub_10032D4F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_1000FE490((uint64_t *)va);
  sub_1000FE490((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_10032D510(unsigned int **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, dirent **a4@<X8>)
{
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  dirent *v15;
  unsigned int v16;
  unsigned int v17;
  dirent *v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int *v21;
  dirent *v22;
  unsigned int v23;
  unsigned int v24;
  dirent *v25;
  dirent *v26;
  unsigned int v27;
  unsigned int v28;
  dirent *v29;
  dirent *v30;
  unsigned int v31;
  unsigned int v32;
  dirent *v33;
  unsigned int v34;
  unsigned int v35;
  dirent *v36;
  dirent *v37;
  dirent *v38;
  dirent *v39;
  uint64_t v40;
  unsigned int *v41;
  dirent *v42;
  dirent *v43;
  _QWORD v44[3];

  v7 = *a1;
  v41 = v7;
  if (v7)
  {
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 + 1, v7));
  }
  v40 = *a2;
  *a2 = 0;
  sub_10032D89C((uint64_t *)&v41, &v40, &v42);
  v9 = v40;
  if (v40)
  {
    do
    {
      v10 = __ldaxr((unsigned int *)v9);
      v11 = v10 - 1;
    }
    while (__stlxr(v11, (unsigned int *)v9));
    if (!v11)
    {
      sub_10006CF64((DIR **)(v9 + 48), (void **)(v9 + 56), v44);
      if (*(char *)(v9 + 31) < 0)
        operator delete(*(void **)(v9 + 8));
      operator delete();
    }
  }
  v12 = (uint64_t)v41;
  if (v41)
  {
    do
    {
      v13 = __ldaxr((unsigned int *)v12);
      v14 = v13 - 1;
    }
    while (__stlxr(v14, (unsigned int *)v12));
    if (!v14)
    {
      sub_10006CF64((DIR **)(v12 + 48), (void **)(v12 + 56), v44);
      if (*(char *)(v12 + 31) < 0)
        operator delete(*(void **)(v12 + 8));
      operator delete();
    }
  }
  v36 = v43;
  v37 = v42;
  v42 = 0;
  v43 = 0;
  sub_10032D9AC(&v37, &v36, a3, &v38);
  v15 = v36;
  if (v36)
  {
    do
    {
      v16 = __ldaxr((unsigned int *)v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, (unsigned int *)v15));
    if (!v17)
    {
      sub_10006CF64((DIR **)&v15->d_name[27], (void **)&v15->d_name[35], v44);
      if (v15->d_name[10] < 0)
        operator delete((void *)v15->d_seekoff);
      operator delete();
    }
  }
  v18 = v37;
  if (v37)
  {
    do
    {
      v19 = __ldaxr((unsigned int *)v18);
      v20 = v19 - 1;
    }
    while (__stlxr(v20, (unsigned int *)v18));
    if (!v20)
    {
      sub_10006CF64((DIR **)&v18->d_name[27], (void **)&v18->d_name[35], v44);
      if (v18->d_name[10] < 0)
        operator delete((void *)v18->d_seekoff);
      operator delete();
    }
  }
  v21 = *a1;
  *a1 = 0;
  v22 = v38;
  v38 = 0;
  if (v21)
  {
    do
    {
      v23 = __ldaxr(v21);
      v24 = v23 - 1;
    }
    while (__stlxr(v24, v21));
    if (!v24)
    {
      sub_10006CF64((DIR **)v21 + 6, (void **)v21 + 7, v44);
      if (*((char *)v21 + 31) < 0)
        operator delete(*((void **)v21 + 1));
      operator delete();
    }
    v26 = v38;
    v25 = v39;
    *a4 = v22;
    a4[1] = v25;
    if (v26)
    {
      do
      {
        v27 = __ldaxr((unsigned int *)v26);
        v28 = v27 - 1;
      }
      while (__stlxr(v28, (unsigned int *)v26));
      if (!v28)
      {
        sub_10006CF64((DIR **)&v26->d_name[27], (void **)&v26->d_name[35], v44);
        if (v26->d_name[10] < 0)
          operator delete((void *)v26->d_seekoff);
        operator delete();
      }
    }
  }
  else
  {
    v29 = v39;
    *a4 = v22;
    a4[1] = v29;
  }
  v30 = v43;
  if (v43)
  {
    do
    {
      v31 = __ldaxr((unsigned int *)v30);
      v32 = v31 - 1;
    }
    while (__stlxr(v32, (unsigned int *)v30));
    if (!v32)
    {
      sub_10006CF64((DIR **)&v30->d_name[27], (void **)&v30->d_name[35], v44);
      if (v30->d_name[10] < 0)
        operator delete((void *)v30->d_seekoff);
      operator delete();
    }
  }
  v33 = v42;
  if (v42)
  {
    do
    {
      v34 = __ldaxr((unsigned int *)v33);
      v35 = v34 - 1;
    }
    while (__stlxr(v35, (unsigned int *)v33));
    if (!v35)
    {
      sub_10006CF64((DIR **)&v33->d_name[27], (void **)&v33->d_name[35], v44);
      if (v33->d_name[10] < 0)
        operator delete((void *)v33->d_seekoff);
      operator delete();
    }
  }
}

void sub_10032D85C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v5 = va_arg(va2, _QWORD);
  v7 = va_arg(va2, _QWORD);
  v8 = va_arg(va2, _QWORD);
  v9 = va_arg(va2, _QWORD);
  v10 = va_arg(va2, _QWORD);
  v11 = va_arg(va2, _QWORD);
  sub_1000FE490((uint64_t *)va);
  sub_1000FE490((uint64_t *)va1);
  sub_1000FE57C((uint64_t *)va2);
  _Unwind_Resume(a1);
}

void sub_10032D880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  sub_1000FE490((uint64_t *)va);
  sub_1000FE490((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t *sub_10032D89C@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  _QWORD v11[3];

  v3 = *result;
  *result = 0;
  if (v3)
  {
    do
      v4 = __ldaxr((unsigned int *)v3);
    while (__stlxr(v4 + 1, (unsigned int *)v3));
  }
  v5 = *a2;
  *a2 = 0;
  if (!v5)
  {
    *a3 = v3;
    a3[1] = 0;
    if (!v3)
      return result;
    goto LABEL_14;
  }
  do
    v6 = __ldaxr((unsigned int *)v5);
  while (__stlxr(v6 + 1, (unsigned int *)v5));
  *a3 = v3;
  a3[1] = v5;
  do
  {
    v7 = __ldaxr((unsigned int *)v5);
    v8 = v7 - 1;
  }
  while (__stlxr(v8, (unsigned int *)v5));
  if (!v8)
  {
    sub_10006CF64((DIR **)(v5 + 48), (void **)(v5 + 56), v11);
    if (*(char *)(v5 + 31) < 0)
      operator delete(*(void **)(v5 + 8));
    operator delete();
  }
  if (v3)
  {
    do
    {
LABEL_14:
      v9 = __ldaxr((unsigned int *)v3);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, (unsigned int *)v3));
    if (!v10)
    {
      sub_10006CF64((DIR **)(v3 + 48), (void **)(v3 + 56), v11);
      if (*(char *)(v3 + 31) < 0)
        operator delete(*(void **)(v3 + 8));
      operator delete();
    }
  }
  return result;
}

void sub_10032D9AC(dirent **a1@<X1>, dirent **a2@<X2>, uint64_t a3@<X3>, dirent **a4@<X8>)
{
  dirent *v7;
  dirent *i;
  uint64_t v10;
  __uint64_t *p_d_seekoff;
  unint64_t v12;
  __int128 v13;

  v7 = *a1;
  for (i = *a2; *a1 != *a2; i = *a2)
  {
    if ((!v7 || !*(_QWORD *)&v7->d_name[27]) && (!i || !*(_QWORD *)&i->d_name[27]))
      break;
    p_d_seekoff = &v7->d_seekoff;
    v12 = *(_QWORD *)(a3 + 8);
    if (v12 >= *(_QWORD *)(a3 + 16))
    {
      v10 = sub_10032DA9C((char **)a3, (uint64_t)p_d_seekoff);
    }
    else
    {
      if (v7->d_name[10] < 0)
      {
        sub_10006CED8(*(_BYTE **)(a3 + 8), (void *)v7->d_seekoff, *(_QWORD *)&v7->d_reclen);
      }
      else
      {
        v13 = *(_OWORD *)p_d_seekoff;
        *(_QWORD *)(v12 + 16) = *(_QWORD *)&v7->d_name[3];
        *(_OWORD *)v12 = v13;
      }
      *(_QWORD *)(v12 + 24) = *(_QWORD *)&v7->d_name[11];
      *(_QWORD *)(v12 + 32) = *(_QWORD *)&v7->d_name[19];
      v10 = v12 + 40;
      *(_QWORD *)(a3 + 8) = v12 + 40;
    }
    *(_QWORD *)(a3 + 8) = v10;
    sub_10006C494(a1, 0);
    v7 = *a1;
  }
  *a1 = 0;
  *a4 = v7;
  a4[1] = (dirent *)a3;
}

void sub_10032DA94(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10032DA9C(char **a1, uint64_t a2)
{
  char *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  char *v13;
  void **v14;
  char *v16;

  v3 = *a1;
  v4 = a1[1];
  v5 = 0xCCCCCCCCCCCCCCCDLL * ((v4 - *a1) >> 3);
  v6 = v5 + 1;
  if (v5 + 1 > 0x666666666666666)
    sub_1000D02C0();
  if (0x999999999999999ALL * ((a1[2] - v3) >> 3) > v6)
    v6 = 0x999999999999999ALL * ((a1[2] - v3) >> 3);
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3) >= 0x333333333333333)
    v8 = 0x666666666666666;
  else
    v8 = v6;
  if (v8)
  {
    if (v8 > 0x666666666666666)
      sub_1000CDEB8();
    v9 = (char *)operator new(40 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[40 * v5];
  v16 = &v9[40 * v8];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_10006CED8(v10, *(void **)a2, *(_QWORD *)(a2 + 8));
    v3 = *a1;
    v4 = a1[1];
    v10 = &v9[40 * v5];
  }
  else
  {
    *(_OWORD *)v10 = *(_OWORD *)a2;
    *((_QWORD *)v10 + 2) = *(_QWORD *)(a2 + 16);
  }
  *(_OWORD *)&v9[40 * v5 + 24] = *(_OWORD *)(a2 + 24);
  v11 = (uint64_t)&v9[40 * v5 + 40];
  if (v4 == v3)
  {
    v13 = v3;
  }
  else
  {
    do
    {
      v12 = *(_OWORD *)(v4 - 40);
      *((_QWORD *)v10 - 3) = *((_QWORD *)v4 - 3);
      *(_OWORD *)(v10 - 40) = v12;
      *((_QWORD *)v4 - 4) = 0;
      *((_QWORD *)v4 - 3) = 0;
      *((_QWORD *)v4 - 5) = 0;
      *((_QWORD *)v10 - 2) = *((_QWORD *)v4 - 2);
      *((_QWORD *)v10 - 1) = *((_QWORD *)v4 - 1);
      v10 -= 40;
      v4 -= 40;
    }
    while (v4 != v3);
    v13 = *a1;
    v3 = a1[1];
  }
  *a1 = v10;
  a1[1] = (char *)v11;
  a1[2] = v16;
  if (v3 != v13)
  {
    v14 = (void **)(v3 - 40);
    do
    {
      if (*((char *)v14 + 23) < 0)
        operator delete(*v14);
      v14 -= 5;
    }
    while (v14 + 5 != (void **)v13);
    v3 = v13;
  }
  if (v3)
    operator delete(v3);
  return v11;
}

void sub_10032DC78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10032DC8C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032DC8C(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v5;

  v3 = *(void ***)(a1 + 8);
  v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      v5 = v2 - 5;
      *(_QWORD *)(a1 + 16) = v2 - 5;
      if (*((char *)v2 - 17) < 0)
      {
        operator delete(*v5);
        v5 = *(void ***)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != v3);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10032DCF0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 != a2)
  {
    v19 = v2;
    v20 = v3;
    v6 = a1 + 40;
    if (a1 + 40 != a2)
    {
      v7 = 0;
      v8 = a1;
      do
      {
        v10 = v6;
        if ((sub_10003B4F4(v8, v6) & 0x80000000) != 0)
        {
          v16 = *(_OWORD *)v10;
          v17 = *(_QWORD *)(v10 + 16);
          *(_QWORD *)(v10 + 8) = 0;
          *(_QWORD *)(v10 + 16) = 0;
          *(_QWORD *)v10 = 0;
          v18 = *(_OWORD *)(v8 + 64);
          v11 = v7;
          while (1)
          {
            v12 = a1 + v11;
            v13 = (void **)(a1 + v11 + 40);
            if (*(char *)(a1 + v11 + 63) < 0)
              operator delete(*v13);
            *(_OWORD *)v13 = *(_OWORD *)v12;
            *(_QWORD *)(a1 + v11 + 56) = *(_QWORD *)(v12 + 16);
            *(_BYTE *)(v12 + 23) = 0;
            *(_BYTE *)v12 = 0;
            v14 = *(_QWORD *)(v12 + 32);
            *(_QWORD *)(v12 + 64) = *(_QWORD *)(v12 + 24);
            *(_QWORD *)(v12 + 72) = v14;
            if (!v11)
              break;
            v11 -= 40;
            if ((sub_10003B4F4(v11 + a1, (unint64_t)&v16) & 0x80000000) == 0)
            {
              v15 = a1 + v11 + 40;
              if ((*(char *)(v15 + 23) & 0x80000000) == 0)
                goto LABEL_4;
              goto LABEL_15;
            }
          }
          v15 = a1;
          if ((*(char *)(a1 + 23) & 0x80000000) == 0)
            goto LABEL_4;
LABEL_15:
          operator delete(*(void **)v15);
LABEL_4:
          *(_OWORD *)v15 = v16;
          *(_QWORD *)(v15 + 16) = v17;
          v9 = *((_QWORD *)&v18 + 1);
          *(_QWORD *)(v15 + 24) = v18;
          *(_QWORD *)(v15 + 32) = v9;
        }
        v6 = v10 + 40;
        v7 += 40;
        v8 = v10;
      }
      while (v10 + 40 != a2);
    }
  }
}

void sub_10032DE30(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  void **v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  void **v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 != a2)
  {
    v19 = v2;
    v20 = v3;
    v5 = a1;
    v6 = a1 + 40;
    if (a1 + 40 != a2)
    {
      v7 = (_QWORD *)(a1 + 72);
      do
      {
        v10 = v6;
        if ((sub_10003B4F4(v5, v6) & 0x80000000) != 0)
        {
          v16 = *(_OWORD *)v10;
          v17 = *(_QWORD *)(v10 + 16);
          *(_QWORD *)(v10 + 8) = 0;
          *(_QWORD *)(v10 + 16) = 0;
          *(_QWORD *)v10 = 0;
          v18 = *(_OWORD *)(v5 + 64);
          v11 = v7;
          do
          {
            v15 = (void **)(v11 - 4);
            if (*((char *)v11 - 9) < 0)
              operator delete(*v15);
            *(_OWORD *)v15 = *(_OWORD *)(v11 - 9);
            *(v11 - 2) = *(v11 - 7);
            *((_BYTE *)v11 - 49) = 0;
            *((_BYTE *)v11 - 72) = 0;
            v12 = v11 - 5;
            v13 = *(v11 - 5);
            *(v11 - 1) = *(v11 - 6);
            *v11 = v13;
            v14 = sub_10003B4F4((unint64_t)(v11 - 14), (unint64_t)&v16);
            v11 -= 5;
          }
          while (v14 < 0);
          v8 = (void **)(v12 - 4);
          if (*((char *)v12 - 9) < 0)
            operator delete(*v8);
          *(_OWORD *)v8 = v16;
          *(v12 - 2) = v17;
          v9 = *((_QWORD *)&v18 + 1);
          *(v12 - 1) = v18;
          *v12 = v9;
        }
        v6 = v10 + 40;
        v7 += 5;
        v5 = v10;
      }
      while (v10 + 40 != a2);
    }
  }
}

uint64_t sub_10032DF5C(unint64_t a1, unint64_t a2, unint64_t a3)
{
  int v6;
  int v7;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[15];
  _BYTE v36[15];
  _BYTE v37[15];
  _BYTE v38[15];
  _BYTE v39[15];

  v6 = sub_10003B4F4(a1, a2);
  v7 = sub_10003B4F4(a2, a3);
  if ((v6 & 0x80000000) == 0)
  {
    if ((v7 & 0x80000000) == 0)
      return 0;
    v18 = *(void **)a2;
    *(_QWORD *)v37 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)&v37[7] = *(_QWORD *)(a2 + 15);
    v19 = *(_BYTE *)(a2 + 23);
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)a2 = 0;
    v20 = *(_OWORD *)(a2 + 24);
    v21 = *(_QWORD *)(a3 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_QWORD *)(a2 + 16) = v21;
    *(_BYTE *)(a3 + 23) = 0;
    *(_BYTE *)a3 = 0;
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a3 + 24);
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(a3 + 32);
    if (*(char *)(a3 + 23) < 0)
    {
      v32 = v20;
      operator delete(*(void **)a3);
      v20 = v32;
    }
    *(_QWORD *)a3 = v18;
    *(_QWORD *)(a3 + 8) = *(_QWORD *)v37;
    *(_QWORD *)(a3 + 15) = *(_QWORD *)&v37[7];
    *(_BYTE *)(a3 + 23) = v19;
    *(_OWORD *)(a3 + 24) = v20;
    if ((sub_10003B4F4(a1, a2) & 0x80000000) == 0)
      return 1;
    v26 = *(_QWORD *)a1;
    *(_QWORD *)v39 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)&v39[7] = *(_QWORD *)(a1 + 15);
    v27 = *(_BYTE *)(a1 + 23);
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    v28 = *(_OWORD *)(a1 + 24);
    v29 = *(_QWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = v29;
    *(_BYTE *)(a2 + 23) = 0;
    *(_BYTE *)a2 = 0;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    if (*(char *)(a2 + 23) < 0)
    {
      v34 = v28;
      operator delete(*(void **)a2);
      v28 = v34;
    }
    *(_QWORD *)a2 = v26;
    *(_QWORD *)(a2 + 8) = *(_QWORD *)v39;
    *(_QWORD *)(a2 + 15) = *(_QWORD *)&v39[7];
    *(_BYTE *)(a2 + 23) = v27;
    *(_OWORD *)(a2 + 24) = v28;
    return 2;
  }
  v9 = (_QWORD *)(a1 + 8);
  if ((v7 & 0x80000000) == 0)
  {
    v10 = *(_QWORD *)a1;
    *(_QWORD *)v35 = *v9;
    *(_QWORD *)&v35[7] = *(_QWORD *)(a1 + 15);
    v11 = *(_BYTE *)(a1 + 23);
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    v12 = *(_OWORD *)(a1 + 24);
    v13 = *(_QWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = v13;
    *(_BYTE *)(a2 + 23) = 0;
    *(_BYTE *)a2 = 0;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    if (*(char *)(a2 + 23) < 0)
    {
      v30 = v12;
      operator delete(*(void **)a2);
      v12 = v30;
    }
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = *(_QWORD *)v35;
    *(_QWORD *)(a2 + 15) = *(_QWORD *)&v35[7];
    *(_BYTE *)(a2 + 23) = v11;
    *(_OWORD *)(a2 + 24) = v12;
    if ((sub_10003B4F4(a2, a3) & 0x80000000) == 0)
      return 1;
    v14 = *(void **)a2;
    *(_QWORD *)v36 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)&v36[7] = *(_QWORD *)(a2 + 15);
    v15 = *(_BYTE *)(a2 + 23);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    v16 = *(_OWORD *)(a2 + 24);
    v17 = *(_QWORD *)(a3 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_QWORD *)(a2 + 16) = v17;
    *(_BYTE *)(a3 + 23) = 0;
    *(_BYTE *)a3 = 0;
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a3 + 24);
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(a3 + 32);
    if (*(char *)(a3 + 23) < 0)
    {
      v31 = v16;
      operator delete(*(void **)a3);
      v16 = v31;
    }
    *(_QWORD *)a3 = v14;
    *(_QWORD *)(a3 + 8) = *(_QWORD *)v36;
    *(_QWORD *)(a3 + 15) = *(_QWORD *)&v36[7];
    *(_BYTE *)(a3 + 23) = v15;
    *(_OWORD *)(a3 + 24) = v16;
    return 2;
  }
  v22 = *(_QWORD *)a1;
  *(_QWORD *)v38 = *v9;
  *(_QWORD *)&v38[7] = *(_QWORD *)(a1 + 15);
  v23 = *(_BYTE *)(a1 + 23);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v24 = *(_OWORD *)(a1 + 24);
  v25 = *(_QWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_QWORD *)(a1 + 16) = v25;
  *(_BYTE *)(a3 + 23) = 0;
  *(_BYTE *)a3 = 0;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a3 + 32);
  if (*(char *)(a3 + 23) < 0)
  {
    v33 = v24;
    operator delete(*(void **)a3);
    v24 = v33;
  }
  *(_QWORD *)a3 = v22;
  *(_QWORD *)(a3 + 8) = *(_QWORD *)v38;
  *(_QWORD *)(a3 + 15) = *(_QWORD *)&v38[7];
  *(_BYTE *)(a3 + 23) = v23;
  *(_OWORD *)(a3 + 24) = v24;
  return 1;
}

unint64_t sub_10032E2A4(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  __int128 v13;
  __int128 v14;
  __int128 v16;
  void *__p[2];
  uint64_t v18;
  __int128 v19;
  _QWORD v20[2];

  v2 = a2;
  *(_OWORD *)__p = *(_OWORD *)a1;
  v18 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v19 = *(_OWORD *)(a1 + 24);
  if ((sub_10003B4F4(a2 - 40, (unint64_t)__p) & 0x80000000) != 0)
  {
    v5 = a1;
    do
      v5 += 40;
    while ((sub_10003B4F4(v5, (unint64_t)__p) & 0x80000000) == 0);
  }
  else
  {
    v4 = a1 + 40;
    do
    {
      v5 = v4;
      if (v4 >= v2)
        break;
      v6 = sub_10003B4F4(v4, (unint64_t)__p);
      v4 = v5 + 40;
    }
    while ((v6 & 0x80000000) == 0);
  }
  if (v5 < v2)
  {
    do
      v2 -= 40;
    while ((sub_10003B4F4(v2, (unint64_t)__p) & 0x80000000) != 0);
  }
  while (v5 < v2)
  {
    v7 = *(_QWORD *)v5;
    v20[0] = *(_QWORD *)(v5 + 8);
    *(_QWORD *)((char *)v20 + 7) = *(_QWORD *)(v5 + 15);
    v8 = *(_BYTE *)(v5 + 23);
    *(_QWORD *)(v5 + 8) = 0;
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)v5 = 0;
    v9 = *(_OWORD *)(v5 + 24);
    v10 = *(_QWORD *)(v2 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v2;
    *(_QWORD *)(v5 + 16) = v10;
    *(_BYTE *)(v2 + 23) = 0;
    *(_BYTE *)v2 = 0;
    *(_QWORD *)(v5 + 24) = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v5 + 32) = *(_QWORD *)(v2 + 32);
    if (*(char *)(v2 + 23) < 0)
    {
      v16 = v9;
      operator delete(*(void **)v2);
      v9 = v16;
    }
    *(_QWORD *)v2 = v7;
    v11 = *(_QWORD *)((char *)v20 + 7);
    *(_QWORD *)(v2 + 8) = v20[0];
    *(_QWORD *)(v2 + 15) = v11;
    *(_BYTE *)(v2 + 23) = v8;
    *(_OWORD *)(v2 + 24) = v9;
    do
      v5 += 40;
    while ((sub_10003B4F4(v5, (unint64_t)__p) & 0x80000000) == 0);
    do
      v2 -= 40;
    while ((sub_10003B4F4(v2, (unint64_t)__p) & 0x80000000) != 0);
  }
  v12 = (void **)(v5 - 40);
  if (v5 - 40 != a1)
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v13 = *(_OWORD *)v12;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(v5 - 24);
    *(_OWORD *)a1 = v13;
    *(_BYTE *)(v5 - 17) = 0;
    *(_BYTE *)(v5 - 40) = 0;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(v5 - 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v5 - 8);
  }
  if (*(char *)(v5 - 17) < 0)
    operator delete(*v12);
  v14 = *(_OWORD *)__p;
  *(_QWORD *)(v5 - 24) = v18;
  *(_OWORD *)v12 = v14;
  HIBYTE(v18) = 0;
  LOBYTE(__p[0]) = 0;
  *(_OWORD *)(v5 - 16) = v19;
  if (SHIBYTE(v18) < 0)
    operator delete(__p[0]);
  return v5;
}

unint64_t sub_10032E4D4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  __int128 v15;
  __int128 v16;
  __int128 v18;
  void *__p[2];
  uint64_t v20;
  __int128 v21;
  _BYTE v22[15];

  v4 = 0;
  *(_OWORD *)__p = *(_OWORD *)a1;
  v20 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v21 = *(_OWORD *)(a1 + 24);
  do
    v4 += 40;
  while ((sub_10003B4F4((unint64_t)__p, v4 + a1) & 0x80000000) != 0);
  v5 = a1 + v4;
  if (v4 == 40)
  {
    do
    {
      if (v5 >= a2)
        break;
      a2 -= 40;
    }
    while ((sub_10003B4F4((unint64_t)__p, a2) & 0x80000000) == 0);
  }
  else
  {
    do
      a2 -= 40;
    while ((sub_10003B4F4((unint64_t)__p, a2) & 0x80000000) == 0);
  }
  v6 = a1 + v4;
  if (v5 < a2)
  {
    v7 = a2;
    do
    {
      v9 = *(_QWORD *)v6;
      v8 = *(_QWORD *)(v6 + 8);
      *(_QWORD *)&v22[7] = *(_QWORD *)(v6 + 15);
      *(_QWORD *)v22 = v8;
      v10 = *(_BYTE *)(v6 + 23);
      *(_QWORD *)(v6 + 8) = 0;
      *(_QWORD *)(v6 + 16) = 0;
      *(_QWORD *)v6 = 0;
      v11 = *(_OWORD *)(v6 + 24);
      v12 = *(_QWORD *)(v7 + 16);
      *(_OWORD *)v6 = *(_OWORD *)v7;
      *(_QWORD *)(v6 + 16) = v12;
      *(_BYTE *)(v7 + 23) = 0;
      *(_BYTE *)v7 = 0;
      *(_QWORD *)(v6 + 24) = *(_QWORD *)(v7 + 24);
      *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
      if (*(char *)(v7 + 23) < 0)
      {
        v18 = v11;
        operator delete(*(void **)v7);
        v11 = v18;
      }
      *(_QWORD *)v7 = v9;
      v13 = *(_QWORD *)&v22[7];
      *(_QWORD *)(v7 + 8) = *(_QWORD *)v22;
      *(_QWORD *)(v7 + 15) = v13;
      *(_BYTE *)(v7 + 23) = v10;
      *(_OWORD *)(v7 + 24) = v11;
      do
        v6 += 40;
      while ((sub_10003B4F4((unint64_t)__p, v6) & 0x80000000) != 0);
      do
        v7 -= 40;
      while ((sub_10003B4F4((unint64_t)__p, v7) & 0x80000000) == 0);
    }
    while (v6 < v7);
  }
  v14 = (void **)(v6 - 40);
  if (v6 - 40 != a1)
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v15 = *(_OWORD *)v14;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(v6 - 24);
    *(_OWORD *)a1 = v15;
    *(_BYTE *)(v6 - 17) = 0;
    *(_BYTE *)(v6 - 40) = 0;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(v6 - 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v6 - 8);
  }
  if (*(char *)(v6 - 17) < 0)
    operator delete(*v14);
  v16 = *(_OWORD *)__p;
  *(_QWORD *)(v6 - 24) = v20;
  *(_OWORD *)v14 = v16;
  HIBYTE(v20) = 0;
  LOBYTE(__p[0]) = 0;
  *(_OWORD *)(v6 - 16) = v21;
  if (SHIBYTE(v20) < 0)
    operator delete(__p[0]);
  return v6 - 40;
}

BOOL sub_10032E70C(unint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _BOOL8 result;
  void **v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;

  v4 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2 - a1) >> 3);
  result = 1;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v6 = (void **)(a2 - 40);
      if ((sub_10003B4F4(a1, a2 - 40) & 0x80000000) != 0)
      {
        v7 = *(_QWORD *)a1;
        *(_QWORD *)&v24 = *(_QWORD *)(a1 + 8);
        *(_QWORD *)((char *)&v24 + 7) = *(_QWORD *)(a1 + 15);
        v8 = *(_BYTE *)(a1 + 23);
        *(_QWORD *)(a1 + 8) = 0;
        *(_QWORD *)(a1 + 16) = 0;
        *(_QWORD *)a1 = 0;
        v9 = *(_OWORD *)(a1 + 24);
        v10 = *(_QWORD *)(a2 - 24);
        *(_OWORD *)a1 = *(_OWORD *)v6;
        *(_QWORD *)(a1 + 16) = v10;
        *(_BYTE *)(a2 - 17) = 0;
        *(_BYTE *)(a2 - 40) = 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 - 16);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 - 8);
        if (*(char *)(a2 - 17) < 0)
        {
          v23 = v9;
          operator delete(*v6);
          v9 = v23;
        }
        v11 = v24;
        *(_QWORD *)(a2 - 40) = v7;
        *(_QWORD *)(a2 - 32) = v11;
        *(_QWORD *)(a2 - 25) = *(_QWORD *)((char *)&v24 + 7);
        *(_BYTE *)(a2 - 17) = v8;
        *(_OWORD *)(a2 - 16) = v9;
      }
      return 1;
    case 3uLL:
      sub_10032DF5C(a1, a1 + 40, a2 - 40);
      return 1;
    case 4uLL:
      sub_10032E9E8(a1, a1 + 40, a1 + 80, a2 - 40);
      return 1;
    case 5uLL:
      sub_10032EC1C(a1, a1 + 40, a1 + 80, a1 + 120, a2 - 40);
      return 1;
    default:
      v12 = a1 + 80;
      sub_10032DF5C(a1, a1 + 40, a1 + 80);
      v13 = a1 + 120;
      if (a1 + 120 == a2)
        return 1;
      v14 = 0;
      v15 = 0;
      break;
  }
  while (1)
  {
    if ((sub_10003B4F4(v12, v13) & 0x80000000) != 0)
    {
      v24 = *(_OWORD *)v13;
      v25 = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v13 + 8) = 0;
      *(_QWORD *)(v13 + 16) = 0;
      *(_QWORD *)v13 = 0;
      v26 = *(_OWORD *)(v13 + 24);
      v17 = v14;
      while (1)
      {
        v18 = a1 + v17;
        v19 = (void **)(a1 + v17 + 120);
        if (*(char *)(a1 + v17 + 143) < 0)
          operator delete(*v19);
        *(_OWORD *)v19 = *(_OWORD *)(v18 + 80);
        *(_QWORD *)(a1 + v17 + 136) = *(_QWORD *)(v18 + 96);
        *(_BYTE *)(v18 + 103) = 0;
        *(_BYTE *)(v18 + 80) = 0;
        v20 = *(_QWORD *)(v18 + 112);
        *(_QWORD *)(v18 + 144) = *(_QWORD *)(v18 + 104);
        *(_QWORD *)(v18 + 152) = v20;
        if (v17 == -80)
          break;
        v21 = sub_10003B4F4(a1 + v17 + 40, (unint64_t)&v24);
        v17 -= 40;
        if ((v21 & 0x80000000) == 0)
        {
          v22 = a1 + v17 + 120;
          if ((*(char *)(v22 + 23) & 0x80000000) == 0)
            goto LABEL_8;
          goto LABEL_19;
        }
      }
      v22 = a1;
      if ((*(char *)(a1 + 23) & 0x80000000) == 0)
        goto LABEL_8;
LABEL_19:
      operator delete(*(void **)v22);
LABEL_8:
      *(_OWORD *)v22 = v24;
      *(_QWORD *)(v22 + 16) = v25;
      HIBYTE(v25) = 0;
      LOBYTE(v24) = 0;
      v16 = *((_QWORD *)&v26 + 1);
      *(_QWORD *)(v22 + 24) = v26;
      *(_QWORD *)(v22 + 32) = v16;
      if (++v15 == 8)
        return v13 + 40 == a2;
    }
    v12 = v13;
    v14 += 40;
    v13 += 40;
    if (v13 == a2)
      return 1;
  }
}

void sub_10032E9E8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  void *v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[15];
  _BYTE v24[15];
  _BYTE v25[15];

  sub_10032DF5C(a1, a2, a3);
  if ((sub_10003B4F4(a3, a4) & 0x80000000) != 0)
  {
    v8 = *(void **)a3;
    *(_QWORD *)v23 = *(_QWORD *)(a3 + 8);
    *(_QWORD *)&v23[7] = *(_QWORD *)(a3 + 15);
    v9 = *(_BYTE *)(a3 + 23);
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)a3 = 0;
    v10 = *(_OWORD *)(a3 + 24);
    v11 = *(_QWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_QWORD *)(a3 + 16) = v11;
    *(_BYTE *)(a4 + 23) = 0;
    *(_BYTE *)a4 = 0;
    *(_QWORD *)(a3 + 24) = *(_QWORD *)(a4 + 24);
    *(_QWORD *)(a3 + 32) = *(_QWORD *)(a4 + 32);
    if (*(char *)(a4 + 23) < 0)
    {
      v20 = v10;
      operator delete(*(void **)a4);
      v10 = v20;
    }
    *(_QWORD *)a4 = v8;
    *(_QWORD *)(a4 + 8) = *(_QWORD *)v23;
    *(_QWORD *)(a4 + 15) = *(_QWORD *)&v23[7];
    *(_BYTE *)(a4 + 23) = v9;
    *(_OWORD *)(a4 + 24) = v10;
    if ((sub_10003B4F4(a2, a3) & 0x80000000) != 0)
    {
      v12 = *(void **)a2;
      *(_QWORD *)v24 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)&v24[7] = *(_QWORD *)(a2 + 15);
      v13 = *(_BYTE *)(a2 + 23);
      *(_QWORD *)(a2 + 16) = 0;
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)a2 = 0;
      v14 = *(_OWORD *)(a2 + 24);
      v15 = *(_QWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_QWORD *)(a2 + 16) = v15;
      *(_BYTE *)(a3 + 23) = 0;
      *(_BYTE *)a3 = 0;
      *(_QWORD *)(a2 + 24) = *(_QWORD *)(a3 + 24);
      *(_QWORD *)(a2 + 32) = *(_QWORD *)(a3 + 32);
      if (*(char *)(a3 + 23) < 0)
      {
        v21 = v14;
        operator delete(*(void **)a3);
        v14 = v21;
      }
      *(_QWORD *)a3 = v12;
      *(_QWORD *)(a3 + 8) = *(_QWORD *)v24;
      *(_QWORD *)(a3 + 15) = *(_QWORD *)&v24[7];
      *(_BYTE *)(a3 + 23) = v13;
      *(_OWORD *)(a3 + 24) = v14;
      if ((sub_10003B4F4(a1, a2) & 0x80000000) != 0)
      {
        v16 = *(_QWORD *)a1;
        *(_QWORD *)v25 = *(_QWORD *)(a1 + 8);
        *(_QWORD *)&v25[7] = *(_QWORD *)(a1 + 15);
        v17 = *(_BYTE *)(a1 + 23);
        *(_QWORD *)(a1 + 8) = 0;
        *(_QWORD *)(a1 + 16) = 0;
        *(_QWORD *)a1 = 0;
        v18 = *(_OWORD *)(a1 + 24);
        v19 = *(_QWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = v19;
        *(_BYTE *)(a2 + 23) = 0;
        *(_BYTE *)a2 = 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        if (*(char *)(a2 + 23) < 0)
        {
          v22 = v18;
          operator delete(*(void **)a2);
          v18 = v22;
        }
        *(_QWORD *)a2 = v16;
        *(_QWORD *)(a2 + 8) = *(_QWORD *)v25;
        *(_QWORD *)(a2 + 15) = *(_QWORD *)&v25[7];
        *(_BYTE *)(a2 + 23) = v17;
        *(_OWORD *)(a2 + 24) = v18;
      }
    }
  }
}

void sub_10032EC1C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  void *v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[15];
  _BYTE v31[15];
  _BYTE v32[15];
  _BYTE v33[15];

  sub_10032E9E8(a1, a2, a3, a4);
  if ((sub_10003B4F4(a4, a5) & 0x80000000) != 0)
  {
    v10 = *(void **)a4;
    *(_QWORD *)v30 = *(_QWORD *)(a4 + 8);
    *(_QWORD *)&v30[7] = *(_QWORD *)(a4 + 15);
    v11 = *(_BYTE *)(a4 + 23);
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)a4 = 0;
    v12 = *(_OWORD *)(a4 + 24);
    v13 = *(_QWORD *)(a5 + 16);
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *(_QWORD *)(a4 + 16) = v13;
    *(_BYTE *)(a5 + 23) = 0;
    *(_BYTE *)a5 = 0;
    *(_QWORD *)(a4 + 24) = *(_QWORD *)(a5 + 24);
    *(_QWORD *)(a4 + 32) = *(_QWORD *)(a5 + 32);
    if (*(char *)(a5 + 23) < 0)
    {
      v26 = v12;
      operator delete(*(void **)a5);
      v12 = v26;
    }
    *(_QWORD *)a5 = v10;
    *(_QWORD *)(a5 + 8) = *(_QWORD *)v30;
    *(_QWORD *)(a5 + 15) = *(_QWORD *)&v30[7];
    *(_BYTE *)(a5 + 23) = v11;
    *(_OWORD *)(a5 + 24) = v12;
    if ((sub_10003B4F4(a3, a4) & 0x80000000) != 0)
    {
      v14 = *(void **)a3;
      *(_QWORD *)v31 = *(_QWORD *)(a3 + 8);
      *(_QWORD *)&v31[7] = *(_QWORD *)(a3 + 15);
      v15 = *(_BYTE *)(a3 + 23);
      *(_QWORD *)(a3 + 16) = 0;
      *(_QWORD *)(a3 + 8) = 0;
      *(_QWORD *)a3 = 0;
      v16 = *(_OWORD *)(a3 + 24);
      v17 = *(_QWORD *)(a4 + 16);
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *(_QWORD *)(a3 + 16) = v17;
      *(_BYTE *)(a4 + 23) = 0;
      *(_BYTE *)a4 = 0;
      *(_QWORD *)(a3 + 24) = *(_QWORD *)(a4 + 24);
      *(_QWORD *)(a3 + 32) = *(_QWORD *)(a4 + 32);
      if (*(char *)(a4 + 23) < 0)
      {
        v27 = v16;
        operator delete(*(void **)a4);
        v16 = v27;
      }
      *(_QWORD *)a4 = v14;
      *(_QWORD *)(a4 + 8) = *(_QWORD *)v31;
      *(_QWORD *)(a4 + 15) = *(_QWORD *)&v31[7];
      *(_BYTE *)(a4 + 23) = v15;
      *(_OWORD *)(a4 + 24) = v16;
      if ((sub_10003B4F4(a2, a3) & 0x80000000) != 0)
      {
        v18 = *(void **)a2;
        *(_QWORD *)v32 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)&v32[7] = *(_QWORD *)(a2 + 15);
        v19 = *(_BYTE *)(a2 + 23);
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 8) = 0;
        *(_QWORD *)a2 = 0;
        v20 = *(_OWORD *)(a2 + 24);
        v21 = *(_QWORD *)(a3 + 16);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(_QWORD *)(a2 + 16) = v21;
        *(_BYTE *)(a3 + 23) = 0;
        *(_BYTE *)a3 = 0;
        *(_QWORD *)(a2 + 24) = *(_QWORD *)(a3 + 24);
        *(_QWORD *)(a2 + 32) = *(_QWORD *)(a3 + 32);
        if (*(char *)(a3 + 23) < 0)
        {
          v28 = v20;
          operator delete(*(void **)a3);
          v20 = v28;
        }
        *(_QWORD *)a3 = v18;
        *(_QWORD *)(a3 + 8) = *(_QWORD *)v32;
        *(_QWORD *)(a3 + 15) = *(_QWORD *)&v32[7];
        *(_BYTE *)(a3 + 23) = v19;
        *(_OWORD *)(a3 + 24) = v20;
        if ((sub_10003B4F4(a1, a2) & 0x80000000) != 0)
        {
          v22 = *(_QWORD *)a1;
          *(_QWORD *)v33 = *(_QWORD *)(a1 + 8);
          *(_QWORD *)&v33[7] = *(_QWORD *)(a1 + 15);
          v23 = *(_BYTE *)(a1 + 23);
          *(_QWORD *)(a1 + 8) = 0;
          *(_QWORD *)(a1 + 16) = 0;
          *(_QWORD *)a1 = 0;
          v24 = *(_OWORD *)(a1 + 24);
          v25 = *(_QWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_QWORD *)(a1 + 16) = v25;
          *(_BYTE *)(a2 + 23) = 0;
          *(_BYTE *)a2 = 0;
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          if (*(char *)(a2 + 23) < 0)
          {
            v29 = v24;
            operator delete(*(void **)a2);
            v24 = v29;
          }
          *(_QWORD *)a2 = v22;
          *(_QWORD *)(a2 + 8) = *(_QWORD *)v33;
          *(_QWORD *)(a2 + 15) = *(_QWORD *)&v33[7];
          *(_BYTE *)(a2 + 23) = v23;
          *(_OWORD *)(a2 + 24) = v24;
        }
      }
    }
  }
}

double sub_10032EEEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v9;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  double result;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a3 - 2;
  if (a3 >= 2)
  {
    v23 = v4;
    v24 = v5;
    v7 = a4;
    v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= (uint64_t)(0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4 - a1) >> 3)))
    {
      v11 = (0x999999999999999ALL * ((uint64_t)(a4 - a1) >> 3)) | 1;
      v12 = a1 + 40 * v11;
      v13 = 0x999999999999999ALL * ((uint64_t)(a4 - a1) >> 3) + 2;
      if (v13 < a3 && (int)sub_10003B4F4(v12 + 40, a1 + 40 * v11) < 0)
      {
        v12 += 40;
        v11 = v13;
      }
      if ((sub_10003B4F4(v7, v12) & 0x80000000) == 0)
      {
        v20 = *(_OWORD *)v7;
        v21 = *(_QWORD *)(v7 + 16);
        *(_QWORD *)(v7 + 8) = 0;
        *(_QWORD *)(v7 + 16) = 0;
        *(_QWORD *)v7 = 0;
        v22 = *(_OWORD *)(v7 + 24);
        do
        {
          v15 = v12;
          if (*(char *)(v7 + 23) < 0)
            operator delete(*(void **)v7);
          v16 = *(_OWORD *)v12;
          *(_QWORD *)(v7 + 16) = *(_QWORD *)(v12 + 16);
          *(_OWORD *)v7 = v16;
          *(_BYTE *)(v12 + 23) = 0;
          *(_BYTE *)v12 = 0;
          *(_QWORD *)(v7 + 24) = *(_QWORD *)(v12 + 24);
          *(_QWORD *)(v7 + 32) = *(_QWORD *)(v12 + 32);
          if (v9 < v11)
            break;
          v17 = (2 * v11) | 1;
          v12 = a1 + 40 * v17;
          v18 = 2 * v11 + 2;
          if (v18 < a3 && (int)sub_10003B4F4(v12 + 40, a1 + 40 * v17) < 0)
          {
            v12 += 40;
            v17 = v18;
          }
          v7 = v15;
          v11 = v17;
        }
        while ((sub_10003B4F4((unint64_t)&v20, v12) & 0x80000000) == 0);
        if (*(char *)(v15 + 23) < 0)
          operator delete(*(void **)v15);
        v19 = v20;
        *(_QWORD *)(v15 + 16) = v21;
        *(_OWORD *)v15 = v19;
        *(_QWORD *)(v15 + 24) = v22;
        result = *((double *)&v22 + 1);
        *(_QWORD *)(v15 + 32) = *((_QWORD *)&v22 + 1);
      }
    }
  }
  return result;
}

void sub_10032F09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  int v15;
  __int128 v16;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  char v23;
  _BYTE v24[15];

  if (a4 >= 2)
  {
    v7 = 0;
    v22 = *(_QWORD *)a1;
    *(_QWORD *)v24 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)&v24[7] = *(_QWORD *)(a1 + 15);
    v23 = *(_BYTE *)(a1 + 23);
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    v20 = *(_DWORD *)(a1 + 28);
    v21 = *(_DWORD *)(a1 + 24);
    v8 = (unint64_t)(a4 - 2) >> 1;
    v9 = a1;
    v18 = *(_DWORD *)(a1 + 32);
    v19 = *(_DWORD *)(a1 + 36);
    do
    {
      v11 = v9 + 40 * v7 + 40;
      v12 = 2 * v7;
      v7 = (2 * v7) | 1;
      v13 = v12 + 2;
      if (v12 + 2 < a4 && (int)sub_10003B4F4(v11 + 40, v11) < 0)
      {
        v11 += 40;
        v7 = v13;
      }
      if (*(char *)(v9 + 23) < 0)
        operator delete(*(void **)v9);
      v10 = *(_OWORD *)v11;
      *(_QWORD *)(v9 + 16) = *(_QWORD *)(v11 + 16);
      *(_OWORD *)v9 = v10;
      *(_BYTE *)(v11 + 23) = 0;
      *(_BYTE *)v11 = 0;
      *(_QWORD *)(v9 + 24) = *(_QWORD *)(v11 + 24);
      *(_QWORD *)(v9 + 32) = *(_QWORD *)(v11 + 32);
      v9 = v11;
    }
    while (v7 <= v8);
    v14 = (void **)(a2 - 40);
    v15 = *(char *)(v11 + 23);
    if (v11 == a2 - 40)
    {
      if (v15 < 0)
        operator delete(*(void **)v11);
      *(_QWORD *)v11 = v22;
      *(_QWORD *)(v11 + 8) = *(_QWORD *)v24;
      *(_QWORD *)(v11 + 15) = *(_QWORD *)&v24[7];
      *(_BYTE *)(v11 + 23) = v23;
      *(_DWORD *)(v11 + 24) = v21;
      *(_DWORD *)(v11 + 28) = v20;
      *(_DWORD *)(v11 + 32) = v18;
      *(_DWORD *)(v11 + 36) = v19;
    }
    else
    {
      if (v15 < 0)
        operator delete(*(void **)v11);
      v16 = *(_OWORD *)v14;
      *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 - 24);
      *(_OWORD *)v11 = v16;
      *(_BYTE *)(a2 - 17) = 0;
      *(_BYTE *)(a2 - 40) = 0;
      *(_QWORD *)(v11 + 24) = *(_QWORD *)(a2 - 16);
      *(_QWORD *)(v11 + 32) = *(_QWORD *)(a2 - 8);
      if (*(char *)(a2 - 17) < 0)
        operator delete(*v14);
      *(_QWORD *)(a2 - 40) = v22;
      *(_QWORD *)(a2 - 32) = *(_QWORD *)v24;
      *(_QWORD *)(a2 - 25) = *(_QWORD *)&v24[7];
      *(_BYTE *)(a2 - 17) = v23;
      *(_DWORD *)(a2 - 16) = v21;
      *(_DWORD *)(a2 - 12) = v20;
      *(_DWORD *)(a2 - 8) = v18;
      *(_DWORD *)(a2 - 4) = v19;
      sub_10032F2F0(a1, v11 + 40, a3, 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v11 + 40 - a1) >> 3));
    }
  }
}

double sub_10032F2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  double result;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  if (a4 >= 2)
  {
    v17 = v4;
    v18 = v5;
    v8 = (unint64_t)(a4 - 2) >> 1;
    v9 = a1 + 40 * v8;
    v10 = a2 - 40;
    if ((sub_10003B4F4(a2 - 40, v9) & 0x80000000) != 0)
    {
      v14 = *(_OWORD *)v10;
      v15 = *(_QWORD *)(v10 + 16);
      *(_QWORD *)(v10 + 8) = 0;
      *(_QWORD *)(v10 + 16) = 0;
      *(_QWORD *)v10 = 0;
      v16 = *(_OWORD *)(a2 - 16);
      do
      {
        v12 = v9;
        if (*(char *)(v10 + 23) < 0)
          operator delete(*(void **)v10);
        v13 = *(_OWORD *)v9;
        *(_QWORD *)(v10 + 16) = *(_QWORD *)(v9 + 16);
        *(_OWORD *)v10 = v13;
        *(_BYTE *)(v9 + 23) = 0;
        *(_BYTE *)v9 = 0;
        *(_QWORD *)(v10 + 24) = *(_QWORD *)(v9 + 24);
        *(_QWORD *)(v10 + 32) = *(_QWORD *)(v9 + 32);
        if (!v8)
          break;
        v8 = (v8 - 1) >> 1;
        v9 = a1 + 40 * v8;
        v10 = v12;
      }
      while ((sub_10003B4F4((unint64_t)&v14, v9) & 0x80000000) != 0);
      if (*(char *)(v12 + 23) < 0)
        operator delete(*(void **)v12);
      *(_OWORD *)v12 = v14;
      *(_QWORD *)(v12 + 16) = v15;
      result = *(double *)&v16;
      *(_OWORD *)(v12 + 24) = v16;
    }
  }
  return result;
}

std::string *sub_10032F3FC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10032F42C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_10032F448(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004073D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10032F458(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004073D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_10032F488(uint64_t a1)
{

  operator delete();
}

void sub_10032F4C0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v3;
  uint64_t v4;
  std::string v5;
  std::bad_cast v6;
  void *v7;
  _UNKNOWN **v8;

  v4 = a1;
  memset(&v5, 0, sizeof(v5));
  if ((sub_100169944(&v4, &v5) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v6);
    v6.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v6);
  }
  v3 = std::string::insert(&v5, 0, "DispatchSensorObserver ");
  *a2 = *v3;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v5.__r_.__value_.__l.__data_);
}

void sub_10032F580(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::bad_cast a17)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10032F5B0(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_10032F5E4()
{
  sub_10032F6BC();
}

uint64_t sub_10032F5F8@<X0>(unsigned int *a1@<X8>)
{
  int v1;

  v1 = *a1;
  sub_10032F810(*a1);
  return (unsigned __int16)v1;
}

uint64_t sub_10032F618@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  v1 = *a1;
  sub_10032F88C(*a1);
  return (unsigned __int16)v1;
}

uint64_t sub_10032F638@<X0>(uint64_t a1@<X1>, unsigned __int8 *a2@<X8>)
{
  return sub_10032F908(a1, a2);
}

uint64_t sub_10032F650@<X0>(double *a1@<X8>)
{
  double v1;
  double v2;
  double v3;

  v1 = *a1;
  sub_10032FEEC(*a1);
  v2 = ceil(v1);
  v3 = floor(v1);
  if (v1 >= 0.0)
    v2 = v3;
  return (unsigned __int16)(int)v2;
}

void sub_10032F684()
{
  sub_10032FF74();
}

void sub_10032F6A0()
{
  sub_1003300C8();
}

void sub_10032F6BC()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6A0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert empty value to a type");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<unsigned short>::operator()(boost::none_t) const [T = unsigned short]", (uint64_t)"../common/util/overridable_setting.h", 111, (uint64_t)v0);
}

void sub_10032F770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_10032F7D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10032F7C8);
}

void sub_10032F7FC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10032F810(uint64_t result)
{
  int v1;
  std::bad_cast *exception;
  std::bad_cast *v3;
  std::bad_cast *v4;
  std::bad_cast *v5;

  v1 = 2 * ((int)result >= 0x10000);
  if ((int)result < 0)
    v1 = 1;
  if (v1 == 2)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    v3 = sub_10016A6B8(exception);
  }
  if (v1 == 1)
  {
    v4 = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    v4->__vftable = 0;
    v5 = sub_10016A694(v4);
  }
  return result;
}

uint64_t sub_10032F88C(uint64_t result)
{
  int v1;
  std::bad_cast *exception;
  std::bad_cast *v3;
  std::bad_cast *v4;
  std::bad_cast *v5;

  v1 = 2 * (result >= 0x10000);
  if (result < 0)
    v1 = 1;
  if (v1 == 2)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    v3 = sub_10016A6B8(exception);
  }
  if (v1 == 1)
  {
    v4 = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    v4->__vftable = 0;
    v5 = sub_10016A694(v4);
  }
  return result;
}

uint64_t sub_10032F908(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  int v6;
  int v7;
  unsigned __int16 v9;
  std::bad_cast v10;
  unsigned __int16 *v11;
  void *v12;
  unsigned __int8 *v13;

  v9 = 0;
  v2 = a2[23];
  v3 = *(unsigned __int8 **)a2;
  if ((v2 & 0x80u) != 0)
    v2 = *((_QWORD *)a2 + 1);
  else
    v3 = a2;
  if (!v2)
    goto LABEL_13;
  v4 = &v3[v2];
  v5 = *v3;
  if (v5 == 45 || v5 == 43)
    ++v3;
  LOBYTE(v10.__vftable) = 0;
  WORD1(v10.__vftable) = 1;
  v11 = &v9;
  v12 = v3;
  v13 = v4;
  v6 = sub_10032FA08((uint64_t)&v10);
  if (v5 == 45)
  {
    v7 = -v9;
    v9 = -v9;
    if ((v6 & 1) != 0)
      return (unsigned __int16)v7;
LABEL_13:
    std::bad_cast::bad_cast(&v10);
    v10.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v10);
  }
  if (!v6)
    goto LABEL_13;
  return v9;
}

void sub_10032F9F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_cast a11)
{
  std::bad_cast::~bad_cast(&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_10032FA08(uint64_t a1)
{
  uint64_t v1;
  _WORD *v2;
  int v3;
  const std::locale *v6;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  const std::locale::facet *v10;
  uint64_t v11;
  char v12;
  _WORD *v13;
  int v14;
  unsigned int v15;
  unsigned __int16 v16;
  int v17;
  int v18;
  unsigned __int16 v19;
  char v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned __int8 v23;
  _BYTE *p_p;
  char v25;
  unint64_t v26;
  _BYTE *v27;
  _WORD *v28;
  int v29;
  unsigned int v30;
  BOOL v31;
  char v32;
  unsigned __int16 v33;
  int v34;
  int v35;
  unsigned __int16 v36;
  _BYTE *v37;
  char v38;
  _WORD *v39;
  int v40;
  unsigned int v41;
  unsigned __int16 v42;
  int v43;
  int v44;
  unsigned __int16 v45;
  void *__p;
  uint64_t v47;
  unsigned __int8 v48;
  std::locale v49;

  v1 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v1 - 1;
  v2 = *(_WORD **)(a1 + 8);
  *v2 = 0;
  if (*(_QWORD *)(a1 + 16) > (unint64_t)(v1 - 1))
    return 0;
  v3 = *(unsigned __int8 *)(v1 - 1);
  if ((v3 - 58) < 0xFFFFFFF6)
    return 0;
  *v2 = v3 - 48;
  *(_QWORD *)(a1 + 24) = v1 - 2;
  std::locale::locale(&v49);
  v6 = std::locale::classic();
  if (std::locale::operator==(&v49, v6))
  {
    v7 = *(_QWORD *)(a1 + 16);
    v8 = *(_BYTE **)(a1 + 24);
    if ((unint64_t)v8 >= v7)
    {
      v12 = *(_BYTE *)a1 != 0;
      while (1)
      {
        v15 = *(unsigned __int16 *)(a1 + 2);
        v12 |= v15 >> 1 > 0xCCC;
        *(_BYTE *)a1 = v12 & 1;
        v16 = 10 * v15;
        *(_WORD *)(a1 + 2) = 10 * v15;
        v17 = (char)*v8;
        if ((*v8 - 58) < 0xF6u)
          break;
        v18 = v17 - 48;
        v19 = (v17 - 48) * v16;
        if (v18)
        {
          if ((v12 & 1) != 0)
            break;
          if ((((unsigned __int16)v18 * v16) & 0xFFFF0000) != 0)
            break;
          v13 = *(_WORD **)(a1 + 8);
          v14 = (unsigned __int16)*v13;
          if (((v14 + v19) & 0x10000) != 0)
            break;
        }
        else
        {
          v13 = *(_WORD **)(a1 + 8);
          LOWORD(v14) = *v13;
        }
        *v13 = v14 + v19;
        *(_QWORD *)(a1 + 24) = --v8;
        if ((unint64_t)v8 < v7)
          goto LABEL_6;
      }
      v9 = 0;
    }
    else
    {
LABEL_6:
      v9 = 1;
    }
    goto LABEL_63;
  }
  v10 = std::locale::use_facet(&v49, &std::numpunct<char>::id);
  ((void (*)(void **__return_ptr))v10->__vftable[1].__on_zero_shared)(&__p);
  if ((char)v48 < 0)
  {
    v11 = v47;
    if (!v47 || *(char *)__p <= 0)
    {
LABEL_26:
      v26 = *(_QWORD *)(a1 + 16);
      v27 = *(_BYTE **)(a1 + 24);
      if ((unint64_t)v27 >= v26)
      {
        v38 = *(_BYTE *)a1 != 0;
        while (1)
        {
          v41 = *(unsigned __int16 *)(a1 + 2);
          v38 |= v41 >> 1 > 0xCCC;
          *(_BYTE *)a1 = v38 & 1;
          v42 = 10 * v41;
          *(_WORD *)(a1 + 2) = 10 * v41;
          v43 = (char)*v27;
          if ((*v27 - 58) < 0xF6u)
            break;
          v44 = v43 - 48;
          v45 = (v43 - 48) * v42;
          if (v44)
          {
            if ((v38 & 1) != 0)
              break;
            if ((((unsigned __int16)v44 * v42) & 0xFFFF0000) != 0)
              break;
            v39 = *(_WORD **)(a1 + 8);
            v40 = (unsigned __int16)*v39;
            if (((v40 + v45) & 0x10000) != 0)
              break;
          }
          else
          {
            v39 = *(_WORD **)(a1 + 8);
            LOWORD(v40) = *v39;
          }
          *v39 = v40 + v45;
          *(_QWORD *)(a1 + 24) = --v27;
          if ((unint64_t)v27 < v26)
            goto LABEL_27;
        }
LABEL_61:
        v9 = 0;
        if (((char)v48 & 0x80000000) == 0)
          goto LABEL_63;
        goto LABEL_62;
      }
      goto LABEL_27;
    }
  }
  else
  {
    v11 = v48;
    if (!v48 || (char)__p <= 0)
      goto LABEL_26;
  }
  v20 = ((uint64_t (*)(const std::locale::facet *))v10->__vftable[1].~facet_0)(v10);
  v21 = *(_BYTE **)(a1 + 16);
  v22 = *(_BYTE **)(a1 + 24);
  if (v22 >= v21)
  {
    v23 = 0;
    p_p = __p;
    if ((v48 & 0x80u) == 0)
      p_p = &__p;
    v25 = *p_p - 1;
    while (1)
    {
      while (v25)
      {
        v30 = *(unsigned __int16 *)(a1 + 2);
        if (*(_BYTE *)a1)
          v31 = 1;
        else
          v31 = v30 >> 1 > 0xCCC;
        v32 = v31;
        *(_BYTE *)a1 = v32;
        v33 = 10 * v30;
        *(_WORD *)(a1 + 2) = 10 * v30;
        v34 = (char)*v22;
        if ((*v22 - 58) < 0xF6u)
          goto LABEL_61;
        v35 = v34 - 48;
        v36 = (v34 - 48) * v33;
        if (v35)
        {
          if ((v32 & 1) != 0)
            goto LABEL_61;
          if ((((unsigned __int16)v35 * v33) & 0xFFFF0000) != 0)
            goto LABEL_61;
          v28 = *(_WORD **)(a1 + 8);
          v29 = (unsigned __int16)*v28;
          if (((v29 + v36) & 0x10000) != 0)
            goto LABEL_61;
        }
        else
        {
          v28 = *(_WORD **)(a1 + 8);
          LOWORD(v29) = *v28;
        }
        *v28 = v29 + v36;
        --v25;
        *(_QWORD *)(a1 + 24) = --v22;
        if (v22 < v21)
          goto LABEL_27;
      }
      if (*v22 != v20)
        break;
      if (v22 == v21)
        goto LABEL_61;
      if (v11 - 1 > (unint64_t)v23)
        ++v23;
      if ((v48 & 0x80u) == 0)
        v37 = &__p;
      else
        v37 = __p;
      v25 = v37[v23];
      *(_QWORD *)(a1 + 24) = --v22;
      if (v22 < v21)
        goto LABEL_27;
    }
    v9 = sub_10032FE30(a1);
    if (((char)v48 & 0x80000000) == 0)
      goto LABEL_63;
    goto LABEL_62;
  }
LABEL_27:
  v9 = 1;
  if ((char)v48 < 0)
LABEL_62:
    operator delete(__p);
LABEL_63:
  std::locale::~locale(&v49);
  return v9;
}

void sub_10032FDF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    std::locale::~locale(&a15);
    _Unwind_Resume(a1);
  }
  std::locale::~locale(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_10032FE30(uint64_t a1)
{
  unint64_t v1;
  _BYTE *v2;
  char v4;
  _WORD *v5;
  int v6;
  unsigned int v7;
  unsigned __int16 v8;
  int v9;
  int v10;
  unsigned __int16 v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_BYTE **)(a1 + 24);
  if ((unint64_t)v2 < v1)
    return 1;
  v4 = *(_BYTE *)a1 != 0;
  while (1)
  {
    v7 = *(unsigned __int16 *)(a1 + 2);
    v4 |= v7 >> 1 > 0xCCC;
    *(_BYTE *)a1 = v4 & 1;
    v8 = 10 * v7;
    *(_WORD *)(a1 + 2) = 10 * v7;
    v9 = (char)*v2;
    if ((*v2 - 58) < 0xF6u)
      break;
    v10 = v9 - 48;
    v11 = (v9 - 48) * v8;
    if (v10)
    {
      if ((v4 & 1) != 0)
        return 0;
      if ((((unsigned __int16)v10 * v8) & 0xFFFF0000) != 0)
        return 0;
      v5 = *(_WORD **)(a1 + 8);
      v6 = (unsigned __int16)*v5;
      if (((v6 + v11) & 0x10000) != 0)
        return 0;
    }
    else
    {
      v5 = *(_WORD **)(a1 + 8);
      LOWORD(v6) = *v5;
    }
    *v5 = v6 + v11;
    *(_QWORD *)(a1 + 24) = --v2;
    if ((unint64_t)v2 < v1)
      return 1;
  }
  return 0;
}

void sub_10032FEEC(double a1)
{
  int v1;
  std::bad_cast *exception;
  std::bad_cast *v3;
  std::bad_cast *v4;
  std::bad_cast *v5;

  v1 = 2 * (a1 >= 65536.0);
  if (a1 <= -1.0)
    v1 = 1;
  if (v1 == 2)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    v3 = sub_10016A6B8(exception);
  }
  if (v1 == 1)
  {
    v4 = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    v4->__vftable = 0;
    v5 = sub_10016A694(v4);
  }
}

void sub_10032FF74()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<unsigned short>::operator()(const F &) const [T = unsigned short, F = std::vector<boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_100330028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_100330090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100330080);
}

void sub_1003300B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1003300C8()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<unsigned short>::operator()(const F &) const [T = unsigned short, F = std::unordered_map<std::string, boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_10033017C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1003301E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1003301D4);
}

void sub_100330208(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10033021C@<X0>(char *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t result;
  std::bad_cast v3;
  _UNKNOWN **v4;
  _UNKNOWN **v5;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  result = sub_1003302B8(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v3);
  }
  return result;
}

void sub_10033028C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  uint64_t v10;

  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0)
    operator delete(*(void **)v10);
  _Unwind_Resume(a1);
}

uint64_t sub_1003302B8(char *a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  char v39;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v39 = *a1;
  v5 = sub_1000F0508(&v32, (uint64_t)&v39, 1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_100330530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100330564(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10033057C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 56;
    if (*(char *)(i - 9) < 0)
    {
      operator delete(*(void **)(i - 32));
      if ((*(char *)(i - 33) & 0x80000000) == 0)
        continue;
    }
    else if ((*(char *)(i - 33) & 0x80000000) == 0)
    {
      continue;
    }
    operator delete(*(void **)(i - 56));
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

char *sub_1003305FC(void **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  _BYTE *v7;
  char *v8;
  _BYTE *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  char *v18;
  char *v19;

  v3 = 0x6DB6DB6DB6DB6DB7 * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x492492492492492)
    sub_1000D02C0();
  if (0xDB6DB6DB6DB6DB6ELL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0xDB6DB6DB6DB6DB6ELL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3)) >= 0x249249249249249)
    v6 = 0x492492492492492;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x492492492492492)
      sub_1000CDEB8();
    v7 = operator new(56 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[56 * v3];
  v19 = &v7[56 * v6];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_10006CED8(&v7[56 * v3], *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)a2;
    *((_QWORD *)v8 + 2) = *(_QWORD *)(a2 + 16);
  }
  v9 = &v7[56 * v3 + 24];
  if (*(char *)(a2 + 47) < 0)
  {
    sub_10006CED8(v9, *(void **)(a2 + 24), *(_QWORD *)(a2 + 32));
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)(a2 + 24);
    *(_QWORD *)&v7[56 * v3 + 40] = *(_QWORD *)(a2 + 40);
  }
  *(_DWORD *)&v7[56 * v3 + 48] = *(_DWORD *)(a2 + 48);
  v10 = &v7[56 * v3];
  v18 = v10;
  v11 = v10 + 56;
  v12 = (char *)*a1;
  v13 = (char *)a1[1];
  if (v13 == *a1)
  {
    *a1 = v8;
    a1[1] = v11;
    a1[2] = v19;
    goto LABEL_29;
  }
  do
  {
    v14 = *(_OWORD *)(v13 - 56);
    *((_QWORD *)v10 - 5) = *((_QWORD *)v13 - 5);
    *(_OWORD *)(v10 - 56) = v14;
    *((_QWORD *)v13 - 6) = 0;
    *((_QWORD *)v13 - 5) = 0;
    *((_QWORD *)v13 - 7) = 0;
    v15 = *((_OWORD *)v13 - 2);
    *((_QWORD *)v10 - 2) = *((_QWORD *)v13 - 2);
    *((_OWORD *)v10 - 2) = v15;
    *((_QWORD *)v13 - 3) = 0;
    *((_QWORD *)v13 - 2) = 0;
    *((_QWORD *)v13 - 4) = 0;
    *((_DWORD *)v10 - 2) = *((_DWORD *)v13 - 2);
    v10 -= 56;
    v13 -= 56;
  }
  while (v13 != v12);
  v16 = (char *)*a1;
  v13 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v19;
  if (v13 == v16)
    goto LABEL_29;
  do
  {
    if (*(v13 - 9) < 0)
    {
      operator delete(*((void **)v13 - 4));
      if ((*(v13 - 33) & 0x80000000) == 0)
        goto LABEL_22;
    }
    else if ((*(v13 - 33) & 0x80000000) == 0)
    {
      goto LABEL_22;
    }
    operator delete(*((void **)v13 - 7));
LABEL_22:
    v13 -= 56;
  }
  while (v13 != v16);
  v13 = v16;
LABEL_29:
  if (v13)
    operator delete(v13);
  return v18 + 56;
}

void sub_100330844(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  if (*(char *)(v2 + 23) < 0)
  {
    operator delete(*(void **)v2);
    sub_10033057C((uint64_t)va);
    _Unwind_Resume(a1);
  }
  sub_10033057C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10033087C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004074E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10033088C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004074E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_1003308BC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100407530;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003308CC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100407530;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_1003308FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *__p[2];
  uint64_t v7;
  void *__dst[2];
  uint64_t v9;

  if (*(char *)(a3 + 23) < 0)
  {
    sub_10006CED8(__dst, *(void **)a3, *(_QWORD *)(a3 + 8));
    if ((*(char *)(a4 + 23) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a3;
    v9 = *(_QWORD *)(a3 + 16);
    if ((*(char *)(a4 + 23) & 0x80000000) == 0)
    {
LABEL_3:
      *(_OWORD *)__p = *(_OWORD *)a4;
      v7 = *(_QWORD *)(a4 + 16);
      goto LABEL_6;
    }
  }
  sub_10006CED8(__p, *(void **)a4, *(_QWORD *)(a4 + 8));
LABEL_6:
  sub_100008A7C(a2, (__int128 *)__dst, (__int128 *)__p);
  if ((SHIBYTE(v7) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v9) & 0x80000000) == 0)
      return;
LABEL_10:
    operator delete(__dst[0]);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v9) < 0)
    goto LABEL_10;
}

void sub_1003309C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if ((a21 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100330A0C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100407580;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100330A1C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100407580;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_100330A4C(uint64_t a1, char *__s)
{
  size_t v4;
  size_t v5;
  void **p_dst;
  uint64_t v7;
  uint64_t v8;
  void **__dst;
  unint64_t v11;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = off_1004075D0;
  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (void **)operator new(v7 + 1);
    __dst = p_dst;
    v11 = v8 | 0x8000000000000000;
    goto LABEL_8;
  }
  HIBYTE(v11) = v4;
  p_dst = (void **)&__dst;
  if (v4)
LABEL_8:
    memcpy(p_dst, __s, v5);
  *((_BYTE *)p_dst + v5) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = xmmword_10039B0A0;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 850045863;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_QWORD *)(a1 + 128) = 0;
  if (SHIBYTE(v11) < 0)
    operator delete(__dst);
  return a1;
}

void sub_100330B60(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100330B74(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004075D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100330B84(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004075D0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_100330BB4(uint64_t a1, char *__s)
{
  size_t v4;
  size_t v5;
  void **p_dst;
  uint64_t v7;
  uint64_t v8;
  void **__dst;
  unint64_t v11;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = off_1004075D0;
  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (void **)operator new(v7 + 1);
    __dst = p_dst;
    v11 = v8 | 0x8000000000000000;
    goto LABEL_8;
  }
  HIBYTE(v11) = v4;
  p_dst = (void **)&__dst;
  if (v4)
LABEL_8:
    memcpy(p_dst, __s, v5);
  *((_BYTE *)p_dst + v5) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = xmmword_10039B0A0;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 850045863;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_QWORD *)(a1 + 128) = 0;
  if (SHIBYTE(v11) < 0)
    operator delete(__dst);
  return a1;
}

void sub_100330CC8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100330CDC(uint64_t a1, char *__s)
{
  size_t v4;
  size_t v5;
  void **p_dst;
  uint64_t v7;
  uint64_t v8;
  void **__dst;
  unint64_t v11;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = off_1004075D0;
  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (void **)operator new(v7 + 1);
    __dst = p_dst;
    v11 = v8 | 0x8000000000000000;
    goto LABEL_8;
  }
  HIBYTE(v11) = v4;
  p_dst = (void **)&__dst;
  if (v4)
LABEL_8:
    memcpy(p_dst, __s, v5);
  *((_BYTE *)p_dst + v5) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = xmmword_10039B0A0;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 850045863;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_QWORD *)(a1 + 128) = 0;
  if (SHIBYTE(v11) < 0)
    operator delete(__dst);
  return a1;
}

void sub_100330DF0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100330E04(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100407620;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100330E14(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100407620;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_100330E44(uint64_t a1, int *a2, uint64_t a3, char *a4)
{
  int v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v10;

  *(_OWORD *)(a1 + 8) = 0u;
  *(_QWORD *)a1 = off_100405CD0;
  v5 = *a2;
  v10 = 0u;
  sub_1000C3F1C(a1 + 24, v5, (uint64_t *)&v10, *a4);
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v10 + 1);
  if (!*((_QWORD *)&v10 + 1))
    return a1;
  v7 = (unint64_t *)(*((_QWORD *)&v10 + 1) + 8);
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_100330EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  std::__shared_weak_count *v10;

  if (a10)
    sub_1003444E0();
  std::__shared_weak_count::~__shared_weak_count(v10);
  _Unwind_Resume(a1);
}

std::string *sub_100330F00@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100330F30(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_100330F4C()
{
  operator delete();
}

DIR *sub_100330F74(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_10006CF64((DIR **)(v1 + 48), (void **)(v1 + 56), (uint64_t *)va);
}

uint64_t sub_100330F98()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100330FF4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100331050()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100331568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;

  if (a17 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1003317A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003317E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100331970(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100331AEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_100331CA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void *v20;
  void *v21;

  if (a14 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_100331DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100331E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100331F24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100331F38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_100331F78()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100331FD4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100332030()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10033208C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1003320E8()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_100332144(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100332158(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100332194(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1003321A4()
{
  if (qword_100417EF8 != -1)
    dispatch_once(&qword_100417EF8, &stru_100407900);
  return (id)qword_100417F00;
}

void sub_10033268C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100332B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_100332B94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100332BA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100332BB4(uint64_t a1)
{
  NSObject *v2;
  uint8_t v3[16];

  if (qword_100417EF8 != -1)
  {
    dispatch_once(&qword_100417EF8, &stru_100407900);
    v2 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_4;
    goto LABEL_3;
  }
  v2 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "unavailable foreground session reset complete", v3, 2u);
  }
LABEL_4:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100332C60(uint64_t a1)
{
  NSObject *v2;
  uint8_t v3[16];

  if (qword_100417EF8 != -1)
  {
    dispatch_once(&qword_100417EF8, &stru_100407900);
    v2 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_4;
    goto LABEL_3;
  }
  v2 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "available foreground session reset complete", v3, 2u);
  }
LABEL_4:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100332D0C(uint64_t a1)
{
  NSObject *v2;
  uint8_t v3[16];

  if (qword_100417EF8 != -1)
  {
    dispatch_once(&qword_100417EF8, &stru_100407900);
    v2 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_4;
    goto LABEL_3;
  }
  v2 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "background session reset complete", v3, 2u);
  }
LABEL_4:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100332E60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100332F68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100332F7C(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x100332F0CLL);
}

void sub_100332F8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100332F9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100333020(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100333110(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100333124(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1003330B0);
}

void sub_100333134(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100333144(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x100333070);
}

void sub_100333158(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100333248(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10033325C(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1003331E8);
}

void sub_10033326C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10033327C(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1003331A8);
}

void sub_100333290(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100333380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_1003333AC(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 8));
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1003334A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::future<void> a10)
{
  uint64_t v10;

  std::future<void>::~future(&a10);
  std::promise<void>::~promise((std::promise<void> *)(v10 - 56));

  _Unwind_Resume(a1);
}

void sub_1003334C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::promise<void>::~promise((std::promise<void> *)(v1 - 56));

  _Unwind_Resume(a1);
}

void sub_1003334E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003334F4(uint64_t a1)
{
  objc_storeStrong((id *)(**(_QWORD **)(a1 + 32) + 8), **(id **)(a1 + 40));
  std::promise<void>::set_value(*(std::promise<void> **)(a1 + 48));
}

__n128 sub_100333528(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[2];
  a1[3].n128_u64[0] = a2[3].n128_u64[0];
  a1[2] = result;
  return result;
}

void sub_1003336C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1003336E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003336FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100333714(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100333728(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10033373C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100333750(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003337E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003337F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100333DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_100333E80(id a1, NSArray *a2, NSArray *a3, NSArray *a4)
{
  NSArray *v6;
  NSArray *v7;
  NSArray *v8;
  NSObject *v9;
  NSArray *v10;
  id v11;
  uint64_t v12;
  void *i;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint8_t v18[128];
  uint8_t buf[4];
  NSUInteger v20;

  v6 = a2;
  v7 = a3;
  v8 = a4;
  if (qword_100417EF8 != -1)
    dispatch_once(&qword_100417EF8, &stru_100407900);
  v9 = (id)qword_100417F00;
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 134217984;
    v20 = -[NSArray count](v8, "count");
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Building list of in-flight background downloads to cancel: downloadTasks: %lu.", buf, 0xCu);
  }

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v10 = v8;
  v11 = -[NSArray countByEnumeratingWithState:objects:count:](v10, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v11)
  {
    v12 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v12)
          objc_enumerationMutation(v10);
        objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i), "cancel", (_QWORD)v14);
      }
      v11 = -[NSArray countByEnumeratingWithState:objects:count:](v10, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v11);
  }

}

void sub_10033401C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1003340CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1003340E4(uint64_t a1, void *a2, void *a3, void *a4)
{
  NSObject *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id obj;
  _QWORD v24[4];
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint8_t v30[128];
  uint8_t buf[4];
  id v32;

  v20 = a2;
  v21 = a3;
  v22 = a4;
  if (qword_100417EF8 != -1)
    dispatch_once(&qword_100417EF8, &stru_100407900);
  v7 = (id)qword_100417F00;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 134349056;
    v32 = objc_msgSend(v22, "count");
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Found %{public}lu download tasks to cancel", buf, 0xCu);
  }

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  obj = v22;
  v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v8)
  {
    v9 = *(_QWORD *)v27;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v27 != v9)
          objc_enumerationMutation(obj);
        v11 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[IndoorRequestInfo indoorRequestInfoFromTask:](IndoorRequestInfo, "indoorRequestInfoFromTask:", v11));
        v13 = *(void **)(a1 + 32);
        v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexSet indexSetWithIndexesInRange:](NSIndexSet, "indexSetWithIndexesInRange:", 0, (char *)objc_msgSend(v13, "count") - 1));
        v24[0] = _NSConcreteStackBlock;
        v24[1] = 3221225472;
        v24[2] = sub_100334538;
        v24[3] = &unk_100407758;
        v15 = v12;
        v25 = v15;
        v16 = objc_msgSend(v13, "indexOfObjectAtIndexes:options:passingTest:", v14, 0, v24);

        if (*(_QWORD *)(a1 + 32) && v16 == (id)0x7FFFFFFFFFFFFFFFLL)
        {
          if (qword_100417EF8 != -1)
            dispatch_once(&qword_100417EF8, &stru_100407900);
          v17 = (id)qword_100417F00;
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
          {
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "description"));
            *(_DWORD *)buf = 138477827;
            v32 = v18;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "Leaving %{private}@ as background", buf, 0xCu);

          }
        }
        else
        {
          objc_msgSend(v11, "cancel");
          if (qword_100417EF8 != -1)
            dispatch_once(&qword_100417EF8, &stru_100407900);
          v17 = (id)qword_100417F00;
          if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
          {
            v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "description"));
            *(_DWORD *)buf = 138477827;
            v32 = v19;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "Cancelling %{private}@", buf, 0xCu);

          }
        }

        v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    }
    while (v8);
  }

}

void sub_100334498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

id sub_100334538(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "floorUuid"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "floorUuid"));
  v8 = objc_msgSend(v6, "isEqualToString:", v7);

  if ((_DWORD)v8)
    *a4 = 1;
  return v8;
}

void sub_1003345A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003345BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1003345D4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[3];
  _QWORD v8[3];

  v7[0] = CFSTR("canstart");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
  v8[0] = v2;
  v7[1] = CFSTR("idsInUniverse");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32)));
  v8[1] = v3;
  v7[2] = CFSTR("pctOnDisk");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 36)));
  v8[2] = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v8, v7, 3));

  return v5;
}

void sub_1003346CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100334ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  void *v22;
  void *v23;

  if (a21 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_100334FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  void *v32;
  void *v33;
  void *v34;
  void *v35;

  _Unwind_Resume(a1);
}

void sub_100335254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;

  v16 = v14;

  _Block_object_dispose((const void *)(v15 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1003352BC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = objc_autoreleasePoolPush();
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = 0;

  objc_autoreleasePoolPop(v2);
}

void sub_100335304(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

void sub_1003354B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);

  _Unwind_Resume(a1);
}

void sub_1003354D8(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "onQueueNotifyDelegateForegroundFetchComplete");

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = 0;

}

void sub_100335518(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10033555C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100335670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  id *v21;
  uint64_t v22;

  objc_destroyWeak(v21);
  _Block_object_dispose(&a16, 8);

  objc_destroyWeak((id *)(v22 - 40));
  _Unwind_Resume(a1);
}

void sub_1003356A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003356B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1003356C4(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  void *v5;
  _QWORD v6[5];
  id v7;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "backgroundSessionQueue"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "session"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1003357C0;
  v6[3] = &unk_100407858;
  objc_copyWeak(&v7, v2);
  v6[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v5, "getTasksWithCompletionHandler:", v6);

  objc_destroyWeak(&v7);
}

void sub_100335788(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  id *v4;

  objc_destroyWeak(v4);

  _Unwind_Resume(a1);
}

void sub_1003357B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003357C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  void *v6;
  NSObject *v7;
  _BYTE *v8;
  id WeakRetained;
  uint64_t v10;
  void *v11;
  int v12;
  int64_t v13;
  __int16 v14;
  id v15;

  v5 = a4;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "indexesOfObjectsPassingTest:", &stru_100407830));
  if (qword_100417EF8 != -1)
    dispatch_once(&qword_100417EF8, &stru_100407900);
  v7 = (id)qword_100417F00;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = objc_msgSend(v5, "count");
    v12 = 134349312;
    v13 = v8 - (_BYTE *)objc_msgSend(v6, "count");
    v14 = 2050;
    v15 = objc_msgSend(v5, "count");
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Found %{public}lu out of %{public}lu download tasks complete", (uint8_t *)&v12, 0x16u);
  }

  if (!objc_msgSend(v6, "count"))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(WeakRetained, "notifyDelegatePrefetchComplete");

  }
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = 0;

}

void sub_100335924(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

BOOL sub_100335960(id a1, NSURLSessionDownloadTask *a2, unint64_t a3, BOOL *a4)
{
  NSURLSessionDownloadTask *v4;
  BOOL v6;

  v4 = a2;
  if (-[NSURLSessionDownloadTask state](v4, "state") == (id)2)
  {

    return 0;
  }
  else
  {
    v6 = -[NSURLSessionDownloadTask state](v4, "state") != (id)3;

    return v6;
  }
}

void sub_1003359BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100335A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  void *v11;

  sub_10007CDC0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100335AA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100335AB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100335ACC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100335CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  void *v26;
  void *v27;
  void *v28;

  _Block_object_dispose(&a21, 8);

  _Unwind_Resume(a1);
}

void sub_100335D08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100335D20(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  objc_msgSend(WeakRetained, "onQueueSessionWillSendRequestForEstablishedConnection:task:completionHandler:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = 0;

}

void sub_100335D68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100336634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;

  sub_1000F7B78(v51 - 160);
  if (a40 < 0)
    operator delete(__p);
  if (a46 < 0)
    operator delete(a41);

  _Unwind_Resume(a1);
}

uint64_t sub_1003367E4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100336A48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  _Block_object_dispose((const void *)(v4 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_100336A74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100336A8C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v3 = WeakRetained;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(std::__shared_weak_count **)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 72);
  v16 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  objc_msgSend(WeakRetained, "onQueueSession:didFinishDownloadTask:toPath:inTempPath:", v4, v5, v6, &v15);
  v10 = v16;
  if (v16)
  {
    v11 = (unint64_t *)&v16->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v14 = *(void **)(v13 + 40);
  *(_QWORD *)(v13 + 40) = 0;

}

void sub_100336B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_1000E095C((uint64_t)&a9);

  _Unwind_Resume(a1);
}

uint64_t sub_100336B60(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(result + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(result + 80) = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void sub_100336B84(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 80);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_100336F2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;

  if (a31 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_10033722C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(WeakRetained, "URLSession:task:didCompleteWithError:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_10033726C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003378D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33)
{
  void *v33;
  void *v34;
  void *v35;
  void *v36;

  sub_1000E095C((uint64_t)&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_100337A7C(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  NSObject *v8;
  id v9;
  uint64_t v10;
  id v11;
  int v13;
  id v14;
  __int16 v15;
  double v16;

  v3 = a1;
  v4 = a2;
  if (!v4)
    v4 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastRelevant"));
  objc_msgSend(v4, "timeIntervalSinceDate:", v5);
  v7 = v6;

  if (v7 < 0.0 && objc_msgSend(v3, "context") != (id)1)
  {
    if (qword_100417EF8 != -1)
      dispatch_once(&qword_100417EF8, &stru_100407900);
    v8 = (id)qword_100417F00;
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v11 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "venueUuid")));
      v13 = 136380931;
      v14 = objc_msgSend(v11, "UTF8String");
      v15 = 2050;
      v16 = v7 / 3600.0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "TileRelevant, %{private}s, future, %{public}f, ignoring, #Warning", (uint8_t *)&v13, 0x16u);

    }
    goto LABEL_15;
  }
  if (v7 >= 540000.0)
  {
    if (qword_100417EF8 != -1)
      dispatch_once(&qword_100417EF8, &stru_100407900);
    v8 = (id)qword_100417F00;
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "venueUuid")));
      v13 = 136380931;
      v14 = objc_msgSend(v9, "UTF8String");
      v15 = 2050;
      v16 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "TileRelevant, %{private}s, tooOld, %{public}f, ignoring, #Warning", (uint8_t *)&v13, 0x16u);

    }
LABEL_15:

    v10 = 0;
    goto LABEL_16;
  }
  v10 = 1;
LABEL_16:

  return v10;
}

void sub_100337CC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_100337D00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100337D18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100337D28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100337D3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100337D54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100337F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  void *v24;
  void *v25;

  _Block_object_dispose(&a19, 8);

  _Unwind_Resume(a1);
}

void sub_100337F54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100337F68(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(WeakRetained, "onQueueSessionDidCompleteTask:withError:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = 0;

}

void sub_100337FAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100338620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  void *v35;
  void *v36;
  void *v37;
  void *v38;

  if (a28 < 0)
    operator delete(__p);
  if (a34 < 0)
    operator delete(a29);

  sub_10007CDC0((uint64_t)&a35);
  _Unwind_Resume(a1);
}

void sub_10033890C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100338AEC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

void sub_100338B1C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100407930;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100338B2C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100407930;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_100338B5C(uint64_t a1)
{
  return sub_10031A7CC(a1 + 24);
}

void sub_100338BE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_signpost_emit_with_name_impl(a1, v9, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, &a9, 0x26u);
}

void sub_100338C00(void *a1, NSObject *a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, a7, 0x30u);
}

BOOL sub_100338C18(NSObject *a1)
{
  return os_log_type_enabled(a1, OS_LOG_TYPE_FAULT);
}

void sub_100338C24(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x26u);
}

void sub_100338C38(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_impl(a1, v9, OS_LOG_TYPE_INFO, a4, &a9, 0x26u);
}

void sub_100338C4C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x30u);
}

BOOL sub_100338C54(os_log_t log)
{
  return os_signpost_enabled(log);
}

uint64_t sub_100338C5C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100338CB8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100338D14()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

id sub_100338D28()
{
  if (qword_100417EF8 != -1)
    dispatch_once(&qword_100417EF8, &stru_100407B20);
  return (id)qword_100417F00;
}

void sub_100338EA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100338EBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003393A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003397A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  void *v17;
  void *v18;
  id *v19;
  void *v20;
  uint64_t v21;

  objc_destroyWeak(v19);
  objc_destroyWeak((id *)(v21 - 136));

  _Unwind_Resume(a1);
}

void sub_1003398F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100339908(uint64_t a1)
{
  BOOL v2;
  int v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  unsigned __int8 v7;
  const void **v8;
  void **v9;
  void *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unsigned __int8 *WeakRetained;
  char v15[8];
  void *__p[2];
  unsigned __int8 v17;

  WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained)
    goto LABEL_40;
  sub_10033A34C((uint64_t)v15);
  if (WeakRetained[8])
    v2 = v15[0] == 0;
  else
    v2 = 1;
  if (!v2)
  {
    v4 = WeakRetained[39];
    if ((v4 & 0x80u) == 0)
      v5 = (void *)WeakRetained[39];
    else
      v5 = (void *)*((_QWORD *)WeakRetained + 3);
    v6 = v17;
    v7 = v17;
    if ((v17 & 0x80u) != 0)
      v6 = (unint64_t)__p[1];
    if (v5 == (void *)v6)
    {
      v8 = (const void **)(WeakRetained + 16);
      if ((v17 & 0x80u) == 0)
        v9 = __p;
      else
        v9 = (void **)__p[0];
      if ((v4 & 0x80) != 0)
      {
        LOBYTE(v3) = memcmp(*v8, v9, *((_QWORD *)WeakRetained + 3)) != 0;
        if ((v7 & 0x80) != 0)
          goto LABEL_33;
      }
      else if (WeakRetained[39])
      {
        while (*(unsigned __int8 *)v8 == *(unsigned __int8 *)v9)
        {
          v8 = (const void **)((char *)v8 + 1);
          v9 = (void **)((char *)v9 + 1);
          if (!--v4)
            goto LABEL_24;
        }
        LOBYTE(v3) = 1;
        if ((v17 & 0x80) != 0)
        {
LABEL_33:
          operator delete(__p[0]);
          if ((v3 & 1) == 0)
            goto LABEL_40;
          goto LABEL_34;
        }
      }
      else
      {
LABEL_24:
        LOBYTE(v3) = 0;
        if ((v17 & 0x80) != 0)
          goto LABEL_33;
      }
    }
    else
    {
      LOBYTE(v3) = 1;
      if ((v17 & 0x80) != 0)
        goto LABEL_33;
    }
LABEL_9:
    if ((v3 & 1) == 0)
      goto LABEL_40;
    goto LABEL_34;
  }
  v3 = (WeakRetained[8] != 0) ^ (v15[0] != 0);
  if (v15[0])
  {
    if ((v17 & 0x80) != 0)
      goto LABEL_33;
    goto LABEL_9;
  }
  if (!v3)
    goto LABEL_40;
LABEL_34:
  v10 = (void *)*((_QWORD *)WeakRetained + 15);
  *((_QWORD *)WeakRetained + 15) = 0;

  v11 = (std::__shared_weak_count *)*((_QWORD *)WeakRetained + 6);
  *((_QWORD *)WeakRetained + 5) = 0;
  *((_QWORD *)WeakRetained + 6) = 0;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  objc_msgSend(WeakRetained, "_setWorkingdir:", *(_QWORD *)(a1 + 40), WeakRetained);
LABEL_40:

}

void sub_100339AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

void sub_100339AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

id sub_100339B00(uint64_t a1, uint64_t a2)
{
  id result;

  objc_copyWeak((id *)(a1 + 32), (id *)(a2 + 32));
  result = *(id *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_100339B38(uint64_t a1)
{
  id *v1;

  v1 = (id *)(a1 + 32);

  objc_destroyWeak(v1);
}

void sub_100339D28(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t *p_shared_owners;
  unint64_t v8;
  NSObject *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  void *v16;
  unsigned int v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  id v21;
  std::__shared_weak_count *v22;
  uint8_t buf[8];
  std::__shared_weak_count *v24;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  objc_msgSend(v3, "openTransactionWithDescription:", CFSTR("prefetch importing on keybag unlock"));

  v4 = objc_autoreleasePoolPush();
  v5 = objc_loadWeakRetained(WeakRetained + 16);
  v6 = v5;
  if (!v5)
    goto LABEL_20;
  objc_msgSend(v5, "fsDb");
  if (!v24)
    goto LABEL_6;
  p_shared_owners = &v24->__shared_owners_;
  do
    v8 = __ldaxr((unint64_t *)p_shared_owners);
  while (__stlxr(v8 - 1, (unint64_t *)p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
    std::__shared_weak_count::__release_weak(v24);
    if (*(_QWORD *)buf)
      goto LABEL_20;
  }
  else
  {
LABEL_6:
    if (*(_QWORD *)buf)
      goto LABEL_20;
  }
  if (qword_100417EF8 == -1)
  {
    v9 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_10;
    goto LABEL_9;
  }
  dispatch_once(&qword_100417EF8, &stru_100407B20);
  v9 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_9:
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "There's an active provider that needs the DB that became available", buf, 2u);
  }
LABEL_10:
  if (objc_msgSend(WeakRetained, "initializeDb"))
  {
    v10 = (std::__shared_weak_count *)WeakRetained[6];
    v21 = WeakRetained[5];
    v22 = v10;
    if (v10)
    {
      v11 = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
    }
    objc_msgSend(v6, "setFsDb:", &v21);
    v13 = v22;
    if (v22)
    {
      v14 = (unint64_t *)&v22->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }
LABEL_20:

  objc_autoreleasePoolPop(v4);
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  v17 = objc_msgSend(v16, "isLastOpenTransactionWithDescription:", CFSTR("prefetch importing on keybag unlock"));

  if (v17)
  {
    objc_msgSend(*(id *)(a1 + 32), "releaseObjectsNotNeededForLocalization");
    goto LABEL_25;
  }
  if (qword_100417EF8 == -1)
  {
    v18 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_25;
    goto LABEL_24;
  }
  dispatch_once(&qword_100417EF8, &stru_100407B20);
  v18 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_24:
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Deferring destruction of FilesystemDB objects and prefetcher since we're still active", buf, 2u);
  }
LABEL_25:
  if (qword_100417EF8 != -1)
  {
    dispatch_once(&qword_100417EF8, &stru_100407B20);
    v19 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_28;
    goto LABEL_27;
  }
  v19 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_27:
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Releasing the Keybag Unlocked transaction", buf, 2u);
  }
LABEL_28:
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager", v21));
  objc_msgSend(v20, "closeTransactionWithDescription:", CFSTR("prefetch importing on keybag unlock"));

}

void sub_10033A02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;

  sub_1000E095C((uint64_t)&a9);

  _Unwind_Resume(a1);
}

void sub_10033A060(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10033A2D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  if (a16)
  {
    if (a22 < 0)
      operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10033A34C(uint64_t a1)
{
  const char *v2;
  int v3;
  uint64_t v4;
  void *__p;
  char v6;
  _QWORD v7[2];
  __int128 v8;
  uint64_t v9;

  v2 = sub_10016E340();
  sub_1000B3964((uint64_t)v2);
  v3 = v8;
  sub_1000B3D5C((uint64_t)&v8);
  if (v3 == v3 >> 31)
  {
    *(_BYTE *)a1 = 0;
  }
  else
  {
    v7[0] = sub_10016E340();
    v7[1] = v4;
    v6 = 0;
    LOBYTE(__p) = 0;
    sub_100023300((uint64_t)v7, (uint64_t)&__p, (uint64_t)&v8);
    *(_OWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    v9 = 0;
    v8 = 0uLL;
    *(_BYTE *)a1 = 1;
    if (v6 < 0)
      operator delete(__p);
  }
}

void sub_10033A414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int128 __p, uint64_t a11, uint64_t a12, uint64_t a13, __int128 __dst, uint64_t a15)
{
  if (a2)
  {
    __cxa_begin_catch(exception_object);
    if (SHIBYTE(a11) < 0)
    {
      sub_10006CED8(&__dst, (void *)__p, *((unint64_t *)&__p + 1));
    }
    else
    {
      __dst = __p;
      a15 = a11;
    }
    __cxa_end_catch();
    JUMPOUT(0x10033A3B8);
  }
  _Unwind_Resume(exception_object);
}

void sub_10033A6F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10033A89C(uint64_t a1)
{
  void *v2;
  _QWORD **WeakRetained;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned int v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  NSObject *v15;
  int v17;
  uint64_t v18;

  v2 = objc_autoreleasePoolPush();
  WeakRetained = (_QWORD **)objc_loadWeakRetained((id *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  objc_msgSend(v4, "openTransactionWithDescription:", CFSTR("vacuumDBs"));

  if (qword_100417EF8 == -1)
  {
    v5 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_4;
    goto LABEL_3;
  }
  dispatch_once(&qword_100417EF8, &stru_100407B20);
  v5 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    LOWORD(v17) = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Processing request to vacuum databases", (uint8_t *)&v17, 2u);
  }
LABEL_4:
  if (objc_msgSend(WeakRetained, "initializeDb"))
  {
    if (qword_100417EF8 == -1)
    {
      v13 = (id)qword_100417F00;
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
LABEL_12:

        (*(void (**)(_QWORD *))(*WeakRetained[5] + 104))(WeakRetained[5]);
        goto LABEL_17;
      }
    }
    else
    {
      dispatch_once(&qword_100417EF8, &stru_100407B20);
      v13 = (id)qword_100417F00;
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        goto LABEL_12;
    }
    v6 = (*(uint64_t (**)(_QWORD *))(*WeakRetained[5] + 232))(WeakRetained[5]);
    if (*(char *)(v6 + 23) >= 0)
      v7 = v6;
    else
      v7 = *(_QWORD *)v6;
    v17 = 136380675;
    v18 = v7;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Vacuuming database at %{private}s", (uint8_t *)&v17, 0xCu);
    goto LABEL_12;
  }
  if (qword_100417EF8 == -1)
  {
    v15 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_ERROR))
      goto LABEL_17;
    goto LABEL_16;
  }
  dispatch_once(&qword_100417EF8, &stru_100407B20);
  v15 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_ERROR))
  {
LABEL_16:
    LOWORD(v17) = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "No DB handles could be obtained to process db vacuuming request.", (uint8_t *)&v17, 2u);
  }
LABEL_17:
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  v9 = objc_msgSend(v8, "isLastOpenTransactionWithDescription:", CFSTR("vacuumDBs"));

  if (v9)
  {
    objc_msgSend(WeakRetained, "releaseObjectsNotNeededForLocalization");
    goto LABEL_22;
  }
  if (qword_100417EF8 == -1)
  {
    v10 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_22;
    goto LABEL_21;
  }
  dispatch_once(&qword_100417EF8, &stru_100407B20);
  v10 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_21:
    LOWORD(v17) = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Deferring destruction of FilesystemDB objects and prefetcher since we're still active", (uint8_t *)&v17, 2u);
  }
LABEL_22:
  if (qword_100417EF8 != -1)
  {
    dispatch_once(&qword_100417EF8, &stru_100407B20);
    v11 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_25;
    goto LABEL_24;
  }
  v11 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_24:
    LOWORD(v17) = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Releasing the VacuumDBs transaction", (uint8_t *)&v17, 2u);
  }
LABEL_25:
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  objc_msgSend(v12, "closeTransactionWithDescription:", CFSTR("vacuumDBs"));

  objc_autoreleasePoolPop(v2);
}

void sub_10033AC48(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p)
{
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v14;

  if (!a2)
    _Unwind_Resume(a1);

  __cxa_begin_catch(a1);
  if (*(_QWORD *)(v11 + 3832) == -1)
  {
    v14 = *(id *)(v12 + 3840);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      goto LABEL_4;
  }
  else
  {
    dispatch_once(&qword_100417EF8, &stru_100407B20);
    v14 = *(id *)(v12 + 3840);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
LABEL_4:
      (*(void (**)(_QWORD))(**(_QWORD **)(v9 + 40) + 232))(*(_QWORD *)(v9 + 40));
      sub_10018CCC4((int)&__p);
    }
  }

  __cxa_end_catch();
  JUMPOUT(0x10033AA2CLL);
}

void sub_10033AEF4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  unsigned int v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  uint8_t v11[16];
  uint8_t v12[16];
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  objc_msgSend(v3, "openTransactionWithDescription:", CFSTR("clearTiles"));

  v4 = objc_autoreleasePoolPush();
  if (qword_100417EF8 == -1)
  {
    v5 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_4;
    goto LABEL_3;
  }
  dispatch_once(&qword_100417EF8, &stru_100407B20);
  v5 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Processing request to clear tiles", buf, 2u);
  }
LABEL_4:
  objc_msgSend(WeakRetained, "onQueueClearTiles:", *(_QWORD *)(a1 + 32));
  objc_autoreleasePoolPop(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  v7 = objc_msgSend(v6, "isLastOpenTransactionWithDescription:", CFSTR("clearTiles"));

  if (v7)
  {
    objc_msgSend(*(id *)(a1 + 40), "releaseObjectsNotNeededForLocalization");
    goto LABEL_9;
  }
  if (qword_100417EF8 == -1)
  {
    v8 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_9;
    goto LABEL_8;
  }
  dispatch_once(&qword_100417EF8, &stru_100407B20);
  v8 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_8:
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Deferring destruction of FilesystemDB objects and prefetcher since we're still active", v12, 2u);
  }
LABEL_9:
  if (qword_100417EF8 != -1)
  {
    dispatch_once(&qword_100417EF8, &stru_100407B20);
    v9 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_12;
    goto LABEL_11;
  }
  v9 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_11:
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Releasing the ClearTiles transaction", v11, 2u);
  }
LABEL_12:
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  objc_msgSend(v10, "closeTransactionWithDescription:", CFSTR("clearTiles"));

}

void sub_10033B12C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10033B148(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10033B268(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  unsigned int v6;
  void *v7;
  uint8_t v8[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (!WeakRetained)
    goto LABEL_9;
  if (*((_QWORD *)WeakRetained + 18))
  {
    if (qword_100417EF8 == -1)
    {
      v3 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      {
LABEL_6:
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "prefetcher"));
        objc_msgSend(v4, "invalidate");

        objc_msgSend(v2, "setPrefetcher:", 0);
        goto LABEL_7;
      }
    }
    else
    {
      dispatch_once(&qword_100417EF8, &stru_100407B20);
      v3 = qword_100417F00;
      if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
        goto LABEL_6;
    }
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Invalidating the prefetcher", v8, 2u);
    goto LABEL_6;
  }
LABEL_7:
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "transactionManager"));
  v6 = objc_msgSend(v5, "hasOpenTransactionWithDescription:", CFSTR("Prefetching"));

  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "transactionManager"));
    objc_msgSend(v7, "closeTransactionWithDescription:", CFSTR("Prefetching"));

  }
LABEL_9:

}

void sub_10033B398(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_10033B3B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_10033B3C8(uint64_t a1)
{

  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10033B510(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  objc_destroyWeak((id *)(v3 - 56));

  _Unwind_Resume(a1);
}

void sub_10033B52C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "onQueuePrefetch:callback:when:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56));

}

void sub_10033B56C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10033BC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41)
{
  sub_10033C0D8(&a41);

  _Unwind_Resume(a1);
}

id sub_10033BCA8(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  _QWORD v15[11];
  _QWORD v16[11];

  v15[0] = CFSTR("numIncoming");
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[8]));
  v16[0] = v14;
  v15[1] = CFSTR("numQueued");
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[9]));
  v16[1] = v13;
  v15[2] = CFSTR("numAlreadyOnDisk");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[10]));
  v16[2] = v2;
  v15[3] = CFSTR("numLowPriority");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[11]));
  v16[3] = v3;
  v15[4] = CFSTR("numEvictLow");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[12]));
  v16[4] = v4;
  v15[5] = CFSTR("numEvictOff");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[13]));
  v16[5] = v5;
  v15[6] = CFSTR("numTilesInDb");
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[14]));
  v16[6] = v6;
  v15[7] = CFSTR("pctRequested");
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[17]));
  v16[7] = v7;
  v15[8] = CFSTR("pctEvicted");
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[18]));
  v16[8] = v8;
  v15[9] = CFSTR("pctOnDisk");
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[19]));
  v16[9] = v9;
  v15[10] = CFSTR("pctQueued");
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[20]));
  v16[10] = v10;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v16, v15, 11));

  return v11;
}

void sub_10033BF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

id sub_10033BF9C(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[4];
  _QWORD v8[4];

  v7[0] = CFSTR("numEvicted");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[8]));
  v8[0] = v2;
  v7[1] = CFSTR("numUntouched");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[17]));
  v8[1] = v3;
  v7[2] = CFSTR("pctUntouched");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[18]));
  v7[3] = CFSTR("trigger");
  v8[2] = v4;
  v8[3] = CFSTR("prefetch");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v8, v7, 4));

  return v5;
}

void sub_10033C0A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void **sub_10033C0D8(void **a1)
{
  void **v2;
  void **v3;
  void *v4;

  v2 = (void **)*a1;
  if (*a1)
  {
    v3 = (void **)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        if (*((char *)v3 - 9) < 0)
          operator delete(*(v3 - 4));
        v3 -= 4;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_10033C790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19)
{
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_10033CD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  void *v34;

  if (a21 < 0)
  {
    operator delete(a16);
    if ((a28 & 0x80000000) == 0)
    {
LABEL_4:
      if (a34 < 0)
        operator delete(a29);

      _Unwind_Resume(a1);
    }
  }
  else if ((a28 & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(__p);
  goto LABEL_4;
}

void sub_10033CE74(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = (std::__shared_weak_count *)a1[1];
  *a1 = 0;
  a1[1] = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_10033D014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_10033D034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10033D050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10033D1D4(_Unwind_Exception *a1)
{
  void **v1;

  sub_1000F7D3C(v1);
  _Unwind_Resume(a1);
}

void sub_10033D1E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10033D560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  va_list va;

  va_start(va, a4);
  v7 = v6;

  sub_1000F7D3C((void **)va);
  _Unwind_Resume(a1);
}

void sub_10033DE68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  uint64_t v41;

  if (a41 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

id sub_10033DF40(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  _QWORD v9[4];
  _QWORD v10[4];

  v9[0] = CFSTR("numEvicted");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 56)));
  v10[0] = v2;
  v9[1] = CFSTR("numUntouched");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 60)));
  v10[1] = v3;
  v9[2] = CFSTR("pctUntouched");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 64)));
  v10[2] = v4;
  v9[3] = CFSTR("trigger");
  v5 = (_QWORD *)(a1 + 32);
  if (*(char *)(a1 + 55) < 0)
    v5 = (_QWORD *)*v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v5));
  v10[3] = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v10, v9, 4));

  return v7;
}

void sub_10033E078(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

_QWORD *sub_10033E0B4(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  __int128 v3;

  result = (_QWORD *)(a1 + 32);
  if (*(char *)(a2 + 55) < 0)
    return sub_10006CED8(result, *(void **)(a2 + 32), *(_QWORD *)(a2 + 40));
  v3 = *(_OWORD *)(a2 + 32);
  result[2] = *(_QWORD *)(a2 + 48);
  *(_OWORD *)result = v3;
  return result;
}

void sub_10033E0E4(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
}

void sub_10033E45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;

  sub_1000F7D3C(&a9);

  _Unwind_Resume(a1);
}

id sub_10033E4FC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "onQueueShutdown");
}

void sub_10033E540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10033E698(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  NSObject *v4;
  void *v5;
  unsigned int v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  uint8_t v10[16];
  uint8_t v11[16];
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  objc_msgSend(v3, "openTransactionWithDescription:", CFSTR("getNumFloors"));

  if (qword_100417EF8 == -1)
  {
    v4 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_4;
    goto LABEL_3;
  }
  dispatch_once(&qword_100417EF8, &stru_100407B20);
  v4 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Processing request to get number of floors", buf, 2u);
  }
LABEL_4:
  **(_QWORD **)(a1 + 40) = objc_msgSend(WeakRetained, "onQueueNumFloors");
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  v6 = objc_msgSend(v5, "isLastOpenTransactionWithDescription:", CFSTR("getNumFloors"));

  if (v6)
  {
    objc_msgSend(WeakRetained, "releaseObjectsNotNeededForLocalization");
    goto LABEL_9;
  }
  if (qword_100417EF8 == -1)
  {
    v7 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_9;
    goto LABEL_8;
  }
  dispatch_once(&qword_100417EF8, &stru_100407B20);
  v7 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_8:
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Deferring destruction of FilesystemDB objects and prefetcher since we're still active", v11, 2u);
  }
LABEL_9:
  if (qword_100417EF8 != -1)
  {
    dispatch_once(&qword_100417EF8, &stru_100407B20);
    v8 = qword_100417F00;
    if (!os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
      goto LABEL_12;
    goto LABEL_11;
  }
  v8 = qword_100417F00;
  if (os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO))
  {
LABEL_11:
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Releasing getNumFloors transaction", v10, 2u);
  }
LABEL_12:
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionManager"));
  objc_msgSend(v9, "closeTransactionWithDescription:", CFSTR("getNumFloors"));

}

void sub_10033E8C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10033E8F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10033E904(uint64_t a1, uint64_t a2)
{
  objc_copyWeak((id *)(a1 + 32), (id *)(a2 + 32));
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
}

void sub_10033E938(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 32));
}

void sub_10033EB50(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

void sub_10033EB80(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Database");
  v2 = (void *)qword_100417F10;
  qword_100417F10 = (uint64_t)v1;

}

char *sub_10033EBB0(void **a1, const char **a2, _DWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  unint64_t v9;
  _DWORD *v10;
  _QWORD *v11;
  const char *v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  __int128 v22;
  char *v23;
  _QWORD *v25;
  char *v26;
  char *v27;

  v4 = ((_BYTE *)a1[1] - (_BYTE *)*a1) >> 5;
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59)
    sub_1000D02C0();
  v8 = (_BYTE *)a1[2] - (_BYTE *)*a1;
  if (v8 >> 4 > v5)
    v5 = v8 >> 4;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0)
    v9 = 0x7FFFFFFFFFFFFFFLL;
  else
    v9 = v5;
  if (v9)
  {
    if (v9 >> 59)
      sub_1000CDEB8();
    v10 = operator new(32 * v9);
  }
  else
  {
    v10 = 0;
  }
  v11 = &v10[8 * v4];
  v25 = v11;
  v27 = (char *)&v10[8 * v9];
  v12 = *a2;
  v13 = strlen(*a2);
  if (v13 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v14 = v13;
  if (v13 >= 0x17)
  {
    v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v15 = v13 | 7;
    v16 = v15 + 1;
    v17 = operator new(v15 + 1);
    v11[1] = v14;
    v11[2] = v16 | 0x8000000000000000;
    *v11 = v17;
    v11 = v17;
    goto LABEL_18;
  }
  *((_BYTE *)v11 + 23) = v13;
  if (v13)
LABEL_18:
    memmove(v11, v12, v14);
  *((_BYTE *)v11 + v14) = 0;
  v10[8 * v4 + 6] = *a3;
  v18 = (char *)&v10[8 * v4];
  v26 = v18;
  v19 = v18 + 32;
  v20 = (char *)*a1;
  v21 = (char *)a1[1];
  if (v21 == *a1)
  {
    *a1 = v25;
    a1[1] = v19;
    a1[2] = v27;
  }
  else
  {
    do
    {
      v22 = *((_OWORD *)v21 - 2);
      *((_QWORD *)v18 - 2) = *((_QWORD *)v21 - 2);
      *((_OWORD *)v18 - 2) = v22;
      *((_QWORD *)v21 - 3) = 0;
      *((_QWORD *)v21 - 2) = 0;
      *((_QWORD *)v21 - 4) = 0;
      *((_DWORD *)v18 - 2) = *((_DWORD *)v21 - 2);
      v18 -= 32;
      v21 -= 32;
    }
    while (v21 != v20);
    v23 = (char *)*a1;
    v21 = (char *)a1[1];
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v27;
    if (v21 != v23)
    {
      do
      {
        if (*(v21 - 9) < 0)
          operator delete(*((void **)v21 - 4));
        v21 -= 32;
      }
      while (v21 != v23);
      v21 = v23;
    }
  }
  if (v21)
    operator delete(v21);
  return v26 + 32;
}

void sub_10033EDB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10033EDC8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10033EDC8(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v5;

  v3 = *(void ***)(a1 + 8);
  v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      v5 = v2 - 4;
      *(_QWORD *)(a1 + 16) = v2 - 4;
      if (*((char *)v2 - 9) < 0)
      {
        operator delete(*v5);
        v5 = *(void ***)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != v3);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10033EE30()
{
  operator delete();
}

__n128 sub_10033EE44(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = off_100407B70;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_10033EE84(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = off_100407B70;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_10033EEA8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "Z40-[CLIndoorServiceDelegate initializeDb:]E3$_1")
    return a1 + 8;
  if (((v3 & (unint64_t)"Z40-[CLIndoorServiceDelegate initializeDb:]E3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z40-[CLIndoorServiceDelegate initializeDb:]E3$_1"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z40-[CLIndoorServiceDelegate initializeDb:]E3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_10033EF14()
{
  return &off_100407BE0;
}

_QWORD *sub_10033EF20(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;

  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100407C00;
  v5 = a1 + 3;
  v6 = (std::__shared_weak_count *)a4[1];
  v13 = *a4;
  v14 = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  sub_1000CB10C(v5, a2, a3, &v13);
  v9 = v14;
  if (!v14)
    return a1;
  v10 = (unint64_t *)&v14->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_10033EFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  std::__shared_weak_count *v10;

  if (a10)
    sub_10034356C(a10);
  std::__shared_weak_count::~__shared_weak_count(v10);
  _Unwind_Resume(a1);
}

void sub_10033EFEC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100407C00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10033EFFC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100407C00;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_10033F030()
{
  operator delete();
}

__n128 sub_10033F044(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = off_100407C50;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_10033F084(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = off_100407C50;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_10033F0AC(uint64_t a1, uint64_t *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5;
  int v6;
  NSObject *v7;
  _BOOL8 result;
  uint8_t v9[16];

  v5 = *a3;
  v6 = *a4;
  if (!objc_msgSend(**(id **)(a1 + 8), "tileLastModified:needsEvictionAt:", (double)*a2 - kCFAbsoluteTimeIntervalSince1970, **(double **)(a1 + 16)))return 1;
  if (v6 == 82)
  {
    ++**(_DWORD **)(a1 + 24);
    if (v5)
      ++**(_DWORD **)(a1 + 32);
  }
  if (qword_100417EF8 == -1)
  {
    v7 = qword_100417F00;
    result = os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO);
    if (!result)
      return result;
  }
  else
  {
    dispatch_once(&qword_100417EF8, &stru_100407B20);
    v7 = qword_100417F00;
    result = os_log_type_enabled((os_log_t)qword_100417F00, OS_LOG_TYPE_INFO);
    if (!result)
      return result;
  }
  *(_WORD *)v9 = 0;
  _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Requesting tile eviction of a venue", v9, 2u);
  return 0;
}

uint64_t sub_10033F1D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "Z53-[CLIndoorServiceDelegate onQueueClearTiles:fromDbs:]E3$_2")
    return a1 + 8;
  if (((v3 & (unint64_t)"Z53-[CLIndoorServiceDelegate onQueueClearTiles:fromDbs:]E3$_2" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z53-[CLIndoorServiceDelegate onQueueClearTiles:fromDbs:]E3$_2"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z53-[CLIndoorServiceDelegate onQueueClearTiles:fromDbs:]E3$_2" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

_UNKNOWN **sub_10033F240()
{
  return &off_100407CC0;
}

_QWORD *sub_10033F24C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v3 = *(_QWORD **)a2;
  v4 = *(_QWORD **)(a2 + 8);
  v5 = (uint64_t)v4 - *(_QWORD *)a2;
  if (v4 != *(_QWORD **)a2)
  {
    if (v5 < 0)
      sub_1000D02C0();
    v6 = operator new((size_t)v4 - *(_QWORD *)a2);
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[2 * (v5 >> 4)];
    do
    {
      v7 = v3[1];
      *v6 = *v3;
      v6[1] = v7;
      if (v7)
      {
        v8 = (unint64_t *)(v7 + 8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 1, v8));
      }
      v3 += 2;
      v6 += 2;
    }
    while (v3 != v4);
    a1[1] = v6;
  }
  return a1;
}

void sub_10033F2EC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)v1)
    sub_100342B7C((void **)(v1 + 8), *(char **)v1, (void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10033F320()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10033F37C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10033F3D8()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_10033F4B0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, unint64_t a13, int a14, __int16 a15, char a16, char a17, __int128 __dst, uint64_t a19)
{
  uint64_t v19;

  __cxa_begin_catch(a1);
  if (a17 < 0)
  {
    sub_10006CED8(&__dst, a12, a13);
  }
  else
  {
    __dst = *(_OWORD *)v19;
    a19 = *(_QWORD *)(v19 + 16);
  }
  __cxa_end_catch();
  JUMPOUT(0x10033F41CLL);
}

void sub_10033F4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  __cxa_end_catch();
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_10033F580(id a1)
{
  void *v1;
  NSObject *v2;
  id v3;
  id v4;
  void *v5;
  CFTypeRef cf;
  uint8_t buf[4];
  id v8;

  cf = 0;
  v1 = (void *)MKBUserTypeDeviceMode(0, &cf);
  if (cf)
  {
    if (qword_100417ED8 != -1)
      dispatch_once(&qword_100417ED8, &stru_100407CF0);
    v2 = (id)qword_100417EE0;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      v3 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend((id)cf, "description")));
      v4 = objc_msgSend(v3, "UTF8String");
      *(_DWORD *)buf = 136315138;
      v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "MKBUserTypeDeviceMode returned error: %s", buf, 0xCu);

    }
    CFRelease(cf);
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", kMKBDeviceModeKey));
  if (objc_msgSend(v5, "isEqualToString:", kMKBDeviceModeSharedIPad))
    byte_10041A8D2 = 1;

}

void sub_10033F6D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10033F744(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10033FA1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  void *v10;
  void *v11;
  void *v12;

  objc_destroyWeak((id *)&a9);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_10033FAB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)Keybag;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_10033FB3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10033FBA0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

void sub_10033FBD0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "onQueueUpdateDelegate");

}

void sub_10033FC04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10033FC18(uint64_t a1, uint64_t a2)
{
  objc_copyWeak((id *)(a1 + 32), (id *)(a2 + 32));
}

void sub_10033FC24(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 32));
}

uint64_t sub_10033FC2C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10033FC88()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10033FCE4()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t sub_10033FCF8(uint64_t a1)
{
  sub_10000CF68(a1 + 136);
  if (*(_BYTE *)(a1 + 104))
  {
    if (*(char *)(a1 + 135) < 0)
      operator delete(*(void **)(a1 + 112));
    *(_BYTE *)(a1 + 104) = 0;
  }
  if (*(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
LABEL_7:
      if ((*(char *)(a1 + 47) & 0x80000000) == 0)
        goto LABEL_8;
LABEL_12:
      operator delete(*(void **)(a1 + 24));
      if ((*(char *)(a1 + 23) & 0x80000000) == 0)
        return a1;
      goto LABEL_13;
    }
  }
  else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0)
    goto LABEL_12;
LABEL_8:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
    return a1;
LABEL_13:
  operator delete(*(void **)a1);
  return a1;
}

_QWORD *sub_10033FDA4(_QWORD *a1, uint64_t a2)
{
  _BYTE *v3;
  void *__p[2];
  uint64_t v6;

  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100407D50;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_10006CED8(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v6 = *(_QWORD *)(a2 + 16);
  }
  a1[3] = off_100407DA0;
  v3 = a1 + 4;
  if ((SHIBYTE(v6) & 0x80000000) == 0)
  {
    *(_OWORD *)v3 = *(_OWORD *)__p;
    a1[6] = v6;
    return a1;
  }
  sub_10006CED8(v3, __p[0], (unint64_t)__p[1]);
  if ((SHIBYTE(v6) & 0x80000000) == 0)
    return a1;
  operator delete(__p[0]);
  return a1;
}

void sub_10033FE5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::__shared_weak_count *v14;

  if (a14 < 0)
  {
    operator delete(__p);
    std::__shared_weak_count::~__shared_weak_count(v14);
    _Unwind_Resume(a1);
  }
  std::__shared_weak_count::~__shared_weak_count(v14);
  _Unwind_Resume(a1);
}

void sub_10033FE94(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100407D50;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10033FEA4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100407D50;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_10033FED4(uint64_t a1)
{
  *(_QWORD *)a1 = off_100407DA0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  operator delete();
}

char *sub_10033FF28@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[31] < 0)
    return (char *)sub_10006CED8((_BYTE *)a2, *((void **)result + 1), *((_QWORD *)result + 2));
  *(_OWORD *)a2 = *(_OWORD *)(result + 8);
  *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 3);
  return result;
}

uint64_t sub_10033FF54()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10033FFB0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10034000C()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t sub_100340020()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10034007C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

float64_t sub_1003400D8(float64x2_t *a1, float64x2_t *a2)
{
  float64_t result;

  *a1 = vsubq_f64(*a1, *a2);
  result = a1[1].f64[0] - a2[1].f64[0];
  a1[1].f64[0] = result;
  return result;
}

_QWORD *sub_1003400FC@<X0>(char *__s@<X1>, const void **a2@<X0>, _QWORD *a3@<X8>)
{
  int v6;
  size_t v7;
  _QWORD *result;
  unint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  char *v14;

  v6 = *((char *)a2 + 23);
  if (v6 >= 0)
    v7 = *((unsigned __int8 *)a2 + 23);
  else
    v7 = (size_t)a2[1];
  result = (_QWORD *)strlen(__s);
  v9 = (unint64_t)result + v7;
  if ((unint64_t)result + v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v10 = (size_t)result;
  if (v9 <= 0x16)
  {
    a3[1] = 0;
    a3[2] = 0;
    *a3 = 0;
    *((_BYTE *)a3 + 23) = v9;
    if (!v7)
      goto LABEL_15;
LABEL_11:
    if (v6 >= 0)
      v13 = a2;
    else
      v13 = *a2;
    result = memmove(a3, v13, v7);
    goto LABEL_15;
  }
  v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v9 | 7) != 0x17)
    v11 = v9 | 7;
  v12 = v11 + 1;
  result = operator new(v11 + 1);
  a3[1] = v9;
  a3[2] = v12 | 0x8000000000000000;
  *a3 = result;
  a3 = result;
  if (v7)
    goto LABEL_11;
LABEL_15:
  v14 = (char *)a3 + v7;
  if (v10)
    result = memmove(v14, __s, v10);
  v14[v10] = 0;
  return result;
}

uint64_t sub_1003401F4()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100340250()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1003402AC(uint64_t *a1, uint64_t a2, double a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v9[96];
  double v10;

  v6 = (uint64_t)(a1 + 18);
  sub_100051AE4((uint64_t)(a1 + 5), (uint64_t)(a1 + 18));
  a1[17] = a1[30];
  sub_10004F148((uint64_t)v9, a2);
  v10 = a3;
  sub_100051AE4(v6, (uint64_t)v9);
  *((double *)a1 + 30) = v10;
  nullsub_8(v9);
  v7 = a1[2];
  if (v7 >= a1[3])
  {
    v8 = sub_1003407F8(a1 + 1, v6);
  }
  else
  {
    sub_10004F148(a1[2], v6);
    *(_QWORD *)(v7 + 96) = a1[30];
    v8 = v7 + 104;
    a1[2] = v7 + 104;
  }
  a1[2] = v8;
  sub_1003406D0((uint64_t)a1, 0x4EC4EC4EC4EC4EC5 * ((v8 - a1[1]) >> 3) - 1);
}

void sub_100340394(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

void sub_10034039C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_8(va);
  _Unwind_Resume(a1);
}

BOOL sub_1003403B0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) != *(_QWORD *)(a1 + 16) && *(_DWORD *)(a1 + 32) == 2;
}

float64_t sub_1003403D4(uint64_t a1)
{
  float64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float64x2_t v8;
  uint64_t v9;
  float64x2_t v10;

  v8.f64[0] = sub_1000C3944();
  v8.f64[1] = v2;
  v9 = v3;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  if (v4 == v5)
  {
    v6 = *(_QWORD *)(a1 + 8);
  }
  else
  {
    do
    {
      sub_10004FA84((uint64_t)&v10, v4);
      sub_10005003C(&v8, &v10);
      v4 += 104;
    }
    while (v4 != v5);
    v4 = *(_QWORD *)(a1 + 8);
    v6 = *(_QWORD *)(a1 + 16);
  }
  sub_1000501E0(&v8, 1.0 / (double)(unint64_t)(0x4EC4EC4EC4EC4EC5 * ((v6 - v4) >> 3)));
  return v8.f64[0];
}

double sub_100340490(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  float64x2_t v13;

  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a1 + 16) || *(_DWORD *)(a1 + 32) != 2)
    return NAN;
  v12[0] = sub_1003403D4(a1);
  v12[1] = v2;
  v12[2] = v3;
  sub_10004FA84((uint64_t)&v13, *(_QWORD *)(a1 + 16) - 104);
  v4 = sub_100340590(&v13, (uint64_t)v12);
  sub_10004FA84((uint64_t)&v13, *(_QWORD *)(a1 + 8));
  v5 = sub_100340590(&v13, (uint64_t)v12);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 16) - 72);
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 32);
  v8 = v6 < v7;
  v9 = v6 - v7;
  if (v8)
    ++v9;
  v10 = v9 >> 1;
  if (v4 >= v5)
    v5 = v4;
  return v5 / ((double)v10 / 1000000000.0);
}

long double sub_100340590(float64x2_t *a1, uint64_t a2)
{
  double v4;
  double v5;
  long double v7;
  float64x2_t v8;
  uint64_t v9;

  v8 = *(float64x2_t *)a2;
  v9 = *(_QWORD *)(a2 + 16);
  sub_1003400D8(&v8, a1);
  v4 = sub_10004FBF4(v8.f64);
  v8 = *(float64x2_t *)a2;
  v9 = *(_QWORD *)(a2 + 16);
  sub_10005003C(&v8, a1);
  sub_1000501E0(&v8, 0.5);
  v5 = sub_10004FBF4(v8.f64);
  if (v5 < v4)
    return 3.14159265;
  v7 = asin(v4 / v5);
  return v7 + v7;
}

void **sub_100340678(void **a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = v2;
    if ((void *)v3 != v2)
    {
      do
        v3 = nullsub_8(v3 - 104);
      while ((void *)v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_1003406D0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *__p;
  void *v14;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16) - v2;
  if (v3 == 104)
  {
    *(_DWORD *)(a1 + 32) = 1;
  }
  else
  {
    v4 = v3 / 104;
    if (v3 / 104 <= a2)
    {
      v5 = 0;
    }
    else
    {
      v5 = 0;
      do
      {
        if (v5 != a2)
        {
          v6 = *(_QWORD *)(v2 + 104 * a2 + 32);
          v7 = *(_QWORD *)a1;
          v8 = (uint64_t *)(v2 + 32 + 104 * v5);
          while (1)
          {
            v9 = *v8;
            v8 += 13;
            if (v7 >= v6 - v9)
              break;
            ++v5;
            *(_DWORD *)(a1 + 32) = 2;
            if (a2 == v5)
              goto LABEL_6;
          }
        }
        if (v5 == a2)
        {
LABEL_6:
          *(_DWORD *)(a1 + 32) = 1;
          v5 = a2;
        }
        ++a2;
      }
      while (a2 != v4);
    }
    sub_100340A40(a1, v5, &__p);
    v10 = __p;
    if (__p)
    {
      v11 = (uint64_t)v14;
      v12 = __p;
      if (v14 != __p)
      {
        do
          v11 = nullsub_8(v11 - 104);
        while ((void *)v11 != v10);
        v12 = __p;
      }
      v14 = v10;
      operator delete(v12);
    }
  }
}

uint64_t sub_1003407F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  char *v16;

  v3 = 0x4EC4EC4EC4EC4EC5 * ((a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x276276276276276)
    sub_1000D02C0();
  if (0x9D89D89D89D89D8ALL * ((a1[2] - *a1) >> 3) > v4)
    v4 = 0x9D89D89D89D89D8ALL * ((a1[2] - *a1) >> 3);
  if ((unint64_t)(0x4EC4EC4EC4EC4EC5 * ((a1[2] - *a1) >> 3)) >= 0x13B13B13B13B13BLL)
    v6 = 0x276276276276276;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x276276276276276)
      sub_1000CDEB8();
    v7 = (char *)operator new(104 * v6);
  }
  else
  {
    v7 = 0;
  }
  v15 = (uint64_t)&v7[104 * v3];
  v16 = &v7[104 * v6];
  sub_10004F148(v15, a2);
  *(_QWORD *)(v15 + 96) = *(_QWORD *)(a2 + 96);
  v8 = v15 + 104;
  v10 = (char *)*a1;
  v9 = (char *)a1[1];
  if (v9 == (char *)*a1)
  {
    *a1 = v15;
    a1[1] = v8;
    a1[2] = (uint64_t)v16;
  }
  else
  {
    v11 = 0;
    do
    {
      sub_10004F148(v15 + v11 - 104, (uint64_t)&v9[v11 - 104]);
      *(_QWORD *)(v15 + v11 - 8) = *(_QWORD *)&v9[v11 - 8];
      v11 -= 104;
    }
    while (&v9[v11] != v10);
    v12 = (char *)*a1;
    v9 = (char *)a1[1];
    v13 = v15 + v11;
    v8 = v15 + 104;
    *a1 = v13;
    a1[1] = v15 + 104;
    a1[2] = (uint64_t)v16;
    if (v9 != v12)
    {
      do
      {
        v9 -= 104;
        nullsub_8(v9);
      }
      while (v9 != v12);
      v9 = v12;
    }
  }
  if (v9)
    operator delete(v9);
  return v8;
}

void sub_1003409B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1003409F0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003409C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  for (; v2; v2 += 104)
    nullsub_8(v3 + v2);
  sub_1003409F0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003409F0(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 104;
    nullsub_8(i - 104);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_100340A40(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 8);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_100340B10(a3, v5, v5 + 104 * a2, a2);
  if (a2)
  {
    v6 = v5 + 104 * a2;
    v7 = *(_QWORD *)(a1 + 16);
    if (v6 != v7)
    {
      v8 = 104 * a2;
      do
      {
        sub_100051AE4(v5, v5 + v8);
        *(_QWORD *)(v5 + 96) = *(_QWORD *)(v5 + v8 + 96);
        v5 += 104;
      }
      while (v5 + v8 != v7);
      v6 = *(_QWORD *)(a1 + 16);
    }
    while (v6 != v5)
      v6 = nullsub_8(v6 - 104);
    *(_QWORD *)(a1 + 16) = v5;
  }
}

void sub_100340AFC(_Unwind_Exception *a1)
{
  void **v1;

  sub_100340678(v1);
  _Unwind_Resume(a1);
}

void sub_100340B10(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (a4)
  {
    if (a4 >= 0x276276276276277)
      sub_1000D02C0();
    v8 = (char *)operator new(104 * a4);
    *a1 = v8;
    a1[1] = v8;
    a1[2] = &v8[104 * a4];
    if (a2 != a3)
    {
      v9 = 0;
      do
      {
        sub_10004F148((uint64_t)&v8[v9], a2 + v9);
        *(_QWORD *)(v10 + 96) = *(_QWORD *)(a2 + v9 + 96);
        v9 += 104;
      }
      while (a2 + v9 != a3);
      v8 += v9;
    }
    a1[1] = v8;
  }
}

void sub_100340BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_100340C20(&a9);
  _Unwind_Resume(a1);
}

void sub_100340BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  for (; v11; v11 -= 104)
    nullsub_8(v10 - 104 + v11);
  *(_QWORD *)(v9 + 8) = v10;
  sub_100340C20(&a9);
  _Unwind_Resume(a1);
}

void ***sub_100340C20(void ***result)
{
  void ***v1;
  void **v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v1 = result;
  if (!*((_BYTE *)result + 8))
  {
    v2 = *result;
    v3 = **result;
    if (v3)
    {
      v4 = (uint64_t)v2[1];
      v5 = **v1;
      if ((void *)v4 != v3)
      {
        do
          v4 = nullsub_8(v4 - 104);
        while ((void *)v4 != v3);
        v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

double sub_100340CA4(uint64_t a1)
{
  if (*(_BYTE *)a1)
    return 1.0 / ((double)*(uint64_t *)(a1 + 8) / 1000000000.0);
  else
    return NAN;
}

unsigned __int8 *sub_100340CDC(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v2 = *((_QWORD *)result + 3);
  if (v2 == 0x8000000000000000)
  {
    if (*result)
    {
      *result = 0;
      *((_QWORD *)result + 2) = 0x8000000000000000;
      *((_QWORD *)result + 3) = a2;
      return result;
    }
    goto LABEL_8;
  }
  v3 = *((_QWORD *)result + 2);
  if (v3 == 0x8000000000000000)
    v4 = 2 * (a2 - v2);
  else
    v4 = a2 - v3;
  v5 = *result;
  *((_QWORD *)result + 1) = v4;
  if (v5)
  {
LABEL_8:
    *((_QWORD *)result + 2) = v2;
    *((_QWORD *)result + 3) = a2;
    return result;
  }
  *result = 1;
  *((_QWORD *)result + 2) = v2;
  *((_QWORD *)result + 3) = a2;
  return result;
}

BOOL sub_100340D40(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) != 0x8000000000000000;
}

BOOL sub_100340D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  return v2 != 0x8000000000000000 && a2 - v2 < 166666667;
}

BOOL sub_100340D78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  return v2 != 0x8000000000000000 && a2 - v2 > 425000000;
}

uint64_t sub_100340D9C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100340DF8()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100340E54(uint64_t a1)
{
  void (***v2)(_QWORD);
  void (***v3)(_QWORD);
  void *v4;
  void (***v5)(_QWORD);
  void (***v6)(_QWORD);
  void (**v7)(_QWORD);
  BOOL v8;

  v2 = *(void (****)(_QWORD))(a1 + 8);
  if (v2)
  {
    v3 = *(void (****)(_QWORD))(a1 + 16);
    v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      v5 = v3 - 12;
      v6 = v3 - 12;
      do
      {
        v7 = *v6;
        v6 -= 12;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  return a1;
}

BOOL sub_100340EC4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  _BOOL4 v5;
  NSObject *v6;
  int v7;
  int v9;
  uint64_t v10;

  v4 = (unsigned __int8 *)(a1 + 120);
  v5 = sub_100340D54(a1 + 120, a2);
  if (v5)
  {
    if (qword_100417ED8 != -1)
    {
      dispatch_once(&qword_100417ED8, &stru_100407E08);
      v6 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_DEBUG))
        return !v5;
      goto LABEL_4;
    }
    v6 = qword_100417EE0;
    if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_DEBUG))
    {
LABEL_4:
      v9 = 134217984;
      v10 = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Spurious accelerometer data at time tNanos=%llu We will not trigger a step for this!!", (uint8_t *)&v9, 0xCu);
    }
  }
  else
  {
    sub_100340CDC(v4, a2);
    ++*(_DWORD *)(a1 + 156);
    *(double *)(a1 + 160) = sub_100340CA4((uint64_t)v4);
    if (sub_100340D40((uint64_t)v4))
      v7 = 1;
    else
      v7 = 3;
    *(_DWORD *)(a1 + 180) = v7;
  }
  return !v5;
}

void sub_100341008(uint64_t a1, uint64_t a2)
{
  sub_10026C34C(*(_BYTE **)(a1 + 96), a2);
}

uint64_t sub_100341010(uint64_t result, double a2)
{
  *(double *)(result + 168) = a2;
  return result;
}

uint64_t sub_100341018(uint64_t result, int a2)
{
  *(_DWORD *)(result + 112) = a2;
  return result;
}

void sub_100341020(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_10034104C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100407E38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10034105C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100407E38;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_10034108C(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  char *v8;
  uint64_t v9;

  if (a4)
  {
    if (a4 >= 0x2AAAAAAAAAAAAABLL)
      sub_1000D02C0();
    v8 = (char *)operator new(96 * a4);
    *a1 = v8;
    a1[1] = v8;
    a1[2] = &v8[96 * a4];
    if (a2 != a3)
    {
      v9 = 0;
      do
      {
        sub_10004F148((uint64_t)&v8[v9], a2 + v9);
        v9 += 96;
      }
      while (a2 + v9 != a3);
      v8 += v9;
    }
    a1[1] = v8;
  }
}

void sub_100341148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_100341194(&a9);
  _Unwind_Resume(a1);
}

void sub_10034115C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  for (; v11; v11 -= 96)
    (**(void (***)(uint64_t))(v10 - 96 + v11))(v10 - 96 + v11);
  *(_QWORD *)(v9 + 8) = v10;
  sub_100341194(&a9);
  _Unwind_Resume(a1);
}

void ***sub_100341194(void ***result)
{
  void ***v1;
  void **v2;
  char *v3;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  void (**v8)(char *);
  BOOL v9;

  v1 = result;
  if (!*((_BYTE *)result + 8))
  {
    v2 = *result;
    v3 = (char *)**result;
    if (v3)
    {
      v4 = (char *)v2[1];
      v5 = **result;
      if (v4 != v3)
      {
        v6 = v4 - 96;
        v7 = v4 - 96;
        do
        {
          v8 = *(void (***)(char *))v7;
          v7 -= 96;
          (*v8)(v6);
          v9 = v6 == v3;
          v6 = v7;
        }
        while (!v9);
        v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

uint64_t sub_100341234()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100341290()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1003412EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  nullsub_8(a1 + 144);
  nullsub_8(a1 + 40);
  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
        v3 = nullsub_8(v3 - 104);
      while (v3 != v2);
      v4 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_100341354(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  long double v5;
  long double v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  long double v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  double v12[3];

  sub_10004FA84((uint64_t)v12, a2);
  sub_100341404(a1, v12, &v10);
  v4 = v11;
  v5 = *(double *)(v10 + 8);
  v6 = *(double *)(v10 + 16);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v9 = atan2(v6, v5);
  sub_1003402AC((uint64_t *)(a1 + 432), a2, 3.14159265 - v9);
}

void sub_100341404(uint64_t a1@<X0>, double *a2@<X1>, _QWORD *a3@<X8>)
{
  double v6;
  uint64_t v7;
  long double v8;
  long double v9;
  double v10;
  long double v11;
  double v12;
  _QWORD *v13;
  _QWORD *v14;
  long double v15;

  v6 = sub_10004FBF4(a2);
  v7 = nullsub_10(a1 + 16);
  v8 = *(double *)(v7 + 8);
  v9 = *(double *)(v7 + 16);
  v10 = hypot(v9, v8);
  if (fabs(v10) >= nextafter(1.0, INFINITY) + -1.0)
  {
    v11 = *a2;
    v12 = (*a2 * 0.0 - v9 * a2[1] + v8 * a2[2]) / v10;
    if (*a2 == 0.0 && v12 == 0.0)
    {
      v13 = operator new(0x38uLL);
      v13[1] = 0;
      v13[2] = 0;
      *v13 = off_100407FA8;
      v13[4] = 0;
      v13[5] = 0;
      *((_BYTE *)v13 + 48) = 0;
      a3[1] = v13;
      v13[3] = off_1003F9908;
      *a3 = v13 + 3;
    }
    else
    {
      v14 = operator new(0x38uLL);
      v14[1] = 0;
      v14[2] = 0;
      *v14 = off_100407FA8;
      v14[3] = off_1003F9908;
      *((_BYTE *)v14 + 48) = 0;
      *a3 = v14 + 3;
      a3[1] = v14;
      v15 = v6 / hypot(v11, v12);
      *((long double *)v14 + 4) = v11 * v15;
      *((long double *)v14 + 5) = v12 * v15;
    }
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
}

void sub_100341558(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  long double v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  double v17[3];

  sub_10004FA84((uint64_t)v17, a2);
  sub_100341404((uint64_t)a1, v17, &v15);
  v4 = v15;
  v5 = atan2(*(long double *)(v15 + 16), *(long double *)(v15 + 8));
  sub_1003402AC(a1 + 85, a2, 3.14159265 - v5);
  v6 = (uint64_t)v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  a1[116] = v4;
  v9 = (std::__shared_weak_count *)a1[117];
  a1[117] = v6;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v16;
  if (v16)
  {
    v13 = (unint64_t *)&v16->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_10034166C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000E095C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100341690(uint64_t a1)
{
  return a1 + 432;
}

void sub_100341698(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  double v8;
  double v9;
  double v10[3];

  v4 = *(_QWORD *)(a1 + 928);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 936);
    *a2 = v4;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    v10[0] = sub_1000C3944();
    v10[1] = v8;
    v10[2] = v9;
    sub_100341404(a1, v10, a2);
  }
}

void sub_100341714(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  double v4;
  double v5;
  double v6[3];

  v6[0] = sub_1003403D4(a1 + 680);
  v6[1] = v4;
  v6[2] = v5;
  sub_100341404(a1, v6, a2);
}

void sub_10034175C(uint64_t a1)
{
  sub_100016F34(a1);
  operator delete();
}

void sub_100341780(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100407FA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100341790(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100407FA8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1003417C0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1003417D0()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10034182C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100341898()
{
  id v0;
  NSObject *v1;
  id v2;
  NSObject *v3;
  id v4;
  NSObject *v5;
  uint64_t result;
  uint8_t buf[40];

  v0 = sub_1000CD480();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_FAULT))
  {
    sub_1000D0FE4();
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Bluetooth scanning should not be on by default\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x26u);
  }

  v2 = sub_1000CD480();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_signpost_enabled(v3))
  {
    sub_1000D0FE4();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Bluetooth scanning should not be on by default", "{\"msg%{public}.0s\":\"Bluetooth scanning should not be on by default\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x26u);
  }

  v4 = sub_1000CD480();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    sub_1000D0FE4();
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Bluetooth scanning should not be on by default\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x26u);
  }

  result = abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/purpleslam/daemon/indoord/main.mm", 67, "main");
  __break(1u);
  return result;
}

uint64_t (***sub_100341A0C(void *a1, uint64_t *a2))()
{
  uint64_t (***result)();
  uint64_t v4;

  __cxa_begin_catch(a1);
  result = &boost::system::detail::generic_cat_holder<void>::instance;
  if ((unint64_t)qword_100417FC8 >> 1 == 0x595588BD12BF6FE8
    || (result = (uint64_t (***)())((BOOL (*)(uint64_t, int))boost::system::detail::generic_cat_holder<void>::instance[6])((uint64_t)&boost::system::detail::generic_cat_holder<void>::instance, 12), (result & 1) != 0))
  {
    v4 = 3;
  }
  else
  {
    v4 = 2;
  }
  *a2 = v4;
  return result;
}

void sub_100341A74()
{
  id v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t v23;

  v0 = sub_1000E0150();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (sub_1000E0880(v1))
  {
    sub_1000E07A8();
    sub_1000E085C((void *)&_mh_execute_header, v2, v3, "{\"msg%{public}.0s\":\"@IndoorAvl, load, failed to compute available venues\", \"attempts\":%{public}d, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v4, v5, v6, v7, v23);
  }

  v8 = sub_1000E0150();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_signpost_enabled(v9))
  {
    sub_1000E07A8();
    sub_1000E0828((void *)&_mh_execute_header, v10, v11, v12, "@IndoorAvl, load, failed to compute available venues", "{\"msg%{public}.0s\":\"@IndoorAvl, load, failed to compute available venues\", \"attempts\":%{public}d, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v13, v14, v23);
  }

  v15 = sub_1000E0150();
  v16 = objc_claimAutoreleasedReturnValue(v15);
  if (sub_1000E0870(v16))
  {
    sub_1000E07A8();
    sub_1000E0848((void *)&_mh_execute_header, v17, v18, "{\"msg%{public}.0s\":\"@IndoorAvl, load, failed to compute available venues\", \"attempts\":%{public}d, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v19, v20, v21, v22, v23);
  }
}

void sub_100341B90()
{
  id v0;
  NSObject *v1;
  id v2;
  NSObject *v3;
  id v4;
  NSObject *v5;
  uint8_t v6[40];

  v0 = sub_1000E0150();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (sub_1000E0880(v1))
  {
    sub_1000E07FC();
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"# of points in exterior doesn't match size of tile vertices\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v6, 0x26u);
  }

  v2 = sub_1000E0150();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_signpost_enabled(v3))
  {
    sub_1000E07FC();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "# of points in exterior doesn't match size of tile vertices", "{\"msg%{public}.0s\":\"# of points in exterior doesn't match size of tile vertices\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v6, 0x26u);
  }

  v4 = sub_1000E0150();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (sub_1000E0870(v5))
  {
    sub_1000E07FC();
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"# of points in exterior doesn't match size of tile vertices\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v6, 0x26u);
  }
}

void sub_100341CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_100417EE8 != -1)
    dispatch_once(&qword_100417EE8, &stru_1003EE9C0);
  if (sub_1000E0880(qword_100417EF0))
  {
    sub_1000E07E4();
    sub_1000E085C((void *)&_mh_execute_header, v0, v1, "{\"msg%{public}.0s\":\"@IndoorAvl, load, Invalid idx for venue.ids list!\", \"idx\":%{public}d, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v2, v3, v4, v5, 3u);
  }
  if (qword_100417EE8 != -1)
    dispatch_once(&qword_100417EE8, &stru_1003EE9C0);
  if (os_signpost_enabled((os_log_t)qword_100417EF0))
  {
    sub_1000E07E4();
    sub_1000E0828((void *)&_mh_execute_header, v6, v7, v8, "@IndoorAvl, load, Invalid idx for venue.ids list!", "{\"msg%{public}.0s\":\"@IndoorAvl, load, Invalid idx for venue.ids list!\", \"idx\":%{public}d, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9, v10, 3u);
  }
  if (qword_100417EE8 != -1)
    dispatch_once(&qword_100417EE8, &stru_1003EE9C0);
  if (os_log_type_enabled((os_log_t)qword_100417EF0, OS_LOG_TYPE_INFO))
  {
    sub_1000E07E4();
    sub_1000E0848((void *)&_mh_execute_header, v11, v12, "{\"msg%{public}.0s\":\"@IndoorAvl, load, Invalid idx for venue.ids list!\", \"idx\":%{public}d, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v13, v14, v15, v16, 3u);
  }
}

void sub_100341ED0(char *a1, uint8_t *buf, os_log_t log)
{
  char *v4;

  if (a1[23] >= 0)
    v4 = a1;
  else
    v4 = *(char **)a1;
  *(_QWORD *)buf = 68289795;
  *((_WORD *)buf + 4) = 2082;
  *(_QWORD *)(buf + 10) = "";
  *((_WORD *)buf + 9) = 2081;
  *(_QWORD *)(buf + 20) = v4;
  *((_WORD *)buf + 14) = 2082;
  *(_QWORD *)(buf + 30) = "assert";
  *((_WORD *)buf + 19) = 2081;
  *((_QWORD *)buf + 5) = "serialized";
  _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Failed to serialize-append properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
  if (a1[23] < 0)
    operator delete(*(void **)a1);
}

_QWORD *sub_100341F90(_QWORD *result)
{
  result[268] = off_1003EEB18;
  result[254] = off_1003EEB18;
  result[240] = off_1003EEB18;
  result[232] = off_1003EEB18;
  result[213] = off_1003EEB18;
  result[199] = off_1003EEB18;
  result[185] = off_1003EEB18;
  result[177] = off_1003EEB18;
  return result;
}

void sub_100341FCC(std::__shared_weak_count *a1)
{
  unint64_t *p_shared_owners;
  unint64_t v3;

  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    v3 = __ldaxr(p_shared_owners);
  while (__stlxr(v3 - 1, p_shared_owners));
  if (!v3)
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void sub_100342030()
{
  std::__shared_weak_count *v0;
  unint64_t *v1;
  uint64_t v2;
  int v3;

  sub_10016D91C();
  do
    sub_10016D904(v1);
  while (v3);
  if (!v2)
  {
    sub_10016D8F4();
    std::__shared_weak_count::__release_weak(v0);
  }
  sub_10016D914();
}

void sub_100342060()
{
  std::__shared_weak_count *v0;
  unint64_t *v1;
  uint64_t v2;
  int v3;

  sub_10016D91C();
  do
    sub_10016D904(v1);
  while (v3);
  if (v2)
  {
    sub_10016D914();
  }
  else
  {
    sub_10016D8F4();
    sub_10016D8EC(v0);
  }
}

void sub_100342094()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  int v10;

  sub_10016D958();
  v3 = *(_QWORD *)(v2 + 56);
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      sub_10016D904(v4);
    while (v6);
    if (!v5)
    {
      sub_10016D928();
      sub_10016D950();
    }
  }
  v7 = *(_QWORD *)(v1 + 40);
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      sub_10016D904(v8);
    while (v10);
    if (!v9)
    {
      sub_10016D928();
      sub_10016D950();
    }
  }
  if (*(char *)(v1 + 31) < 0)
    sub_10016D938(*v0);
  else
    sub_10016D944();
}

void sub_100342104()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  int v6;

  sub_10016D958();
  v3 = *(_QWORD *)(v2 + 40);
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      sub_10016D904(v4);
    while (v6);
    if (!v5)
    {
      sub_10016D928();
      sub_10016D950();
    }
  }
  if (*(char *)(v1 + 31) < 0)
    sub_10016D938(*v0);
  else
    sub_10016D944();
}

void sub_100342154(uint64_t a1)
{
  char *v2;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)a1 = v2;
  *(_OWORD *)(a1 + 8) = xmmword_10038A6C0;
  strcpy(v2, "No diagnostic information available.");
  sub_10016D914();
}

void sub_1003421A4()
{
  char *v0;
  char **v1;
  void **v2;
  void **v3;
  char *v4;
  char *v5;
  void *v6;
  void **v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  uint64_t v10;
  int v11;
  uint64_t v12;

  sub_10016D958();
  v4 = (char *)*v3;
  v6 = v5;
  if (v4 != v5)
  {
    v7 = v2;
    do
    {
      v8 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          sub_10016D904(p_shared_owners);
        while (v11);
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v12 = *((_QWORD *)v4 - 5);
      if (v12)
        sub_10016D964(v12);
      v4 -= 48;
    }
    while (v4 != v0);
    v6 = *v7;
  }
  *v1 = v0;
  operator delete(v6);
}

void sub_100342234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  sub_10016D958();
  do
  {
    v2 = *(_QWORD *)(v1 + 40);
    if (v2)
    {
      v3 = (unint64_t *)(v2 + 8);
      do
        sub_10016D904(v3);
      while (v5);
      if (!v4)
      {
        sub_10016D928();
        sub_10016D950();
      }
    }
    v6 = *(_QWORD *)(v1 + 8);
    if (v6)
      sub_10016D964(v6);
    v1 += 48;
  }
  while (v1 != v0);
  sub_10016D944();
}

void sub_100342288(char *a1, uint8_t *buf, os_log_t log)
{
  char *v4;

  if (a1[23] >= 0)
    v4 = a1;
  else
    v4 = *(char **)a1;
  *(_QWORD *)buf = 68289795;
  *((_WORD *)buf + 4) = 2082;
  *(_QWORD *)(buf + 10) = "";
  *((_WORD *)buf + 9) = 2081;
  *(_QWORD *)(buf + 20) = v4;
  *((_WORD *)buf + 14) = 2082;
  *(_QWORD *)(buf + 30) = "assert";
  *((_WORD *)buf + 19) = 2081;
  *((_QWORD *)buf + 5) = "serialized";
  _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Failed to serialize-append-delimited properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
  if (a1[23] < 0)
    operator delete(*(void **)a1);
  sub_10016D914();
}

BOOL sub_10034233C(void *a1, _QWORD *a2)
{
  NSObject *v3;

  __cxa_begin_catch(a1);
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1003F6550);
  v3 = qword_100417EE0;
  *a2 = qword_100417EE0;
  return os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
}

void sub_100342398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;

  v5 = (void *)sub_10019566C(a1, a2);
  if (!v6)
  {
    do
    {
      if (*(char *)(v4 - 1) < 0)
        operator delete(*(void **)(v4 - 24));
      v4 -= 24;
    }
    while (v4 != v2);
    v5 = *(void **)v3;
  }
  *(_QWORD *)(v3 + 8) = v2;
  operator delete(v5);
  sub_10016D944();
}

void sub_1003423E0(uint64_t a1, void **a2, void **a3)
{
  if (*(char *)(a1 + 55) < 0)
    operator delete(*a2);
  if (*(char *)(a1 + 31) < 0)
    operator delete(*a3);
}

void sub_100342428(uint64_t a1, _QWORD *a2, uint64_t a3, void **a4)
{
  void *v7;

  nullsub_22(a1);
  *a2 = off_1003F97B8;
  v7 = *(void **)(a3 + 360);
  if (v7)
  {
    *(_QWORD *)(a3 + 368) = v7;
    operator delete(v7);
  }
  if (*(char *)(a3 + 127) < 0)
    sub_10016D938(*a4);
}

void sub_100342488(void **a1, uint64_t a2, void **a3)
{
  void *v5;

  v5 = *a1;
  if (v5)
  {
    *(_QWORD *)(a2 + 40) = v5;
    operator delete(v5);
  }
  if (*(char *)(a2 + 31) < 0)
    operator delete(*a3);
}

uint64_t sub_1003424D0()
{
  id v0;
  NSObject *v1;
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint64_t result;
  uint8_t v9[40];

  v0 = sub_1001D1F30();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (sub_1000E0880(v1))
  {
    sub_1000D0FE4();
    sub_1001D20C4((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"@IndoorAvl, _readVenueBoundProtobufObjectFromZCIS, expecting that we have a valid destination for the venue bounds object we're about to read\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  v2 = sub_1001D1F30();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_signpost_enabled(v3))
  {
    sub_1000D0FE4();
    sub_1001D20AC((void *)&_mh_execute_header, v3, v4, v5, "@IndoorAvl, _readVenueBoundProtobufObjectFromZCIS, expecting that we have a valid destination for the venue bounds object we're about to read", "{\"msg%{public}.0s\":\"@IndoorAvl, _readVenueBoundProtobufObjectFromZCIS, expecting that we have a valid destination for the venue bounds object we're about to read\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  v6 = sub_1001D1F30();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (sub_1001D20CC(v7))
  {
    sub_1000D0FE4();
    sub_1001D20C4((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"@IndoorAvl, _readVenueBoundProtobufObjectFromZCIS, expecting that we have a valid destination for the venue bounds object we're about to read\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  result = abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/purpleslam/daemon/Framework/AvailabilityTile.mm", 150, "_readNextVenueBoundProtobufObjectFromZCIS");
  __break(1u);
  return result;
}

void sub_10034261C(NSObject **a1)
{
  id v2;
  NSObject *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  uint8_t v10[40];

  v2 = sub_1001D1F30();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (sub_1000E0880(v3))
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"@IndoorAvl, _readMetadataProtobufObjectsFromFile, expecting that we have a valid destination for the localizer parameters object we're about to read\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v10);
  }

  v4 = sub_1001D1F30();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_signpost_enabled(v5))
  {
    sub_1000E07FC();
    sub_1001D20AC((void *)&_mh_execute_header, v5, v6, v7, "@IndoorAvl, _readMetadataProtobufObjectsFromFile, expecting that we have a valid destination for the localizer parameters object we're about to read", "{\"msg%{public}.0s\":\"@IndoorAvl, _readMetadataProtobufObjectsFromFile, expecting that we have a valid destination for the localizer parameters object we're about to read\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v10);
  }

  v8 = sub_1001D1F30();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  *a1 = v9;
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"@IndoorAvl, _readMetadataProtobufObjectsFromFile, expecting that we have a valid destination for the localizer parameters object we're about to read\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v10);
  }
}

void sub_100342764()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t v21;

  if (qword_100417EE8 != -1)
    goto LABEL_11;
  while (1)
  {
    if (sub_1001D2224())
    {
      sub_1000D0FE4();
      sub_1001D2294((void *)&_mh_execute_header, v0, v1, "{\"msg%{public}.0s\":\"@IndoorAvl, Trying to close file-handle that isn't opened\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v2, v3, v4, v5, v17, v18, v19, v20, v21);
      if (qword_100417EE8 != -1)
        dispatch_once(&qword_100417EE8, &stru_1003FBED0);
    }
    if (sub_1001D2248())
    {
      sub_1000D0FE4();
      sub_1001D2274((void *)&_mh_execute_header, v6, v7, v8, "@IndoorAvl, Trying to close file-handle that isn't opened", "{\"msg%{public}.0s\":\"@IndoorAvl, Trying to close file-handle that isn't opened\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9, v10, v17, v18, v19, v20, v21);
      if (qword_100417EE8 != -1)
        dispatch_once(&qword_100417EE8, &stru_1003FBED0);
    }
    if (sub_1001D2238())
    {
      sub_1000D0FE4();
      sub_1001D22BC((void *)&_mh_execute_header, v11, v12, "{\"msg%{public}.0s\":\"@IndoorAvl, Trying to close file-handle that isn't opened\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v13, v14, v15, v16, v17, v18, v19, v20, v21);
    }
    abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/purpleslam/daemon/Framework/utils/avl_tile_utils.cpp", 86, "close");
LABEL_11:
    dispatch_once(&qword_100417EE8, &stru_1003FBED0);
  }
}

#error "100342950: call analysis failed (funcsize=77)"

void sub_100342A4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1001D5438(a1);
  if (v1)
    sub_10016D964(v1);
  v2 = sub_1001D5448();
  if (v2)
    sub_10016D964(v2);
  sub_10016D914();
}

void sub_100342A7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1001D5438(a1);
  if (v3)
    sub_10016D964(v3);
  v4 = *a2;
  *a2 = 0;
  if (v4)
    sub_10016D964(v4);
  v5 = sub_1001D5448();
  if (v5)
    sub_10016D964(v5);
  sub_10016D914();
}

void sub_100342AC0(uint64_t *a1, uint64_t *a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;

  v9 = sub_1001D5438(a1);
  if (v9)
    sub_10016D964(v9);
  v10 = *a2;
  *a2 = 0;
  if (v10)
    sub_10016D964(v10);
  *(_QWORD *)a5 = a3;
  *(_DWORD *)(a5 + 8) = a4;
  sub_10016D944();
}

uint64_t sub_100342B0C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v11 = sub_1001D5438(a1);
  if (v11)
    sub_10016D964(v11);
  v12 = *a2;
  *a2 = 0;
  if (v12)
    sub_10016D964(v12);
  result = *a3;
  *a3 = 0;
  if (result)
    result = sub_10016D964(result);
  *(_QWORD *)a6 = a4;
  *(_DWORD *)(a6 + 8) = a5;
  return result;
}

void sub_100342B7C(void **a1, char *a2, void **a3)
{
  char *v5;
  void *v6;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v5 = (char *)*a1;
  v6 = a2;
  if (v5 != a2)
  {
    do
    {
      v8 = (std::__shared_weak_count *)*((_QWORD *)v5 - 1);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v5 -= 16;
    }
    while (v5 != a2);
    v6 = *a3;
  }
  *a1 = a2;
  operator delete(v6);
}

void sub_100342C0C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  do
  {
    v4 = *(std::__shared_weak_count **)(a1 - 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    a1 -= 80;
  }
  while (a1 != a2);
}

void sub_100342C78(std::__shared_weak_count *a1)
{
  unint64_t *p_shared_owners;
  unint64_t v3;

  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    v3 = __ldaxr(p_shared_owners);
  while (__stlxr(v3 - 1, p_shared_owners));
  if (!v3)
  {
    sub_10016D8F4();
    std::__shared_weak_count::__release_weak(a1);
  }
}

void sub_100342CC0(std::__shared_weak_count *a1)
{
  unint64_t *p_shared_owners;
  unint64_t v3;

  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    v3 = __ldaxr(p_shared_owners);
  while (__stlxr(v3 - 1, p_shared_owners));
  if (!v3)
  {
    sub_10016D8F4();
    std::__shared_weak_count::__release_weak(a1);
  }
}

#error "100342D6C: call analysis failed (funcsize=65)"

void sub_100342E44(char *a1, uint64_t a2, NSObject *a3)
{
  char *v4;

  if (a1[23] >= 0)
    v4 = a1;
  else
    v4 = *(char **)a1;
  *(_QWORD *)a2 = 68289795;
  *(_WORD *)(a2 + 8) = 2082;
  *(_QWORD *)(a2 + 10) = "";
  *(_WORD *)(a2 + 18) = 2082;
  *(_QWORD *)(a2 + 20) = v4;
  *(_WORD *)(a2 + 28) = 2082;
  *(_QWORD *)(a2 + 30) = "assert";
  *(_WORD *)(a2 + 38) = 2081;
  *(_QWORD *)(a2 + 40) = "currentVersion.dbOkForVersion(gDbVersion)";
  sub_100208238((void *)&_mh_execute_header, a2, a3, "{\"msg%{public}.0s\":\"Migration is not supported\", \"version\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", (uint8_t *)a2);
  if (a1[23] < 0)
    operator delete(*(void **)a1);
}

void sub_100342EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  __int16 v6;
  os_log_t v7;
  uint8_t *v8;

  sub_100208290(1.7165e-36, a1, a2);
  sub_1002082B0(v2, v3);
  *(_WORD *)(v4 + 28) = v5;
  *(_QWORD *)(v4 + 30) = "assert";
  *(_WORD *)(v4 + 38) = v6;
  *(_QWORD *)(v4 + 40) = "!result";
  sub_100208238((void *)&_mh_execute_header, v4, v7, "{\"msg%{public}.0s\":\"Multiple matches for resource\", \"resource\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
}

void sub_100342F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  __int16 v6;
  os_log_t v7;
  uint8_t *v8;

  sub_100208290(1.7165e-36, a1, a2);
  sub_1002082B0(v2, v3);
  *(_WORD *)(v4 + 28) = v5;
  *(_QWORD *)(v4 + 30) = "assert";
  *(_WORD *)(v4 + 38) = v6;
  *(_QWORD *)(v4 + 40) = "current.is_initialized()";
  sub_100208238((void *)&_mh_execute_header, v4, v7, "{\"msg%{public}.0s\":\"couldn't find resource in db\", \"locationId\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
}

#error "100343014: call analysis failed (funcsize=65)"

#error "10034321C: call analysis failed (funcsize=88)"

void sub_100343290(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    if (qword_100417F08 != -1)
      dispatch_once(&qword_100417F08, &stru_1003FC628);
    if (sub_1002082C4())
      sub_100208258((void *)&_mh_execute_header, v1, v2, "Failed to close blob (error %{public}d)", v3, v4, v5, v6, 0);
  }
  sub_1002082A4();
}

void sub_100343338(void **a1, char *a2, void **a3)
{
  char *v5;
  void *v6;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v5 = (char *)*a1;
  v6 = a2;
  if (v5 != a2)
  {
    do
    {
      v8 = (std::__shared_weak_count *)*((_QWORD *)v5 - 1);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v5 -= 16;
    }
    while (v5 != a2);
    v6 = *a3;
  }
  *a1 = a2;
  operator delete(v6);
}

void sub_1003433CC(void **a1)
{
  char *v1;
  char *v3;
  void *v4;
  int v5;
  uint64_t (**v6)(uint64_t);

  v1 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v5 = *((_DWORD *)v3 - 44);
        if (v5 == v5 >> 31)
        {
          if (*(v3 - 128))
            *(v3 - 128) = 0;
        }
        else
        {
          v6 = (uint64_t (**)(uint64_t))*((_QWORD *)v3 - 21);
          if (v5 < 0)
          {
            if (v6)
              sub_10016D964((uint64_t)v6);
          }
          else
          {
            sub_100219EFC(v6, (uint64_t)(v3 - 168));
          }
        }
        v3 -= 208;
      }
      while (v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    sub_10016D938(v4);
  }
}

void sub_10034345C(void **a1, char *a2, void **a3)
{
  char *v5;
  void *v6;
  int v8;
  uint64_t (**v9)(uint64_t);

  v5 = (char *)*a1;
  v6 = a2;
  if (v5 != a2)
  {
    do
    {
      v8 = *((_DWORD *)v5 - 44);
      if (v8 == v8 >> 31)
      {
        if (*(v5 - 128))
          *(v5 - 128) = 0;
      }
      else
      {
        v9 = (uint64_t (**)(uint64_t))*((_QWORD *)v5 - 21);
        if (v8 < 0)
        {
          if (v9)
            sub_10016D964((uint64_t)v9);
        }
        else
        {
          sub_100219EFC(v9, (uint64_t)(v5 - 168));
        }
      }
      v5 -= 208;
    }
    while (v5 != a2);
    v6 = *a3;
  }
  *a1 = a2;
  sub_10016D938(v6);
}

void sub_1003434DC(void **a1, uint64_t a2)
{
  void *v3;

  v3 = *a1;
  if (v3)
  {
    *(_QWORD *)(a2 + 376) = v3;
    operator delete(v3);
  }
  nullsub_49(a2 + 336);
  sub_10016D914();
}

void sub_10034350C(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 400);
  if (v3)
  {
    v5 = *(_QWORD *)(a1 + 408);
    v6 = *(void **)(a1 + 400);
    if (v5 != v3)
    {
      do
      {
        v7 = v5 - 40;
        nullsub_49(v5 - 32);
        v5 = v7;
      }
      while (v7 != v3);
      v6 = *(void **)(a1 + 400);
    }
    *(_QWORD *)(a1 + 408) = v3;
    operator delete(v6);
  }
  *a2 = 0;
  sub_10016D944();
}

void sub_10034356C(std::__shared_weak_count *a1)
{
  unint64_t *p_shared_owners;
  unint64_t v3;

  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    v3 = __ldaxr(p_shared_owners);
  while (__stlxr(v3 - 1, p_shared_owners));
  if (!v3)
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
  sub_10016D914();
}

void sub_1003435B4(_DWORD *a1)
{
  NSObject *v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6[40];

  sub_10021FC5C();
  if (!v3)
    dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  if (sub_10021FC68())
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Pretty sure we can't have 0 dBm + 0.5 dB readings saved into goodScansOnly...?\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v6);
    sub_10021FC5C();
    if (!v3)
      dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  }
  if (sub_10021FCBC())
  {
    sub_1000E07FC();
    sub_1001D20AC((void *)&_mh_execute_header, v1, v4, v5, "Pretty sure we can't have 0 dBm + 0.5 dB readings saved into goodScansOnly...?", "{\"msg%{public}.0s\":\"Pretty sure we can't have 0 dBm + 0.5 dB readings saved into goodScansOnly...?\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v6);
    sub_10021FC5C();
    if (!v3)
      dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  }
  if (sub_10021FC94())
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Pretty sure we can't have 0 dBm + 0.5 dB readings saved into goodScansOnly...?\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v6);
  }
  *a1 = 762;
  sub_1002081D8();
}

void sub_100343724(_DWORD *a1)
{
  NSObject *v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6[40];

  sub_10021FC5C();
  if (!v3)
    dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  if (sub_10021FC68())
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Pretty sure we can't have 0 dBm readings saved into goodScansOnly...?\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v6);
    sub_10021FC5C();
    if (!v3)
      dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  }
  if (sub_10021FCBC())
  {
    sub_1000E07FC();
    sub_1001D20AC((void *)&_mh_execute_header, v1, v4, v5, "Pretty sure we can't have 0 dBm readings saved into goodScansOnly...?", "{\"msg%{public}.0s\":\"Pretty sure we can't have 0 dBm readings saved into goodScansOnly...?\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v6);
    sub_10021FC5C();
    if (!v3)
      dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  }
  if (sub_10021FC94())
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Pretty sure we can't have 0 dBm readings saved into goodScansOnly...?\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v6);
  }
  *a1 = 761;
  sub_1002081D8();
}

void sub_100343894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void **v6;
  char v7;
  void **v8;
  int v9;
  uint64_t (**v10)(uint64_t);

  v5 = (void *)sub_10021FC7C(a1, a2);
  if (!v7)
  {
    v8 = v6;
    do
    {
      v9 = *(_DWORD *)(v4 - 176);
      if (v9 == v9 >> 31)
      {
        if (*(_BYTE *)(v4 - 128))
          *(_BYTE *)(v4 - 128) = 0;
      }
      else
      {
        v10 = *(uint64_t (***)(uint64_t))(v4 - 168);
        if (v9 < 0)
        {
          if (v10)
            sub_10016D964((uint64_t)v10);
        }
        else
        {
          sub_100219EFC(v10, v4 - 168);
        }
      }
      v4 -= 208;
    }
    while (v4 != v2);
    v5 = *v8;
  }
  *v3 = v2;
  sub_10016D938(v5);
}

void sub_100343904(void **a1)
{
  char *v1;
  char *v3;
  void *v4;
  int v5;
  uint64_t (**v6)(uint64_t);

  v1 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v5 = *((_DWORD *)v3 - 44);
        if (v5 == v5 >> 31)
        {
          if (*(v3 - 128))
            *(v3 - 128) = 0;
        }
        else
        {
          v6 = (uint64_t (**)(uint64_t))*((_QWORD *)v3 - 21);
          if (v5 < 0)
          {
            if (v6)
              sub_10016D964((uint64_t)v6);
          }
          else
          {
            sub_100219EFC(v6, (uint64_t)(v3 - 168));
          }
        }
        v3 -= 208;
      }
      while (v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    sub_10016D938(v4);
  }
  else
  {
    sub_10016D944();
  }
}

void sub_10034398C()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint8_t v5[40];

  if (qword_100417ED8 != -1)
    goto LABEL_11;
  while (1)
  {
    v0 = qword_100417EE0;
    if (sub_10021FCB0())
    {
      sub_1000D0FE4();
      sub_1001D20C4((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"The outdoorLocation is none. This shouldn't happen.\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v5);
      if (qword_100417ED8 != -1)
        dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
    }
    v1 = qword_100417EE0;
    if (os_signpost_enabled((os_log_t)qword_100417EE0))
    {
      sub_1000D0FE4();
      sub_1001D20AC((void *)&_mh_execute_header, v1, v2, v3, "The outdoorLocation is none. This shouldn't happen.", "{\"msg%{public}.0s\":\"The outdoorLocation is none. This shouldn't happen.\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v5);
      if (qword_100417ED8 != -1)
        dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
    }
    v4 = qword_100417EE0;
    if (sub_10021FCA4())
    {
      sub_1000D0FE4();
      sub_1001D20C4((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"The outdoorLocation is none. This shouldn't happen.\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v5);
    }
    abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/localizer_io_wrapper.cpp", 996, "resetRecommendedLocationsForCoarseRegionalIfNecessary");
    __break(1u);
LABEL_11:
    dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  }
}

void sub_100343B34(char a1)
{
  NSObject *v1;
  char v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint8_t v7[40];

  if ((a1 & 1) == 0)
    dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  v1 = qword_100417EE0;
  if (sub_10021FCB0())
  {
    sub_1002081AC();
    sub_1001D20C4((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"All pose estimates must have a timestamp!\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v7);
    sub_10021FC5C();
    if (!v2)
      dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  }
  v3 = qword_100417EE0;
  if (os_signpost_enabled((os_log_t)qword_100417EE0))
  {
    sub_1002081AC();
    sub_1001D20AC((void *)&_mh_execute_header, v3, v4, v5, "All pose estimates must have a timestamp!", "{\"msg%{public}.0s\":\"All pose estimates must have a timestamp!\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v7);
    sub_10021FC5C();
    if (!v2)
      dispatch_once(&qword_100417ED8, &stru_1003FE1F0);
  }
  v6 = qword_100417EE0;
  if (sub_10021FCA4())
  {
    sub_1002081AC();
    sub_1001D20C4((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"All pose estimates must have a timestamp!\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v7);
  }
  sub_1002081D8();
}

void sub_100343CA8(char **a1, char *a2)
{
  char *v4;
  char *v5;
  char *v6;
  BOOL v7;

  v4 = a1[1];
  v5 = a2;
  if (v4 != a2)
  {
    v6 = v4 - 760;
    do
    {
      (**(void (***)(char *))v6)(v6);
      v7 = v6 == a2;
      v6 -= 760;
    }
    while (!v7);
    v5 = *a1;
  }
  a1[1] = a2;
  operator delete(v5);
  sub_10016D944();
}

void sub_100343D08(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  do
  {
    v4 = *(std::__shared_weak_count **)(a1 + 64);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    a1 += 80;
  }
  while (a1 != a2);
}

void sub_100343D74(std::__shared_weak_count *a1)
{
  unint64_t *p_shared_owners;
  uint64_t v3;
  int v4;

  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    sub_10016D904(p_shared_owners);
  while (v4);
  if (!v3)
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void sub_100343DB8(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  int v7;

  do
  {
    v4 = *(std::__shared_weak_count **)(a1 - 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        sub_10016D904(p_shared_owners);
      while (v7);
      if (!v6)
      {
        sub_10016D928();
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    a1 -= 80;
  }
  while (a1 != a2);
  sub_10016D944();
}

uint64_t sub_100343E08(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result)
    sub_10022BA20();
  return result;
}

void sub_100343E24(void **__p)
{
  void **v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  uint64_t v5;
  int v6;

  do
  {
    v2 = __p;
    __p = (void **)*__p;
    v3 = (std::__shared_weak_count *)v2[3];
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        sub_10016D904(p_shared_owners);
      while (v6);
      if (!v5)
      {
        sub_10016D928();
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    operator delete(v2);
  }
  while (__p);
  sub_10016D944();
}

void sub_100343E78(void **__p)
{
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;

  do
  {
    v2 = (void **)*__p;
    v3 = __p[5];
    if (v3)
    {
      do
      {
        v4 = (_QWORD *)*v3;
        operator delete(v3);
        v3 = v4;
      }
      while (v4);
    }
    v5 = __p[3];
    __p[3] = 0;
    if (v5)
      operator delete(v5);
    operator delete(__p);
    __p = v2;
  }
  while (v2);
  sub_10016D944();
}

void sub_100343ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void **v6;
  char v7;
  void **v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  uint64_t v11;
  int v12;

  v5 = (void *)sub_1002303E8(a1, a2);
  if (!v7)
  {
    v8 = v6;
    do
    {
      v9 = *(std::__shared_weak_count **)(v4 - 8);
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          sub_10016D904(p_shared_owners);
        while (v12);
        if (!v11)
        {
          sub_100230400();
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v4 -= 16;
    }
    while (v4 != v2);
    v5 = *v8;
  }
  *v3 = v2;
  sub_1002303D8(v5);
}

void sub_100343F30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  int v7;

  do
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (v4)
    {
      v5 = (unint64_t *)(v4 + 8);
      do
        sub_10016D904(v5);
      while (v7);
      if (!v6)
      {
        sub_10016D928();
        sub_10016D950();
      }
    }
    a1 += 80;
  }
  while (a1 != a2);
  sub_10016D944();
}

void sub_100343F84(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v2);
  }
}

void sub_100343FA8(uint64_t a1, char *a2)
{
  char *v4;
  char *v5;
  int v6;
  uint64_t (**v7)(uint64_t);

  v4 = *(char **)(a1 + 8);
  v5 = a2;
  if (v4 != a2)
  {
    do
    {
      v6 = *((_DWORD *)v4 - 44);
      if (v6 == v6 >> 31)
      {
        if (*(v4 - 128))
          *(v4 - 128) = 0;
      }
      else
      {
        v7 = (uint64_t (**)(uint64_t))*((_QWORD *)v4 - 21);
        if (v6 < 0)
        {
          if (v7)
            sub_10016D964((uint64_t)v7);
        }
        else
        {
          sub_100219EFC(v7, (uint64_t)(v4 - 168));
        }
      }
      v4 -= 208;
    }
    while (v4 != a2);
    v5 = *(char **)a1;
  }
  *(_QWORD *)(a1 + 8) = a2;
  operator delete(v5);
}

void sub_100344030(std::__shared_weak_count *a1)
{
  unint64_t *p_shared_owners;
  unint64_t v3;

  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    v3 = __ldaxr(p_shared_owners);
  while (__stlxr(v3 - 1, p_shared_owners));
  if (!v3)
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void sub_100344084(std::__shared_weak_count **a1, std::__shared_weak_count **a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  uint64_t v9;
  int v10;

  v3 = *a1;
  if (*a1)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      sub_10016D904(p_shared_owners);
    while (v6);
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v7 = *a2;
  if (!v7)
    goto LABEL_10;
  v8 = (unint64_t *)&v7->__shared_owners_;
  do
    sub_10016D904(v8);
  while (v10);
  if (!v9)
  {
    sub_10016D8F4();
    sub_10016D8EC(v7);
  }
  else
  {
LABEL_10:
    sub_10016D914();
  }
}

void sub_1003440F4(std::__shared_weak_count *a1)
{
  unint64_t *p_shared_owners;
  uint64_t v3;
  int v4;

  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    sub_10016D904(p_shared_owners);
  while (v4);
  if (v3)
  {
    sub_10016D914();
  }
  else
  {
    sub_10016D8F4();
    sub_10016D8EC(a1);
  }
}

void sub_10034412C(_QWORD *a1, _BYTE *a2, void **a3)
{
  _BYTE *v5;
  void *v6;
  _BYTE *v8;
  int v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;

  v5 = (_BYTE *)*a1;
  v6 = a2;
  if (v5 != a2)
  {
    v8 = v5;
    do
    {
      v9 = *(v8 - 24);
      v8 -= 24;
      if (v9)
      {
        v10 = (std::__shared_weak_count *)*((_QWORD *)v5 - 1);
        if (v10)
        {
          p_shared_owners = (unint64_t *)&v10->__shared_owners_;
          do
            v12 = __ldaxr(p_shared_owners);
          while (__stlxr(v12 - 1, p_shared_owners));
          if (!v12)
          {
            ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
            std::__shared_weak_count::__release_weak(v10);
          }
        }
        *v8 = 0;
      }
      v5 = v8;
    }
    while (v8 != a2);
    v6 = *a3;
  }
  *a1 = a2;
  operator delete(v6);
}

uint64_t sub_1003441CC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  *a1 = 0;
  if (result)
  {
    sub_10025ADA0(result);
    operator delete();
  }
  return result;
}

void sub_100344208(uint64_t a1, _BYTE *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  uint64_t v5;
  int v6;

  v3 = *(std::__shared_weak_count **)(a1 + 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      sub_10016D904(p_shared_owners);
    while (v6);
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  *a2 = 0;
}

void sub_100344258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  int v5;

  sub_10016D958();
  do
  {
    v2 = *(_QWORD *)(v1 + 64);
    if (v2)
    {
      v3 = (unint64_t *)(v2 + 8);
      do
        sub_10016D904(v3);
      while (v5);
      if (!v4)
      {
        sub_10016D928();
        sub_10016D950();
      }
    }
    v1 += 80;
  }
  while (v1 != v0);
  sub_10016D944();
}

void sub_1003442A0(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v2;
  int v3;

  if (*a1)
  {
    v1 = (unint64_t *)(*a1 + 8);
    do
      sub_10016D904(v1);
    while (v3);
    if (!v2)
    {
      sub_10016D8F4();
      sub_10025FECC();
    }
  }
  sub_10016D914();
}

void sub_1003442D4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  int v3;

  v1 = (unint64_t *)(a1 + 8);
  do
    sub_10016D904(v1);
  while (v3);
  if (!v2)
  {
    sub_10016D8F4();
    sub_10025FECC();
  }
  sub_10016D914();
}

void sub_100344304()
{
  NSObject *v0;
  uint8_t v1[16];

  if (qword_100417F08 != -1)
    dispatch_once(&qword_100417F08, &stru_1003FF920);
  v0 = qword_100417F10;
  if (os_log_type_enabled((os_log_t)qword_100417F10, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Unexpected exception type - rolling back", v1, 2u);
  }
}

void sub_10034438C()
{
  dispatch_once(&qword_100417F08, &stru_1003FF920);
}

void sub_1003443B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (void *)sub_100265080(a1, a2);
  if (!v6)
  {
    v7 = v5 - 56;
    v8 = v5 - 56;
    do
    {
      sub_100265070();
      v6 = v7 == v2;
      v7 = v8;
    }
    while (!v6);
    v4 = *(void **)v3;
  }
  *(_QWORD *)(v3 + 8) = v2;
  operator delete(v4);
}

void sub_1003443F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (void *)sub_100265080(a1, a2);
  if (!v6)
  {
    v7 = v5 - 56;
    v8 = v5 - 56;
    do
    {
      sub_100265070();
      v6 = v7 == v2;
      v7 = v8;
    }
    while (!v6);
    v4 = *(void **)v3;
  }
  *(_QWORD *)(v3 + 8) = v2;
  operator delete(v4);
}

void sub_100344444(std::__shared_weak_count *a1)
{
  unint64_t *p_shared_owners;
  uint64_t v3;
  int v4;

  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    sub_10016D904(p_shared_owners);
  while (v4);
  if (v3)
  {
    sub_10016D914();
  }
  else
  {
    sub_10016D8F4();
    std::__shared_weak_count::__release_weak(a1);
  }
}

void sub_100344480(uint64_t a1, _QWORD *__p)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  uint64_t v5;
  int v6;

  if (*(_BYTE *)(a1 + 16))
  {
    sub_100073738(__p + 4);
    v3 = (std::__shared_weak_count *)__p[3];
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        sub_10016D904(p_shared_owners);
      while (v6);
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  operator delete(__p);
  sub_10016D914();
}

void sub_1003444E0()
{
  unint64_t *v0;
  uint64_t v1;
  int v2;

  sub_10016D91C();
  do
    sub_10016D904(v0);
  while (v2);
  if (!v1)
  {
    sub_10016D8F4();
    sub_10025FECC();
  }
  sub_10016D914();
}

void sub_10034450C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v2);
  }
  *(_BYTE *)a1 = 0;
  sub_10016D914();
}

void sub_100344538(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  sub_100068888((int *)a1);
  sub_10016D914();
}

void sub_100344578(void **a1, char *a2, void **a3)
{
  char *v5;
  void *v6;
  char *v8;
  void *v9;
  void *v10;

  v5 = (char *)*a1;
  v6 = a2;
  if (v5 != a2)
  {
    v8 = v5;
    do
    {
      v10 = (void *)*((_QWORD *)v8 - 3);
      v8 -= 24;
      v9 = v10;
      if (v10)
      {
        *((_QWORD *)v5 - 2) = v9;
        operator delete(v9);
      }
      v5 = v8;
    }
    while (v8 != a2);
    v6 = *a3;
  }
  *a1 = a2;
  operator delete(v6);
}

void sub_1003445DC(void **a1, char *a2, void **a3)
{
  char *v5;
  void *v6;
  int v8;
  uint64_t (**v9)(uint64_t);

  v5 = (char *)*a1;
  v6 = a2;
  if (v5 != a2)
  {
    do
    {
      v8 = *((_DWORD *)v5 - 44);
      if (v8 == v8 >> 31)
      {
        if (*(v5 - 128))
          *(v5 - 128) = 0;
      }
      else
      {
        v9 = (uint64_t (**)(uint64_t))*((_QWORD *)v5 - 21);
        if (v8 < 0)
        {
          if (v9)
            sub_10016D964((uint64_t)v9);
        }
        else
        {
          sub_100219EFC(v9, (uint64_t)(v5 - 168));
        }
      }
      v5 -= 208;
    }
    while (v5 != a2);
    v6 = *a3;
  }
  *a1 = a2;
  operator delete(v6);
}

void sub_100344664()
{
  id v0;
  NSObject *v1;
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint8_t v8[40];

  v0 = sub_1002EB5C4();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (sub_1000E0880(v1))
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Wifi scanner thread is being deallocated without stopping properly\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
  }

  v2 = sub_1002EB5C4();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_signpost_enabled(v3))
  {
    sub_1000E07FC();
    sub_1001D20AC((void *)&_mh_execute_header, v3, v4, v5, "Wifi scanner thread is being deallocated without stopping properly", "{\"msg%{public}.0s\":\"Wifi scanner thread is being deallocated without stopping properly\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
  }

  v6 = sub_1002EB5C4();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (sub_1000E0870(v7))
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Wifi scanner thread is being deallocated without stopping properly\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
  }
  sub_1002ECE7C();
}

void sub_100344790()
{
  id v0;
  NSObject *v1;
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint8_t v8[40];

  v0 = sub_1002EB5C4();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (sub_1000E0880(v1))
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Wifi scanner thread is exiting early without proper cleanup\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
  }

  v2 = sub_1002EB5C4();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_signpost_enabled(v3))
  {
    sub_1000E07FC();
    sub_1001D20AC((void *)&_mh_execute_header, v3, v4, v5, "Wifi scanner thread is exiting early without proper cleanup", "{\"msg%{public}.0s\":\"Wifi scanner thread is exiting early without proper cleanup\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
  }

  v6 = sub_1002EB5C4();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (sub_1000E0870(v7))
  {
    sub_1000E07FC();
    sub_1001D20C4((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Wifi scanner thread is exiting early without proper cleanup\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
  }
  sub_1002ECE7C();
}

uint64_t sub_1003448BC()
{
  id v0;
  NSObject *v1;
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint64_t result;
  uint8_t v9[40];

  v0 = sub_1002EB5C4();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (sub_1000E0880(v1))
  {
    sub_1000D0FE4();
    sub_1001D20C4((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Wi-Fi thread runLoop allocated but scanner backend not initialized\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  v2 = sub_1002EB5C4();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_signpost_enabled(v3))
  {
    sub_1000D0FE4();
    sub_1001D20AC((void *)&_mh_execute_header, v3, v4, v5, "Wi-Fi thread runLoop allocated but scanner backend not initialized", "{\"msg%{public}.0s\":\"Wi-Fi thread runLoop allocated but scanner backend not initialized\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  v6 = sub_1002EB5C4();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    sub_1000D0FE4();
    sub_1001D20C4((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Wi-Fi thread runLoop allocated but scanner backend not initialized\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  result = abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/purpleslam/common/wifiscanning/sensor/backend/IOSWifiScannerBackend.mm", 682, "-[WifiScannerBackend invalidate]");
  __break(1u);
  return result;
}

void sub_100344A10(id *a1)
{
  sub_100049E84(a1);
  sub_1002ECE90();
}

void sub_100344A28(uint64_t a1, uint8_t *buf, os_log_t log)
{
  *(_QWORD *)buf = 68289795;
  *((_WORD *)buf + 4) = 2082;
  *(_QWORD *)(buf + 10) = "";
  *((_WORD *)buf + 9) = 2082;
  *(_QWORD *)(buf + 20) = a1;
  *((_WORD *)buf + 14) = 2082;
  *(_QWORD *)(buf + 30) = "assert";
  *((_WORD *)buf + 19) = 2081;
  *((_QWORD *)buf + 5) = "networkScan == __null || CFGetTypeID(networkScan) == CFArrayGetTypeID()";
  _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"We expect that networkScan is of type CFArray, but it's not. Memory smasher?\", \"networkScanType\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
}

void sub_100344AAC(void **__p)
{
  void **v2;
  id *v3;

  do
  {
    v2 = (void **)*__p;
    v3 = (id *)__p[2];
    __p[2] = 0;
    if (v3)
    {
      sub_100049E84(v3);
      sub_1002ECE90();
    }
    operator delete(__p);
    __p = v2;
  }
  while (v2);
}

void sub_100344AF0(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void sub_100344B04()
{
  NSObject *v0;
  NSObject *v1;
  NSObject *v2;
  uint8_t v3[56];

  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_100405CA0);
  v0 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_FAULT))
  {
    sub_10030A17C();
    sub_10030A148();
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Unsupported sensor type\", \"sensorType\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v3, 0x30u);
    if (qword_100417ED8 != -1)
      dispatch_once(&qword_100417ED8, &stru_100405CA0);
  }
  v1 = qword_100417EE0;
  if (os_signpost_enabled((os_log_t)qword_100417EE0))
  {
    sub_10030A17C();
    sub_10030A148();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Unsupported sensor type", "{\"msg%{public}.0s\":\"Unsupported sensor type\", \"sensorType\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v3, 0x30u);
    if (qword_100417ED8 != -1)
      dispatch_once(&qword_100417ED8, &stru_100405CA0);
  }
  v2 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
  {
    sub_10030A17C();
    sub_10030A148();
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Unsupported sensor type\", \"sensorType\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v3, 0x30u);
  }
}

void sub_100344CE0(std::__shared_weak_count *a1)
{
  unint64_t *p_shared_owners;
  unint64_t v3;

  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    v3 = __ldaxr(p_shared_owners);
  while (__stlxr(v3 - 1, p_shared_owners));
  if (!v3)
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void sub_100344D34(uint64_t a1, void **a2, void **a3, void **a4)
{
  if (*(char *)(a1 + 103) < 0)
    operator delete(*a2);
  if (*(char *)(a1 + 71) < 0)
    operator delete(*a3);
  if (*(char *)(a1 + 47) < 0)
    operator delete(*a4);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void sub_100344DB4(uint64_t a1)
{
  void *v2;

  v2 = *(void **)a1;
  if (v2)
  {
    *(_QWORD *)(a1 + 8) = v2;
    operator delete(v2);
  }
}

void sub_100344DD8(uint64_t a1, char *a2, void **a3)
{
  char *v5;
  void *v6;
  char *v8;
  void *v9;
  void *v10;

  v5 = *(char **)(a1 + 32);
  v6 = a2;
  if (v5 != a2)
  {
    v8 = v5;
    do
    {
      v10 = (void *)*((_QWORD *)v8 - 3);
      v8 -= 24;
      v9 = v10;
      if (v10)
      {
        *((_QWORD *)v5 - 2) = v9;
        operator delete(v9);
      }
      v5 = v8;
    }
    while (v8 != a2);
    v6 = *a3;
  }
  *(_QWORD *)(a1 + 32) = a2;
  operator delete(v6);
}

void sub_100344E40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  __int16 v6;
  os_log_t v7;
  uint8_t *v8;

  sub_100208290(1.7165e-36, a1, a2);
  sub_1002082B0(v2, v3);
  *(_WORD *)(v4 + 28) = v5;
  *(_QWORD *)(v4 + 30) = "assert";
  *(_WORD *)(v4 + 38) = v6;
  *(_QWORD *)(v4 + 40) = "[transactionsOfType count] > 0";
  sub_100208238((void *)&_mh_execute_header, v4, v7, "{\"msg%{public}.0s\":\"IndoorServiceTransactionManager: expected to have at least one transaction\", \"type\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
}

void sub_100344EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  __int16 v6;
  os_log_t v7;
  uint8_t *v8;

  sub_100208290(1.7165e-36, a1, a2);
  sub_1002082B0(v2, v3);
  *(_WORD *)(v4 + 28) = v5;
  *(_QWORD *)(v4 + 30) = "assert";
  *(_WORD *)(v4 + 38) = v6;
  *(_QWORD *)(v4 + 40) = "transactionsOfType";
  sub_100208238((void *)&_mh_execute_header, v4, v7, "{\"msg%{public}.0s\":\"IndoorServiceTransactionManager: list of transactions for this type should exist!\", \"type\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v8);
}

void sub_100344F00()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;

  sub_100330F84();
  do
  {
    v5 = __ldaxr((unsigned int *)v3);
    v6 = v5 - 1;
  }
  while (__stlxr(v6, (unsigned int *)v3));
  if (!v6)
  {
    sub_100330F74(v4);
    if (*(char *)(v3 + 31) < 0)
      operator delete(*(void **)(v3 + 8));
    sub_100330F4C();
  }
  *(_QWORD *)v0 = v2;
  *(_DWORD *)(v0 + 8) = v1;
  sub_100330F64();
}

uint64_t sub_100344F54()
{
  id v0;
  NSObject *v1;
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint64_t result;
  uint8_t v9[56];

  v0 = sub_1003321A4();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_FAULT))
  {
    sub_100338BA4();
    sub_100338C4C((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Prefetcher invalidation timed out waiting for session invalidation. Waited for this many seconds: \", \"seconds\":%{public}lld, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  v2 = sub_1003321A4();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_signpost_enabled(v3))
  {
    sub_100338BA4();
    sub_100338C00((void *)&_mh_execute_header, v3, v4, v5, "Prefetcher invalidation timed out waiting for session invalidation. Waited for this many seconds: ", "{\"msg%{public}.0s\":\"Prefetcher invalidation timed out waiting for session invalidation. Waited for this many seconds: \", \"seconds\":%{public}lld, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  v6 = sub_1003321A4();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    sub_100338BA4();
    sub_100338C4C((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Prefetcher invalidation timed out waiting for session invalidation. Waited for this many seconds: \", \"seconds\":%{public}lld, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  result = abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/purpleslam/daemon/indoorservice/CLIndoorTilePrefetcher.mm", 237, "-[CLIndoorTilePrefetcher invalidateSessions]");
  __break(1u);
  return result;
}

void sub_1003450AC()
{
  NSObject *v0;
  id v1;
  NSObject *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  uint8_t v9[56];

  v1 = sub_1003321A4();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (sub_100338C18(v2))
  {
    sub_100338B68();
    sub_100338C4C((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Prefetcher invalidation timed out waiting for session reset. Waited for this many seconds: \", \"seconds\":%{public}lld, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  v3 = sub_1003321A4();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (sub_100338C54(v4))
  {
    sub_100338B68();
    sub_100338C00((void *)&_mh_execute_header, v0, v5, v6, "Prefetcher invalidation timed out waiting for session reset. Waited for this many seconds: ", "{\"msg%{public}.0s\":\"Prefetcher invalidation timed out waiting for session reset. Waited for this many seconds: \", \"seconds\":%{public}lld, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }

  v7 = sub_1003321A4();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (sub_1000E0870(v8))
  {
    sub_100338B68();
    sub_100338C4C((void *)&_mh_execute_header, v0, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Prefetcher invalidation timed out waiting for session reset. Waited for this many seconds: \", \"seconds\":%{public}lld, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v9);
  }
}

void sub_1003451E0()
{
  void *v0;
  id v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t v24;

  v1 = sub_1003321A4();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (sub_100338C18(v2))
  {
    sub_1000E07FC();
    sub_100338C24((void *)&_mh_execute_header, v3, v4, "{\"msg%{public}.0s\":\"Expecting that we are not already waiting for session to be invalidated\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v5, v6, v7, v8, v24);
  }

  v9 = sub_1003321A4();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (sub_100338C54(v10))
  {
    sub_1000E07FC();
    sub_100338BE0((void *)&_mh_execute_header, v11, v12, v13, "Expecting that we are not already waiting for session to be invalidated", "{\"msg%{public}.0s\":\"Expecting that we are not already waiting for session to be invalidated\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v14, v15, v24);
  }

  v16 = sub_1003321A4();
  v17 = objc_claimAutoreleasedReturnValue(v16);
  if (sub_1000E0870(v17))
  {
    sub_1000E07FC();
    sub_100338C38((void *)&_mh_execute_header, v18, v19, "{\"msg%{public}.0s\":\"Expecting that we are not already waiting for session to be invalidated\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v20, v21, v22, v23, v24);
  }
  sub_1002ECE7C();
}

void sub_1003452E4()
{
  void *v0;
  id v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t v24;

  v1 = sub_1003321A4();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (sub_100338C18(v2))
  {
    sub_1000E07FC();
    sub_100338C24((void *)&_mh_execute_header, v3, v4, "{\"msg%{public}.0s\":\"Session is not valid so we can't attempt a new download task\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v5, v6, v7, v8, v24);
  }

  v9 = sub_1003321A4();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (sub_100338C54(v10))
  {
    sub_1000E07FC();
    sub_100338BE0((void *)&_mh_execute_header, v11, v12, v13, "Session is not valid so we can't attempt a new download task", "{\"msg%{public}.0s\":\"Session is not valid so we can't attempt a new download task\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v14, v15, v24);
  }

  v16 = sub_1003321A4();
  v17 = objc_claimAutoreleasedReturnValue(v16);
  if (sub_1000E0870(v17))
  {
    sub_1000E07FC();
    sub_100338C38((void *)&_mh_execute_header, v18, v19, "{\"msg%{public}.0s\":\"Session is not valid so we can't attempt a new download task\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v20, v21, v22, v23, v24);
  }
  sub_1002ECE7C();
}

#error "100345454: call analysis failed (funcsize=53)"

#error "100345554: call analysis failed (funcsize=53)"

#error "100345654: call analysis failed (funcsize=53)"

void sub_1003456E8(uint64_t a1, uint8_t *buf, os_log_t log, void *a4)
{
  *(_QWORD *)buf = 68289795;
  *((_WORD *)buf + 4) = 2082;
  *(_QWORD *)(buf + 10) = "";
  *((_WORD *)buf + 9) = 2081;
  *(_QWORD *)(buf + 20) = a1;
  *((_WORD *)buf + 14) = 2082;
  *(_QWORD *)(buf + 30) = "assert";
  *((_WORD *)buf + 19) = 2081;
  *((_QWORD *)buf + 5) = "error == nullptr";
  _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Failed to create directory:\", \"error\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);

  sub_10016D914();
}

#error "1003457E4: call analysis failed (funcsize=53)"

#error "1003458E4: call analysis failed (funcsize=53)"

#error "1003459E4: call analysis failed (funcsize=53)"

#error "100345AE4: call analysis failed (funcsize=53)"

#error "100345BE4: call analysis failed (funcsize=53)"

#error "100345CE4: call analysis failed (funcsize=53)"

void sub_100345D78(uint64_t a1, char *a2)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  void (**v8)(char *);
  BOOL v9;

  v4 = *(char **)(a1 + 8);
  v5 = a2;
  if (v4 != a2)
  {
    v6 = v4 - 96;
    v7 = v4 - 96;
    do
    {
      v8 = *(void (***)(char *))v7;
      v7 -= 96;
      (*v8)(v6);
      v9 = v6 == a2;
      v6 = v7;
    }
    while (!v9);
    v5 = *(char **)a1;
  }
  *(_QWORD *)(a1 + 8) = a2;
  operator delete(v5);
}

void operator delete[](void *__p)
{
  while (1)
    ;
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new[](size_t __sz)
{
  while (1)
    ;
}

void *__cdecl operator new[](size_t __sz, const std::nothrow_t *a2)
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz, const std::nothrow_t *a2)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URL");
}

id objc_msgSend_URLAssetWithURL_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLAssetWithURL:options:");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLByDeletingLastPathComponent");
}

id objc_msgSend_URLSession_downloadTask_didFinishDownloadingToURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLSession:downloadTask:didFinishDownloadingToURL:");
}

id objc_msgSend_URLSession_task_didCompleteWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLSession:task:didCompleteWithError:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_URLWithString_relativeToURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLWithString:relativeToURL:");
}

id objc_msgSend_URLsForDirectory_inDomains_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLsForDirectory:inDomains:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UUIDString");
}

id objc_msgSend_UUIDWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UUIDWithString:");
}

id objc_msgSend__defaultErrHandler_forCaller_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_defaultErrHandler:forCaller:");
}

id objc_msgSend__defaultErrHandlerForCaller_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_defaultErrHandlerForCaller:");
}

id objc_msgSend__getActiveSessionIdentifiersWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_getActiveSessionIdentifiersWithCompletionHandler:");
}

id objc_msgSend__openTileFileForIncrementalIO(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_openTileFileForIncrementalIO");
}

id objc_msgSend__queue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_queue");
}

id objc_msgSend__setParamOverrides_fromDict_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setParamOverrides:fromDict:");
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__setWorkingdir_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setWorkingdir:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "action");
}

id objc_msgSend_activeTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeTime");
}

id objc_msgSend_activity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activity");
}

id objc_msgSend_adHoc(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adHoc");
}

id objc_msgSend_addInput_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addInput:");
}

id objc_msgSend_addLength_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addLength:");
}

id objc_msgSend_addMultiPart_withHeader_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addMultiPart:withHeader:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addOutput_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addOutput:");
}

id objc_msgSend_addPart_withData_andFilename_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPart:withData:andFilename:");
}

id objc_msgSend_addPart_withPath_andFilename_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPart:withPath:andFilename:");
}

id objc_msgSend_addValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addValue:forHTTPHeaderField:");
}

id objc_msgSend_afterFirstUserUnlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "afterFirstUserUnlock");
}

id objc_msgSend_age(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "age");
}

id objc_msgSend_allDownloadItemsCompleted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allDownloadItemsCompleted");
}

id objc_msgSend_allFloorsDownloaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allFloorsDownloaded");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowCellularDownload(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowCellularDownload");
}

id objc_msgSend_allowCellularDownload_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowCellularDownload:");
}

id objc_msgSend_allowCellularDownloadTile(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowCellularDownloadTile");
}

id objc_msgSend_altitude(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "altitude");
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendBytes:length:");
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appendPixelBuffer_withPresentationTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendPixelBuffer:withPresentationTime:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendString:");
}

id objc_msgSend_arSessionState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arSessionState");
}

id objc_msgSend_archivedDataWithRootObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "archivedDataWithRootObject:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "array");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_assetReaderTrackOutputWithTrack_outputSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetReaderTrackOutputWithTrack:outputSettings:");
}

id objc_msgSend_assetReaderWithAsset_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetReaderWithAsset:error:");
}

id objc_msgSend_assetWriterInputWithMediaType_outputSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetWriterInputWithMediaType:outputSettings:");
}

id objc_msgSend_attitude(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attitude");
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authorizationStatus");
}

id objc_msgSend_automotive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "automotive");
}

id objc_msgSend_availableFloorForegroundSessionQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "availableFloorForegroundSessionQueue");
}

id objc_msgSend_backgroundSessionConfigurationWithDiscretionary_isDaemon_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundSessionConfigurationWithDiscretionary:isDaemon:");
}

id objc_msgSend_backgroundSessionConfigurationWithIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundSessionConfigurationWithIdentifier:");
}

id objc_msgSend_backgroundSessionQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundSessionQueue");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_boundary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundary");
}

id objc_msgSend_bssid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bssid");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bytes");
}

id objc_msgSend_cachedScan(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedScan");
}

id objc_msgSend_canAddInput_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canAddInput:");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancel");
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelAllOperations");
}

id objc_msgSend_cancelDownloadTasksMatching_onSession_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelDownloadTasksMatching:onSession:");
}

id objc_msgSend_cancelInflightBackgroundTasksMatching_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelInflightBackgroundTasksMatching:");
}

id objc_msgSend_cancelInflightForegroundTasksMatching_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelInflightForegroundTasksMatching:");
}

id objc_msgSend_cancelPrefetch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelPrefetch");
}

id objc_msgSend_cancelReading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelReading");
}

id objc_msgSend_cb(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cb");
}

id objc_msgSend_centerECEF(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "centerECEF");
}

id objc_msgSend_centerLatLon(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "centerLatLon");
}

id objc_msgSend_changeLocationGroups_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "changeLocationGroups:");
}

id objc_msgSend_channel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "channel");
}

id objc_msgSend_channelDictsForChannels_withSupportedChannelDicts_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "channelDictsForChannels:withSupportedChannelDicts:");
}

id objc_msgSend_channelFlags(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "channelFlags");
}

id objc_msgSend_channels(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "channels");
}

id objc_msgSend_charValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "charValue");
}

id objc_msgSend_checkIn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkIn");
}

id objc_msgSend_clVisionNotificationARSessionStateAvailable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clVisionNotificationARSessionStateAvailable:");
}

id objc_msgSend_clVisionNotificationAvailable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clVisionNotificationAvailable:");
}

id objc_msgSend_clVisionNotificationVIOEstimationAvailable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clVisionNotificationVIOEstimationAvailable:");
}

id objc_msgSend_clVisionNotificationVLLocalizationResultAvailable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clVisionNotificationVLLocalizationResultAvailable:");
}

id objc_msgSend_clearLastFix(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearLastFix");
}

id objc_msgSend_clearTiles_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearTiles:");
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "close");
}

id objc_msgSend_closeFile(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeFile");
}

id objc_msgSend_closeTransactionWithDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeTransactionWithDescription:");
}

id objc_msgSend_clpOutdoorEstimatorLogEntryNotificationAvailable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clpOutdoorEstimatorLogEntryNotificationAvailable:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "code");
}

id objc_msgSend_commonNetworkResultsToScanResults_withConverter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commonNetworkResultsToScanResults:withConverter:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_computeAvailableVenues_nearCoordinates_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "computeAvailableVenues:nearCoordinates:");
}

id objc_msgSend_computeAvailableVenues_nearCoordinates_withError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "computeAvailableVenues:nearCoordinates:withError:");
}

id objc_msgSend_confidence(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "confidence");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "context");
}

id objc_msgSend_convertFromLocationContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertFromLocationContext:");
}

id objc_msgSend_convertGToAccel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertGToAccel:");
}

id objc_msgSend_cookiesForURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cookiesForURL:");
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "coordinate");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copy");
}

id objc_msgSend_copySupportedChannelDicts_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copySupportedChannelDicts:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countOfBytesClientExpectsToReceive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countOfBytesClientExpectsToReceive");
}

id objc_msgSend_countOfBytesExpectedToSend(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countOfBytesExpectedToSend");
}

id objc_msgSend_countOfBytesSent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countOfBytesSent");
}

id objc_msgSend_course(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "course");
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createHeaderName_filename_mimeType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createHeaderName:filename:mimeType:");
}

id objc_msgSend_createIndoorProvderTransaction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createIndoorProvderTransaction");
}

id objc_msgSend_createLocalizerDbWithRootDir_relativeTo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createLocalizerDbWithRootDir:relativeTo:");
}

id objc_msgSend_createNewRequest_forURL_lastRelevant_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createNewRequest:forURL:lastRelevant:");
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentConnection");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentForegroundFetchRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentForegroundFetchRequest");
}

id objc_msgSend_currentPace(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPace");
}

id objc_msgSend_currentProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentProvider");
}

id objc_msgSend_currentQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentQueue");
}

id objc_msgSend_currentRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentRequest");
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentRunLoop");
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentThread");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "date");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_debouceUpdateUniverse_fromLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "debouceUpdateUniverse:fromLocation:");
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeBytesForKey_returnedLength_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeBytesForKey:returnedLength:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeDoubleForKey:");
}

id objc_msgSend_decodeIntForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeIntForKey:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeObjectForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObjectForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_defaultCLClientLocationPrivate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultCLClientLocationPrivate");
}

id objc_msgSend_defaultForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultForKey:defaultValue:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultWorkdir(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultWorkdir");
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultWorkspace");
}

id objc_msgSend_deg2rad_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deg2rad:");
}

id objc_msgSend_delay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delay");
}

id objc_msgSend_delayedClearTilesPolicy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delayedClearTilesPolicy");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delegate");
}

id objc_msgSend_delegateProxy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delegateProxy");
}

id objc_msgSend_delegateQ(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delegateQ");
}

id objc_msgSend_deleteLegacyPrefetchDatabase(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteLegacyPrefetchDatabase");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "description");
}

id objc_msgSend_detachNewThreadSelector_toTarget_withObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detachNewThreadSelector:toTarget:withObject:");
}

id objc_msgSend_deviceIdentifierForVendor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceIdentifierForVendor");
}

id objc_msgSend_deviceMotionUpdateInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceMotionUpdateInterval");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryToScanSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryToScanSettings:");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_direction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "direction");
}

id objc_msgSend_discoveryToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discoveryToken");
}

id objc_msgSend_discretionaryBackground(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discretionaryBackground");
}

id objc_msgSend_dispatch_after_block_onQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dispatch_after:block:onQueue:");
}

id objc_msgSend_distBetweenLatLon_latlon1_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "distBetweenLatLon:latlon1:");
}

id objc_msgSend_distance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "distance");
}

id objc_msgSend_distance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "distance:");
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "distantFuture");
}

id objc_msgSend_doSynchronousXPC_description_waitForever_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doSynchronousXPC:description:waitForever:");
}

id objc_msgSend_doesNotRecognizeSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doesNotRecognizeSelector:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_downloadQ(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "downloadQ");
}

id objc_msgSend_downloadTaskWithRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "downloadTaskWithRequest:");
}

id objc_msgSend_downloadTaskWithResumeData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "downloadTaskWithResumeData:");
}

id objc_msgSend_downloadTaskWithSession_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "downloadTaskWithSession:");
}

id objc_msgSend_dutyCycle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dutyCycle");
}

id objc_msgSend_dwell(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dwell");
}

id objc_msgSend_east(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "east");
}

id objc_msgSend_effectiveUserIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "effectiveUserIdentifier");
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeDouble:forKey:");
}

id objc_msgSend_encodeInt_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeInt:forKey:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endDate");
}

id objc_msgSend_endpointName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endpointName");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_ephemeralSessionConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ephemeralSessionConfiguration");
}

id objc_msgSend_eraseAllData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eraseAllData:");
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "error");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_estimatedScanTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "estimatedScanTime");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_expectedContentLength(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expectedContentLength");
}

id objc_msgSend_exportedObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exportedObject");
}

id objc_msgSend_fActiveRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fActiveRequest");
}

id objc_msgSend_fBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fBody");
}

id objc_msgSend_fFinished(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fFinished");
}

id objc_msgSend_fHttpResponse(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fHttpResponse");
}

id objc_msgSend_fOriginalThreadName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fOriginalThreadName");
}

id objc_msgSend_fReceivedData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fReceivedData");
}

id objc_msgSend_fUrl(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fUrl");
}

id objc_msgSend_family(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "family");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileHandleForReading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileHandleForReading");
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileSystemRepresentation");
}

id objc_msgSend_fileURLWithFileSystemRepresentation_isDirectory_relativeToURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_filterLocationGroups_isRegionalSupported_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "filterLocationGroups:isRegionalSupported:");
}

id objc_msgSend_findChannel_in_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "findChannel:in:");
}

id objc_msgSend_finishWritingWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finishWritingWithCompletionHandler:");
}

id objc_msgSend_firstStepTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstStepTime");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatValue");
}

id objc_msgSend_floorRequests(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floorRequests");
}

id objc_msgSend_floorUuid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floorUuid");
}

id objc_msgSend_floorsAscended(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floorsAscended");
}

id objc_msgSend_floorsDescended(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floorsDescended");
}

id objc_msgSend_flushWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flushWithCompletionHandler:");
}

id objc_msgSend_forceClean(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceClean");
}

id objc_msgSend_foregroundRequestCompleted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "foregroundRequestCompleted:");
}

id objc_msgSend_foregroundRequestCompleted_withError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "foregroundRequestCompleted:withError:");
}

id objc_msgSend_foregroundSessionConfigurationWithTimeout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "foregroundSessionConfigurationWithTimeout:");
}

id objc_msgSend_foregroundTileDownloadComplete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "foregroundTileDownloadComplete");
}

id objc_msgSend_fromCLPipelinedLocationContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fromCLPipelinedLocationContext:");
}

id objc_msgSend_fromECEFCoordinate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fromECEFCoordinate:");
}

id objc_msgSend_fromGpsEstimate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fromGpsEstimate:");
}

id objc_msgSend_fromLatLon_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fromLatLon:");
}

id objc_msgSend_fromLatLonOrigin_andEcefOrigin_andEcefPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fromLatLonOrigin:andEcefOrigin:andEcefPoint:");
}

id objc_msgSend_fromPoseEstimate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fromPoseEstimate:");
}

id objc_msgSend_fromPoseEstimate_andGpsEstimate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fromPoseEstimate:andGpsEstimate:");
}

id objc_msgSend_fsDb(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fsDb");
}

id objc_msgSend_fullyVacuumAllDBs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fullyVacuumAllDBs");
}

id objc_msgSend_fullyVacuumAllDBsWithReply_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fullyVacuumAllDBsWithReply:");
}

id objc_msgSend_getAvailabilityData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAvailabilityData");
}

id objc_msgSend_getAvailabilityTileParserAndSetParams_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAvailabilityTileParserAndSetParams:");
}

id objc_msgSend_getAvailabilityTilePathFromWorkdir_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAvailabilityTilePathFromWorkdir:");
}

id objc_msgSend_getAvlTile(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getAvlTile");
}

id objc_msgSend_getBytes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getBytes:length:");
}

id objc_msgSend_getCookiesForUrl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getCookiesForUrl:");
}

id objc_msgSend_getGroupId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getGroupId");
}

id objc_msgSend_getLocationContextFromVenueBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getLocationContextFromVenueBounds:");
}

id objc_msgSend_getLocationIds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getLocationIds");
}

id objc_msgSend_getMaxPriorityForPrefetch_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getMaxPriorityForPrefetch:");
}

id objc_msgSend_getNearbyLocationGroups_withUpdatedPos_nearLocationsOfInterest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getNearbyLocationGroups:withUpdatedPos:nearLocationsOfInterest:");
}

id objc_msgSend_getNearbyLocationGroupsForTile_withUpdatedPos_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getNearbyLocationGroupsForTile:withUpdatedPos:");
}

id objc_msgSend_getNearbyLocationGroupsForTile_withUpdatedPos_nearLocationsOfInterest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getNearbyLocationGroupsForTile:withUpdatedPos:nearLocationsOfInterest:");
}

id objc_msgSend_getNextVenueBoundsIncrementally_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getNextVenueBoundsIncrementally:");
}

id objc_msgSend_getSensor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getSensor");
}

id objc_msgSend_getTasksWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getTasksWithCompletionHandler:");
}

id objc_msgSend_getTimeStampFromSampleBuffer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getTimeStampFromSampleBuffer:");
}

id objc_msgSend_getVertices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getVertices");
}

id objc_msgSend_globallyUniqueString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "globallyUniqueString");
}

id objc_msgSend_gpsEstimateAvailable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gpsEstimateAvailable:");
}

id objc_msgSend_gpsLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gpsLocation");
}

id objc_msgSend_gpsLocationPrivate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gpsLocationPrivate");
}

id objc_msgSend_gpsSignalQualityAvailable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gpsSignalQualityAvailable:");
}

id objc_msgSend_gravity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gravity");
}

id objc_msgSend_groupId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "groupId");
}

id objc_msgSend_handleCancelled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleCancelled:");
}

id objc_msgSend_handleCheckIn_withPolicy_andName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleCheckIn:withPolicy:andName:");
}

id objc_msgSend_handleCompleted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleCompleted");
}

id objc_msgSend_handleTileCleanup_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleTileCleanup:");
}

id objc_msgSend_handleTileCleanupCheckIn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleTileCleanupCheckIn:");
}

id objc_msgSend_handleVacuumDBs_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleVacuumDBs:");
}

id objc_msgSend_handleVacuumDBsCheckIn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleVacuumDBsCheckIn:");
}

id objc_msgSend_hasAnyOpenTransaction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasAnyOpenTransaction");
}

id objc_msgSend_hasCompleteFloor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasCompleteFloor");
}

id objc_msgSend_hasOpenTransactionWithDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasOpenTransactionWithDescription:");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hash");
}

id objc_msgSend_horizontalAccuracy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "horizontalAccuracy");
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "host");
}

id objc_msgSend_hwModel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hwModel");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identifier");
}

id objc_msgSend_impl(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "impl");
}

id objc_msgSend_includeOffChannelResults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "includeOffChannelResults");
}

id objc_msgSend_indexOfObjectAtIndexes_options_passingTest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfObjectAtIndexes:options:passingTest:");
}

id objc_msgSend_indexSetWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexSetWithIndexesInRange:");
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_indoorAssetDownloadProgress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indoorAssetDownloadProgress:");
}

id objc_msgSend_indoorDidFailWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indoorDidFailWithError:");
}

id objc_msgSend_indoorDidUpdateToLocation_fromLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indoorDidUpdateToLocation:fromLocation:");
}

id objc_msgSend_indoorGivesUpWithLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indoorGivesUpWithLocation:");
}

id objc_msgSend_indoorIsUncertainWithLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indoorIsUncertainWithLocation:");
}

id objc_msgSend_indoorRequestInfoFromRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indoorRequestInfoFromRequest:");
}

id objc_msgSend_indoorRequestInfoFromTask_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indoorRequestInfoFromTask:");
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoDictionary");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "init");
}

id objc_msgSend_init_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "init:");
}

id objc_msgSend_initFileURLWithPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initFileURLWithPath:");
}

id objc_msgSend_initFloor_inVenue_withContext_requestFor_withinSession_lastRelevant_allowCellularDownloadTile_requestUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initFloor:inVenue:withContext:requestFor:withinSession:lastRelevant:allowCellularDownloadTile:requestUUID:");
}

id objc_msgSend_initFromECEFCoordinate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initFromECEFCoordinate:");
}

id objc_msgSend_initWithAge_bssid_ssid_channel_rssi_flags_adHoc_personalHotspot_captive_mode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAge:bssid:ssid:channel:rssi:flags:adHoc:personalHotspot:captive:mode:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAssetWriterInput_sourcePixelBufferAttributes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAssetWriterInput:sourcePixelBufferAttributes:");
}

id objc_msgSend_initWithAvailabilityTile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAvailabilityTile:");
}

id objc_msgSend_initWithAvailableVenues_availabilityZScoreConfidenceInterval_dynamicUniverseParameters_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAvailableVenues:availabilityZScoreConfidenceInterval:dynamicUniverseParameters:");
}

id objc_msgSend_initWithBackend_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBackend:");
}

id objc_msgSend_initWithCallback_onQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCallback:onQueue:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithChannels_dwell_scanType_includingOffChannelResults_atDutyCycle_asLowPriority_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithChannels:dwell:scanType:includingOffChannelResults:atDutyCycle:asLowPriority:");
}

id objc_msgSend_initWithConnection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithConnection:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithDatarun_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDatarun:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_queue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:queue:");
}

id objc_msgSend_initWithDisableBackground_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDisableBackground:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithFloor_inVenue_lastRelevant_hasCompleteFloor_allowCellularDownload_locationContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFloor:inVenue:lastRelevant:hasCompleteFloor:allowCellularDownload:locationContext:");
}

id objc_msgSend_initWithFloor_inVenue_lastRelevant_hasCompleteFloor_allowCellularDownload_locationContext_priority_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFloor:inVenue:lastRelevant:hasCompleteFloor:allowCellularDownload:locationContext:priority:");
}

id objc_msgSend_initWithFloor_inVenue_lastRelevant_hasCompleteFloor_allowCellularDownload_locationContext_ranking_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFloor:inVenue:lastRelevant:hasCompleteFloor:allowCellularDownload:locationContext:ranking:");
}

id objc_msgSend_initWithFloor_inVenue_lastRelevant_locationContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFloor:inVenue:lastRelevant:locationContext:");
}

id objc_msgSend_initWithFloorRequests_forAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFloorRequests:forAction:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithGroupId_locationIds_center_wifiOnlyDownloadLocIdxs_locationContext_andTolerance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithGroupId:locationIds:center:wifiOnlyDownloadLocIdxs:locationContext:andTolerance:");
}

id objc_msgSend_initWithInt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInt:");
}

id objc_msgSend_initWithKey_ascending_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithKey:ascending:");
}

id objc_msgSend_initWithLatitude_longitude_andAltitude_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLatitude:longitude:andAltitude:");
}

id objc_msgSend_initWithListenerEndpoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithListenerEndpoint:");
}

id objc_msgSend_initWithLocation_andPrivateLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocation:andPrivateLocation:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithMachServiceName_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMachServiceName:options:");
}

id objc_msgSend_initWithMaxTasks_usingDelegate_withSessionConfiguration_andProxiedSessionDelegate_andSessionDelegateQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMaxTasks:usingDelegate:withSessionConfiguration:andProxiedSessionDelegate:andSessionDelegateQueue:");
}

id objc_msgSend_initWithMemoryCapacity_diskCapacity_diskPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMemoryCapacity:diskCapacity:diskPath:");
}

id objc_msgSend_initWithMotionActivityManager_andHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMotionActivityManager:andHandler:");
}

id objc_msgSend_initWithMotionManager_andHandler_usingReferenceFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMotionManager:andHandler:usingReferenceFrame:");
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithName:");
}

id objc_msgSend_initWithName_radius_preferredUpdateRate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithName:radius:preferredUpdateRate:");
}

id objc_msgSend_initWithOperationQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithOperationQueue:");
}

id objc_msgSend_initWithPlatform_andTimer_andDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPlatform:andTimer:andDelegate:");
}

id objc_msgSend_initWithRegions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRegions:");
}

id objc_msgSend_initWithRequest_delegate_startImmediately_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRequest:delegate:startImmediately:");
}

id objc_msgSend_initWithRequest_withPriority_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRequest:withPriority:");
}

id objc_msgSend_initWithRequest_withPriority_andResumeData_andCountOfBytesClientExpectsToReceive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRequest:withPriority:andResumeData:andCountOfBytesClientExpectsToReceive:");
}

id objc_msgSend_initWithServerConfiguration_usingDelegate_queue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithServerConfiguration:usingDelegate:queue:");
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithService:");
}

id objc_msgSend_initWithSettings_cached_at_initiatedAt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSettings:cached:at:initiatedAt:");
}

id objc_msgSend_initWithTilePathIncrementalIO_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTilePathIncrementalIO:");
}

id objc_msgSend_initWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTimeIntervalSinceNow:");
}

id objc_msgSend_initWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_initWithType_reducedRate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithType:reducedRate:");
}

id objc_msgSend_initWithURL_fileType_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithURL:fileType:error:");
}

id objc_msgSend_initWithUrl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithUrl:");
}

id objc_msgSend_initWithX_y_z_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithX:y:z:");
}

id objc_msgSend_initializeDb(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initializeDb");
}

id objc_msgSend_initializeDb_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initializeDb:");
}

id objc_msgSend_initializeIndoorUniverse_atLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initializeIndoorUniverse:atLocation:");
}

id objc_msgSend_initializeServiceApi(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initializeServiceApi");
}

id objc_msgSend_initiateScanOnDevice_withSettings_deviceNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initiateScanOnDevice:withSettings:deviceNumber:");
}

id objc_msgSend_initiatedTimestamp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initiatedTimestamp");
}

id objc_msgSend_inputStreamWithData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inputStreamWithData:");
}

id objc_msgSend_inputStreamWithFileAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inputStreamWithFileAtPath:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "integerValue");
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_interval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interval");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidate");
}

id objc_msgSend_invalidateAndCancel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateAndCancel");
}

id objc_msgSend_invalidateSessions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateSessions");
}

id objc_msgSend_isAllowedToUpdateUniverse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAllowedToUpdateUniverse:");
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCancelled");
}

id objc_msgSend_isDaemon(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDaemon");
}

id objc_msgSend_isDeviceMotionAvailable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDeviceMotionAvailable");
}

id objc_msgSend_isDisabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDisabled");
}

id objc_msgSend_isDistanceAvailable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDistanceAvailable");
}

id objc_msgSend_isEntitled_forEntitlement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEntitled:forEntitlement:");
}

id objc_msgSend_isEntitled_forEntitlement_allowRootEverything_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEntitled:forEntitlement:allowRootEverything:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToRequest:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isIndoor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isIndoor:");
}

id objc_msgSend_isLastOpenTransactionWithDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLastOpenTransactionWithDescription:");
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLocked");
}

id objc_msgSend_isMagnetometerAvailable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMagnetometerAvailable");
}

id objc_msgSend_isMetadata_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMetadata:");
}

id objc_msgSend_isRegional_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRegional:");
}

id objc_msgSend_isRegionalEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRegionalEnabled");
}

id objc_msgSend_isRequestValid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRequestValid:");
}

id objc_msgSend_isStaleFix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isStaleFix:");
}

id objc_msgSend_isStepCountingAvailable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isStepCountingAvailable");
}

id objc_msgSend_isSubsetOfSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSubsetOfSet:");
}

id objc_msgSend_isVenueDisabled_locationId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isVenueDisabled:locationId:");
}

id objc_msgSend_keybagDidLock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keybagDidLock");
}

id objc_msgSend_keybagDidUnlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keybagDidUnlock");
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "kind");
}

id objc_msgSend_lastLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastLocation");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPathComponent");
}

id objc_msgSend_lastRelevant(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastRelevant");
}

id objc_msgSend_latitude(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "latitude");
}

id objc_msgSend_launch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "launch");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "length");
}

id objc_msgSend_localizationActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizationActive");
}

id objc_msgSend_localizationStarted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizationStarted");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedFailureReason");
}

id objc_msgSend_localizedStringForStatusCode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedStringForStatusCode:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "location");
}

id objc_msgSend_locationContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationContext");
}

id objc_msgSend_locationDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationDescription");
}

id objc_msgSend_locationId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationId");
}

id objc_msgSend_locationManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationManager");
}

id objc_msgSend_locationPrivate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationPrivate");
}

id objc_msgSend_locationRequests_usingAvailabilityTile_forAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationRequests:usingAvailabilityTile:forAction:");
}

id objc_msgSend_log(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "log");
}

id objc_msgSend_logViolation_ofEntitlement_forSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logViolation:ofEntitlement:forSelector:");
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "longLongValue");
}

id objc_msgSend_longitude(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "longitude");
}

id objc_msgSend_lowPriorityScan(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lowPriorityScan");
}

id objc_msgSend_machine(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "machine");
}

id objc_msgSend_magneticField(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "magneticField");
}

id objc_msgSend_main(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "main");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_makeReason_withCode_withFailure_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeReason:withCode:withFailure:");
}

id objc_msgSend_makeReason_withCode_withInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeReason:withCode:withInfo:");
}

id objc_msgSend_manufacturer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "manufacturer");
}

id objc_msgSend_maxConcurrentOperationCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxConcurrentOperationCount");
}

id objc_msgSend_maxModifiedAge(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxModifiedAge");
}

id objc_msgSend_member_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "member:");
}

id objc_msgSend_merged(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "merged");
}

id objc_msgSend_metersFromGreatCircleDistance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metersFromGreatCircleDistance:");
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mode");
}

id objc_msgSend_moveItemAtPath_toPath_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveItemAtPath:toPath:error:");
}

id objc_msgSend_mutableAvailabilityData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutableAvailabilityData");
}

id objc_msgSend_mutableDeferredState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutableDeferredState");
}

id objc_msgSend_mutableUniverseState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutableUniverseState");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "name");
}

id objc_msgSend_nearestVenues_availableVenues_latestPosition_availabilityZScoreConfidenceInterval_settings_isAllowedMultipleVenues_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nearestVenues:availableVenues:latestPosition:availabilityZScoreConfidenceInterval:settings:isAllowedMultipleVenues:");
}

id objc_msgSend_networkResultsToScanResults_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "networkResultsToScanResults:");
}

id objc_msgSend_newConnectionFor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newConnectionFor:");
}

id objc_msgSend_north(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "north");
}

id objc_msgSend_notificationType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notificationType");
}

id objc_msgSend_notify(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notify");
}

id objc_msgSend_notify_failedWithReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notify:failedWithReason:");
}

id objc_msgSend_notifyDelegateForegroundTaskCompleted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyDelegateForegroundTaskCompleted:");
}

id objc_msgSend_notifyDelegateForegroundTaskCompleted_withError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyDelegateForegroundTaskCompleted:withError:");
}

id objc_msgSend_notifyDelegateIfPrefetchComplete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyDelegateIfPrefetchComplete");
}

id objc_msgSend_notifyDelegatePrefetchComplete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyDelegatePrefetchComplete");
}

id objc_msgSend_notifyProxyOfDownloadError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyProxyOfDownloadError");
}

id objc_msgSend_notifyProxyOfDownloadError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyProxyOfDownloadError:");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "null");
}

id objc_msgSend_numExpectedFloors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numExpectedFloors");
}

id objc_msgSend_numFloors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numFloors");
}

id objc_msgSend_numFloors_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numFloors:");
}

id objc_msgSend_numFloorsSuccessfullyDownloaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numFloorsSuccessfullyDownloaded");
}

id objc_msgSend_numOpenTransactions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numOpenTransactions");
}

id objc_msgSend_numTotalExpectedExteriorsInVenues(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numTotalExpectedExteriorsInVenues");
}

id objc_msgSend_numVenuesExpected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numVenuesExpected");
}

id objc_msgSend_numberOfSteps(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfSteps");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithUnsignedLong:");
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objCType");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_onConnectionQueueShutdown(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onConnectionQueueShutdown");
}

id objc_msgSend_onError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onError");
}

id objc_msgSend_onHeaders(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onHeaders");
}

id objc_msgSend_onProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onProgress");
}

id objc_msgSend_onQueueAllocManagerWithRunLoop_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueAllocManagerWithRunLoop:");
}

id objc_msgSend_onQueueClearTiles_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueClearTiles:");
}

id objc_msgSend_onQueueClearTiles_fromDbs_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueClearTiles:fromDbs:");
}

id objc_msgSend_onQueueClearTilesIfPossible_fromDbs_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueClearTilesIfPossible:fromDbs:");
}

id objc_msgSend_onQueueCreateProviderForConnection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueCreateProviderForConnection:");
}

id objc_msgSend_onQueueDbsToClear(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueDbsToClear");
}

id objc_msgSend_onQueueDeleteCompletedScan_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueDeleteCompletedScan:");
}

id objc_msgSend_onQueueDeregisterDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueDeregisterDevices");
}

id objc_msgSend_onQueueDeregisterManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueDeregisterManager");
}

id objc_msgSend_onQueueHandleDeviceAttached_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueHandleDeviceAttached:");
}

id objc_msgSend_onQueueHandleScan_forSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueHandleScan:forSettings:");
}

id objc_msgSend_onQueueHandleScanFailed_forSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueHandleScanFailed:forSettings:");
}

id objc_msgSend_onQueueHandleScanFor_withResults_forScan_withSettings_withRequest_withError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueHandleScanFor:withResults:forScan:withSettings:withRequest:withError:");
}

id objc_msgSend_onQueueHandleScanTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueHandleScanTimer");
}

id objc_msgSend_onQueueHandlerServerRestart(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueHandlerServerRestart");
}

id objc_msgSend_onQueueInitiateScan_initiated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueInitiateScan:initiated:");
}

id objc_msgSend_onQueueInterruptDownloads_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueInterruptDownloads:");
}

id objc_msgSend_onQueueInvalidate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueInvalidate");
}

id objc_msgSend_onQueueInvalidate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueInvalidate:");
}

id objc_msgSend_onQueueLocalizeOnSelection_withParameterOverrides_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueLocalizeOnSelection:withParameterOverrides:");
}

id objc_msgSend_onQueueNotify_onFloor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueNotify:onFloor:");
}

id objc_msgSend_onQueueNotifyDelegateForegroundFetchComplete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueNotifyDelegateForegroundFetchComplete");
}

id objc_msgSend_onQueueNotifyDelegatePrefetchComplete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueNotifyDelegatePrefetchComplete");
}

id objc_msgSend_onQueueNotifyLocationContext_withLocationContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueNotifyLocationContext:withLocationContext:");
}

id objc_msgSend_onQueueNotifyWifiError_withSettings_forScanInitiated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueNotifyWifiError:withSettings:forScanInitiated:");
}

id objc_msgSend_onQueueNumFloors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueNumFloors");
}

id objc_msgSend_onQueuePrefetch_callback_when_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueuePrefetch:callback:when:");
}

id objc_msgSend_onQueueProcessCompletedFetch_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueProcessCompletedFetch:");
}

id objc_msgSend_onQueueReEnumerateDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueReEnumerateDevices");
}

id objc_msgSend_onQueueRecordInputEventMetrics_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueRecordInputEventMetrics:");
}

id objc_msgSend_onQueueRegisterCallbacks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueRegisterCallbacks");
}

id objc_msgSend_onQueueRegisterDevices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueRegisterDevices");
}

id objc_msgSend_onQueueScanAfter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueScanAfter:");
}

id objc_msgSend_onQueueScanTimedOut_withReason_errorCode_forScanInitiated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueScanTimedOut:withReason:errorCode:forScanInitiated:");
}

id objc_msgSend_onQueueScheduleScanFromSettingsWithFailure_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueScheduleScanFromSettingsWithFailure:");
}

id objc_msgSend_onQueueSelectedLocationDownloadCompleted_forAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueSelectedLocationDownloadCompleted:forAction:");
}

id objc_msgSend_onQueueSession_didFinishDownloadTask_toPath_inTempPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueSession:didFinishDownloadTask:toPath:inTempPath:");
}

id objc_msgSend_onQueueSessionDidCompleteTask_withError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueSessionDidCompleteTask:withError:");
}

id objc_msgSend_onQueueSessionWillSendRequestForEstablishedConnection_task_completionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueSessionWillSendRequestForEstablishedConnection:task:completionHandler:");
}

id objc_msgSend_onQueueStartScanning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueStartScanning");
}

id objc_msgSend_onQueueStopScanning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueStopScanning");
}

id objc_msgSend_onQueueStopUpdatingLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueStopUpdatingLocation:");
}

id objc_msgSend_onQueueTeardown(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueTeardown");
}

id objc_msgSend_onQueueTick(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueTick");
}

id objc_msgSend_onQueueUpdateDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onQueueUpdateDelegate");
}

id objc_msgSend_onResponse(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onResponse");
}

id objc_msgSend_onUploadProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onUploadProgress");
}

id objc_msgSend_open(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "open");
}

id objc_msgSend_openTileParserAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openTileParserAtPath:");
}

id objc_msgSend_openTransactionWithDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openTransactionWithDescription:");
}

id objc_msgSend_originalRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalRequest");
}

id objc_msgSend_osVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "osVersion");
}

id objc_msgSend_outdoorLocationAvailable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "outdoorLocationAvailable:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "path");
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pathExtension");
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pathMimeType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pathMimeType:");
}

id objc_msgSend_pathWithComponents_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pathWithComponents:");
}

id objc_msgSend_pause(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pause");
}

id objc_msgSend_pausedLocalization(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pausedLocalization");
}

id objc_msgSend_persistentDomainForName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "persistentDomainForName:");
}

id objc_msgSend_personalHotspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "personalHotspot");
}

id objc_msgSend_playbackDatarun_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "playbackDatarun:");
}

id objc_msgSend_port(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "port");
}

id objc_msgSend_prefetch_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "prefetch:");
}

id objc_msgSend_prefetch_callback_when_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "prefetch:callback:when:");
}

id objc_msgSend_prefetchCompletion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "prefetchCompletion");
}

id objc_msgSend_prefetcher(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "prefetcher");
}

id objc_msgSend_prefetcher_didFinishForegroundRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "prefetcher:didFinishForegroundRequest:");
}

id objc_msgSend_prefetcher_didFinishForegroundRequest_withError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "prefetcher:didFinishForegroundRequest:withError:");
}

id objc_msgSend_pressure(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pressure");
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "priority");
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "processIdentifier");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "processInfo");
}

id objc_msgSend_propertyForKey_inRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "propertyForKey:inRequest:");
}

id objc_msgSend_ps_STLString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ps_STLString");
}

id objc_msgSend_ps_STLStringOnNil_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ps_STLStringOnNil:");
}

id objc_msgSend_ps_inputStreamWithFileAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ps_inputStreamWithFileAtPath:");
}

id objc_msgSend_ps_inputStreamWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ps_inputStreamWithString:");
}

id objc_msgSend_ps_stringWithData_encoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ps_stringWithData:encoding:");
}

id objc_msgSend_ps_stringWithSTL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ps_stringWithSTL:");
}

id objc_msgSend_ps_stringWithUTF8Data_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ps_stringWithUTF8Data:");
}

id objc_msgSend_ps_urlEncode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ps_urlEncode");
}

id objc_msgSend_q(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "q");
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_rangeOfData_options_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rangeOfData:options:range:");
}

id objc_msgSend_rawToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rawToken");
}

id objc_msgSend_read_maxLength_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "read:maxLength:");
}

id objc_msgSend_readDataToEndOfFile(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readDataToEndOfFile");
}

id objc_msgSend_readNextSampleBuffer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "readNextSampleBuffer");
}

id objc_msgSend_recomputeIfNecessary_withGlobalAvailabilityTile_andAdditionalLOIs_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "recomputeIfNecessary:withGlobalAvailabilityTile:andAdditionalLOIs:");
}

id objc_msgSend_relationship(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "relationship");
}

id objc_msgSend_relativeAltitude(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "relativeAltitude");
}

id objc_msgSend_releaseObjectsNotNeededForLocalization(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "releaseObjectsNotNeededForLocalization");
}

id objc_msgSend_relevancy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "relevancy");
}

id objc_msgSend_reloadAvailabilityTilePrefetchParameters(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "reloadAvailabilityTilePrefetchParameters");
}

id objc_msgSend_remoteObjectProtocol(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "remoteObjectProtocol");
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "remoteObjectProxy");
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "remoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeAllTasks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeAllTasks");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeLastObject");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "request");
}

id objc_msgSend_requestDidComplete_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestDidComplete:");
}

id objc_msgSend_requestDidComplete_withError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestDidComplete:withError:");
}

id objc_msgSend_requestForegroundFetchForFloors_withRequestUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestForegroundFetchForFloors:withRequestUUID:");
}

id objc_msgSend_requestForegroundTileDownload(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestForegroundTileDownload");
}

id objc_msgSend_requestLocationTilesForGroup_usingAvailabilityTile_forAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestLocationTilesForGroup:usingAvailabilityTile:forAction:");
}

id objc_msgSend_requestUUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestUUID");
}

id objc_msgSend_requestWhenInUseAuthorization(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestWhenInUseAuthorization");
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requestsAnonymity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestsAnonymity");
}

id objc_msgSend_requestsGpsAssistance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestsGpsAssistance");
}

id objc_msgSend_resetSessions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resetSessions");
}

id objc_msgSend_resetWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resetWithCompletionHandler:");
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "response");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resume");
}

id objc_msgSend_resumeData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resumeData");
}

id objc_msgSend_resumeRequestIfAllowedOrEnqueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "resumeRequestIfAllowedOrEnqueue:");
}

id objc_msgSend_retrieveLocationRelevancyDurationWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "retrieveLocationRelevancyDurationWithCompletionHandler:");
}

id objc_msgSend_rotationMatrix(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rotationMatrix");
}

id objc_msgSend_rotationRate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rotationRate");
}

id objc_msgSend_rssi(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "rssi");
}

id objc_msgSend_runFromNetworkCallback_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "runFromNetworkCallback:");
}

id objc_msgSend_runMode_beforeDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "runMode:beforeDate:");
}

id objc_msgSend_runWithConfiguration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "runWithConfiguration:");
}

id objc_msgSend_running(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "running");
}

id objc_msgSend_scanAsync_initiated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanAsync:initiated:");
}

id objc_msgSend_scanForPeripheralsWithServices_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanForPeripheralsWithServices:options:");
}

id objc_msgSend_scanResultWithAge_bssid_ssid_channel_rssi_flags_adHoc_captive_mode_personalHotspot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanResultWithAge:bssid:ssid:channel:rssi:flags:adHoc:captive:mode:personalHotspot:");
}

id objc_msgSend_scanRssiThreshold(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanRssiThreshold");
}

id objc_msgSend_scanSettingsToDictionary_usingSupportedChannels_logTo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanSettingsToDictionary:usingSupportedChannels:logTo:");
}

id objc_msgSend_scanTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanTimer");
}

id objc_msgSend_scanType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanType");
}

id objc_msgSend_scanning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scanning");
}

id objc_msgSend_scheduleDownloadForFloorMetadata_inVenue_withContext_lastRelevant_allowCellularDownload_onSession_withResumeData_withRequestUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduleDownloadForFloorMetadata:inVenue:withContext:lastRelevant:allowCellularDownload:onSession:withResumeData:withRequestUUID:");
}

id objc_msgSend_scheduleDownloadForRequest_withResumeData_withSession_andExpectedByteSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduleDownloadForRequest:withResumeData:withSession:andExpectedByteSize:");
}

id objc_msgSend_scheduleDownloadForTile_inVenue_withContext_lastRelevant_allowCellularDownload_onSession_withResumeData_withRequestUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduleDownloadForTile:inVenue:withContext:lastRelevant:allowCellularDownload:onSession:withResumeData:withRequestUUID:");
}

id objc_msgSend_scheduleForegroundDownloadForFloors_withRequestUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduleForegroundDownloadForFloors:withRequestUUID:");
}

id objc_msgSend_scheduleInRunLoop_forMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheduleInRunLoop:forMode:");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "scheme");
}

id objc_msgSend_selectedLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "selectedLocation");
}

id objc_msgSend_sensorPresent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sensorPresent");
}

id objc_msgSend_serializedOutdoorEstimatorLogEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serializedOutdoorEstimatorLogEntry");
}

id objc_msgSend_serializedVIOEstimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serializedVIOEstimation");
}

id objc_msgSend_serializedVLLocalizationResult(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serializedVLLocalizationResult");
}

id objc_msgSend_serviceDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serviceDelegate");
}

id objc_msgSend_serviceName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "serviceName");
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "session");
}

id objc_msgSend_session_didFinishDownloadTask_toPath_inTempPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "session:didFinishDownloadTask:toPath:inTempPath:");
}

id objc_msgSend_session_didResumeRequest_withRemainingRequests_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "session:didResumeRequest:withRemainingRequests:");
}

id objc_msgSend_sessionInvalidationGroup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sessionInvalidationGroup");
}

id objc_msgSend_sessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sessionWithConfiguration:");
}

id objc_msgSend_sessionWithConfiguration_delegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sessionWithConfiguration:delegate:delegateQueue:");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "set");
}

id objc_msgSend_setActivity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setActivity:");
}

id objc_msgSend_setAllHTTPHeaderFields_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAllHTTPHeaderFields:");
}

id objc_msgSend_setAllowedDevices_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAllowedDevices:");
}

id objc_msgSend_setAllowsBackgroundLocationUpdates_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAllowsBackgroundLocationUpdates:");
}

id objc_msgSend_setAllowsCellularAccess_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAllowsCellularAccess:");
}

id objc_msgSend_setAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setAnchor:");
}

id objc_msgSend_setArguments_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setArguments:");
}

id objc_msgSend_setCachePolicy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCachePolicy:");
}

id objc_msgSend_setCb_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCb:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setContentLength_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setContentLength:");
}

id objc_msgSend_setContentType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setContentType:");
}

id objc_msgSend_setCountOfBytesClientExpectsToReceive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCountOfBytesClientExpectsToReceive:");
}

id objc_msgSend_setCurrentForegroundFetchRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setCurrentForegroundFetchRequest:");
}

id objc_msgSend_setDebounceInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDebounceInterval:");
}

id objc_msgSend_setDelay_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDelay:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDelegateProxy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDelegateProxy:");
}

id objc_msgSend_setDeviceMotionUpdateInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDeviceMotionUpdateInterval:");
}

id objc_msgSend_setDiagnosticReport_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDiagnosticReport:");
}

id objc_msgSend_setDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDictionary:");
}

id objc_msgSend_setDisabledVenues_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDisabledVenues:");
}

id objc_msgSend_setDiscretionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDiscretionary:");
}

id objc_msgSend_setDownloadQ_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setDownloadQ:");
}

id objc_msgSend_setErrorBackoffDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setErrorBackoffDuration:");
}

id objc_msgSend_setEventHandler_onQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setEventHandler:onQueue:");
}

id objc_msgSend_setExpectsMediaDataInRealTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExpectsMediaDataInRealTime:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setFActiveRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFActiveRequest:");
}

id objc_msgSend_setFBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFBody:");
}

id objc_msgSend_setFExecuting_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFExecuting:");
}

id objc_msgSend_setFFinished_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFFinished:");
}

id objc_msgSend_setFHttpResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFHttpResponse:");
}

id objc_msgSend_setFOriginalThreadName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFOriginalThreadName:");
}

id objc_msgSend_setFReceivedData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFReceivedData:");
}

id objc_msgSend_setFUrl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFUrl:");
}

id objc_msgSend_setForcedVenues_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setForcedVenues:");
}

id objc_msgSend_setFromECEFCoordinate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFromECEFCoordinate:");
}

id objc_msgSend_setFromLatLon_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFromLatLon:");
}

id objc_msgSend_setFromLatLonOrigin_andEcefOrigin_andEcefPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFromLatLonOrigin:andEcefOrigin:andEcefPoint:");
}

id objc_msgSend_setFromLatitude_longitude_andAltitude_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFromLatitude:longitude:andAltitude:");
}

id objc_msgSend_setFromX_y_z_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFromX:y:z:");
}

id objc_msgSend_setFsDb_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setFsDb:");
}

id objc_msgSend_setHTTPBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHTTPBody:");
}

id objc_msgSend_setHTTPBodyStream_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHTTPBodyStream:");
}

id objc_msgSend_setHTTPMethod_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHTTPMethod:");
}

id objc_msgSend_setHTTPShouldUsePipelining_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHTTPShouldUsePipelining:");
}

id objc_msgSend_setHasCompleteFloor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHasCompleteFloor:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setIndoorAvailabilityTilesServerUrl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setIndoorAvailabilityTilesServerUrl:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInterval:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setLastLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLastLocation:");
}

id objc_msgSend_setLaunchPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLaunchPath:");
}

id objc_msgSend_setLocalizationActive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocalizationActive:");
}

id objc_msgSend_setLocalizationStarted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocalizationStarted:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLocationDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationDescription:");
}

id objc_msgSend_setLocationGroups_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationGroups:");
}

id objc_msgSend_setLocationId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationId:");
}

id objc_msgSend_setLocationPrivate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setLocationPrivate:");
}

id objc_msgSend_setMagnetometerUpdateInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMagnetometerUpdateInterval:");
}

id objc_msgSend_setMainDocumentURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMainDocumentURL:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMaxModifiedAge_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMaxModifiedAge:");
}

id objc_msgSend_setMerged_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMerged:");
}

id objc_msgSend_setMultiPart(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setMultiPart");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNetworkServiceType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNetworkServiceType:");
}

id objc_msgSend_setNumFloorsSuccessfullyDownloaded_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setNumFloorsSuccessfullyDownloaded:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOnError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOnError:");
}

id objc_msgSend_setOnHeaders_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOnHeaders:");
}

id objc_msgSend_setOnRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOnRequest:");
}

id objc_msgSend_setOnResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setOnResponse:");
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPath:");
}

id objc_msgSend_setPausedLocalization_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPausedLocalization:");
}

id objc_msgSend_setPort_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPort:");
}

id objc_msgSend_setPrefetchByteSizeLimitIndoor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrefetchByteSizeLimitIndoor:");
}

id objc_msgSend_setPrefetchByteSizeLimitRegional_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrefetchByteSizeLimitRegional:");
}

id objc_msgSend_setPrefetchClusterMergeRadius_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrefetchClusterMergeRadius:");
}

id objc_msgSend_setPrefetchCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrefetchCompletion:");
}

id objc_msgSend_setPrefetchFloorLimitIndoor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrefetchFloorLimitIndoor:");
}

id objc_msgSend_setPrefetchFloorLimitRegional_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrefetchFloorLimitRegional:");
}

id objc_msgSend_setPrefetcher_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPrefetcher:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setProperty_forKey_inRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setProperty:forKey:inRequest:");
}

id objc_msgSend_setQ_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setQ:");
}

id objc_msgSend_setReadabilityHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setReadabilityHandler:");
}

id objc_msgSend_setRegionalPrefetchClusterMergeRadius_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRegionalPrefetchClusterMergeRadius:");
}

id objc_msgSend_setRegionalTilePrefetchMaxCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRegionalTilePrefetchMaxCount:");
}

id objc_msgSend_setRegionalTilePrefetchRadius_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRegionalTilePrefetchRadius:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setRequestCachePolicy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestCachePolicy:");
}

id objc_msgSend_setRequestsGpsAssistance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setRequestsGpsAssistance:");
}

id objc_msgSend_setScanRssiThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setScanRssiThreshold:");
}

id objc_msgSend_setScanTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setScanTimer:");
}

id objc_msgSend_setScanning_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setScanning:");
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setScheme:");
}

id objc_msgSend_setSelectedLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSelectedLocation:");
}

id objc_msgSend_setSessionInvalidationGroup_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSessionInvalidationGroup:");
}

id objc_msgSend_setSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSet:");
}

id objc_msgSend_setSharedURLCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setSharedURLCache:");
}

id objc_msgSend_setStandardError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStandardError:");
}

id objc_msgSend_setStandardOutput_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStandardOutput:");
}

id objc_msgSend_setStopExpected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setStopExpected");
}

id objc_msgSend_setTargettedSsid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTargettedSsid:");
}

id objc_msgSend_setTilePrefetchMaxCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTilePrefetchMaxCount:");
}

id objc_msgSend_setTilePrefetchRadius_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTilePrefetchRadius:");
}

id objc_msgSend_setTimeoutInterval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimeoutInterval:");
}

id objc_msgSend_setTimeoutIntervalForResource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTimeoutIntervalForResource:");
}

id objc_msgSend_setTransactionManager_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setTransactionManager:");
}

id objc_msgSend_setURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setURL:");
}

id objc_msgSend_setURLCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setURLCache:");
}

id objc_msgSend_setUnderlyingQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUnderlyingQueue:");
}

id objc_msgSend_setUpdateLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setUpdateLocation:");
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setValue:forHTTPHeaderField:");
}

id objc_msgSend_setVenueGroupDistance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setVenueGroupDistance:");
}

id objc_msgSend_setWifiError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWifiError:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setWorkdir_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setWorkdir:");
}

id objc_msgSend_set_allowsExpensiveAccess_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "set_allowsExpensiveAccess:");
}

id objc_msgSend_set_requiresPowerPluggedIn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "set_requiresPowerPluggedIn:");
}

id objc_msgSend_set_sessionSendsLaunchOnDemandEvents_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "set_sessionSendsLaunchOnDemandEvents:");
}

id objc_msgSend_settingToSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "settingToSet:");
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "settings");
}

id objc_msgSend_sharedConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedConfiguration");
}

id objc_msgSend_sharedHTTPCookieStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sharedHTTPCookieStorage");
}

id objc_msgSend_shouldPrefetchFloorMetadataForFloorUuid_forSession_withLocationContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldPrefetchFloorMetadataForFloorUuid:forSession:withLocationContext:");
}

id objc_msgSend_shouldRecompute_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shouldRecompute:");
}

id objc_msgSend_shutdown(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shutdown");
}

id objc_msgSend_shutdownReason(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "shutdownReason");
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "sortedArrayUsingDescriptors:");
}

id objc_msgSend_speed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "speed");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "start");
}

id objc_msgSend_startActivityUpdatesToQueue_withHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startActivityUpdatesToQueue:withHandler:");
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startDate");
}

id objc_msgSend_startDeviceMotionUpdatesUsingReferenceFrame_toQueue_withHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startDeviceMotionUpdatesUsingReferenceFrame:toQueue:withHandler:");
}

id objc_msgSend_startExecuting(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startExecuting");
}

id objc_msgSend_startListeningCachedScans(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startListeningCachedScans");
}

id objc_msgSend_startLocalizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startLocalizer");
}

id objc_msgSend_startMagnetometerUpdatesToQueue_withHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startMagnetometerUpdatesToQueue:withHandler:");
}

id objc_msgSend_startPedometerUpdatesFromDate_withHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startPedometerUpdatesFromDate:withHandler:");
}

id objc_msgSend_startReading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startReading");
}

id objc_msgSend_startRelativeAltitudeUpdatesToQueue_withHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startRelativeAltitudeUpdatesToQueue:withHandler:");
}

id objc_msgSend_startScanning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startScanning");
}

id objc_msgSend_startSessionAtSourceTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startSessionAtSourceTime:");
}

id objc_msgSend_startUpdatingLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startUpdatingLocation");
}

id objc_msgSend_startUpdatingLocationAtLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startUpdatingLocationAtLocation:");
}

id objc_msgSend_startUpdatingLocationDeferred_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startUpdatingLocationDeferred:");
}

id objc_msgSend_startWriting(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "startWriting");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "state");
}

id objc_msgSend_stationary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stationary");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "status");
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "statusCode");
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stop");
}

id objc_msgSend_stopDeviceMotionUpdates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopDeviceMotionUpdates");
}

id objc_msgSend_stopExecuting(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopExecuting");
}

id objc_msgSend_stopListeningCachedScans(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopListeningCachedScans");
}

id objc_msgSend_stopLocalizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopLocalizer");
}

id objc_msgSend_stopMagnetometerUpdates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopMagnetometerUpdates");
}

id objc_msgSend_stopScanning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopScanning");
}

id objc_msgSend_stopUpdatingLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stopUpdatingLocation");
}

id objc_msgSend_storeAverage_ofVertices_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "storeAverage:ofVertices:");
}

id objc_msgSend_strategyChanged_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "strategyChanged:");
}

id objc_msgSend_streamError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "streamError");
}

id objc_msgSend_streamStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "streamStatus");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringVectorFromNSArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringVectorFromNSArray:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_stripLocatationGroupIdsPrefix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stripLocatationGroupIdsPrefix:");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_supportsMultiUser(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "supportsMultiUser");
}

id objc_msgSend_systemName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "systemName");
}

id objc_msgSend_systemVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "systemVersion");
}

id objc_msgSend_targettedSsid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "targettedSsid");
}

id objc_msgSend_tileForegroundFetchFinishedAllDownloads(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tileForegroundFetchFinishedAllDownloads");
}

id objc_msgSend_tileIsOpenForIncrementalIO(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tileIsOpenForIncrementalIO");
}

id objc_msgSend_tileLastModified_needsEvictionAt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tileLastModified:needsEvictionAt:");
}

id objc_msgSend_tilePrefetchDidDownload_forRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tilePrefetchDidDownload:forRequest:");
}

id objc_msgSend_tilePrefetchFinishedAllDownloads(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tilePrefetchFinishedAllDownloads");
}

id objc_msgSend_tilePrefetchForTileId_updateRelevancy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tilePrefetchForTileId:updateRelevancy:");
}

id objc_msgSend_tilePrefetchShouldPrefetchMetadataForFloor_withLocationContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tilePrefetchShouldPrefetchMetadataForFloor:withLocationContext:");
}

id objc_msgSend_tilePrefetchShouldPrefetchTileDataForFloor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tilePrefetchShouldPrefetchTileDataForFloor:");
}

id objc_msgSend_tileServer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tileServer");
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeIntervalSince1970");
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeIntervalSinceNow");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "timestamp");
}

id objc_msgSend_toBoostEnuWithLatLonOrigin_andEcefOrigin_usingENU_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "toBoostEnuWithLatLonOrigin:andEcefOrigin:usingENU:");
}

id objc_msgSend_tolerance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tolerance");
}

id objc_msgSend_tracksWithMediaType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "tracksWithMediaType:");
}

id objc_msgSend_transactionManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "transactionManager");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "type");
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unavailableFloorForegroundSessionQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unavailableFloorForegroundSessionQueue");
}

id objc_msgSend_underlyingQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "underlyingQueue");
}

id objc_msgSend_unknown(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unknown");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "unsignedIntValue");
}

id objc_msgSend_updateFrom_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateFrom:");
}

id objc_msgSend_updateLocalizerUniverse_fromLocation_withUniverseUpdatedHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateLocalizerUniverse:fromLocation:withUniverseUpdatedHandler:");
}

id objc_msgSend_updateLocalizerUniverseIfAllowed_fromLocation_withUniverseUpdatedHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateLocalizerUniverseIfAllowed:fromLocation:withUniverseUpdatedHandler:");
}

id objc_msgSend_updateLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateLocation");
}

id objc_msgSend_updateUniverseIfAllowedAndNecessary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateUniverseIfAllowedAndNecessary:");
}

id objc_msgSend_updateWifiSettingsForNextScan_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "updateWifiSettingsForNextScan:");
}

id objc_msgSend_uploadTaskWithRequest_fromFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "uploadTaskWithRequest:fromFile:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "uppercaseString");
}

id objc_msgSend_urlForAsset_forFloor_withTileServer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "urlForAsset:forFloor:withTileServer:");
}

id objc_msgSend_urlForFloor_withTileServer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "urlForFloor:withTileServer:");
}

id objc_msgSend_userAcceleration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "userAcceleration");
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "uuid");
}

id objc_msgSend_validateEntitlement_forConnection_forSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "validateEntitlement:forConnection:forSelector:");
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "valueForEntitlement:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_venueUuid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "venueUuid");
}

id objc_msgSend_venuesCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "venuesCount");
}

id objc_msgSend_versionString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "versionString");
}

id objc_msgSend_waitUntilAllOperationsAreFinished(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "waitUntilAllOperationsAreFinished");
}

id objc_msgSend_waitUntilExit(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "waitUntilExit");
}

id objc_msgSend_walking(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "walking");
}

id objc_msgSend_wifiCachedScanResult_withSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiCachedScanResult:withSettings:");
}

id objc_msgSend_wifiDidChangeIsPowered_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiDidChangeIsPowered:");
}

id objc_msgSend_wifiError(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiError");
}

id objc_msgSend_wifiScanData_forSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiScanData:forSettings:");
}

id objc_msgSend_wifiScanFailed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiScanFailed:");
}

id objc_msgSend_wifiScanFailed_withSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiScanFailed:withSettings:");
}

id objc_msgSend_wifiScanInitiated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiScanInitiated:");
}

id objc_msgSend_wifiScanInitiating(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiScanInitiating");
}

id objc_msgSend_wifiScanResult_withSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiScanResult:withSettings:");
}

id objc_msgSend_wifiThreadRunLoop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiThreadRunLoop");
}

id objc_msgSend_wifiThreadShutdown(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "wifiThreadShutdown");
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "willChangeValueForKey:");
}

id objc_msgSend_withinQueueCanReinitializeRemoteState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueueCanReinitializeRemoteState");
}

id objc_msgSend_withinQueueHandleReconnect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueueHandleReconnect:");
}

id objc_msgSend_withinQueueInitializeConnection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueueInitializeConnection");
}

id objc_msgSend_withinQueueInvalidate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueueInvalidate");
}

id objc_msgSend_withinQueueInvalidateState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueueInvalidateState");
}

id objc_msgSend_withinQueuePermanentShutdownReason(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueuePermanentShutdownReason");
}

id objc_msgSend_withinQueueReinitializeRemoteState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueueReinitializeRemoteState");
}

id objc_msgSend_withinQueueScheduleReconnect_reason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueueScheduleReconnect:reason:");
}

id objc_msgSend_withinQueueSetDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueueSetDelegate:");
}

id objc_msgSend_withinQueueShouldReinitializeRemote_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "withinQueueShouldReinitializeRemote:");
}

id objc_msgSend_workdir(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "workdir");
}

id objc_msgSend_x(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "x");
}

id objc_msgSend_xpcConnection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "xpcConnection");
}

id objc_msgSend_y(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "y");
}

id objc_msgSend_z(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "z");
}

