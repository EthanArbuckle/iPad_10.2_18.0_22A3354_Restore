void sub_100170690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
  {
    operator delete(__p);
    std::locale::~locale(&a10);
    if ((a16 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(a1);
  }
  else
  {
    std::locale::~locale(&a10);
    if ((a16 & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete(a11);
  _Unwind_Resume(a1);
}

void sub_1001706F4(_QWORD *a1)
{
  void **v2;
  uint64_t v3;
  uint64_t i;
  void **v5;

  if (a1[4])
  {
    v2 = (void **)a1[3];
    if (v2)
    {
      do
      {
        v5 = (void **)*v2;
        sub_1000B3D5C((uint64_t)(v2 + 5));
        if (*((char *)v2 + 39) < 0)
          operator delete(v2[2]);
        operator delete(v2);
        v2 = v5;
      }
      while (v5);
    }
    a1[3] = 0;
    v3 = a1[2];
    if (v3)
    {
      for (i = 0; i != v3; ++i)
        *(_QWORD *)(a1[1] + 8 * i) = 0;
    }
    a1[4] = 0;
  }
}

void sub_100170780(uint64_t a1, char *__s)
{
  size_t v4;
  size_t v5;
  void **p_dst;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  size_t v10;
  _QWORD *v11;
  uint64_t *v12;
  void **v13;
  std::locale v14;
  char *__dst;
  size_t v16;
  int64_t v17;
  std::string v18;
  void *__p;
  char v20;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (void **)operator new(v7 + 1);
    v16 = v5;
    v17 = v8 | 0x8000000000000000;
    __dst = (char *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v17) = v4;
  p_dst = (void **)&__dst;
  if (v4)
LABEL_8:
    memcpy(p_dst, __s, v5);
  *((_BYTE *)p_dst + v5) = 0;
  std::locale::locale(&v14);
  if (v17 >= 0)
    v9 = (char *)&__dst;
  else
    v9 = __dst;
  v10 = HIBYTE(v17);
  if (v17 < 0)
    v10 = v16;
  sub_1000CDD78(&v18, v9, &v14, &v9[v10]);
  v11 = (_QWORD *)(a1 + 8);
  v12 = sub_1000D0DB8(v11, (uint64_t)&v18);
  if (v12)
  {
    sub_10002BB38(v11, v12, (uint64_t)&__p);
    v13 = (void **)__p;
    __p = 0;
    if (v13)
    {
      if (v20)
      {
        sub_1000B3D5C((uint64_t)(v13 + 5));
        if (*((char *)v13 + 39) < 0)
          operator delete(v13[2]);
      }
      operator delete(v13);
    }
  }
  if ((SHIBYTE(v18.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::locale::~locale(&v14);
    if ((SHIBYTE(v17) & 0x80000000) == 0)
      return;
LABEL_24:
    operator delete(__dst);
    return;
  }
  operator delete(v18.__r_.__value_.__l.__data_);
  std::locale::~locale(&v14);
  if (SHIBYTE(v17) < 0)
    goto LABEL_24;
}

void sub_100170914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    std::locale::~locale((std::locale *)&a9);
    if ((a15 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(a1);
  }
  else
  {
    std::locale::~locale((std::locale *)&a9);
    if ((a15 & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete(a10);
  _Unwind_Resume(a1);
}

std::string *sub_100170980@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001709B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *sub_1001709CC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001709FC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100170A18()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100170A74()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_100170AD0(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_100170AFC()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100170B58()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100170BB4(int a1)
{
  if (a1 >= 5000)
    return (a1 - 5000) / 5u;
  else
    return ((a1 - 2407) / 5);
}

uint64_t sub_100170BF8(uint64_t a1)
{
  int v1;
  _OWORD v3[32];

  memset(v3, 0, sizeof(v3));
  v1 = sub_100170CB0(v3, 64, a1);
  return sub_100170D8C((void *const *)v3, 64, v1);
}

uint64_t sub_100170CB0(void *a1, int a2, uint64_t a3)
{
  unint64_t v5;
  size_t v6;
  char *v7;
  uint64_t v8;

  v5 = a3 + a2;
  if (v5)
  {
    if (v5 >> 61)
      sub_1000D02C0();
    v6 = 8 * v5;
    v7 = (char *)operator new(8 * v5);
    bzero(v7, v6);
    v5 = (unint64_t)&v7[v6];
  }
  else
  {
    v7 = 0;
  }
  v8 = backtrace((void **)v7, ((v5 - (unint64_t)v7) >> 3) - a3);
  memcpy(a1, &v7[8 * a3], 8 * (int)v8);
  if (v7)
    operator delete(v7);
  return v8;
}

void sub_100170D60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  void *v11;

  if (v11)
    operator delete(v11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100170D8C(void *const *a1, int a2, int a3)
{
  char **v6;
  void (__cdecl **v7)(std::ostringstream *__hidden);
  uint64_t v8;
  std::ios_base *v9;
  uint64_t v10;
  size_t v11;
  int v12;
  const char *dli_sname;
  size_t v15;
  _QWORD *v16;
  size_t v17;
  void *v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  const char *v23;
  _BYTE *v24;
  _BYTE *dli_saddr;
  size_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  void *__dst[2];
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  unsigned __int8 v35;
  void *__p[2];
  uint64_t v37;
  Dl_info v38;
  void (__cdecl **v39)(std::ostringstream *__hidden);
  _QWORD v40[8];
  __int128 v41;
  __int128 v42;
  int v43;
  void (__cdecl **v44)(std::ostringstream *__hidden);
  char __str[64];

  v6 = backtrace_symbols(a1, a3);
  v39 = v7;
  *(_QWORD *)((char *)&v40[-1] + (_QWORD)*(v7 - 3)) = v8;
  v9 = (std::ios_base *)((char *)&v40[-1] + (_QWORD)*(v39 - 3));
  std::ios_base::init(v9, v40);
  v9[1].__vftable = 0;
  v9[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v40);
  v41 = 0u;
  v42 = 0u;
  v43 = 16;
  if (a3 >= 1)
  {
    v10 = 0;
    while (1)
    {
      snprintf(__str, 0x40uLL, "%-3d\t%*p\t", v10, 18, a1[v10]);
      v11 = strlen(__str);
      sub_1000F0508(&v39, (uint64_t)__str, v11);
      v12 = dladdr(a1[v10], &v38);
      dli_sname = v38.dli_sname;
      if (v12 && v38.dli_sname != 0)
        break;
      v15 = strlen(v6[v10]);
      v16 = sub_1000F0508(&v39, (uint64_t)v6[v10], v15);
      sub_1000F0508(v16, (uint64_t)"\n", 1);
LABEL_3:
      if (a3 == ++v10)
        goto LABEL_30;
    }
    __p[0] = 0;
    __p[1] = 0;
    v37 = 0;
    v17 = strlen(v38.dli_sname);
    if (v17 >= 0x7FFFFFFFFFFFFFF8)
      sub_1000CDE30();
    v18 = (void *)v17;
    if (v17 >= 0x17)
    {
      v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v17 | 7) != 0x17)
        v20 = v17 | 7;
      v21 = v20 + 1;
      v19 = (void **)operator new(v20 + 1);
      __dst[1] = v18;
      v32 = v21 | 0x8000000000000000;
      __dst[0] = v19;
    }
    else
    {
      HIBYTE(v32) = v17;
      v19 = __dst;
      if (!v17)
      {
LABEL_18:
        *((_BYTE *)v18 + (_QWORD)v19) = 0;
        sub_10000EA1C(__dst, (uint64_t)&v33);
        if (SHIBYTE(v37) < 0)
          operator delete(__p[0]);
        *(_OWORD *)__p = v33;
        v37 = v34;
        HIBYTE(v34) = 0;
        LOBYTE(v33) = 0;
        v22 = v35;
        if (SHIBYTE(v32) < 0)
        {
          operator delete(__dst[0]);
          if (v22)
          {
LABEL_22:
            if (v37 >= 0)
              v23 = (const char *)__p;
            else
              v23 = (const char *)__p[0];
LABEL_28:
            v24 = a1[v10];
            dli_saddr = v38.dli_saddr;
            v26 = strlen(v23);
            v27 = sub_1000F0508(&v39, (uint64_t)v23, v26);
            v28 = sub_1000F0508(v27, (uint64_t)" + ", 3);
            v29 = (_QWORD *)std::ostream::operator<<(v28, v24 - dli_saddr);
            sub_1000F0508(v29, (uint64_t)"\n", 1);
            if (SHIBYTE(v37) < 0)
              operator delete(__p[0]);
            goto LABEL_3;
          }
        }
        else if (v35)
        {
          goto LABEL_22;
        }
        v23 = v38.dli_sname;
        if (!v38.dli_sname)
          v23 = v6[v10];
        goto LABEL_28;
      }
    }
    memmove(v19, dli_sname, (size_t)v18);
    goto LABEL_18;
  }
LABEL_30:
  free(v6);
  if (a2 == a3)
    sub_1000F0508(&v39, (uint64_t)"[truncated?]\n", 13);
  std::stringbuf::str(v40);
  if (SBYTE7(v42) < 0)
    operator delete((void *)v41);
  std::streambuf::~streambuf(v40);
  return std::ios::~ios(&v44);
}

void sub_10017115C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  std::ios::~ios(a16);
  _Unwind_Resume(a1);
}

void sub_100171184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  std::ios::~ios(a16);
  _Unwind_Resume(a1);
}

void sub_100171198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  sub_1000F0484((uint64_t)&a33);
  _Unwind_Resume(a1);
}

void sub_1001711AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  if (a33 < 0)
  {
    operator delete(__p);
    sub_1000F0484((uint64_t)&a39);
    _Unwind_Resume(a1);
  }
  sub_1000F0484((uint64_t)&a39);
  _Unwind_Resume(a1);
}

void sub_100171210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  sub_1000F0484((uint64_t)&a33);
  _Unwind_Resume(a1);
}

uint64_t sub_100171224(uint64_t a1)
{
  return sub_100170D8C(*(void *const **)a1, (*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3, (*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
}

void sub_100171244(uint64_t a1@<X8>)
{
  void *v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  sub_10017136C((void **)a1, 0x40uLL);
  v2 = *(void **)a1;
  v3 = (void **)operator new(0x200uLL);
  *((_OWORD *)v3 + 30) = 0u;
  *((_OWORD *)v3 + 31) = 0u;
  *((_OWORD *)v3 + 28) = 0u;
  *((_OWORD *)v3 + 29) = 0u;
  *((_OWORD *)v3 + 26) = 0u;
  *((_OWORD *)v3 + 27) = 0u;
  *((_OWORD *)v3 + 24) = 0u;
  *((_OWORD *)v3 + 25) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  *((_OWORD *)v3 + 23) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v4 = backtrace(v3, 64);
  memcpy(v2, v3, 8 * v4);
  operator delete(v3);
  v5 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3;
  if (v4 <= v5)
  {
    if (v4 < v5)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 8 * v4;
  }
  else
  {
    sub_10017136C((void **)a1, v4 - v5);
  }
}

void sub_100171330(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10017136C(void **a1, unint64_t a2)
{
  _BYTE *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  size_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v5 = (char *)a1[1];
  v4 = a1[2];
  v6 = v5;
  if (a2 <= (v4 - v5) >> 3)
  {
    if (a2)
    {
      bzero(v5, 8 * a2);
      v6 = &v5[8 * a2];
    }
    a1[1] = v6;
  }
  else
  {
    v7 = (char *)*a1;
    v8 = v5 - (_BYTE *)*a1;
    v9 = v8 >> 3;
    v10 = (v8 >> 3) + a2;
    if (v10 >> 61)
      sub_1000D02C0();
    v11 = v4 - v7;
    if (v11 >> 2 > v10)
      v10 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      if (v12 >> 61)
        sub_1000CDEB8();
      v13 = operator new(8 * v12);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[8 * v9];
    v15 = 8 * a2;
    v16 = &v13[8 * v12];
    bzero(v14, v15);
    v17 = &v14[v15];
    if (v5 != v7)
    {
      v18 = v5 - v7 - 8;
      if (v18 < 0x58)
        goto LABEL_30;
      if ((unint64_t)(v5 - v13 - v8) < 0x20)
        goto LABEL_30;
      v19 = (v18 >> 3) + 1;
      v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
      v6 = &v5[-v20];
      v14 -= v20;
      v21 = &v13[8 * v9 - 16];
      v22 = v5 - 16;
      v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v24 = *(_OWORD *)v22;
        *(v21 - 1) = *((_OWORD *)v22 - 1);
        *v21 = v24;
        v21 -= 2;
        v22 -= 32;
        v23 -= 4;
      }
      while (v23);
      if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_30:
        do
        {
          v25 = *((_QWORD *)v6 - 1);
          v6 -= 8;
          *((_QWORD *)v14 - 1) = v25;
          v14 -= 8;
        }
        while (v6 != v7);
      }
      v6 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v17;
    a1[2] = v16;
    if (v6)
      operator delete(v6);
  }
}

uint64_t sub_10017150C(uint64_t a1)
{
  sub_10004AAA0(a1, *(_QWORD **)(a1 + 8));
  return a1;
}

void sub_100171534()
{
  operator delete();
}

uint64_t sub_100171548(uint64_t a1, uint64_t a2)
{
  int i;
  int v5;
  int v6;
  char v7;
  int v8;
  int v10;
  __int16 v11;
  int v12;
  void *__p[2];
  uint64_t v14;

  __p[0] = 0;
  __p[1] = 0;
  v14 = 0;
  v12 = 0;
  v11 = 0;
  for (i = (*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)a2 + 200))(a2, __p);
        ;
        i = v6 + v5 + (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 224))(a2))
  {
    v5 = (*(uint64_t (**)(uint64_t, void **, int *, __int16 *))(*(_QWORD *)a2 + 216))(a2, __p, &v12, &v11)
       + i;
    if (!v12)
      break;
    switch(v11)
    {
      case 1:
        if (v12 != 8)
          goto LABEL_13;
        v10 = 0;
        v6 = (*(uint64_t (**)(uint64_t, int *))(*(_QWORD *)a2 + 312))(a2, &v10);
        *(_DWORD *)(a1 + 8) = v10;
        v7 = *(_BYTE *)(a1 + 32) | 1;
        goto LABEL_12;
      case 2:
        if (v12 != 8)
          goto LABEL_13;
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 312))(a2, a1 + 12);
        v7 = *(_BYTE *)(a1 + 32) | 2;
        goto LABEL_12;
      case 3:
        if (v12 != 8)
          goto LABEL_13;
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 312))(a2, a1 + 16);
        v7 = *(_BYTE *)(a1 + 32) | 4;
        goto LABEL_12;
      case 4:
        if (v12 != 4)
          goto LABEL_13;
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 328))(a2, a1 + 24);
        v7 = *(_BYTE *)(a1 + 32) | 8;
LABEL_12:
        *(_BYTE *)(a1 + 32) = v7;
        break;
      default:
LABEL_13:
        v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 352))(a2);
        break;
    }
  }
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 208))(a2);
  if (SHIBYTE(v14) < 0)
    operator delete(__p[0]);
  return (v8 + v5);
}

void sub_100171724(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100171748(int *a1@<X0>, std::string *a2@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  std::string *v8;
  unint64_t v9;
  std::string *v10;
  char *v11;
  __int128 *v12;
  std::string::size_type *v13;
  unint64_t v14;
  __int128 v15;
  std::string::value_type v16;
  int v17;
  char *v18;
  char v19;
  int v20;
  char v21;
  _BYTE v22[6];
  char v23;
  _BYTE *v24;
  char *v25;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  v24 = v22;
  v25 = &v23;
  v3 = *a1;
  if (*a1 >= 0)
    v4 = *a1;
  else
    v4 = -v3;
  v17 = v4;
  v18 = &v23;
  v19 = 48;
  v20 = 48;
  v5 = sub_10000EDD4((uint64_t)&v17);
  v6 = (char *)v5;
  if ((v3 & 0x80000000) == 0)
  {
    v24 = (_BYTE *)v5;
    v25 = &v23;
    v7 = (unint64_t)(&v23 - v5);
    v8 = a2;
    if ((unint64_t)(&v23 - v5) < 0x17)
      goto LABEL_6;
LABEL_14:
    std::string::__grow_by(a2, 0x16uLL, v7 - 22, 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = a2;
    else
      v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    if (v6 != &v23)
      goto LABEL_7;
LABEL_18:
    v10 = v8;
    goto LABEL_21;
  }
  *(_BYTE *)(v5 - 1) = 45;
  v6 = (char *)(v5 - 1);
  v24 = (_BYTE *)(v5 - 1);
  v25 = &v23;
  v7 = (unint64_t)(&v23 - v5 + 1);
  v8 = a2;
  if (v7 >= 0x17)
    goto LABEL_14;
LABEL_6:
  if (v6 == &v23)
    goto LABEL_18;
LABEL_7:
  v9 = &v21 - v6 + 23;
  if (v9 < 0x20 || (unint64_t)((char *)v8 - v6) < 0x20)
  {
    v10 = v8;
    v11 = v6;
  }
  else
  {
    v10 = (std::string *)((char *)v8 + (v9 & 0xFFFFFFFFFFFFFFE0));
    v11 = &v6[v9 & 0xFFFFFFFFFFFFFFE0];
    v12 = (__int128 *)(v6 + 16);
    v13 = &v8->__r_.__value_.__r.__words[2];
    v14 = v9 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      v15 = *v12;
      *((_OWORD *)v13 - 1) = *(v12 - 1);
      *(_OWORD *)v13 = v15;
      v12 += 2;
      v13 += 4;
      v14 -= 32;
    }
    while (v14);
    if (v9 == (v9 & 0xFFFFFFFFFFFFFFE0))
      goto LABEL_21;
  }
  do
  {
    v16 = *v11++;
    v10->__r_.__value_.__s.__data_[0] = v16;
    v10 = (std::string *)((char *)v10 + 1);
  }
  while (v11 != &v23);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    a2->__r_.__value_.__l.__size_ = v7;
  else
    *((_BYTE *)&a2->__r_.__value_.__s + 23) = v7 & 0x7F;
}

void sub_100171908(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_100171924(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F64B8;
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
  sub_1000733B4(a1 + 8, *(_QWORD *)(a1 + 16));
  operator delete();
}

uint64_t sub_10017197C(uint64_t a1, uint64_t *a2)
{
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t **v11;
  void *v12;
  void **v13;
  _QWORD *v14;
  const void *v15;
  const void *v16;
  int v17;
  size_t v18;
  const void *v19;
  size_t v20;
  int v21;
  _BOOL4 v22;
  int v23;
  _BOOL4 v24;
  _QWORD *v25;
  _BYTE *v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t *v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _BYTE *v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD **v52;
  uint64_t **v53;
  void *__p[2];
  uint64_t v55;
  int v56;
  uint64_t v57;
  __int16 v58;
  int v59;
  void *v60[2];
  uint64_t v61;

  v60[0] = 0;
  v60[1] = 0;
  v61 = 0;
  v59 = 0;
  v58 = 0;
  v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, v60);
  v49 = a1 + 32;
  v50 = a1 + 56;
  v52 = (_QWORD **)(a1 + 8);
  v53 = (uint64_t **)(a1 + 16);
  v51 = a1;
  while (1)
  {
    v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, v60, &v59, &v58) + v4;
    if (!v59)
      break;
    if (v58 == 3)
    {
      v44 = *a2;
      if (v59 == 8)
      {
        v45 = (*(uint64_t (**)(uint64_t *, uint64_t))(v44 + 312))(a2, v50) + v5;
        *(_BYTE *)(a1 + 60) |= 4u;
        goto LABEL_80;
      }
LABEL_78:
      v46 = (*(uint64_t (**)(uint64_t *))(v44 + 352))(a2);
      goto LABEL_79;
    }
    if (v58 == 2)
    {
      v44 = *a2;
      if (v59 == 11)
      {
        v45 = (*(uint64_t (**)(uint64_t *, uint64_t))(v44 + 336))(a2, v49) + v5;
        *(_BYTE *)(a1 + 60) |= 2u;
        goto LABEL_80;
      }
      goto LABEL_78;
    }
    if (v58 != 1 || v59 != 13)
    {
      v46 = (*(uint64_t (**)(uint64_t *))(*a2 + 352))(a2);
LABEL_79:
      v45 = v46 + v5;
      goto LABEL_80;
    }
    sub_1000733B4((uint64_t)v52, *(_QWORD *)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 8) = v53;
    v57 = 0;
    v56 = 0;
    v6 = (*(uint64_t (**)(uint64_t *, uint64_t *, int *, char *))(*a2 + 232))(a2, &v57, &v56, (char *)&v57 + 4)
       + v5;
    if (HIDWORD(v57))
    {
      v7 = 0;
      do
      {
        __p[0] = 0;
        __p[1] = 0;
        v55 = 0;
        v8 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 336))(a2, __p);
        v9 = v53;
        v10 = *v53;
        v11 = v53;
        if (*v53)
        {
          if (v55 >= 0)
            v12 = (void *)HIBYTE(v55);
          else
            v12 = __p[1];
          if (v55 >= 0)
            v13 = __p;
          else
            v13 = (void **)__p[0];
          while (1)
          {
            while (1)
            {
              v9 = (uint64_t **)v10;
              v16 = (const void *)v10[4];
              v14 = v10 + 4;
              v15 = v16;
              v17 = *((char *)v14 + 23);
              if (v17 >= 0)
                v18 = *((unsigned __int8 *)v14 + 23);
              else
                v18 = v14[1];
              if (v17 >= 0)
                v19 = v14;
              else
                v19 = v15;
              if (v18 >= (unint64_t)v12)
                v20 = (size_t)v12;
              else
                v20 = v18;
              v21 = memcmp(v13, v19, v20);
              v22 = (unint64_t)v12 < v18;
              if (v21)
                v22 = v21 < 0;
              if (!v22)
                break;
              v10 = *v9;
              v11 = v9;
              if (!*v9)
                goto LABEL_35;
            }
            v23 = memcmp(v19, v13, v20);
            v24 = v18 < (unint64_t)v12;
            if (v23)
              v24 = v23 < 0;
            if (!v24)
              break;
            v10 = v9[1];
            if (!v10)
            {
              v11 = v9 + 1;
              goto LABEL_35;
            }
          }
          v25 = v9;
        }
        else
        {
LABEL_35:
          v25 = operator new(0x50uLL);
          v26 = v25 + 4;
          if (SHIBYTE(v55) < 0)
          {
            sub_10006CED8(v26, __p[0], (unint64_t)__p[1]);
          }
          else
          {
            *(_OWORD *)v26 = *(_OWORD *)__p;
            v25[6] = v55;
          }
          v25[7] = 0;
          v25[8] = 0;
          v25[9] = 0;
          *v25 = 0;
          v25[1] = 0;
          v25[2] = v9;
          *v11 = v25;
          v27 = (_QWORD *)**v52;
          v28 = v25;
          if (v27)
          {
            *v52 = v27;
            v28 = *v11;
          }
          v29 = *v53;
          v30 = v28 == *v53;
          *((_BYTE *)v28 + 24) = v30;
          if (!v30)
          {
            do
            {
              v31 = v28[2];
              if (*(_BYTE *)(v31 + 24))
                break;
              v32 = *(uint64_t **)(v31 + 16);
              v33 = *v32;
              if (*v32 == v31)
              {
                v36 = v32[1];
                if (!v36 || (v37 = *(unsigned __int8 *)(v36 + 24), v34 = (_BYTE *)(v36 + 24), v37))
                {
                  if (*(uint64_t **)v31 == v28)
                  {
                    *(_BYTE *)(v31 + 24) = 1;
                    *((_BYTE *)v32 + 24) = 0;
                    v40 = *(_QWORD *)(v31 + 8);
                    *v32 = v40;
                    if (v40)
                      goto LABEL_55;
                  }
                  else
                  {
                    v38 = *(uint64_t **)(v31 + 8);
                    v39 = *v38;
                    *(_QWORD *)(v31 + 8) = *v38;
                    if (v39)
                    {
                      *(_QWORD *)(v39 + 16) = v31;
                      v32 = *(uint64_t **)(v31 + 16);
                    }
                    v38[2] = (uint64_t)v32;
                    *(_QWORD *)(*(_QWORD *)(v31 + 16) + 8 * (**(_QWORD **)(v31 + 16) != v31)) = v38;
                    *v38 = v31;
                    *(_QWORD *)(v31 + 16) = v38;
                    v32 = (uint64_t *)v38[2];
                    v31 = *v32;
                    *((_BYTE *)v38 + 24) = 1;
                    *((_BYTE *)v32 + 24) = 0;
                    v40 = *(_QWORD *)(v31 + 8);
                    *v32 = v40;
                    if (v40)
LABEL_55:
                      *(_QWORD *)(v40 + 16) = v32;
                  }
                  *(_QWORD *)(v31 + 16) = v32[2];
                  *(_QWORD *)(v32[2] + 8 * (*(_QWORD *)v32[2] != (_QWORD)v32)) = v31;
                  *(_QWORD *)(v31 + 8) = v32;
LABEL_62:
                  v32[2] = v31;
                  break;
                }
              }
              else if (!v33 || (v35 = *(unsigned __int8 *)(v33 + 24), v34 = (_BYTE *)(v33 + 24), v35))
              {
                if (*(uint64_t **)v31 == v28)
                {
                  v43 = v28[1];
                  *(_QWORD *)v31 = v43;
                  if (v43)
                  {
                    *(_QWORD *)(v43 + 16) = v31;
                    v32 = *(uint64_t **)(v31 + 16);
                  }
                  v28[2] = (uint64_t)v32;
                  *(_QWORD *)(*(_QWORD *)(v31 + 16) + 8 * (**(_QWORD **)(v31 + 16) != v31)) = v28;
                  v28[1] = v31;
                  *(_QWORD *)(v31 + 16) = v28;
                  v32 = (uint64_t *)v28[2];
                  *((_BYTE *)v28 + 24) = 1;
                  *((_BYTE *)v32 + 24) = 0;
                  v31 = v32[1];
                  v41 = *(uint64_t **)v31;
                  v32[1] = *(_QWORD *)v31;
                  if (v41)
LABEL_60:
                    v41[2] = (uint64_t)v32;
                }
                else
                {
                  *(_BYTE *)(v31 + 24) = 1;
                  *((_BYTE *)v32 + 24) = 0;
                  v31 = v32[1];
                  v41 = *(uint64_t **)v31;
                  v32[1] = *(_QWORD *)v31;
                  if (v41)
                    goto LABEL_60;
                }
                *(_QWORD *)(v31 + 16) = v32[2];
                *(_QWORD *)(v32[2] + 8 * (*(_QWORD *)v32[2] != (_QWORD)v32)) = v31;
                *(_QWORD *)v31 = v32;
                goto LABEL_62;
              }
              *(_BYTE *)(v31 + 24) = 1;
              v28 = v32;
              *((_BYTE *)v32 + 24) = v32 == v29;
              *v34 = 1;
            }
            while (v32 != v29);
          }
          ++*(_QWORD *)(v51 + 24);
        }
        v42 = (*(uint64_t (**)(uint64_t *, _QWORD *))(*a2 + 336))(a2, v25 + 7);
        if (SHIBYTE(v55) < 0)
          operator delete(__p[0]);
        v6 += v8 + v42;
        ++v7;
      }
      while (v7 < HIDWORD(v57));
    }
    v45 = (*(uint64_t (**)(uint64_t *))(*a2 + 240))(a2) + v6;
    a1 = v51;
    *(_BYTE *)(v51 + 60) |= 1u;
LABEL_80:
    v4 = (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2) + v45;
  }
  v47 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v61) < 0)
    operator delete(v60[0]);
  return (v47 + v5);
}

void sub_100171F1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if ((a28 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100171F88(uint64_t *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v11;
  uint64_t v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"{", 1);
  v6 = *a1;
  v11 = a1 + 1;
  v12 = v6;
  sub_100173588(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"}", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_100172128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017213C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_10017215C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_100172170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100172184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_1001721A8(uint64_t a1)
{
  void **v2;
  void **v4;
  void *v5;

  *(_QWORD *)a1 = off_1003F64D8;
  if (*(char *)(a1 + 399) < 0)
  {
    operator delete(*(void **)(a1 + 376));
    *(_QWORD *)(a1 + 288) = off_1003F64B8;
    if ((*(char *)(a1 + 343) & 0x80000000) == 0)
    {
LABEL_3:
      sub_1000733B4(a1 + 296, *(_QWORD *)(a1 + 304));
      v2 = *(void ***)(a1 + 216);
      if (!v2)
        goto LABEL_4;
LABEL_15:
      v4 = *(void ***)(a1 + 224);
      if (v4 == v2)
      {
        *(_QWORD *)(a1 + 224) = v2;
        operator delete(v2);
        if (*(char *)(a1 + 215) < 0)
          goto LABEL_22;
      }
      else
      {
        do
        {
          if (*((char *)v4 - 1) < 0)
            operator delete(*(v4 - 3));
          v4 -= 3;
        }
        while (v4 != v2);
        v5 = *(void **)(a1 + 216);
        *(_QWORD *)(a1 + 224) = v2;
        operator delete(v5);
        if (*(char *)(a1 + 215) < 0)
          goto LABEL_22;
      }
LABEL_5:
      if ((*(char *)(a1 + 191) & 0x80000000) == 0)
        goto LABEL_6;
      goto LABEL_23;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 288) = off_1003F64B8;
    if ((*(char *)(a1 + 343) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 320));
  sub_1000733B4(a1 + 296, *(_QWORD *)(a1 + 304));
  v2 = *(void ***)(a1 + 216);
  if (v2)
    goto LABEL_15;
LABEL_4:
  if ((*(char *)(a1 + 215) & 0x80000000) == 0)
    goto LABEL_5;
LABEL_22:
  operator delete(*(void **)(a1 + 192));
  if ((*(char *)(a1 + 191) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(a1 + 159) & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_23:
  operator delete(*(void **)(a1 + 168));
  if ((*(char *)(a1 + 159) & 0x80000000) == 0)
  {
LABEL_7:
    if ((*(char *)(a1 + 135) & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  operator delete(*(void **)(a1 + 136));
  if ((*(char *)(a1 + 135) & 0x80000000) == 0)
  {
LABEL_8:
    if ((*(char *)(a1 + 111) & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  operator delete(*(void **)(a1 + 112));
  if ((*(char *)(a1 + 111) & 0x80000000) == 0)
  {
LABEL_9:
    if ((*(char *)(a1 + 79) & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_27;
  }
LABEL_26:
  operator delete(*(void **)(a1 + 88));
  if ((*(char *)(a1 + 79) & 0x80000000) == 0)
  {
LABEL_10:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_11;
LABEL_28:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_29;
  }
LABEL_27:
  operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_28;
LABEL_11:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_29:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_10017236C(uint64_t a1)
{
  sub_1001721A8(a1);
  operator delete();
}

uint64_t sub_100172390(uint64_t a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char **v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t i;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v30;
  char **v31;
  uint64_t v32;
  __int16 v33;
  int v34;
  void *v35[2];
  uint64_t v36;

  v35[0] = 0;
  v35[1] = 0;
  v36 = 0;
  v34 = 0;
  v33 = 0;
  v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, v35);
  v5 = a1 + 376;
  v6 = (_WORD *)(a1 + 400);
  v7 = a1 + 368;
  v8 = a1 + 360;
  v9 = a1 + 352;
  v10 = (char **)(a1 + 216);
  while (1)
  {
    v11 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, v35, &v34, &v33) + v4;
    if (!v34)
      break;
    switch(v33)
    {
      case 1:
        v12 = *a2;
        if (v34 != 11)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 336))(a2, a1 + 32) + v11;
        *v6 |= 2u;
        break;
      case 2:
        v12 = *a2;
        if (v34 != 11)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 336))(a2, a1 + 56) + v11;
        *v6 |= 4u;
        break;
      case 3:
        if (v34 != 8)
          goto LABEL_62;
        HIDWORD(v32) = 0;
        v13 = (*(uint64_t (**)(uint64_t *, char *))(*a2 + 312))(a2, (char *)&v32 + 4) + v11;
        *(_DWORD *)(a1 + 80) = HIDWORD(v32);
        *v6 |= 8u;
        break;
      case 4:
        v12 = *a2;
        if (v34 != 11)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 336))(a2, a1 + 88) + v11;
        *v6 |= 0x10u;
        break;
      case 5:
        v12 = *a2;
        if (v34 != 11)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 336))(a2, a1 + 136) + v11;
        *v6 |= 0x40u;
        break;
      case 6:
        v12 = *a2;
        if (v34 != 10)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 320))(a2, a1 + 160) + v11;
        *v6 |= 0x80u;
        break;
      case 7:
        v12 = *a2;
        if (v34 != 11)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 336))(a2, a1 + 168) + v11;
        *v6 |= 0x100u;
        break;
      case 8:
        v12 = *a2;
        if (v34 != 11)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 336))(a2, a1 + 192) + v11;
        *v6 |= 0x200u;
        break;
      case 9:
        if (v34 != 15)
          goto LABEL_62;
        v31 = v10;
        v15 = *(_QWORD *)(a1 + 216);
        for (i = *(_QWORD *)(a1 + 224); i != v15; i -= 24)
        {
          if (*(char *)(i - 1) < 0)
            operator delete(*(void **)(i - 24));
        }
        v30 = v9;
        v17 = v8;
        v18 = v7;
        v19 = v5;
        *(_QWORD *)(a1 + 224) = v15;
        v32 = 0;
        v10 = v31;
        v20 = (*(uint64_t (**)(uint64_t *, uint64_t *, char *))(*a2 + 248))(a2, &v32, (char *)&v32 + 4);
        v21 = *(_QWORD *)(a1 + 216);
        v22 = *(_QWORD *)(a1 + 224);
        v23 = 0xAAAAAAAAAAAAAAABLL * ((v22 - v21) >> 3);
        if (HIDWORD(v32) <= v23)
        {
          if (HIDWORD(v32) < v23)
          {
            v24 = v21 + 24 * HIDWORD(v32);
            while (v22 != v24)
            {
              if (*(char *)(v22 - 1) < 0)
                operator delete(*(void **)(v22 - 24));
              v22 -= 24;
            }
            *(_QWORD *)(a1 + 224) = v24;
            v10 = v31;
          }
        }
        else
        {
          sub_100173D8C(v31, HIDWORD(v32) - v23);
        }
        v25 = v20 + v11;
        if (HIDWORD(v32))
        {
          v26 = 0;
          v27 = 0;
          do
          {
            v25 += (*(uint64_t (**)(uint64_t *, char *))(*a2 + 336))(a2, &(*v10)[v26]);
            ++v27;
            v26 += 24;
          }
          while (v27 < HIDWORD(v32));
        }
        v13 = (*(uint64_t (**)(uint64_t *))(*a2 + 256))(a2) + v25;
        *v6 |= 0x400u;
        v5 = v19;
        v7 = v18;
        v8 = v17;
        v9 = v30;
        break;
      case 10:
        v12 = *a2;
        if (v34 != 2)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 280))(a2, a1 + 240) + v11;
        *v6 |= 0x800u;
        break;
      case 11:
        if (v34 != 12)
          goto LABEL_62;
        v13 = sub_100171548(a1 + 248, (uint64_t)a2) + v11;
        *v6 |= 0x1000u;
        break;
      case 12:
        if (v34 != 12)
          goto LABEL_62;
        v13 = sub_10017197C(a1 + 288, a2) + v11;
        *v6 |= 0x2000u;
        break;
      case 13:
        v12 = *a2;
        if (v34 != 11)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 336))(a2, a1 + 8) + v11;
        *v6 |= 1u;
        break;
      case 14:
        v12 = *a2;
        if (v34 != 11)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 336))(a2, a1 + 112) + v11;
        *v6 |= 0x20u;
        break;
      case 15:
        v12 = *a2;
        if (v34 != 10)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 320))(a2, v9) + v11;
        *v6 |= 0x4000u;
        break;
      case 16:
        v12 = *a2;
        if (v34 != 10)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 320))(a2, v8) + v11;
        *v6 |= 0x8000u;
        break;
      case 17:
        v12 = *a2;
        if (v34 != 8)
          goto LABEL_47;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 312))(a2, v7) + v11;
        *(_BYTE *)(a1 + 402) |= 1u;
        break;
      case 18:
        v12 = *a2;
        if (v34 != 11)
        {
LABEL_47:
          v16 = (*(uint64_t (**)(uint64_t *))(v12 + 352))(a2);
          goto LABEL_63;
        }
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 336))(a2, v5) + v11;
        *(_BYTE *)(a1 + 402) |= 2u;
        break;
      default:
LABEL_62:
        v16 = (*(uint64_t (**)(uint64_t *))(*a2 + 352))(a2);
LABEL_63:
        v13 = v16 + v11;
        break;
    }
    v4 = (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2) + v13;
  }
  v28 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v36) < 0)
    operator delete(v35[0]);
  return (v28 + v11);
}

void sub_100172AAC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 - 89) < 0)
    operator delete(*(void **)(v1 - 112));
  _Unwind_Resume(exception_object);
}

uint64_t sub_100172ADC(uint64_t a1, uint64_t a2)
{
  char v4;

  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  std::string::operator=((std::string *)(a1 + 32), (const std::string *)(a2 + 32));
  std::string::operator=((std::string *)(a1 + 56), (const std::string *)(a2 + 56));
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  std::string::operator=((std::string *)(a1 + 88), (const std::string *)(a2 + 88));
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(a2 + 112));
  std::string::operator=((std::string *)(a1 + 136), (const std::string *)(a2 + 136));
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  std::string::operator=((std::string *)(a1 + 168), (const std::string *)(a2 + 168));
  std::string::operator=((std::string *)(a1 + 192), (const std::string *)(a2 + 192));
  if (a1 != a2)
    sub_100173A88(a1 + 216, *(std::string **)(a2 + 216), *(std::string **)(a2 + 224), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 224) - *(_QWORD *)(a2 + 216)) >> 3));
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  if (a1 != a2)
    sub_1000772D4((uint64_t *)(a1 + 296), *(_QWORD **)(a2 + 296), (_QWORD *)(a2 + 304));
  std::string::operator=((std::string *)(a1 + 320), (const std::string *)(a2 + 320));
  *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 348) = *(_BYTE *)(a2 + 348);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
  std::string::operator=((std::string *)(a1 + 376), (const std::string *)(a2 + 376));
  v4 = *(_BYTE *)(a2 + 402);
  *(_WORD *)(a1 + 400) = *(_WORD *)(a2 + 400);
  *(_BYTE *)(a1 + 402) = v4;
  return a1;
}

void sub_100172C20(uint64_t *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  std::string *v8;
  unint64_t v9;
  std::string *v10;
  char *v11;
  __int128 *v12;
  std::string::size_type *v13;
  unint64_t v14;
  __int128 v15;
  std::string::value_type v16;
  _QWORD v17[2];
  char v18;
  int v19;
  char v20;
  _BYTE v21[6];
  _BYTE v22[7];
  _BYTE *v23;
  _BYTE *v24;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  v23 = v21;
  v24 = v22;
  v3 = *a1;
  if (*a1 >= 0)
    v4 = *a1;
  else
    v4 = -v3;
  v17[0] = v4;
  v17[1] = v22;
  v18 = 48;
  v19 = 48;
  v5 = sub_100173F80((uint64_t)v17);
  v6 = (_BYTE *)v5;
  if ((v3 & 0x8000000000000000) == 0)
  {
    v23 = (_BYTE *)v5;
    v24 = v22;
    v7 = (unint64_t)&v22[-v5];
    v8 = a2;
    if ((unint64_t)&v22[-v5] < 0x17)
      goto LABEL_6;
LABEL_14:
    std::string::__grow_by(a2, 0x16uLL, v7 - 22, 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = a2;
    else
      v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    if (v6 != v22)
      goto LABEL_7;
LABEL_18:
    v10 = v8;
    goto LABEL_21;
  }
  *(_BYTE *)(v5 - 1) = 45;
  v6 = (_BYTE *)(v5 - 1);
  v23 = (_BYTE *)(v5 - 1);
  v24 = v22;
  v7 = (unint64_t)&v22[-v5 + 1];
  v8 = a2;
  if (v7 >= 0x17)
    goto LABEL_14;
LABEL_6:
  if (v6 == v22)
    goto LABEL_18;
LABEL_7:
  v9 = &v20 - v6 + 41;
  if (v9 < 0x20 || (unint64_t)((char *)v8 - v6) < 0x20)
  {
    v10 = v8;
    v11 = v6;
  }
  else
  {
    v10 = (std::string *)((char *)v8 + (v9 & 0xFFFFFFFFFFFFFFE0));
    v11 = &v6[v9 & 0xFFFFFFFFFFFFFFE0];
    v12 = (__int128 *)(v6 + 16);
    v13 = &v8->__r_.__value_.__r.__words[2];
    v14 = v9 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      v15 = *v12;
      *((_OWORD *)v13 - 1) = *(v12 - 1);
      *(_OWORD *)v13 = v15;
      v12 += 2;
      v13 += 4;
      v14 -= 32;
    }
    while (v14);
    if (v9 == (v9 & 0xFFFFFFFFFFFFFFE0))
      goto LABEL_21;
  }
  do
  {
    v16 = *v11++;
    v10->__r_.__value_.__s.__data_[0] = v16;
    v10 = (std::string *)((char *)v10 + 1);
  }
  while (v11 != v22);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    a2->__r_.__value_.__l.__size_ = v7;
  else
    *((_BYTE *)&a2->__r_.__value_.__s + 23) = v7 & 0x7F;
}

void sub_100172DDC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100172DF8(uint64_t a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  const std::string *v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  const std::string *v11;
  const std::string *v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"[", 1);
  v6 = *(const std::string **)a1;
  v11 = *(const std::string **)(a1 + 8);
  v12 = v6;
  sub_1001741FC(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"]", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_100172F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100172FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_100172FCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_100172FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100172FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t *sub_100173018(uint64_t *result, uint64_t a2)
{
  int v2;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _DWORD *v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;

  v2 = *(_DWORD *)a2;
  if (*(_DWORD *)a2 != *(_DWORD *)(a2 + 4))
  {
    v4 = result;
    v5 = result + 1;
    do
    {
      v8 = *(unsigned int *)(*(_QWORD *)(a2 + 8) + 4 * v2);
      v9 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v2);
      v14 = v8;
      v15 = v9;
      result = sub_1001730FC(v4, v5, &v17, &v16, (int *)&v14);
      if (!*result)
      {
        v10 = result;
        v11 = operator new(0x30uLL);
        v11[8] = v14;
        *((_QWORD *)v11 + 5) = v15;
        v12 = v17;
        *(_QWORD *)v11 = 0;
        *((_QWORD *)v11 + 1) = 0;
        *((_QWORD *)v11 + 2) = v12;
        *v10 = (uint64_t)v11;
        v13 = *(_QWORD **)*v4;
        if (v13)
        {
          *v4 = (uint64_t)v13;
          v6 = (uint64_t *)*v10;
        }
        else
        {
          v6 = (uint64_t *)v11;
        }
        result = sub_1000E05F4((uint64_t *)v4[1], v6);
        ++v4[2];
      }
      v7 = *(_DWORD *)(a2 + 4);
      v2 = *(_DWORD *)a2 + 1;
      *(_DWORD *)a2 = v2;
    }
    while (v2 != v7);
  }
  return result;
}

uint64_t *sub_1001730FC(_QWORD *a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, int *a5)
{
  uint64_t *v5;
  int v6;
  int v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  uint64_t *v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  int v24;

  v5 = a1 + 1;
  if (a1 + 1 == a2 || (v6 = *a5, v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      v9 = (uint64_t *)*a2;
      do
      {
        v10 = v9;
        v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      v14 = a2;
      do
      {
        v10 = (uint64_t *)v14[2];
        v15 = *v10 == (_QWORD)v14;
        v14 = v10;
      }
      while (v15);
    }
    v16 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5)
      goto LABEL_17;
    v18 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          v19 = (uint64_t *)v18;
          v20 = *(_DWORD *)(v18 + 32);
          if (v16 >= v20)
            break;
          v18 = *v19;
          v5 = v19;
          if (!*v19)
            goto LABEL_25;
        }
        if (v20 >= v16)
          break;
        v5 = v19 + 1;
        v18 = v19[1];
      }
      while (v18);
LABEL_25:
      *a3 = v19;
      return v5;
    }
    else
    {
      *a3 = v5;
      return a1 + 1;
    }
  }
  else if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = a2;
    return (uint64_t *)a4;
  }
  else
  {
    v11 = a2[1];
    if (v11)
    {
      v12 = (uint64_t *)a2[1];
      do
      {
        v13 = v12;
        v12 = (uint64_t *)*v12;
      }
      while (v12);
    }
    else
    {
      v21 = a2;
      do
      {
        v13 = (uint64_t *)v21[2];
        v15 = *v13 == (_QWORD)v21;
        v21 = v13;
      }
      while (!v15);
    }
    if (v13 == v5 || v6 < *((_DWORD *)v13 + 8))
    {
      if (v11)
      {
        *a3 = v13;
        return v13;
      }
      else
      {
        *a3 = a2;
        return a2 + 1;
      }
    }
    else
    {
      v22 = *v5;
      if (*v5)
      {
        do
        {
          while (1)
          {
            v23 = (uint64_t *)v22;
            v24 = *(_DWORD *)(v22 + 32);
            if (v6 >= v24)
              break;
            v22 = *v23;
            v5 = v23;
            if (!*v23)
              goto LABEL_41;
          }
          if (v24 >= v6)
            break;
          v5 = v23 + 1;
          v22 = v23[1];
        }
        while (v22);
LABEL_41:
        *a3 = v23;
        return v5;
      }
      else
      {
        *a3 = v5;
        return a1 + 1;
      }
    }
  }
}

uint64_t *sub_1001732AC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1000733B4(*a1, a1[2]);
  v2 = a1[1];
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = *(_QWORD *)(v3 + 16);
      }
      while (v3);
      a1[1] = v2;
    }
    sub_1000733B4(*a1, v2);
  }
  return a1;
}

uint64_t sub_100173300(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t **v5;
  int v6;
  unint64_t v7;
  const void *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  int v16;
  _BOOL4 v17;
  uint64_t **v18;
  uint64_t v19;
  uint64_t v21[3];

  sub_100173434(a1, a2, (uint64_t)v21);
  v3 = (uint64_t *)v21[0];
  v5 = (uint64_t **)(a1 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if (!v4)
  {
    v18 = (uint64_t **)(a1 + 8);
LABEL_24:
    *v3 = 0;
    v3[1] = 0;
    v3[2] = (uint64_t)v5;
    *v18 = v3;
    v19 = **(_QWORD **)a1;
    if (!v19)
      goto LABEL_26;
LABEL_25:
    *(_QWORD *)a1 = v19;
    v3 = *v18;
    goto LABEL_26;
  }
  v6 = *(char *)(v21[0] + 55);
  if (v6 >= 0)
    v7 = *(unsigned __int8 *)(v21[0] + 55);
  else
    v7 = *(_QWORD *)(v21[0] + 40);
  if (v6 >= 0)
    v8 = (const void *)(v21[0] + 32);
  else
    v8 = *(const void **)(v21[0] + 32);
  do
  {
    while (1)
    {
      v5 = (uint64_t **)v4;
      v11 = v4[4];
      v9 = v4 + 4;
      v10 = (_QWORD *)v11;
      v12 = *((char *)v9 + 23);
      v13 = v12 >= 0 ? *((unsigned __int8 *)v9 + 23) : v9[1];
      v14 = v12 >= 0 ? v9 : v10;
      v15 = v13 >= v7 ? v7 : v13;
      v16 = memcmp(v8, v14, v15);
      v17 = v7 < v13;
      if (v16)
        v17 = v16 < 0;
      if (!v17)
        break;
      v4 = *v5;
      v18 = v5;
      if (!*v5)
        goto LABEL_24;
    }
    v4 = v5[1];
  }
  while (v4);
  v18 = v5 + 1;
  *v3 = 0;
  v3[1] = 0;
  v3[2] = (uint64_t)v5;
  v5[1] = v3;
  v19 = **(_QWORD **)a1;
  if (v19)
    goto LABEL_25;
LABEL_26:
  sub_1000E05F4(*(uint64_t **)(a1 + 8), v3);
  ++*(_QWORD *)(a1 + 16);
  return v21[0];
}

_BYTE *sub_100173434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  _BYTE *result;

  v5 = a1 + 8;
  v6 = operator new(0x50uLL);
  v7 = v6;
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_10006CED8(v6 + 32, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *((_OWORD *)v6 + 2) = *(_OWORD *)a2;
    *((_QWORD *)v6 + 6) = *(_QWORD *)(a2 + 16);
  }
  result = v7 + 56;
  if (*(char *)(a2 + 47) < 0)
  {
    result = sub_10006CED8(result, *(void **)(a2 + 24), *(_QWORD *)(a2 + 32));
  }
  else
  {
    *(_OWORD *)result = *(_OWORD *)(a2 + 24);
    *((_QWORD *)v7 + 9) = *(_QWORD *)(a2 + 40);
  }
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1001734E8(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  void **v3;

  if (*(char *)(v2 + 55) < 0)
  {
    operator delete(*v3);
    sub_100173520(v1);
    _Unwind_Resume(a1);
  }
  sub_100173520(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_100173520(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16))
    {
      if (*(char *)(v2 + 79) < 0)
      {
        operator delete(*(void **)(v2 + 56));
        if ((*(char *)(v2 + 55) & 0x80000000) == 0)
          goto LABEL_5;
      }
      else if ((*(char *)(v2 + 55) & 0x80000000) == 0)
      {
        goto LABEL_5;
      }
      operator delete(*(void **)(v2 + 32));
    }
LABEL_5:
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_100173588(_QWORD *a1, _QWORD *a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  _QWORD *v7;
  void **v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  BOOL v12;
  void *__p[2];
  unsigned __int8 v15;
  void (__cdecl **v16)(std::ostringstream *__hidden);
  _QWORD v17[8];
  void *v18[2];
  __int128 v19;
  int v20;
  void (__cdecl **v21)(std::ostringstream *__hidden);

  v16 = v4;
  *(_QWORD *)((char *)&v17[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v17[-1] + (_QWORD)*(v16 - 3));
  std::ios_base::init(v6, v17);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v17);
  *(_OWORD *)v18 = 0u;
  v19 = 0u;
  v20 = 16;
  v7 = (_QWORD *)*a1;
  if (*a2 != *a1)
  {
    do
    {
      if (v7 != (_QWORD *)*a1)
        sub_1000F0508(&v16, (uint64_t)", ", 2);
      sub_1001737F4((const std::string *)(v7 + 4));
      if ((v15 & 0x80u) == 0)
        v8 = __p;
      else
        v8 = (void **)__p[0];
      if ((v15 & 0x80u) == 0)
        v9 = v15;
      else
        v9 = (uint64_t)__p[1];
      sub_1000F0508(&v16, (uint64_t)v8, v9);
      if ((char)v15 < 0)
      {
        operator delete(__p[0]);
        v10 = (_QWORD *)v7[1];
        if (v10)
        {
          do
          {
LABEL_16:
            v11 = v10;
            v10 = (_QWORD *)*v10;
          }
          while (v10);
          goto LABEL_3;
        }
      }
      else
      {
        v10 = (_QWORD *)v7[1];
        if (v10)
          goto LABEL_16;
      }
      do
      {
        v11 = (_QWORD *)v7[2];
        v12 = *v11 == (_QWORD)v7;
        v7 = v11;
      }
      while (!v12);
LABEL_3:
      v7 = v11;
    }
    while (v11 != (_QWORD *)*a2);
  }
  std::stringbuf::str(v17);
  if (SBYTE7(v19) < 0)
    operator delete(v18[0]);
  std::streambuf::~streambuf(v17);
  return std::ios::~ios(&v21);
}

void sub_100173780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_1000F0484((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_1001737F4(const std::string *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  std::string *v5;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  std::string v12;
  std::string v13;
  void (__cdecl **v14)(std::ostringstream *__hidden);
  _QWORD v15[8];
  void *__p[2];
  __int128 v17;
  int v18;
  void (__cdecl **v19)(std::ostringstream *__hidden);

  v14 = v2;
  *(_QWORD *)((char *)&v15[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v15[-1] + (_QWORD)*(v14 - 3));
  std::ios_base::init(v4, v15);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v15);
  *(_OWORD *)__p = 0u;
  v17 = 0u;
  v18 = 16;
  memset(&v13, 0, sizeof(v13));
  std::string::operator=(&v13, a1);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v5 = &v13;
  else
    v5 = (std::string *)v13.__r_.__value_.__r.__words[0];
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v13.__r_.__value_.__r.__words[2]);
  else
    size = v13.__r_.__value_.__l.__size_;
  v7 = sub_1000F0508(&v14, (uint64_t)v5, size);
  v8 = sub_1000F0508(v7, (uint64_t)": ", 2);
  memset(&v12, 0, sizeof(v12));
  std::string::operator=(&v12, a1 + 1);
  if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &v12;
  else
    v9 = (std::string *)v12.__r_.__value_.__r.__words[0];
  if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
  else
    v10 = v12.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v12.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_15;
  }
  else if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_15;
  }
  operator delete(v13.__r_.__value_.__l.__data_);
LABEL_15:
  std::stringbuf::str(v15);
  if (SBYTE7(v17) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(v15);
  return std::ios::~ios(&v19);
}

void sub_1001739D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001739E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
    {
LABEL_3:
      sub_1000F0484((uint64_t)&a22);
      _Unwind_Resume(a1);
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  sub_1000F0484((uint64_t)&a22);
  _Unwind_Resume(a1);
}

void sub_100173A88(uint64_t a1, std::string *__str, std::string *a3, size_t __sz)
{
  const std::string *v6;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  __int128 v17;
  std::string *v18;
  char *v19;
  std::string *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  const std::string *v28;

  v6 = __str;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(std::string **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *(_QWORD *)a1) >> 3) >= __sz)
  {
    v12 = *(std::string **)(a1 + 8);
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v12 - (char *)v9) >> 3) >= __sz)
    {
      if (__str == a3)
      {
        v20 = *(std::string **)a1;
      }
      else
      {
        v20 = *(std::string **)a1;
        do
        {
          std::string::operator=(v9++, v6++);
          ++v20;
        }
        while (v6 != a3);
        v12 = *(std::string **)(a1 + 8);
      }
      while (v12 != v20)
      {
        if (SHIBYTE(v12[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v12[-1].__r_.__value_.__l.__data_);
        --v12;
      }
      *(_QWORD *)(a1 + 8) = v20;
    }
    else
    {
      v13 = (std::string *)((char *)__str + 8 * (((char *)v12 - (char *)v9) >> 3));
      if (v12 != v9)
      {
        v14 = 8 * (((char *)v12 - (char *)v9) >> 3);
        do
        {
          std::string::operator=(v9++, v6++);
          v14 -= 24;
        }
        while (v14);
        v9 = *(std::string **)(a1 + 8);
      }
      v15 = v9;
      if (v13 != a3)
      {
        v16 = 0;
        do
        {
          v18 = &v9[v16];
          v19 = (char *)&v13[v16];
          if (SHIBYTE(v13[v16].__r_.__value_.__r.__words[2]) < 0)
          {
            sub_10006CED8(v18, *(void **)v19, *((_QWORD *)v19 + 1));
          }
          else
          {
            v17 = *(_OWORD *)v19;
            v18->__r_.__value_.__r.__words[2] = *((_QWORD *)v19 + 2);
            *(_OWORD *)&v18->__r_.__value_.__l.__data_ = v17;
          }
          ++v16;
        }
        while (&v13[v16] != a3);
        v15 = &v9[v16];
      }
      *(_QWORD *)(a1 + 8) = v15;
    }
  }
  else
  {
    if (v9)
    {
      v10 = *(std::string **)(a1 + 8);
      v11 = *(std::string **)a1;
      if (v10 != v9)
      {
        do
        {
          if (SHIBYTE(v10[-1].__r_.__value_.__r.__words[2]) < 0)
            operator delete(v10[-1].__r_.__value_.__l.__data_);
          --v10;
        }
        while (v10 != v9);
        v11 = *(std::string **)a1;
      }
      *(_QWORD *)(a1 + 8) = v9;
      operator delete(v11);
      v8 = 0;
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
    }
    if (__sz > 0xAAAAAAAAAAAAAAALL)
      goto LABEL_48;
    v21 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    v22 = 2 * v21;
    if (2 * v21 <= __sz)
      v22 = __sz;
    v23 = v21 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v22;
    if (v23 > 0xAAAAAAAAAAAAAAALL)
LABEL_48:
      sub_1000D02C0();
    v24 = 24 * v23;
    v25 = (char *)operator new(24 * v23);
    *(_QWORD *)a1 = v25;
    *(_QWORD *)(a1 + 8) = v25;
    *(_QWORD *)(a1 + 16) = &v25[v24];
    if (v6 != a3)
    {
      v26 = 0;
      do
      {
        v27 = &v25[v26 * 24];
        v28 = &v6[v26];
        if (SHIBYTE(v6[v26].__r_.__value_.__r.__words[2]) < 0)
        {
          sub_10006CED8(v27, v28->__r_.__value_.__l.__data_, v28->__r_.__value_.__l.__size_);
        }
        else
        {
          *(_OWORD *)v27 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
          *((_QWORD *)v27 + 2) = *((_QWORD *)&v28->__r_.__value_.__l + 2);
        }
        ++v26;
      }
      while (&v6[v26] != a3);
      v25 += v26 * 24;
    }
    *(_QWORD *)(a1 + 8) = v25;
  }
}

void sub_100173D8C(char **a1, unint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  char *v16;
  __int128 v17;
  char *v18;

  v5 = a1[1];
  v4 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3) >= a2)
  {
    if (a2)
    {
      v12 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(a1[1], v12);
      v5 += v12;
    }
    a1[1] = v5;
  }
  else
  {
    v6 = *a1;
    v7 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 3);
    v8 = v7 + a2;
    if (v7 + a2 > 0xAAAAAAAAAAAAAAALL)
      sub_1000D02C0();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v6) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0xAAAAAAAAAAAAAAALL)
        sub_1000CDEB8();
      v11 = (char *)operator new(24 * v10);
    }
    else
    {
      v11 = 0;
    }
    v13 = &v11[24 * v7];
    v14 = &v11[24 * v10];
    v15 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v13, v15);
    v16 = &v13[v15];
    if (v5 == v6)
    {
      *a1 = v13;
      a1[1] = v16;
      a1[2] = v14;
      if (v5)
LABEL_24:
        operator delete(v5);
    }
    else
    {
      do
      {
        v17 = *(_OWORD *)(v5 - 24);
        *((_QWORD *)v13 - 1) = *((_QWORD *)v5 - 1);
        *(_OWORD *)(v13 - 24) = v17;
        v13 -= 24;
        *((_QWORD *)v5 - 2) = 0;
        *((_QWORD *)v5 - 1) = 0;
        *((_QWORD *)v5 - 3) = 0;
        v5 -= 24;
      }
      while (v5 != v6);
      v18 = *a1;
      v5 = a1[1];
      *a1 = v13;
      a1[1] = v16;
      a1[2] = v14;
      if (v5 != v18)
      {
        do
        {
          if (*(v5 - 1) < 0)
            operator delete(*((void **)v5 - 3));
          v5 -= 24;
        }
        while (v5 != v18);
        v5 = v18;
      }
      if (v5)
        goto LABEL_24;
    }
  }
}

uint64_t sub_100173F80(uint64_t a1)
{
  const std::locale *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  const std::locale::facet *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *p_p;
  uint64_t *v12;
  int v13;
  char v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void **v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *__p;
  unint64_t v25;
  unsigned __int8 v26;
  std::locale v27;

  std::locale::locale(&v27);
  v2 = std::locale::classic();
  if (std::locale::operator==(&v27, v2))
  {
    v3 = *(_QWORD *)a1;
    do
    {
      v4 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)(a1 + 8) = v4 - 1;
      *(_BYTE *)(v4 - 1) = *(_DWORD *)(a1 + 20)
                         + v3
                         - 10 * (((v3 * (unsigned __int128)0xCCCCCCCCCCCCCCCDLL) >> 64) >> 3);
      v5 = *(_QWORD *)a1;
      v3 = *(_QWORD *)a1 / 0xAuLL;
      *(_QWORD *)a1 = v3;
    }
    while (v5 > 9);
    v6 = *(_QWORD *)(a1 + 8);
    goto LABEL_28;
  }
  v7 = std::locale::use_facet(&v27, &std::numpunct<char>::id);
  ((void (*)(void **__return_ptr))v7->__vftable[1].__on_zero_shared)(&__p);
  if ((char)v26 < 0)
  {
    v8 = v25;
    if (!v25 || *(char *)__p <= 0)
      goto LABEL_24;
LABEL_11:
    v9 = ((uint64_t (*)(const std::locale::facet *))v7->__vftable[1].~facet_0)(v7);
    v10 = 0;
    p_p = __p;
    if ((v26 & 0x80u) == 0)
      p_p = &__p;
    v12 = (uint64_t *)(a1 + 8);
    LOBYTE(v13) = *p_p;
    v14 = *p_p;
    do
    {
      if (!v14)
      {
        if (++v10 < v8)
        {
          v19 = (v26 & 0x80u) == 0 ? &__p : (void **)__p;
          v13 = *((char *)v19 + v10);
          if (v13 < 1)
            LOBYTE(v13) = 127;
        }
        v15 = (_BYTE *)(*v12 - 1);
        *v12 = (uint64_t)v15;
        *v15 = v9;
        v14 = v13;
      }
      --v14;
      v17 = *(_QWORD *)a1;
      v16 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)(a1 + 8) = v16 - 1;
      *(_BYTE *)(v16 - 1) = *(_DWORD *)(a1 + 20)
                          + v17
                          - 10 * (((v17 * (unsigned __int128)0xCCCCCCCCCCCCCCCDLL) >> 64) >> 3);
      v18 = *(_QWORD *)a1;
      *(_QWORD *)a1 /= 0xAuLL;
    }
    while (v18 > 9);
    goto LABEL_26;
  }
  v8 = v26;
  if (v26 && (char)__p > 0)
    goto LABEL_11;
LABEL_24:
  v12 = (uint64_t *)(a1 + 8);
  v20 = *(_QWORD *)a1;
  do
  {
    v21 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(a1 + 8) = v21 - 1;
    *(_BYTE *)(v21 - 1) = *(_DWORD *)(a1 + 20)
                        + v20
                        - 10 * (((v20 * (unsigned __int128)0xCCCCCCCCCCCCCCCDLL) >> 64) >> 3);
    v22 = *(_QWORD *)a1;
    v20 = *(_QWORD *)a1 / 0xAuLL;
    *(_QWORD *)a1 = v20;
  }
  while (v22 > 9);
LABEL_26:
  v6 = *v12;
  if ((char)v26 < 0)
    operator delete(__p);
LABEL_28:
  std::locale::~locale(&v27);
  return v6;
}

void sub_1001741BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    std::locale::~locale(&a15);
    _Unwind_Resume(a1);
  }
  std::locale::~locale(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_1001741FC(const std::string **a1, const std::string **a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  const std::string *i;
  std::string *v8;
  std::string::size_type size;
  std::string v11;
  void (__cdecl **v12)(std::ostringstream *__hidden);
  _QWORD v13[8];
  void *__p[2];
  __int128 v15;
  int v16;
  void (__cdecl **v17)(std::ostringstream *__hidden);

  v12 = v4;
  *(_QWORD *)((char *)&v13[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v13[-1] + (_QWORD)*(v12 - 3));
  std::ios_base::init(v6, v13);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v13);
  *(_OWORD *)__p = 0u;
  v15 = 0u;
  v16 = 16;
  for (i = *a1; i != *a2; ++i)
  {
    if (i != *a1)
      sub_1000F0508(&v12, (uint64_t)", ", 2);
    memset(&v11, 0, sizeof(v11));
    std::string::operator=(&v11, i);
    if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &v11;
    else
      v8 = (std::string *)v11.__r_.__value_.__r.__words[0];
    if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v11.__r_.__value_.__r.__words[2]);
    else
      size = v11.__r_.__value_.__l.__size_;
    sub_1000F0508(&v12, (uint64_t)v8, size);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v11.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str(v13);
  if (SBYTE7(v15) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(v13);
  return std::ios::~ios(&v17);
}

void sub_1001743C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100174410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_100174438()
{
  uint64_t v1;
  void *v2;
  char **v3;

  qword_10041ACF0 = 0;
  qword_10041ACE8 = 0;
  qword_10041ACE0 = (uint64_t)&qword_10041ACE8;
  v1 = 0x500000000;
  v2 = &unk_100418420;
  v3 = off_100418438;
  sub_100173018(&qword_10041ACE0, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041ACE0, (void *)&_mh_execute_header);
  qword_10041AD08 = 0;
  qword_10041AD00 = 0;
  qword_10041ACF8 = (uint64_t)&qword_10041AD00;
  v1 = 0x300000000;
  v2 = &unk_100418460;
  v3 = off_100418470;
  sub_100173018(&qword_10041ACF8, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041ACF8, (void *)&_mh_execute_header);
  qword_10041AD20 = 0;
  qword_10041AD18 = 0;
  qword_10041AD10 = (uint64_t)&qword_10041AD18;
  v1 = 0xC00000000;
  v2 = &unk_100418488;
  v3 = off_1004184B8;
  sub_100173018(&qword_10041AD10, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AD10, (void *)&_mh_execute_header);
  qword_10041AD30 = 0;
  qword_10041AD38 = 0;
  qword_10041AD28 = (uint64_t)&qword_10041AD30;
  v1 = 0x500000000;
  v2 = &unk_100418518;
  v3 = off_100418530;
  sub_100173018(&qword_10041AD28, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AD28, (void *)&_mh_execute_header);
}

void sub_1001745FC(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AD28, (_QWORD *)qword_10041AD30);
  _Unwind_Resume(a1);
}

void sub_100174618(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AD10, (_QWORD *)qword_10041AD18);
  _Unwind_Resume(a1);
}

void sub_100174634(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041ACF8, (_QWORD *)qword_10041AD00);
  _Unwind_Resume(a1);
}

void sub_100174650(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041ACE0, (_QWORD *)qword_10041ACE8);
  _Unwind_Resume(a1);
}

uint64_t sub_10017466C()
{
  unsigned __int8 v0;

  v0 = atomic_load(byte_100418558);
  return v0 & 1;
}

uint64_t sub_100174680()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1001746DC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100174738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD v21[10];
  char v22;
  uint64_t v23;

  sub_100174890((uint64_t)v19, 16);
  if (a3)
  {
    v6 = *(char *)(a2 + 23);
    v7 = v6 >= 0 ? a2 : *(_QWORD *)a2;
    v8 = v6 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(_QWORD *)(a2 + 8);
    sub_1000F0508(&v20, v7, v8);
    if (a3 != 1)
    {
      v9 = a2 + 24;
      v10 = 24 * a3 - 24;
      do
      {
        v11 = *(char *)(a1 + 23);
        if (v11 >= 0)
          v12 = a1;
        else
          v12 = *(_QWORD *)a1;
        if (v11 >= 0)
          v13 = *(unsigned __int8 *)(a1 + 23);
        else
          v13 = *(_QWORD *)(a1 + 8);
        sub_1000F0508(&v20, v12, v13);
        v14 = *(char *)(v9 + 23);
        if (v14 >= 0)
          v15 = v9;
        else
          v15 = *(_QWORD *)v9;
        if (v14 >= 0)
          v16 = *(unsigned __int8 *)(v9 + 23);
        else
          v16 = *(_QWORD *)(v9 + 8);
        sub_1000F0508(&v20, v15, v16);
        v9 += 24;
        v10 -= 24;
      }
      while (v10);
    }
  }
  std::stringbuf::str(v21);
  *(_QWORD *)((char *)v19
  v20 = v17;
  if (v22 < 0)
    operator delete((void *)v21[8]);
  std::streambuf::~streambuf(v21);
  return std::ios::~ios(&v23);
}

uint64_t sub_100174890(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::ios_base *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1 + 16;
  v5 = a1 + 24;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + *(_QWORD *)(v6 - 24)) = v7;
  *(_QWORD *)(a1 + 8) = 0;
  v8 = (std::ios_base *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 24));
  std::ios_base::init(v8, (void *)(a1 + 24));
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(v4 + *(_QWORD *)(v9 - 24)) = v10;
  *(_QWORD *)a1 = v11;
  std::streambuf::basic_streambuf(v5);
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = a2;
  return a1;
}

void sub_100174994(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  std::iostream::~basic_iostream(v2, v3 + 8);
  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1001749B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1001749C8(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v3 = a1[1] - *a1;
  if (v3)
  {
    v6 = 0;
    v7 = v3 / 48;
    if (v7 <= 1)
      v8 = 1;
    else
      v8 = v7;
    do
    {
      v9 = *(_QWORD *)(a2 + 24);
      if (!v9)
        sub_10016CA74();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 48))(v9, *a1 + v6);
      v6 += 48;
      --v8;
    }
    while (v8);
  }
}

void sub_10017516C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::runtime_error a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,char a34,uint64_t a35,std::runtime_error a36)
{
  void **v36;
  void *v37;
  int v38;

  if (v38 < 0)
    operator delete(v37);
  __cxa_end_catch();
  if (a32 < 0)
    operator delete(__p);
  sub_1000CD964((uint64_t)&a34);
  sub_10016BE6C(v36);
  _Unwind_Resume(a1);
}

void sub_10017526C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100175274(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x100175280);
  sub_1000CDD68(a1);
}

uint64_t sub_100175290@<X0>(std::runtime_error *a1@<X0>, uint64_t a2@<X8>)
{
  const char *imp;

  *(_QWORD *)(a2 + 56) = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)a2, a1);
  imp = a1[1].__imp_.__imp_;
  *(_QWORD *)(a2 + 16) = &off_1003EDD90;
  *(_QWORD *)(a2 + 24) = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  *(std::runtime_error *)(a2 + 32) = a1[2];
  *(_DWORD *)(a2 + 48) = a1[3].__vftable;
  *(_QWORD *)a2 = off_1003F68D8;
  *(_QWORD *)(a2 + 16) = off_1003F6910;
  *(_QWORD *)(a2 + 56) = &off_1003F6948;
  return sub_1000CE34C(a2 + 16, (uint64_t)&a1[1]);
}

void sub_100175338(_Unwind_Exception *a1)
{
  std::runtime_error *v1;

  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10017534C(_Unwind_Exception *a1)
{
  std::runtime_error *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::runtime_error_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_100175388(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_1001753D8(std::runtime_error *a1)
{
  const char *imp;
  std::runtime_error v3;
  _QWORD v4[2];
  std::runtime_error v5;
  int v6;
  uint64_t (**v7)();

  v7 = (uint64_t (**)())&off_1003EDEA0;
  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_1003F68D8;
  v4[0] = off_1003F6910;
  v7 = &off_1003F6948;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_1001782E8();
}

void sub_1001755A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
  std::runtime_error::~runtime_error(&a11);
  _Unwind_Resume(a1);
}

void sub_1001755BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
  sub_10017566C(&a11);
  _Unwind_Resume(a1);
}

void sub_1001755D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
  sub_10017566C(&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_1001755E4(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  unsigned int *v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;

  v3 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v4 = *(unsigned int **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    v5 = v4 + 2;
    do
    {
      v6 = __ldaxr(v5);
      v7 = v6 - 1;
    }
    while (__stlxr(v7, v5));
    if (!v7)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v4 + 16))(v4);
      v8 = v4 + 3;
      do
      {
        v9 = __ldaxr(v8);
        v10 = v9 - 1;
      }
      while (__stlxr(v10, v8));
      if (!v10)
        (*(void (**)(unsigned int *))(*(_QWORD *)v4 + 24))(v4);
    }
  }
  return a1;
}

void sub_10017566C(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_1001756BC()
{
  sub_1001761A0();
}

uint64_t sub_100175A20(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t result;

  v4 = a1[1];
  if (v4 >= a1[2])
  {
    result = sub_10016C4BC(a1, a2);
    a1[1] = result;
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)v4 = *(_QWORD *)a2;
    if (v5)
      v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
    *(_QWORD *)(v4 + 8) = v5;
    *(_OWORD *)(v4 + 16) = *(_OWORD *)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(v4 + 40) = v6;
    if (v6)
    {
      v7 = (unint64_t *)(v6 + 8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 1, v7));
    }
    result = v4 + 48;
    a1[1] = v4 + 48;
    a1[1] = v4 + 48;
  }
  return result;
}

void sub_100175AC4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100175ACC(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  size_t v17;
  size_t v18;
  __int128 *p_dst;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  size_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  __int128 *v29;
  void **v30;
  void *__p[2];
  unint64_t v32;
  __int128 __dst;
  int64_t v34;
  void *v35[2];
  uint64_t v36;
  _BYTE buf[24];
  void **v38;

  if (a1[2])
  {
    v6 = ~(a2 + (a2 >> 3)) + ((a2 + (a2 >> 3)) << 21);
    v7 = 21 * ((265 * (v6 ^ (v6 >> 24))) ^ ((265 * (v6 ^ (v6 >> 24))) >> 14));
    v8 = (a1[1] - 1) & (2147483649u * (v7 ^ (v7 >> 28)));
    v9 = *(_QWORD **)(a1[5] + 8 * v8);
    if (v9)
    {
      v10 = (_QWORD *)*v9;
      if (*v9)
      {
        if (v10[2] == a2)
        {
LABEL_10:
          v13 = v10[3];
          v14 = v10[4];
          v12 = (uint64_t)(v10 + 3);
          if (v13 != v14)
          {
            v15 = v13;
            while (*(_QWORD *)(v15 + 16) != a3)
            {
              v15 += 48;
              v13 += 48;
              if (v15 == v14)
                goto LABEL_14;
            }
            sub_100175EF4(v12, v13);
            return;
          }
        }
        else
        {
          v11 = v10[1];
LABEL_6:
          if ((v11 & 0x7FFFFFFFFFFFFFFFLL) == v8)
          {
            while (1)
            {
              v10 = (_QWORD *)*v10;
              if (!v10)
                break;
              v11 = v10[1];
              if ((v11 & 0x8000000000000000) == 0)
              {
                if (v10[2] != a2)
                  goto LABEL_6;
                goto LABEL_10;
              }
            }
          }
        }
      }
    }
  }
LABEL_14:
  v16 = (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL);
  v17 = strlen(v16);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_1000CDE30();
  v18 = v17;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    p_dst = (__int128 *)operator new(v20 + 1);
    *((_QWORD *)&__dst + 1) = v18;
    v34 = v21 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_21;
  }
  HIBYTE(v34) = v17;
  p_dst = &__dst;
  if (v17)
LABEL_21:
    memmove(p_dst, v16, v18);
  *((_BYTE *)p_dst + v18) = 0;
  sub_10000EA1C((void **)&__dst, (uint64_t)buf);
  *(_OWORD *)v35 = *(_OWORD *)buf;
  v36 = *(_QWORD *)&buf[16];
  if (SHIBYTE(v34) < 0)
    operator delete((void *)__dst);
  v22 = (const char *)(*(_QWORD *)(a4 + 8) & 0x7FFFFFFFFFFFFFFFLL);
  v23 = strlen(v22);
  if (v23 > 0x7FFFFFFFFFFFFFF7)
    sub_1000CDE30();
  v24 = (void *)v23;
  if (v23 >= 0x17)
  {
    v26 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v23 | 7) != 0x17)
      v26 = v23 | 7;
    v27 = v26 + 1;
    v25 = operator new(v26 + 1);
    __p[1] = v24;
    v32 = v27 | 0x8000000000000000;
    __p[0] = v25;
    goto LABEL_31;
  }
  HIBYTE(v32) = v23;
  v25 = __p;
  if (v23)
LABEL_31:
    memmove(v25, v22, (size_t)v24);
  *((_BYTE *)v24 + (_QWORD)v25) = 0;
  sub_10000EA1C(__p, (uint64_t)buf);
  __dst = *(_OWORD *)buf;
  v34 = *(_QWORD *)&buf[16];
  if (SHIBYTE(v32) < 0)
    operator delete(__p[0]);
  if (qword_100417ED8 == -1)
  {
    v28 = qword_100417EE0;
    if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
    {
LABEL_36:
      v29 = &__dst;
      if (v34 < 0)
        v29 = (__int128 *)__dst;
      v30 = v35;
      if (v36 < 0)
        v30 = (void **)v35[0];
      *(_DWORD *)buf = 136315650;
      *(_QWORD *)&buf[4] = v29;
      *(_WORD *)&buf[12] = 2048;
      *(_QWORD *)&buf[14] = a3;
      *(_WORD *)&buf[22] = 2080;
      v38 = v30;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "WARNING: Attempt to unregister listener %s (%p) not registered (anymore?) for event %s", buf, 0x20u);
    }
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_1003F6550);
    v28 = qword_100417EE0;
    if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_INFO))
      goto LABEL_36;
  }
  if ((SHIBYTE(v34) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v36) & 0x80000000) == 0)
      return;
LABEL_45:
    operator delete(v35[0]);
    return;
  }
  operator delete((void *)__dst);
  if (SHIBYTE(v36) < 0)
    goto LABEL_45;
}

void sub_100175EA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a15 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100175EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;

  v4 = a2 + 48;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = a2;
  if (a2 + 48 != v5)
  {
    while (1)
    {
      v7 = *(_QWORD *)(v4 + 8);
      *(_QWORD *)v6 = *(_QWORD *)v4;
      if (!v7)
        break;
      v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
      v9 = *(_QWORD *)(v6 + 8);
      *(_QWORD *)(v6 + 8) = v8;
      if (v9)
        goto LABEL_6;
LABEL_7:
      *(_OWORD *)(v6 + 16) = *(_OWORD *)(v4 + 16);
      v11 = *(_QWORD *)(v4 + 32);
      v10 = *(_QWORD *)(v4 + 40);
      if (v10)
      {
        v12 = (unint64_t *)(v10 + 8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 1, v12));
      }
      v14 = *(std::__shared_weak_count **)(v6 + 40);
      *(_QWORD *)(v6 + 32) = v11;
      *(_QWORD *)(v6 + 40) = v10;
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      v4 += 48;
      v6 += 48;
      if (v4 == v5)
      {
        v4 = *(_QWORD *)(a1 + 8);
        goto LABEL_19;
      }
    }
    v9 = *(_QWORD *)(v6 + 8);
    *(_QWORD *)(v6 + 8) = 0;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    goto LABEL_7;
  }
LABEL_19:
  while (v4 != v6)
  {
    v17 = *(std::__shared_weak_count **)(v4 - 8);
    if (!v17)
      goto LABEL_24;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (v19)
    {
LABEL_24:
      v20 = *(_QWORD *)(v4 - 40);
      if (!v20)
        goto LABEL_18;
LABEL_25:
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
      goto LABEL_18;
    }
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    v20 = *(_QWORD *)(v4 - 40);
    if (v20)
      goto LABEL_25;
LABEL_18:
    v4 -= 48;
  }
  *(_QWORD *)(a1 + 8) = v6;
  return a2;
}

void sub_100176070(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

double sub_10017609C(uint64_t a1, uint64_t a2)
{
  const void *v3;
  size_t v4;
  void *v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;
  uint64_t v11;
  void *__dst[2];
  unint64_t v13;

  v3 = (const void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  v4 = strlen((const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL));
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    v13 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v13) = v4;
  v6 = __dst;
  if (v4)
LABEL_8:
    memmove(v6, v3, (size_t)v5);
  *((_BYTE *)v5 + (_QWORD)v6) = 0;
  sub_10000EA1C(__dst, (uint64_t)&v10);
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
  result = *(double *)&v10;
  *(_OWORD *)a1 = v10;
  *(_QWORD *)(a1 + 16) = v11;
  return result;
}

void sub_10017617C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100176198(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_1001761A0()
{
  operator new();
}

void sub_10017636C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001763F0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100176384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  *(_QWORD *)(v9 + 40) = v10 + 16;
  v12 = *(_QWORD *)(v9 + 48);
  if (v12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v12 + 32))(v12))
    {
      *(_QWORD *)(v9 + 48) = 0;
      sub_1001763F0((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  sub_1001763F0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001763D0(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_1001763DC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_1001763F0(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_10017646C(_QWORD *a1)
{
  sub_100176B08(a1);
  abort();
}

_QWORD *sub_10017647C(_QWORD *a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  *a1 = off_1003F66B8;
  v2 = (unsigned int *)a1[2];
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100176504(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1)
  {
    v2 = (unsigned int *)(v1 + 8);
    do
      v3 = __ldxr(v2);
    while (__stxr(v3 + 1, v2));
  }
  sub_1001774C8();
}

void sub_100176680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1000CD964((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100176694(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F6580;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001766E0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F6580;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_10017673C(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100176774(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_9exceptionEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_9exceptionEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_9exceptionEEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_9exceptionEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_1001767E0()
{
  return 0;
}

uint64_t sub_1001767E8(uint64_t a1)
{
  return a1 + 24;
}

void sub_1001767F0()
{
  operator new();
}

void sub_1001768A0()
{
  operator delete();
}

void sub_1001768C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001768E0(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x30uLL);
  sub_100176A8C((uint64_t)exception, a1);
}

void sub_10017691C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100176930(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 8) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 16) = 0;
  return a1;
}

void sub_100176980(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 8) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 16) = 0;
  }
  operator delete();
}

uint64_t sub_1001769E0(_QWORD *a1)
{
  uint64_t result;

  *a1 = &off_1003EDD90;
  result = a1[1];
  if (result)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    if ((_DWORD)result)
      a1[1] = 0;
  }
  return result;
}

void sub_100176A2C(_QWORD *a1)
{
  uint64_t v2;

  *a1 = &off_1003EDD90;
  v2 = a1[1];
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      a1[1] = 0;
  }
  operator delete();
}

uint64_t sub_100176A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  *(_QWORD *)(a1 + 8) = &off_1003EDD90;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_QWORD *)a1 = &off_1003F65E0;
  *(_QWORD *)(a1 + 8) = off_1003F6610;
  return a1;
}

uint64_t sub_100176B08(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 8))(*a1);
}

void sub_100176B80()
{
  operator new();
}

void sub_100176D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_100176DE0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100176DB0(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100176DCC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100176DE0(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100176E60()
{
  operator new();
}

void sub_100176EC0(_QWORD *a1)
{
  unsigned int *v1;
  unsigned int *v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;

  *a1 = off_1003F66B8;
  v1 = (unsigned int *)a1[2];
  if (v1)
  {
    v2 = v1 + 2;
    do
    {
      v3 = __ldaxr(v2);
      v4 = v3 - 1;
    }
    while (__stlxr(v4, v2));
    if (!v4)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v1 + 16))(v1);
      v5 = v1 + 3;
      do
      {
        v6 = __ldaxr(v5);
        v7 = v6 - 1;
      }
      while (__stlxr(v7, v5));
      if (!v7)
        (*(void (**)(unsigned int *))(*(_QWORD *)v1 + 24))(v1);
    }
  }
  operator delete();
}

void sub_100176F58(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::const_iterator v4;
  std::string *v5;
  __int128 v6;
  std::string *p_p;
  std::string::size_type size;
  std::string *v9;
  __int128 v10;
  std::string __p;
  std::string v12;
  std::string v13;
  std::string v14;
  std::string v15;

  sub_1000F020C((const char *)((unint64_t)"PN5boost25errinfo_nested_exception_E" & 0x7FFFFFFFFFFFFFFFLL), &v12);
  if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v12;
  else
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v12.__r_.__value_.__r.__words[0];
  std::string::insert(&v12, v4, 91);
  v13 = v12;
  memset(&v12, 0, sizeof(v12));
  v5 = std::string::append(&v13, "] = ");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_100177198((_QWORD *)(a1 + 8), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v9 = std::string::append(&v14, (const std::string::value_type *)p_p, size);
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v15, 10);
  *a2 = v15;
  memset(&v15, 0, sizeof(v15));
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_13;
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v14.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_18:
    operator delete(v12.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v13.__r_.__value_.__l.__data_);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_18;
}

void sub_1001770D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
LABEL_6:
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_100177198(_QWORD *a1@<X0>, std::string *a2@<X8>)
{
  std::string::const_iterator v3;
  std::string *p_p;
  std::string::size_type size;
  BOOL v6;
  std::string *v7;
  std::string::size_type v8;
  std::string::value_type v9;
  std::string v10;
  std::string __p;

  sub_100177340(a1, (char *)&v10);
  if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v3.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v10;
  else
    v3.__i_ = (std::__wrap_iter<const char *>::iterator_type)v10.__r_.__value_.__r.__words[0];
  std::string::insert(&v10, v3, 10);
  __p = v10;
  *((_BYTE *)&v10.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v10, "  ");
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  a2->__r_.__value_.__r.__words[0] = 0;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  if (!size)
    goto LABEL_22;
  v6 = 0;
  do
  {
    if (v6)
    {
      if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v7 = &v10;
      else
        v7 = (std::string *)v10.__r_.__value_.__r.__words[0];
      if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v8 = HIBYTE(v10.__r_.__value_.__r.__words[2]);
      else
        v8 = v10.__r_.__value_.__l.__size_;
      std::string::append(a2, (const std::string::value_type *)v7, v8);
    }
    v9 = p_p->__r_.__value_.__s.__data_[0];
    std::string::push_back(a2, p_p->__r_.__value_.__s.__data_[0]);
    v6 = v9 == 10;
    p_p = (std::string *)((char *)p_p + 1);
    --size;
  }
  while (size);
  if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_25:
    operator delete(__p.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v10.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_25;
}

void sub_1001772D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100177340@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  uint64_t (*v3)(uint64_t);

  if (*result)
    v3 = sub_100176198;
  else
    v3 = 0;
  if (v3)
    sub_10017646C(result);
  a2[23] = 7;
  strcpy(a2, "<empty>");
  return result;
}

void sub_1001773B0()
{
  __break(1u);
}

void sub_1001773E4(void *a1, int a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  void *v6;
  unint64_t v7;
  char *v8;

  v6 = __cxa_begin_catch(a1);
  __cxa_end_catch();
  if (a2 == 3)
    v7 = (unint64_t)v6;
  else
    v7 = 0;
  if (v4 | v7)
  {
    sub_10016B04C(v4, v7, 1, v3, (char *)v2);
  }
  else
  {
    v8 = (char *)operator new(0x28uLL);
    *(_QWORD *)v2 = v8;
    *(_OWORD *)(v2 + 8) = xmmword_10038A6C0;
    strcpy(v8, "No diagnostic information available.");
  }
  __cxa_end_catch();
}

void sub_10017746C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100177484()
{
  operator delete();
}

uint64_t sub_100177498(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_1001774B0()
{
  return 0;
}

uint64_t sub_1001774B8()
{
  return 0;
}

uint64_t sub_1001774C0()
{
  return 0;
}

void sub_1001774C8()
{
  operator new();
}

void sub_1001775EC(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_1001775F8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_10017760C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F6758;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100177658(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F6758;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_1001776B4(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_1001776EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_13exception_ptrEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_13exception_ptrEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_13exception_ptrEEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_13exception_ptrEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_100177758()
{
  return 0;
}

uint64_t sub_100177760(uint64_t a1)
{
  return a1 + 24;
}

void sub_100177768()
{
  operator new();
}

void sub_100177834()
{
  uint64_t v0;
  unsigned int *v1;
  unsigned int *v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;

  v1 = *(unsigned int **)(v0 + 16);
  if (v1)
  {
    v2 = v1 + 2;
    do
    {
      v3 = __ldaxr(v2);
      v4 = v3 - 1;
    }
    while (__stlxr(v4, v2));
    if (!v4)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v1 + 16))(v1);
      v5 = v1 + 3;
      do
      {
        v6 = __ldaxr(v5);
        v7 = v6 - 1;
      }
      while (__stlxr(v7, v5));
      if (!v7)
        (*(void (**)(unsigned int *))(*(_QWORD *)v1 + 24))(v1);
    }
  }
  operator delete();
}

void sub_1001778B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001778D0(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100177BEC((uint64_t)exception, a1);
}

void sub_10017790C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_100177920(_QWORD *a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;

  a1[3] = &off_1003EDD90;
  v2 = a1[4];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    a1[4] = 0;
  v3 = (unsigned int *)a1[2];
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldaxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 16))(v3);
      v7 = v3 + 3;
      do
      {
        v8 = __ldaxr(v7);
        v9 = v8 - 1;
      }
      while (__stlxr(v9, v7));
      if (!v9)
        (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 24))(v3);
    }
  }
  return a1;
}

void sub_1001779CC(_QWORD *a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;

  a1[3] = &off_1003EDD90;
  v2 = a1[4];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    a1[4] = 0;
  v3 = (unsigned int *)a1[2];
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldaxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 16))(v3);
      v7 = v3 + 3;
      do
      {
        v8 = __ldaxr(v7);
        v9 = v8 - 1;
      }
      while (__stlxr(v9, v7));
      if (!v9)
        (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 24))(v3);
    }
  }
  operator delete();
}

uint64_t sub_100177A88(_QWORD *a1)
{
  uint64_t result;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;

  *a1 = &off_1003EDD90;
  result = a1[1];
  if (result)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    if ((_DWORD)result)
      a1[1] = 0;
  }
  v3 = (unsigned int *)*(a1 - 1);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldaxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
    {
      result = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v3 + 16))(v3);
      v7 = v3 + 3;
      do
      {
        v8 = __ldaxr(v7);
        v9 = v8 - 1;
      }
      while (__stlxr(v9, v7));
      if (!v9)
        return (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v3 + 24))(v3);
    }
  }
  return result;
}

void sub_100177B30(_QWORD *a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;

  *a1 = &off_1003EDD90;
  v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    a1[1] = 0;
  v3 = (unsigned int *)*(a1 - 1);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldaxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 16))(v3);
      v7 = v3 + 3;
      do
      {
        v8 = __ldaxr(v7);
        v9 = v8 - 1;
      }
      while (__stlxr(v9, v7));
      if (!v9)
        (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 24))(v3);
    }
  }
  operator delete();
}

uint64_t sub_100177BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  __int128 v9;

  v5 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a1 = &off_1003EDEA0;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  if (v4)
  {
    v6 = (unsigned int *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v8;
  if (v8)
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8);
  v9 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v9;
  *(_QWORD *)a1 = &off_1003F67B8;
  *(_QWORD *)(a1 + 24) = off_1003F67E8;
  return a1;
}

void sub_100177C88(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int *v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = v1;
  v4 = *(unsigned int **)(v2 + 16);
  if (v4)
  {
    v5 = v4 + 2;
    do
    {
      v6 = __ldaxr(v5);
      v7 = v6 - 1;
    }
    while (__stlxr(v7, v5));
    if (!v7)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v4 + 16))(v4);
      v8 = v4 + 3;
      do
      {
        v9 = __ldaxr(v8);
        v10 = v9 - 1;
      }
      while (__stlxr(v10, v8));
      if (!v10)
        (*(void (**)(unsigned int *))(*(_QWORD *)v4 + 24))(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_100177CF4(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);
  operator delete();
}

void sub_100177D58(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_100177DA8(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);
  operator delete();
}

void sub_100177E0C(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_100177E5C(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);
  operator delete();
}

void sub_100177EC0()
{
  operator new();
}

void sub_100177F8C()
{
  std::runtime_error *v0;

  std::runtime_error::~runtime_error(v0);
  operator delete();
}

void sub_100177FC8(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1001781F8((uint64_t)exception, a1);
}

void sub_100178004(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100178018(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_100178068(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);
  operator delete();
}

void sub_1001780CC()
{
  sub_100177EC0();
}

void sub_1001780DC(_QWORD *a1)
{
  uint64_t v1;
  void *exception;

  v1 = (uint64_t)a1 + *(_QWORD *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1001781F8((uint64_t)exception, v1);
}

void sub_100178120(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100178134(_QWORD *a1)
{
  std::runtime_error *v1;
  const char *imp;

  v1 = (std::runtime_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    v1[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(v1);
}

void sub_10017818C(_QWORD *a1)
{
  std::runtime_error *v1;
  const char *imp;

  v1 = (std::runtime_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);
  operator delete();
}

uint64_t sub_1001781F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(a1 + 56) = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = off_1003F68D8;
  *(_QWORD *)(a1 + 16) = off_1003F6910;
  *(_QWORD *)(a1 + 56) = &off_1003F6948;
  return a1;
}

void sub_100178284(_Unwind_Exception *a1)
{
  std::runtime_error *v1;

  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_100178298(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_1001782E8()
{
  operator new();
}

void sub_1001784CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::runtime_error *v9;

  std::runtime_error::~runtime_error(v9);
  sub_100178534((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001784EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::runtime_error *v9;

  sub_100178298(v9);
  sub_100178534((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100178514(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100178520(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100178534(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

uint64_t sub_1001785B0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F69B0;
  if (*(_BYTE *)(a1 + 24))
  {
    (**(void (***)(uint64_t))(a1 + 32))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001785FC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F69B0;
  if (*(_BYTE *)(a1 + 24))
  {
    (**(void (***)(uint64_t))(a1 + 32))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_100178658(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (**(uint64_t (***)(uint64_t))(result + 32))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100178690(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail10clone_implINS3_19error_info_in"
                     "jectorISt13runtime_errorEEEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail10clone_implINS3_19er"
                                "ror_info_injectorISt13runtime_errorEEEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail10clone_implINS3_19error_info_injectorISt13runtime_errorEEEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail10clone_implINS3_19error_info_injectorISt13runtime_errorEEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_1001786FC()
{
  return 0;
}

uint64_t sub_100178704(uint64_t a1)
{
  return a1 + 24;
}

void sub_10017870C(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_10017875C(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);
  operator delete();
}

void sub_1001787C0()
{
  operator new();
}

void sub_10017888C()
{
  std::runtime_error *v0;

  std::runtime_error::~runtime_error(v0);
  operator delete();
}

void sub_1001788B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_1001788D0(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100178B00((uint64_t)exception, a1);
}

void sub_10017890C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100178920(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_100178970(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);
  operator delete();
}

void sub_1001789D4()
{
  sub_1001787C0();
}

void sub_1001789E4(_QWORD *a1)
{
  uint64_t v1;
  void *exception;

  v1 = (uint64_t)a1 + *(_QWORD *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100178B00((uint64_t)exception, v1);
}

void sub_100178A28(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100178A3C(_QWORD *a1)
{
  std::runtime_error *v1;
  const char *imp;

  v1 = (std::runtime_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    v1[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(v1);
}

void sub_100178A94(_QWORD *a1)
{
  std::runtime_error *v1;
  const char *imp;

  v1 = (std::runtime_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);
  operator delete();
}

uint64_t sub_100178B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(a1 + 56) = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = off_1003F6A18;
  *(_QWORD *)(a1 + 16) = off_1003F6A50;
  *(_QWORD *)(a1 + 56) = &off_1003F6A88;
  return a1;
}

void sub_100178B8C(_Unwind_Exception *a1)
{
  std::runtime_error *v1;

  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100178BA0()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_100178BFC()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void (__cdecl ***sub_100178C58(void (__cdecl ***a1)(std::ofstream *__hidden this)))(std::ofstream *__hidden this)
{
  _QWORD *v2;

  v2 = a1 + 52;
  std::filebuf::~filebuf(a1 + 1);
  std::ios::~ios(v2);
  return a1;
}

void (__cdecl ***sub_100178CB8(void (__cdecl ***a1)(std::ifstream *__hidden this)))(std::ifstream *__hidden this)
{
  _QWORD *v2;

  v2 = a1 + 53;
  std::filebuf::~filebuf(a1 + 2);
  std::ios::~ios(v2);
  return a1;
}

std::system_error *sub_100178D18(std::system_error *a1)
{
  const std::error_category *v2;

  v2 = std::system_category();
  std::system_error::system_error(a1, 1, v2);
  a1->__vftable = (std::system_error_vtbl *)&off_1003F6BC8;
  return a1;
}

_DWORD *sub_100178D5C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100068C0C(a2, a1, 0, 0, 0);
}

_DWORD *sub_100178D74(_DWORD *result)
{
  *result = -1;
  return result;
}

void sub_100178D80(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  const void *v10;
  size_t v11;
  void *v12;
  std::runtime_error v13;
  std::runtime_error v14;
  uint64_t (**v15)();
  uint64_t v16;
  __int128 v17;
  int v18;
  std::runtime_error v19;
  std::runtime_error v20;
  _QWORD v21[2];
  __int128 v22;
  int v23;
  uint64_t (**v24)();

  std::runtime_error::runtime_error(&v13, a1);
  v14 = a1[1];
  v17 = 0uLL;
  v18 = -1;
  v13.__vftable = (std::runtime_error_vtbl *)off_1003F6E40;
  v15 = off_1003F6E68;
  v16 = 0;
  v24 = (uint64_t (**)())&off_1003EDEA0;
  std::runtime_error::runtime_error(&v19, &v13);
  v20 = v14;
  v19.__vftable = (std::runtime_error_vtbl *)&off_1003F6BC8;
  v21[0] = &off_1003EDD90;
  v21[1] = v16;
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 24))(v16);
  v22 = v17;
  v23 = v18;
  v19.__vftable = (std::runtime_error_vtbl *)off_1003F6DA0;
  v21[0] = off_1003F6DD8;
  v24 = &off_1003F6E10;
  sub_1000CE34C((uint64_t)v21, (uint64_t)&v15);
  *(_QWORD *)&v22 = a2;
  *((_QWORD *)&v22 + 1) = a3;
  v23 = a4;
  v10 = *(const void **)a5;
  v11 = *(_QWORD *)(a5 + 8) - *(_QWORD *)a5;
  if (v11)
  {
    if ((v11 & 0x8000000000000000) != 0)
      sub_1000D02C0();
    v12 = operator new(v11);
    memcpy(v12, v10, v11);
  }
  sub_100179D68();
}

void sub_100178FE4(void *a1)
{
  std::system_error *v1;

  std::system_error::~system_error(v1);
  sub_1000CDD68(a1);
}

void sub_100178FF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::system_error *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  std::system_error::~system_error((std::system_error *)&a22);
  sub_1000CDD68(a1);
}

void sub_100179010(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::system_error *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;

  a26 = v27 + 16;
  if (a27)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a27 + 32))(a27))
    {
      a27 = 0;
      std::system_error::~system_error((std::system_error *)&a22);
      sub_1000CDD68(a1);
    }
  }
  std::system_error::~system_error((std::system_error *)&a22);
  sub_1000CDD68(a1);
}

void sub_10017905C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (!__p)
    sub_1000CDD68(a1);
  operator delete(__p);
  sub_1000CDD68(a1);
}

uint64_t sub_100179080(uint64_t a1, uint64_t a2)
{
  std::runtime_error *v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)(a1 + 72) = &off_1003EDEA0;
  v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  v4->__vftable = (std::runtime_error_vtbl *)&off_1003F6BC8;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = &off_1003EDD90;
  *(_QWORD *)(a1 + 40) = v5;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  v6 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)a1 = off_1003F6DA0;
  *(_QWORD *)(a1 + 32) = off_1003F6DD8;
  *(_QWORD *)(a1 + 72) = &off_1003F6E10;
  return a1;
}

void sub_10017912C(_Unwind_Exception *a1)
{
  std::system_error *v1;

  std::system_error::~system_error(v1);
  _Unwind_Resume(a1);
}

void sub_100179140(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::system_error::~system_error(this);
}

void sub_100179194(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  const void *v10;
  size_t v11;
  void *v12;
  std::runtime_error v13;
  std::runtime_error v14;
  uint64_t (**v15)();
  uint64_t v16;
  __int128 v17;
  int v18;
  std::runtime_error v19;
  std::runtime_error v20;
  _QWORD v21[2];
  __int128 v22;
  int v23;
  uint64_t (**v24)();

  std::runtime_error::runtime_error(&v13, a1);
  v14 = a1[1];
  v17 = 0uLL;
  v18 = -1;
  v13.__vftable = (std::runtime_error_vtbl *)off_1003F6F30;
  v15 = off_1003F6F58;
  v16 = 0;
  v24 = (uint64_t (**)())&off_1003EDEA0;
  std::runtime_error::runtime_error(&v19, &v13);
  v20 = v14;
  v21[0] = &off_1003EDD90;
  v21[1] = v16;
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 24))(v16);
  v22 = v17;
  v23 = v18;
  v19.__vftable = (std::runtime_error_vtbl *)off_1003F6E90;
  v21[0] = off_1003F6EC8;
  v24 = &off_1003F6F00;
  sub_1000CE34C((uint64_t)v21, (uint64_t)&v15);
  *(_QWORD *)&v22 = a2;
  *((_QWORD *)&v22 + 1) = a3;
  v23 = a4;
  v10 = *(const void **)a5;
  v11 = *(_QWORD *)(a5 + 8) - *(_QWORD *)a5;
  if (v11)
  {
    if ((v11 & 0x8000000000000000) != 0)
      sub_1000D02C0();
    v12 = operator new(v11);
    memcpy(v12, v10, v11);
  }
  sub_10017A538();
}

void sub_10017940C(void *a1)
{
  std::system_error *v1;

  std::system_error::~system_error(v1);
  sub_1000CDD68(a1);
}

void sub_100179420(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::system_error *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  std::system_error::~system_error((std::system_error *)&a22);
  sub_1000CDD68(a1);
}

void sub_100179438(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::system_error *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;

  a26 = v27 + 16;
  if (a27)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a27 + 32))(a27))
    {
      a27 = 0;
      std::system_error::~system_error((std::system_error *)&a22);
      sub_1000CDD68(a1);
    }
  }
  std::system_error::~system_error((std::system_error *)&a22);
  sub_1000CDD68(a1);
}

void sub_100179484(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (!__p)
    sub_1000CDD68(a1);
  operator delete(__p);
  sub_1000CDD68(a1);
}

uint64_t sub_1001794A8(uint64_t a1, uint64_t a2)
{
  std::runtime_error *v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)(a1 + 72) = &off_1003EDEA0;
  v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = &off_1003EDD90;
  *(_QWORD *)(a1 + 40) = v5;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  v6 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)a1 = off_1003F6E90;
  *(_QWORD *)(a1 + 32) = off_1003F6EC8;
  *(_QWORD *)(a1 + 72) = &off_1003F6F00;
  return a1;
}

void sub_10017954C(_Unwind_Exception *a1)
{
  std::system_error *v1;

  std::system_error::~system_error(v1);
  _Unwind_Resume(a1);
}

void sub_100179560(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::system_error::~system_error(this);
}

int *sub_1001795B0(int *a1, int *a2)
{
  int v3;
  int v4;
  int v6;

  v3 = *a2;
  *a2 = -1;
  v4 = *a1;
  *a1 = v3;
  v6 = v4;
  if (v4 != -1)
    sub_1000688C0(&v6);
  return a1;
}

void sub_100179604(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, _QWORD *a4@<X8>)
{
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  std::ios_base *v11;
  uint64_t v12;

  v8 = operator new(0x258uLL);
  v9 = v8;
  v8[1] = 0;
  v8[2] = 0;
  *v8 = off_1003F7068;
  v10 = v8 + 3;
  v11 = (std::ios_base *)(v8 + 56);
  if (*(char *)(a1 + 23) >= 0)
    v12 = a1;
  else
    v12 = *(_QWORD *)a1;
  sub_10017BA98(v8 + 3, (uint64_t *)&off_1003F7100, v12, a2);
  v9[3] = off_1003F70C0;
  v9[56] = off_1003F70E8;
  *((_DWORD *)v9 + 121) = a3;
  std::ios_base::clear(v11, *((_DWORD *)v9 + 120));
  *a4 = v10;
  a4[1] = v9;
}

void sub_1001796D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  __cxa_begin_catch(a1);
  sub_10017BE24((uint64_t *)va);
}

void sub_1001796E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_10017646C((uint64_t *)va);
}

void sub_1001796E8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  __break(1u);
  JUMPOUT(0x1001797E8);
}

void sub_100179810(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  __cxa_end_catch();
  JUMPOUT(0x10017989CLL);
}

void sub_1001798B4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  void *v4;

  std::ios::~ios(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_1001798D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  const void *v9;
  size_t v10;
  void *v11;
  std::runtime_error v12[3];
  uint64_t (**v13)();
  uint64_t v14;
  __int128 v15;
  int v16;
  std::runtime_error v17;
  _QWORD v18[2];
  __int128 v19;
  int v20;
  uint64_t (**v21)();

  boost::filesystem::filesystem_error::filesystem_error(v12, a1);
  v14 = 0;
  v15 = 0uLL;
  v16 = -1;
  v12[0].__vftable = (std::runtime_error_vtbl *)off_1003F7020;
  v13 = off_1003F7048;
  v21 = (uint64_t (**)())&off_1003EDEA0;
  boost::filesystem::filesystem_error::filesystem_error(&v17, (uint64_t)v12);
  v18[0] = &off_1003EDD90;
  v18[1] = v14;
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14);
  v19 = v15;
  v20 = v16;
  v17.__vftable = (std::runtime_error_vtbl *)off_1003F6F80;
  v18[0] = off_1003F6FB8;
  v21 = &off_1003F6FF0;
  sub_1000CE34C((uint64_t)v18, (uint64_t)&v13);
  *(_QWORD *)&v19 = a2;
  *((_QWORD *)&v19 + 1) = a3;
  v20 = a4;
  v9 = *(const void **)a5;
  v10 = *(_QWORD *)(a5 + 8) - *(_QWORD *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_1000D02C0();
    v11 = operator new(v10);
    memcpy(v11, v9, v10);
  }
  sub_10017ADB0();
}

void sub_100179B1C(void *a1)
{
  boost::filesystem::filesystem_error *v1;

  boost::filesystem::filesystem_error::~filesystem_error(v1);
  sub_1000CDD68(a1);
}

void sub_100179B30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)va);
  sub_1000CDD68(a1);
}

void sub_100179B44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;

  a31 = v32 + 16;
  if (a32)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a32 + 32))(a32))
    {
      a32 = 0;
      boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)&a25);
      sub_1000CDD68(a1);
    }
  }
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)&a25);
  sub_1000CDD68(a1);
}

void sub_100179B90(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000CDD68(a1);
  }
  sub_1000CDD68(a1);
}

void sub_100179BB8(boost::filesystem::filesystem_error *this)
{
  uint64_t v2;

  *((_QWORD *)this + 6) = &off_1003EDD90;
  v2 = *((_QWORD *)this + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *((_QWORD *)this + 7) = 0;
  boost::filesystem::filesystem_error::~filesystem_error(this);
}

void sub_100179C08(std::system_error *a1)
{
  std::system_error::~system_error(a1);
  operator delete();
}

void sub_100179C2C(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_100179C58(_QWORD *a1)
{
  void (__cdecl ***v1)(std::ofstream *__hidden);

  v1 = (void (__cdecl ***)(std::ofstream *__hidden))((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::filebuf::~filebuf(v1 + 1);
  return std::ios::~ios(v1 + 52);
}

uint64_t sub_100179CB8(_QWORD *a1)
{
  void (__cdecl ***v1)(std::ifstream *__hidden);

  v1 = (void (__cdecl ***)(std::ifstream *__hidden))((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::filebuf::~filebuf(v1 + 2);
  return std::ios::~ios(v1 + 53);
}

void sub_100179D18(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::system_error::~system_error(this);
}

void sub_100179D68()
{
  operator new();
}

void sub_100179F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1000EFE2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100179FA4(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100179FC0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100179FD4(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::system_error::~system_error(this);
}

void sub_10017A024(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(this);
  operator delete();
}

void sub_10017A088()
{
  operator new();
}

void sub_10017A164()
{
  std::system_error *v0;

  std::system_error::~system_error(v0);
  operator delete();
}

void sub_10017A1A0(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x50uLL);
  sub_100179080((uint64_t)exception, a1);
}

void sub_10017A1DC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10017A1F0(std::system_error *a1)
{
  const char *imp;

  a1->__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::system_error::~system_error(a1 - 1);
}

void sub_10017A240(std::system_error *a1)
{
  const char *imp;

  a1->__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(a1 - 1);
  operator delete();
}

void sub_10017A2A4()
{
  sub_10017A088();
}

void sub_10017A2B4(_QWORD *a1)
{
  uint64_t v1;
  void *exception;

  v1 = (uint64_t)a1 + *(_QWORD *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x50uLL);
  sub_100179080((uint64_t)exception, v1);
}

void sub_10017A2F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10017A30C(_QWORD *a1)
{
  std::system_error *v1;
  const char *imp;

  v1 = (std::system_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    v1[1].__imp_.__imp_ = 0;
  std::system_error::~system_error(v1);
}

void sub_10017A364(_QWORD *a1)
{
  std::system_error *v1;
  const char *imp;

  v1 = (std::system_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(v1);
  operator delete();
}

void sub_10017A3D0(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(this);
  operator delete();
}

void sub_10017A434(std::system_error *a1)
{
  const char *imp;

  a1->__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::system_error::~system_error(a1 - 1);
}

void sub_10017A484(std::system_error *a1)
{
  const char *imp;

  a1->__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(a1 - 1);
  operator delete();
}

void sub_10017A4E8(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::system_error::~system_error(this);
}

void sub_10017A538()
{
  operator new();
}

void sub_10017A750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1000EFE2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017A774(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10017A790(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_10017A7A4(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::system_error::~system_error(this);
}

void sub_10017A7F4(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(this);
  operator delete();
}

void sub_10017A858()
{
  operator new();
}

void sub_10017A93C()
{
  std::system_error *v0;

  std::system_error::~system_error(v0);
  operator delete();
}

void sub_10017A978(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x50uLL);
  sub_1001794A8((uint64_t)exception, a1);
}

void sub_10017A9B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10017A9C8(std::system_error *a1)
{
  const char *imp;

  a1->__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::system_error::~system_error(a1 - 1);
}

void sub_10017AA18(std::system_error *a1)
{
  const char *imp;

  a1->__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(a1 - 1);
  operator delete();
}

void sub_10017AA7C()
{
  sub_10017A858();
}

void sub_10017AA8C(_QWORD *a1)
{
  uint64_t v1;
  void *exception;

  v1 = (uint64_t)a1 + *(_QWORD *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x50uLL);
  sub_1001794A8((uint64_t)exception, v1);
}

void sub_10017AAD0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10017AAE4(_QWORD *a1)
{
  std::system_error *v1;
  const char *imp;

  v1 = (std::system_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    v1[1].__imp_.__imp_ = 0;
  std::system_error::~system_error(v1);
}

void sub_10017AB3C(_QWORD *a1)
{
  std::system_error *v1;
  const char *imp;

  v1 = (std::system_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(v1);
  operator delete();
}

void sub_10017ABA8(std::system_error *this)
{
  const char *imp;

  this[1].__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(this);
  operator delete();
}

void sub_10017AC0C(std::system_error *a1)
{
  const char *imp;

  a1->__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::system_error::~system_error(a1 - 1);
}

void sub_10017AC5C(std::system_error *a1)
{
  const char *imp;

  a1->__vftable = (std::system_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(a1 - 1);
  operator delete();
}

uint64_t sub_10017ACC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(a1 + 88) = &off_1003EDEA0;
  boost::filesystem::filesystem_error::filesystem_error((std::runtime_error *)a1, a2);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = &off_1003EDD90;
  *(_QWORD *)(a1 + 56) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)a1 = off_1003F6F80;
  *(_QWORD *)(a1 + 48) = off_1003F6FB8;
  *(_QWORD *)(a1 + 88) = &off_1003F6FF0;
  return a1;
}

void sub_10017AD4C(_Unwind_Exception *a1)
{
  boost::filesystem::filesystem_error *v1;

  boost::filesystem::filesystem_error::~filesystem_error(v1);
  _Unwind_Resume(a1);
}

void sub_10017AD60(boost::filesystem::filesystem_error *this)
{
  uint64_t v2;

  *((_QWORD *)this + 6) = &off_1003EDD90;
  v2 = *((_QWORD *)this + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *((_QWORD *)this + 7) = 0;
  boost::filesystem::filesystem_error::~filesystem_error(this);
}

void sub_10017ADB0()
{
  operator new();
}

void sub_10017AFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1000EFE2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017AFEC(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10017B008(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_10017B01C(boost::filesystem::filesystem_error *this)
{
  uint64_t v2;

  *((_QWORD *)this + 6) = &off_1003EDD90;
  v2 = *((_QWORD *)this + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *((_QWORD *)this + 7) = 0;
  boost::filesystem::filesystem_error::~filesystem_error(this);
}

void sub_10017B06C(boost::filesystem::filesystem_error *this)
{
  uint64_t v2;

  *((_QWORD *)this + 6) = &off_1003EDD90;
  v2 = *((_QWORD *)this + 7);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *((_QWORD *)this + 7) = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error(this);
  operator delete();
}

void sub_10017B0D0()
{
  operator new();
}

void sub_10017B198()
{
  boost::filesystem::filesystem_error *v0;

  boost::filesystem::filesystem_error::~filesystem_error(v0);
  operator delete();
}

void sub_10017B1DC(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x60uLL);
  sub_10017ACC0((uint64_t)exception, a1);
}

void sub_10017B218(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10017B22C(_QWORD *a1)
{
  uint64_t v2;

  *a1 = &off_1003EDD90;
  v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    a1[1] = 0;
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(a1 - 6));
}

void sub_10017B27C(_QWORD *a1)
{
  uint64_t v2;

  *a1 = &off_1003EDD90;
  v2 = a1[1];
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      a1[1] = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(a1 - 6));
  operator delete();
}

void sub_10017B2E0()
{
  sub_10017B0D0();
}

void sub_10017B2F0(_QWORD *a1)
{
  uint64_t v1;
  void *exception;

  v1 = (uint64_t)a1 + *(_QWORD *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x60uLL);
  sub_10017ACC0((uint64_t)exception, v1);
}

void sub_10017B334(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10017B348(_QWORD *a1)
{
  boost::filesystem::filesystem_error *v1;
  uint64_t v2;

  v1 = (boost::filesystem::filesystem_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  *((_QWORD *)v1 + 6) = &off_1003EDD90;
  v2 = *((_QWORD *)v1 + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *((_QWORD *)v1 + 7) = 0;
  boost::filesystem::filesystem_error::~filesystem_error(v1);
}

void sub_10017B3A0(_QWORD *a1)
{
  boost::filesystem::filesystem_error *v1;
  uint64_t v2;

  v1 = (boost::filesystem::filesystem_error *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  *((_QWORD *)v1 + 6) = &off_1003EDD90;
  v2 = *((_QWORD *)v1 + 7);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *((_QWORD *)v1 + 7) = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error(v1);
  operator delete();
}

void sub_10017B40C(boost::filesystem::filesystem_error *this)
{
  uint64_t v2;

  *((_QWORD *)this + 6) = &off_1003EDD90;
  v2 = *((_QWORD *)this + 7);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *((_QWORD *)this + 7) = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error(this);
  operator delete();
}

void sub_10017B470(_QWORD *a1)
{
  uint64_t v2;

  *a1 = &off_1003EDD90;
  v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    a1[1] = 0;
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(a1 - 6));
}

void sub_10017B4C0(_QWORD *a1)
{
  uint64_t v2;

  *a1 = &off_1003EDD90;
  v2 = a1[1];
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      a1[1] = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(a1 - 6));
  operator delete();
}

void sub_10017B524()
{
  operator new();
}

void sub_10017B73C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10016314C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017B760(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10017B77C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_10017B790()
{
  operator new();
}

void sub_10017B9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10016314C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017B9CC(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10017B9E8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

std::string *sub_10017B9FC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10017BA2C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_10017BA48(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1003F7068;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10017BA58(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1003F7068;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_10017BA88(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t *sub_10017BA98(uint64_t *a1, uint64_t *a2, uint64_t a3, int a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::ios_base *v11;
  uint64_t v12;

  v8 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v8 - 24)) = a2[3];
  v9 = a1 + 2;
  v10 = a2[1];
  *a1 = v10;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v10 - 24)) = a2[2];
  a1[1] = 0;
  v11 = (std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::ios_base::init(v11, a1 + 2);
  v11[1].__vftable = 0;
  v11[1].__fmtflags_ = -1;
  v12 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v12 - 24)) = a2[3];
  std::filebuf::basic_filebuf(v9);
  if (!std::filebuf::open(v9, a3, a4 | 8u))
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 4);
  return a1;
}

void sub_10017BB7C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::istream::~istream(v1, v2);
  _Unwind_Resume(a1);
}

void sub_10017BB94(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  std::filebuf::~filebuf(v3);
  std::istream::~istream(v1, v2);
  _Unwind_Resume(a1);
}

void sub_10017BBB4(void (__cdecl ***a1)(std::ifstream *__hidden this))
{
  _QWORD *v2;

  v2 = a1 + 53;
  std::filebuf::~filebuf(a1 + 2);
  std::ios::~ios(v2);
  operator delete();
}

void sub_10017BC24(_QWORD *a1)
{
  void (__cdecl ***v1)(std::ifstream *__hidden);

  v1 = (void (__cdecl ***)(std::ifstream *__hidden))((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::filebuf::~filebuf(v1 + 2);
  std::ios::~ios(v1 + 53);
  operator delete();
}

_QWORD *sub_10017BC9C(_QWORD *a1)
{
  _QWORD *v2;

  *a1 = off_1003F7140;
  v2 = a1 + 53;
  a1[53] = off_1003F7168;
  std::filebuf::~filebuf(a1 + 2);
  std::istream::~istream(a1, off_1003F7108);
  std::ios::~ios(v2);
  return a1;
}

void sub_10017BCF4(_QWORD *a1)
{
  _QWORD *v2;

  *a1 = off_1003F7140;
  v2 = a1 + 53;
  a1[53] = off_1003F7168;
  std::filebuf::~filebuf(a1 + 2);
  std::istream::~istream(a1, off_1003F7108);
  std::ios::~ios(v2);
  operator delete();
}

uint64_t sub_10017BD5C(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  *v1 = off_1003F7140;
  v1[53] = off_1003F7168;
  std::filebuf::~filebuf(v1 + 2);
  std::istream::~istream(v1, off_1003F7108);
  return std::ios::~ios(v1 + 53);
}

void sub_10017BDB4(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  *v1 = off_1003F7140;
  v1[53] = off_1003F7168;
  std::filebuf::~filebuf(v1 + 2);
  std::istream::~istream(v1, off_1003F7108);
  std::ios::~ios(v1 + 53);
  operator delete();
}

void sub_10017BE24(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  sub_10017BEC4();
}

void sub_10017BE44()
{
  _OWORD *v0;
  __int128 v1;

  *v0 = v1;
}

void sub_10017BE5C(void *a1, int a2)
{
  _QWORD *v2;

  __cxa_begin_catch(a1);
  if (a2 == 2)
    sub_10017C1EC(v2, qword_100417F30);
  else
    sub_10017C1EC(v2, qword_100417F48);
  __cxa_end_catch();
  JUMPOUT(0x10017BE4CLL);
}

void sub_10017BE9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1000CD964(v1);
  _Unwind_Resume(a1);
}

void sub_10017BEB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1000CD964(v1);
  _Unwind_Resume(a1);
}

void sub_10017BEC4()
{
  __cxa_rethrow();
}

void sub_10017C0E8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  std::exception_ptr v15;

  std::exception_ptr::~exception_ptr(&v15);
  __cxa_begin_catch(a1);
  sub_10017C324();
}

void sub_10017C10C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_10017C1EC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;

  v4 = *a2;
  v3 = a2[1];
  if (v3)
  {
    v5 = (unsigned int *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = (unsigned int *)a1[1];
  *a1 = v4;
  a1[1] = v3;
  if (v7)
  {
    v8 = v7 + 2;
    do
    {
      v9 = __ldaxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v7 + 16))(v7);
      v11 = v7 + 3;
      do
      {
        v12 = __ldaxr(v11);
        v13 = v12 - 1;
      }
      while (__stlxr(v13, v11));
      if (!v13)
        (*(void (**)(unsigned int *))(*(_QWORD *)v7 + 24))(v7);
    }
  }
  return a1;
}

void sub_10017C288(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  sub_10017DE18();
}

void sub_10017C2BC(_Unwind_Exception *exception_object)
{
  unsigned int **v1;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;

  v3 = *v1;
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldaxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 16))(v3);
      v7 = v3 + 3;
      do
      {
        v8 = __ldaxr(v7);
        v9 = v8 - 1;
      }
      while (__stlxr(v9, v7));
      if (!v9)
        (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 24))(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10017C324()
{
  _QWORD v0[4];
  int v1;
  uint64_t (**v2)();

  v1 = -1;
  v0[0] = off_1003F7338;
  memset(&v0[1], 0, 24);
  v2 = off_1003F7358;
  sub_10017E408((uint64_t)v0);
}

void sub_10017C3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::exception a9)
{
  sub_10017E5BC(&a9);
  _Unwind_Resume(a1);
}

void sub_10017C3B8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  sub_10017EF78();
}

void sub_10017C48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::exception a9)
{
  sub_10017E5BC(&a9);
  _Unwind_Resume(a1);
}

void sub_10017C4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  std::exception *v10;

  std::exception::~exception(v10);
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 32))(a10);
  _Unwind_Resume(a1);
}

void sub_10017C4DC(const void *a1)
{
  _QWORD *v1;
  uint64_t v2;

  if (v1)
  {
    v2 = v1[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    sub_10017FEBC();
  }
  sub_10017FEBC();
}

void sub_10017C650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_exception a9)
{
  sub_10017F4D8(&a9);
  _Unwind_Resume(a1);
}

void sub_10017C664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _UNKNOWN **a10, uint64_t a11)
{
  a10 = &off_1003EDD90;
  if (a11)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a11 + 32))(a11))
    {
      a11 = 0;
      std::bad_exception::~bad_exception((std::bad_exception *)&a9);
      _Unwind_Resume(a1);
    }
  }
  std::bad_exception::~bad_exception((std::bad_exception *)&a9);
  _Unwind_Resume(a1);
}

void sub_10017C710(const void *a1)
{
  _QWORD *v1;
  uint64_t v2;

  if (v1)
  {
    v2 = v1[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    sub_100180CD4();
  }
  sub_100180CD4();
}

void sub_10017C884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_typeid a9)
{
  sub_1001802F0(&a9);
  _Unwind_Resume(a1);
}

void sub_10017C898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _UNKNOWN **a10, uint64_t a11)
{
  a10 = &off_1003EDD90;
  if (a11)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a11 + 32))(a11))
    {
      a11 = 0;
      std::bad_typeid::~bad_typeid((std::bad_typeid *)&a9);
      _Unwind_Resume(a1);
    }
  }
  std::bad_typeid::~bad_typeid((std::bad_typeid *)&a9);
  _Unwind_Resume(a1);
}

void sub_10017C944(const void *a1)
{
  _QWORD *v1;
  uint64_t v2;

  if (v1)
  {
    v2 = v1[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    sub_100181AEC();
  }
  sub_100181AEC();
}

void sub_10017CAB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_cast a9)
{
  sub_100181108(&a9);
  _Unwind_Resume(a1);
}

void sub_10017CACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _UNKNOWN **a10, uint64_t a11)
{
  a10 = &off_1003EDD90;
  if (a11)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a11 + 32))(a11))
    {
      a11 = 0;
      std::bad_cast::~bad_cast((std::bad_cast *)&a9);
      _Unwind_Resume(a1);
    }
  }
  std::bad_cast::~bad_cast((std::bad_cast *)&a9);
  _Unwind_Resume(a1);
}

void sub_10017CB78(const void *a1)
{
  _QWORD *v1;
  uint64_t v2;

  if (v1)
  {
    v2 = v1[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    sub_100182904();
  }
  sub_100182904();
}

void sub_10017CCEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_alloc a9)
{
  sub_100181F20(&a9);
  _Unwind_Resume(a1);
}

void sub_10017CD00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _UNKNOWN **a10, uint64_t a11)
{
  a10 = &off_1003EDD90;
  if (a11)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a11 + 32))(a11))
    {
      a11 = 0;
      std::bad_alloc::~bad_alloc((std::bad_alloc *)&a9);
      _Unwind_Resume(a1);
    }
  }
  std::bad_alloc::~bad_alloc((std::bad_alloc *)&a9);
  _Unwind_Resume(a1);
}

void sub_10017CDAC(const std::runtime_error *a1)
{
  void *v2;
  const char *(__cdecl *what)(const std::runtime_error *__hidden);
  std::runtime_error v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  const char *(__cdecl *v11)(const std::runtime_error *__hidden);

  if (v2)
    sub_100182D38((uint64_t)&v4, a1, (uint64_t)v2);
  std::runtime_error::runtime_error(&v4, a1);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::runtime_error_vtbl *)off_1003F7C50;
  v5 = off_1003F7C78;
  what = a1->__vftable[-1].what;
  v10 = off_1003F7500;
  v11 = what;
  sub_100183804();
}

void sub_10017CEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10)
{
  sub_100182E30(&a10);
  _Unwind_Resume(a1);
}

void sub_10017CEF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, _UNKNOWN **a11, uint64_t a12)
{
  a11 = &off_1003EDD90;
  if (a12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a12 + 32))(a12))
      a12 = 0;
  }
  std::runtime_error::~runtime_error(&a10);
  _Unwind_Resume(a1);
}

void sub_10017CF3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10)
{
  sub_100182E30(&a10);
  _Unwind_Resume(a1);
}

void sub_10017CF50(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  std::ios_base::failure v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  uint64_t v11;

  if (v2)
    sub_100183C50((uint64_t)&v4, (const std::runtime_error *)a1, (uint64_t)v2);
  std::runtime_error::runtime_error(&v4, (const std::runtime_error *)a1);
  v4.__ec_ = *(std::error_code *)(a1 + 16);
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::ios_base::failure_vtbl *)off_1003F7E00;
  v5 = off_1003F7E28;
  v6 = 0;
  v3 = *(_QWORD *)(*(_QWORD *)a1 - 8);
  v10 = off_1003F7500;
  v11 = v3;
  sub_1001847CC();
}

void sub_10017D088(_Unwind_Exception *a1, std::ios_base::failure *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100183D70((std::ios_base::failure *)&a10);
  _Unwind_Resume(a1);
}

void sub_10017D09C(_Unwind_Exception *a1, std::ios_base::failure *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _UNKNOWN **a14, uint64_t a15)
{
  a14 = &off_1003EDD90;
  if (a15)
  {
    if ((*(unsigned int (**)(uint64_t, std::ios_base::failure *))(*(_QWORD *)a15 + 32))(a15, a2))
      a15 = 0;
  }
  std::ios_base::failure::~failure((std::ios_base::failure *)&a10);
  _Unwind_Resume(a1);
}

void sub_10017D0E4(_Unwind_Exception *a1, std::ios_base::failure *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100183D70((std::ios_base::failure *)&a10);
  _Unwind_Resume(a1);
}

void sub_10017D0F8(const std::runtime_error *a1)
{
  void *v2;
  const char *(__cdecl *what)(const std::runtime_error *__hidden);
  std::underflow_error v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  const char *(__cdecl *v11)(const std::runtime_error *__hidden);

  if (v2)
    sub_100184C10((uint64_t)&v4, a1, (uint64_t)v2);
  std::runtime_error::runtime_error(&v4, a1);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::underflow_error_vtbl *)off_1003F7FB0;
  v5 = off_1003F7FD8;
  what = a1->__vftable[-1].what;
  v10 = off_1003F7500;
  v11 = what;
  sub_10018571C();
}

void sub_10017D22C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::underflow_error a10)
{
  sub_100184D18(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::underflow_error a10, _UNKNOWN **a11, uint64_t a12)
{
  a11 = &off_1003EDD90;
  if (a12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a12 + 32))(a12))
      a12 = 0;
  }
  std::underflow_error::~underflow_error(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::underflow_error a10)
{
  sub_100184D18(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D29C(const std::runtime_error *a1)
{
  void *v2;
  const char *(__cdecl *what)(const std::runtime_error *__hidden);
  std::overflow_error v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  const char *(__cdecl *v11)(const std::runtime_error *__hidden);

  if (v2)
    sub_100185B60((uint64_t)&v4, a1, (uint64_t)v2);
  std::runtime_error::runtime_error(&v4, a1);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::overflow_error_vtbl *)off_1003F8160;
  v5 = off_1003F8188;
  what = a1->__vftable[-1].what;
  v10 = off_1003F7500;
  v11 = what;
  sub_10018666C();
}

void sub_10017D3D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::overflow_error a10)
{
  sub_100185C68(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D3E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::overflow_error a10, _UNKNOWN **a11, uint64_t a12)
{
  a11 = &off_1003EDD90;
  if (a12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a12 + 32))(a12))
      a12 = 0;
  }
  std::overflow_error::~overflow_error(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D42C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::overflow_error a10)
{
  sub_100185C68(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D440(const std::runtime_error *a1)
{
  void *v2;
  const char *(__cdecl *what)(const std::runtime_error *__hidden);
  std::range_error v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  const char *(__cdecl *v11)(const std::runtime_error *__hidden);

  if (v2)
    sub_100186AB0((uint64_t)&v4, a1, (uint64_t)v2);
  std::runtime_error::runtime_error(&v4, a1);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::range_error_vtbl *)off_1003F8310;
  v5 = off_1003F8338;
  what = a1->__vftable[-1].what;
  v10 = off_1003F7500;
  v11 = what;
  sub_1001875BC();
}

void sub_10017D574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::range_error a10)
{
  sub_100186BB8(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::range_error a10, _UNKNOWN **a11, uint64_t a12)
{
  a11 = &off_1003EDD90;
  if (a12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a12 + 32))(a12))
      a12 = 0;
  }
  std::range_error::~range_error(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D5D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::range_error a10)
{
  sub_100186BB8(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D5E4(const std::logic_error *a1)
{
  void *v2;
  const char *(__cdecl *what)(const std::logic_error *__hidden);
  std::logic_error v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  const char *(__cdecl *v11)(const std::logic_error *__hidden);

  if (v2)
    sub_1001879F0((uint64_t)&v4, a1, (uint64_t)v2);
  std::logic_error::logic_error(&v4, a1);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::logic_error_vtbl *)off_1003F84C0;
  v5 = off_1003F84E8;
  what = a1->__vftable[-1].what;
  v10 = off_1003F7500;
  v11 = what;
  sub_1001884BC();
}

void sub_10017D718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::logic_error a10)
{
  sub_100187AE8(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D72C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::logic_error a10, _UNKNOWN **a11, uint64_t a12)
{
  a11 = &off_1003EDD90;
  if (a12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a12 + 32))(a12))
      a12 = 0;
  }
  std::logic_error::~logic_error(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::logic_error a10)
{
  sub_100187AE8(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D788(const std::logic_error *a1)
{
  void *v2;
  const char *(__cdecl *what)(const std::logic_error *__hidden);
  std::out_of_range v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  const char *(__cdecl *v11)(const std::logic_error *__hidden);

  if (v2)
    sub_100188900((uint64_t)&v4, a1, (uint64_t)v2);
  std::logic_error::logic_error(&v4, a1);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::out_of_range_vtbl *)off_1003F8670;
  v5 = off_1003F8698;
  what = a1->__vftable[-1].what;
  v10 = off_1003F7500;
  v11 = what;
  sub_10018940C();
}

void sub_10017D8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
  sub_100188A08(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D8D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10, _UNKNOWN **a11, uint64_t a12)
{
  a11 = &off_1003EDD90;
  if (a12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a12 + 32))(a12))
      a12 = 0;
  }
  std::out_of_range::~out_of_range(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
  sub_100188A08(&a10);
  _Unwind_Resume(a1);
}

void sub_10017D92C(const std::logic_error *a1)
{
  void *v2;
  const char *(__cdecl *what)(const std::logic_error *__hidden);
  std::length_error v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  const char *(__cdecl *v11)(const std::logic_error *__hidden);

  if (v2)
    sub_100189850((uint64_t)&v4, a1, (uint64_t)v2);
  std::logic_error::logic_error(&v4, a1);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::length_error_vtbl *)off_1003F8820;
  v5 = off_1003F8848;
  what = a1->__vftable[-1].what;
  v10 = off_1003F7500;
  v11 = what;
  sub_10018A35C();
}

void sub_10017DA60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::length_error a10)
{
  sub_100189958(&a10);
  _Unwind_Resume(a1);
}

void sub_10017DA74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::length_error a10, _UNKNOWN **a11, uint64_t a12)
{
  a11 = &off_1003EDD90;
  if (a12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a12 + 32))(a12))
      a12 = 0;
  }
  std::length_error::~length_error(&a10);
  _Unwind_Resume(a1);
}

void sub_10017DABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::length_error a10)
{
  sub_100189958(&a10);
  _Unwind_Resume(a1);
}

void sub_10017DAD0(const std::logic_error *a1)
{
  void *v2;
  const char *(__cdecl *what)(const std::logic_error *__hidden);
  std::invalid_argument v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  const char *(__cdecl *v11)(const std::logic_error *__hidden);

  if (v2)
    sub_10018A7A0((uint64_t)&v4, a1, (uint64_t)v2);
  std::logic_error::logic_error(&v4, a1);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::invalid_argument_vtbl *)off_1003F89D0;
  v5 = off_1003F89F8;
  what = a1->__vftable[-1].what;
  v10 = off_1003F7500;
  v11 = what;
  sub_10018B2AC();
}

void sub_10017DC04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::invalid_argument a10)
{
  sub_10018A8A8(&a10);
  _Unwind_Resume(a1);
}

void sub_10017DC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::invalid_argument a10, _UNKNOWN **a11, uint64_t a12)
{
  a11 = &off_1003EDD90;
  if (a12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a12 + 32))(a12))
      a12 = 0;
  }
  std::invalid_argument::~invalid_argument(&a10);
  _Unwind_Resume(a1);
}

void sub_10017DC60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::invalid_argument a10)
{
  sub_10018A8A8(&a10);
  _Unwind_Resume(a1);
}

void sub_10017DC74(const std::logic_error *a1)
{
  void *v2;
  const char *(__cdecl *what)(const std::logic_error *__hidden);
  std::domain_error v4;
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (**v10)();
  const char *(__cdecl *v11)(const std::logic_error *__hidden);

  if (v2)
    sub_10018B6F0((uint64_t)&v4, a1, (uint64_t)v2);
  std::logic_error::logic_error(&v4, a1);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = -1;
  v4.__vftable = (std::domain_error_vtbl *)off_1003F8B80;
  v5 = off_1003F8BA8;
  what = a1->__vftable[-1].what;
  v10 = off_1003F7500;
  v11 = what;
  sub_10018C1FC();
}

void sub_10017DDA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::domain_error a10)
{
  sub_10018B7F8(&a10);
  _Unwind_Resume(a1);
}

void sub_10017DDBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::domain_error a10, _UNKNOWN **a11, uint64_t a12)
{
  a11 = &off_1003EDD90;
  if (a12)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a12 + 32))(a12))
      a12 = 0;
  }
  std::domain_error::~domain_error(&a10);
  _Unwind_Resume(a1);
}

void sub_10017DE04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::domain_error a10)
{
  sub_10018B7F8(&a10);
  _Unwind_Resume(a1);
}

void sub_10017DE18()
{
  operator new();
}

void sub_10017DECC(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10017DEEC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_10017DF04()
{
  operator delete();
}

uint64_t sub_10017DF18(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_10017DF30()
{
  return 0;
}

uint64_t sub_10017DF38()
{
  return 0;
}

uint64_t sub_10017DF40()
{
  return 0;
}

void sub_10017DF48()
{
  std::exception_ptr v0;
  std::exception v1;
  std::exception_ptr v2;
  std::exception v3;
  std::exception_ptr v4;
  void (__cdecl **v5)();

  std::current_exception();
  v1.__vftable = (std::exception_vtbl *)off_1003F7310;
  std::exception_ptr::exception_ptr(&v2, &v0);
  v5 = (void (__cdecl **)())&off_1003EDEA0;
  v3.__vftable = (std::exception_vtbl *)off_1003F7310;
  std::exception_ptr::exception_ptr(&v4, &v2);
  v3.__vftable = (std::exception_vtbl *)off_1003F7258;
  v5 = (void (__cdecl **)())&off_1003F72A8;
  v1.__vftable = (std::exception_vtbl *)off_1003F7310;
  std::exception_ptr::~exception_ptr(&v2);
  std::exception::~exception(&v1);
  std::exception_ptr::~exception_ptr(&v0);
  (*v5)();
}

void sub_10017E040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception a12)
{
  std::exception_ptr *v12;
  unsigned int **v13;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;

  v15 = *v13;
  if (v15)
  {
    v16 = v15 + 2;
    do
    {
      v17 = __ldaxr(v16);
      v18 = v17 - 1;
    }
    while (__stlxr(v18, v16));
    if (!v18)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v15 + 16))(v15);
      v19 = v15 + 3;
      do
      {
        v20 = __ldaxr(v19);
        v21 = v20 - 1;
      }
      while (__stlxr(v21, v19));
      if (!v21)
        (*(void (**)(unsigned int *))(*(_QWORD *)v15 + 24))(v15);
    }
  }
  std::exception_ptr::~exception_ptr(v12);
  std::exception::~exception(&a12);
  _Unwind_Resume(a1);
}

void sub_10017E0C4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7310;
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(a1 + 8));
  std::exception::~exception((std::exception *)a1);
}

void sub_10017E0F4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7310;
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(a1 + 8));
  std::exception::~exception((std::exception *)a1);
}

void sub_10017E124(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7310;
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(a1 + 8));
  std::exception::~exception((std::exception *)a1);
  operator delete();
}

void sub_10017E168()
{
  operator new();
}

void sub_10017E1E8(const std::exception_ptr *a1)
{
  std::exception_ptr *exception;
  std::exception_ptr *v3;

  exception = (std::exception_ptr *)__cxa_allocate_exception(0x18uLL);
  v3 = sub_10017E3B0(exception, a1);
}

void sub_10017E21C()
{
  operator new();
}

void sub_10017E2A4(_QWORD *a1)
{
  const std::exception_ptr *v1;
  std::exception_ptr *exception;
  std::exception_ptr *v3;

  v1 = (const std::exception_ptr *)((char *)a1 + *(_QWORD *)(*a1 - 32));
  exception = (std::exception_ptr *)__cxa_allocate_exception(0x18uLL);
  v3 = sub_10017E3B0(exception, v1);
}

void sub_10017E2E0(_QWORD *a1)
{
  std::exception_ptr *v1;

  v1 = (std::exception_ptr *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1->__ptr_ = off_1003F7310;
  std::exception_ptr::~exception_ptr(v1 + 1);
  std::exception::~exception((std::exception *)v1);
}

void sub_10017E31C(_QWORD *a1)
{
  std::exception_ptr *v1;

  v1 = (std::exception_ptr *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v1->__ptr_ = off_1003F7310;
  std::exception_ptr::~exception_ptr(v1 + 1);
  std::exception::~exception((std::exception *)v1);
  operator delete();
}

void sub_10017E36C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7310;
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(a1 + 8));
  std::exception::~exception((std::exception *)a1);
  operator delete();
}

std::exception_ptr *sub_10017E3B0(std::exception_ptr *a1, const std::exception_ptr *a2)
{
  a1[2].__ptr_ = &off_1003EDEA0;
  a1->__ptr_ = off_1003F7310;
  std::exception_ptr::exception_ptr(a1 + 1, a2 + 1);
  a1->__ptr_ = off_1003F7258;
  a1[2].__ptr_ = &off_1003F72A8;
  return a1;
}

void sub_10017E408(uint64_t a1)
{
  uint64_t v2;
  _QWORD v3[2];
  __int128 v4;
  int v5;
  uint64_t (**v6)();

  v2 = *(_QWORD *)(a1 + 8);
  v3[1] = v2;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  v4 = *(_OWORD *)(a1 + 16);
  v5 = *(_DWORD *)(a1 + 32);
  v3[0] = off_1003F7338;
  v6 = off_1003F7358;
  sub_1000CE34C((uint64_t)v3, a1);
  sub_10017E614();
}

void sub_10017E594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_10017E5BC((std::exception *)va);
  _Unwind_Resume(a1);
}

void sub_10017E5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_10017E5BC((std::exception *)va);
  _Unwind_Resume(a1);
}

std::exception *sub_10017E5BC(std::exception *a1)
{
  std::exception_vtbl *v2;

  std::exception::~exception(a1 + 5);
  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    a1[1].__vftable = 0;
  return a1;
}

void sub_10017E614()
{
  operator new();
}

void sub_10017E7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10017E880((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10017E80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  std::exception *v10;
  uint64_t v11;
  uint64_t v13;

  std::exception::~exception(v10);
  *(_QWORD *)(v9 + 40) = v11 + 16;
  v13 = *(_QWORD *)(v9 + 48);
  if (v13)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v13 + 32))(v13))
    {
      *(_QWORD *)(v9 + 48) = 0;
      sub_10017E880((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  sub_10017E880((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10017E860(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_10017E86C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_10017E880(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_10017E8FC(std::exception *a1)
{
  std::exception_vtbl *v2;

  std::exception::~exception(a1 + 5);
  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      a1[1].__vftable = 0;
  }
  operator delete();
}

uint64_t sub_10017E964(std::exception *a1)
{
  uint64_t v2;
  uint64_t result;

  std::exception::~exception(a1);
  *(_QWORD *)(v2 - 40) = &off_1003EDD90;
  result = *(_QWORD *)(v2 - 32);
  if (result)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    if ((_DWORD)result)
      a1[-4].__vftable = 0;
  }
  return result;
}

void sub_10017E9B4(std::exception *a1)
{
  uint64_t v2;
  uint64_t v3;

  std::exception::~exception(a1);
  *(_QWORD *)(v2 - 40) = &off_1003EDD90;
  v3 = *(_QWORD *)(v2 - 32);
  if (v3)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3))
      a1[-4].__vftable = 0;
  }
  operator delete();
}

uint64_t sub_10017EA1C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F73B8;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10017EA68(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F73B8;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_10017EAC4(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10017EAFC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_17unknown_exceptionEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_17unknown_exceptionEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_17unknown_exceptionEEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_17unknown_exceptionEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_10017EB68()
{
  return 0;
}

uint64_t sub_10017EB70(uint64_t a1)
{
  return a1 + 24;
}

void sub_10017EB78()
{
  operator new();
}

void sub_10017EC30()
{
  operator delete();
}

void sub_10017EC54(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10017EC70(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_10017EEF0((uint64_t)exception, a1);
}

void sub_10017ECAC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::exception *sub_10017ECC0(std::exception *a1)
{
  std::exception_vtbl *v2;

  std::exception::~exception(a1 + 6);
  a1[1].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    a1[2].__vftable = 0;
  return a1;
}

void sub_10017ED18(std::exception *a1)
{
  std::exception_vtbl *v2;

  std::exception::~exception(a1 + 6);
  a1[1].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      a1[2].__vftable = 0;
  }
  operator delete();
}

uint64_t sub_10017ED80(std::exception *a1)
{
  uint64_t result;

  std::exception::~exception(a1 + 5);
  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  result = (uint64_t)a1[1].__vftable;
  if (result)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    if ((_DWORD)result)
      a1[1].__vftable = 0;
  }
  return result;
}

void sub_10017EDD4(std::exception *a1)
{
  std::exception_vtbl *v2;

  std::exception::~exception(a1 + 5);
  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      a1[1].__vftable = 0;
  }
  operator delete();
}

uint64_t sub_10017EE3C(std::exception *a1)
{
  uint64_t v2;
  uint64_t result;

  std::exception::~exception(a1);
  *(_QWORD *)(v2 - 40) = &off_1003EDD90;
  result = *(_QWORD *)(v2 - 32);
  if (result)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    if ((_DWORD)result)
      a1[-4].__vftable = 0;
  }
  return result;
}

void sub_10017EE8C(std::exception *a1)
{
  uint64_t v2;
  uint64_t v3;

  std::exception::~exception(a1);
  *(_QWORD *)(v2 - 40) = &off_1003EDD90;
  v3 = *(_QWORD *)(v2 - 32);
  if (v3)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3))
      a1[-4].__vftable = 0;
  }
  operator delete();
}

uint64_t sub_10017EEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  *(_QWORD *)(a1 + 8) = &off_1003EDD90;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_QWORD *)a1 = &off_1003F7418;
  *(_QWORD *)(a1 + 8) = off_1003F7448;
  *(_QWORD *)(a1 + 48) = off_1003F7468;
  return a1;
}

void sub_10017EF78()
{
  operator new();
}

void sub_10017F17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017F1A0(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10017F1BC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_10017F1D0(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_10017F24C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1000F020C((const char *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8) & 0x7FFFFFFFFFFFFFFFLL), a2);
}

void sub_10017F25C()
{
  operator new();
}

void sub_10017F2A0()
{
  operator delete();
}

void sub_10017F2B8()
{
  operator delete();
}

uint64_t sub_10017F2CC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_10017F2E4()
{
  return 0;
}

uint64_t sub_10017F2EC()
{
  return 0;
}

uint64_t sub_10017F2F4()
{
  return 0;
}

void sub_10017F2FC(uint64_t a1)
{
  uint64_t v2;
  _QWORD v3[2];
  __int128 v4;
  int v5;

  v3[0] = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 16);
  v3[1] = v2;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  v4 = *(_OWORD *)(a1 + 24);
  v5 = *(_DWORD *)(a1 + 40);
  v3[0] = off_1003F75B8;
  sub_1000CE34C((uint64_t)v3, a1 + 8);
  sub_10017F528();
}

void sub_10017F49C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_exception a11)
{
  std::bad_exception::~bad_exception(&a11);
  _Unwind_Resume(a1);
}

void sub_10017F4B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_exception a11)
{
  sub_10017F4D8(&a11);
  _Unwind_Resume(a1);
}

void sub_10017F4C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_exception a11)
{
  sub_10017F4D8(&a11);
  _Unwind_Resume(a1);
}

void sub_10017F4D8(std::bad_exception *this)
{
  std::bad_exception_vtbl *v2;

  this[1].__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
    this[2].__vftable = 0;
  std::bad_exception::~bad_exception(this);
}

void sub_10017F528()
{
  operator new();
}

void sub_10017F614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10017F648((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10017F628(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_10017F634(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_10017F648(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_10017F6C4(std::bad_exception *this)
{
  std::bad_exception_vtbl *v2;

  this[1].__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
      this[2].__vftable = 0;
  }
  std::bad_exception::~bad_exception(this);
  operator delete();
}

void sub_10017F728(std::bad_exception *a1)
{
  std::bad_exception_vtbl *v2;

  a1->__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
    a1[1].__vftable = 0;
  std::bad_exception::~bad_exception(a1 - 1);
}

void sub_10017F778(std::bad_exception *a1)
{
  std::bad_exception_vtbl *v2;

  a1->__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::bad_exception::~bad_exception(a1 - 1);
  operator delete();
}

uint64_t sub_10017F7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 24);
  }
  v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1003F7670;
  *(_QWORD *)(a1 + 8) = off_1003F76A0;
  *(_QWORD *)(a1 + 16) = off_1003F76C8;
  v6 = *(_QWORD *)(a2 + 16);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

void sub_10017F8C8(_Unwind_Exception *a1)
{
  std::bad_exception *v1;

  std::bad_exception::~bad_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10017F8DC(_Unwind_Exception *a1)
{
  std::bad_exception *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 24);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 24) = 0;
  }
  std::bad_exception::~bad_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10017F918(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7610;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10017F964(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7610;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_10017F9C0(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10017F9F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt13bad_exceptionEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt13bad_exceptionEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt13bad_exceptionEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt13bad_exceptionEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_10017FA64()
{
  return 0;
}

uint64_t sub_10017FA6C(uint64_t a1)
{
  return a1 + 24;
}

void sub_10017FA74()
{
  operator new();
}

void sub_10017FB3C()
{
  std::bad_exception *v0;

  std::bad_exception::~bad_exception(v0);
  operator delete();
}

void sub_10017FB68(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10017FB84(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_10017FE0C((uint64_t)exception, a1);
}

void sub_10017FBC0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::bad_exception *sub_10017FBD4(std::bad_exception *a1)
{
  std::bad_exception_vtbl *v2;

  a1[2].__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
    a1[3].__vftable = 0;
  std::bad_exception::~bad_exception(a1 + 1);
  return a1;
}

void sub_10017FC2C(std::bad_exception *a1)
{
  std::bad_exception_vtbl *v2;

  a1[2].__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
      a1[3].__vftable = 0;
  }
  std::bad_exception::~bad_exception(a1 + 1);
  operator delete();
}

void sub_10017FC94(std::bad_exception *this)
{
  std::bad_exception_vtbl *v2;

  this[1].__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
    this[2].__vftable = 0;
  std::bad_exception::~bad_exception(this);
}

void sub_10017FCE4(std::bad_exception *this)
{
  std::bad_exception_vtbl *v2;

  this[1].__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
      this[2].__vftable = 0;
  }
  std::bad_exception::~bad_exception(this);
  operator delete();
}

void sub_10017FD50(std::bad_exception *a1)
{
  std::bad_exception_vtbl *v2;

  a1->__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
    a1[1].__vftable = 0;
  std::bad_exception::~bad_exception(a1 - 1);
}

void sub_10017FDA0(std::bad_exception *a1)
{
  std::bad_exception_vtbl *v2;

  a1->__vftable = (std::bad_exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::bad_exception::~bad_exception(a1 - 1);
  operator delete();
}

uint64_t sub_10017FE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1003F7670;
  *(_QWORD *)(a1 + 8) = off_1003F76A0;
  *(_QWORD *)(a1 + 16) = off_1003F76C8;
  return a1;
}

void sub_10017FEA8(_Unwind_Exception *a1)
{
  std::bad_exception *v1;

  std::bad_exception::~bad_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10017FEBC()
{
  operator new();
}

void sub_1001800C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001800E4(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100180100(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100180114(uint64_t a1)
{
  uint64_t v2;
  _QWORD v3[2];
  __int128 v4;
  int v5;

  v3[0] = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 16);
  v3[1] = v2;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  v4 = *(_OWORD *)(a1 + 24);
  v5 = *(_DWORD *)(a1 + 40);
  v3[0] = off_1003F7768;
  sub_1000CE34C((uint64_t)v3, a1 + 8);
  sub_100180340();
}

void sub_1001802B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_typeid a11)
{
  std::bad_typeid::~bad_typeid(&a11);
  _Unwind_Resume(a1);
}

void sub_1001802C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_typeid a11)
{
  sub_1001802F0(&a11);
  _Unwind_Resume(a1);
}

void sub_1001802DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_typeid a11)
{
  sub_1001802F0(&a11);
  _Unwind_Resume(a1);
}

void sub_1001802F0(std::bad_typeid *this)
{
  std::bad_typeid_vtbl *v2;

  this[1].__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
    this[2].__vftable = 0;
  std::bad_typeid::~bad_typeid(this);
}

void sub_100180340()
{
  operator new();
}

void sub_10018042C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100180460((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100180440(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_10018044C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100180460(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_1001804DC(std::bad_typeid *this)
{
  std::bad_typeid_vtbl *v2;

  this[1].__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
      this[2].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(this);
  operator delete();
}

void sub_100180540(std::bad_typeid *a1)
{
  std::bad_typeid_vtbl *v2;

  a1->__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
    a1[1].__vftable = 0;
  std::bad_typeid::~bad_typeid(a1 - 1);
}

void sub_100180590(std::bad_typeid *a1)
{
  std::bad_typeid_vtbl *v2;

  a1->__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(a1 - 1);
  operator delete();
}

uint64_t sub_1001805F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 24);
  }
  v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1003F7820;
  *(_QWORD *)(a1 + 8) = off_1003F7850;
  *(_QWORD *)(a1 + 16) = off_1003F7878;
  v6 = *(_QWORD *)(a2 + 16);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

void sub_1001806E0(_Unwind_Exception *a1)
{
  std::bad_typeid *v1;

  std::bad_typeid::~bad_typeid(v1);
  _Unwind_Resume(a1);
}

void sub_1001806F4(_Unwind_Exception *a1)
{
  std::bad_typeid *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 24);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 24) = 0;
  }
  std::bad_typeid::~bad_typeid(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100180730(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F77C0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10018077C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F77C0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_1001807D8(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100180810(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt10bad_typeidEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt10bad_typeidEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt10bad_typeidEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt10bad_typeidEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_10018087C()
{
  return 0;
}

uint64_t sub_100180884(uint64_t a1)
{
  return a1 + 24;
}

void sub_10018088C()
{
  operator new();
}

void sub_100180954()
{
  std::bad_typeid *v0;

  std::bad_typeid::~bad_typeid(v0);
  operator delete();
}

void sub_100180980(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018099C(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_100180C24((uint64_t)exception, a1);
}

void sub_1001809D8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::bad_typeid *sub_1001809EC(std::bad_typeid *a1)
{
  std::bad_typeid_vtbl *v2;

  a1[2].__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
    a1[3].__vftable = 0;
  std::bad_typeid::~bad_typeid(a1 + 1);
  return a1;
}

void sub_100180A44(std::bad_typeid *a1)
{
  std::bad_typeid_vtbl *v2;

  a1[2].__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
      a1[3].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(a1 + 1);
  operator delete();
}

void sub_100180AAC(std::bad_typeid *this)
{
  std::bad_typeid_vtbl *v2;

  this[1].__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
    this[2].__vftable = 0;
  std::bad_typeid::~bad_typeid(this);
}

void sub_100180AFC(std::bad_typeid *this)
{
  std::bad_typeid_vtbl *v2;

  this[1].__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
      this[2].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(this);
  operator delete();
}

void sub_100180B68(std::bad_typeid *a1)
{
  std::bad_typeid_vtbl *v2;

  a1->__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
    a1[1].__vftable = 0;
  std::bad_typeid::~bad_typeid(a1 - 1);
}

void sub_100180BB8(std::bad_typeid *a1)
{
  std::bad_typeid_vtbl *v2;

  a1->__vftable = (std::bad_typeid_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(a1 - 1);
  operator delete();
}

uint64_t sub_100180C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1003F7820;
  *(_QWORD *)(a1 + 8) = off_1003F7850;
  *(_QWORD *)(a1 + 16) = off_1003F7878;
  return a1;
}

void sub_100180CC0(_Unwind_Exception *a1)
{
  std::bad_typeid *v1;

  std::bad_typeid::~bad_typeid(v1);
  _Unwind_Resume(a1);
}

void sub_100180CD4()
{
  operator new();
}

void sub_100180ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100180EFC(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100180F18(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100180F2C(uint64_t a1)
{
  uint64_t v2;
  _QWORD v3[2];
  __int128 v4;
  int v5;

  v3[0] = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 16);
  v3[1] = v2;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  v4 = *(_OWORD *)(a1 + 24);
  v5 = *(_DWORD *)(a1 + 40);
  v3[0] = off_1003F7918;
  sub_1000CE34C((uint64_t)v3, a1 + 8);
  sub_100181158();
}

void sub_1001810CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_cast a11)
{
  std::bad_cast::~bad_cast(&a11);
  _Unwind_Resume(a1);
}

void sub_1001810E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_cast a11)
{
  sub_100181108(&a11);
  _Unwind_Resume(a1);
}

void sub_1001810F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_cast a11)
{
  sub_100181108(&a11);
  _Unwind_Resume(a1);
}

void sub_100181108(std::bad_cast *this)
{
  std::bad_cast_vtbl *v2;

  this[1].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
    this[2].__vftable = 0;
  std::bad_cast::~bad_cast(this);
}

void sub_100181158()
{
  operator new();
}

void sub_100181244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100181278((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100181258(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100181264(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100181278(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_1001812F4(std::bad_cast *this)
{
  std::bad_cast_vtbl *v2;

  this[1].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
      this[2].__vftable = 0;
  }
  std::bad_cast::~bad_cast(this);
  operator delete();
}

void sub_100181358(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1->__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
    a1[1].__vftable = 0;
  std::bad_cast::~bad_cast(a1 - 1);
}

void sub_1001813A8(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1->__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 - 1);
  operator delete();
}

uint64_t sub_10018140C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 24);
  }
  v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1003F79D0;
  *(_QWORD *)(a1 + 8) = off_1003F7A00;
  *(_QWORD *)(a1 + 16) = off_1003F7A28;
  v6 = *(_QWORD *)(a2 + 16);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

void sub_1001814F8(_Unwind_Exception *a1)
{
  std::bad_cast *v1;

  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

void sub_10018150C(_Unwind_Exception *a1)
{
  std::bad_cast *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 24);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 24) = 0;
  }
  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100181548(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7970;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100181594(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7970;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_1001815F0(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100181628(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt8bad_castEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt8bad_castEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt8bad_castEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt8bad_castEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_100181694()
{
  return 0;
}

uint64_t sub_10018169C(uint64_t a1)
{
  return a1 + 24;
}

void sub_1001816A4()
{
  operator new();
}

void sub_10018176C()
{
  std::bad_cast *v0;

  std::bad_cast::~bad_cast(v0);
  operator delete();
}

void sub_100181798(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001817B4(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_100181A3C((uint64_t)exception, a1);
}

void sub_1001817F0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::bad_cast *sub_100181804(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1[2].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
    a1[3].__vftable = 0;
  std::bad_cast::~bad_cast(a1 + 1);
  return a1;
}

void sub_10018185C(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1[2].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
      a1[3].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 + 1);
  operator delete();
}

void sub_1001818C4(std::bad_cast *this)
{
  std::bad_cast_vtbl *v2;

  this[1].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
    this[2].__vftable = 0;
  std::bad_cast::~bad_cast(this);
}

void sub_100181914(std::bad_cast *this)
{
  std::bad_cast_vtbl *v2;

  this[1].__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
      this[2].__vftable = 0;
  }
  std::bad_cast::~bad_cast(this);
  operator delete();
}

void sub_100181980(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1->__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
    a1[1].__vftable = 0;
  std::bad_cast::~bad_cast(a1 - 1);
}

void sub_1001819D0(std::bad_cast *a1)
{
  std::bad_cast_vtbl *v2;

  a1->__vftable = (std::bad_cast_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 - 1);
  operator delete();
}

uint64_t sub_100181A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1003F79D0;
  *(_QWORD *)(a1 + 8) = off_1003F7A00;
  *(_QWORD *)(a1 + 16) = off_1003F7A28;
  return a1;
}

void sub_100181AD8(_Unwind_Exception *a1)
{
  std::bad_cast *v1;

  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

void sub_100181AEC()
{
  operator new();
}

void sub_100181CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100181D14(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100181D30(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100181D44(uint64_t a1)
{
  uint64_t v2;
  _QWORD v3[2];
  __int128 v4;
  int v5;

  v3[0] = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 16);
  v3[1] = v2;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  v4 = *(_OWORD *)(a1 + 24);
  v5 = *(_DWORD *)(a1 + 40);
  v3[0] = off_1003F7AC8;
  sub_1000CE34C((uint64_t)v3, a1 + 8);
  sub_100181F70();
}

void sub_100181EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_alloc a11)
{
  std::bad_alloc::~bad_alloc(&a11);
  _Unwind_Resume(a1);
}

void sub_100181EF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_alloc a11)
{
  sub_100181F20(&a11);
  _Unwind_Resume(a1);
}

void sub_100181F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_alloc a11)
{
  sub_100181F20(&a11);
  _Unwind_Resume(a1);
}

void sub_100181F20(std::bad_alloc *this)
{
  std::bad_alloc_vtbl *v2;

  this[1].__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
    this[2].__vftable = 0;
  std::bad_alloc::~bad_alloc(this);
}

void sub_100181F70()
{
  operator new();
}

void sub_10018205C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100182090((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100182070(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_10018207C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100182090(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_10018210C(std::bad_alloc *this)
{
  std::bad_alloc_vtbl *v2;

  this[1].__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
      this[2].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(this);
  operator delete();
}

void sub_100182170(std::bad_alloc *a1)
{
  std::bad_alloc_vtbl *v2;

  a1->__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
    a1[1].__vftable = 0;
  std::bad_alloc::~bad_alloc(a1 - 1);
}

void sub_1001821C0(std::bad_alloc *a1)
{
  std::bad_alloc_vtbl *v2;

  a1->__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(a1 - 1);
  operator delete();
}

uint64_t sub_100182224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 24);
  }
  v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1003F7B80;
  *(_QWORD *)(a1 + 8) = off_1003F7BB0;
  *(_QWORD *)(a1 + 16) = off_1003F7BD8;
  v6 = *(_QWORD *)(a2 + 16);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

void sub_100182310(_Unwind_Exception *a1)
{
  std::bad_alloc *v1;

  std::bad_alloc::~bad_alloc(v1);
  _Unwind_Resume(a1);
}

void sub_100182324(_Unwind_Exception *a1)
{
  std::bad_alloc *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 24);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 24) = 0;
  }
  std::bad_alloc::~bad_alloc(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100182360(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7B20;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001823AC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7B20;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_100182408(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100182440(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt9bad_allocEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt9bad_allocEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt9bad_allocEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt9bad_allocEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_1001824AC()
{
  return 0;
}

uint64_t sub_1001824B4(uint64_t a1)
{
  return a1 + 24;
}

void sub_1001824BC()
{
  operator new();
}

void sub_100182584()
{
  std::bad_alloc *v0;

  std::bad_alloc::~bad_alloc(v0);
  operator delete();
}

void sub_1001825B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001825CC(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_100182854((uint64_t)exception, a1);
}

void sub_100182608(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::bad_alloc *sub_10018261C(std::bad_alloc *a1)
{
  std::bad_alloc_vtbl *v2;

  a1[2].__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
    a1[3].__vftable = 0;
  std::bad_alloc::~bad_alloc(a1 + 1);
  return a1;
}

void sub_100182674(std::bad_alloc *a1)
{
  std::bad_alloc_vtbl *v2;

  a1[2].__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
      a1[3].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(a1 + 1);
  operator delete();
}

void sub_1001826DC(std::bad_alloc *this)
{
  std::bad_alloc_vtbl *v2;

  this[1].__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
    this[2].__vftable = 0;
  std::bad_alloc::~bad_alloc(this);
}

void sub_10018272C(std::bad_alloc *this)
{
  std::bad_alloc_vtbl *v2;

  this[1].__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
      this[2].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(this);
  operator delete();
}

void sub_100182798(std::bad_alloc *a1)
{
  std::bad_alloc_vtbl *v2;

  a1->__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
    a1[1].__vftable = 0;
  std::bad_alloc::~bad_alloc(a1 - 1);
}

void sub_1001827E8(std::bad_alloc *a1)
{
  std::bad_alloc_vtbl *v2;

  a1->__vftable = (std::bad_alloc_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(a1 - 1);
  operator delete();
}

uint64_t sub_100182854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1003F7B80;
  *(_QWORD *)(a1 + 8) = off_1003F7BB0;
  *(_QWORD *)(a1 + 16) = off_1003F7BD8;
  return a1;
}

void sub_1001828F0(_Unwind_Exception *a1)
{
  std::bad_alloc *v1;

  std::bad_alloc::~bad_alloc(v1);
  _Unwind_Resume(a1);
}

void sub_100182904()
{
  operator new();
}

void sub_100182B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100182B2C(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100182B48(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100182B5C(std::runtime_error *a1)
{
  const char *imp;
  std::runtime_error v3;
  _QWORD v4[2];
  std::runtime_error v5;
  int v6;

  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_1003F7C50;
  v4[0] = off_1003F7C78;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100182E80();
}

void sub_100182CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::runtime_error a12)
{
  std::runtime_error::~runtime_error(&a12);
  _Unwind_Resume(a1);
}

void sub_100182D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::runtime_error a12)
{
  sub_100182E30(&a12);
  _Unwind_Resume(a1);
}

void sub_100182D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::runtime_error a12)
{
  sub_100182E30(&a12);
  _Unwind_Resume(a1);
}

void sub_100182D38(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;

  std::runtime_error::runtime_error((std::runtime_error *)a1, a2)[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  v5 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  v6 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)a1 = off_1003F7C50;
  *(_QWORD *)(a1 + 16) = off_1003F7C78;
  sub_100183804();
}

void sub_100182DE0(_Unwind_Exception *a1)
{
  std::runtime_error *v1;

  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_100182DF4(_Unwind_Exception *a1)
{
  std::runtime_error *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::runtime_error_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_100182E30(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_100182E80()
{
  operator new();
}

void sub_100182F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100182FA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100182F80(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100182F8C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100182FA0(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_10018301C(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);
  operator delete();
}

void sub_100183080(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_1001830D0(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);
  operator delete();
}

uint64_t sub_100183134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F7D30;
  *(_QWORD *)(a1 + 8) = off_1003F7D60;
  *(_QWORD *)(a1 + 24) = off_1003F7D88;
  v6 = *(_QWORD *)(a2 + 24);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100183218(_Unwind_Exception *a1)
{
  std::runtime_error *v1;

  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018322C(_Unwind_Exception *a1)
{
  std::runtime_error *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 32);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 32) = 0;
  }
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100183268(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7CD0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001832B4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7CD0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_100183310(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100183348(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt13runtime_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt13runtime_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt13runtime_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt13runtime_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_1001833B4()
{
  return 0;
}

uint64_t sub_1001833BC(uint64_t a1)
{
  return a1 + 24;
}

void sub_1001833C4()
{
  operator new();
}

void sub_100183488()
{
  std::runtime_error *v0;

  std::runtime_error::~runtime_error(v0);
  operator delete();
}

void sub_1001834B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001834D0(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100183758((uint64_t)exception, a1);
}

void sub_10018350C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100183520(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::runtime_error::~runtime_error((std::runtime_error *)(a1 + 8));
  return a1;
}

void sub_100183578(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(a1 + 8));
  operator delete();
}

void sub_1001835E0(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(this);
}

void sub_100183630(std::runtime_error *this)
{
  const char *imp;

  this[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);
  operator delete();
}

void sub_10018369C(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_1001836EC(std::runtime_error *a1)
{
  const char *imp;

  a1->__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);
  operator delete();
}

uint64_t sub_100183758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F7D30;
  *(_QWORD *)(a1 + 8) = off_1003F7D60;
  *(_QWORD *)(a1 + 24) = off_1003F7D88;
  return a1;
}

void sub_1001837F0(_Unwind_Exception *a1)
{
  std::runtime_error *v1;

  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_100183804()
{
  operator new();
}

void sub_100183A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100183A2C(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100183A48(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100183A5C(std::runtime_error *a1)
{
  const char *imp;
  std::runtime_error v3;
  std::runtime_error v4;
  _QWORD v5[2];
  std::runtime_error v6;
  int v7;

  std::runtime_error::runtime_error(&v3, a1);
  v4 = a1[1];
  imp = a1[2].__imp_.__imp_;
  v5[0] = &off_1003EDD90;
  v5[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v6 = a1[3];
  v7 = (int)a1[4].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_1003F7E00;
  v5[0] = off_1003F7E28;
  sub_1000CE34C((uint64_t)v5, (uint64_t)&a1[2]);
  sub_100183DC0();
}

void sub_100183C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::ios_base::failure *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  std::ios_base::failure::~failure((std::ios_base::failure *)&a12);
  _Unwind_Resume(a1);
}

void sub_100183C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::ios_base::failure *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_100183D70((std::ios_base::failure *)&a12);
  _Unwind_Resume(a1);
}

void sub_100183C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::ios_base::failure *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_100183D70((std::ios_base::failure *)&a12);
  _Unwind_Resume(a1);
}

void sub_100183C50(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  std::runtime_error *v6;
  uint64_t v7;
  __int128 v8;

  v6 = std::runtime_error::runtime_error((std::runtime_error *)a1, a2);
  v6[1] = a2[1];
  v6[2].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  v7 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 40) = v7;
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
  v8 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)a1 = off_1003F7E00;
  *(_QWORD *)(a1 + 32) = off_1003F7E28;
  sub_1001847CC();
}

void sub_100183D20(_Unwind_Exception *a1)
{
  std::ios_base::failure *v1;

  std::ios_base::failure::~failure(v1);
  _Unwind_Resume(a1);
}

void sub_100183D34(_Unwind_Exception *a1)
{
  std::ios_base::failure *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::ios_base::failure_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::ios_base::failure::~failure(v1);
  _Unwind_Resume(a1);
}

void sub_100183D70(std::ios_base::failure *this)
{
  const char *imp;

  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::ios_base::failure::~failure(this);
}

void sub_100183DC0()
{
  operator new();
}

void sub_100183EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100183EE0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100183EC0(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100183ECC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100183EE0(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100183F5C(std::ios_base::failure *this)
{
  const char *imp;

  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::ios_base::failure::~failure(this);
  operator delete();
}

void sub_100183FC0(std::ios_base::failure *a1)
{
  const char *imp;

  a1->__vftable = (std::ios_base::failure_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::ios_base::failure::~failure(a1 - 1);
}

void sub_100184010(std::ios_base::failure *a1)
{
  const char *imp;

  a1->__vftable = (std::ios_base::failure_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::ios_base::failure::~failure(a1 - 1);
  operator delete();
}

uint64_t sub_100184074(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7E80;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001840C0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F7E80;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_10018411C(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100184154(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperINSt3__18ios_base7failureEEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperINSt3__18ios_base7failureEEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperINSt3__18ios_base7failureEEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperINSt3__18ios_base7failureEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_1001841C0()
{
  return 0;
}

uint64_t sub_1001841C8(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_1001841D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = &off_1003EDD90;
  *(_QWORD *)(a1 + 48) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 48);
  }
  v5 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)a1 = &off_1003F7EE0;
  *(_QWORD *)(a1 + 8) = off_1003F7F10;
  *(_QWORD *)(a1 + 40) = off_1003F7F38;
  v6 = *(_QWORD *)(a2 + 40);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 48) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 56) = v7;
  return a1;
}

void sub_1001842D4(_Unwind_Exception *a1)
{
  std::ios_base::failure *v1;

  std::ios_base::failure::~failure(v1);
  _Unwind_Resume(a1);
}

void sub_1001842E8(_Unwind_Exception *a1)
{
  std::ios_base::failure *v1;

  sub_1001842FC(v1);
  _Unwind_Resume(a1);
}

void sub_1001842FC(std::ios_base::failure *this)
{
  const char *imp;

  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::ios_base::failure::~failure(this);
}

void sub_10018434C()
{
  operator new();
}

void sub_100184428()
{
  std::ios_base::failure *v0;

  std::ios_base::failure::~failure(v0);
  operator delete();
}

void sub_100184454(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100184470(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x50uLL);
  sub_1001846F8((uint64_t)exception, a1);
}

void sub_1001844AC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001844C0(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 40) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 48) = 0;
  std::ios_base::failure::~failure((std::ios_base::failure *)(a1 + 8));
  return a1;
}

void sub_100184518(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 40) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 48) = 0;
  }
  std::ios_base::failure::~failure((std::ios_base::failure *)(a1 + 8));
  operator delete();
}

void sub_100184580(std::ios_base::failure *this)
{
  const char *imp;

  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::ios_base::failure::~failure(this);
}

void sub_1001845D0(std::ios_base::failure *this)
{
  const char *imp;

  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::ios_base::failure::~failure(this);
  operator delete();
}

void sub_10018463C(std::ios_base::failure *a1)
{
  const char *imp;

  a1->__vftable = (std::ios_base::failure_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::ios_base::failure::~failure(a1 - 1);
}

void sub_10018468C(std::ios_base::failure *a1)
{
  const char *imp;

  a1->__vftable = (std::ios_base::failure_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::ios_base::failure::~failure(a1 - 1);
  operator delete();
}

uint64_t sub_1001846F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = &off_1003EDD90;
  *(_QWORD *)(a1 + 48) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)a1 = &off_1003F7EE0;
  *(_QWORD *)(a1 + 8) = off_1003F7F10;
  *(_QWORD *)(a1 + 40) = off_1003F7F38;
  return a1;
}

void sub_1001847B8(_Unwind_Exception *a1)
{
  std::ios_base::failure *v1;

  std::ios_base::failure::~failure(v1);
  _Unwind_Resume(a1);
}

void sub_1001847CC()
{
  operator new();
}

void sub_1001849D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001849F4(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100184A10(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100184A24(std::runtime_error *a1)
{
  const char *imp;
  std::runtime_error v3;
  _QWORD v4[2];
  std::runtime_error v5;
  int v6;

  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_1003F7FB0;
  v4[0] = off_1003F7FD8;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100184D68();
}

void sub_100184BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::underflow_error a12)
{
  std::underflow_error::~underflow_error(&a12);
  _Unwind_Resume(a1);
}

void sub_100184BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::underflow_error a12)
{
  sub_100184D18(&a12);
  _Unwind_Resume(a1);
}

void sub_100184BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::underflow_error a12)
{
  sub_100184D18(&a12);
  _Unwind_Resume(a1);
}

void sub_100184C10(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  std::runtime_error *v5;
  uint64_t v6;
  __int128 v7;

  v5 = std::runtime_error::runtime_error((std::runtime_error *)a1, a2);
  v5[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  v6 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)a1 = off_1003F7FB0;
  *(_QWORD *)(a1 + 16) = off_1003F7FD8;
  sub_10018571C();
}

void sub_100184CC8(_Unwind_Exception *a1)
{
  std::underflow_error *v1;

  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100184CDC(_Unwind_Exception *a1)
{
  std::underflow_error *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::underflow_error_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100184D18(std::underflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(this);
}

void sub_100184D68()
{
  operator new();
}

void sub_100184E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100184E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100184E68(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100184E74(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100184E88(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100184F04(std::underflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(this);
  operator delete();
}

void sub_100184F68(std::underflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(a1 - 1);
}

void sub_100184FB8(std::underflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(a1 - 1);
  operator delete();
}

uint64_t sub_10018501C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8090;
  *(_QWORD *)(a1 + 8) = off_1003F80C0;
  *(_QWORD *)(a1 + 24) = off_1003F80E8;
  v6 = *(_QWORD *)(a2 + 24);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100185110(_Unwind_Exception *a1)
{
  std::underflow_error *v1;

  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100185124(_Unwind_Exception *a1)
{
  std::underflow_error *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 32);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 32) = 0;
  }
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100185160(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8030;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001851AC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8030;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_100185208(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100185240(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt15underflow_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt15underflow_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt15underflow_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt15underflow_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_1001852AC()
{
  return 0;
}

uint64_t sub_1001852B4(uint64_t a1)
{
  return a1 + 24;
}

void sub_1001852BC()
{
  operator new();
}

void sub_100185390()
{
  std::underflow_error *v0;

  std::underflow_error::~underflow_error(v0);
  operator delete();
}

void sub_1001853BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001853D8(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100185660((uint64_t)exception, a1);
}

void sub_100185414(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100185428(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::underflow_error::~underflow_error((std::underflow_error *)(a1 + 8));
  return a1;
}

void sub_100185480(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::underflow_error::~underflow_error((std::underflow_error *)(a1 + 8));
  operator delete();
}

void sub_1001854E8(std::underflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(this);
}

void sub_100185538(std::underflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(this);
  operator delete();
}

void sub_1001855A4(std::underflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::underflow_error::~underflow_error(a1 - 1);
}

void sub_1001855F4(std::underflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::underflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(a1 - 1);
  operator delete();
}

uint64_t sub_100185660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8090;
  *(_QWORD *)(a1 + 8) = off_1003F80C0;
  *(_QWORD *)(a1 + 24) = off_1003F80E8;
  return a1;
}

void sub_100185708(_Unwind_Exception *a1)
{
  std::underflow_error *v1;

  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018571C()
{
  operator new();
}

void sub_100185920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100185944(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100185960(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100185974(std::runtime_error *a1)
{
  const char *imp;
  std::runtime_error v3;
  _QWORD v4[2];
  std::runtime_error v5;
  int v6;

  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_1003F8160;
  v4[0] = off_1003F8188;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100185CB8();
}

void sub_100185B24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::overflow_error a12)
{
  std::overflow_error::~overflow_error(&a12);
  _Unwind_Resume(a1);
}

void sub_100185B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::overflow_error a12)
{
  sub_100185C68(&a12);
  _Unwind_Resume(a1);
}

void sub_100185B4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::overflow_error a12)
{
  sub_100185C68(&a12);
  _Unwind_Resume(a1);
}

void sub_100185B60(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  std::runtime_error *v5;
  uint64_t v6;
  __int128 v7;

  v5 = std::runtime_error::runtime_error((std::runtime_error *)a1, a2);
  v5[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  v6 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)a1 = off_1003F8160;
  *(_QWORD *)(a1 + 16) = off_1003F8188;
  sub_10018666C();
}

void sub_100185C18(_Unwind_Exception *a1)
{
  std::overflow_error *v1;

  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100185C2C(_Unwind_Exception *a1)
{
  std::overflow_error *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::overflow_error_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100185C68(std::overflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::overflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::overflow_error::~overflow_error(this);
}

void sub_100185CB8()
{
  operator new();
}

void sub_100185DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100185DD8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100185DB8(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100185DC4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100185DD8(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100185E54(std::overflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::overflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::overflow_error::~overflow_error(this);
  operator delete();
}

void sub_100185EB8(std::overflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::overflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::overflow_error::~overflow_error(a1 - 1);
}

void sub_100185F08(std::overflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::overflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::overflow_error::~overflow_error(a1 - 1);
  operator delete();
}

uint64_t sub_100185F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8240;
  *(_QWORD *)(a1 + 8) = off_1003F8270;
  *(_QWORD *)(a1 + 24) = off_1003F8298;
  v6 = *(_QWORD *)(a2 + 24);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100186060(_Unwind_Exception *a1)
{
  std::overflow_error *v1;

  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100186074(_Unwind_Exception *a1)
{
  std::overflow_error *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 32);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 32) = 0;
  }
  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001860B0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F81E0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001860FC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F81E0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_100186158(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100186190(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt14overflow_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt14overflow_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt14overflow_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt14overflow_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_1001861FC()
{
  return 0;
}

uint64_t sub_100186204(uint64_t a1)
{
  return a1 + 24;
}

void sub_10018620C()
{
  operator new();
}

void sub_1001862E0()
{
  std::overflow_error *v0;

  std::overflow_error::~overflow_error(v0);
  operator delete();
}

void sub_10018630C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100186328(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1001865B0((uint64_t)exception, a1);
}

void sub_100186364(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100186378(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::overflow_error::~overflow_error((std::overflow_error *)(a1 + 8));
  return a1;
}

void sub_1001863D0(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::overflow_error::~overflow_error((std::overflow_error *)(a1 + 8));
  operator delete();
}

void sub_100186438(std::overflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::overflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::overflow_error::~overflow_error(this);
}

void sub_100186488(std::overflow_error *this)
{
  const char *imp;

  this[1].__vftable = (std::overflow_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::overflow_error::~overflow_error(this);
  operator delete();
}

void sub_1001864F4(std::overflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::overflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::overflow_error::~overflow_error(a1 - 1);
}

void sub_100186544(std::overflow_error *a1)
{
  const char *imp;

  a1->__vftable = (std::overflow_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::overflow_error::~overflow_error(a1 - 1);
  operator delete();
}

uint64_t sub_1001865B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8240;
  *(_QWORD *)(a1 + 8) = off_1003F8270;
  *(_QWORD *)(a1 + 24) = off_1003F8298;
  return a1;
}

void sub_100186658(_Unwind_Exception *a1)
{
  std::overflow_error *v1;

  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018666C()
{
  operator new();
}

void sub_100186870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100186894(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_1001868B0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1001868C4(std::runtime_error *a1)
{
  const char *imp;
  std::runtime_error v3;
  _QWORD v4[2];
  std::runtime_error v5;
  int v6;

  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_1003F8310;
  v4[0] = off_1003F8338;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100186C08();
}

void sub_100186A74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::range_error a12)
{
  std::range_error::~range_error(&a12);
  _Unwind_Resume(a1);
}

void sub_100186A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::range_error a12)
{
  sub_100186BB8(&a12);
  _Unwind_Resume(a1);
}

void sub_100186A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::range_error a12)
{
  sub_100186BB8(&a12);
  _Unwind_Resume(a1);
}

void sub_100186AB0(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  std::runtime_error *v5;
  uint64_t v6;
  __int128 v7;

  v5 = std::runtime_error::runtime_error((std::runtime_error *)a1, a2);
  v5[1].__vftable = (std::runtime_error_vtbl *)&off_1003EDD90;
  v6 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)a1 = off_1003F8310;
  *(_QWORD *)(a1 + 16) = off_1003F8338;
  sub_1001875BC();
}

void sub_100186B68(_Unwind_Exception *a1)
{
  std::range_error *v1;

  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

void sub_100186B7C(_Unwind_Exception *a1)
{
  std::range_error *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::range_error_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

void sub_100186BB8(std::range_error *this)
{
  const char *imp;

  this[1].__vftable = (std::range_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::range_error::~range_error(this);
}

void sub_100186C08()
{
  operator new();
}

void sub_100186CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100186D28((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100186D08(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100186D14(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100186D28(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100186DA4(std::range_error *this)
{
  const char *imp;

  this[1].__vftable = (std::range_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::range_error::~range_error(this);
  operator delete();
}

void sub_100186E08(std::range_error *a1)
{
  const char *imp;

  a1->__vftable = (std::range_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::range_error::~range_error(a1 - 1);
}

void sub_100186E58(std::range_error *a1)
{
  const char *imp;

  a1->__vftable = (std::range_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::range_error::~range_error(a1 - 1);
  operator delete();
}

uint64_t sub_100186EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F83F0;
  *(_QWORD *)(a1 + 8) = off_1003F8420;
  *(_QWORD *)(a1 + 24) = off_1003F8448;
  v6 = *(_QWORD *)(a2 + 24);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100186FB0(_Unwind_Exception *a1)
{
  std::range_error *v1;

  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

void sub_100186FC4(_Unwind_Exception *a1)
{
  std::range_error *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 32);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 32) = 0;
  }
  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100187000(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8390;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10018704C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8390;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_1001870A8(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_1001870E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt11range_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt11range_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt11range_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt11range_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_10018714C()
{
  return 0;
}

uint64_t sub_100187154(uint64_t a1)
{
  return a1 + 24;
}

void sub_10018715C()
{
  operator new();
}

void sub_100187230()
{
  std::range_error *v0;

  std::range_error::~range_error(v0);
  operator delete();
}

void sub_10018725C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100187278(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100187500((uint64_t)exception, a1);
}

void sub_1001872B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001872C8(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::range_error::~range_error((std::range_error *)(a1 + 8));
  return a1;
}

void sub_100187320(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::range_error::~range_error((std::range_error *)(a1 + 8));
  operator delete();
}

void sub_100187388(std::range_error *this)
{
  const char *imp;

  this[1].__vftable = (std::range_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::range_error::~range_error(this);
}

void sub_1001873D8(std::range_error *this)
{
  const char *imp;

  this[1].__vftable = (std::range_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::range_error::~range_error(this);
  operator delete();
}

void sub_100187444(std::range_error *a1)
{
  const char *imp;

  a1->__vftable = (std::range_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::range_error::~range_error(a1 - 1);
}

void sub_100187494(std::range_error *a1)
{
  const char *imp;

  a1->__vftable = (std::range_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::range_error::~range_error(a1 - 1);
  operator delete();
}

uint64_t sub_100187500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F83F0;
  *(_QWORD *)(a1 + 8) = off_1003F8420;
  *(_QWORD *)(a1 + 24) = off_1003F8448;
  return a1;
}

void sub_1001875A8(_Unwind_Exception *a1)
{
  std::range_error *v1;

  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001875BC()
{
  operator new();
}

void sub_1001877C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001877E4(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100187800(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100187814(std::logic_error *a1)
{
  const char *imp;
  std::logic_error v3;
  _QWORD v4[2];
  std::logic_error v5;
  int v6;

  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_1003F84C0;
  v4[0] = off_1003F84E8;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100187B38();
}

void sub_1001879B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::logic_error a12)
{
  std::logic_error::~logic_error(&a12);
  _Unwind_Resume(a1);
}

void sub_1001879C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::logic_error a12)
{
  sub_100187AE8(&a12);
  _Unwind_Resume(a1);
}

void sub_1001879DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::logic_error a12)
{
  sub_100187AE8(&a12);
  _Unwind_Resume(a1);
}

void sub_1001879F0(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;

  std::logic_error::logic_error((std::logic_error *)a1, a2)[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  v5 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  v6 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)a1 = off_1003F84C0;
  *(_QWORD *)(a1 + 16) = off_1003F84E8;
  sub_1001884BC();
}

void sub_100187A98(_Unwind_Exception *a1)
{
  std::logic_error *v1;

  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_100187AAC(_Unwind_Exception *a1)
{
  std::logic_error *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::logic_error_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_100187AE8(std::logic_error *this)
{
  const char *imp;

  this[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::logic_error::~logic_error(this);
}

void sub_100187B38()
{
  operator new();
}

void sub_100187C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100187C58((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100187C38(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100187C44(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100187C58(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100187CD4(std::logic_error *this)
{
  const char *imp;

  this[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(this);
  operator delete();
}

void sub_100187D38(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::logic_error::~logic_error(a1 - 1);
}

void sub_100187D88(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(a1 - 1);
  operator delete();
}

uint64_t sub_100187DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F85A0;
  *(_QWORD *)(a1 + 8) = off_1003F85D0;
  *(_QWORD *)(a1 + 24) = off_1003F85F8;
  v6 = *(_QWORD *)(a2 + 24);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100187ED0(_Unwind_Exception *a1)
{
  std::logic_error *v1;

  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_100187EE4(_Unwind_Exception *a1)
{
  std::logic_error *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 32);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 32) = 0;
  }
  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100187F20(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8540;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100187F6C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8540;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_100187FC8(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100188000(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt11logic_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt11logic_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt11logic_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt11logic_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_10018806C()
{
  return 0;
}

uint64_t sub_100188074(uint64_t a1)
{
  return a1 + 24;
}

void sub_10018807C()
{
  operator new();
}

void sub_100188140()
{
  std::logic_error *v0;

  std::logic_error::~logic_error(v0);
  operator delete();
}

void sub_10018816C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100188188(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100188410((uint64_t)exception, a1);
}

void sub_1001881C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001881D8(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));
  return a1;
}

void sub_100188230(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));
  operator delete();
}

void sub_100188298(std::logic_error *this)
{
  const char *imp;

  this[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::logic_error::~logic_error(this);
}

void sub_1001882E8(std::logic_error *this)
{
  const char *imp;

  this[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(this);
  operator delete();
}

void sub_100188354(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::logic_error::~logic_error(a1 - 1);
}

void sub_1001883A4(std::logic_error *a1)
{
  const char *imp;

  a1->__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(a1 - 1);
  operator delete();
}

uint64_t sub_100188410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F85A0;
  *(_QWORD *)(a1 + 8) = off_1003F85D0;
  *(_QWORD *)(a1 + 24) = off_1003F85F8;
  return a1;
}

void sub_1001884A8(_Unwind_Exception *a1)
{
  std::logic_error *v1;

  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001884BC()
{
  operator new();
}

void sub_1001886C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001886E4(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100188700(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100188714(std::logic_error *a1)
{
  const char *imp;
  std::logic_error v3;
  _QWORD v4[2];
  std::logic_error v5;
  int v6;

  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_1003F8670;
  v4[0] = off_1003F8698;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100188A58();
}

void sub_1001888C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::out_of_range a12)
{
  std::out_of_range::~out_of_range(&a12);
  _Unwind_Resume(a1);
}

void sub_1001888D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::out_of_range a12)
{
  sub_100188A08(&a12);
  _Unwind_Resume(a1);
}

void sub_1001888EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::out_of_range a12)
{
  sub_100188A08(&a12);
  _Unwind_Resume(a1);
}

void sub_100188900(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  std::logic_error *v5;
  uint64_t v6;
  __int128 v7;

  v5 = std::logic_error::logic_error((std::logic_error *)a1, a2);
  v5[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  v6 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)a1 = off_1003F8670;
  *(_QWORD *)(a1 + 16) = off_1003F8698;
  sub_10018940C();
}

void sub_1001889B8(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_1001889CC(_Unwind_Exception *a1)
{
  std::out_of_range *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::out_of_range_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100188A08(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_100188A58()
{
  operator new();
}

void sub_100188B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100188B78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100188B58(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100188B64(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100188B78(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100188BF4(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_100188C58(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100188CA8(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

uint64_t sub_100188D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8750;
  *(_QWORD *)(a1 + 8) = off_1003F8780;
  *(_QWORD *)(a1 + 24) = off_1003F87A8;
  v6 = *(_QWORD *)(a2 + 24);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100188E00(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100188E14(_Unwind_Exception *a1)
{
  std::out_of_range *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 32);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 32) = 0;
  }
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100188E50(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F86F0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100188E9C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F86F0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_100188EF8(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100188F30(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt12out_of_rangeEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt12out_of_rangeEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12out_of_rangeEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12out_of_rangeEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_100188F9C()
{
  return 0;
}

uint64_t sub_100188FA4(uint64_t a1)
{
  return a1 + 24;
}

void sub_100188FAC()
{
  operator new();
}

void sub_100189080()
{
  std::out_of_range *v0;

  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_1001890AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001890C8(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100189350((uint64_t)exception, a1);
}

void sub_100189104(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100189118(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_100189170(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  operator delete();
}

void sub_1001891D8(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_100189228(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_100189294(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_1001892E4(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

uint64_t sub_100189350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8750;
  *(_QWORD *)(a1 + 8) = off_1003F8780;
  *(_QWORD *)(a1 + 24) = off_1003F87A8;
  return a1;
}

void sub_1001893F8(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_10018940C()
{
  operator new();
}

void sub_100189610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100189634(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_100189650(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_100189664(std::logic_error *a1)
{
  const char *imp;
  std::logic_error v3;
  _QWORD v4[2];
  std::logic_error v5;
  int v6;

  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_1003F8820;
  v4[0] = off_1003F8848;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_1001899A8();
}

void sub_100189814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::length_error a12)
{
  std::length_error::~length_error(&a12);
  _Unwind_Resume(a1);
}

void sub_100189828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::length_error a12)
{
  sub_100189958(&a12);
  _Unwind_Resume(a1);
}

void sub_10018983C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::length_error a12)
{
  sub_100189958(&a12);
  _Unwind_Resume(a1);
}

void sub_100189850(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  std::logic_error *v5;
  uint64_t v6;
  __int128 v7;

  v5 = std::logic_error::logic_error((std::logic_error *)a1, a2);
  v5[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  v6 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)a1 = off_1003F8820;
  *(_QWORD *)(a1 + 16) = off_1003F8848;
  sub_10018A35C();
}

void sub_100189908(_Unwind_Exception *a1)
{
  std::length_error *v1;

  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018991C(_Unwind_Exception *a1)
{
  std::length_error *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::length_error_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

void sub_100189958(std::length_error *this)
{
  const char *imp;

  this[1].__vftable = (std::length_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::length_error::~length_error(this);
}

void sub_1001899A8()
{
  operator new();
}

void sub_100189A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100189AC8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100189AA8(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_100189AB4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100189AC8(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_100189B44(std::length_error *this)
{
  const char *imp;

  this[1].__vftable = (std::length_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::length_error::~length_error(this);
  operator delete();
}

void sub_100189BA8(std::length_error *a1)
{
  const char *imp;

  a1->__vftable = (std::length_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::length_error::~length_error(a1 - 1);
}

void sub_100189BF8(std::length_error *a1)
{
  const char *imp;

  a1->__vftable = (std::length_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::length_error::~length_error(a1 - 1);
  operator delete();
}

uint64_t sub_100189C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8900;
  *(_QWORD *)(a1 + 8) = off_1003F8930;
  *(_QWORD *)(a1 + 24) = off_1003F8958;
  v6 = *(_QWORD *)(a2 + 24);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100189D50(_Unwind_Exception *a1)
{
  std::length_error *v1;

  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

void sub_100189D64(_Unwind_Exception *a1)
{
  std::length_error *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 32);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 32) = 0;
  }
  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100189DA0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F88A0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100189DEC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F88A0;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_100189E48(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100189E80(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt12length_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt12length_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12length_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12length_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_100189EEC()
{
  return 0;
}

uint64_t sub_100189EF4(uint64_t a1)
{
  return a1 + 24;
}

void sub_100189EFC()
{
  operator new();
}

void sub_100189FD0()
{
  std::length_error *v0;

  std::length_error::~length_error(v0);
  operator delete();
}

void sub_100189FFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018A018(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018A2A0((uint64_t)exception, a1);
}

void sub_10018A054(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018A068(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::length_error::~length_error((std::length_error *)(a1 + 8));
  return a1;
}

void sub_10018A0C0(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::length_error::~length_error((std::length_error *)(a1 + 8));
  operator delete();
}

void sub_10018A128(std::length_error *this)
{
  const char *imp;

  this[1].__vftable = (std::length_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::length_error::~length_error(this);
}

void sub_10018A178(std::length_error *this)
{
  const char *imp;

  this[1].__vftable = (std::length_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::length_error::~length_error(this);
  operator delete();
}

void sub_10018A1E4(std::length_error *a1)
{
  const char *imp;

  a1->__vftable = (std::length_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::length_error::~length_error(a1 - 1);
}

void sub_10018A234(std::length_error *a1)
{
  const char *imp;

  a1->__vftable = (std::length_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::length_error::~length_error(a1 - 1);
  operator delete();
}

uint64_t sub_10018A2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8900;
  *(_QWORD *)(a1 + 8) = off_1003F8930;
  *(_QWORD *)(a1 + 24) = off_1003F8958;
  return a1;
}

void sub_10018A348(_Unwind_Exception *a1)
{
  std::length_error *v1;

  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018A35C()
{
  operator new();
}

void sub_10018A560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018A584(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10018A5A0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_10018A5B4(std::logic_error *a1)
{
  const char *imp;
  std::logic_error v3;
  _QWORD v4[2];
  std::logic_error v5;
  int v6;

  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_1003F89D0;
  v4[0] = off_1003F89F8;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_10018A8F8();
}

void sub_10018A764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::invalid_argument a12)
{
  std::invalid_argument::~invalid_argument(&a12);
  _Unwind_Resume(a1);
}

void sub_10018A778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::invalid_argument a12)
{
  sub_10018A8A8(&a12);
  _Unwind_Resume(a1);
}

void sub_10018A78C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::invalid_argument a12)
{
  sub_10018A8A8(&a12);
  _Unwind_Resume(a1);
}

void sub_10018A7A0(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  std::logic_error *v5;
  uint64_t v6;
  __int128 v7;

  v5 = std::logic_error::logic_error((std::logic_error *)a1, a2);
  v5[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  v6 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)a1 = off_1003F89D0;
  *(_QWORD *)(a1 + 16) = off_1003F89F8;
  sub_10018B2AC();
}

void sub_10018A858(_Unwind_Exception *a1)
{
  std::invalid_argument *v1;

  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_10018A86C(_Unwind_Exception *a1)
{
  std::invalid_argument *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::invalid_argument_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_10018A8A8(std::invalid_argument *this)
{
  const char *imp;

  this[1].__vftable = (std::invalid_argument_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::invalid_argument::~invalid_argument(this);
}

void sub_10018A8F8()
{
  operator new();
}

void sub_10018A9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10018AA18((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10018A9F8(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_10018AA04(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_10018AA18(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_10018AA94(std::invalid_argument *this)
{
  const char *imp;

  this[1].__vftable = (std::invalid_argument_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(this);
  operator delete();
}

void sub_10018AAF8(std::invalid_argument *a1)
{
  const char *imp;

  a1->__vftable = (std::invalid_argument_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::invalid_argument::~invalid_argument(a1 - 1);
}

void sub_10018AB48(std::invalid_argument *a1)
{
  const char *imp;

  a1->__vftable = (std::invalid_argument_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(a1 - 1);
  operator delete();
}

uint64_t sub_10018ABAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8AB0;
  *(_QWORD *)(a1 + 8) = off_1003F8AE0;
  *(_QWORD *)(a1 + 24) = off_1003F8B08;
  v6 = *(_QWORD *)(a2 + 24);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_10018ACA0(_Unwind_Exception *a1)
{
  std::invalid_argument *v1;

  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_10018ACB4(_Unwind_Exception *a1)
{
  std::invalid_argument *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 32);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 32) = 0;
  }
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018ACF0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8A50;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10018AD3C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8A50;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_10018AD98(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10018ADD0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt16invalid_argumentEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt16invalid_argumentEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt16invalid_argumentEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt16invalid_argumentEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_10018AE3C()
{
  return 0;
}

uint64_t sub_10018AE44(uint64_t a1)
{
  return a1 + 24;
}

void sub_10018AE4C()
{
  operator new();
}

void sub_10018AF20()
{
  std::invalid_argument *v0;

  std::invalid_argument::~invalid_argument(v0);
  operator delete();
}

void sub_10018AF4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018AF68(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018B1F0((uint64_t)exception, a1);
}

void sub_10018AFA4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018AFB8(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::invalid_argument::~invalid_argument((std::invalid_argument *)(a1 + 8));
  return a1;
}

void sub_10018B010(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::invalid_argument::~invalid_argument((std::invalid_argument *)(a1 + 8));
  operator delete();
}

void sub_10018B078(std::invalid_argument *this)
{
  const char *imp;

  this[1].__vftable = (std::invalid_argument_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::invalid_argument::~invalid_argument(this);
}

void sub_10018B0C8(std::invalid_argument *this)
{
  const char *imp;

  this[1].__vftable = (std::invalid_argument_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(this);
  operator delete();
}

void sub_10018B134(std::invalid_argument *a1)
{
  const char *imp;

  a1->__vftable = (std::invalid_argument_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::invalid_argument::~invalid_argument(a1 - 1);
}

void sub_10018B184(std::invalid_argument *a1)
{
  const char *imp;

  a1->__vftable = (std::invalid_argument_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(a1 - 1);
  operator delete();
}

uint64_t sub_10018B1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8AB0;
  *(_QWORD *)(a1 + 8) = off_1003F8AE0;
  *(_QWORD *)(a1 + 24) = off_1003F8B08;
  return a1;
}

void sub_10018B298(_Unwind_Exception *a1)
{
  std::invalid_argument *v1;

  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_10018B2AC()
{
  operator new();
}

void sub_10018B4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018B4D4(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10018B4F0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_10018B504(std::logic_error *a1)
{
  const char *imp;
  std::logic_error v3;
  _QWORD v4[2];
  std::logic_error v5;
  int v6;

  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_1003EDD90;
  v4[1] = imp;
  if (imp)
    (*(void (**)(const char *))(*(_QWORD *)imp + 24))(imp);
  v5 = a1[2];
  v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_1003F8B80;
  v4[0] = off_1003F8BA8;
  sub_1000CE34C((uint64_t)v4, (uint64_t)&a1[1]);
  sub_10018B848();
}

void sub_10018B6B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::domain_error a12)
{
  std::domain_error::~domain_error(&a12);
  _Unwind_Resume(a1);
}

void sub_10018B6C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::domain_error a12)
{
  sub_10018B7F8(&a12);
  _Unwind_Resume(a1);
}

void sub_10018B6DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::domain_error a12)
{
  sub_10018B7F8(&a12);
  _Unwind_Resume(a1);
}

void sub_10018B6F0(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  std::logic_error *v5;
  uint64_t v6;
  __int128 v7;

  v5 = std::logic_error::logic_error((std::logic_error *)a1, a2);
  v5[1].__vftable = (std::logic_error_vtbl *)&off_1003EDD90;
  v6 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)a1 = off_1003F8B80;
  *(_QWORD *)(a1 + 16) = off_1003F8BA8;
  sub_10018C1FC();
}

void sub_10018B7A8(_Unwind_Exception *a1)
{
  std::domain_error *v1;

  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018B7BC(_Unwind_Exception *a1)
{
  std::domain_error *v1;
  uint64_t v2;
  const char *imp;

  v1[1].__vftable = (std::domain_error_vtbl *)(v2 + 16);
  imp = v1[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      v1[1].__imp_.__imp_ = 0;
  }
  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018B7F8(std::domain_error *this)
{
  const char *imp;

  this[1].__vftable = (std::domain_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::domain_error::~domain_error(this);
}

void sub_10018B848()
{
  operator new();
}

void sub_10018B934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10018B968((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10018B948(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_rethrow();
}

void sub_10018B954(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_10018B968(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_10018B9E4(std::domain_error *this)
{
  const char *imp;

  this[1].__vftable = (std::domain_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::domain_error::~domain_error(this);
  operator delete();
}

void sub_10018BA48(std::domain_error *a1)
{
  const char *imp;

  a1->__vftable = (std::domain_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::domain_error::~domain_error(a1 - 1);
}

void sub_10018BA98(std::domain_error *a1)
{
  const char *imp;

  a1->__vftable = (std::domain_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::domain_error::~domain_error(a1 - 1);
  operator delete();
}

uint64_t sub_10018BAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8C60;
  *(_QWORD *)(a1 + 8) = off_1003F8C90;
  *(_QWORD *)(a1 + 24) = off_1003F8CB8;
  v6 = *(_QWORD *)(a2 + 24);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_10018BBF0(_Unwind_Exception *a1)
{
  std::domain_error *v1;

  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018BC04(_Unwind_Exception *a1)
{
  std::domain_error *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v3 + 16;
  v5 = *(_QWORD *)(v2 + 32);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5))
      *(_QWORD *)(v2 + 32) = 0;
  }
  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018BC40(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8C00;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10018BC8C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F8C00;
  if (*(_BYTE *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 32) + 16))(a1 + 32);
    *(_BYTE *)(a1 + 24) = 0;
  }
  operator delete();
}

uint64_t sub_10018BCE8(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    v1 = result + 32;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 32) + 16))(result + 32);
    *(_BYTE *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10018BD20(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt12domain_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt12domain_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12domain_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12domain_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_10018BD8C()
{
  return 0;
}

uint64_t sub_10018BD94(uint64_t a1)
{
  return a1 + 24;
}

void sub_10018BD9C()
{
  operator new();
}

void sub_10018BE70()
{
  std::domain_error *v0;

  std::domain_error::~domain_error(v0);
  operator delete();
}

void sub_10018BE9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018BEB8(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018C140((uint64_t)exception, a1);
}

void sub_10018BEF4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018BF08(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::domain_error::~domain_error((std::domain_error *)(a1 + 8));
  return a1;
}

void sub_10018BF60(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::domain_error::~domain_error((std::domain_error *)(a1 + 8));
  operator delete();
}

void sub_10018BFC8(std::domain_error *this)
{
  const char *imp;

  this[1].__vftable = (std::domain_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::domain_error::~domain_error(this);
}

void sub_10018C018(std::domain_error *this)
{
  const char *imp;

  this[1].__vftable = (std::domain_error_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::domain_error::~domain_error(this);
  operator delete();
}

void sub_10018C084(std::domain_error *a1)
{
  const char *imp;

  a1->__vftable = (std::domain_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::domain_error::~domain_error(a1 - 1);
}

void sub_10018C0D4(std::domain_error *a1)
{
  const char *imp;

  a1->__vftable = (std::domain_error_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::domain_error::~domain_error(a1 - 1);
  operator delete();
}

uint64_t sub_10018C140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8C60;
  *(_QWORD *)(a1 + 8) = off_1003F8C90;
  *(_QWORD *)(a1 + 24) = off_1003F8CB8;
  return a1;
}

void sub_10018C1E8(_Unwind_Exception *a1)
{
  std::domain_error *v1;

  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018C1FC()
{
  operator new();
}

void sub_10018C400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10017F1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018C424(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10018C440(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_10018C454()
{
  operator new();
}

void sub_10018C66C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1000EFE2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018C690(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10018C6AC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_10018C6C0()
{
  operator new();
}

void sub_10018C8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10016314C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018C8FC(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_10018C918(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_10018C92C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1003F8D30;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10018C93C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1003F8D30;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_10018C96C(void (__cdecl ***a1)(std::ofstream *__hidden this))
{
  _QWORD *v2;

  v2 = a1 + 52;
  std::filebuf::~filebuf(a1 + 1);
  std::ios::~ios(v2);
  operator delete();
}

void sub_10018C9DC(_QWORD *a1)
{
  void (__cdecl ***v1)(std::ofstream *__hidden);

  v1 = (void (__cdecl ***)(std::ofstream *__hidden))((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::filebuf::~filebuf(v1 + 1);
  std::ios::~ios(v1 + 52);
  operator delete();
}

void sub_10018CA54(_QWORD *a1)
{
  _QWORD *v2;

  *a1 = off_1003F8E08;
  v2 = a1 + 52;
  a1[52] = off_1003F8E30;
  std::filebuf::~filebuf(a1 + 1);
  std::ostream::~ostream(a1, off_1003F8DD0);
  std::ios::~ios(v2);
  operator delete();
}

uint64_t sub_10018CABC(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  *v1 = off_1003F8E08;
  v1[52] = off_1003F8E30;
  std::filebuf::~filebuf(v1 + 1);
  std::ostream::~ostream(v1, off_1003F8DD0);
  return std::ios::~ios(v1 + 52);
}

void sub_10018CB14(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  *v1 = off_1003F8E08;
  v1[52] = off_1003F8E30;
  std::filebuf::~filebuf(v1 + 1);
  std::ostream::~ostream(v1, off_1003F8DD0);
  std::ios::~ios(v1 + 52);
  operator delete();
}

void sub_10018CB84()
{
  sub_10018CB98("basic_string");
}

void sub_10018CB98(const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10018CBE8(exception, a1);
}

void sub_10018CBD4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_10018CBE8(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  return result;
}

uint64_t sub_10018CC0C()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10018CC68()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_10018CCC4(int a1@<W8>)
{
  sub_10018CCD0(a1, 0);
}

void sub_10018CCD0(int a1, size_t __len)
{
  _QWORD *v3;
  size_t v4;
  size_t v5;
  _QWORD __b[2];
  unint64_t v7;

  if (__len >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  if (__len >= 0x17)
  {
    v4 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v4 = __len | 7;
    v5 = v4 + 1;
    v3 = operator new(v4 + 1);
    __b[1] = __len;
    v7 = v5 | 0x8000000000000000;
    __b[0] = v3;
  }
  else
  {
    HIBYTE(v7) = __len;
    v3 = __b;
    if (!__len)
    {
LABEL_10:
      *((_BYTE *)v3 + __len) = 0;
      sub_10016A398();
    }
  }
  memset(v3, 32, __len);
  goto LABEL_10;
}

void sub_10018CD80(void *__p, uint64_t a2, int a3, __int16 a4, char a5, char a6, uint64_t a7, char a8, std::string *__pa, std::string::size_type a10, int a11, __int16 a12, char a13, unsigned __int8 a14, uint64_t a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v22;
  std::string *v23;
  std::string *v24;
  std::string *v26;
  __int128 v27;
  std::exception_ptr v28;

  if ((a14 & 0x80u) == 0)
    v24 = v23;
  else
    v24 = __pa;
  if ((a14 & 0x80u) == 0)
    a10 = a14;
  v26 = std::string::append((std::string *)&a17, (const std::string::value_type *)v24, a10);
  v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  *(_QWORD *)(v22 + 16) = *((_QWORD *)&v26->__r_.__value_.__l + 2);
  *(_OWORD *)v22 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if ((char)a14 < 0)
    operator delete(__pa);
  if (a22 < 0)
    operator delete(a17);
  std::current_exception();
  v28.__ptr_ = &a16;
  std::rethrow_exception(v28);
  __break(1u);
}

void sub_10018CDEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, std::exception_ptr a13, char a14, void *a15, __int128 a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  std::string *v23;
  void *v26;
  const std::nested_exception *v27;
  char *v28;
  std::string *v29;
  __int128 v30;
  const std::string::value_type *v31;
  std::string::size_type v32;
  __int128 v33;
  int64_t v34;
  std::exception_ptr v35;
  char v36;
  std::string v37;

  if (!a2)
    _Unwind_Resume(exception_object);
  std::exception_ptr::~exception_ptr(&v35);
  v26 = __cxa_begin_catch(exception_object);
  if (a2 == 2)
  {
    if (v27)
    {
      std::nested_exception::rethrow_nested(v27);
      JUMPOUT(0x10018CF3CLL);
    }
    __cxa_end_catch();
  }
  else
  {
    v28 = (char *)operator new(0x28uLL);
    strcpy(v28, "unrecognized nested exception type");
    v37.__r_.__value_.__r.__words[0] = (std::string::size_type)v28;
    *(_OWORD *)&v37.__r_.__value_.__r.__words[1] = xmmword_100382FD0;
    v36 = 1;
    __cxa_end_catch();
    v29 = std::string::insert(&v37, 0, "\n");
    v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
    v34 = v29->__r_.__value_.__r.__words[2];
    v33 = v30;
    v29->__r_.__value_.__l.__size_ = 0;
    v29->__r_.__value_.__r.__words[2] = 0;
    v29->__r_.__value_.__r.__words[0] = 0;
    if (v34 >= 0)
      v31 = (const std::string::value_type *)&v33;
    else
      v31 = (const std::string::value_type *)v33;
    if (v34 >= 0)
      v32 = HIBYTE(v34);
    else
      v32 = *((_QWORD *)&v33 + 1);
    std::string::append(v23, v31, v32);
    if (SHIBYTE(v34) < 0)
      operator delete((void *)v33);
    if (v36 && SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
  }
}

void sub_10018CF40(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  if (a2)
  {
    __cxa_begin_catch(a1);
    sub_10018CCD0((int)&a9, v9 + 1);
  }
  _Unwind_Resume(a1);
}

void sub_10018CF5C()
{
  __cxa_end_catch();
  JUMPOUT(0x10018CE30);
}

void sub_10018CF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;

  __cxa_end_catch();
  if (*(char *)(v23 + 23) < 0)
  {
    operator delete(*(void **)v23);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_10018D008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a14 < 0)
    operator delete(__p);
  if ((a22 & 0x80000000) == 0)
    JUMPOUT(0x10018D024);
  operator delete(a17);
  _Unwind_Resume(a1);
}

void sub_10018D02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    JUMPOUT(0x10018D038);
  _Unwind_Resume(a1);
}

uint64_t sub_10018D04C(uint64_t a1)
{
  sub_100171244(a1);
  return a1;
}

_QWORD *sub_10018D074(_QWORD *a1, uint64_t a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;

  sub_100171224(a2);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_1000F0508(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_10018D0F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::terminate_handler sub_10018D110()
{
  std::terminate_handler result;

  result = std::set_terminate((std::terminate_handler)sub_10018D150);
  while (!__ldaxr((unint64_t *)&unk_100419C00))
  {
    if (!__stlxr((unint64_t)result, (unint64_t *)&unk_100419C00))
      return result;
  }
  __clrex();
  return result;
}

void sub_10018D150()
{
  unint64_t v0;
  void (*v1)();
  NSObject *v2;
  NSObject *v3;
  std::exception_ptr v4;
  uint8_t v5[36];
  std::exception_ptr v6;
  std::exception_ptr v7;
  void (*v8)();

  v8 = 0;
  v0 = atomic_load((unint64_t *)&unk_100419C00);
  if (v0)
    v1 = (void (*)())v0;
  else
    v1 = sub_10018E93C;
  v8 = v1;
  std::current_exception();
  if (!v7.__ptr_)
  {
    if (qword_100417ED8 == -1)
    {
      v2 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
        goto LABEL_8;
    }
    else
    {
      dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
      v2 = qword_100417EE0;
      if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      {
LABEL_8:
        v1();
        if (qword_100417ED8 == -1)
        {
          v3 = qword_100417EE0;
          if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
            goto LABEL_11;
        }
        else
        {
          dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
          v3 = qword_100417EE0;
          if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
LABEL_11:
            abort();
        }
        *(_WORD *)v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Unexpected return from no-return handler", v5, 2u);
        goto LABEL_11;
      }
    }
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "std::terminate() called but there's no exception", v5, 2u);
    goto LABEL_8;
  }
  std::exception_ptr::exception_ptr(&v6, &v7);
  v4.__ptr_ = &v6;
  std::rethrow_exception(v4);
  __break(1u);
}

void sub_10018D3FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  __cxa_end_catch();
  std::exception_ptr::~exception_ptr(&a15);
  _Unwind_Resume(a1);
}

void sub_10018D438()
{
  __cxa_end_catch();
  JUMPOUT(0x10018D428);
}

void sub_10018D444(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x10018D428);
}

void sub_10018D46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::exception_ptr::~exception_ptr(&a15);
  _Unwind_Resume(a1);
}

void sub_10018D480()
{
  void (__cdecl **v0)(std::ostringstream *__hidden);
  uint64_t v1;
  std::ios_base *v2;
  NSObject *v3;
  std::string *v4;
  std::runtime_error *exception;
  std::string v6;
  void (__cdecl **v7)(std::ostringstream *__hidden);
  _QWORD v8[8];
  __int128 v9;
  __int128 v10;
  int v11;
  void (__cdecl **v12)(std::ostringstream *__hidden);
  uint8_t buf[4];
  std::string *v14;

  v7 = v0;
  *(_QWORD *)((char *)&v8[-1] + (_QWORD)*(v0 - 3)) = v1;
  v2 = (std::ios_base *)((char *)&v8[-1] + (_QWORD)*(v7 - 3));
  std::ios_base::init(v2, v8);
  v2[1].__vftable = 0;
  v2[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v8);
  v9 = 0u;
  v10 = 0u;
  v11 = 16;
  sub_1000F0508(&v7, (uint64_t)"Generic exception that's not std::exception", 43);
  std::stringbuf::str(v8);
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
  v3 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
    v4 = &v6;
    if ((v6.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v4 = (std::string *)v6.__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 136315138;
    v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v6);
}

void sub_10018D61C(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  void (**v3)(void *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;

  if (!a2)
    _Unwind_Resume(exception_object);
  v8 = __cxa_begin_catch(exception_object);
  (*v3)(v8);
  __cxa_end_catch();
  if (*(_QWORD *)(v5 + 3800) == -1)
  {
    v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
    v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  std::stringbuf::str(v2);
  if (*(char *)(v7 - 137) >= 0)
    v10 = v7 - 160;
  else
    v10 = *(_QWORD *)(v7 - 160);
  *(_DWORD *)(v7 - 128) = 136315394;
  *(_QWORD *)(v4 + 36) = (unint64_t)"St27unsupported_operation_error" & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 116) = 2080;
  *(_QWORD *)(v4 + 46) = v10;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 128), 0x16u);
  if (*(char *)(v7 - 137) < 0)
    operator delete(*(void **)(v7 - 160));
LABEL_9:
  abort();
}

void sub_10018D71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  if (a14 < 0)
    operator delete(__p);
  a15 = *v31;
  *(uint64_t *)((char *)&a15 + *(_QWORD *)(a15 - 24)) = v31[3];
  a16 = v32 + 16;
  if (a29 < 0)
    operator delete(a24);
  std::streambuf::~streambuf(v30);
  std::ostream::~ostream(&a15, v31 + 1);
  std::ios::~ios(v29);
  _Unwind_Resume(a1);
}

void sub_10018D7C0(uint64_t a1, uint64_t a2, const char **a3)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  const char *v7;
  size_t v8;
  NSObject *v9;
  std::string *v10;
  std::runtime_error *exception;
  std::string v12;
  void (__cdecl **v13)(std::ostringstream *__hidden);
  _QWORD v14[8];
  __int128 v15;
  __int128 v16;
  int v17;
  void (__cdecl **v18)(std::ostringstream *__hidden);
  uint8_t buf[4];
  std::string *v20;

  v13 = v4;
  *(_QWORD *)((char *)&v14[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v14[-1] + (_QWORD)*(v13 - 3));
  std::ios_base::init(v6, v14);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v14);
  v15 = 0u;
  v16 = 0u;
  v17 = 16;
  sub_1000F0508(&v13, (uint64_t)"Generic exception ", 18);
  v7 = *a3;
  v8 = strlen(v7);
  sub_1000F0508(&v13, (uint64_t)v7, v8);
  std::stringbuf::str(v14);
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
  v9 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
    v10 = &v12;
    if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v10 = (std::string *)v12.__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 136315138;
    v20 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v12);
}

void sub_10018D980(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  uint64_t v3;
  void (**v4)(void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!a2)
    _Unwind_Resume(exception_object);
  v8 = __cxa_begin_catch(exception_object);
  (*v4)(v8);
  __cxa_end_catch();
  if (*(_QWORD *)(v6 + 3800) == -1)
  {
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  v10 = *(_QWORD *)(v3 + 8);
  std::stringbuf::str(v2);
  if (*(char *)(v7 - 137) >= 0)
    v11 = v7 - 160;
  else
    v11 = *(_QWORD *)(v7 - 160);
  *(_DWORD *)(v7 - 128) = 136315394;
  v12 = v7 - 160;
  *(_QWORD *)(v12 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 116) = 2080;
  *(_QWORD *)(v12 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 128), 0x16u);
  if (*(char *)(v7 - 137) < 0)
    operator delete(*(void **)(v7 - 160));
LABEL_9:
  abort();
}

void sub_10018DA80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  if (a14 < 0)
    operator delete(__p);
  a15 = *v31;
  *(uint64_t *)((char *)&a15 + *(_QWORD *)(a15 - 24)) = v31[3];
  a16 = v32 + 16;
  if (a29 < 0)
    operator delete(a24);
  std::streambuf::~streambuf(v30);
  std::ostream::~ostream(&a15, v31 + 1);
  std::ios::~ios(v29);
  _Unwind_Resume(a1);
}

void sub_10018DB24(uint64_t a1, uint64_t a2, const char **a3)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  const char *v7;
  size_t v8;
  NSObject *v9;
  std::string *v10;
  std::runtime_error *exception;
  std::string v12;
  void (__cdecl **v13)(std::ostringstream *__hidden);
  _QWORD v14[8];
  __int128 v15;
  __int128 v16;
  int v17;
  void (__cdecl **v18)(std::ostringstream *__hidden);
  uint8_t buf[4];
  std::string *v20;

  v13 = v4;
  *(_QWORD *)((char *)&v14[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v14[-1] + (_QWORD)*(v13 - 3));
  std::ios_base::init(v6, v14);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v14);
  v15 = 0u;
  v16 = 0u;
  v17 = 16;
  sub_1000F0508(&v13, (uint64_t)"Unhandled thrift exception ", 27);
  v7 = *a3;
  v8 = strlen(v7);
  sub_1000F0508(&v13, (uint64_t)v7, v8);
  std::stringbuf::str(v14);
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
  v9 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
    v10 = &v12;
    if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v10 = (std::string *)v12.__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 136315138;
    v20 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v12);
}

void sub_10018DCE4(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  uint64_t v3;
  void (**v4)(void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!a2)
    _Unwind_Resume(exception_object);
  v8 = __cxa_begin_catch(exception_object);
  (*v4)(v8);
  __cxa_end_catch();
  if (*(_QWORD *)(v6 + 3800) == -1)
  {
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  v10 = *(_QWORD *)(v3 + 8);
  std::stringbuf::str(v2);
  if (*(char *)(v7 - 137) >= 0)
    v11 = v7 - 160;
  else
    v11 = *(_QWORD *)(v7 - 160);
  *(_DWORD *)(v7 - 128) = 136315394;
  v12 = v7 - 160;
  *(_QWORD *)(v12 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 116) = 2080;
  *(_QWORD *)(v12 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 128), 0x16u);
  if (*(char *)(v7 - 137) < 0)
    operator delete(*(void **)(v7 - 160));
LABEL_9:
  abort();
}

void sub_10018DDE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  if (a14 < 0)
    operator delete(__p);
  a15 = *v31;
  *(uint64_t *)((char *)&a15 + *(_QWORD *)(a15 - 24)) = v31[3];
  a16 = v32 + 16;
  if (a29 < 0)
    operator delete(a24);
  std::streambuf::~streambuf(v30);
  std::ostream::~ostream(&a15, v31 + 1);
  std::ios::~ios(v29);
  _Unwind_Resume(a1);
}

void sub_10018DE88(uint64_t a1, uint64_t a2, const char **a3, unsigned int *a4)
{
  void (__cdecl **v6)(std::ostringstream *__hidden);
  uint64_t v7;
  std::ios_base *v8;
  const char *v9;
  size_t v10;
  NSObject *v11;
  std::string *v12;
  std::runtime_error *exception;
  std::string v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  __int128 v17;
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);
  uint8_t buf[4];
  std::string *v22;

  v15 = v6;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v6 - 3)) = v7;
  v8 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v8, v16);
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  v17 = 0u;
  v18 = 0u;
  v19 = 16;
  sub_1000F0508(&v15, (uint64_t)"Unhandled thrift transport exception ", 37);
  v9 = *a3;
  v10 = strlen(v9);
  sub_1000F0508(&v15, (uint64_t)v9, v10);
  sub_1000F0508(&v15, (uint64_t)" (type ", 7);
  std::ostream::operator<<(&v15, *a4);
  sub_1000F0508(&v15, (uint64_t)")", 1);
  std::stringbuf::str(v16);
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
  v11 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
    v12 = &v14;
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v12 = (std::string *)v14.__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 136315138;
    v22 = v12;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v14);
}

void sub_10018E080(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  uint64_t v3;
  void (**v4)(void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!a2)
    _Unwind_Resume(exception_object);
  v8 = __cxa_begin_catch(exception_object);
  (*v4)(v8);
  __cxa_end_catch();
  if (*(_QWORD *)(v6 + 3800) == -1)
  {
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  v10 = *(_QWORD *)(v3 + 8);
  std::stringbuf::str(v2);
  if (*(char *)(v7 - 137) >= 0)
    v11 = v7 - 160;
  else
    v11 = *(_QWORD *)(v7 - 160);
  *(_DWORD *)(v7 - 128) = 136315394;
  v12 = v7 - 160;
  *(_QWORD *)(v12 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 116) = 2080;
  *(_QWORD *)(v12 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 128), 0x16u);
  if (*(char *)(v7 - 137) < 0)
    operator delete(*(void **)(v7 - 160));
LABEL_9:
  abort();
}

void sub_10018E180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;

  if (a14 < 0)
    operator delete(__p);
  a15 = *v32;
  *(uint64_t *)((char *)&a15 + *(_QWORD *)(a15 - 24)) = v32[3];
  a16 = v31 + 16;
  if (a29 < 0)
    operator delete(a24);
  std::streambuf::~streambuf(v30);
  std::ostream::~ostream(&a15, v32 + 1);
  std::ios::~ios(v29);
  _Unwind_Resume(a1);
}

void sub_10018E224(uint64_t a1, uint64_t a2, const char **a3, unsigned int *a4)
{
  void (__cdecl **v6)(std::ostringstream *__hidden);
  uint64_t v7;
  std::ios_base *v8;
  const char *v9;
  size_t v10;
  NSObject *v11;
  std::string *v12;
  std::runtime_error *exception;
  std::string v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  __int128 v17;
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);
  uint8_t buf[4];
  std::string *v22;

  v15 = v6;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v6 - 3)) = v7;
  v8 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v8, v16);
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  v17 = 0u;
  v18 = 0u;
  v19 = 16;
  sub_1000F0508(&v15, (uint64_t)"Unhandled thrift application exception ", 39);
  v9 = *a3;
  v10 = strlen(v9);
  sub_1000F0508(&v15, (uint64_t)v9, v10);
  sub_1000F0508(&v15, (uint64_t)" (type ", 7);
  std::ostream::operator<<(&v15, *a4);
  sub_1000F0508(&v15, (uint64_t)")", 1);
  std::stringbuf::str(v16);
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
  v11 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
    v12 = &v14;
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v12 = (std::string *)v14.__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 136315138;
    v22 = v12;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v14);
}

void sub_10018E41C(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  uint64_t v3;
  void (**v4)(void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!a2)
    _Unwind_Resume(exception_object);
  v8 = __cxa_begin_catch(exception_object);
  (*v4)(v8);
  __cxa_end_catch();
  if (*(_QWORD *)(v6 + 3800) == -1)
  {
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  v10 = *(_QWORD *)(v3 + 8);
  std::stringbuf::str(v2);
  if (*(char *)(v7 - 137) >= 0)
    v11 = v7 - 160;
  else
    v11 = *(_QWORD *)(v7 - 160);
  *(_DWORD *)(v7 - 128) = 136315394;
  v12 = v7 - 160;
  *(_QWORD *)(v12 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 116) = 2080;
  *(_QWORD *)(v12 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 128), 0x16u);
  if (*(char *)(v7 - 137) < 0)
    operator delete(*(void **)(v7 - 160));
LABEL_9:
  abort();
}

void sub_10018E51C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;

  if (a14 < 0)
    operator delete(__p);
  a15 = *v32;
  *(uint64_t *)((char *)&a15 + *(_QWORD *)(a15 - 24)) = v32[3];
  a16 = v31 + 16;
  if (a29 < 0)
    operator delete(a24);
  std::streambuf::~streambuf(v30);
  std::ostream::~ostream(&a15, v32 + 1);
  std::ios::~ios(v29);
  _Unwind_Resume(a1);
}

void sub_10018E5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  std::string *v11;
  std::runtime_error *exception;
  std::string v13;
  void (__cdecl **v14)(std::ostringstream *__hidden);
  _QWORD v15[8];
  __int128 v16;
  __int128 v17;
  int v18;
  void (__cdecl **v19)(std::ostringstream *__hidden);
  uint8_t buf[4];
  std::string *v21;

  v14 = v4;
  *(_QWORD *)((char *)&v15[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v15[-1] + (_QWORD)*(v14 - 3));
  std::ios_base::init(v6, v15);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v15);
  v16 = 0u;
  v17 = 0u;
  v18 = 16;
  sub_1000F0508(&v14, (uint64_t)"<=====diagnostic======\n", 23);
  v7 = *(char *)(a3 + 23);
  if (v7 >= 0)
    v8 = a3;
  else
    v8 = *(_QWORD *)a3;
  if (v7 >= 0)
    v9 = *(unsigned __int8 *)(a3 + 23);
  else
    v9 = *(_QWORD *)(a3 + 8);
  sub_1000F0508(&v14, v8, v9);
  sub_1000F0508(&v14, (uint64_t)"\n=====diagnostic=====>", 22);
  std::stringbuf::str(v15);
  if (qword_100417ED8 != -1)
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
  v10 = qword_100417EE0;
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
  {
    v11 = &v13;
    if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v11 = (std::string *)v13.__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 136315138;
    v21 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v13);
}

void sub_10018E798(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  uint64_t v3;
  void (**v4)(void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!a2)
    _Unwind_Resume(exception_object);
  v8 = __cxa_begin_catch(exception_object);
  (*v4)(v8);
  __cxa_end_catch();
  if (*(_QWORD *)(v6 + 3800) == -1)
  {
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
    v9 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
  }
  v10 = *(_QWORD *)(v3 + 8);
  std::stringbuf::str(v2);
  if (*(char *)(v7 - 137) >= 0)
    v11 = v7 - 160;
  else
    v11 = *(_QWORD *)(v7 - 160);
  *(_DWORD *)(v7 - 128) = 136315394;
  v12 = v7 - 160;
  *(_QWORD *)(v12 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 116) = 2080;
  *(_QWORD *)(v12 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 128), 0x16u);
  if (*(char *)(v7 - 137) < 0)
    operator delete(*(void **)(v7 - 160));
LABEL_9:
  abort();
}

void sub_10018E898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  if (a14 < 0)
    operator delete(__p);
  a15 = *v31;
  *(uint64_t *)((char *)&a15 + *(_QWORD *)(a15 - 24)) = v31[3];
  a16 = v32 + 16;
  if (a29 < 0)
    operator delete(a24);
  std::streambuf::~streambuf(v30);
  std::ostream::~ostream(&a15, v31 + 1);
  std::ios::~ios(v29);
  _Unwind_Resume(a1);
}

void sub_10018E93C()
{
  NSObject *v0;
  void *__p;

  if (qword_100417ED8 == -1)
  {
    v0 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      goto LABEL_4;
  }
  else
  {
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
    v0 = qword_100417EE0;
    if (!os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
      goto LABEL_4;
  }
  LOWORD(__p) = 0;
  _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Lost track of default stdlib terminate handler", (uint8_t *)&__p, 2u);
  if (qword_100417ED8 != -1)
  {
    dispatch_once(&qword_100417ED8, &stru_1003F8EE0);
    if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
LABEL_5:
      sub_10016A398();
LABEL_6:
    abort();
  }
LABEL_4:
  if (os_log_type_enabled((os_log_t)qword_100417EE0, OS_LOG_TYPE_ERROR))
    goto LABEL_5;
  goto LABEL_6;
}

void sub_10018EA9C(id a1)
{
  qword_100417EE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_10018EAC8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_10018EB24()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

double sub_10018EB80(_QWORD *a1)
{
  return (double)(*a1 - qword_100419C10) / 1000000000.0;
}

uint64_t sub_10018EBA8(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    if ((*(char *)(a1 + 79) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 55) & 0x80000000) == 0)
        goto LABEL_4;
LABEL_8:
      operator delete(*(void **)(a1 + 32));
      if ((*(char *)(a1 + 31) & 0x80000000) == 0)
        return a1;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 79) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_8;
LABEL_4:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_9:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_10018EC30()
{
  std::logic_error v0;
  std::string v1;

  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x28uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038D7B0;
  strcpy(v1.__r_.__value_.__l.__data_, "Year is out of valid range: 1400..9999");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v1.__r_.__value_.__l.__data_);
  v0.__vftable = (std::logic_error_vtbl *)&off_1003F8FE8;
  sub_10018ECEC(&v0);
}

void sub_10018ECBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
  std::out_of_range::~out_of_range(&a10);
  _Unwind_Resume(a1);
}

void sub_10018ECD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10018ECEC(const std::logic_error *a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018ED40((uint64_t)exception, a1);
}

void sub_10018ED28(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018ED40(uint64_t a1, const std::logic_error *a2)
{
  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(_QWORD *)a1 = &off_1003F8F70;
  *(_QWORD *)(a1 + 8) = off_1003F8FA0;
  *(_QWORD *)(a1 + 24) = off_1003F8FC8;
  *(_QWORD *)(a1 + 32) = 0;
  return a1;
}

uint64_t sub_10018ED9C(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_10018EDF4()
{
  operator new();
}

void sub_10018EECC()
{
  std::out_of_range *v0;

  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_10018EEF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018EF14(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018F168((uint64_t)exception, a1);
}

void sub_10018EF50(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10018EF64(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  operator delete();
}

void sub_10018EFCC(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_10018F01C(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_10018F088(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_10018F0D8(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

void sub_10018F144(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);
  operator delete();
}

uint64_t sub_10018F168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(_QWORD *)(a1 + 8) = &off_1003F8FE8;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F8F70;
  *(_QWORD *)(a1 + 8) = off_1003F8FA0;
  *(_QWORD *)(a1 + 24) = off_1003F8FC8;
  return a1;
}

void sub_10018F214(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_10018F228()
{
  std::logic_error v0;
  std::string v1;

  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x28uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_100382FD0;
  strcpy(v1.__r_.__value_.__l.__data_, "Month number is out of range 1..12");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v1.__r_.__value_.__l.__data_);
  v0.__vftable = (std::logic_error_vtbl *)&off_1003F90E8;
  sub_10018F2E4(&v0);
}

void sub_10018F2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
  std::out_of_range::~out_of_range(&a10);
  _Unwind_Resume(a1);
}

void sub_10018F2C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10018F2E4(const std::logic_error *a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018F338((uint64_t)exception, a1);
}

void sub_10018F320(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018F338(uint64_t a1, const std::logic_error *a2)
{
  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(_QWORD *)a1 = &off_1003F9070;
  *(_QWORD *)(a1 + 8) = off_1003F90A0;
  *(_QWORD *)(a1 + 24) = off_1003F90C8;
  *(_QWORD *)(a1 + 32) = 0;
  return a1;
}

uint64_t sub_10018F394(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_10018F3EC()
{
  operator new();
}

void sub_10018F4C4()
{
  std::out_of_range *v0;

  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_10018F4F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018F50C(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018F760((uint64_t)exception, a1);
}

void sub_10018F548(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10018F55C(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  operator delete();
}

void sub_10018F5C4(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_10018F614(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_10018F680(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_10018F6D0(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

void sub_10018F73C(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);
  operator delete();
}

uint64_t sub_10018F760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(_QWORD *)(a1 + 8) = &off_1003F90E8;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F9070;
  *(_QWORD *)(a1 + 8) = off_1003F90A0;
  *(_QWORD *)(a1 + 24) = off_1003F90C8;
  return a1;
}

void sub_10018F80C(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_10018F820()
{
  std::logic_error v0;
  std::string v1;

  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6A0;
  strcpy(v1.__r_.__value_.__l.__data_, "Day of month value is out of range 1..31");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v1.__r_.__value_.__l.__data_);
  v0.__vftable = (std::logic_error_vtbl *)&off_1003F91E8;
  sub_10018F8DC(&v0);
}

void sub_10018F8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
  std::out_of_range::~out_of_range(&a10);
  _Unwind_Resume(a1);
}

void sub_10018F8C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10018F8DC(const std::logic_error *a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018F930((uint64_t)exception, a1);
}

void sub_10018F918(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018F930(uint64_t a1, const std::logic_error *a2)
{
  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(_QWORD *)a1 = &off_1003F9170;
  *(_QWORD *)(a1 + 8) = off_1003F91A0;
  *(_QWORD *)(a1 + 24) = off_1003F91C8;
  *(_QWORD *)(a1 + 32) = 0;
  return a1;
}

uint64_t sub_10018F98C(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_10018F9E4()
{
  operator new();
}

void sub_10018FABC()
{
  std::out_of_range *v0;

  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_10018FAE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018FB04(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018FD58((uint64_t)exception, a1);
}

void sub_10018FB40(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10018FB54(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  operator delete();
}

void sub_10018FBBC(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_10018FC0C(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_10018FC78(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_10018FCC8(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

void sub_10018FD34(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);
  operator delete();
}

uint64_t sub_10018FD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(_QWORD *)(a1 + 8) = &off_1003F91E8;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F9170;
  *(_QWORD *)(a1 + 8) = off_1003F91A0;
  *(_QWORD *)(a1 + 24) = off_1003F91C8;
  return a1;
}

void sub_10018FE04(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

char *sub_10018FE18(int a1, char *__s, char *a3, uint64_t a4)
{
  const char *v5;
  __int128 v7;
  size_t v8;
  size_t v9;
  __int128 *p_dst;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  __int128 __dst;
  unint64_t v18;

  v5 = __s;
  if (__s != a3)
  {
    while (1)
    {
      v8 = strlen(v5);
      if (v8 >= 0x7FFFFFFFFFFFFFF8)
        sub_1000CDE30();
      v9 = v8;
      if (v8 >= 0x17)
      {
        v12 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v8 | 7) != 0x17)
          v12 = v8 | 7;
        v13 = v12 + 1;
        p_dst = (__int128 *)operator new(v12 + 1);
        *((_QWORD *)&__dst + 1) = v9;
        v18 = v13 | 0x8000000000000000;
        *(_QWORD *)&__dst = p_dst;
      }
      else
      {
        HIBYTE(v18) = v8;
        p_dst = &__dst;
        if (!v8)
        {
          LOBYTE(__dst) = 0;
          v11 = *(_QWORD *)(a4 + 8);
          if (v11 >= *(_QWORD *)(a4 + 16))
            goto LABEL_14;
          goto LABEL_3;
        }
      }
      memcpy(p_dst, v5, v9);
      *((_BYTE *)p_dst + v9) = 0;
      v11 = *(_QWORD *)(a4 + 8);
      if (v11 >= *(_QWORD *)(a4 + 16))
      {
LABEL_14:
        v14 = sub_1001697DC((void **)a4, (uint64_t)&__dst);
        v15 = SHIBYTE(v18);
        *(_QWORD *)(a4 + 8) = v14;
        if (v15 < 0)
          operator delete((void *)__dst);
        goto LABEL_4;
      }
LABEL_3:
      v7 = __dst;
      *(_QWORD *)(v11 + 16) = v18;
      *(_OWORD *)v11 = v7;
      *(_QWORD *)(a4 + 8) = v11 + 24;
LABEL_4:
      v5 += 17;
      if (v5 == a3)
        return a3;
    }
  }
  return (char *)v5;
}

void sub_10018FF50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10018FF6C(std::locale::facet *this)
{
  std::locale::facet *v1;

  v1 = this;
  this->__vftable = (std::locale::facet_vtbl *)off_1003F9210;
  if (SHIBYTE(this[22].__vftable) < 0)
  {
    operator delete(this[21].__vftable);
    this = v1;
  }
  sub_10000C7A8(this);
}

std::string *sub_10018FFBC(uint64_t a1)
{
  return std::string::assign((std::string *)(a1 + 16), boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::iso_time_format_specifier[0]);
}

std::string *sub_10018FFD0(uint64_t a1)
{
  return std::string::assign((std::string *)(a1 + 16), boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::iso_time_format_extended_specifier);
}

_QWORD *sub_10018FFE4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _BYTE *v11;

  v6 = *(_QWORD *)(a1 + 216);
  if (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 224) - v6) >> 3) > a5)
  {
    v7 = (unsigned __int8 *)(v6 + 24 * a5);
    if ((char)v7[23] < 0)
    {
      v7 = *(unsigned __int8 **)v7;
      v8 = *(_QWORD *)(v6 + 24 * a5 + 8);
      if (!v8)
        return a2;
    }
    else
    {
      v8 = v7[23];
      if (!v7[23])
        return a2;
    }
    v9 = a2;
    do
    {
      if (v9)
      {
        v10 = *v7;
        v11 = (_BYTE *)v9[6];
        if (v11 == (_BYTE *)v9[7])
        {
          if ((*(unsigned int (**)(_QWORD *, uint64_t))(*v9 + 104))(v9, v10) == -1)
            v9 = 0;
        }
        else
        {
          v9[6] = v11 + 1;
          *v11 = v10;
        }
      }
      ++v7;
      --v8;
    }
    while (v8);
  }
  return a2;
}

char *sub_1001900A4(char *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v5;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (a4)
  {
    v5 = result;
    if (a4 >= 0xAAAAAAAAAAAAAABLL)
      sub_1000D02C0();
    result = (char *)operator new(24 * a4);
    v8 = result;
    *v5 = result;
    v5[1] = result;
    v5[2] = &result[24 * a4];
    if (a2 != a3)
    {
      v9 = 0;
      do
      {
        result = &v8[v9];
        v10 = a2 + v9;
        if (*(char *)(a2 + v9 + 23) < 0)
        {
          result = (char *)sub_10006CED8(result, *(void **)v10, *(_QWORD *)(v10 + 8));
        }
        else
        {
          *(_OWORD *)result = *(_OWORD *)v10;
          *((_QWORD *)result + 2) = *(_QWORD *)(v10 + 16);
        }
        v9 += 24;
      }
      while (a2 + v9 != a3);
      v8 += v9;
    }
    v5[1] = v8;
  }
  return result;
}

void sub_100190184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_1000FCFAC(&a9);
  _Unwind_Resume(a1);
}

void sub_100190198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  for (; v11; v11 -= 24)
  {
    if (*(char *)(v10 + v11 - 1) < 0)
      operator delete(*(void **)(v10 + v11 - 24));
  }
  *(_QWORD *)(v9 + 8) = v10;
  sub_1000FCFAC(&a9);
  _Unwind_Resume(a1);
}

void sub_1001901D8(std::locale::facet *a1)
{
  sub_10000C7A8(a1);
  operator delete();
}

std::string *sub_1001901FC(uint64_t a1)
{
  return std::string::assign((std::string *)(a1 + 16), "%Y%m%d");
}

std::string *sub_10019020C(uint64_t a1)
{
  return std::string::assign((std::string *)(a1 + 16), "%Y-%m-%d");
}

void sub_10019021C(std::string *a1, uint64_t *a2, char *a3, char *a4, std::string *a5, std::string *a6, char *a7, char *a8)
{
  std::string *v8;
  std::string::size_type size;
  std::string *v11;
  std::string *v14;
  std::string *v18;
  std::string *v19;
  char *v20;
  uint64_t v21;
  std::string *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  std::string *v27;
  _BYTE *v28;
  std::string::size_type v29;
  std::string::size_type v30;
  uint64_t v31;
  char *v32;
  std::string::value_type *v33;
  char *v34;
  std::string::value_type *v35;
  std::string::size_type v36;
  void **v37;
  void **v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  void *__p[2];
  __int128 v44;
  __int128 v45;
  char v46;

  v8 = a6;
  v44 = 0u;
  v45 = 0u;
  *(_OWORD *)__p = 0u;
  size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0)
    v11 = a1;
  else
    v11 = (std::string *)a1->__r_.__value_.__r.__words[0];
  if (a5 == (_BYTE *)a6)
  {
    if ((size & 0x80u) != 0)
      size = a1->__r_.__value_.__l.__size_;
    v19 = v11;
    v18 = v11;
  }
  else
  {
    v14 = (std::string *)a5;
    v18 = v11;
    v19 = v11;
    while (1)
    {
      v18 = (std::string *)sub_10019058C((int)&v46, (int64x2_t *)__p, (int)a1, v18, v19, v14);
      v20 = (char *)__p[1] + 8 * (((_QWORD)v45 + *((_QWORD *)&v45 + 1)) >> 12);
      if ((void *)v44 == __p[1])
        v21 = 0;
      else
        v21 = *(_QWORD *)v20 + (((_WORD)v45 + WORD4(v45)) & 0xFFF);
      sub_100191040((int64x2_t *)__p, v20, v21, a7, a8, a8 - a7);
      size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
      if ((size & 0x80u) == 0)
        v11 = a1;
      else
        v11 = (std::string *)a1->__r_.__value_.__r.__words[0];
      if ((size & 0x80u) != 0)
        size = a1->__r_.__value_.__l.__size_;
      v22 = (char *)v11 + size;
      if (v8 == (std::string *)((char *)v11 + size))
        break;
      v23 = *a2;
      v24 = a2[1];
      if (*a2 == v24)
        break;
      v14 = v8;
      while (1)
      {
        v25 = 0;
        do
        {
          if (v14->__r_.__value_.__s.__data_[v25] != *(unsigned __int8 *)(v23 + v25))
            break;
          if ((char *)v14 + ++v25 == v22)
            break;
        }
        while (v25 + v23 != v24);
        v26 = v23 + v25;
        v27 = (std::string *)((char *)v14 + v25);
        if (v26 == v24)
          break;
        v14 = (std::string *)((char *)v14 + 1);
        if (v14 == (std::string *)v22)
          goto LABEL_27;
      }
      v19 = v8;
      v8 = v27;
      if (v14 == v27)
        goto LABEL_31;
      a8 = a4;
      a7 = a3;
    }
LABEL_27:
    v19 = v8;
  }
LABEL_31:
  v28 = sub_10019058C((int)&v46, (int64x2_t *)__p, (int)a1, v18, v19, (_BYTE *)v11 + size);
  v29 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((v29 & 0x80u) == 0)
    v30 = (std::string::size_type)a1;
  else
    v30 = a1->__r_.__value_.__r.__words[0];
  if ((v29 & 0x80u) != 0)
    v29 = a1->__r_.__value_.__l.__size_;
  v31 = v30 + v29;
  if (!*((_QWORD *)&v45 + 1))
  {
    std::string::erase(a1, (std::string::size_type)&v28[-v30], v31 - (_QWORD)v28);
    goto LABEL_44;
  }
  v32 = (char *)__p[1] + 8 * ((unint64_t)v45 >> 12);
  if ((void *)v44 == __p[1])
  {
    v33 = 0;
    v35 = 0;
    v34 = (char *)__p[1] + 8 * (((_QWORD)v45 + *((_QWORD *)&v45 + 1)) >> 12);
    goto LABEL_42;
  }
  v33 = (std::string::value_type *)(*(_QWORD *)v32 + (v45 & 0xFFF));
  v34 = (char *)__p[1] + 8 * (((_QWORD)v45 + *((_QWORD *)&v45 + 1)) >> 12);
  v35 = (std::string::value_type *)(*(_QWORD *)v34 + ((v45 + *((_QWORD *)&v45 + 1)) & 0xFFF));
  if (v35 == v33)
  {
LABEL_42:
    v36 = 0;
    goto LABEL_43;
  }
  v36 = &v35[512 * (v34 - v32)] - &v33[*(_QWORD *)v34] + *(_QWORD *)v32;
LABEL_43:
  sub_100192B60(a1, v31, v32, v33, (uint64_t)v34, v35, v36);
LABEL_44:
  v37 = (void **)__p[1];
  v38 = (void **)v44;
  *((_QWORD *)&v45 + 1) = 0;
  v39 = v44 - (unint64_t)__p[1];
  if ((unint64_t)v44 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v37);
      v38 = (void **)v44;
      v37 = (void **)((char *)__p[1] + 8);
      __p[1] = v37;
      v39 = v44 - (_QWORD)v37;
    }
    while ((_QWORD)v44 - (_QWORD)v37 > 0x10uLL);
  }
  v40 = v39 >> 3;
  if (v40 == 1)
  {
    v41 = 2048;
    goto LABEL_50;
  }
  if (v40 == 2)
  {
    v41 = 4096;
LABEL_50:
    *(_QWORD *)&v45 = v41;
  }
  if (v37 != v38)
  {
    do
    {
      v42 = *v37++;
      operator delete(v42);
    }
    while (v37 != v38);
    if ((void *)v44 != __p[1])
      *(_QWORD *)&v44 = v44 + (((unint64_t)__p[1] - v44 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (__p[0])
    operator delete(__p[0]);
}

void sub_10019053C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100190550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100190564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100190578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_BYTE *sub_10019058C(int a1, int64x2_t *a2, int a3, _BYTE *__dst, _BYTE *__src, _BYTE *a6)
{
  _BYTE *v8;
  uint64_t v10;
  BOOL v11;
  void **v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64x2_t v18;
  void **v19;
  unint64_t v20;
  BOOL v21;
  size_t v22;

  v8 = __dst;
  v10 = a2[2].i64[1];
  if (v10)
    v11 = __dst == __src;
  else
    v11 = 1;
  if (!v11)
  {
    v19 = (void **)a2->i64[1];
    v20 = a2[2].u64[0];
    do
    {
      *v8 = (*(_BYTE **)((char *)v19 + ((v20 >> 9) & 0x7FFFFFFFFFFFF8)))[v20 & 0xFFF];
      v19 = (void **)a2->i64[1];
      v10 = a2[2].i64[1] - 1;
      v20 = a2[2].i64[0] + 1;
      a2[2].i64[0] = v20;
      a2[2].i64[1] = v10;
      if (v20 >= 0x2000)
      {
        operator delete(*v19);
        v19 = (void **)(a2->i64[1] + 8);
        a2->i64[1] = (uint64_t)v19;
        v10 = a2[2].i64[1];
        v20 = a2[2].i64[0] - 4096;
        a2[2].i64[0] = v20;
      }
      ++v8;
      if (v10)
        v21 = v8 == __src;
      else
        v21 = 1;
    }
    while (!v21);
  }
  if (v10)
  {
    if (v8 != a6)
    {
      v12 = (void **)a2->i64[1];
      v13 = a2[2].i64[0];
      do
      {
        v14 = (void **)a2[1].i64[0];
        if (v14 == v12)
          v15 = 0;
        else
          v15 = (((char *)v14 - (char *)v12) << 9) - 1;
        v16 = a2[2].i64[1] + v13;
        if (v15 == v16)
        {
          sub_100190760((uint64_t)a2);
          v12 = (void **)a2->i64[1];
          v16 = a2[2].i64[1] + a2[2].i64[0];
        }
        (*(_BYTE **)((char *)v12 + ((v16 >> 9) & 0x7FFFFFFFFFFFF8)))[v16 & 0xFFF] = *v8;
        v17 = a2[2].u64[0];
        ++a2[2].i64[1];
        *v8 = *(_BYTE *)(*(_QWORD *)(a2->i64[1] + ((v17 >> 9) & 0x7FFFFFFFFFFFF8)) + (v17 & 0xFFF));
        v12 = (void **)a2->i64[1];
        v18 = vaddq_s64(a2[2], (int64x2_t)xmmword_10038D7C0);
        a2[2] = v18;
        v13 = v18.i64[0];
        if (v18.i64[0] >= 0x2000uLL)
        {
          operator delete(*v12);
          v12 = (void **)(a2->i64[1] + 8);
          a2->i64[1] = (uint64_t)v12;
          v13 = a2[2].i64[0] - 4096;
          a2[2].i64[0] = v13;
        }
        ++v8;
      }
      while (v8 != a6);
    }
  }
  else if (v8 != __src)
  {
    v22 = a6 - __src;
    if (v22)
      memmove(v8, __src, v22);
    return &v8[v22];
  }
  return a6;
}

void sub_100190760(uint64_t a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  char *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  void *v26;
  char *v27;
  char *v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  BOOL v37;
  int64_t v38;
  unint64_t v39;
  char *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  size_t v58;
  unint64_t v59;
  char *v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 *v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  _OWORD *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 *v85;
  _OWORD *v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  void *v90;
  void *v91;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = v2 >= 0x1000;
  v4 = v2 - 4096;
  if (v3)
  {
    *(_QWORD *)(a1 + 32) = v4;
    v6 = *(_QWORD **)(a1 + 8);
    v5 = *(char **)(a1 + 16);
    v7 = (char *)(v6 + 1);
    v8 = *v6;
    *(_QWORD *)(a1 + 8) = v6 + 1;
    if (v5 != *(char **)(a1 + 24))
    {
LABEL_78:
      *(_QWORD *)v5 = v8;
      *(_QWORD *)(a1 + 16) += 8;
      return;
    }
    v9 = *(char **)a1;
    v10 = (uint64_t)&v7[-*(_QWORD *)a1];
    if ((unint64_t)v7 <= *(_QWORD *)a1)
    {
      v31 = (v5 - v9) >> 2;
      if (v5 == v9)
        v31 = 1;
      if (!(v31 >> 61))
      {
        v32 = v31 >> 2;
        v33 = 8 * v31;
        v34 = (char *)operator new(8 * v31);
        v35 = &v34[8 * v32];
        v36 = &v34[v33];
        v38 = v5 - v7;
        v37 = v5 == v7;
        v5 = v35;
        if (!v37)
        {
          v5 = &v35[v38 & 0xFFFFFFFFFFFFFFF8];
          v39 = v38 - 8;
          if ((unint64_t)(v38 - 8) >= 0x38)
          {
            v74 = &v34[8 * v32];
            v40 = v74;
            if ((unint64_t)(v74 - v7) >= 0x20)
            {
              v75 = (v39 >> 3) + 1;
              v76 = 8 * (v75 & 0x3FFFFFFFFFFFFFFCLL);
              v40 = &v35[v76];
              v7 += v76;
              v77 = (__int128 *)(v6 + 3);
              v78 = v74 + 16;
              v79 = v75 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v80 = *v77;
                *(v78 - 1) = *(v77 - 1);
                *v78 = v80;
                v77 += 2;
                v78 += 2;
                v79 -= 4;
              }
              while (v79);
              if (v75 == (v75 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_76;
            }
          }
          else
          {
            v40 = &v34[8 * v32];
          }
          do
          {
            v81 = *(_QWORD *)v7;
            v7 += 8;
            *(_QWORD *)v40 = v81;
            v40 += 8;
          }
          while (v40 != v5);
        }
        goto LABEL_76;
      }
LABEL_87:
      sub_1000CDEB8();
    }
LABEL_5:
    v11 = v10 >> 3;
    if (v11 >= -1)
      v12 = v11 + 1;
    else
      v12 = v11 + 2;
    v13 = v12 >> 1;
    v14 = -v13;
    v15 = &v7[-8 * v13];
    v16 = v5 - v7;
    if (v5 != v7)
    {
      memmove(&v7[-8 * v13], v7, v5 - v7);
      v7 = *(char **)(a1 + 8);
    }
    v5 = &v15[v16];
    *(_QWORD *)(a1 + 8) = &v7[8 * v14];
    *(_QWORD *)(a1 + 16) = &v15[v16];
    goto LABEL_78;
  }
  v18 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 8);
  v20 = v18 - v19;
  v21 = (v18 - v19) >> 3;
  v22 = v17 - *(_QWORD *)a1;
  if (v21 < (unint64_t)(v22 >> 3))
  {
    if (v17 != v18)
    {
      v91 = operator new(0x1000uLL);
      sub_100190D1C((char **)a1, &v91);
      return;
    }
    v91 = operator new(0x1000uLL);
    sub_100190EA8((void **)a1, &v91);
    v41 = *(_QWORD **)(a1 + 8);
    v5 = *(char **)(a1 + 16);
    v7 = (char *)(v41 + 1);
    v8 = *v41;
    *(_QWORD *)(a1 + 8) = v41 + 1;
    if (v5 != *(char **)(a1 + 24))
      goto LABEL_78;
    v9 = *(char **)a1;
    v10 = (uint64_t)&v7[-*(_QWORD *)a1];
    if ((unint64_t)v7 <= *(_QWORD *)a1)
    {
      v42 = (v5 - v9) >> 2;
      if (v5 == v9)
        v42 = 1;
      if (!(v42 >> 61))
      {
        v43 = v42 >> 2;
        v44 = 8 * v42;
        v34 = (char *)operator new(8 * v42);
        v35 = &v34[8 * v43];
        v36 = &v34[v44];
        v45 = v5 - v7;
        v37 = v5 == v7;
        v5 = v35;
        if (!v37)
        {
          v5 = &v35[v45 & 0xFFFFFFFFFFFFFFF8];
          v46 = v45 - 8;
          if ((unint64_t)(v45 - 8) >= 0x38)
          {
            v82 = &v34[8 * v43];
            v47 = v82;
            if ((unint64_t)(v82 - v7) >= 0x20)
            {
              v83 = (v46 >> 3) + 1;
              v84 = 8 * (v83 & 0x3FFFFFFFFFFFFFFCLL);
              v47 = &v35[v84];
              v7 += v84;
              v85 = (__int128 *)(v41 + 3);
              v86 = v82 + 16;
              v87 = v83 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v88 = *v85;
                *(v86 - 1) = *(v85 - 1);
                *v86 = v88;
                v85 += 2;
                v86 += 2;
                v87 -= 4;
              }
              while (v87);
              if (v83 == (v83 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_76;
            }
          }
          else
          {
            v47 = &v34[8 * v43];
          }
          do
          {
            v89 = *(_QWORD *)v7;
            v7 += 8;
            *(_QWORD *)v47 = v89;
            v47 += 8;
          }
          while (v47 != v5);
        }
LABEL_76:
        *(_QWORD *)a1 = v34;
        *(_QWORD *)(a1 + 8) = v35;
        *(_QWORD *)(a1 + 16) = v5;
        *(_QWORD *)(a1 + 24) = v36;
        if (v9)
        {
          operator delete(v9);
          v5 = *(char **)(a1 + 16);
        }
        goto LABEL_78;
      }
      goto LABEL_87;
    }
    goto LABEL_5;
  }
  v23 = v22 >> 2;
  if (v17 == *(_QWORD *)a1)
    v24 = 1;
  else
    v24 = v23;
  if (v24 >> 61)
    goto LABEL_87;
  v25 = (char *)operator new(8 * v24);
  v26 = operator new(0x1000uLL);
  v27 = &v25[8 * v21];
  v28 = &v25[8 * v24];
  if (v21 == v24)
  {
    v90 = v26;
    if (v20 < 1)
    {
      if (v18 == v19)
        v48 = 1;
      else
        v48 = v20 >> 2;
      if (v48 >> 61)
        sub_1000CDEB8();
      v49 = (char *)operator new(8 * v48);
      v27 = &v49[8 * (v48 >> 2)];
      v28 = &v49[8 * v48];
      operator delete(v25);
      v50 = *(_QWORD *)(a1 + 8);
      v18 = *(_QWORD *)(a1 + 16);
      v25 = v49;
      *(_QWORD *)v27 = v90;
      v29 = v27 + 8;
      if (v18 == v50)
        goto LABEL_45;
    }
    else
    {
      v30 = v21 + 2;
      if (v21 >= -1)
        v30 = v21 + 1;
      v27 -= 8 * (v30 >> 1);
      *(_QWORD *)v27 = v26;
      v29 = v27 + 8;
      if (v18 == v19)
        goto LABEL_45;
    }
    do
    {
LABEL_50:
      if (v27 == v25)
      {
        if (v29 >= v28)
        {
          if (v28 == v27)
            v59 = 1;
          else
            v59 = (v28 - v27) >> 2;
          if (v59 >> 61)
            sub_1000CDEB8();
          v60 = (char *)operator new(8 * v59);
          v25 = v60;
          v61 = (v59 + 3) >> 2;
          v53 = &v60[8 * v61];
          v62 = v29 - v27;
          v37 = v29 == v27;
          v29 = v53;
          if (!v37)
          {
            v29 = &v53[v62 & 0xFFFFFFFFFFFFFFF8];
            v63 = v62 - 8;
            v64 = &v60[8 * v61];
            v65 = v27;
            if (v63 < 0x38)
              goto LABEL_91;
            v66 = 8 * v61;
            v64 = &v60[8 * v61];
            v65 = v27;
            if ((unint64_t)(v64 - v27) < 0x20)
              goto LABEL_91;
            v67 = (v63 >> 3) + 1;
            v68 = 8 * (v67 & 0x3FFFFFFFFFFFFFFCLL);
            v64 = &v53[v68];
            v65 = &v27[v68];
            v69 = (__int128 *)(v27 + 16);
            v70 = &v60[v66 + 16];
            v71 = v67 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v72 = *v69;
              *((_OWORD *)v70 - 1) = *(v69 - 1);
              *(_OWORD *)v70 = v72;
              v69 += 2;
              v70 += 32;
              v71 -= 4;
            }
            while (v71);
            if (v67 != (v67 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_91:
              do
              {
                v73 = *(_QWORD *)v65;
                v65 += 8;
                *(_QWORD *)v64 = v73;
                v64 += 8;
              }
              while (v64 != v29);
            }
          }
          v28 = &v60[8 * v59];
          operator delete(v27);
        }
        else
        {
          v55 = (v28 - v29) >> 3;
          if (v55 >= -1)
            v56 = v55 + 1;
          else
            v56 = v55 + 2;
          v57 = &v29[8 * (v56 >> 1)];
          v53 = &v57[-(v29 - v27)];
          v58 = v29 - v27;
          v37 = v29 == v27;
          v29 = v57;
          if (!v37)
            memmove(v53, v27, v58);
          v25 = v27;
        }
      }
      else
      {
        v53 = v27;
      }
      v54 = *(_QWORD *)(v18 - 8);
      v18 -= 8;
      *((_QWORD *)v53 - 1) = v54;
      v51 = v53 - 8;
      v27 = v51;
    }
    while (v18 != *(_QWORD *)(a1 + 8));
    goto LABEL_46;
  }
  *(_QWORD *)v27 = v26;
  v29 = v27 + 8;
  if (v18 != v19)
    goto LABEL_50;
LABEL_45:
  v51 = v27;
LABEL_46:
  v52 = *(char **)a1;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v51;
  *(_QWORD *)(a1 + 16) = v29;
  *(_QWORD *)(a1 + 24) = v28;
  if (v52)
    operator delete(v52);
}

void sub_100190CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  void *v9;

  operator delete(__p);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_100190CD8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100190CEC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100190D04(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100190D1C(char **a1, _QWORD *a2)
{
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  BOOL v19;
  int64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 *v27;
  _OWORD *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v4 = a1[2];
  if (v4 != a1[3])
    goto LABEL_22;
  v5 = *a1;
  v6 = a1[1];
  if (v6 > *a1)
  {
    v7 = (v6 - *a1) >> 3;
    if (v7 >= -1)
      v8 = v7 + 1;
    else
      v8 = v7 + 2;
    v9 = v8 >> 1;
    v10 = -v9;
    v11 = &v6[-8 * v9];
    v12 = v4 - v6;
    if (v4 != v6)
    {
      memmove(&v6[-8 * v9], a1[1], v4 - v6);
      v4 = a1[1];
    }
    v13 = &v4[8 * v10];
    v4 = &v11[v12];
    a1[1] = v13;
    a1[2] = &v11[v12];
    goto LABEL_22;
  }
  v14 = (v4 - v5) >> 2;
  if (v4 == v5)
    v14 = 1;
  if (v14 >> 61)
    sub_1000CDEB8();
  v15 = v14 >> 2;
  v16 = 8 * v14;
  v17 = (char *)operator new(8 * v14);
  v18 = &v17[8 * v15];
  v20 = v4 - v6;
  v19 = v4 == v6;
  v4 = v18;
  if (!v19)
  {
    v4 = &v18[v20 & 0xFFFFFFFFFFFFFFF8];
    v21 = v20 - 8;
    if ((unint64_t)(v20 - 8) < 0x38)
    {
      v22 = &v17[8 * v15];
      do
      {
LABEL_19:
        v31 = *(_QWORD *)v6;
        v6 += 8;
        *(_QWORD *)v22 = v31;
        v22 += 8;
      }
      while (v22 != v4);
      goto LABEL_20;
    }
    v23 = &v17[8 * v15];
    v22 = v23;
    if ((unint64_t)(v23 - v6) < 0x20)
      goto LABEL_19;
    v24 = (v21 >> 3) + 1;
    v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
    v22 = &v18[v25];
    v26 = &v6[v25];
    v27 = (__int128 *)(v6 + 16);
    v28 = v23 + 16;
    v29 = v24 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *v27;
      *(v28 - 1) = *(v27 - 1);
      *v28 = v30;
      v27 += 2;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    v6 = v26;
    if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
      goto LABEL_19;
  }
LABEL_20:
  *a1 = v17;
  a1[1] = v18;
  a1[2] = v4;
  a1[3] = &v17[v16];
  if (v5)
  {
    operator delete(v5);
    v4 = a1[2];
  }
LABEL_22:
  *(_QWORD *)v4 = *a2;
  a1[2] += 8;
}

void sub_100190EA8(void **a1, _QWORD *a2)
{
  char *v4;
  char *v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  _OWORD *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v4 = (char *)a1[1];
  if (v4 == *a1)
  {
    v7 = a1[2];
    v6 = a1[3];
    if (v7 >= v6)
    {
      v13 = v6 - v4;
      v12 = v13 == 0;
      v14 = v13 >> 2;
      if (v12)
        v14 = 1;
      if (v14 >> 61)
        sub_1000CDEB8();
      v15 = (v14 + 3) >> 2;
      v16 = 8 * v14;
      v17 = (char *)operator new(8 * v14);
      v5 = &v17[8 * v15];
      v18 = v5;
      v19 = v7 - v4;
      if (v7 != v4)
      {
        v18 = &v5[v19 & 0xFFFFFFFFFFFFFFF8];
        v20 = v19 - 8;
        v21 = &v17[8 * v15];
        v22 = v4;
        if (v20 < 0x38)
          goto LABEL_27;
        v23 = &v17[8 * v15];
        v21 = v23;
        v22 = v4;
        if ((unint64_t)(v23 - v4) < 0x20)
          goto LABEL_27;
        v24 = (v20 >> 3) + 1;
        v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
        v21 = &v5[v25];
        v22 = &v4[v25];
        v26 = (__int128 *)(v4 + 16);
        v27 = v23 + 16;
        v28 = v24 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v29 = *v26;
          *(v27 - 1) = *(v26 - 1);
          *v27 = v29;
          v26 += 2;
          v27 += 2;
          v28 -= 4;
        }
        while (v28);
        if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_27:
          do
          {
            v30 = *(_QWORD *)v22;
            v22 += 8;
            *(_QWORD *)v21 = v30;
            v21 += 8;
          }
          while (v21 != v18);
        }
      }
      *a1 = v17;
      a1[1] = v5;
      a1[2] = v18;
      a1[3] = &v17[v16];
      if (v4)
      {
        operator delete(v4);
        v5 = (char *)a1[1];
      }
    }
    else
    {
      v8 = (v6 - v7) >> 3;
      if (v8 >= -1)
        v9 = v8 + 1;
      else
        v9 = v8 + 2;
      v10 = v9 >> 1;
      v11 = &v7[8 * (v9 >> 1)];
      v5 = &v11[-(v7 - v4)];
      if (v7 != v4)
      {
        memmove(&v11[-(v7 - v4)], v4, v7 - v4);
        v4 = (char *)a1[2];
      }
      a1[1] = v5;
      a1[2] = &v4[8 * v10];
    }
  }
  else
  {
    v5 = (char *)a1[1];
  }
  *((_QWORD *)v5 - 1) = *a2;
  a1[1] = (char *)a1[1] - 8;
}

_QWORD *sub_100191040(int64x2_t *a1, char *a2, uint64_t a3, char *__src, char *a5, unint64_t a6)
{
  unint64_t v6;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  const void **v18;
  _BYTE *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  const void **v24;
  _BYTE *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  const void **v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  const void **v42;
  _BYTE *v43;
  const void **v44;
  _BYTE *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  const void **v50;
  _BYTE *v51;
  uint64_t v52;
  const void **v53;
  char *v54;
  unint64_t v55;
  _QWORD *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  const void **v61;
  char *v62;
  unint64_t v63;
  void **v64;
  _BYTE *v65;
  uint64_t v66;
  size_t v67;
  _BYTE *v68;
  unint64_t v69;
  const void **v70;
  _BYTE *v71;
  size_t v72;
  size_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *result;
  uint64_t v78;
  uint64_t v79;
  const void **v80;
  _BYTE *v81;
  const void **v82;
  char *v83;

  v6 = a6;
  v10 = a1[2].u64[0];
  v11 = v10 >> 12;
  v12 = a1->i64[1];
  v13 = a1[1].i64[0];
  v14 = (char *)(v12 + 8 * (v10 >> 12));
  if (v13 == v12)
  {
    v15 = 0;
    if (a3)
    {
LABEL_3:
      v16 = a3 + ((a2 - v14) << 9) - (v15 + *(_QWORD *)a2) + *(_QWORD *)v14;
      v17 = a1[2].i64[1];
      if (v16 < v17 - v16)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else
  {
    v15 = *(_QWORD *)v14 + (a1[2].i64[0] & 0xFFF);
    if (a3 != v15)
      goto LABEL_3;
  }
  v16 = 0;
  v17 = a1[2].i64[1];
  if (v17)
  {
LABEL_4:
    if (a6 > v10)
    {
      sub_10019166C((uint64_t)a1, a6 - v10);
      v10 = a1[2].u64[0];
      v12 = a1->i64[1];
      v13 = a1[1].i64[0];
      v11 = v10 >> 12;
    }
    v18 = (const void **)(v12 + 8 * v11);
    if (v13 == v12)
    {
      v19 = 0;
      v20 = v6 - v16;
      if (v6 > v16)
      {
LABEL_8:
        v21 = &__src[v20];
        if (v16 >= v6 >> 1)
          v22 = v21;
        else
          v22 = &a5[-v16];
        if (v22 == __src)
        {
          v25 = v19;
          v24 = v18;
          v22 = __src;
        }
        else
        {
          v23 = v22;
          v24 = v18;
          v25 = v19;
          do
          {
            if (v25 == *v24)
            {
              v27 = (uint64_t)*--v24;
              v25 = (_BYTE *)(v27 + 4096);
            }
            v26 = *--v23;
            *--v25 = v26;
            a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_10038D7D0);
          }
          while (v23 != __src);
        }
        v6 = v16;
        if (!v16)
          goto LABEL_98;
        goto LABEL_40;
      }
    }
    else
    {
      v19 = (char *)*v18 + (v10 & 0xFFF);
      v20 = v6 - v16;
      if (v6 > v16)
        goto LABEL_8;
    }
    v25 = v19;
    v24 = v18;
    v22 = __src;
    if (!v6)
      goto LABEL_98;
LABEL_40:
    v41 = v19 - (_BYTE *)*v18 + v6;
    if (v41 < 1)
    {
      v42 = &v18[-((unint64_t)(4095 - v41) >> 12)];
      v43 = (char *)*v42 + (~(4095 - (_WORD)v41) & 0xFFF);
      if (v43 == v19)
        goto LABEL_51;
    }
    else
    {
      v42 = &v18[(unint64_t)v41 >> 12];
      v43 = (char *)*v42 + (v41 & 0xFFF);
      if (v43 == v19)
      {
LABEL_51:
        if (v6 < v16)
        {
          v49 = v19 - (_BYTE *)*v18 + v16;
          if (v49 < 1)
          {
            v63 = 4095 - v49;
            v50 = &v18[-(v63 >> 12)];
            v51 = (char *)*v50 + (~(_WORD)v63 & 0xFFF);
          }
          else
          {
            v50 = &v18[(unint64_t)v49 >> 12];
            v51 = (char *)*v50 + (v49 & 0xFFF);
          }
          v80 = v18;
          v81 = v19;
          sub_1001926A0(v42, v43, v50, v51, (uint64_t)&v80);
          v18 = v80;
          v19 = v81;
        }
        if (v22 != a5)
        {
          v65 = *v18;
          v64 = (void **)(v18 + 1);
          v66 = v65 - v19 + 4096;
          if (a5 - v22 >= v66)
            v67 = v66;
          else
            v67 = a5 - v22;
          if (v67)
LABEL_77:
            memmove(v19, v22, v67);
          while (1)
          {
            v22 += v67;
            if (v22 == a5)
              break;
            v68 = *v64++;
            v19 = v68;
            if (a5 - v22 >= 4096)
              v67 = 4096;
            else
              v67 = a5 - v22;
            if (v67)
              goto LABEL_77;
          }
        }
        goto LABEL_98;
      }
    }
    v44 = v42;
    v45 = v43;
    while (1)
    {
      if (v25 == *v24)
      {
        v47 = (uint64_t)*--v24;
        v25 = (_BYTE *)(v47 + 4096);
        if (v45 == *v44)
        {
LABEL_50:
          v48 = (uint64_t)*--v44;
          v45 = (_BYTE *)(v48 + 4096);
        }
      }
      else if (v45 == *v44)
      {
        goto LABEL_50;
      }
      v46 = *--v45;
      *--v25 = v46;
      a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_10038D7D0);
      if (v45 == v19)
        goto LABEL_51;
    }
  }
LABEL_18:
  v28 = ((v13 - v12) << 9) - 1;
  if (v13 == v12)
    v28 = 0;
  v29 = v10 + v17;
  v30 = v28 - v29;
  if (a6 > v30)
  {
    sub_100191D48((uint64_t)a1, a6 - v30);
    v17 = a1[2].i64[1];
    v12 = a1->i64[1];
    v13 = a1[1].i64[0];
    v29 = a1[2].i64[0] + v17;
  }
  v31 = (const void **)(v12 + 8 * (v29 >> 12));
  if (v13 != v12)
  {
    v32 = (char *)*v31 + (v29 & 0xFFF);
    v33 = v17 - v16;
    v34 = v17 - v16 - v6;
    if (v17 - v16 < v6)
      goto LABEL_24;
LABEL_36:
    v39 = v32;
    v38 = v31;
    v36 = a5;
    if (!v6)
      goto LABEL_98;
    goto LABEL_56;
  }
  v32 = 0;
  v33 = v17 - v16;
  v34 = v17 - v16 - v6;
  if (v17 - v16 >= v6)
    goto LABEL_36;
LABEL_24:
  v35 = &a5[v34];
  if (v33 >= v6 >> 1)
    v36 = v35;
  else
    v36 = &__src[v33];
  if (v36 == a5)
  {
    v39 = v32;
    v38 = v31;
    v36 = a5;
  }
  else
  {
    v37 = v36;
    v38 = v31;
    v39 = v32;
    do
    {
      *v39++ = *v37;
      if (&v39[-*v38] == (char *)4096)
      {
        v40 = (char *)v38[1];
        ++v38;
        v39 = v40;
      }
      ++v37;
      ++a1[2].i64[1];
    }
    while (v37 != a5);
  }
  v6 = v33;
  if (!v33)
    goto LABEL_98;
LABEL_56:
  v52 = &v32[-v6] - (_BYTE *)*v31;
  if (v52 < 1)
  {
    v55 = 4095 - v52;
    v53 = &v31[-(v55 >> 12)];
    v54 = (char *)*v53 + (~(_WORD)v55 & 0xFFF);
    if (v54 == v32)
      goto LABEL_67;
    goto LABEL_60;
  }
  v53 = &v31[(unint64_t)v52 >> 12];
  v54 = (char *)*v53 + (v52 & 0xFFF);
  if (v54 != v32)
  {
LABEL_60:
    v56 = v53;
    v57 = v54;
    do
    {
      *v39++ = *v57;
      if (&v39[-*v38] == (char *)4096)
      {
        v58 = (char *)v38[1];
        ++v38;
        v39 = v58;
        if (&(++v57)[-*v56] == (char *)4096)
        {
LABEL_66:
          v59 = (char *)v56[1];
          ++v56;
          v57 = v59;
        }
      }
      else if (&(++v57)[-*v56] == (char *)4096)
      {
        goto LABEL_66;
      }
      ++a1[2].i64[1];
    }
    while (v57 != v32);
  }
LABEL_67:
  if (v6 < v33)
  {
    v60 = v32 - ((_BYTE *)*v31 + v33);
    if (v60 < 1)
    {
      v69 = 4095 - v60;
      v61 = &v31[-(v69 >> 12)];
      v62 = (char *)*v61 + (~(_WORD)v69 & 0xFFF);
    }
    else
    {
      v61 = &v31[(unint64_t)v60 >> 12];
      v62 = (char *)*v61 + (v60 & 0xFFF);
    }
    sub_100192960(v61, v62, v53, v54, v31, v32, &v80);
    v31 = v82;
    v32 = v83;
  }
  if (v36 != __src)
  {
    v71 = *v31;
    v70 = v31 - 1;
    v72 = v32 - v71;
    if (v36 - __src >= v32 - v71)
      v73 = v72;
    else
      v73 = v36 - __src;
    v74 = &v36[-v73];
    if (v73)
LABEL_91:
      memmove(&v32[-v73], v74, v73);
    while (v74 != __src)
    {
      v75 = (uint64_t)*v70--;
      v32 = (char *)(v75 + 4096);
      if (v74 - __src >= 4096)
        v73 = 4096;
      else
        v73 = v74 - __src;
      v74 -= v73;
      if (v73)
        goto LABEL_91;
    }
  }
LABEL_98:
  v76 = a1->i64[1];
  result = (_QWORD *)(v76 + 8 * ((unint64_t)a1[2].i64[0] >> 12));
  if (a1[1].i64[0] == v76)
  {
    v78 = 0;
    if (!v16)
      return result;
  }
  else
  {
    v78 = *result + (a1[2].i64[0] & 0xFFF);
    if (!v16)
      return result;
  }
  v79 = v78 - *result + v16;
  if (v79 < 1)
    result -= (unint64_t)(4095 - v79) >> 12;
  else
    result += (unint64_t)v79 >> 12;
  return result;
}

void sub_10019166C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  _BYTE *v25;
  void *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  _BYTE *v34;
  void *v35;
  unint64_t v36;
  char *v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  _OWORD *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  char *v53;
  void *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  unint64_t v64;
  int64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 *v73;
  _OWORD *v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  unint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  unint64_t v87;
  int64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 *v96;
  _OWORD *v97;
  uint64_t v98;
  __int128 v99;
  unint64_t v100;
  void *v101;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4 == v3)
    v5 = a2 + 1;
  else
    v5 = a2;
  if (v4 == v3)
    v6 = 0;
  else
    v6 = ((v4 - v3) << 9) - 1;
  if ((v5 & 0xFFF) != 0)
    v7 = (v5 >> 12) + 1;
  else
    v7 = v5 >> 12;
  v8 = *(_QWORD *)(a1 + 32);
  v9 = (unint64_t)(v6 - (*(_QWORD *)(a1 + 40) + v8)) >> 12;
  if (v7 >= v9)
    v10 = (unint64_t)(v6 - (*(_QWORD *)(a1 + 40) + v8)) >> 12;
  else
    v10 = v7;
  if (v7 <= v9)
  {
    for (*(_QWORD *)(a1 + 32) = v8 + (v10 << 12); v10; --v10)
    {
      v17 = *(_QWORD *)(a1 + 16);
      v101 = *(void **)(v17 - 8);
      *(_QWORD *)(a1 + 16) = v17 - 8;
      sub_100190EA8((void **)a1, &v101);
    }
    return;
  }
  v11 = v7 - v10;
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)a1;
  v13 = (v4 - v3) >> 3;
  if (v7 - v10 <= (v12 >> 3) - v13)
  {
    if (v11)
    {
      if (v3 == *(_QWORD *)a1)
      {
LABEL_31:
        v20 = v11;
        do
        {
          v101 = operator new(0x1000uLL);
          sub_100190D1C((char **)a1, &v101);
          --v20;
        }
        while (v20);
        v10 += v11;
        v8 = *(_QWORD *)(a1 + 32);
      }
      else
      {
        while (1)
        {
          v101 = operator new(0x1000uLL);
          sub_100190EA8((void **)a1, &v101);
          v18 = *(_QWORD *)(a1 + 8);
          v19 = *(_QWORD *)(a1 + 16) - v18 == 8 ? 4095 : 4096;
          v8 = v19 + *(_QWORD *)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v8;
          if (!--v11)
            break;
          if (v18 == *(_QWORD *)a1)
            goto LABEL_31;
        }
      }
    }
    for (*(_QWORD *)(a1 + 32) = v8 + (v10 << 12); v10; --v10)
    {
      v21 = *(_QWORD *)(a1 + 16);
      v101 = *(void **)(v21 - 8);
      *(_QWORD *)(a1 + 16) = v21 - 8;
      sub_100190EA8((void **)a1, &v101);
    }
    return;
  }
  v14 = v4 == v3;
  if (v12 >> 2 <= v11 + v13)
    v15 = v11 + v13;
  else
    v15 = v12 >> 2;
  if (v15)
  {
    if (v15 >> 61)
      sub_1000CDEB8();
    v16 = (char *)operator new(8 * v15);
  }
  else
  {
    v16 = 0;
  }
  v100 = (v7 << 12) - v14;
  v22 = &v16[8 * v15];
  v23 = v16;
  v24 = v16;
  v25 = v16;
  do
  {
    v26 = operator new(0x1000uLL);
    if (v24 != v22)
      goto LABEL_40;
    if (v23 > v25)
    {
      v27 = v25;
      v28 = (v23 - v25) >> 3;
      if (v28 >= -1)
        v29 = v28 + 1;
      else
        v29 = v28 + 2;
      v30 = v29 >> 1;
      v31 = &v23[-8 * (v29 >> 1)];
      v32 = v22;
      if (v22 != v23)
      {
        memmove(v31, v23, v22 - v23);
        v32 = v23;
      }
      v24 = &v31[v22 - v23];
      v23 = &v32[-8 * v30];
      v25 = v27;
      goto LABEL_40;
    }
    if (v22 == v25)
      v33 = 1;
    else
      v33 = (v22 - v25) >> 2;
    if (v33 >> 61)
      sub_1000CDEB8();
    v34 = operator new(8 * v33);
    v35 = v25;
    v36 = v33 >> 2;
    v37 = &v34[8 * (v33 >> 2)];
    v24 = v37;
    v38 = v22 - v23;
    if (v22 != v23)
    {
      v24 = &v37[v38 & 0xFFFFFFFFFFFFFFF8];
      v39 = v38 - 8;
      if (v39 >= 0x38 && (v40 = 8 * v36, (unint64_t)(&v34[8 * v36] - v23) >= 0x20))
      {
        v44 = (v39 >> 3) + 1;
        v45 = 8 * (v44 & 0x3FFFFFFFFFFFFFFCLL);
        v41 = &v37[v45];
        v42 = &v23[v45];
        v46 = (__int128 *)(v23 + 16);
        v47 = &v34[v40 + 16];
        v48 = v44 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v49 = *v46;
          *(v47 - 1) = *(v46 - 1);
          *v47 = v49;
          v46 += 2;
          v47 += 2;
          v48 -= 4;
        }
        while (v48);
        if (v44 == (v44 & 0x3FFFFFFFFFFFFFFCLL))
          goto LABEL_57;
      }
      else
      {
        v41 = &v34[8 * (v33 >> 2)];
        v42 = v23;
      }
      do
      {
        v43 = *(_QWORD *)v42;
        v42 += 8;
        *(_QWORD *)v41 = v43;
        v41 += 8;
      }
      while (v41 != v24);
    }
LABEL_57:
    v22 = &v34[8 * v33];
    if (v35)
      operator delete(v35);
    v23 = &v34[8 * (v33 >> 2)];
    v25 = v34;
LABEL_40:
    *(_QWORD *)v24 = v26;
    v24 += 8;
    --v11;
  }
  while (v11);
  v50 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    while (1)
    {
      if (v24 == v22)
      {
        if (v23 <= v25)
        {
          if (v22 == v25)
            v61 = 1;
          else
            v61 = (v22 - v25) >> 2;
          if (v61 >> 61)
            sub_1000CDEB8();
          v62 = operator new(8 * v61);
          v63 = v62;
          v64 = v61 >> 2;
          v51 = &v62[8 * (v61 >> 2)];
          v24 = v51;
          v65 = v22 - v23;
          if (v22 != v23)
          {
            v24 = &v51[v65 & 0xFFFFFFFFFFFFFFF8];
            v66 = v65 - 8;
            if (v66 < 0x38 || (v67 = 8 * v64, (unint64_t)(&v62[8 * v64] - v23) < 0x20))
            {
              v68 = &v62[8 * (v61 >> 2)];
              v69 = v23;
              goto LABEL_88;
            }
            v71 = (v66 >> 3) + 1;
            v72 = 8 * (v71 & 0x3FFFFFFFFFFFFFFCLL);
            v68 = &v51[v72];
            v69 = &v23[v72];
            v73 = (__int128 *)(v23 + 16);
            v74 = &v62[v67 + 16];
            v75 = v71 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v76 = *v73;
              *(v74 - 1) = *(v73 - 1);
              *v74 = v76;
              v73 += 2;
              v74 += 2;
              v75 -= 4;
            }
            while (v75);
            if (v71 != (v71 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_88:
                v70 = *(_QWORD *)v69;
                v69 += 8;
                *(_QWORD *)v68 = v70;
                v68 += 8;
              }
              while (v68 != v24);
            }
          }
          v22 = &v62[8 * v61];
          if (v25)
            operator delete(v25);
          v25 = v63;
          goto LABEL_71;
        }
        v55 = v25;
        v56 = (v23 - v25) >> 3;
        if (v56 >= -1)
          v57 = v56 + 1;
        else
          v57 = v56 + 2;
        v58 = v57 >> 1;
        v59 = &v23[-8 * (v57 >> 1)];
        v60 = v22;
        if (v22 != v23)
        {
          memmove(v59, v23, v22 - v23);
          v60 = v23;
        }
        v24 = &v59[v22 - v23];
        v51 = &v60[-8 * v58];
        v25 = v55;
      }
      else
      {
        v51 = v23;
      }
LABEL_71:
      *(_QWORD *)v24 = *(_QWORD *)(v50 - 8);
      v24 += 8;
      v50 = *(_QWORD *)(a1 + 16) - 8;
      *(_QWORD *)(a1 + 16) = v50;
      v23 = v51;
      if (!--v10)
        goto LABEL_66;
    }
  }
  v51 = v23;
LABEL_66:
  v52 = *(uint64_t **)(a1 + 8);
  if (v52 != (uint64_t *)v50)
  {
    while (1)
    {
      if (v24 == v22)
      {
        if (v51 <= v25)
        {
          if (v22 == v25)
            v84 = 1;
          else
            v84 = (v22 - v25) >> 2;
          if (v84 >> 61)
            sub_1000CDEB8();
          v85 = operator new(8 * v84);
          v86 = v85;
          v87 = v84 >> 2;
          v53 = &v85[8 * (v84 >> 2)];
          v24 = v53;
          v88 = v22 - v51;
          if (v22 != v51)
          {
            v24 = &v53[v88 & 0xFFFFFFFFFFFFFFF8];
            v89 = v88 - 8;
            if (v89 < 0x38 || (v90 = 8 * v87, (unint64_t)(&v85[8 * v87] - v51) < 0x20))
            {
              v91 = &v85[8 * (v84 >> 2)];
              v92 = v51;
              goto LABEL_114;
            }
            v94 = (v89 >> 3) + 1;
            v95 = 8 * (v94 & 0x3FFFFFFFFFFFFFFCLL);
            v91 = &v53[v95];
            v92 = &v51[v95];
            v96 = (__int128 *)(v51 + 16);
            v97 = &v85[v90 + 16];
            v98 = v94 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v99 = *v96;
              *(v97 - 1) = *(v96 - 1);
              *v97 = v99;
              v96 += 2;
              v97 += 2;
              v98 -= 4;
            }
            while (v98);
            if (v94 != (v94 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_114:
                v93 = *(_QWORD *)v92;
                v92 += 8;
                *(_QWORD *)v91 = v93;
                v91 += 8;
              }
              while (v91 != v24);
            }
          }
          v22 = &v85[8 * v84];
          if (v25)
            operator delete(v25);
          v25 = v86;
          goto LABEL_97;
        }
        v78 = v25;
        v79 = (v51 - v25) >> 3;
        if (v79 >= -1)
          v80 = v79 + 1;
        else
          v80 = v79 + 2;
        v81 = v80 >> 1;
        v82 = &v51[-8 * (v80 >> 1)];
        v83 = v22;
        if (v22 != v51)
        {
          memmove(v82, v51, v22 - v51);
          v83 = v51;
        }
        v24 = &v82[v22 - v51];
        v53 = &v83[-8 * v81];
        v25 = v78;
      }
      else
      {
        v53 = v51;
      }
LABEL_97:
      v77 = *v52++;
      *(_QWORD *)v24 = v77;
      v24 += 8;
      v51 = v53;
      if (v52 == *(uint64_t **)(a1 + 16))
        goto LABEL_68;
    }
  }
  v53 = v51;
LABEL_68:
  v54 = *(void **)a1;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v53;
  *(_QWORD *)(a1 + 16) = v24;
  *(_QWORD *)(a1 + 24) = v22;
  *(_QWORD *)(a1 + 32) += v100;
  if (v54)
    operator delete(v54);
}

void sub_100191CDC(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_100191D28()
{
  __cxa_end_catch();
  JUMPOUT(0x100191D30);
}

void sub_100191D48(uint64_t a1, unint64_t a2)
{
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  BOOL v29;
  int64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  char *v55;
  int64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  _QWORD *v68;
  char *v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  char *v79;
  char *v80;
  unint64_t v81;
  int64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 *v90;
  char *v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  char *v101;
  unint64_t v102;
  int64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 *v110;
  char *v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t i;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  int64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  int64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  __int128 *v139;
  char *v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;

  v3 = *(char **)(a1 + 16);
  v4 = (uint64_t)&v3[-*(_QWORD *)(a1 + 8)];
  if (v4)
    v5 = a2;
  else
    v5 = a2 + 1;
  if ((v5 & 0xFFF) != 0)
    v6 = (v5 >> 12) + 1;
  else
    v6 = v5 >> 12;
  v7 = *(_QWORD *)(a1 + 32);
  if (v6 >= v7 >> 12)
    v8 = v7 >> 12;
  else
    v8 = v6;
  if (v6 <= v7 >> 12)
  {
    *(_QWORD *)(a1 + 32) = v7 - (v8 << 12);
    if (!v8)
      return;
    while (1)
    {
      v15 = *(_QWORD **)(a1 + 8);
      v16 = (char *)(v15 + 1);
      v17 = *v15;
      *(_QWORD *)(a1 + 8) = v15 + 1;
      if (v3 == *(char **)(a1 + 24))
      {
        v18 = *(char **)a1;
        if ((unint64_t)v16 <= *(_QWORD *)a1)
        {
          v24 = (v3 - v18) >> 2;
          if (v3 == v18)
            v24 = 1;
          if (v24 >> 61)
            goto LABEL_159;
          v25 = v24 >> 2;
          v26 = 8 * v24;
          v27 = (char *)operator new(8 * v24);
          v28 = &v27[8 * v25];
          v30 = v3 - v16;
          v29 = v3 == v16;
          v3 = v28;
          if (!v29)
          {
            v3 = &v28[v30 & 0xFFFFFFFFFFFFFFF8];
            v31 = v30 - 8;
            if ((unint64_t)(v30 - 8) < 0x38)
            {
              v32 = &v27[8 * v25];
              goto LABEL_39;
            }
            v32 = &v27[8 * v25];
            if ((unint64_t)(v32 - v16) < 0x20)
              goto LABEL_165;
            v33 = (v31 >> 3) + 1;
            v34 = 8 * (v33 & 0x3FFFFFFFFFFFFFFCLL);
            v32 = &v28[v34];
            v16 += v34;
            v35 = (__int128 *)(v15 + 3);
            v36 = &v27[8 * v25 + 16];
            v37 = v33 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v38 = *v35;
              *((_OWORD *)v36 - 1) = *(v35 - 1);
              *(_OWORD *)v36 = v38;
              v35 += 2;
              v36 += 32;
              v37 -= 4;
            }
            while (v37);
            if (v33 != (v33 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_165:
              do
              {
LABEL_39:
                v39 = *(_QWORD *)v16;
                v16 += 8;
                *(_QWORD *)v32 = v39;
                v32 += 8;
              }
              while (v32 != v3);
            }
          }
          *(_QWORD *)a1 = v27;
          *(_QWORD *)(a1 + 8) = v28;
          *(_QWORD *)(a1 + 16) = v3;
          *(_QWORD *)(a1 + 24) = &v27[v26];
          if (v18)
          {
            operator delete(v18);
            v3 = *(char **)(a1 + 16);
          }
          goto LABEL_21;
        }
        v19 = (uint64_t)&v16[-*(_QWORD *)a1] >> 3;
        if (v19 >= -1)
          v20 = v19 + 1;
        else
          v20 = v19 + 2;
        v21 = v20 >> 1;
        v22 = &v16[-8 * (v20 >> 1)];
        v23 = v3 - v16;
        if (v3 != v16)
        {
          memmove(&v16[-8 * (v20 >> 1)], v16, v3 - v16);
          v3 = *(char **)(a1 + 8);
        }
        v14 = &v3[-8 * v21];
        v3 = &v22[v23];
        *(_QWORD *)(a1 + 8) = v14;
        *(_QWORD *)(a1 + 16) = &v22[v23];
      }
LABEL_21:
      *(_QWORD *)v3 = v17;
      v3 = (char *)(*(_QWORD *)(a1 + 16) + 8);
      *(_QWORD *)(a1 + 16) = v3;
      if (!--v8)
        return;
    }
  }
  v9 = v6 - v8;
  v10 = *(_QWORD *)(a1 + 24) - *(_QWORD *)a1;
  v11 = v4 >> 3;
  if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
  {
    if (v9)
    {
      while (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a1 + 16))
      {
        v145 = operator new(0x1000uLL);
        sub_100190D1C((char **)a1, &v145);
        --v6;
        if (!--v9)
          goto LABEL_134;
      }
      for (i = 0; i != v9; ++i)
      {
        v145 = operator new(0x1000uLL);
        sub_100190EA8((void **)a1, &v145);
        if (*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8) == 8)
          v116 = 4095;
        else
          v116 = 4096;
        v117 = v116 + *(_QWORD *)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v117;
      }
      v8 = v6;
      *(_QWORD *)(a1 + 32) = v117 - (v6 << 12);
      if (!v6)
        return;
    }
    else
    {
LABEL_134:
      *(_QWORD *)(a1 + 32) -= v8 << 12;
      if (!v8)
        return;
    }
    v118 = *(char **)(a1 + 16);
    while (1)
    {
      v120 = *(_QWORD **)(a1 + 8);
      v121 = (char *)(v120 + 1);
      v122 = *v120;
      *(_QWORD *)(a1 + 8) = v120 + 1;
      if (v118 == *(char **)(a1 + 24))
      {
        v123 = *(char **)a1;
        if ((unint64_t)v121 <= *(_QWORD *)a1)
        {
          v129 = (v118 - v123) >> 2;
          if (v118 == v123)
            v129 = 1;
          if (v129 >> 61)
            goto LABEL_159;
          v130 = v129 >> 2;
          v131 = 8 * v129;
          v132 = (char *)operator new(8 * v129);
          v133 = &v132[8 * v130];
          v134 = v118 - v121;
          v29 = v118 == v121;
          v118 = v133;
          if (!v29)
          {
            v118 = &v133[v134 & 0xFFFFFFFFFFFFFFF8];
            v135 = v134 - 8;
            if ((unint64_t)(v134 - 8) < 0x38)
            {
              v136 = &v132[8 * v130];
              goto LABEL_155;
            }
            v136 = &v132[8 * v130];
            if ((unint64_t)(v136 - v121) < 0x20)
              goto LABEL_166;
            v137 = (v135 >> 3) + 1;
            v138 = 8 * (v137 & 0x3FFFFFFFFFFFFFFCLL);
            v136 = &v133[v138];
            v121 += v138;
            v139 = (__int128 *)(v120 + 3);
            v140 = &v132[8 * v130 + 16];
            v141 = v137 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v142 = *v139;
              *((_OWORD *)v140 - 1) = *(v139 - 1);
              *(_OWORD *)v140 = v142;
              v139 += 2;
              v140 += 32;
              v141 -= 4;
            }
            while (v141);
            if (v137 != (v137 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_166:
              do
              {
LABEL_155:
                v143 = *(_QWORD *)v121;
                v121 += 8;
                *(_QWORD *)v136 = v143;
                v136 += 8;
              }
              while (v136 != v118);
            }
          }
          *(_QWORD *)a1 = v132;
          *(_QWORD *)(a1 + 8) = v133;
          *(_QWORD *)(a1 + 16) = v118;
          *(_QWORD *)(a1 + 24) = &v132[v131];
          if (v123)
          {
            operator delete(v123);
            v118 = *(char **)(a1 + 16);
          }
          goto LABEL_137;
        }
        v124 = (uint64_t)&v121[-*(_QWORD *)a1] >> 3;
        if (v124 >= -1)
          v125 = v124 + 1;
        else
          v125 = v124 + 2;
        v126 = v125 >> 1;
        v127 = &v121[-8 * (v125 >> 1)];
        v128 = v118 - v121;
        if (v118 != v121)
        {
          memmove(&v121[-8 * (v125 >> 1)], v121, v118 - v121);
          v118 = *(char **)(a1 + 8);
        }
        v119 = &v118[-8 * v126];
        v118 = &v127[v128];
        *(_QWORD *)(a1 + 8) = v119;
        *(_QWORD *)(a1 + 16) = &v127[v128];
      }
LABEL_137:
      *(_QWORD *)v118 = v122;
      v118 = (char *)(*(_QWORD *)(a1 + 16) + 8);
      *(_QWORD *)(a1 + 16) = v118;
      if (!--v8)
        return;
    }
  }
  if (v10 >> 2 <= v9 + v11)
    v12 = v9 + v11;
  else
    v12 = v10 >> 2;
  if (v12)
  {
    if (v12 >> 61)
LABEL_159:
      sub_1000CDEB8();
    v13 = (char *)operator new(8 * v12);
  }
  else
  {
    v13 = 0;
  }
  v144 = v8 << 12;
  v40 = &v13[8 * (v11 - v8)];
  v41 = &v13[8 * v12];
  v42 = v40;
  v43 = v13;
  do
  {
    v44 = operator new(0x1000uLL);
    if (v42 != v41)
      goto LABEL_49;
    if (v40 > v43)
    {
      v45 = v43;
      v46 = (v40 - v43) >> 3;
      if (v46 >= -1)
        v47 = v46 + 1;
      else
        v47 = v46 + 2;
      v48 = v47 >> 1;
      v49 = &v40[-8 * (v47 >> 1)];
      v50 = v41;
      if (v41 != v40)
      {
        memmove(v49, v40, v41 - v40);
        v50 = v40;
      }
      v42 = &v49[v41 - v40];
      v40 = &v50[-8 * v48];
      v43 = v45;
      goto LABEL_49;
    }
    if (v41 == v43)
      v51 = 1;
    else
      v51 = (v41 - v43) >> 2;
    if (v51 >> 61)
      sub_1000CDEB8();
    v52 = (char *)operator new(8 * v51);
    v53 = v43;
    v54 = v51 >> 2;
    v55 = &v52[8 * (v51 >> 2)];
    v42 = v55;
    v56 = v41 - v40;
    if (v41 != v40)
    {
      v42 = &v55[v56 & 0xFFFFFFFFFFFFFFF8];
      v57 = v56 - 8;
      if (v57 >= 0x38 && (v58 = 8 * v54, (unint64_t)(&v52[8 * v54] - v40) >= 0x20))
      {
        v62 = (v57 >> 3) + 1;
        v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
        v59 = &v55[v63];
        v60 = &v40[v63];
        v64 = (__int128 *)(v40 + 16);
        v65 = &v52[v58 + 16];
        v66 = v62 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v67 = *v64;
          *((_OWORD *)v65 - 1) = *(v64 - 1);
          *(_OWORD *)v65 = v67;
          v64 += 2;
          v65 += 32;
          v66 -= 4;
        }
        while (v66);
        if (v62 == (v62 & 0x3FFFFFFFFFFFFFFCLL))
          goto LABEL_66;
      }
      else
      {
        v59 = &v52[8 * (v51 >> 2)];
        v60 = v40;
      }
      do
      {
        v61 = *(_QWORD *)v60;
        v60 += 8;
        *(_QWORD *)v59 = v61;
        v59 += 8;
      }
      while (v59 != v42);
    }
LABEL_66:
    v41 = &v52[8 * v51];
    if (v53)
      operator delete(v53);
    v40 = &v52[8 * (v51 >> 2)];
    v43 = v52;
LABEL_49:
    *(_QWORD *)v42 = v44;
    v42 += 8;
    --v9;
  }
  while (v9);
  v68 = *(_QWORD **)(a1 + 8);
  if (v8)
  {
    while (1)
    {
      if (v42 == v41)
      {
        if (v40 <= v43)
        {
          if (v41 == v43)
            v78 = 1;
          else
            v78 = (v41 - v43) >> 2;
          if (v78 >> 61)
            sub_1000CDEB8();
          v79 = (char *)operator new(8 * v78);
          v80 = v79;
          v81 = v78 >> 2;
          v69 = &v79[8 * (v78 >> 2)];
          v42 = v69;
          v82 = v41 - v40;
          if (v41 != v40)
          {
            v42 = &v69[v82 & 0xFFFFFFFFFFFFFFF8];
            v83 = v82 - 8;
            if (v83 < 0x38 || (v84 = 8 * v81, (unint64_t)(&v79[8 * v81] - v40) < 0x20))
            {
              v85 = &v79[8 * (v78 >> 2)];
              v86 = v40;
              goto LABEL_96;
            }
            v88 = (v83 >> 3) + 1;
            v89 = 8 * (v88 & 0x3FFFFFFFFFFFFFFCLL);
            v85 = &v69[v89];
            v86 = &v40[v89];
            v90 = (__int128 *)(v40 + 16);
            v91 = &v79[v84 + 16];
            v92 = v88 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v93 = *v90;
              *((_OWORD *)v91 - 1) = *(v90 - 1);
              *(_OWORD *)v91 = v93;
              v90 += 2;
              v91 += 32;
              v92 -= 4;
            }
            while (v92);
            if (v88 != (v88 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_96:
                v87 = *(_QWORD *)v86;
                v86 += 8;
                *(_QWORD *)v85 = v87;
                v85 += 8;
              }
              while (v85 != v42);
            }
          }
          v41 = &v79[8 * v78];
          if (v43)
            operator delete(v43);
          v43 = v80;
          goto LABEL_79;
        }
        v72 = v43;
        v73 = (v40 - v43) >> 3;
        if (v73 >= -1)
          v74 = v73 + 1;
        else
          v74 = v73 + 2;
        v75 = v74 >> 1;
        v76 = &v40[-8 * (v74 >> 1)];
        v77 = v41;
        if (v41 != v40)
        {
          memmove(v76, v40, v41 - v40);
          v77 = v40;
        }
        v42 = &v76[v41 - v40];
        v69 = &v77[-8 * v75];
        v43 = v72;
      }
      else
      {
        v69 = v40;
      }
LABEL_79:
      *(_QWORD *)v42 = *v68;
      v42 += 8;
      v68 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v68;
      v40 = v69;
      if (!--v8)
        goto LABEL_75;
    }
  }
  v69 = v40;
LABEL_75:
  v70 = *(_QWORD **)(a1 + 16);
  if (v70 != v68)
  {
    do
    {
      if (v69 == v43)
      {
        if (v42 >= v41)
        {
          if (v41 == v43)
            v100 = 1;
          else
            v100 = (v41 - v43) >> 2;
          if (v100 >> 61)
            sub_1000CDEB8();
          v101 = (char *)operator new(8 * v100);
          v97 = v101;
          v102 = (v100 + 3) >> 2;
          v69 = &v101[8 * v102];
          v103 = v42 - v43;
          v29 = v42 == v43;
          v42 = v69;
          if (!v29)
          {
            v42 = &v69[v103 & 0xFFFFFFFFFFFFFFF8];
            v104 = v103 - 8;
            v105 = &v101[8 * v102];
            v106 = v43;
            if (v104 < 0x38)
              goto LABEL_167;
            v107 = 8 * v102;
            v105 = &v101[8 * v102];
            v106 = v43;
            if ((unint64_t)(v105 - v43) < 0x20)
              goto LABEL_167;
            v108 = (v104 >> 3) + 1;
            v109 = 8 * (v108 & 0x3FFFFFFFFFFFFFFCLL);
            v105 = &v69[v109];
            v106 = &v43[v109];
            v110 = (__int128 *)(v43 + 16);
            v111 = &v101[v107 + 16];
            v112 = v108 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v113 = *v110;
              *((_OWORD *)v111 - 1) = *(v110 - 1);
              *(_OWORD *)v111 = v113;
              v110 += 2;
              v111 += 32;
              v112 -= 4;
            }
            while (v112);
            if (v108 != (v108 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_167:
              do
              {
                v114 = *(_QWORD *)v106;
                v106 += 8;
                *(_QWORD *)v105 = v114;
                v105 += 8;
              }
              while (v105 != v42);
            }
          }
          v41 = &v101[8 * v100];
          if (v43)
            operator delete(v43);
        }
        else
        {
          v95 = (v41 - v42) >> 3;
          if (v95 >= -1)
            v96 = v95 + 1;
          else
            v96 = v95 + 2;
          v97 = v43;
          v98 = v96 >> 1;
          v69 = &v97[8 * (v96 >> 1)];
          v99 = v97;
          if (v42 != v97)
          {
            memmove(v69, v97, v42 - v97);
            v99 = v42;
          }
          v42 = &v99[8 * v98];
        }
        v43 = v97;
      }
      v94 = *--v70;
      *((_QWORD *)v69 - 1) = v94;
      v69 -= 8;
    }
    while (v70 != *(_QWORD **)(a1 + 8));
  }
  v71 = *(char **)a1;
  *(_QWORD *)a1 = v43;
  *(_QWORD *)(a1 + 8) = v69;
  *(_QWORD *)(a1 + 16) = v42;
  *(_QWORD *)(a1 + 24) = v41;
  *(_QWORD *)(a1 + 32) -= v144;
  if (v71)
    operator delete(v71);
}

void sub_100192634(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_100192680()
{
  __cxa_end_catch();
  JUMPOUT(0x100192688);
}

const void **sub_1001926A0(const void **result, _BYTE *__src, const void **a3, _BYTE *a4, uint64_t a5)
{
  _BYTE *v7;
  char *v8;
  void **v9;
  const void **v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  char *v16;
  const void **v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  char *v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  char *v28;
  void **v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  size_t v33;
  char *v34;

  v7 = __src;
  v9 = *(void ***)a5;
  v8 = *(char **)(a5 + 8);
  if (result != a3)
  {
    v11 = result;
    v12 = (char *)*result + 4096;
    if (v12 == __src)
      goto LABEL_16;
    v13 = (uint64_t)*v9++;
    v14 = v13 - (_QWORD)v8 + 4096;
    if (v12 - __src >= v14)
      v15 = v14;
    else
      v15 = v12 - __src;
    if (v15)
      goto LABEL_12;
    while (1)
    {
      v7 += v15;
      if (v7 == v12)
        break;
      v16 = (char *)*v9++;
      v8 = v16;
      if (v12 - v7 >= 4096)
        v15 = 4096;
      else
        v15 = v12 - v7;
      if (v15)
LABEL_12:
        result = (const void **)memmove(v8, v7, v15);
    }
    v8 += v15;
    if ((char *)*(v9 - 1) + 4096 != v8)
    {
      --v9;
LABEL_16:
      *(_QWORD *)a5 = v9;
      *(_QWORD *)(a5 + 8) = v8;
      v17 = v11 + 1;
      if (v17 != a3)
        goto LABEL_19;
      goto LABEL_48;
    }
    v8 = (char *)*v9;
    *(_QWORD *)a5 = v9;
    *(_QWORD *)(a5 + 8) = v8;
    v17 = v11 + 1;
    if (v17 == a3)
    {
LABEL_48:
      v30 = *a3;
      if (v30 == a4)
        goto LABEL_62;
      v31 = (uint64_t)*v9++;
      v32 = v31 - (_QWORD)v8 + 4096;
      if (a4 - v30 >= v32)
        v33 = v32;
      else
        v33 = a4 - v30;
      if (v33)
        goto LABEL_58;
      while (1)
      {
        v30 += v33;
        if (v30 == a4)
          break;
        v34 = (char *)*v9++;
        v8 = v34;
        if (a4 - v30 >= 4096)
          v33 = 4096;
        else
          v33 = a4 - v30;
        if (v33)
LABEL_58:
          result = (const void **)memmove(v8, v30, v33);
      }
      v8 += v33;
      v29 = v9 - 1;
      if ((char *)*(v9 - 1) + 4096 != v8)
      {
LABEL_61:
        v9 = v29;
        goto LABEL_62;
      }
      goto LABEL_46;
    }
    while (1)
    {
LABEL_19:
      v18 = 0;
      v19 = (char *)*v17;
      v20 = (uint64_t)*v9++;
      v21 = v20 - (_QWORD)v8 + 4096;
      if (v21 <= 4096)
        v22 = v21;
      else
        v22 = 4096;
      if (v22)
LABEL_28:
        result = (const void **)memmove(v8, &v19[v18], v22);
      while (1)
      {
        v18 += v22;
        if (v18 == 4096)
          break;
        v23 = (char *)*v9++;
        v8 = v23;
        if (4096 - v18 >= 4096)
          v22 = 4096;
        else
          v22 = 4096 - v18;
        if (v22)
          goto LABEL_28;
      }
      v8 += v22;
      v24 = v9 - 1;
      if ((char *)*(v9 - 1) + 4096 == v8)
      {
        v8 = (char *)*v9;
        *(_QWORD *)a5 = v9;
        *(_QWORD *)(a5 + 8) = v8;
        if (++v17 == a3)
          goto LABEL_48;
      }
      else
      {
        --v9;
        *(_QWORD *)a5 = v24;
        *(_QWORD *)(a5 + 8) = v8;
        if (++v17 == a3)
          goto LABEL_48;
      }
    }
  }
  if (__src != a4)
  {
    v25 = (uint64_t)*v9++;
    v26 = v25 - (_QWORD)v8 + 4096;
    if (a4 - __src >= v26)
      v27 = v26;
    else
      v27 = a4 - __src;
    if (v27)
      goto LABEL_43;
    while (1)
    {
      v7 += v27;
      if (v7 == a4)
        break;
      v28 = (char *)*v9++;
      v8 = v28;
      if (a4 - v7 >= 4096)
        v27 = 4096;
      else
        v27 = a4 - v7;
      if (v27)
LABEL_43:
        result = (const void **)memmove(v8, v7, v27);
    }
    v8 += v27;
    v29 = v9 - 1;
    if ((char *)*(v9 - 1) + 4096 != v8)
      goto LABEL_61;
LABEL_46:
    v8 = (char *)*v9;
  }
LABEL_62:
  *(_QWORD *)a5 = v9;
  *(_QWORD *)(a5 + 8) = v8;
  return result;
}

void *sub_100192960@<X0>(const void **a1@<X1>, char *a2@<X2>, const void **a3@<X3>, char *a4@<X4>, const void **a5@<X5>, char *a6@<X6>, const void ***a7@<X8>)
{
  const void **v8;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  size_t v18;
  void *result;
  uint64_t v20;
  char *v21;
  const void **v22;
  char *v23;
  _BYTE *v24;
  char *v25;
  char *v26;
  size_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  size_t v38;
  uint64_t v39;
  char *v40;

  v8 = a5;
  if (a1 == a3)
  {
    if (a2 == a4)
      goto LABEL_46;
    v35 = (uint64_t)*a5;
    v36 = a4;
    while (1)
    {
      v37 = &a6[-v35];
      if (v36 - a2 >= (uint64_t)v37)
        v38 = (size_t)v37;
      else
        v38 = v36 - a2;
      v36 -= v38;
      a6 -= v38;
      if (v38)
        result = memmove(a6, v36, v38);
      if (v36 == a2)
        break;
      v39 = (uint64_t)*--v8;
      v35 = v39;
      a6 = (char *)(v39 + 4096);
    }
    goto LABEL_44;
  }
  v14 = *a3;
  if (*a3 != a4)
  {
    v15 = (uint64_t)*a5;
    v16 = a4;
    while (1)
    {
      v17 = &a6[-v15];
      if (v16 - v14 >= (uint64_t)v17)
        v18 = (size_t)v17;
      else
        v18 = v16 - v14;
      v16 -= v18;
      a6 -= v18;
      if (v18)
        result = memmove(a6, v16, v18);
      if (v16 == v14)
        break;
      v20 = (uint64_t)*--v8;
      v15 = v20;
      a6 = (char *)(v20 + 4096);
    }
    if ((char *)*v8 + 4096 == a6)
    {
      v21 = (char *)v8[1];
      ++v8;
      a6 = v21;
    }
  }
  v22 = a3 - 1;
  if (a3 - 1 != a1)
  {
    v23 = (char *)*v8;
    do
    {
      while (1)
      {
        v24 = *v22;
        v25 = (char *)*v22 + 4096;
        while (1)
        {
          v26 = (char *)(a6 - v23);
          if (v25 - v24 >= (uint64_t)v26)
            v27 = (size_t)v26;
          else
            v27 = v25 - v24;
          v25 -= v27;
          a6 -= v27;
          if (v27)
            result = memmove(a6, v25, v27);
          if (v25 == v24)
            break;
          v28 = (char *)*--v8;
          v23 = v28;
          a6 = v28 + 4096;
        }
        v23 = (char *)*v8;
        if ((char *)*v8 + 4096 == a6)
          break;
        if (--v22 == a1)
          goto LABEL_26;
      }
      v29 = (char *)v8[1];
      ++v8;
      v23 = v29;
      a6 = v29;
      --v22;
    }
    while (v22 != a1);
  }
LABEL_26:
  v30 = (char *)*a1 + 4096;
  if (v30 != a2)
  {
    v31 = (uint64_t)*v8;
    while (1)
    {
      v32 = &a6[-v31];
      if (v30 - a2 >= (uint64_t)v32)
        v33 = (size_t)v32;
      else
        v33 = v30 - a2;
      v30 -= v33;
      a6 -= v33;
      if (v33)
        result = memmove(a6, v30, v33);
      if (v30 == a2)
        break;
      v34 = (uint64_t)*--v8;
      v31 = v34;
      a6 = (char *)(v34 + 4096);
    }
LABEL_44:
    if ((char *)*v8 + 4096 == a6)
    {
      v40 = (char *)v8[1];
      ++v8;
      a6 = v40;
    }
  }
LABEL_46:
  *a7 = a3;
  a7[1] = (const void **)a4;
  a7[2] = v8;
  a7[3] = (const void **)a6;
  return result;
}

std::string::size_type sub_100192B60(std::string *a1, uint64_t a2, _QWORD *a3, std::string::value_type *a4, uint64_t a5, std::string::value_type *a6, std::string::size_type a7)
{
  std::string *v8;
  std::string::size_type v9;
  std::string *p_p;
  std::string::size_type size;
  std::string::size_type v12;
  std::string::size_type v13;
  std::string *v14;
  size_t v15;
  std::string::size_type v16;
  std::string::size_type v17;
  std::string::value_type *v18;
  std::string *v19;
  unint64_t v20;
  std::string::size_type *v21;
  _OWORD *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t *v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  std::string::value_type v29;
  std::string __p;

  v8 = a1;
  if ((SHIBYTE(a1->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v9 = a2 - (_QWORD)a1;
    if (!a7)
      return (std::string::size_type)v8 + v9;
LABEL_5:
    sub_100192DE4(&__p, a3, a4, a5, a6);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0)
    {
      v12 = v8->__r_.__value_.__l.__size_;
      v13 = (v8->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v13 - v12 >= a7)
      {
        v14 = (std::string *)v8->__r_.__value_.__r.__words[0];
        v15 = v12 - v9;
        if (v12 == v9)
        {
LABEL_14:
          v16 = v9 + a7;
          if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0)
          {
LABEL_24:
            v8->__r_.__value_.__l.__size_ = v16;
            v14->__r_.__value_.__s.__data_[v16] = 0;
            if (!size)
              goto LABEL_40;
            goto LABEL_25;
          }
LABEL_18:
          *((_BYTE *)&v8->__r_.__value_.__s + 23) = v16 & 0x7F;
          v14->__r_.__value_.__s.__data_[v16] = 0;
          if (!size)
            goto LABEL_40;
LABEL_25:
          v18 = (char *)v14 + v9;
          if (size < 8)
          {
            v19 = p_p;
            goto LABEL_39;
          }
          v19 = p_p;
          if ((unint64_t)((char *)v14 + v9 - (char *)p_p) >= 0x20)
          {
            if (size < 0x20)
            {
              v20 = 0;
              goto LABEL_34;
            }
            v20 = size & 0xFFFFFFFFFFFFFFE0;
            v21 = &p_p->__r_.__value_.__r.__words[2];
            v22 = (_OWORD *)((char *)&v14->__r_.__value_.__r.__words[2] + v9);
            v23 = size & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v24 = *(_OWORD *)v21;
              *(v22 - 1) = *((_OWORD *)v21 - 1);
              *v22 = v24;
              v21 += 4;
              v22 += 2;
              v23 -= 32;
            }
            while (v23);
            if (size == v20)
              goto LABEL_40;
            if ((size & 0x18) != 0)
            {
LABEL_34:
              v18 += size & 0xFFFFFFFFFFFFFFF8;
              v19 = (std::string *)((char *)p_p + (size & 0xFFFFFFFFFFFFFFF8));
              v25 = (uint64_t *)((char *)p_p + v20);
              v26 = (std::string::size_type *)((char *)v14->__r_.__value_.__r.__words + v20 + v9);
              v27 = v20 - (size & 0xFFFFFFFFFFFFFFF8);
              do
              {
                v28 = *v25++;
                *v26++ = v28;
                v27 += 8;
              }
              while (v27);
              if (size != (size & 0xFFFFFFFFFFFFFFF8))
                goto LABEL_39;
LABEL_40:
              if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0)
              {
                v17 = v8->__r_.__value_.__r.__words[0] + v9;
                if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                  return v17;
              }
              else
              {
                v17 = (std::string::size_type)v8 + v9;
                if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                  return v17;
              }
              operator delete(__p.__r_.__value_.__l.__data_);
              return v17;
            }
            v19 = (std::string *)((char *)p_p + v20);
            v18 += v20;
          }
          do
          {
LABEL_39:
            v29 = v19->__r_.__value_.__s.__data_[0];
            v19 = (std::string *)((char *)v19 + 1);
            *v18++ = v29;
          }
          while (v19 != (std::string *)((char *)p_p + size));
          goto LABEL_40;
        }
LABEL_23:
        memmove((char *)v14 + v9 + a7, (char *)v14 + v9, v15);
        v16 = v12 + a7;
        if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_24;
        goto LABEL_18;
      }
    }
    else
    {
      v12 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
      v13 = 22;
      v14 = v8;
      if (22 - v12 >= a7)
      {
        v15 = v12 - v9;
        if (v12 == v9)
          goto LABEL_14;
        goto LABEL_23;
      }
    }
    std::string::__grow_by(v8, v13, v12 + a7 - v13, v12, v9, 0, a7);
    v8->__r_.__value_.__l.__size_ = v12 + a7;
    v14 = (std::string *)v8->__r_.__value_.__r.__words[0];
    v16 = v12 + a7;
    if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_24;
    goto LABEL_18;
  }
  v9 = a2 - a1->__r_.__value_.__r.__words[0];
  if (a7)
    goto LABEL_5;
  v8 = (std::string *)a1->__r_.__value_.__r.__words[0];
  return (std::string::size_type)v8 + v9;
}

void sub_100192DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100192DE4(std::string *this, _QWORD *a2, std::string::value_type *a3, uint64_t a4, std::string::value_type *a5)
{
  std::string::value_type *v6;
  std::string::value_type *v9;

  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  this->__r_.__value_.__r.__words[2] = 0;
  if (a3 != a5)
  {
    v6 = a3;
    do
    {
      std::string::push_back(this, *v6++);
      if (&v6[-*a2] == (std::string::value_type *)4096)
      {
        v9 = (std::string::value_type *)a2[1];
        ++a2;
        v6 = v9;
      }
    }
    while (v6 != a5);
  }
}

void sub_100192E58(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  __cxa_rethrow();
}

void sub_100192E74(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100192E88(uint64_t a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  *(_QWORD *)(a1 + 40) = 0;
  v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = *(void ***)(a1 + 16);
      v2 = (void **)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v2;
      v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v5 = v4 >> 3;
  if (v5 == 1)
  {
    v6 = 2048;
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    v6 = 4096;
LABEL_7:
    *(_QWORD *)(a1 + 32) = v6;
  }
  if (v2 != v3)
  {
    do
    {
      v7 = *v2++;
      operator delete(v7);
    }
    while (v2 != v3);
    v9 = *(_QWORD *)(a1 + 8);
    v8 = *(_QWORD *)(a1 + 16);
    if (v8 != v9)
      *(_QWORD *)(a1 + 16) = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_100192F4C(std::string *a1, uint64_t *a2, char *a3, char *a4, std::string *a5, std::string *a6, char *a7, char *a8)
{
  std::string *v8;
  std::string::size_type size;
  std::string *v11;
  std::string *v14;
  std::string *v18;
  std::string *v19;
  char *v20;
  uint64_t v21;
  std::string *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  std::string *v27;
  _BYTE *v28;
  std::string::size_type v29;
  std::string::size_type v30;
  uint64_t v31;
  char *v32;
  std::string::value_type *v33;
  char *v34;
  std::string::value_type *v35;
  std::string::size_type v36;
  void **v37;
  void **v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  void *__p[2];
  __int128 v44;
  __int128 v45;
  char v46;

  v8 = a6;
  v44 = 0u;
  v45 = 0u;
  *(_OWORD *)__p = 0u;
  size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0)
    v11 = a1;
  else
    v11 = (std::string *)a1->__r_.__value_.__r.__words[0];
  if (a5 == (_BYTE *)a6)
  {
    if ((size & 0x80u) != 0)
      size = a1->__r_.__value_.__l.__size_;
    v19 = v11;
    v18 = v11;
  }
  else
  {
    v14 = (std::string *)a5;
    v18 = v11;
    v19 = v11;
    while (1)
    {
      v18 = (std::string *)sub_10019058C((int)&v46, (int64x2_t *)__p, (int)a1, v18, v19, v14);
      v20 = (char *)__p[1] + 8 * (((_QWORD)v45 + *((_QWORD *)&v45 + 1)) >> 12);
      if ((void *)v44 == __p[1])
        v21 = 0;
      else
        v21 = *(_QWORD *)v20 + (((_WORD)v45 + WORD4(v45)) & 0xFFF);
      sub_1001932BC((int64x2_t *)__p, v20, v21, a7, a8, a8 - a7);
      size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
      if ((size & 0x80u) == 0)
        v11 = a1;
      else
        v11 = (std::string *)a1->__r_.__value_.__r.__words[0];
      if ((size & 0x80u) != 0)
        size = a1->__r_.__value_.__l.__size_;
      v22 = (char *)v11 + size;
      if (v8 == (std::string *)((char *)v11 + size))
        break;
      v23 = *a2;
      v24 = a2[1];
      if (*a2 == v24)
        break;
      v14 = v8;
      while (1)
      {
        v25 = 0;
        do
        {
          if (v14->__r_.__value_.__s.__data_[v25] != *(unsigned __int8 *)(v23 + v25))
            break;
          if ((char *)v14 + ++v25 == v22)
            break;
        }
        while (v25 + v23 != v24);
        v26 = v23 + v25;
        v27 = (std::string *)((char *)v14 + v25);
        if (v26 == v24)
          break;
        v14 = (std::string *)((char *)v14 + 1);
        if (v14 == (std::string *)v22)
          goto LABEL_27;
      }
      v19 = v8;
      v8 = v27;
      if (v14 == v27)
        goto LABEL_31;
      a8 = a4;
      a7 = a3;
    }
LABEL_27:
    v19 = v8;
  }
LABEL_31:
  v28 = sub_10019058C((int)&v46, (int64x2_t *)__p, (int)a1, v18, v19, (_BYTE *)v11 + size);
  v29 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((v29 & 0x80u) == 0)
    v30 = (std::string::size_type)a1;
  else
    v30 = a1->__r_.__value_.__r.__words[0];
  if ((v29 & 0x80u) != 0)
    v29 = a1->__r_.__value_.__l.__size_;
  v31 = v30 + v29;
  if (!*((_QWORD *)&v45 + 1))
  {
    std::string::erase(a1, (std::string::size_type)&v28[-v30], v31 - (_QWORD)v28);
    goto LABEL_44;
  }
  v32 = (char *)__p[1] + 8 * ((unint64_t)v45 >> 12);
  if ((void *)v44 == __p[1])
  {
    v33 = 0;
    v35 = 0;
    v34 = (char *)__p[1] + 8 * (((_QWORD)v45 + *((_QWORD *)&v45 + 1)) >> 12);
    goto LABEL_42;
  }
  v33 = (std::string::value_type *)(*(_QWORD *)v32 + (v45 & 0xFFF));
  v34 = (char *)__p[1] + 8 * (((_QWORD)v45 + *((_QWORD *)&v45 + 1)) >> 12);
  v35 = (std::string::value_type *)(*(_QWORD *)v34 + ((v45 + *((_QWORD *)&v45 + 1)) & 0xFFF));
  if (v35 == v33)
  {
LABEL_42:
    v36 = 0;
    goto LABEL_43;
  }
  v36 = &v35[512 * (v34 - v32)] - &v33[*(_QWORD *)v34] + *(_QWORD *)v32;
LABEL_43:
  sub_100192B60(a1, v31, v32, v33, (uint64_t)v34, v35, v36);
LABEL_44:
  v37 = (void **)__p[1];
  v38 = (void **)v44;
  *((_QWORD *)&v45 + 1) = 0;
  v39 = v44 - (unint64_t)__p[1];
  if ((unint64_t)v44 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v37);
      v38 = (void **)v44;
      v37 = (void **)((char *)__p[1] + 8);
      __p[1] = v37;
      v39 = v44 - (_QWORD)v37;
    }
    while ((_QWORD)v44 - (_QWORD)v37 > 0x10uLL);
  }
  v40 = v39 >> 3;
  if (v40 == 1)
  {
    v41 = 2048;
    goto LABEL_50;
  }
  if (v40 == 2)
  {
    v41 = 4096;
LABEL_50:
    *(_QWORD *)&v45 = v41;
  }
  if (v37 != v38)
  {
    do
    {
      v42 = *v37++;
      operator delete(v42);
    }
    while (v37 != v38);
    if ((void *)v44 != __p[1])
      *(_QWORD *)&v44 = v44 + (((unint64_t)__p[1] - v44 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (__p[0])
    operator delete(__p[0]);
}

void sub_10019326C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100193280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100193294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001932A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_1001932BC(int64x2_t *a1, char *a2, uint64_t a3, char *__src, char *a5, unint64_t a6)
{
  unint64_t v6;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  const void **v18;
  _BYTE *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  const void **v23;
  _BYTE *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  const void **v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  const void **v41;
  _BYTE *v42;
  const void **v43;
  _BYTE *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const void **v49;
  _BYTE *v50;
  uint64_t v51;
  const void **v52;
  char *v53;
  unint64_t v54;
  _QWORD *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  const void **v60;
  char *v61;
  unint64_t v62;
  void **v63;
  _BYTE *v64;
  uint64_t v65;
  size_t v66;
  _BYTE *v67;
  unint64_t v68;
  const void **v69;
  _BYTE *v70;
  size_t v71;
  size_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *result;
  uint64_t v77;
  uint64_t v78;
  const void **v79;
  _BYTE *v80;
  const void **v81;
  char *v82;

  v6 = a6;
  v10 = a1[2].u64[0];
  v11 = v10 >> 12;
  v12 = a1->i64[1];
  v13 = a1[1].i64[0];
  v14 = (char *)(v12 + 8 * (v10 >> 12));
  if (v13 == v12)
  {
    v15 = 0;
    if (a3)
    {
LABEL_3:
      v16 = a3 + ((a2 - v14) << 9) - (v15 + *(_QWORD *)a2) + *(_QWORD *)v14;
      v17 = a1[2].i64[1];
      if (v16 < v17 - v16)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else
  {
    v15 = *(_QWORD *)v14 + (a1[2].i64[0] & 0xFFF);
    if (a3 != v15)
      goto LABEL_3;
  }
  v16 = 0;
  v17 = a1[2].i64[1];
  if (v17)
  {
LABEL_4:
    if (a6 > v10)
    {
      sub_10019166C((uint64_t)a1, a6 - v10);
      v10 = a1[2].u64[0];
      v12 = a1->i64[1];
      v13 = a1[1].i64[0];
      v11 = v10 >> 12;
    }
    v18 = (const void **)(v12 + 8 * v11);
    if (v13 == v12)
    {
      v19 = 0;
      v20 = v6 - v16;
      if (v6 > v16)
      {
LABEL_8:
        v21 = &__src[v20];
        if (v16 < v6 >> 1)
          v21 = &a5[-v16];
        if (v21 == __src)
        {
          v24 = v19;
          v23 = v18;
          v6 = v16;
          if (!v16)
            goto LABEL_99;
        }
        else
        {
          v22 = v21;
          v23 = v18;
          v24 = v19;
          do
          {
            if (v24 == *v23)
            {
              v26 = (uint64_t)*--v23;
              v24 = (_BYTE *)(v26 + 4096);
            }
            v25 = *--v22;
            *--v24 = v25;
            a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_10038D7D0);
          }
          while (v22 != __src);
          __src = v21;
          v6 = v16;
          if (!v16)
            goto LABEL_99;
        }
        goto LABEL_42;
      }
    }
    else
    {
      v19 = (char *)*v18 + (v10 & 0xFFF);
      v20 = v6 - v16;
      if (v6 > v16)
        goto LABEL_8;
    }
    v24 = v19;
    v23 = v18;
    if (!v6)
      goto LABEL_99;
LABEL_42:
    v40 = v19 - (_BYTE *)*v18 + v6;
    if (v40 < 1)
    {
      v41 = &v18[-((unint64_t)(4095 - v40) >> 12)];
      v42 = (char *)*v41 + (~(4095 - (_WORD)v40) & 0xFFF);
      if (v42 == v19)
        goto LABEL_53;
    }
    else
    {
      v41 = &v18[(unint64_t)v40 >> 12];
      v42 = (char *)*v41 + (v40 & 0xFFF);
      if (v42 == v19)
      {
LABEL_53:
        if (v6 < v16)
        {
          v48 = v19 - (_BYTE *)*v18 + v16;
          if (v48 < 1)
          {
            v62 = 4095 - v48;
            v49 = &v18[-(v62 >> 12)];
            v50 = (char *)*v49 + (~(_WORD)v62 & 0xFFF);
          }
          else
          {
            v49 = &v18[(unint64_t)v48 >> 12];
            v50 = (char *)*v49 + (v48 & 0xFFF);
          }
          v79 = v18;
          v80 = v19;
          sub_1001926A0(v41, v42, v49, v50, (uint64_t)&v79);
          v18 = v79;
          v19 = v80;
        }
        if (__src != a5)
        {
          v64 = *v18;
          v63 = (void **)(v18 + 1);
          v65 = v64 - v19 + 4096;
          if (a5 - __src >= v65)
            v66 = v65;
          else
            v66 = a5 - __src;
          if (v66)
LABEL_78:
            memmove(v19, __src, v66);
          while (1)
          {
            __src += v66;
            if (__src == a5)
              break;
            v67 = *v63++;
            v19 = v67;
            if (a5 - __src >= 4096)
              v66 = 4096;
            else
              v66 = a5 - __src;
            if (v66)
              goto LABEL_78;
          }
        }
        goto LABEL_99;
      }
    }
    v43 = v41;
    v44 = v42;
    while (1)
    {
      if (v24 == *v23)
      {
        v46 = (uint64_t)*--v23;
        v24 = (_BYTE *)(v46 + 4096);
        if (v44 == *v43)
        {
LABEL_52:
          v47 = (uint64_t)*--v43;
          v44 = (_BYTE *)(v47 + 4096);
        }
      }
      else if (v44 == *v43)
      {
        goto LABEL_52;
      }
      v45 = *--v44;
      *--v24 = v45;
      a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_10038D7D0);
      if (v44 == v19)
        goto LABEL_53;
    }
  }
LABEL_17:
  v27 = ((v13 - v12) << 9) - 1;
  if (v13 == v12)
    v27 = 0;
  v28 = v10 + v17;
  v29 = v27 - v28;
  if (a6 > v29)
  {
    sub_100191D48((uint64_t)a1, a6 - v29);
    v17 = a1[2].i64[1];
    v12 = a1->i64[1];
    v13 = a1[1].i64[0];
    v28 = a1[2].i64[0] + v17;
  }
  v30 = (const void **)(v12 + 8 * (v28 >> 12));
  if (v13 != v12)
  {
    v31 = (char *)*v30 + (v28 & 0xFFF);
    v32 = v17 - v16;
    v33 = v17 - v16 - v6;
    if (v17 - v16 < v6)
      goto LABEL_23;
LABEL_35:
    v38 = v31;
    v37 = v30;
    if (!v6)
      goto LABEL_99;
    goto LABEL_57;
  }
  v31 = 0;
  v32 = v17 - v16;
  v33 = v17 - v16 - v6;
  if (v17 - v16 >= v6)
    goto LABEL_35;
LABEL_23:
  v34 = &a5[v33];
  if (v32 >= v6 >> 1)
    v35 = v34;
  else
    v35 = &__src[v32];
  if (v35 == a5)
  {
    v38 = v31;
    v37 = v30;
    v6 = v32;
    if (!v32)
      goto LABEL_99;
  }
  else
  {
    v36 = v35;
    v37 = v30;
    v38 = v31;
    do
    {
      *v38++ = *v36;
      if (&v38[-*v37] == (char *)4096)
      {
        v39 = (char *)v37[1];
        ++v37;
        v38 = v39;
      }
      ++v36;
      ++a1[2].i64[1];
    }
    while (v36 != a5);
    a5 = v35;
    v6 = v32;
    if (!v32)
      goto LABEL_99;
  }
LABEL_57:
  v51 = &v31[-v6] - (_BYTE *)*v30;
  if (v51 < 1)
  {
    v54 = 4095 - v51;
    v52 = &v30[-(v54 >> 12)];
    v53 = (char *)*v52 + (~(_WORD)v54 & 0xFFF);
    if (v53 == v31)
      goto LABEL_68;
    goto LABEL_61;
  }
  v52 = &v30[(unint64_t)v51 >> 12];
  v53 = (char *)*v52 + (v51 & 0xFFF);
  if (v53 != v31)
  {
LABEL_61:
    v55 = v52;
    v56 = v53;
    do
    {
      *v38++ = *v56;
      if (&v38[-*v37] == (char *)4096)
      {
        v57 = (char *)v37[1];
        ++v37;
        v38 = v57;
        if (&(++v56)[-*v55] == (char *)4096)
        {
LABEL_67:
          v58 = (char *)v55[1];
          ++v55;
          v56 = v58;
        }
      }
      else if (&(++v56)[-*v55] == (char *)4096)
      {
        goto LABEL_67;
      }
      ++a1[2].i64[1];
    }
    while (v56 != v31);
  }
LABEL_68:
  if (v6 < v32)
  {
    v59 = v31 - ((_BYTE *)*v30 + v32);
    if (v59 < 1)
    {
      v68 = 4095 - v59;
      v60 = &v30[-(v68 >> 12)];
      v61 = (char *)*v60 + (~(_WORD)v68 & 0xFFF);
    }
    else
    {
      v60 = &v30[(unint64_t)v59 >> 12];
      v61 = (char *)*v60 + (v59 & 0xFFF);
    }
    sub_100192960(v60, v61, v52, v53, v30, v31, &v79);
    v30 = v81;
    v31 = v82;
  }
  if (a5 != __src)
  {
    v70 = *v30;
    v69 = v30 - 1;
    v71 = v31 - v70;
    if (a5 - __src >= v31 - v70)
      v72 = v71;
    else
      v72 = a5 - __src;
    v73 = &a5[-v72];
    if (v72)
LABEL_92:
      memmove(&v31[-v72], v73, v72);
    while (v73 != __src)
    {
      v74 = (uint64_t)*v69--;
      v31 = (char *)(v74 + 4096);
      if (v73 - __src >= 4096)
        v72 = 4096;
      else
        v72 = v73 - __src;
      v73 -= v72;
      if (v72)
        goto LABEL_92;
    }
  }
LABEL_99:
  v75 = a1->i64[1];
  result = (_QWORD *)(v75 + 8 * ((unint64_t)a1[2].i64[0] >> 12));
  if (a1[1].i64[0] == v75)
  {
    v77 = 0;
    if (!v16)
      return result;
  }
  else
  {
    v77 = *result + (a1[2].i64[0] & 0xFFF);
    if (!v16)
      return result;
  }
  v78 = v77 - *result + v16;
  if (v78 < 1)
    result -= (unint64_t)(4095 - v78) >> 12;
  else
    result += (unint64_t)v78 >> 12;
  return result;
}

uint64_t sub_100193918(uint64_t a1, int a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  uint64_t v7;
  const std::locale *v8;
  std::ios_base *v9;
  std::locale *rdbuf;
  std::locale *v11;
  void (__cdecl **v12)(std::ostringstream *__hidden);
  const std::ios_base *v13;
  const std::locale::facet *v14;
  std::locale v16;
  void (__cdecl **v17)(std::ostringstream *__hidden);
  _QWORD v18[8];
  void *__p[2];
  __int128 v20;
  int v21;
  void (__cdecl **v22)(std::ostringstream *__hidden);
  std::locale v23;
  std::locale v24;

  v17 = v4;
  *(_QWORD *)((char *)&v18[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v18[-1] + (_QWORD)*(v17 - 3));
  std::ios_base::init(v6, v18);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v18);
  *(_OWORD *)__p = 0u;
  v20 = 0u;
  v21 = 16;
  v7 = (uint64_t)*(v17 - 3);
  v8 = std::locale::classic();
  v9 = (std::ios_base *)((char *)&v18[-1] + v7);
  std::ios_base::getloc(v9);
  std::ios_base::imbue(v9, v8);
  std::locale::~locale(&v24);
  rdbuf = (std::locale *)v9->__rdbuf_;
  if (rdbuf)
  {
    (*((void (**)(std::locale *, const std::locale *))rdbuf->__locale_ + 2))(rdbuf, v8);
    v11 = rdbuf + 1;
    std::locale::locale(&v23, v11);
    std::locale::operator=(v11, v8);
    std::locale::~locale(&v23);
  }
  std::locale::~locale(&v16);
  v12 = v17;
  *(_QWORD *)((char *)&v18[2] + (_QWORD)*(v17 - 3)) = a2;
  v13 = (const std::ios_base *)((char *)&v18[-1] + (_QWORD)*(v12 - 3));
  if (v13[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v13);
    v14 = std::locale::use_facet(&v24, &std::ctype<char>::id);
    ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 32);
    std::locale::~locale(&v24);
  }
  v13[1].__fmtflags_ = 48;
  std::ostream::operator<<(&v17, a1);
  std::stringbuf::str(v18);
  if (SBYTE7(v20) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(v18);
  return std::ios::~ios(&v22);
}

void sub_100193B40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100193B54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  std::locale::~locale((std::locale *)(v2 - 88));
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100193B70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  std::ostream::~ostream(va, v3 + 8);
  std::ios::~ios(v2);
  _Unwind_Resume(a1);
}

void sub_100193B90(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_100193BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::locale::~locale((std::locale *)&a9);
  sub_1000F0484((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_100193BC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100193BD4(std::string *a1, uint64_t *a2, std::string *a3, std::string *a4)
{
  std::string::size_type size;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  std::string *v10;
  std::string *v11;
  char *v12;
  uint64_t v13;
  std::string *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::string *v19;
  _BYTE *v20;
  std::string::size_type v21;
  std::string::size_type v22;
  uint64_t v23;
  char *v24;
  std::string::value_type *v25;
  char *v26;
  std::string::value_type *v27;
  std::string::size_type v28;
  void **v29;
  void **v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *__p[2];
  __int128 v36;
  __int128 v37;
  char v38;

  v36 = 0u;
  v37 = 0u;
  *(_OWORD *)__p = 0u;
  size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0)
    v6 = a1;
  else
    v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
  if (a3 == (_BYTE *)a4)
  {
    if ((size & 0x80u) != 0)
      size = a1->__r_.__value_.__l.__size_;
    v11 = v6;
    v10 = v6;
  }
  else
  {
    v7 = a4;
    v8 = (std::string *)a3;
    v10 = v6;
    v11 = v6;
    while (1)
    {
      v10 = (std::string *)sub_10019058C((int)&v38, (int64x2_t *)__p, (int)a1, v10, v11, v8);
      v12 = (char *)__p[1] + 8 * (((_QWORD)v37 + *((_QWORD *)&v37 + 1)) >> 12);
      if ((void *)v36 == __p[1])
        v13 = 0;
      else
        v13 = *(_QWORD *)v12 + (((_WORD)v37 + WORD4(v37)) & 0xFFF);
      sub_1001932BC((int64x2_t *)__p, v12, v13, 0, 0, 0);
      size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
      if ((size & 0x80u) == 0)
        v6 = a1;
      else
        v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
      if ((size & 0x80u) != 0)
        size = a1->__r_.__value_.__l.__size_;
      v14 = (char *)v6 + size;
      if (v7 == (std::string *)((char *)v6 + size))
        break;
      v15 = *a2;
      v16 = a2[1];
      if (*a2 == v16)
        break;
      v8 = v7;
      while (1)
      {
        v17 = 0;
        do
        {
          if (v8->__r_.__value_.__s.__data_[v17] != *(unsigned __int8 *)(v15 + v17))
            break;
          if ((char *)v8 + ++v17 == v14)
            break;
        }
        while (v17 + v15 != v16);
        v18 = v15 + v17;
        v19 = (std::string *)((char *)v8 + v17);
        if (v18 == v16)
          break;
        v8 = (std::string *)((char *)v8 + 1);
        if (v8 == (std::string *)v14)
          goto LABEL_26;
      }
      v11 = v7;
      v7 = v19;
      if (v8 == v19)
        goto LABEL_30;
    }
LABEL_26:
    v11 = v7;
  }
LABEL_30:
  v20 = sub_10019058C((int)&v38, (int64x2_t *)__p, (int)a1, v10, v11, (_BYTE *)v6 + size);
  v21 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((v21 & 0x80u) == 0)
    v22 = (std::string::size_type)a1;
  else
    v22 = a1->__r_.__value_.__r.__words[0];
  if ((v21 & 0x80u) != 0)
    v21 = a1->__r_.__value_.__l.__size_;
  v23 = v22 + v21;
  if (!*((_QWORD *)&v37 + 1))
  {
    std::string::erase(a1, (std::string::size_type)&v20[-v22], v23 - (_QWORD)v20);
    goto LABEL_43;
  }
  v24 = (char *)__p[1] + 8 * ((unint64_t)v37 >> 12);
  if ((void *)v36 == __p[1])
  {
    v25 = 0;
    v27 = 0;
    v26 = (char *)__p[1] + 8 * (((_QWORD)v37 + *((_QWORD *)&v37 + 1)) >> 12);
    goto LABEL_41;
  }
  v25 = (std::string::value_type *)(*(_QWORD *)v24 + (v37 & 0xFFF));
  v26 = (char *)__p[1] + 8 * (((_QWORD)v37 + *((_QWORD *)&v37 + 1)) >> 12);
  v27 = (std::string::value_type *)(*(_QWORD *)v26 + ((v37 + *((_QWORD *)&v37 + 1)) & 0xFFF));
  if (v27 == v25)
  {
LABEL_41:
    v28 = 0;
    goto LABEL_42;
  }
  v28 = &v27[512 * (v26 - v24)] - &v25[*(_QWORD *)v26] + *(_QWORD *)v24;
LABEL_42:
  sub_100192B60(a1, v23, v24, v25, (uint64_t)v26, v27, v28);
LABEL_43:
  v29 = (void **)__p[1];
  v30 = (void **)v36;
  *((_QWORD *)&v37 + 1) = 0;
  v31 = v36 - (unint64_t)__p[1];
  if ((unint64_t)v36 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v29);
      v30 = (void **)v36;
      v29 = (void **)((char *)__p[1] + 8);
      __p[1] = v29;
      v31 = v36 - (_QWORD)v29;
    }
    while ((_QWORD)v36 - (_QWORD)v29 > 0x10uLL);
  }
  v32 = v31 >> 3;
  if (v32 == 1)
  {
    v33 = 2048;
    goto LABEL_49;
  }
  if (v32 == 2)
  {
    v33 = 4096;
LABEL_49:
    *(_QWORD *)&v37 = v33;
  }
  if (v29 != v30)
  {
    do
    {
      v34 = *v29++;
      operator delete(v34);
    }
    while (v29 != v30);
    if ((void *)v36 != __p[1])
      *(_QWORD *)&v36 = v36 + (((unint64_t)__p[1] - v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (__p[0])
    operator delete(__p[0]);
}

void sub_100193ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100193EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100193EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100193F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100193F1C(std::string *a1, uint64_t *a2, std::string *a3, std::string *a4)
{
  std::string::size_type size;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  std::string *v10;
  std::string *v11;
  char *v12;
  uint64_t v13;
  std::string *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::string *v19;
  _BYTE *v20;
  std::string::size_type v21;
  std::string::size_type v22;
  uint64_t v23;
  char *v24;
  std::string::value_type *v25;
  char *v26;
  std::string::value_type *v27;
  std::string::size_type v28;
  void **v29;
  void **v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *__p[2];
  __int128 v36;
  __int128 v37;
  char v38;

  v36 = 0u;
  v37 = 0u;
  *(_OWORD *)__p = 0u;
  size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0)
    v6 = a1;
  else
    v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
  if (a3 == (_BYTE *)a4)
  {
    if ((size & 0x80u) != 0)
      size = a1->__r_.__value_.__l.__size_;
    v11 = v6;
    v10 = v6;
  }
  else
  {
    v7 = a4;
    v8 = (std::string *)a3;
    v10 = v6;
    v11 = v6;
    while (1)
    {
      v10 = (std::string *)sub_10019058C((int)&v38, (int64x2_t *)__p, (int)a1, v10, v11, v8);
      v12 = (char *)__p[1] + 8 * (((_QWORD)v37 + *((_QWORD *)&v37 + 1)) >> 12);
      if ((void *)v36 == __p[1])
        v13 = 0;
      else
        v13 = *(_QWORD *)v12 + (((_WORD)v37 + WORD4(v37)) & 0xFFF);
      sub_1001932BC((int64x2_t *)__p, v12, v13, 0, 0, 0);
      size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
      if ((size & 0x80u) == 0)
        v6 = a1;
      else
        v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
      if ((size & 0x80u) != 0)
        size = a1->__r_.__value_.__l.__size_;
      v14 = (char *)v6 + size;
      if (v7 == (std::string *)((char *)v6 + size))
        break;
      v15 = *a2;
      v16 = a2[1];
      if (*a2 == v16)
        break;
      v8 = v7;
      while (1)
      {
        v17 = 0;
        do
        {
          if (v8->__r_.__value_.__s.__data_[v17] != *(unsigned __int8 *)(v15 + v17))
            break;
          if ((char *)v8 + ++v17 == v14)
            break;
        }
        while (v17 + v15 != v16);
        v18 = v15 + v17;
        v19 = (std::string *)((char *)v8 + v17);
        if (v18 == v16)
          break;
        v8 = (std::string *)((char *)v8 + 1);
        if (v8 == (std::string *)v14)
          goto LABEL_26;
      }
      v11 = v7;
      v7 = v19;
      if (v8 == v19)
        goto LABEL_30;
    }
LABEL_26:
    v11 = v7;
  }
LABEL_30:
  v20 = sub_10019058C((int)&v38, (int64x2_t *)__p, (int)a1, v10, v11, (_BYTE *)v6 + size);
  v21 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((v21 & 0x80u) == 0)
    v22 = (std::string::size_type)a1;
  else
    v22 = a1->__r_.__value_.__r.__words[0];
  if ((v21 & 0x80u) != 0)
    v21 = a1->__r_.__value_.__l.__size_;
  v23 = v22 + v21;
  if (!*((_QWORD *)&v37 + 1))
  {
    std::string::erase(a1, (std::string::size_type)&v20[-v22], v23 - (_QWORD)v20);
    goto LABEL_43;
  }
  v24 = (char *)__p[1] + 8 * ((unint64_t)v37 >> 12);
  if ((void *)v36 == __p[1])
  {
    v25 = 0;
    v27 = 0;
    v26 = (char *)__p[1] + 8 * (((_QWORD)v37 + *((_QWORD *)&v37 + 1)) >> 12);
    goto LABEL_41;
  }
  v25 = (std::string::value_type *)(*(_QWORD *)v24 + (v37 & 0xFFF));
  v26 = (char *)__p[1] + 8 * (((_QWORD)v37 + *((_QWORD *)&v37 + 1)) >> 12);
  v27 = (std::string::value_type *)(*(_QWORD *)v26 + ((v37 + *((_QWORD *)&v37 + 1)) & 0xFFF));
  if (v27 == v25)
  {
LABEL_41:
    v28 = 0;
    goto LABEL_42;
  }
  v28 = &v27[512 * (v26 - v24)] - &v25[*(_QWORD *)v26] + *(_QWORD *)v24;
LABEL_42:
  sub_100192B60(a1, v23, v24, v25, (uint64_t)v26, v27, v28);
LABEL_43:
  v29 = (void **)__p[1];
  v30 = (void **)v36;
  *((_QWORD *)&v37 + 1) = 0;
  v31 = v36 - (unint64_t)__p[1];
  if ((unint64_t)v36 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v29);
      v30 = (void **)v36;
      v29 = (void **)((char *)__p[1] + 8);
      __p[1] = v29;
      v31 = v36 - (_QWORD)v29;
    }
    while ((_QWORD)v36 - (_QWORD)v29 > 0x10uLL);
  }
  v32 = v31 >> 3;
  if (v32 == 1)
  {
    v33 = 2048;
    goto LABEL_49;
  }
  if (v32 == 2)
  {
    v33 = 4096;
LABEL_49:
    *(_QWORD *)&v37 = v33;
  }
  if (v29 != v30)
  {
    do
    {
      v34 = *v29++;
      operator delete(v34);
    }
    while (v29 != v30);
    if ((void *)v36 != __p[1])
      *(_QWORD *)&v36 = v36 + (((unint64_t)__p[1] - v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (__p[0])
    operator delete(__p[0]);
}

void sub_100194214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100194228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019423C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100194250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100192E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100194264(const std::logic_error *a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1001942B4((uint64_t)exception, a1);
}

void sub_1001942A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001942B4(uint64_t a1, const std::logic_error *a2)
{
  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(_QWORD *)a1 = &off_1003F9318;
  *(_QWORD *)(a1 + 8) = off_1003F9348;
  *(_QWORD *)(a1 + 24) = off_1003F9370;
  *(_QWORD *)(a1 + 32) = 0;
  return a1;
}

uint64_t sub_100194310(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_100194368()
{
  operator new();
}

void sub_100194440()
{
  std::out_of_range *v0;

  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_10019446C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100194488(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1001946B8((uint64_t)exception, a1);
}

void sub_1001944C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1001944D8(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  operator delete();
}

void sub_100194540(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_100194590(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_1001945FC(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_10019464C(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

uint64_t sub_1001946B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F9318;
  *(_QWORD *)(a1 + 8) = off_1003F9348;
  *(_QWORD *)(a1 + 24) = off_1003F9370;
  return a1;
}

void sub_100194764(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100194778()
{
  std::logic_error v0;
  std::string v1;

  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x20uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_100382C10;
  strcpy(v1.__r_.__value_.__l.__data_, "Weekday is out of range 0..6");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v1.__r_.__value_.__l.__data_);
  v0.__vftable = (std::logic_error_vtbl *)&off_1003F9468;
  sub_100194834(&v0);
}

void sub_100194804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
  std::out_of_range::~out_of_range(&a10);
  _Unwind_Resume(a1);
}

void sub_100194818(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100194834(const std::logic_error *a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100194888((uint64_t)exception, a1);
}

void sub_100194870(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100194888(uint64_t a1, const std::logic_error *a2)
{
  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(_QWORD *)a1 = &off_1003F93F0;
  *(_QWORD *)(a1 + 8) = off_1003F9420;
  *(_QWORD *)(a1 + 24) = off_1003F9448;
  *(_QWORD *)(a1 + 32) = 0;
  return a1;
}

uint64_t sub_1001948E4(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_10019493C()
{
  operator new();
}

void sub_100194A14()
{
  std::out_of_range *v0;

  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_100194A40(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100194A5C(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100194CB0((uint64_t)exception, a1);
}

void sub_100194A98(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100194AAC(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  operator delete();
}

void sub_100194B14(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_100194B64(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_100194BD0(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100194C20(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

void sub_100194C8C(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);
  operator delete();
}

uint64_t sub_100194CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(_QWORD *)(a1 + 8) = &off_1003F9468;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F93F0;
  *(_QWORD *)(a1 + 8) = off_1003F9420;
  *(_QWORD *)(a1 + 24) = off_1003F9448;
  return a1;
}

void sub_100194D5C(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100194D70()
{
  std::logic_error v0;
  std::string v1;

  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_10038A6A0;
  strcpy(v1.__r_.__value_.__l.__data_, "Day of year value is out of range 1..366");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v1.__r_.__value_.__l.__data_);
  v0.__vftable = (std::logic_error_vtbl *)&off_1003F9568;
  sub_100194E2C(&v0);
}

void sub_100194DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
  std::out_of_range::~out_of_range(&a10);
  _Unwind_Resume(a1);
}

void sub_100194E10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100194E2C(const std::logic_error *a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_100194E80((uint64_t)exception, a1);
}

void sub_100194E68(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100194E80(uint64_t a1, const std::logic_error *a2)
{
  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(_QWORD *)a1 = &off_1003F94F0;
  *(_QWORD *)(a1 + 8) = off_1003F9520;
  *(_QWORD *)(a1 + 24) = off_1003F9548;
  *(_QWORD *)(a1 + 32) = 0;
  return a1;
}

uint64_t sub_100194EDC(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
    *(_QWORD *)(a1 + 32) = 0;
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_100194F34()
{
  operator new();
}

void sub_10019500C()
{
  std::out_of_range *v0;

  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_100195038(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100195054(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x40uLL);
  sub_1001952A8((uint64_t)exception, a1);
}

void sub_100195090(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1001950A4(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2))
      *(_QWORD *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  operator delete();
}

void sub_10019510C(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    this[1].__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(this);
}

void sub_10019515C(std::out_of_range *this)
{
  const char *imp;

  this[1].__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = this[1].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);
  operator delete();
}

void sub_1001951C8(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
    a1->__imp_.__imp_ = 0;
  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100195218(std::out_of_range *a1)
{
  const char *imp;

  a1->__vftable = (std::out_of_range_vtbl *)&off_1003EDD90;
  imp = a1->__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(_QWORD *)imp + 32))(imp))
      a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);
  operator delete();
}

void sub_100195284(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);
  operator delete();
}

uint64_t sub_1001952A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(_QWORD *)(a1 + 8) = &off_1003F9568;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = &off_1003EDD90;
  *(_QWORD *)(a1 + 32) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)a1 = &off_1003F94F0;
  *(_QWORD *)(a1 + 8) = off_1003F9520;
  *(_QWORD *)(a1 + 24) = off_1003F9548;
  return a1;
}

void sub_100195354(_Unwind_Exception *a1)
{
  std::out_of_range *v1;

  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100195368(uint64_t a1, uint64_t a2)
{
  char *v4;
  void **v5;
  void **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  char *v11;
  size_t v12;
  std::string::size_type v13;
  std::string *v14;
  uint64_t v15;
  uint64_t v16;
  std::string *v17;
  __int128 v18;
  std::string v20;
  void *__p;
  void **v22;
  void *v23;
  void **v24;
  uint64_t v25;
  void *v26[3];
  char v27;
  void *v28;
  char v29;
  void *v30;
  char v31;
  void *v32;
  char v33;

  v4 = boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::default_time_format;
  sub_100019394(v26, 1, (char *)asc_10038D7E0, (const char *)&asc_10038D7E0[1], (const char *)&asc_10038D7E0[2], (const char *)&asc_10038D7E0[3]);
  v23 = 0;
  v24 = 0;
  v25 = 0;
  sub_10018FE18((int)&v20, "not-a-date-time", "N5boost9date_time10time_facetINS_10posix_time5ptimeEcNSt3__119ostreambuf_iteratorIcNS4_11char_traitsIcEEEEEE", (uint64_t)&v23);
  sub_1000C56F4((uint64_t)&__p);
  sub_100012A3C(a1, v4, (uint64_t)v26, (uint64_t *)&v23, (uint64_t *)&__p, a2);
  v5 = (void **)__p;
  if (__p)
  {
    v6 = v22;
    v7 = __p;
    if (v22 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = __p;
    }
    v22 = v5;
    operator delete(v7);
  }
  v8 = (void **)v23;
  if (v23)
  {
    v9 = v24;
    v10 = v23;
    if (v24 != v23)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = v23;
    }
    v24 = v8;
    operator delete(v10);
  }
  if (v33 < 0)
  {
    operator delete(v32);
    if ((v31 & 0x80000000) == 0)
    {
LABEL_19:
      if ((v29 & 0x80000000) == 0)
        goto LABEL_20;
LABEL_34:
      operator delete(v28);
      if ((v27 & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_35;
    }
  }
  else if ((v31 & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(v30);
  if (v29 < 0)
    goto LABEL_34;
LABEL_20:
  if ((v27 & 0x80000000) == 0)
    goto LABEL_21;
LABEL_35:
  operator delete(v26[1]);
LABEL_21:
  *(_QWORD *)a1 = off_1003F9210;
  v11 = boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::duration_sign_negative_only[0];
  v12 = strlen(boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::duration_sign_negative_only[0]);
  if (v12 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v13 = v12;
  if (v12 >= 0x17)
  {
    v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v15 = v12 | 7;
    v16 = v15 + 1;
    v14 = (std::string *)operator new(v15 + 1);
    v20.__r_.__value_.__l.__size_ = v13;
    v20.__r_.__value_.__r.__words[2] = v16 | 0x8000000000000000;
    v20.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
    goto LABEL_28;
  }
  *((_BYTE *)&v20.__r_.__value_.__s + 23) = v12;
  v14 = &v20;
  if (v12)
LABEL_28:
    memmove(v14, v11, v13);
  v14->__r_.__value_.__s.__data_[v13] = 0;
  v17 = std::string::append(&v20, boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::default_time_duration_format[0]);
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  *(_QWORD *)(a1 + 352) = *((_QWORD *)&v17->__r_.__value_.__l + 2);
  *(_OWORD *)(a1 + 336) = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  return a1;
}

void sub_1001955E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  std::locale::facet *v21;

  if (a14 < 0)
  {
    operator delete(__p);
    sub_10000C7A8(v21);
    _Unwind_Resume(a1);
  }
  sub_10000C7A8(v21);
  _Unwind_Resume(a1);
}

uint64_t sub_10019566C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100195684()
{
  std::chrono::system_clock::time_point v0;
  unsigned __int8 v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t result;
  mach_timebase_info info;

  v0.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  v1 = atomic_load((unsigned __int8 *)&qword_100419C30);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_100419C30))
  {
    mach_timebase_info(&info);
    qword_100419C28 = (uint64_t)info;
    __cxa_guard_release(&qword_100419C30);
  }
  qword_100419C10 = 1000 * v0.__d_.__rep_
                  - mach_absolute_time() * qword_100419C28 / HIDWORD(qword_100419C28);
  v2 = atomic_load((unsigned __int8 *)&qword_100419C30);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_100419C30))
  {
    mach_timebase_info(&info);
    qword_100419C28 = (uint64_t)info;
    __cxa_guard_release(&qword_100419C30);
  }
  qword_100419C18 = mach_absolute_time() * qword_100419C28 / HIDWORD(qword_100419C28);
  v3 = atomic_load((unsigned __int8 *)&qword_100419C40);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_100419C40))
  {
    mach_timebase_info(&info);
    qword_100419C38 = (uint64_t)info;
    __cxa_guard_release(&qword_100419C40);
  }
  result = mach_continuous_time();
  qword_100419C20 = result * qword_100419C38 / HIDWORD(qword_100419C38);
  return result;
}

void sub_1001957BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100419C40);
  _Unwind_Resume(a1);
}

void sub_1001957D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100419C30);
  _Unwind_Resume(a1);
}

void sub_1001957EC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100419C30);
  _Unwind_Resume(a1);
}

uint64_t sub_100195804(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

size_t sub_10019586C@<X0>(const char **a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  const char *v5;
  size_t result;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = operator new(0x30uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = off_1003F95A8;
  v5 = *a1;
  result = strlen(*a1);
  if (result >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v7 = result;
  if (result >= 0x17)
  {
    v9 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17)
      v9 = result | 7;
    v10 = v9 + 1;
    v8 = operator new(v9 + 1);
    v4[4] = v7;
    v4[5] = v10 | 0x8000000000000000;
    v4[3] = v8;
  }
  else
  {
    *((_BYTE *)v4 + 47) = result;
    v8 = v4 + 3;
    if (!result)
      goto LABEL_9;
  }
  result = (size_t)memmove(v8, v5, v7);
LABEL_9:
  *((_BYTE *)v8 + v7) = 0;
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100195950(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_100195968(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1003F95A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10019597C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1003F95A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1001959B0()
{
  const char *v1;

  v1 = "OffMap";
  sub_10019586C(&v1, &qword_10041AD40);
  return __cxa_atexit((void (*)(void *))sub_100195804, &qword_10041AD40, (void *)&_mh_execute_header);
}

_QWORD *sub_100195A0C(_QWORD *a1)
{
  *a1 = off_1003F95F8;
  sub_1000733B4((uint64_t)(a1 + 4), a1[5]);
  sub_1000733B4((uint64_t)(a1 + 1), a1[2]);
  return a1;
}

void sub_100195A4C(_QWORD *a1)
{
  *a1 = off_1003F95F8;
  sub_1000733B4((uint64_t)(a1 + 4), a1[5]);
  sub_1000733B4((uint64_t)(a1 + 1), a1[2]);
  operator delete();
}

_QWORD *sub_100195A9C(_QWORD *a1, uint64_t a2)
{
  void *p_p;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  void *__p;
  uint64_t v11;
  unsigned __int8 v12;

  sub_1000F0508(a1, (uint64_t)"ParamOverrides(", 15);
  sub_1000F0508(a1, (uint64_t)"paramOverridesClient=", 21);
  if ((*(_BYTE *)(a2 + 56) & 1) != 0)
  {
    sub_100171F88((uint64_t *)(a2 + 8));
    if ((v12 & 0x80u) == 0)
      p_p = &__p;
    else
      p_p = __p;
    if ((v12 & 0x80u) == 0)
      v5 = v12;
    else
      v5 = v11;
    sub_1000F0508(a1, (uint64_t)p_p, v5);
    if ((char)v12 < 0)
      operator delete(__p);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v6 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v6, (uint64_t)"paramOverridesServer=", 21);
  if ((*(_BYTE *)(a2 + 56) & 2) != 0)
  {
    sub_100171F88((uint64_t *)(a2 + 32));
    if ((v12 & 0x80u) == 0)
      v7 = &__p;
    else
      v7 = __p;
    if ((v12 & 0x80u) == 0)
      v8 = v12;
    else
      v8 = v11;
    sub_1000F0508(a1, (uint64_t)v7, v8);
    if ((char)v12 < 0)
      operator delete(__p);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_100195BEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100195C10(uint64_t a1)
{
  sub_100073530(a1);
  operator delete();
}

uint64_t sub_100195C34(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  uint64_t v5;
  char v6;
  std::string *v7;
  std::string *v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  std::string *v16;
  uint64_t v17;

  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  v4 = (std::string *)(a1 + 56);
  *(_QWORD *)a1 = off_1003F9618;
  *(_QWORD *)(a1 + 80) = off_1003F9CB8;
  v5 = a1 + 80;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  v16 = (std::string *)(a1 + 32);
  *(_QWORD *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = off_1003F9A08;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_BYTE *)(a1 + 200) &= 0xFCu;
  *(_DWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = off_1003F9AC8;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 232) = off_1003F9AA8;
  *(_QWORD *)(a1 + 240) = off_1003F9A68;
  *(_QWORD *)(a1 + 248) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  *(_BYTE *)(a1 + 264) &= 0xFCu;
  *(_QWORD *)(a1 + 272) = 0;
  *(_BYTE *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a1 + 296) & 0xF8 | 4;
  *(_BYTE *)(a1 + 304) &= 0xF8u;
  *(_QWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 320) = 0;
  *(_QWORD *)(a1 + 328) = off_1003F9A28;
  *(_OWORD *)(a1 + 336) = xmmword_10038DC80;
  *(_OWORD *)(a1 + 352) = xmmword_10038DC90;
  *(_BYTE *)(a1 + 368) |= 0xFu;
  *(_QWORD *)(a1 + 376) = off_1003F9A28;
  *(_OWORD *)(a1 + 384) = xmmword_10038DC80;
  *(_OWORD *)(a1 + 400) = xmmword_10038DC90;
  *(_BYTE *)(a1 + 416) |= 0xFu;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_QWORD *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 464) = off_1003F9A68;
  *(_QWORD *)(a1 + 472) = 0;
  *(_QWORD *)(a1 + 480) = 0;
  *(_BYTE *)(a1 + 488) &= 0xFCu;
  *(_QWORD *)(a1 + 504) = 0;
  *(_QWORD *)(a1 + 512) = 0;
  *(_QWORD *)(a1 + 496) = off_1003F9A68;
  *(_BYTE *)(a1 + 520) &= 0xFCu;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  v6 = *(_BYTE *)(a1 + 578);
  *(_WORD *)(a1 + 576) = 0;
  *(_BYTE *)(a1 + 578) = v6 & 0xFE;
  v17 = a1 + 584;
  *(_QWORD *)(a1 + 584) = off_1003F9778;
  *(_QWORD *)(a1 + 600) = 0;
  *(_QWORD *)(a1 + 592) = 0;
  *(_QWORD *)(a1 + 608) = 0;
  *(_BYTE *)(a1 + 616) &= ~1u;
  v14 = (std::string *)(a1 + 648);
  v15 = (std::string *)(a1 + 624);
  v13 = (std::string *)(a1 + 672);
  v7 = (std::string *)(a1 + 696);
  v8 = (std::string *)(a1 + 720);
  v9 = (std::string *)(a1 + 744);
  v10 = (std::string *)(a1 + 768);
  v11 = (std::string *)(a1 + 792);
  *(_OWORD *)(a1 + 784) = 0u;
  *(_OWORD *)(a1 + 800) = 0u;
  *(_OWORD *)(a1 + 752) = 0u;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_OWORD *)(a1 + 688) = 0u;
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(_WORD *)(a1 + 816) &= 0xE000u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  std::string::operator=(v16, (const std::string *)(a2 + 32));
  std::string::operator=(v4, (const std::string *)(a2 + 56));
  sub_100077E88(v5, a2 + 80);
  sub_1000776F0(v17, a2 + 584);
  std::string::operator=(v15, (const std::string *)(a2 + 624));
  std::string::operator=(v14, (const std::string *)(a2 + 648));
  std::string::operator=(v13, (const std::string *)(a2 + 672));
  std::string::operator=(v7, (const std::string *)(a2 + 696));
  std::string::operator=(v8, (const std::string *)(a2 + 720));
  std::string::operator=(v9, (const std::string *)(a2 + 744));
  std::string::operator=(v10, (const std::string *)(a2 + 768));
  std::string::operator=(v11, (const std::string *)(a2 + 792));
  *(_WORD *)(a1 + 816) = *(_WORD *)(a2 + 816);
  return a1;
}

void sub_100195F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, void **a11, void **a12, void **a13, _QWORD *a14)
{
  char *v14;
  void **v15;
  void **v16;
  void **v17;
  uint64_t v18;
  void **v19;
  void **v20;
  void **v21;
  void **v22;

  if (v14[815] < 0)
  {
    operator delete(*v22);
    if ((v14[791] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v14[767] & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v14[791] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v21);
  if ((v14[767] & 0x80000000) == 0)
  {
LABEL_4:
    if ((v14[743] & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*v20);
  if ((v14[743] & 0x80000000) == 0)
  {
LABEL_5:
    if ((v14[719] & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*v19);
  if ((v14[719] & 0x80000000) == 0)
  {
LABEL_6:
    if ((v14[695] & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*v16);
  if ((v14[695] & 0x80000000) == 0)
  {
LABEL_7:
    if ((v14[671] & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*a10);
  if ((v14[671] & 0x80000000) == 0)
  {
LABEL_8:
    if ((v14[647] & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*a11);
  if ((v14[647] & 0x80000000) == 0)
  {
LABEL_9:
    sub_10007373C(a14);
    sub_10007368C(v18);
    if ((v14[79] & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  operator delete(*a12);
  sub_10007373C(a14);
  sub_10007368C(v18);
  if ((v14[79] & 0x80000000) == 0)
  {
LABEL_10:
    if ((v14[55] & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  operator delete(*v17);
  if ((v14[55] & 0x80000000) == 0)
  {
LABEL_11:
    if ((v14[31] & 0x80000000) == 0)
      goto LABEL_12;
    goto LABEL_23;
  }
LABEL_22:
  operator delete(*a13);
  if ((v14[31] & 0x80000000) == 0)
LABEL_12:
    _Unwind_Resume(a1);
LABEL_23:
  operator delete(*v15);
  _Unwind_Resume(a1);
}

_QWORD *sub_100196058(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *v5;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  _QWORD *v15;
  _QWORD *v16;
  std::string *p_p;
  std::string::size_type v18;
  _QWORD *v19;
  _QWORD *v20;
  std::string *v21;
  std::string::size_type v22;
  _QWORD *v23;
  std::string *v24;
  std::string::size_type v25;
  _QWORD *v26;
  std::string *v27;
  std::string::size_type v28;
  _QWORD *v29;
  std::string *v30;
  std::string::size_type v31;
  _QWORD *v32;
  std::string *v33;
  std::string::size_type v34;
  _QWORD *v35;
  std::string *v36;
  std::string::size_type v37;
  _QWORD *v38;
  std::string *v39;
  std::string::size_type v40;
  _QWORD *v41;
  std::string *v42;
  std::string::size_type v43;
  _QWORD *v44;
  std::string *v45;
  std::string::size_type v46;
  std::string __p;
  std::string v49;

  sub_1000F0508(a1, (uint64_t)"FloorConfiguration(", 19);
  v4 = sub_1000F0508(a1, (uint64_t)"regionSet=", 10);
  memset(&v49, 0, sizeof(v49));
  std::string::operator=(&v49, (const std::string *)(a2 + 8));
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v5 = &v49;
  else
    v5 = (std::string *)v49.__r_.__value_.__r.__words[0];
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  else
    size = v49.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)v5, size);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v49.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"splitRssiMap=", 13);
  memset(&v49, 0, sizeof(v49));
  std::string::operator=(&v49, (const std::string *)(a2 + 32));
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &v49;
  else
    v9 = (std::string *)v49.__r_.__value_.__r.__words[0];
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  else
    v10 = v49.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v49.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"magnetometerReference=", 22);
  memset(&v49, 0, sizeof(v49));
  std::string::operator=(&v49, (const std::string *)(a2 + 56));
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &v49;
  else
    v13 = (std::string *)v49.__r_.__value_.__r.__words[0];
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  else
    v14 = v49.__r_.__value_.__l.__size_;
  sub_1000F0508(v12, (uint64_t)v13, v14);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v49.__r_.__value_.__l.__data_);
  v15 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v16 = sub_1000F0508(v15, (uint64_t)"splitRssiMapMetadata=", 21);
  memset(&__p, 0, sizeof(__p));
  if ((sub_100199018(a2 + 80, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v49);
    v49.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v49);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v18 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v16, (uint64_t)p_p, v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v19 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v20 = sub_1000F0508(v19, (uint64_t)"rttModel=", 9);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001992D0(a2 + 584, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v49);
    v49.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v49);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = &__p;
  else
    v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v22 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v20, (uint64_t)v21, v22);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v23 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v23, (uint64_t)"DEPRECATED_configurationId=", 27);
  if ((*(_WORD *)(a2 + 816) & 0x20) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 624));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v24 = &v49;
    else
      v24 = (std::string *)v49.__r_.__value_.__r.__words[0];
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v25 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    else
      v25 = v49.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v24, v25);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v26 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v26, (uint64_t)"DEPRECATED_id=", 14);
  if ((*(_WORD *)(a2 + 816) & 0x40) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 648));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v27 = &v49;
    else
      v27 = (std::string *)v49.__r_.__value_.__r.__words[0];
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v28 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    else
      v28 = v49.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v27, v28);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v29 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v29, (uint64_t)"DEPRECATED_description=", 23);
  if ((*(_WORD *)(a2 + 816) & 0x80) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 672));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v30 = &v49;
    else
      v30 = (std::string *)v49.__r_.__value_.__r.__words[0];
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v31 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    else
      v31 = v49.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v30, v31);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v32 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v32, (uint64_t)"DEPRECATED_shortDescription=", 28);
  if ((*(_WORD *)(a2 + 816) & 0x100) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 696));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v33 = &v49;
    else
      v33 = (std::string *)v49.__r_.__value_.__r.__words[0];
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v34 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    else
      v34 = v49.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v33, v34);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v35 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v35, (uint64_t)"DEPRECATED_planogram=", 21);
  if ((*(_WORD *)(a2 + 816) & 0x200) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 720));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v36 = &v49;
    else
      v36 = (std::string *)v49.__r_.__value_.__r.__words[0];
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v37 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    else
      v37 = v49.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v36, v37);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v38 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v38, (uint64_t)"DEPRECATED_occupancyGrid=", 25);
  if ((*(_WORD *)(a2 + 816) & 0x400) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 744));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v39 = &v49;
    else
      v39 = (std::string *)v49.__r_.__value_.__r.__words[0];
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v40 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    else
      v40 = v49.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v39, v40);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v41 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v41, (uint64_t)"DEPRECATED_floorTransitionSet=", 30);
  if ((*(_WORD *)(a2 + 816) & 0x800) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 768));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v42 = &v49;
    else
      v42 = (std::string *)v49.__r_.__value_.__r.__words[0];
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v43 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    else
      v43 = v49.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v42, v43);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v44 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v44, (uint64_t)"DEPRECATED_wifiLog=", 19);
  if ((*(_WORD *)(a2 + 816) & 0x1000) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 792));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v45 = &v49;
    else
      v45 = (std::string *)v49.__r_.__value_.__r.__words[0];
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v46 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    else
      v46 = v49.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v45, v46);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001967A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100196858()
{
  operator delete();
}

_QWORD *sub_10019686C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  _QWORD *v15;
  std::string *v16;
  std::string::size_type v17;
  _QWORD *v18;
  std::string *v19;
  std::string::size_type v20;
  _QWORD *v21;
  std::string *v22;
  std::string::size_type v23;
  _QWORD *v24;
  std::string *v25;
  std::string::size_type v26;
  std::string __p;
  std::bad_cast v29;
  void *v30;
  _UNKNOWN **v31;

  sub_1000F0508(a1, (uint64_t)"IndoorOutdoorLikelihoodParams(", 30);
  v4 = sub_1000F0508(a1, (uint64_t)"indoorSurveyOnTileMean=", 23);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 8), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v29);
    v29.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v29);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"indoorSurveyOnTileMin=", 22);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 16), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v29);
    v29.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v29);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"indoorSurveyOnTileStdDev=", 25);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 24), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v29);
    v29.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v29);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &__p;
  else
    v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v14 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v15 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v15, (uint64_t)"indoorOffTileMean=", 18);
  if ((*(_BYTE *)(a2 + 64) & 8) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 32), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v29);
      v29.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v29);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = &__p;
    else
      v16 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v17 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v16, v17);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v18 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v18, (uint64_t)"indoorOffTileStdDev=", 20);
  if ((*(_BYTE *)(a2 + 64) & 0x10) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 40), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v29);
      v29.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v29);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v19 = &__p;
    else
      v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v20 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v19, v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v21 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v21, (uint64_t)"outdoorOffTileMean=", 19);
  if ((*(_BYTE *)(a2 + 64) & 0x20) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 48), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v29);
      v29.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v29);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v22 = &__p;
    else
      v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v23 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v23 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v22, v23);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v24 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v24, (uint64_t)"outdoorOffTileStdDev=", 21);
  if ((*(_BYTE *)(a2 + 64) & 0x40) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 56), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v29);
      v29.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v29);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v25 = &__p;
    else
      v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v26 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v25, v26);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_100196DD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100196E50(_QWORD *a1)
{
  void *v2;
  void *v3;

  *a1 = off_1003F9658;
  v2 = (void *)a1[4];
  if (v2)
  {
    a1[5] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[1];
  if (v3)
  {
    a1[2] = v3;
    operator delete(v3);
  }
  operator delete();
}

_QWORD *sub_100196EAC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  void *p_p;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type size;
  std::string v16;
  void *__p;
  void *v18;
  _UNKNOWN **v19;

  sub_1000F0508(a1, (uint64_t)"PolygonBounds(", 14);
  v4 = sub_1000F0508(a1, (uint64_t)"xs=", 3);
  sub_1001970B8(a2 + 8);
  if (SHIBYTE(v19) >= 0)
    p_p = &__p;
  else
    p_p = __p;
  if (SHIBYTE(v19) >= 0)
    v6 = HIBYTE(v19);
  else
    v6 = (uint64_t)v18;
  sub_1000F0508(v4, (uint64_t)p_p, v6);
  if (SHIBYTE(v19) < 0)
    operator delete(__p);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"ys=", 3);
  sub_1001970B8(a2 + 32);
  if (SHIBYTE(v19) >= 0)
    v9 = &__p;
  else
    v9 = __p;
  if (SHIBYTE(v19) >= 0)
    v10 = HIBYTE(v19);
  else
    v10 = (uint64_t)v18;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v19) < 0)
    operator delete(__p);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"tolerance=", 10);
  memset(&v16, 0, sizeof(v16));
  if ((sub_10016EED0((double *)(a2 + 56), &v16) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p = &off_1003EFFF0;
    sub_1000F9804((uint64_t)&__p);
  }
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &v16;
  else
    v13 = (std::string *)v16.__r_.__value_.__r.__words[0];
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v16.__r_.__value_.__r.__words[2]);
  else
    size = v16.__r_.__value_.__l.__size_;
  sub_1000F0508(v12, (uint64_t)v13, size);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v16.__r_.__value_.__l.__data_);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_100197070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001970B8(uint64_t a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  double *v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  double *v11;
  double *v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"[", 1);
  v6 = *(double **)a1;
  v11 = *(double **)(a1 + 8);
  v12 = v6;
  sub_100199868(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"]", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_100197258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019726C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_10019728C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1001972A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001972B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void **sub_1001972D8(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  char *v5;
  char *v6;
  void (**v7)(char *);
  BOOL v8;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      v5 = v3 - 72;
      v6 = v3 - 72;
      do
      {
        v7 = *(void (***)(char *))v6;
        v6 -= 72;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_100197348(_QWORD *a1)
{
  void (***v2)(_QWORD);
  void (***v3)(_QWORD);
  void *v4;
  void (***v5)(_QWORD);
  void (***v6)(_QWORD);
  void (**v7)(_QWORD);
  BOOL v8;
  void *v9;
  void *v10;

  *a1 = off_1003F9678;
  v2 = (void (***)(_QWORD))a1[10];
  if (v2)
  {
    v3 = (void (***)(_QWORD))a1[11];
    v4 = (void *)a1[10];
    if (v3 != v2)
    {
      v5 = v3 - 9;
      v6 = v3 - 9;
      do
      {
        v7 = *v6;
        v6 -= 9;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = (void *)a1[10];
    }
    a1[11] = v2;
    operator delete(v4);
  }
  a1[1] = off_1003F9658;
  v9 = (void *)a1[5];
  if (v9)
  {
    a1[6] = v9;
    operator delete(v9);
  }
  v10 = (void *)a1[2];
  if (v10)
  {
    a1[3] = v10;
    operator delete(v10);
  }
  operator delete();
}

_QWORD *sub_100197400(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  std::string __p;
  std::bad_cast v13;
  _UNKNOWN **v14;
  _UNKNOWN **v15;

  sub_1000F0508(a1, (uint64_t)"GeoJsonPolygon(", 15);
  v4 = sub_1000F0508(a1, (uint64_t)"exteriorRing=", 13);
  memset(&__p, 0, sizeof(__p));
  if ((sub_100199E9C(a2 + 8, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"interiorRings=", 14);
  sub_1001975A0((uint64_t *)(a2 + 80));
  if (SHIBYTE(v15) >= 0)
    v9 = &v13;
  else
    v9 = v13.__vftable;
  if (SHIBYTE(v15) >= 0)
    v10 = HIBYTE(v15);
  else
    v10 = (uint64_t)v14;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v15) < 0)
    operator delete(v13.__vftable);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_10019755C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001975A0(uint64_t *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"[", 1);
  v6 = *a1;
  v11 = a1[1];
  v12 = v6;
  sub_10019A148(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"]", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_100197740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100197754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_100197774(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_100197788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019779C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

_QWORD *sub_1001977C0(_QWORD *a1)
{
  void (***v2)(_QWORD);
  void (***v3)(_QWORD);
  void (***v4)(_QWORD);
  void (***v5)(_QWORD);
  BOOL v6;

  v2 = (void (***)(_QWORD))*a1;
  if (*a1)
  {
    v3 = (void (***)(_QWORD))a1[1];
    v4 = (void (***)(_QWORD))*a1;
    if (v3 != v2)
    {
      v5 = v3 - 103;
      do
      {
        (**v5)(v5);
        v6 = v5 == v2;
        v5 -= 103;
      }
      while (!v6);
      v4 = (void (***)(_QWORD))*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void **sub_100197830(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  char *v5;
  char *v6;
  void (**v7)(char *);
  BOOL v8;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      v5 = v3 - 112;
      v6 = v3 - 112;
      do
      {
        v7 = *(void (***)(char *))v6;
        v6 -= 112;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_1001978A0(uint64_t a1)
{
  sub_10007319C(a1);
  operator delete();
}

uint64_t sub_1001978C4(uint64_t result, double a2)
{
  *(double *)(result + 1824) = a2;
  *(_DWORD *)(result + 1912) |= 0x80000u;
  return result;
}

uint64_t sub_1001978D8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 1860) = a2;
  *(_DWORD *)(result + 1912) |= 0x400000u;
  return result;
}

_QWORD *sub_1001978EC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *v5;
  std::string::size_type size;
  _QWORD *v7;
  std::string *v8;
  std::string::size_type v9;
  _QWORD *v10;
  _QWORD *v11;
  std::string *v12;
  std::string::size_type v13;
  _QWORD *v14;
  _QWORD *v15;
  std::string *p_p;
  std::string::size_type v17;
  _QWORD *v18;
  _QWORD *v19;
  std::string *v20;
  std::string::size_type v21;
  _QWORD *v22;
  _QWORD *v23;
  std::string::value_type v24;
  _QWORD *v25;
  _QWORD *v26;
  std::string *v27;
  std::string::size_type v28;
  _QWORD *v29;
  _QWORD *v30;
  std::string *v31;
  std::string::size_type v32;
  _QWORD *v33;
  std::string::value_type v34;
  _QWORD *v35;
  std::string *v36;
  std::string::size_type v37;
  _QWORD *v38;
  std::string *v39;
  std::string::size_type v40;
  _QWORD *v41;
  std::string *v42;
  std::string::size_type v43;
  _QWORD *v44;
  std::string *v45;
  std::string::size_type v46;
  _QWORD *v47;
  std::string *v48;
  std::string::size_type v49;
  _QWORD *v50;
  std::string *v51;
  std::string::size_type v52;
  _QWORD *v53;
  std::string *v54;
  std::string::size_type v55;
  _QWORD *v56;
  _QWORD *v57;
  std::string *v58;
  std::string::size_type v59;
  _QWORD *v60;
  _QWORD *v61;
  std::string *v62;
  std::string::size_type v63;
  _QWORD *v64;
  _QWORD *v65;
  std::string *v66;
  std::string::size_type v67;
  _QWORD *v68;
  std::string *v69;
  std::string::size_type v70;
  _QWORD *v71;
  _QWORD *v72;
  std::string *v73;
  std::string::size_type v74;
  _QWORD *v75;
  std::string *v76;
  std::string::size_type v77;
  _QWORD *v78;
  std::string::value_type v79;
  _QWORD *v80;
  std::string *v81;
  std::string::size_type v82;
  _QWORD *v83;
  std::string *v84;
  std::string::size_type v85;
  std::string __p;
  std::string v88;

  sub_1000F0508(a1, (uint64_t)"LocationConfiguration(", 22);
  v4 = sub_1000F0508(a1, (uint64_t)"id=", 3);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 8));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v5 = &v88;
  else
    v5 = (std::string *)v88.__r_.__value_.__r.__words[0];
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  else
    size = v88.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)v5, size);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v7, (uint64_t)"uid=", 4);
  if ((*(_BYTE *)(a2 + 1912) & 2) != 0)
  {
    memset(&v88, 0, sizeof(v88));
    std::string::operator=(&v88, (const std::string *)(a2 + 32));
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &v88;
    else
      v8 = (std::string *)v88.__r_.__value_.__r.__words[0];
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v9 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    else
      v9 = v88.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v8, v9);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v10 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v11 = sub_1000F0508(v10, (uint64_t)"description=", 12);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 56));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v12 = &v88;
  else
    v12 = (std::string *)v88.__r_.__value_.__r.__words[0];
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  else
    v13 = v88.__r_.__value_.__l.__size_;
  sub_1000F0508(v11, (uint64_t)v12, v13);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v14 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v15 = sub_1000F0508(v14, (uint64_t)"floorConfiguration=", 19);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019AA98(a2 + 80, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v88);
    v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v88);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v17 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v15, (uint64_t)p_p, v17);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v18 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v19 = sub_1000F0508(v18, (uint64_t)"iconSet=", 8);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 904));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v20 = &v88;
  else
    v20 = (std::string *)v88.__r_.__value_.__r.__words[0];
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  else
    v21 = v88.__r_.__value_.__l.__size_;
  sub_1000F0508(v19, (uint64_t)v20, v21);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v22 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v23 = sub_1000F0508(v22, (uint64_t)"autoUpdate=", 11);
  memset(&v88, 0, sizeof(v88));
  if (*(_BYTE *)(a2 + 928))
    v24 = 49;
  else
    v24 = 48;
  v88.__r_.__value_.__s.__data_[0] = v24;
  *((_BYTE *)&v88.__r_.__value_.__s + 23) = 1;
  sub_1000F0508(v23, (uint64_t)&v88, 1);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v25 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v26 = sub_1000F0508(v25, (uint64_t)"floorTransitionSet=", 19);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 936));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v27 = &v88;
  else
    v27 = (std::string *)v88.__r_.__value_.__r.__words[0];
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v28 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  else
    v28 = v88.__r_.__value_.__l.__size_;
  sub_1000F0508(v26, (uint64_t)v27, v28);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v29 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v30 = sub_1000F0508(v29, (uint64_t)"locationGroupId=", 16);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 960));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v31 = &v88;
  else
    v31 = (std::string *)v88.__r_.__value_.__r.__words[0];
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v32 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  else
    v32 = v88.__r_.__value_.__l.__size_;
  sub_1000F0508(v30, (uint64_t)v31, v32);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v33 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v33, (uint64_t)"deleted=", 8);
  if ((*(_BYTE *)(a2 + 1913) & 1) != 0)
  {
    memset(&v88, 0, sizeof(v88));
    if (*(_BYTE *)(a2 + 984))
      v34 = 49;
    else
      v34 = 48;
    v88.__r_.__value_.__s.__data_[0] = v34;
    *((_BYTE *)&v88.__r_.__value_.__s + 23) = 1;
    sub_1000F0508(a1, (uint64_t)&v88, 1);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v35 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v35, (uint64_t)"paramOverrides=", 15);
  if ((*(_BYTE *)(a2 + 1913) & 2) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019AD44(a2 + 992, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v36 = &__p;
    else
      v36 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v37 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v37 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v36, v37);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v38 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v38, (uint64_t)"floorplan=", 10);
  if ((*(_BYTE *)(a2 + 1913) & 4) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019AFF0(a2 + 1056, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v39 = &__p;
    else
      v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v40 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v39, v40);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v41 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v41, (uint64_t)"occupancy=", 10);
  if ((*(_BYTE *)(a2 + 1913) & 8) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019B2A8(a2 + 1440, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v42 = &__p;
    else
      v42 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v43 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v43 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v42, v43);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v44 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v44, (uint64_t)"universalOrientationOfMagneticNorth=", 36);
  if ((*(_BYTE *)(a2 + 1913) & 0x10) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 1600), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v45 = &__p;
    else
      v45 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v46 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v46 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v45, v46);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v47 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v47, (uint64_t)"timestampCreatedMillis=", 23);
  if ((*(_BYTE *)(a2 + 1913) & 0x20) != 0)
  {
    sub_100172C20((uint64_t *)(a2 + 1608), &v88);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v48 = &v88;
    else
      v48 = (std::string *)v88.__r_.__value_.__r.__words[0];
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v49 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    else
      v49 = v88.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v48, v49);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v50 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v50, (uint64_t)"floorNumber=", 12);
  if ((*(_BYTE *)(a2 + 1913) & 0x40) != 0)
  {
    sub_100171748((int *)(a2 + 1616), &v88);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v51 = &v88;
    else
      v51 = (std::string *)v88.__r_.__value_.__r.__words[0];
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v52 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    else
      v52 = v88.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v51, v52);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v53 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v53, (uint64_t)"tangentPoint=", 13);
  if ((*(_BYTE *)(a2 + 1913) & 0x80) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019B560(a2 + 1624, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v54 = &__p;
    else
      v54 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v55 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v55 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v54, v55);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v56 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v57 = sub_1000F0508(v56, (uint64_t)"wifiIndoorOutdoorLikelihoodParams=", 34);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019B818(a2 + 1656, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v88);
    v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v88);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v58 = &__p;
  else
    v58 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v59 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v59 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v57, (uint64_t)v58, v59);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v60 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v61 = sub_1000F0508(v60, (uint64_t)"beaconIndoorOutdoorLikelihoodParams=", 36);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019B818(a2 + 1728, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v88);
    v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v88);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v62 = &__p;
  else
    v62 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v63 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v63 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v61, (uint64_t)v62, v63);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v64 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v65 = sub_1000F0508(v64, (uint64_t)"surveyBounds=", 13);
  sub_1001975A0((uint64_t *)(a2 + 1800));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v66 = &v88;
  else
    v66 = (std::string *)v88.__r_.__value_.__r.__words[0];
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v67 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  else
    v67 = v88.__r_.__value_.__l.__size_;
  sub_1000F0508(v65, (uint64_t)v66, v67);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v68 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v68, (uint64_t)"area=", 5);
  if ((*(_BYTE *)(a2 + 1914) & 8) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 1824), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v69 = &__p;
    else
      v69 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v70 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v70 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v69, v70);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v71 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v72 = sub_1000F0508(v71, (uint64_t)"floorplanBounds=", 16);
  sub_1001988D8((uint64_t *)(a2 + 1832));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v73 = &v88;
  else
    v73 = (std::string *)v88.__r_.__value_.__r.__words[0];
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v74 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  else
    v74 = v88.__r_.__value_.__l.__size_;
  sub_1000F0508(v72, (uint64_t)v73, v74);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v75 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v75, (uint64_t)"context=", 8);
  if ((*(_BYTE *)(a2 + 1914) & 0x20) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019BFF0((unsigned int *)(a2 + 1856), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v76 = &__p;
    else
      v76 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v77 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v77 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v76, v77);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v78 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v78, (uint64_t)"coarseRegionalWithWifiLocations=", 32);
  if ((*(_BYTE *)(a2 + 1914) & 0x40) != 0)
  {
    memset(&v88, 0, sizeof(v88));
    if (*(_BYTE *)(a2 + 1860))
      v79 = 49;
    else
      v79 = 48;
    v88.__r_.__value_.__s.__data_[0] = v79;
    *((_BYTE *)&v88.__r_.__value_.__s + 23) = 1;
    sub_1000F0508(a1, (uint64_t)&v88, 1);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v80 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v80, (uint64_t)"DEPRECATED_webviewLocationId=", 29);
  if ((*(_BYTE *)(a2 + 1914) & 0x80) != 0)
  {
    memset(&v88, 0, sizeof(v88));
    std::string::operator=(&v88, (const std::string *)(a2 + 1864));
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v81 = &v88;
    else
      v81 = (std::string *)v88.__r_.__value_.__r.__words[0];
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v82 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    else
      v82 = v88.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v81, v82);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v83 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v83, (uint64_t)"DEPRECATED_floorConfigurations=", 31);
  if ((*(_BYTE *)(a2 + 1915) & 1) != 0)
  {
    sub_100198AF8((uint64_t *)(a2 + 1888));
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v84 = &v88;
    else
      v84 = (std::string *)v88.__r_.__value_.__r.__words[0];
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v85 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    else
      v85 = v88.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v84, v85);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001987C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001988D8(uint64_t *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"[", 1);
  v6 = *a1;
  v11 = a1[1];
  v12 = v6;
  sub_10019BAC4(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"]", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_100198A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100198A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_100198AAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_100198AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100198AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_100198AF8(uint64_t *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"[", 1);
  v6 = *a1;
  v11 = a1[1];
  v12 = v6;
  sub_10019C2A8(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"]", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_100198C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100198CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_100198CCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_100198CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100198CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

_QWORD *sub_100198D18(_QWORD *a1)
{
  void (***v2)(_QWORD);
  void (***v3)(_QWORD);
  void (***v4)(_QWORD);
  void (***v5)(_QWORD);
  BOOL v6;

  v2 = (void (***)(_QWORD))*a1;
  if (*a1)
  {
    v3 = (void (***)(_QWORD))a1[1];
    v4 = (void (***)(_QWORD))*a1;
    if (v3 != v2)
    {
      v5 = v3 - 240;
      do
      {
        (**v5)(v5);
        v6 = v5 == v2;
        v5 -= 240;
      }
      while (!v6);
      v4 = (void (***)(_QWORD))*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_100198D88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  *(_QWORD *)a1 = off_1003F96B8;
  *(_QWORD *)(a1 + 104) = off_1003F95F8;
  sub_1000733B4(a1 + 136, *(_QWORD *)(a1 + 144));
  sub_1000733B4(a1 + 112, *(_QWORD *)(a1 + 120));
  v2 = *(_QWORD *)(a1 + 80);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 88);
    v4 = *(void **)(a1 + 80);
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 1) < 0)
          operator delete(*(void **)(v3 - 24));
        v3 -= 24;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 80);
    }
    *(_QWORD *)(a1 + 88) = v2;
    operator delete(v4);
  }
  if ((*(char *)(a1 + 79) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_11;
LABEL_14:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_15;
  }
  operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_14;
LABEL_11:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_15:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_100198E80(uint64_t a1)
{
  sub_100198D88(a1);
  operator delete();
}

uint64_t sub_100198EA4(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  uint64_t v5;

  *(_OWORD *)(a1 + 56) = 0u;
  v4 = (std::string *)(a1 + 56);
  *(_QWORD *)(a1 + 104) = off_1003F95F8;
  *(_QWORD *)a1 = off_1003F96B8;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  v5 = a1 + 80;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 112) = a1 + 120;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = a1 + 144;
  *(_BYTE *)(a1 + 160) &= 0xFCu;
  *(_BYTE *)(a1 + 168) &= 0xE0u;
  *(_QWORD *)(a1 + 152) = 0;
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  std::string::operator=((std::string *)(a1 + 32), (const std::string *)(a2 + 32));
  std::string::operator=(v4, (const std::string *)(a2 + 56));
  if (a1 != a2)
  {
    sub_100173A88(v5, *(std::string **)(a2 + 80), *(std::string **)(a2 + 88), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 3));
    sub_1000772D4((uint64_t *)(a1 + 112), *(_QWORD **)(a2 + 112), (_QWORD *)(a2 + 120));
    sub_1000772D4((uint64_t *)(a1 + 136), *(_QWORD **)(a2 + 136), (_QWORD *)(a2 + 144));
  }
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  return a1;
}

void sub_100198FD8(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  _QWORD *v3;
  void **v4;

  sub_100195A0C(v3);
  sub_1000FE50C(v4);
  if (*(char *)(v1 + 79) < 0)
    operator delete(*v2);
  sub_1003423E0(v1, (void **)(v1 + 32), (void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_100199018(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001A6D84(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_100199284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001992B8(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_1001992D0(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_10019CA48(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019953C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100199570(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

_QWORD *sub_100199588(_QWORD *result, char *__src, char *a3, size_t __sz)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  size_t v14;
  void **v15;
  _BYTE *v16;
  unint64_t v17;
  char *v18;
  void *v19;

  v6 = __src;
  v7 = result;
  v8 = result[2];
  v9 = (char *)*result;
  if (__sz > (v8 - *result) >> 3)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (__sz >> 61)
      goto LABEL_22;
    v10 = v8 >> 2;
    if (v8 >> 2 <= __sz)
      v10 = __sz;
    v11 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8;
    v12 = 0x1FFFFFFFFFFFFFFFLL;
    if (!v11)
      v12 = v10;
    if (v12 >> 61)
LABEL_22:
      sub_1000D02C0();
    v13 = v12;
    result = operator new(8 * v12);
    v9 = (char *)result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[v13];
    v14 = a3 - v6;
    if (v14)
      result = memcpy(result, v6, v14);
    v15 = (void **)(v7 + 1);
    goto LABEL_21;
  }
  v15 = (void **)(result + 1);
  v16 = (_BYTE *)result[1];
  v17 = (v16 - v9) >> 3;
  if (v17 >= __sz)
  {
    v14 = a3 - __src;
    if (a3 == __src)
      goto LABEL_21;
    v19 = (void *)*result;
LABEL_20:
    result = memmove(v19, __src, v14);
    goto LABEL_21;
  }
  v18 = &__src[8 * v17];
  if (v16 != v9)
  {
    result = memmove((void *)*result, __src, v16 - v9);
    v9 = (char *)*v15;
  }
  v14 = a3 - v18;
  if (v14)
  {
    v19 = v9;
    __src = v18;
    goto LABEL_20;
  }
LABEL_21:
  *v15 = &v9[v14];
  return result;
}

void sub_1001996CC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  size_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v5 = *(char **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = v5;
  if (a2 <= (v4 - (uint64_t)v5) >> 3)
  {
    if (a2)
    {
      bzero(v5, 8 * a2);
      v6 = &v5[8 * a2];
    }
    *(_QWORD *)(a1 + 8) = v6;
  }
  else
  {
    v7 = *(char **)a1;
    v8 = (uint64_t)&v5[-*(_QWORD *)a1];
    v9 = v8 >> 3;
    v10 = (v8 >> 3) + a2;
    if (v10 >> 61)
      sub_1000D02C0();
    v11 = v4 - (_QWORD)v7;
    if (v11 >> 2 > v10)
      v10 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      if (v12 >> 61)
        sub_1000CDEB8();
      v13 = operator new(8 * v12);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[8 * v9];
    v15 = 8 * a2;
    v16 = &v13[8 * v12];
    bzero(v14, v15);
    v17 = &v14[v15];
    if (v5 != v7)
    {
      v18 = v5 - v7 - 8;
      if (v18 < 0x58)
        goto LABEL_29;
      if ((unint64_t)(v5 - v13 - v8) < 0x20)
        goto LABEL_29;
      v19 = (v18 >> 3) + 1;
      v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
      v6 = &v5[-v20];
      v14 -= v20;
      v21 = &v13[8 * v9 - 16];
      v22 = v5 - 16;
      v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v24 = *(_OWORD *)v22;
        *(v21 - 1) = *((_OWORD *)v22 - 1);
        *v21 = v24;
        v21 -= 2;
        v22 -= 32;
        v23 -= 4;
      }
      while (v23);
      if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_29:
        do
        {
          v25 = *((_QWORD *)v6 - 1);
          v6 -= 8;
          *((_QWORD *)v14 - 1) = v25;
          v14 -= 8;
        }
        while (v6 != v7);
      }
    }
    *(_QWORD *)a1 = v14;
    *(_QWORD *)(a1 + 8) = v17;
    *(_QWORD *)(a1 + 16) = v16;
    if (v7)
      operator delete(v7);
  }
}

uint64_t sub_100199868(double **a1, double **a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  double *i;
  std::string *p_p;
  std::string::size_type size;
  std::bad_cast *v11;
  std::string __p;
  void (__cdecl **v13)(std::ostringstream *__hidden);
  _QWORD v14[8];
  void *v15[2];
  __int128 v16;
  int v17;
  void (__cdecl **v18)(std::ostringstream *__hidden);
  std::bad_cast v19;
  void *v20;
  _UNKNOWN **v21;

  v13 = v4;
  *(_QWORD *)((char *)&v14[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v14[-1] + (_QWORD)*(v13 - 3));
  std::ios_base::init(v6, v14);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v14);
  *(_OWORD *)v15 = 0u;
  v16 = 0u;
  v17 = 16;
  for (i = *a1; i != *a2; ++i)
  {
    if (i != *a1)
      sub_1000F0508(&v13, (uint64_t)", ", 2);
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0(i, &__p) & 1) == 0)
    {
      v11 = std::bad_cast::bad_cast(&v19);
      v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)v11);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(&v13, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str(v14);
  if (SBYTE7(v16) < 0)
    operator delete(v15[0]);
  std::streambuf::~streambuf(v14);
  return std::ios::~ios(&v18);
}

void sub_100199A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100199AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void **sub_100199AE8(void **result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  char *v12;
  char *v13;
  void (**v14)(char *);
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t (**v28)(char *);

  v6 = a2;
  v7 = result;
  v8 = (uint64_t)result[2];
  v9 = (char *)*result;
  if (0x8E38E38E38E38E39 * ((v8 - (uint64_t)*result) >> 3) < a4)
  {
    if (v9)
    {
      v10 = (char *)result[1];
      v11 = *result;
      if (v10 != v9)
      {
        v12 = v10 - 72;
        v13 = v10 - 72;
        do
        {
          v14 = *(void (***)(char *))v13;
          v13 -= 72;
          (*v14)(v12);
          v15 = v12 == v9;
          v12 = v13;
        }
        while (!v15);
        v11 = *v7;
      }
      v7[1] = v9;
      operator delete(v11);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x38E38E38E38E38ELL)
      goto LABEL_44;
    v16 = 0x8E38E38E38E38E39 * (v8 >> 3);
    v17 = 2 * v16;
    if (2 * v16 <= a4)
      v17 = a4;
    v18 = v16 >= 0x1C71C71C71C71C7 ? 0x38E38E38E38E38ELL : v17;
    if (v18 > 0x38E38E38E38E38ELL)
LABEL_44:
      sub_1000D02C0();
    v19 = 9 * v18;
    result = (void **)operator new(72 * v18);
    v20 = (char *)result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[v19];
    if (v6 != a3)
    {
      v21 = 0;
      do
      {
        result = (void **)sub_100077DB0((uint64_t)&v20[v21], v6 + v21);
        v21 += 72;
      }
      while (v6 + v21 != a3);
      v20 += v21;
    }
    goto LABEL_43;
  }
  v22 = (char *)result[1];
  if (0x8E38E38E38E38E39 * ((v22 - v9) >> 3) < a4)
  {
    v23 = a2 + 8 * ((v22 - v9) >> 3);
    if (v22 == v9)
    {
      v24 = (char *)*result;
      if (v23 == a3)
      {
LABEL_36:
        v7[1] = v24;
        return result;
      }
    }
    else
    {
      do
      {
        if ((char *)v6 != v9)
        {
          sub_100199588((_QWORD *)v9 + 1, *(char **)(v6 + 8), *(char **)(v6 + 16), (uint64_t)(*(_QWORD *)(v6 + 16) - *(_QWORD *)(v6 + 8)) >> 3);
          result = (void **)sub_100199588((_QWORD *)v9 + 4, *(char **)(v6 + 32), *(char **)(v6 + 40), (uint64_t)(*(_QWORD *)(v6 + 40) - *(_QWORD *)(v6 + 32)) >> 3);
        }
        *((_QWORD *)v9 + 7) = *(_QWORD *)(v6 + 56);
        v9[64] = *(_BYTE *)(v6 + 64);
        v6 += 72;
        v9 += 72;
      }
      while (v6 != v23);
      v9 = (char *)v7[1];
      v24 = v9;
      if (v23 == a3)
        goto LABEL_36;
    }
    v25 = 0;
    do
    {
      result = (void **)sub_100077DB0((uint64_t)&v9[v25], v23 + v25);
      v25 += 72;
    }
    while (v23 + v25 != a3);
    v24 = &v9[v25];
    goto LABEL_36;
  }
  if (a2 != a3)
  {
    v20 = (char *)*result;
    do
    {
      if ((char *)v6 != v9)
      {
        sub_100199588((_QWORD *)v9 + 1, *(char **)(v6 + 8), *(char **)(v6 + 16), (uint64_t)(*(_QWORD *)(v6 + 16) - *(_QWORD *)(v6 + 8)) >> 3);
        result = (void **)sub_100199588((_QWORD *)v9 + 4, *(char **)(v6 + 32), *(char **)(v6 + 40), (uint64_t)(*(_QWORD *)(v6 + 40) - *(_QWORD *)(v6 + 32)) >> 3);
      }
      *((_QWORD *)v9 + 7) = *(_QWORD *)(v6 + 56);
      v9[64] = *(_BYTE *)(v6 + 64);
      v20 += 72;
      v6 += 72;
      v9 += 72;
    }
    while (v6 != a3);
    v22 = (char *)v7[1];
    if (v22 == v20)
      goto LABEL_43;
    goto LABEL_40;
  }
  v20 = (char *)*result;
  if (v22 != v9)
  {
LABEL_40:
    v26 = v22 - 72;
    v27 = v22 - 72;
    do
    {
      v28 = *(uint64_t (***)(char *))v27;
      v27 -= 72;
      result = (void **)(*v28)(v26);
      v15 = v26 == v20;
      v26 = v27;
    }
    while (!v15);
  }
LABEL_43:
  v7[1] = v20;
  return result;
}

void sub_100199E18(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  for (; v3; v3 -= 72)
    (**(void (***)(uint64_t))(v2 - 72 + v3))(v2 - 72 + v3);
  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(exception_object);
}

uint64_t sub_100199E48(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void (**v4)(void);

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = *(void (***)(void))(i - 72);
    *(_QWORD *)(a1 + 16) = i - 72;
    (*v4)();
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_100199E9C(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_100196EAC(&v32, a1);
  v5 = (char *)&v32 + (_QWORD)*(v32 - 3);
  v6 = *((_DWORD *)v5 + 8);
  v7 = *((_QWORD *)v5 + 5);
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019A0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019A130(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019A148(uint64_t *a1, _QWORD *a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  uint64_t i;
  std::string *p_p;
  std::string::size_type size;
  std::bad_cast *v11;
  std::string __p;
  void (__cdecl **v13)(std::ostringstream *__hidden);
  _QWORD v14[8];
  void *v15[2];
  __int128 v16;
  int v17;
  void (__cdecl **v18)(std::ostringstream *__hidden);
  std::bad_cast v19;
  _UNKNOWN **v20;
  _UNKNOWN **v21;

  v13 = v4;
  *(_QWORD *)((char *)&v14[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v14[-1] + (_QWORD)*(v13 - 3));
  std::ios_base::init(v6, v14);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v14);
  *(_OWORD *)v15 = 0u;
  v16 = 0u;
  v17 = 16;
  for (i = *a1; i != *a2; i += 72)
  {
    if (i != *a1)
      sub_1000F0508(&v13, (uint64_t)", ", 2);
    memset(&__p, 0, sizeof(__p));
    if ((sub_100199E9C(i, &__p) & 1) == 0)
    {
      v11 = std::bad_cast::bad_cast(&v19);
      v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)v11);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(&v13, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str(v14);
  if (SBYTE7(v16) < 0)
    operator delete(v15[0]);
  std::streambuf::~streambuf(v14);
  return std::ios::~ios(&v18);
}

void sub_10019A344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019A390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_10019A3C8(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (***v12)(_QWORD);
  void (***v13)(_QWORD);
  void (**v14)(_QWORD);
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (***v29)(_QWORD);
  uint64_t (***v30)(_QWORD);
  uint64_t (**v31)(_QWORD);

  v8 = a1[2];
  v9 = *a1;
  if (0x6DB6DB6DB6DB6DB7 * ((v8 - *a1) >> 4) >= a4)
  {
    if (0x6DB6DB6DB6DB6DB7 * ((a1[1] - v9) >> 4) >= a4)
    {
      result = sub_10019A674(a2, a3, v9);
      v27 = v26;
      v28 = a1[1];
      if (v28 != v26)
      {
        v29 = (uint64_t (***)(_QWORD))(v28 - 112);
        v30 = (uint64_t (***)(_QWORD))(v28 - 112);
        do
        {
          v31 = *v30;
          v30 -= 14;
          result = (*v31)(v29);
          v15 = v29 == (uint64_t (***)(_QWORD))v27;
          v29 = v30;
        }
        while (!v15);
      }
      a1[1] = v27;
    }
    else
    {
      v23 = a2 + 16 * ((a1[1] - v9) >> 4);
      result = sub_10019A674(a2, v23, v9);
      v24 = a1[1];
      if (v23 != a3)
      {
        v25 = 0;
        do
        {
          result = sub_100076A14(v24 + v25, v23 + v25);
          v25 += 112;
        }
        while (v23 + v25 != a3);
        v24 += v25;
      }
      a1[1] = v24;
    }
  }
  else
  {
    if (v9)
    {
      v10 = a1[1];
      v11 = (void *)*a1;
      if (v10 != v9)
      {
        v12 = (void (***)(_QWORD))(v10 - 112);
        v13 = (void (***)(_QWORD))(v10 - 112);
        do
        {
          v14 = *v13;
          v13 -= 14;
          (*v14)(v12);
          v15 = v12 == (void (***)(_QWORD))v9;
          v12 = v13;
        }
        while (!v15);
        v11 = (void *)*a1;
      }
      a1[1] = v9;
      operator delete(v11);
      v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 > 0x249249249249249)
      goto LABEL_32;
    v16 = 0x6DB6DB6DB6DB6DB7 * (v8 >> 4);
    v17 = 2 * v16;
    if (2 * v16 <= a4)
      v17 = a4;
    v18 = v16 >= 0x124924924924924 ? 0x249249249249249 : v17;
    if (v18 > 0x249249249249249)
LABEL_32:
      sub_1000D02C0();
    v19 = 112 * v18;
    result = (uint64_t)operator new(112 * v18);
    v21 = result;
    *a1 = result;
    a1[1] = result;
    a1[2] = result + v19;
    if (a2 != a3)
    {
      v22 = 0;
      do
      {
        result = sub_100076A14(v21 + v22, a2 + v22);
        v22 += 112;
      }
      while (a2 + v22 != a3);
      v21 += v22;
    }
    a1[1] = v21;
  }
  return result;
}

void sub_10019A644(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  for (; v3; v3 -= 112)
    (**(void (***)(uint64_t))(v2 - 112 + v3))(v2 - 112 + v3);
  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(exception_object);
}

uint64_t sub_10019A674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 == a2)
    return a1;
  v5 = a2;
  v6 = 0;
  do
  {
    v7 = a3 + v6;
    v8 = a1 + v6;
    if (a1 != a3)
    {
      sub_100199588((_QWORD *)(v7 + 16), *(char **)(v8 + 16), *(char **)(v8 + 24), (uint64_t)(*(_QWORD *)(v8 + 24) - *(_QWORD *)(v8 + 16)) >> 3);
      sub_100199588((_QWORD *)(v7 + 40), *(char **)(v8 + 40), *(char **)(v8 + 48), (uint64_t)(*(_QWORD *)(v8 + 48) - *(_QWORD *)(v8 + 40)) >> 3);
      *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
      *(_BYTE *)(v7 + 72) = *(_BYTE *)(v8 + 72);
      sub_100199AE8((void **)(v7 + 80), *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), 0x8E38E38E38E38E39 * ((uint64_t)(*(_QWORD *)(v8 + 88) - *(_QWORD *)(v8 + 80)) >> 3));
    }
    *(_BYTE *)(v7 + 104) = *(_BYTE *)(v8 + 104);
    v6 += 112;
  }
  while (v8 + 112 != v5);
  return v5;
}

uint64_t *sub_10019A760(uint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (***v12)(_QWORD);
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (***v25)(_QWORD);
  uint64_t (***v26)(_QWORD);

  v6 = a2;
  v7 = result;
  v8 = result[2];
  v9 = *result;
  if (0xDAB7EC1DD3431B57 * ((v8 - *result) >> 3) < a4)
  {
    if (v9)
    {
      v10 = result[1];
      v11 = (void *)*result;
      if (v10 != v9)
      {
        v12 = (void (***)(_QWORD))(v10 - 824);
        do
        {
          (**v12)(v12);
          v13 = v12 == (void (***)(_QWORD))v9;
          v12 -= 103;
        }
        while (!v13);
        v11 = (void *)*v7;
      }
      v7[1] = v9;
      operator delete(v11);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x4F88B2F392A409)
      goto LABEL_41;
    v14 = 0xDAB7EC1DD3431B57 * (v8 >> 3);
    v15 = 2 * v14;
    if (2 * v14 <= a4)
      v15 = a4;
    v16 = v14 >= 0x27C45979C95204 ? 0x4F88B2F392A409 : v15;
    if (v16 > 0x4F88B2F392A409)
LABEL_41:
      sub_1000D02C0();
    v17 = 103 * v16;
    result = (uint64_t *)operator new(824 * v16);
    v18 = result;
    *v7 = (uint64_t)result;
    v7[1] = (uint64_t)result;
    v7[2] = (uint64_t)&result[v17];
    if (v6 != a3)
    {
      v19 = 0;
      do
      {
        result = (uint64_t *)sub_100195C34((uint64_t)&v18[v19 / 8], v6 + v19);
        v19 += 824;
      }
      while (v6 + v19 != a3);
      v18 = (uint64_t *)((char *)v18 + v19);
    }
    v7[1] = (uint64_t)v18;
    return result;
  }
  v20 = result[1];
  if (0xDAB7EC1DD3431B57 * ((v20 - v9) >> 3) >= a4)
  {
    if (a2 == a3)
    {
      v25 = (uint64_t (***)(_QWORD))*result;
      if (v20 == v9)
      {
LABEL_40:
        v7[1] = (uint64_t)v25;
        return result;
      }
    }
    else
    {
      v25 = (uint64_t (***)(_QWORD))*result;
      do
      {
        result = (uint64_t *)sub_100077628(v9, v6);
        v6 += 824;
        v9 += 824;
        v25 += 103;
      }
      while (v6 != a3);
      v20 = v7[1];
      if ((uint64_t (***)(_QWORD))v20 == v25)
        goto LABEL_40;
    }
    v26 = (uint64_t (***)(_QWORD))(v20 - 824);
    do
    {
      result = (uint64_t *)(**v26)(v26);
      v13 = v26 == v25;
      v26 -= 103;
    }
    while (!v13);
    goto LABEL_40;
  }
  v21 = a2 + 8 * ((v20 - v9) >> 3);
  if (v20 != v9)
  {
    v22 = 8 * ((v20 - v9) >> 3);
    do
    {
      result = (uint64_t *)sub_100077628(v9, v6);
      v6 += 824;
      v9 += 824;
      v22 -= 824;
    }
    while (v22);
    v9 = v7[1];
  }
  v23 = v9;
  if (v21 != a3)
  {
    v24 = 0;
    do
    {
      result = (uint64_t *)sub_100195C34(v9 + v24, v21 + v24);
      v24 += 824;
    }
    while (v21 + v24 != a3);
    v23 = v9 + v24;
  }
  v7[1] = v23;
  return result;
}

uint64_t sub_10019AA44(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void (**v4)(void);

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = *(void (***)(void))(i - 112);
    *(_QWORD *)(a1 + 16) = i - 112;
    (*v4)();
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_10019AA98(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_100196058(&v32, a1);
  v5 = (char *)&v32 + (_QWORD)*(v32 - 3);
  v6 = *((_DWORD *)v5 + 8);
  v7 = *((_QWORD *)v5 + 5);
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019ACF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019AD2C(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019AD44(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_100195A9C(&v32, a1);
  v5 = (char *)&v32 + (_QWORD)*(v32 - 3);
  v6 = *((_DWORD *)v5 + 8);
  v7 = *((_QWORD *)v5 + 5);
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019AFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019AFD8(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019AFF0(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001AB1E8(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019B25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019B290(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019B2A8(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001ABA5C(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019B514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019B548(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019B560(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001A2400(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019B7CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019B800(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019B818(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_10019686C(&v32, a1);
  v5 = (char *)&v32 + (_QWORD)*(v32 - 3);
  v6 = *((_DWORD *)v5 + 8);
  v7 = *((_QWORD *)v5 + 5);
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019BA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019BAAC(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019BAC4(uint64_t *a1, _QWORD *a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  uint64_t i;
  std::string *p_p;
  std::string::size_type size;
  std::bad_cast *v11;
  std::string __p;
  void (__cdecl **v13)(std::ostringstream *__hidden);
  _QWORD v14[8];
  void *v15[2];
  __int128 v16;
  int v17;
  void (__cdecl **v18)(std::ostringstream *__hidden);
  std::bad_cast v19;
  _UNKNOWN **v20;
  _UNKNOWN **v21;

  v13 = v4;
  *(_QWORD *)((char *)&v14[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v14[-1] + (_QWORD)*(v13 - 3));
  std::ios_base::init(v6, v14);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v14);
  *(_OWORD *)v15 = 0u;
  v16 = 0u;
  v17 = 16;
  for (i = *a1; i != *a2; i += 112)
  {
    if (i != *a1)
      sub_1000F0508(&v13, (uint64_t)", ", 2);
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019BD44(i, &__p) & 1) == 0)
    {
      v11 = std::bad_cast::bad_cast(&v19);
      v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)v11);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(&v13, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str(v14);
  if (SBYTE7(v16) < 0)
    operator delete(v15[0]);
  std::streambuf::~streambuf(v14);
  return std::ios::~ios(&v18);
}

void sub_10019BCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019BD0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_10019BD44(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_100197400(&v32, a1);
  v5 = (char *)&v32 + (_QWORD)*(v32 - 3);
  v6 = *((_DWORD *)v5 + 8);
  v7 = *((_QWORD *)v5 + 5);
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019BFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019BFD8(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019BFF0(unsigned int *a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = (_QWORD *)std::ostream::operator<<(&v32, *a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019C25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019C290(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019C2A8(uint64_t *a1, _QWORD *a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  uint64_t i;
  std::string *p_p;
  std::string::size_type size;
  std::bad_cast *v11;
  std::string __p;
  void (__cdecl **v13)(std::ostringstream *__hidden);
  _QWORD v14[8];
  void *v15[2];
  __int128 v16;
  int v17;
  void (__cdecl **v18)(std::ostringstream *__hidden);
  std::bad_cast v19;
  _UNKNOWN **v20;
  _UNKNOWN **v21;

  v13 = v4;
  *(_QWORD *)((char *)&v14[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v14[-1] + (_QWORD)*(v13 - 3));
  std::ios_base::init(v6, v14);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v14);
  *(_OWORD *)v15 = 0u;
  v16 = 0u;
  v17 = 16;
  for (i = *a1; i != *a2; i += 824)
  {
    if (i != *a1)
      sub_1000F0508(&v13, (uint64_t)", ", 2);
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019AA98(i, &__p) & 1) == 0)
    {
      v11 = std::bad_cast::bad_cast(&v19);
      v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)v11);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(&v13, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str(v14);
  if (SBYTE7(v16) < 0)
    operator delete(v15[0]);
  std::streambuf::~streambuf(v14);
  return std::ios::~ios(&v18);
}

void sub_10019C4A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019C4F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_10019C528(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 1920;
    (**(void (***)(uint64_t))(i - 1920))(i - 1920);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_10019C580()
{
  _QWORD v1[3];

  qword_10041AD60 = 0;
  qword_10041AD58 = 0;
  qword_10041AD50 = (uint64_t)&qword_10041AD58;
  v1[0] = 0x200000000;
  v1[1] = &unk_1004185E0;
  v1[2] = off_1004185E8;
  sub_100173018(&qword_10041AD50, (uint64_t)v1);
  return __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AD50, (void *)&_mh_execute_header);
}

void sub_10019C610(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10004AAA0(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_10019C62C()
{
  operator delete();
}

_QWORD *sub_10019C640(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  _QWORD *v15;
  _QWORD *v16;
  std::string *v17;
  std::string::size_type v18;
  _QWORD *v19;
  _QWORD *v20;
  std::string *v21;
  std::string::size_type v22;
  std::string v24;
  std::string __p;

  sub_1000F0508(a1, (uint64_t)"RttApModel(", 11);
  v4 = sub_1000F0508(a1, (uint64_t)"mac=", 4);
  sub_100172C20((uint64_t *)(a2 + 8), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"floorplanX=", 11);
  memset(&v24, 0, sizeof(v24));
  if ((sub_10016EED0((double *)(a2 + 16), &v24) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&__p);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &v24;
  else
    v9 = (std::string *)v24.__r_.__value_.__r.__words[0];
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  else
    v10 = v24.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v24.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"floorplanY=", 11);
  memset(&v24, 0, sizeof(v24));
  if ((sub_10016EED0((double *)(a2 + 24), &v24) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&__p);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &v24;
  else
    v13 = (std::string *)v24.__r_.__value_.__r.__words[0];
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  else
    v14 = v24.__r_.__value_.__l.__size_;
  sub_1000F0508(v12, (uint64_t)v13, v14);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v24.__r_.__value_.__l.__data_);
  v15 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v16 = sub_1000F0508(v15, (uint64_t)"height=", 7);
  memset(&v24, 0, sizeof(v24));
  if ((sub_10016EED0((double *)(a2 + 32), &v24) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&__p);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = &v24;
  else
    v17 = (std::string *)v24.__r_.__value_.__r.__words[0];
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  else
    v18 = v24.__r_.__value_.__l.__size_;
  sub_1000F0508(v16, (uint64_t)v17, v18);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v24.__r_.__value_.__l.__data_);
  v19 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v20 = sub_1000F0508(v19, (uint64_t)"resolutionNanos=", 16);
  sub_100172C20((uint64_t *)(a2 + 40), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = &__p;
  else
    v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v22 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v20, (uint64_t)v21, v22);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_10019C95C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_10019C9BC(_QWORD *a1)
{
  void (***v2)(_QWORD);
  void (***v3)(_QWORD);
  void *v4;
  void (***v5)(_QWORD);
  void (***v6)(_QWORD);
  void (**v7)(_QWORD);
  BOOL v8;

  *a1 = off_1003F9778;
  v2 = (void (***)(_QWORD))a1[1];
  if (v2)
  {
    v3 = (void (***)(_QWORD))a1[2];
    v4 = (void *)a1[1];
    if (v3 != v2)
    {
      v5 = v3 - 7;
      v6 = v3 - 7;
      do
      {
        v7 = *v6;
        v6 -= 7;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = (void *)a1[1];
    }
    a1[2] = v2;
    operator delete(v4);
  }
  operator delete();
}

_QWORD *sub_10019CA48(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  void **v5;
  uint64_t v6;
  void *__p[2];
  unsigned __int8 v9;

  sub_1000F0508(a1, (uint64_t)"RttModel(", 9);
  v4 = sub_1000F0508(a1, (uint64_t)"accessPoints=", 13);
  sub_10019CB14((uint64_t *)(a2 + 8));
  if ((v9 & 0x80u) == 0)
    v5 = __p;
  else
    v5 = (void **)__p[0];
  if ((v9 & 0x80u) == 0)
    v6 = v9;
  else
    v6 = (uint64_t)__p[1];
  sub_1000F0508(v4, (uint64_t)v5, v6);
  if ((char)v9 < 0)
    operator delete(__p[0]);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_10019CAF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10019CB14(uint64_t *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"[", 1);
  v6 = *a1;
  v11 = a1[1];
  v12 = v6;
  sub_10019D068(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"]", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_10019CCB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019CCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_10019CCE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_10019CCFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019CD10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void **sub_10019CD34(void **result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  char *v12;
  char *v13;
  void (**v14)(char *);
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void **v22;
  _BYTE *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t (**v37)(char *);

  v7 = result;
  v8 = (uint64_t)result[2];
  v9 = (char *)*result;
  if (0x6DB6DB6DB6DB6DB7 * ((v8 - (uint64_t)*result) >> 3) >= a4)
  {
    v23 = result[1];
    v24 = 0x6DB6DB6DB6DB6DB7 * ((v23 - v9) >> 3);
    if (v24 >= a4)
    {
      if (a2 != a3)
      {
        v33 = 0;
        do
        {
          v34 = &v9[v33];
          *((_QWORD *)v34 + 1) = *(_QWORD *)(a2 + v33 + 8);
          *((_OWORD *)v34 + 1) = *(_OWORD *)(a2 + v33 + 16);
          *((_QWORD *)v34 + 4) = *(_QWORD *)(a2 + v33 + 32);
          *((_QWORD *)v34 + 5) = *(_QWORD *)(a2 + v33 + 40);
          v34[48] = *(_BYTE *)(a2 + v33 + 48);
          v33 += 56;
        }
        while (a2 + v33 != a3);
        v23 = result[1];
        v9 += v33;
      }
      if (v23 != v9)
      {
        v35 = v23 - 56;
        v36 = v23 - 56;
        do
        {
          v37 = *(uint64_t (***)(char *))v36;
          v36 -= 56;
          result = (void **)(*v37)(v35);
          v15 = v35 == v9;
          v35 = v36;
        }
        while (!v15);
      }
      v7[1] = v9;
    }
    else
    {
      v25 = a2 + 8 * ((v23 - v9) >> 3);
      if (v23 != v9)
      {
        v26 = 0;
        v27 = 56 * v24;
        do
        {
          v28 = &v9[v26];
          *((_QWORD *)v28 + 1) = *(_QWORD *)(a2 + v26 + 8);
          *((_OWORD *)v28 + 1) = *(_OWORD *)(a2 + v26 + 16);
          *((_QWORD *)v28 + 4) = *(_QWORD *)(a2 + v26 + 32);
          *((_QWORD *)v28 + 5) = *(_QWORD *)(a2 + v26 + 40);
          v28[48] = *(_BYTE *)(a2 + v26 + 48);
          v26 += 56;
        }
        while (v27 != v26);
        v9 = (char *)result[1];
      }
      v29 = v9;
      if (v25 != a3)
      {
        v30 = 0;
        do
        {
          v31 = &v9[v30];
          v31[48] = v9[v30 + 48] & 0xE0;
          v32 = *(_QWORD *)(v25 + v30 + 8);
          *(_QWORD *)v31 = off_1003F9758;
          *((_QWORD *)v31 + 1) = v32;
          *((_OWORD *)v31 + 1) = *(_OWORD *)(v25 + v30 + 16);
          *((_QWORD *)v31 + 4) = *(_QWORD *)(v25 + v30 + 32);
          *((_QWORD *)v31 + 5) = *(_QWORD *)(v25 + v30 + 40);
          v31[48] = *(_BYTE *)(v25 + v30 + 48);
          v30 += 56;
        }
        while (v25 + v30 != a3);
        v29 = &v9[v30];
      }
      result[1] = v29;
    }
  }
  else
  {
    if (v9)
    {
      v10 = (char *)result[1];
      v11 = *result;
      if (v10 != v9)
      {
        v12 = v10 - 56;
        v13 = v10 - 56;
        do
        {
          v14 = *(void (***)(char *))v13;
          v13 -= 56;
          (*v14)(v12);
          v15 = v12 == v9;
          v12 = v13;
        }
        while (!v15);
        v11 = *v7;
      }
      v7[1] = v9;
      operator delete(v11);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x492492492492492)
      goto LABEL_40;
    v16 = 0x6DB6DB6DB6DB6DB7 * (v8 >> 3);
    v17 = 2 * v16;
    if (2 * v16 <= a4)
      v17 = a4;
    v18 = v16 >= 0x249249249249249 ? 0x492492492492492 : v17;
    if (v18 > 0x492492492492492)
LABEL_40:
      sub_1000D02C0();
    v19 = 7 * v18;
    result = (void **)operator new(56 * v18);
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[v19];
    if (a2 != a3)
    {
      v20 = 0;
      do
      {
        v21 = *(void **)(a2 + v20 + 8);
        v22 = &result[v20 / 8];
        *v22 = off_1003F9758;
        v22[1] = v21;
        *((_OWORD *)v22 + 1) = *(_OWORD *)(a2 + v20 + 16);
        v22[4] = *(void **)(a2 + v20 + 32);
        v22[5] = *(void **)(a2 + v20 + 40);
        *((_BYTE *)v22 + 48) = *(_BYTE *)(a2 + v20 + 48);
        v20 += 56;
      }
      while (a2 + v20 != a3);
      result = (void **)((char *)result + v20);
    }
    v7[1] = result;
  }
  return result;
}

uint64_t sub_10019D068(uint64_t *a1, _QWORD *a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  uint64_t i;
  std::string *p_p;
  std::string::size_type size;
  std::bad_cast *v11;
  std::string __p;
  void (__cdecl **v13)(std::ostringstream *__hidden);
  _QWORD v14[8];
  void *v15[2];
  __int128 v16;
  int v17;
  void (__cdecl **v18)(std::ostringstream *__hidden);
  std::bad_cast v19;
  _UNKNOWN **v20;
  _UNKNOWN **v21;

  v13 = v4;
  *(_QWORD *)((char *)&v14[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v14[-1] + (_QWORD)*(v13 - 3));
  std::ios_base::init(v6, v14);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v14);
  *(_OWORD *)v15 = 0u;
  v16 = 0u;
  v17 = 16;
  for (i = *a1; i != *a2; i += 56)
  {
    if (i != *a1)
      sub_1000F0508(&v13, (uint64_t)", ", 2);
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019D2E8(i, &__p) & 1) == 0)
    {
      v11 = std::bad_cast::bad_cast(&v19);
      v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)v11);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(&v13, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str(v14);
  if (SBYTE7(v16) < 0)
    operator delete(v15[0]);
  std::streambuf::~streambuf(v14);
  return std::ios::~ios(&v18);
}

void sub_10019D264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019D2B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_10019D2E8(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_10019C640(&v32, a1);
  v5 = (char *)&v32 + (_QWORD)*(v32 - 3);
  v6 = *((_DWORD *)v5 + 8);
  v7 = *((_QWORD *)v5 + 5);
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019D548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019D57C(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

_QWORD *sub_10019D594(_QWORD *a1)
{
  void *v2;

  *a1 = off_1003F97B8;
  v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_10019D5D0(_QWORD *a1)
{
  void *v2;

  *a1 = off_1003F97B8;
  v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  operator delete();
}

uint64_t sub_10019D61C(uint64_t result, double a2)
{
  *(double *)(result + 128) = a2;
  *(_BYTE *)(result + 152) |= 8u;
  return result;
}

uint64_t sub_10019D630(uint64_t result, double a2)
{
  *(double *)(result + 144) = a2;
  *(_BYTE *)(result + 152) |= 0x20u;
  return result;
}

void sub_10019D644()
{
  operator delete();
}

uint64_t sub_10019D658(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t result;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "FloorTransitionState");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "startFloorNumber", 8, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "transitionDirection", 8, 2);
  v11 = v10 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 12));
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "timestampNanos", 10, 3);
  LODWORD(a1) = v13 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 16));
  LODWORD(a1) = a1 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  LODWORD(a1) = v12 + a1 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = a1 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

void sub_10019D814(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_1003F97F8;
  if (*(char *)(a1 + 743) < 0)
    operator delete(*(void **)(a1 + 720));
  nullsub_22(a1 + 528);
  *(_QWORD *)(a1 + 304) = off_1003F97B8;
  v2 = *(void **)(a1 + 360);
  if (v2)
  {
    *(_QWORD *)(a1 + 368) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 127) < 0)
    operator delete(*(void **)(a1 + 104));
  nullsub_22(a1 + 40);
  nullsub_23(a1 + 8);
  operator delete();
}

double sub_10019D8A4(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)&result = sub_100077D9C(a1 + 8, a2).n128_u64[0];
  return result;
}

double sub_10019D8AC(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)&result = sub_100077D9C(a1 + 40, a2).n128_u64[0];
  return result;
}

std::string *sub_10019D8B4(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 104), a2);
}

uint64_t sub_10019D8BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 128) = a2;
  *(_QWORD *)(result + 752) |= 0x80uLL;
  return result;
}

uint64_t sub_10019D8D0(uint64_t result, double a2)
{
  *(double *)(result + 152) = a2;
  return result;
}

uint64_t sub_10019D8D8(uint64_t result, double a2)
{
  *(double *)(result + 192) = a2;
  *(_QWORD *)(result + 752) |= 0x8000uLL;
  return result;
}

uint64_t sub_10019D8EC(uint64_t result, double a2)
{
  *(double *)(result + 256) = a2;
  *(_QWORD *)(result + 752) |= 0x800000uLL;
  return result;
}

uint64_t sub_10019D900(uint64_t result, double a2)
{
  *(double *)(result + 264) = a2;
  *(_QWORD *)(result + 752) |= 0x1000000uLL;
  return result;
}

uint64_t sub_10019D914(uint64_t result, double a2)
{
  *(double *)(result + 280) = a2;
  *(_QWORD *)(result + 752) |= 0x4000000uLL;
  return result;
}

uint64_t sub_10019D928(uint64_t result, double a2)
{
  *(double *)(result + 288) = a2;
  *(_QWORD *)(result + 752) |= 0x8000000uLL;
  return result;
}

uint64_t sub_10019D93C(uint64_t result, double a2)
{
  *(double *)(result + 488) = a2;
  *(_QWORD *)(result + 752) |= 0x400000000uLL;
  return result;
}

uint64_t sub_10019D950(uint64_t result, double a2)
{
  *(double *)(result + 496) = a2;
  *(_QWORD *)(result + 752) |= 0x800000000uLL;
  return result;
}

uint64_t sub_10019D964(uint64_t result, double a2)
{
  *(double *)(result + 504) = a2;
  *(_QWORD *)(result + 752) |= 0x1000000000uLL;
  return result;
}

uint64_t sub_10019D978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 524) = a2;
  *(_QWORD *)(result + 752) |= 0x8000000000uLL;
  return result;
}

void sub_10019D98C(uint64_t a1, uint64_t a2)
{
  sub_100077D9C(a1 + 528, a2);
  *(_QWORD *)(a1 + 752) |= 0x10000000000uLL;
}

uint64_t sub_10019D9BC(uint64_t result, double a2)
{
  *(double *)(result + 560) = a2;
  *(_QWORD *)(result + 752) |= 0x20000000000uLL;
  return result;
}

double sub_10019D9D0(uint64_t a1, uint64_t a2)
{
  double result;

  result = *(double *)(a2 + 8);
  *(double *)(a1 + 576) = result;
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 752) |= 0x40000000000uLL;
  return result;
}

uint64_t sub_10019D9F8(uint64_t result, double a2)
{
  *(double *)(result + 600) = a2;
  *(_QWORD *)(result + 752) |= 0x80000000000uLL;
  return result;
}

uint64_t sub_10019DA0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 608) = a2;
  *(_QWORD *)(result + 752) |= 0x100000000000uLL;
  return result;
}

uint64_t sub_10019DA20(uint64_t result, double a2)
{
  *(double *)(result + 648) = a2;
  *(_QWORD *)(result + 752) |= 0x2000000000000uLL;
  return result;
}

uint64_t sub_10019DA34(uint64_t result, double a2)
{
  *(double *)(result + 656) = a2;
  *(_QWORD *)(result + 752) |= 0x4000000000000uLL;
  return result;
}

uint64_t sub_10019DA48(uint64_t result, double a2)
{
  *(double *)(result + 696) = a2;
  *(_QWORD *)(result + 752) |= 0x80000000000000uLL;
  return result;
}

uint64_t sub_10019DA5C(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;
  void **v7;

  *(_QWORD *)a1 = off_1003F9818;
  if (*(char *)(a1 + 127) < 0)
  {
    operator delete(*(void **)(a1 + 104));
    v2 = *(void ***)(a1 + 72);
    if (!v2)
    {
LABEL_3:
      v3 = *(void ***)(a1 + 48);
      if (!v3)
        goto LABEL_20;
      goto LABEL_13;
    }
  }
  else
  {
    v2 = *(void ***)(a1 + 72);
    if (!v2)
      goto LABEL_3;
  }
  v4 = *(void ***)(a1 + 80);
  v5 = v2;
  if (v4 != v2)
  {
    do
    {
      if (*((char *)v4 - 1) < 0)
        operator delete(*(v4 - 3));
      v4 -= 3;
    }
    while (v4 != v2);
    v5 = *(void ***)(a1 + 72);
  }
  *(_QWORD *)(a1 + 80) = v2;
  operator delete(v5);
  v3 = *(void ***)(a1 + 48);
  if (v3)
  {
LABEL_13:
    v6 = *(void ***)(a1 + 56);
    v7 = v3;
    if (v6 != v3)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v3);
      v7 = *(void ***)(a1 + 48);
    }
    *(_QWORD *)(a1 + 56) = v3;
    operator delete(v7);
  }
LABEL_20:
  nullsub_22(a1 + 16);
  return a1;
}

void sub_10019DB50(uint64_t a1)
{
  sub_10019DA5C(a1);
  operator delete();
}

double sub_10019DB74(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)&result = sub_100077D9C(a1 + 16, a2).n128_u64[0];
  return result;
}

uint64_t sub_10019DB7C(uint64_t a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t j;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  int v39;
  void *__p[2];
  uint64_t v41;

  __p[0] = 0;
  __p[1] = 0;
  v41 = 0;
  v39 = 0;
  v38 = 0;
  v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
  v5 = a1 + 144;
  v6 = a1 + 136;
  while (1)
  {
    v7 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v39, &v38) + v4;
    if (!v39)
      break;
    switch(v38)
    {
      case 1:
        v8 = *a2;
        if (v39 != 10)
          goto LABEL_37;
        v9 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 320))(a2, a1 + 8) + v7;
        *(_WORD *)(a1 + 152) |= 1u;
        break;
      case 2:
        if (v39 != 12)
          goto LABEL_31;
        v9 = sub_1001A225C(a1 + 16, a2) + v7;
        *(_WORD *)(a1 + 152) |= 2u;
        break;
      case 3:
        if (v39 != 15)
          goto LABEL_31;
        v10 = *(_QWORD *)(a1 + 48);
        for (i = *(_QWORD *)(a1 + 56); i != v10; i -= 24)
        {
          if (*(char *)(i - 1) < 0)
            operator delete(*(void **)(i - 24));
        }
        *(_QWORD *)(a1 + 56) = v10;
        v37 = 0;
        v15 = (*(uint64_t (**)(uint64_t *, uint64_t *, char *))(*a2 + 248))(a2, &v37, (char *)&v37 + 4);
        v16 = *(_QWORD *)(a1 + 48);
        v17 = *(_QWORD *)(a1 + 56);
        v18 = 0xAAAAAAAAAAAAAAABLL * ((v17 - v16) >> 3);
        if (HIDWORD(v37) <= v18)
        {
          if (HIDWORD(v37) < v18)
          {
            v35 = v6;
            v23 = v5;
            v24 = v16 + 24 * HIDWORD(v37);
            while (v17 != v24)
            {
              if (*(char *)(v17 - 1) < 0)
                operator delete(*(void **)(v17 - 24));
              v17 -= 24;
            }
            *(_QWORD *)(a1 + 56) = v24;
            v5 = v23;
            v6 = v35;
          }
        }
        else
        {
          sub_100173D8C((char **)(a1 + 48), HIDWORD(v37) - v18);
        }
        v27 = v15 + v7;
        if (HIDWORD(v37))
        {
          v28 = 0;
          v29 = 0;
          do
          {
            v27 += (*(uint64_t (**)(uint64_t *, uint64_t))(*a2 + 336))(a2, *(_QWORD *)(a1 + 48) + v28);
            ++v29;
            v28 += 24;
          }
          while (v29 < HIDWORD(v37));
        }
        v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 256))(a2) + v27;
        *(_WORD *)(a1 + 152) |= 4u;
        break;
      case 4:
        if (v39 != 15)
          goto LABEL_31;
        v12 = *(_QWORD *)(a1 + 72);
        for (j = *(_QWORD *)(a1 + 80); j != v12; j -= 24)
        {
          if (*(char *)(j - 1) < 0)
            operator delete(*(void **)(j - 24));
        }
        *(_QWORD *)(a1 + 80) = v12;
        v37 = 0;
        v19 = (*(uint64_t (**)(uint64_t *, uint64_t *, char *))(*a2 + 248))(a2, &v37, (char *)&v37 + 4);
        v20 = *(_QWORD *)(a1 + 72);
        v21 = *(_QWORD *)(a1 + 80);
        v22 = 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 3);
        if (HIDWORD(v37) <= v22)
        {
          if (HIDWORD(v37) < v22)
          {
            v36 = v6;
            v25 = v5;
            v26 = v20 + 24 * HIDWORD(v37);
            while (v21 != v26)
            {
              if (*(char *)(v21 - 1) < 0)
                operator delete(*(void **)(v21 - 24));
              v21 -= 24;
            }
            *(_QWORD *)(a1 + 80) = v26;
            v5 = v25;
            v6 = v36;
          }
        }
        else
        {
          sub_100173D8C((char **)(a1 + 72), HIDWORD(v37) - v22);
        }
        v30 = v19 + v7;
        if (HIDWORD(v37))
        {
          v31 = 0;
          v32 = 0;
          do
          {
            v30 += (*(uint64_t (**)(uint64_t *, uint64_t))(*a2 + 336))(a2, *(_QWORD *)(a1 + 72) + v31);
            ++v32;
            v31 += 24;
          }
          while (v32 < HIDWORD(v37));
        }
        v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 256))(a2) + v30;
        *(_WORD *)(a1 + 152) |= 8u;
        break;
      case 5:
        v8 = *a2;
        if (v39 != 2)
          goto LABEL_37;
        v9 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 280))(a2, a1 + 96) + v7;
        *(_WORD *)(a1 + 152) |= 0x10u;
        break;
      case 6:
        v8 = *a2;
        if (v39 != 11)
          goto LABEL_37;
        v9 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 336))(a2, a1 + 104) + v7;
        *(_WORD *)(a1 + 152) |= 0x20u;
        break;
      case 7:
        v8 = *a2;
        if (v39 != 4)
          goto LABEL_37;
        v9 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 328))(a2, a1 + 128) + v7;
        *(_WORD *)(a1 + 152) |= 0x40u;
        break;
      case 8:
        v8 = *a2;
        if (v39 != 4)
          goto LABEL_37;
        v9 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 328))(a2, v6) + v7;
        *(_WORD *)(a1 + 152) |= 0x80u;
        break;
      case 9:
        v8 = *a2;
        if (v39 != 4)
        {
LABEL_37:
          v14 = (*(uint64_t (**)(uint64_t *))(v8 + 352))(a2);
          goto LABEL_38;
        }
        v9 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 328))(a2, v5) + v7;
        *(_WORD *)(a1 + 152) |= 0x100u;
        break;
      default:
LABEL_31:
        v14 = (*(uint64_t (**)(uint64_t *))(*a2 + 352))(a2);
LABEL_38:
        v9 = v14 + v7;
        break;
    }
    v4 = (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2) + v9;
  }
  v33 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v41) < 0)
    operator delete(__p[0]);
  return (v33 + v7);
}

void sub_10019E104(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10019E13C(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t i;
  int v16;
  int v17;
  __int16 v18;
  int v19;
  int v20;
  int v21;
  uint64_t result;
  int v23;
  int v24;
  uint64_t j;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "LocalizerUniverseState");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "latLonPosition", 12, 2);
  v11 = v10 + sub_10002A2B8(a1 + 16, a2);
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "locationGroupIds", 15, 3);
  v14 = v12
      + v13
      + (*(uint64_t (**)(_DWORD *, uint64_t, _QWORD))(*(_QWORD *)a2 + 88))(a2, 11, -1431655765 * ((*(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 48)) >> 3));
  for (i = *(_QWORD *)(a1 + 48); i != *(_QWORD *)(a1 + 56); i += 24)
    v14 += (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, i);
  v16 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 96))(a2);
  v17 = v16 + v14 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v18 = *(_WORD *)(a1 + 152);
  if ((v18 & 8) != 0)
  {
    v23 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "groundTruthGroupIds", 15, 4);
    v24 = v23
        + (*(uint64_t (**)(_DWORD *, uint64_t, _QWORD))(*(_QWORD *)a2 + 88))(a2, 11, -1431655765 * ((*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3))+ v17;
    for (j = *(_QWORD *)(a1 + 72); j != *(_QWORD *)(a1 + 80); j += 24)
      v24 += (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, j);
    v26 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 96))(a2);
    v17 = v26 + v24 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
    v18 = *(_WORD *)(a1 + 152);
    if ((v18 & 0x10) == 0)
    {
LABEL_6:
      if ((v18 & 0x20) == 0)
        goto LABEL_7;
      goto LABEL_16;
    }
  }
  else if ((v18 & 0x10) == 0)
  {
    goto LABEL_6;
  }
  v27 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "triggerUpdateCallback", 2, 5);
  v28 = v17 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 96));
  v17 = v27 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v28;
  v18 = *(_WORD *)(a1 + 152);
  if ((v18 & 0x20) == 0)
  {
LABEL_7:
    if ((v18 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  v29 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "provider", 11, 6);
  v30 = v17 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 104);
  v17 = v29 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v30;
  v18 = *(_WORD *)(a1 + 152);
  if ((v18 & 0x40) == 0)
  {
LABEL_8:
    if ((v18 & 0x80) == 0)
      goto LABEL_9;
LABEL_18:
    v33 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "localX", 4, 8);
    v34 = v17 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 136));
    v17 = v33 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v34;
    if ((*(_WORD *)(a1 + 152) & 0x100) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
LABEL_17:
  v31 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "horizontalAccuracy", 4, 7);
  v32 = v17 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 128));
  v17 = v31 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v32;
  v18 = *(_WORD *)(a1 + 152);
  if ((v18 & 0x80) != 0)
    goto LABEL_18;
LABEL_9:
  if ((v18 & 0x100) != 0)
  {
LABEL_10:
    v19 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "localY", 4, 9);
    v20 = v17 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 144));
    v17 = v19 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v20;
  }
LABEL_11:
  v21 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v21 + v17 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_10019E5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::string *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(a1 + 16) = off_1003F9A88;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) &= 0xFCu;
  *(_OWORD *)(a1 + 48) = 0u;
  v4 = a1 + 48;
  *(_QWORD *)(a1 + 104) = 0;
  v5 = (std::string *)(a1 + 104);
  v6 = a1 + 72;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_WORD *)(a1 + 152) &= 0xFE00u;
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = off_1003F9818;
  *(_QWORD *)(a1 + 8) = v7;
  sub_100077D9C(a1 + 16, a2 + 16);
  if (a1 != a2)
  {
    sub_100173A88(v4, *(std::string **)(a2 + 48), *(std::string **)(a2 + 56), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 56) - *(_QWORD *)(a2 + 48)) >> 3));
    sub_100173A88(v6, *(std::string **)(a2 + 72), *(std::string **)(a2 + 80), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 80) - *(_QWORD *)(a2 + 72)) >> 3));
  }
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  std::string::operator=(v5, (const std::string *)(a2 + 104));
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  return a1;
}

void sub_10019E710(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void **v4;
  void **v5;

  if (*(char *)(v2 + 127) < 0)
    operator delete(*v5);
  sub_1000FE50C(v4);
  sub_1000FE50C(v3);
  nullsub_22(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10019E748(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_100077D9C(a1 + 16, a2 + 16);
  if (a1 != a2)
  {
    sub_100173A88(a1 + 48, *(std::string **)(a2 + 48), *(std::string **)(a2 + 56), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 56) - *(_QWORD *)(a2 + 48)) >> 3));
    sub_100173A88(a1 + 72, *(std::string **)(a2 + 72), *(std::string **)(a2 + 80), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 80) - *(_QWORD *)(a2 + 72)) >> 3));
  }
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  std::string::operator=((std::string *)(a1 + 104), (const std::string *)(a2 + 104));
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  return a1;
}

uint64_t sub_10019E7F4(uint64_t a1)
{
  void *v2;
  void *v3;

  *(_QWORD *)a1 = off_1003F9838;
  v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(_QWORD *)(a1 + 64) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 32);
  if (v3)
  {
    *(_QWORD *)(a1 + 40) = v3;
    operator delete(v3);
  }
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_10019E860(uint64_t a1)
{
  void *v2;
  void *v3;

  *(_QWORD *)a1 = off_1003F9838;
  v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(_QWORD *)(a1 + 64) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 32);
  if (v3)
  {
    *(_QWORD *)(a1 + 40) = v3;
    operator delete(v3);
  }
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  operator delete();
}

uint64_t sub_10019E8CC(uint64_t result, double a2)
{
  *(double *)(result + 80) = a2;
  return result;
}

uint64_t sub_10019E8D4(uint64_t result, double a2)
{
  *(double *)(result + 88) = a2;
  return result;
}

uint64_t sub_10019E8DC(uint64_t result, double a2)
{
  *(double *)(result + 112) = a2;
  *(_WORD *)(result + 144) |= 0x80u;
  return result;
}

uint64_t sub_10019E8F0(uint64_t result, double a2)
{
  *(double *)(result + 120) = a2;
  return result;
}

uint64_t sub_10019E8F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  *(_QWORD *)a1 = off_1003F9838;
  *(_OWORD *)(a1 + 56) = 0u;
  v4 = (_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_WORD *)(a1 + 144) &= 0xF800u;
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  if (a1 != a2)
  {
    sub_10019F334((_QWORD *)(a1 + 32), *(char **)(a2 + 32), *(char **)(a2 + 40), (uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 1);
    sub_10019F334(v4, *(char **)(a2 + 56), *(char **)(a2 + 64), (uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 1);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  return a1;
}

void sub_10019E9B8(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 64) = v4;
    operator delete(v4);
  }
  sub_100342488((void **)(v1 + 32), v1, (void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_10019E9E8(uint64_t a1)
{
  sub_1000CAC24(a1);
  operator delete();
}

uint64_t sub_10019EA0C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 80) = a2;
  return result;
}

uint64_t sub_10019EA14(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
    sub_10019F46C((uint64_t **)(a1 + 8), *(_QWORD **)(a2 + 8), (_QWORD *)(a2 + 16));
  sub_100077D9C(a1 + 32, a2 + 32);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  if (a1 != a2)
    sub_100173A88(a1 + 88, *(std::string **)(a2 + 88), *(std::string **)(a2 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 96) - *(_QWORD *)(a2 + 88)) >> 3));
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(a2 + 112));
  std::string::operator=((std::string *)(a1 + 136), (const std::string *)(a2 + 136));
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  return a1;
}

uint64_t sub_10019EAB4(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001A206C(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019ED20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019ED54(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019ED6C(unsigned int *a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = (_QWORD *)std::ostream::operator<<(&v32, *a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019EFD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019F00C(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_10019F024(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 760;
    (**(void (***)(uint64_t))(i - 760))(i - 760);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_10019F07C(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001A25F0(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_10019F2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10019F31C(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

_QWORD *sub_10019F334(_QWORD *result, char *__src, char *a3, size_t __sz)
{
  char *v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  size_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  void **v15;
  _BYTE *v16;
  unint64_t v17;
  char *v18;
  void *v19;

  v6 = __src;
  v7 = result;
  v8 = result[2];
  v9 = (char *)*result;
  if (__sz > (uint64_t)(v8 - *result) >> 1)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if ((__sz & 0x8000000000000000) != 0)
      goto LABEL_23;
    if (v8 <= __sz)
      v10 = __sz;
    else
      v10 = v8;
    v11 = v8 >= 0x7FFFFFFFFFFFFFFELL;
    v12 = 0x7FFFFFFFFFFFFFFFLL;
    if (!v11)
      v12 = v10;
    if (v12 < 0)
LABEL_23:
      sub_1000D02C0();
    v13 = 2 * v12;
    result = operator new(2 * v12);
    v9 = (char *)result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + v13;
    v14 = a3 - v6;
    if (v14)
      result = memcpy(result, v6, v14);
    v15 = (void **)(v7 + 1);
    goto LABEL_22;
  }
  v15 = (void **)(result + 1);
  v16 = (_BYTE *)result[1];
  v17 = (v16 - v9) >> 1;
  if (v17 >= __sz)
  {
    v14 = a3 - __src;
    if (a3 == __src)
      goto LABEL_22;
    v19 = (void *)*result;
LABEL_21:
    result = memmove(v19, __src, v14);
    goto LABEL_22;
  }
  v18 = &__src[2 * v17];
  if (v16 != v9)
  {
    result = memmove((void *)*result, __src, v16 - v9);
    v9 = (char *)*v15;
  }
  v14 = a3 - v18;
  if (v14)
  {
    v19 = v9;
    __src = v18;
    goto LABEL_21;
  }
LABEL_22:
  *v15 = &v9[v14];
  return result;
}

void sub_10019F46C(uint64_t **a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t **v15;
  uint64_t **v16;
  int v17;
  size_t v18;
  const void *v19;
  _QWORD *v20;
  const void *v21;
  const void *v22;
  int v23;
  size_t v24;
  const void *v25;
  size_t v26;
  int v27;
  _BOOL4 v28;
  uint64_t *v29;
  _QWORD *v30;
  _QWORD *v31;
  BOOL v32;
  _QWORD *v33;
  uint64_t **v34;
  _QWORD *i;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];

  v5 = a1;
  if (a1[2])
  {
    v6 = *a1;
    v8 = a1 + 1;
    v7 = a1[1];
    *a1 = (uint64_t *)(a1 + 1);
    v7[2] = 0;
    a1[1] = 0;
    a1[2] = 0;
    if (v6[1])
      v9 = v6[1];
    else
      v9 = (uint64_t)v6;
    v39 = (uint64_t)a1;
    v41 = v9;
    if (!v9)
      goto LABEL_65;
    v10 = *(_QWORD **)(v9 + 16);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (*v10 == v9)
      {
        *v10 = 0;
        while (1)
        {
          v38 = (_QWORD *)v10[1];
          if (!v38)
            break;
          do
          {
            v10 = v38;
            v38 = (_QWORD *)*v38;
          }
          while (v38);
        }
      }
      else
      {
        for (v10[1] = 0; v11; v11 = (_QWORD *)v10[1])
        {
          do
          {
            v10 = v11;
            v11 = (_QWORD *)*v11;
          }
          while (v11);
        }
      }
    }
    v40 = (uint64_t)v10;
    if (a2 == a3)
    {
      v34 = a1;
      sub_1000BE3E0((uint64_t)a1, v9);
      if (!v10)
        goto LABEL_66;
      goto LABEL_62;
    }
    v12 = a2;
    while (1)
    {
      v42[0] = v9 + 32;
      v42[1] = v9 + 56;
      sub_10019F810((uint64_t)v42, (uint64_t)(v12 + 4));
      v13 = (uint64_t *)v41;
      v14 = *v8;
      v15 = v5 + 1;
      v16 = v5 + 1;
      if (!*v8)
        break;
      v17 = *(char *)(v41 + 55);
      if (v17 >= 0)
        v18 = *(unsigned __int8 *)(v41 + 55);
      else
        v18 = *(_QWORD *)(v41 + 40);
      if (v17 >= 0)
        v19 = (const void *)(v41 + 32);
      else
        v19 = *(const void **)(v41 + 32);
      do
      {
        while (1)
        {
          v15 = (uint64_t **)v14;
          v22 = (const void *)v14[4];
          v20 = v14 + 4;
          v21 = v22;
          v23 = *((char *)v20 + 23);
          if (v23 >= 0)
            v24 = *((unsigned __int8 *)v20 + 23);
          else
            v24 = v20[1];
          if (v23 >= 0)
            v25 = v20;
          else
            v25 = v21;
          if (v24 >= v18)
            v26 = v18;
          else
            v26 = v24;
          v27 = memcmp(v19, v25, v26);
          v28 = v18 < v24;
          if (v27)
            v28 = v27 < 0;
          if (!v28)
            break;
          v14 = *v15;
          v16 = v15;
          if (!*v15)
            goto LABEL_34;
        }
        v14 = v15[1];
      }
      while (v14);
      v16 = v15 + 1;
      *(_QWORD *)v41 = 0;
      *(_QWORD *)(v41 + 8) = 0;
      *(_QWORD *)(v41 + 16) = v15;
      v15[1] = (uint64_t *)v41;
      v29 = (uint64_t *)**v5;
      if (v29)
        goto LABEL_35;
LABEL_36:
      sub_1000E05F4(v5[1], v13);
      v5[2] = (uint64_t *)((char *)v5[2] + 1);
      v9 = v40;
      v41 = v40;
      if (v40)
      {
        v10 = *(_QWORD **)(v40 + 16);
        if (v10)
        {
          v30 = (_QWORD *)*v10;
          if (*v10 == v40)
          {
            *v10 = 0;
            while (1)
            {
              v33 = (_QWORD *)v10[1];
              if (!v33)
                break;
              do
              {
                v10 = v33;
                v33 = (_QWORD *)*v33;
              }
              while (v33);
            }
          }
          else
          {
            for (v10[1] = 0; v30; v30 = (_QWORD *)v10[1])
            {
              do
              {
                v10 = v30;
                v30 = (_QWORD *)*v30;
              }
              while (v30);
            }
          }
        }
        v40 = (uint64_t)v10;
        v31 = (_QWORD *)v12[1];
        if (v31)
        {
          do
          {
LABEL_45:
            a2 = v31;
            v31 = (_QWORD *)*v31;
          }
          while (v31);
          goto LABEL_49;
        }
      }
      else
      {
        v10 = 0;
        v31 = (_QWORD *)v12[1];
        if (v31)
          goto LABEL_45;
      }
      do
      {
        a2 = (_QWORD *)v12[2];
        v32 = *a2 == (_QWORD)v12;
        v12 = a2;
      }
      while (!v32);
LABEL_49:
      if (v9)
      {
        v12 = a2;
        if (a2 != a3)
          continue;
      }
      v34 = (uint64_t **)v39;
      sub_1000BE3E0(v39, v9);
      if (!v10)
        goto LABEL_66;
LABEL_62:
      for (i = (_QWORD *)v10[2]; i; i = (_QWORD *)i[2])
        v10 = i;
      a1 = v34;
      v9 = (uint64_t)v10;
LABEL_65:
      sub_1000BE3E0((uint64_t)a1, v9);
      goto LABEL_66;
    }
LABEL_34:
    *(_QWORD *)v41 = 0;
    *(_QWORD *)(v41 + 8) = 0;
    *(_QWORD *)(v41 + 16) = v15;
    *v16 = (uint64_t *)v41;
    v29 = (uint64_t *)**v5;
    if (!v29)
      goto LABEL_36;
LABEL_35:
    *v5 = v29;
    v13 = *v16;
    goto LABEL_36;
  }
LABEL_66:
  if (a2 != a3)
  {
    do
    {
      sub_10019F8B0(v5, (uint64_t)(a2 + 4));
      v36 = (_QWORD *)a2[1];
      if (v36)
      {
        do
        {
          v37 = v36;
          v36 = (_QWORD *)*v36;
        }
        while (v36);
      }
      else
      {
        do
        {
          v37 = (_QWORD *)a2[2];
          v32 = *v37 == (_QWORD)a2;
          a2 = v37;
        }
        while (!v32);
      }
      a2 = v37;
    }
    while (v37 != a3);
  }
}

void sub_10019F7A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10019F7BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_10019F7BC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1000BE3E0(*a1, a1[2]);
  v2 = a1[1];
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = *(_QWORD *)(v3 + 16);
      }
      while (v3);
      a1[1] = v2;
    }
    sub_1000BE3E0(*a1, v2);
  }
  return a1;
}

uint64_t sub_10019F810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  std::string::operator=(*(std::string **)a1, (const std::string *)a2);
  v4 = *(_QWORD *)(a1 + 8);
  std::string::operator=((std::string *)(v4 + 8), (const std::string *)(a2 + 32));
  if (v4 != a2 + 24)
  {
    sub_10019F334((_QWORD *)(v4 + 32), *(char **)(a2 + 56), *(char **)(a2 + 64), (uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 1);
    sub_10019F334((_QWORD *)(v4 + 56), *(char **)(a2 + 80), *(char **)(a2 + 88), (uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 1);
  }
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a2 + 152);
  *(_WORD *)(v4 + 144) = *(_WORD *)(a2 + 168);
  return a1;
}

char *sub_10019F8B0(uint64_t **a1, uint64_t a2)
{
  char **v4;
  char *v5;
  char *v6;
  _OWORD *v7;
  char *v8;
  char **v9;
  int v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  int v15;
  unint64_t v16;
  _QWORD *v17;
  size_t v18;
  int v19;
  _BOOL4 v20;
  uint64_t *v21;
  char *v23;

  v4 = (char **)(a1 + 1);
  v5 = (char *)operator new(0xD0uLL);
  v6 = v5;
  v23 = v5;
  v7 = v5 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_10006CED8(v5 + 32, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *v7 = *(_OWORD *)a2;
    *((_QWORD *)v5 + 6) = *(_QWORD *)(a2 + 16);
  }
  sub_10019E8F8((uint64_t)(v6 + 56), a2 + 24);
  v8 = *v4;
  v9 = v4;
  if (!*v4)
  {
LABEL_25:
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 0;
    *((_QWORD *)v6 + 2) = v4;
    *v9 = v6;
    v21 = (uint64_t *)**a1;
    if (!v21)
      goto LABEL_27;
LABEL_26:
    *a1 = v21;
    v6 = *v9;
    goto LABEL_27;
  }
  v10 = v6[55];
  if (v10 >= 0)
    v11 = v6[55];
  else
    v11 = *((_QWORD *)v6 + 5);
  if (v10 < 0)
    v7 = (_OWORD *)*((_QWORD *)v6 + 4);
  do
  {
    while (1)
    {
      v4 = (char **)v8;
      v14 = (_QWORD *)*((_QWORD *)v8 + 4);
      v12 = v8 + 32;
      v13 = v14;
      v15 = *((char *)v12 + 23);
      v16 = v15 >= 0 ? *((unsigned __int8 *)v12 + 23) : v12[1];
      v17 = v15 >= 0 ? v12 : v13;
      v18 = v16 >= v11 ? v11 : v16;
      v19 = memcmp(v7, v17, v18);
      v20 = v11 < v16;
      if (v19)
        v20 = v19 < 0;
      if (!v20)
        break;
      v8 = *v4;
      v9 = v4;
      if (!*v4)
        goto LABEL_25;
    }
    v8 = v4[1];
  }
  while (v8);
  v9 = v4 + 1;
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = v4;
  v4[1] = v6;
  v21 = (uint64_t *)**a1;
  if (v21)
    goto LABEL_26;
LABEL_27:
  sub_1000E05F4(a1[1], (uint64_t *)v6);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v23;
}

void sub_10019FA1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10019FA5C((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

void sub_10019FA34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v3;
  va_list va;

  va_start(va, a2);
  if (*(char *)(v2 + 55) < 0)
    operator delete(*v3);
  sub_10019FA5C((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

void sub_10019FA5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = *a1;
  *a1 = a2;
  if (v2)
  {
    if (!*((_BYTE *)a1 + 16))
    {
LABEL_9:
      operator delete((void *)v2);
      return;
    }
    *(_QWORD *)(v2 + 56) = off_1003F9838;
    v3 = *(void **)(v2 + 112);
    if (v3)
    {
      *(_QWORD *)(v2 + 120) = v3;
      operator delete(v3);
    }
    v4 = *(void **)(v2 + 88);
    if (v4)
    {
      *(_QWORD *)(v2 + 96) = v4;
      operator delete(v4);
    }
    if (*(char *)(v2 + 87) < 0)
    {
      operator delete(*(void **)(v2 + 64));
      if ((*(char *)(v2 + 55) & 0x80000000) == 0)
        goto LABEL_9;
    }
    else if ((*(char *)(v2 + 55) & 0x80000000) == 0)
    {
      goto LABEL_9;
    }
    operator delete(*(void **)(v2 + 32));
    operator delete((void *)v2);
  }
}

uint64_t **sub_10019FAFC(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t *v6;
  uint64_t **v7;
  int v8;
  size_t v9;
  const void *v10;
  uint64_t **v11;
  _QWORD *v12;
  const void *v13;
  const void *v14;
  int v15;
  size_t v16;
  const void *v17;
  size_t v18;
  int v19;
  _BOOL4 v20;
  int v21;
  _BOOL4 v22;
  char *v23;
  _BYTE *v24;
  __int128 *v25;
  __int16 v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t *v29;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    v8 = *((char *)a2 + 23);
    if (v8 >= 0)
      v9 = *((unsigned __int8 *)a2 + 23);
    else
      v9 = (size_t)a2[1];
    if (v8 >= 0)
      v10 = a2;
    else
      v10 = *a2;
    while (1)
    {
      while (1)
      {
        v11 = (uint64_t **)v6;
        v14 = (const void *)v6[4];
        v12 = v6 + 4;
        v13 = v14;
        v15 = *((char *)v12 + 23);
        if (v15 >= 0)
          v16 = *((unsigned __int8 *)v12 + 23);
        else
          v16 = v12[1];
        if (v15 >= 0)
          v17 = v12;
        else
          v17 = v13;
        if (v16 >= v9)
          v18 = v9;
        else
          v18 = v16;
        v19 = memcmp(v10, v17, v18);
        v20 = v9 < v16;
        if (v19)
          v20 = v19 < 0;
        if (!v20)
          break;
        v6 = *v11;
        v7 = v11;
        if (!*v11)
          goto LABEL_27;
      }
      v21 = memcmp(v17, v10, v18);
      v22 = v16 < v9;
      if (v21)
        v22 = v21 < 0;
      if (!v22)
        return v11;
      v6 = v11[1];
      if (!v6)
      {
        v7 = v11 + 1;
        goto LABEL_27;
      }
    }
  }
  else
  {
    v11 = a1 + 1;
LABEL_27:
    v23 = (char *)operator new(0xD0uLL);
    v24 = v23 + 32;
    v25 = *a4;
    if (*((char *)*a4 + 23) < 0)
    {
      sub_10006CED8(v24, *(void **)v25, *((_QWORD *)v25 + 1));
      v26 = *((_WORD *)v23 + 100) & 0xF800;
    }
    else
    {
      v26 = 0;
      v27 = *v25;
      *((_QWORD *)v23 + 6) = *((_QWORD *)v25 + 2);
      *(_OWORD *)v24 = v27;
    }
    *((_QWORD *)v23 + 7) = off_1003F9838;
    *((_OWORD *)v23 + 4) = 0u;
    *((_OWORD *)v23 + 5) = 0u;
    *((_OWORD *)v23 + 6) = 0u;
    *((_OWORD *)v23 + 7) = 0u;
    *((_OWORD *)v23 + 8) = 0u;
    *((_OWORD *)v23 + 9) = 0u;
    *((_OWORD *)v23 + 10) = 0u;
    *((_OWORD *)v23 + 11) = 0u;
    *((_QWORD *)v23 + 24) = 0;
    *((_WORD *)v23 + 100) = v26;
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    *((_QWORD *)v23 + 2) = v11;
    *v7 = (uint64_t *)v23;
    v28 = (uint64_t *)v23;
    v29 = (uint64_t *)**a1;
    if (v29)
    {
      *a1 = v29;
      v28 = *v7;
    }
    sub_1000E05F4(a1[1], v28);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return (uint64_t **)v23;
}

void sub_10019FCB4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10019FCC8()
{
  uint64_t v1;
  void *v2;
  char **v3;

  qword_10041AD78 = 0;
  qword_10041AD70 = 0;
  qword_10041AD68 = (uint64_t)&qword_10041AD70;
  v1 = 0x500000000;
  v2 = &unk_1004185F8;
  v3 = off_100418610;
  sub_100173018(&qword_10041AD68, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AD68, (void *)&_mh_execute_header);
  qword_10041AD98 = 0;
  qword_10041AD90 = 0;
  qword_10041AD88 = (uint64_t)&qword_10041AD90;
  v1 = (uint64_t)&_mh_execute_header;
  v2 = &unk_10041AD80;
  v3 = &off_100418638;
  sub_100173018(&qword_10041AD88, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AD88, (void *)&_mh_execute_header);
  qword_10041ADB0 = 0;
  qword_10041ADA8 = 0;
  qword_10041ADA0 = (uint64_t)&qword_10041ADA8;
  v1 = 0x300000000;
  v2 = &unk_100418640;
  v3 = off_100418650;
  sub_100173018(&qword_10041ADA0, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041ADA0, (void *)&_mh_execute_header);
  qword_10041ADC8 = 0;
  qword_10041ADC0 = 0;
  qword_10041ADB8 = (uint64_t)&qword_10041ADC0;
  v1 = 0x200000000;
  v2 = &unk_100418668;
  v3 = off_100418670;
  sub_100173018(&qword_10041ADB8, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041ADB8, (void *)&_mh_execute_header);
  qword_10041ADE0 = 0;
  qword_10041ADD8 = 0;
  qword_10041ADD0 = (uint64_t)&qword_10041ADD8;
  v1 = 0x500000000;
  v2 = &unk_100418680;
  v3 = off_100418698;
  sub_100173018(&qword_10041ADD0, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041ADD0, (void *)&_mh_execute_header);
  qword_10041ADF8 = 0;
  qword_10041ADF0 = 0;
  qword_10041ADE8 = (uint64_t)&qword_10041ADF0;
  v1 = 0x400000000;
  v2 = &unk_1004186C0;
  v3 = off_1004186D0;
  sub_100173018(&qword_10041ADE8, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041ADE8, (void *)&_mh_execute_header);
}

void sub_10019FF60(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041ADE8, (_QWORD *)qword_10041ADF0);
  _Unwind_Resume(a1);
}

void sub_10019FF7C(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041ADD0, (_QWORD *)qword_10041ADD8);
  _Unwind_Resume(a1);
}

void sub_10019FF98(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041ADB8, (_QWORD *)qword_10041ADC0);
  _Unwind_Resume(a1);
}

void sub_10019FFB4(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041ADA0, (_QWORD *)qword_10041ADA8);
  _Unwind_Resume(a1);
}

void sub_10019FFD0(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AD88, (_QWORD *)qword_10041AD90);
  _Unwind_Resume(a1);
}

void sub_10019FFEC(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AD68, (_QWORD *)qword_10041AD70);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A0008()
{
  uint64_t v1;
  void *v2;
  char **v3;

  qword_10041AE10 = 0;
  qword_10041AE08 = 0;
  qword_10041AE00 = (uint64_t)&qword_10041AE08;
  v1 = 0x200000000;
  v2 = &unk_1004186F0;
  v3 = off_1004186F8;
  sub_100173018(&qword_10041AE00, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AE00, (void *)&_mh_execute_header);
  qword_10041AE28 = 0;
  qword_10041AE20 = 0;
  qword_10041AE18 = (uint64_t)&qword_10041AE20;
  v1 = 0x400000000;
  v2 = &unk_100418708;
  v3 = off_100418718;
  sub_100173018(&qword_10041AE18, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AE18, (void *)&_mh_execute_header);
  qword_10041AE40 = 0;
  qword_10041AE38 = 0;
  qword_10041AE30 = (uint64_t)&qword_10041AE38;
  v1 = 0x300000000;
  v2 = &unk_100418738;
  v3 = off_100418748;
  sub_100173018(&qword_10041AE30, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AE30, (void *)&_mh_execute_header);
  qword_10041AE58 = 0;
  qword_10041AE50 = 0;
  qword_10041AE48 = (uint64_t)&qword_10041AE50;
  v1 = 0x1000000000;
  v2 = &unk_100418760;
  v3 = off_1004187A0;
  sub_100173018(&qword_10041AE48, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AE48, (void *)&_mh_execute_header);
  qword_10041AE70 = 0;
  qword_10041AE68 = 0;
  qword_10041AE60 = (uint64_t)&qword_10041AE68;
  v1 = 0x300000000;
  v2 = &unk_100418820;
  v3 = off_100418830;
  sub_100173018(&qword_10041AE60, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AE60, (void *)&_mh_execute_header);
  qword_10041AE80 = 0;
  qword_10041AE88 = 0;
  qword_10041AE78 = (uint64_t)&qword_10041AE80;
  v1 = 0x200000000;
  v2 = &unk_100418848;
  v3 = off_100418850;
  sub_100173018(&qword_10041AE78, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AE78, (void *)&_mh_execute_header);
}

void sub_1001A02A4(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AE78, (_QWORD *)qword_10041AE80);
  _Unwind_Resume(a1);
}

void sub_1001A02C0(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AE60, (_QWORD *)qword_10041AE68);
  _Unwind_Resume(a1);
}

void sub_1001A02DC(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AE48, (_QWORD *)qword_10041AE50);
  _Unwind_Resume(a1);
}

void sub_1001A02F8(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AE30, (_QWORD *)qword_10041AE38);
  _Unwind_Resume(a1);
}

void sub_1001A0314(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AE18, (_QWORD *)qword_10041AE20);
  _Unwind_Resume(a1);
}

void sub_1001A0330(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AE00, (_QWORD *)qword_10041AE08);
  _Unwind_Resume(a1);
}

void sub_1001A034C()
{
  operator delete();
}

uint64_t sub_1001A0360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  *(_WORD *)(result + 88) |= 0x10u;
  return result;
}

uint64_t sub_1001A0374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  *(_WORD *)(result + 88) |= 0x100u;
  return result;
}

uint64_t sub_1001A0388(uint64_t a1, uint64_t *a2)
{
  int i;
  int v5;
  uint64_t v6;
  int v7;
  __int16 v8;
  int v9;
  int v11;
  __int16 v12;
  int v13;
  void *__p[2];
  uint64_t v15;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v13 = 0;
  v12 = 0;
  for (i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v13, &v12) + i;
    if (!v13)
      break;
    switch(v12)
    {
      case 1:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_26;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 8);
        v8 = *(_WORD *)(a1 + 88) | 1;
        goto LABEL_25;
      case 2:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_26;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 16);
        v8 = *(_WORD *)(a1 + 88) | 2;
        goto LABEL_25;
      case 3:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_26;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 24);
        v8 = *(_WORD *)(a1 + 88) | 4;
        goto LABEL_25;
      case 4:
        v6 = *a2;
        if (v13 != 10)
          goto LABEL_26;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 32);
        v8 = *(_WORD *)(a1 + 88) | 8;
        goto LABEL_25;
      case 5:
        v6 = *a2;
        if (v13 != 8)
          goto LABEL_26;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 40);
        v8 = *(_WORD *)(a1 + 88) | 0x10;
        goto LABEL_25;
      case 6:
        v6 = *a2;
        if (v13 != 10)
          goto LABEL_26;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 48);
        v8 = *(_WORD *)(a1 + 88) | 0x20;
        goto LABEL_25;
      case 7:
        v6 = *a2;
        if (v13 != 10)
          goto LABEL_26;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 56);
        v8 = *(_WORD *)(a1 + 88) | 0x40;
        goto LABEL_25;
      case 8:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_26;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 64);
        v8 = *(_WORD *)(a1 + 88) | 0x80;
        goto LABEL_25;
      case 9:
        if (v13 != 8)
          goto LABEL_22;
        v11 = 0;
        v7 = (*(uint64_t (**)(uint64_t *, int *))(*a2 + 312))(a2, &v11);
        *(_DWORD *)(a1 + 72) = v11;
        v8 = *(_WORD *)(a1 + 88) | 0x100;
        goto LABEL_25;
      case 10:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_26;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 80);
        v8 = *(_WORD *)(a1 + 88) | 0x200;
LABEL_25:
        *(_WORD *)(a1 + 88) = v8;
        break;
      default:
LABEL_22:
        v6 = *a2;
LABEL_26:
        v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
  return (v9 + v5);
}

void sub_1001A0698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001A06BC()
{
  operator delete();
}

__n128 sub_1001A06D0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a1 = off_1003F9908;
  *(_BYTE *)(a1 + 24) &= 0xFCu;
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return result;
}

void sub_1001A06FC()
{
  operator delete();
}

void sub_1001A0710()
{
  operator delete();
}

void sub_1001A0728()
{
  operator delete();
}

uint64_t sub_1001A073C(uint64_t result, double a2)
{
  *(double *)(result + 32) = a2;
  *(_BYTE *)(result + 80) |= 1u;
  return result;
}

uint64_t sub_1001A0750(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  *(_BYTE *)(result + 80) |= 2u;
  return result;
}

uint64_t sub_1001A0764(uint64_t result, char a2)
{
  *(_BYTE *)(result + 41) = a2;
  *(_BYTE *)(result + 80) |= 4u;
  return result;
}

uint64_t sub_1001A0778(uint64_t result, double a2)
{
  *(double *)(result + 48) = a2;
  *(_BYTE *)(result + 80) |= 8u;
  return result;
}

uint64_t sub_1001A078C(uint64_t result, double a2)
{
  *(double *)(result + 56) = a2;
  *(_BYTE *)(result + 80) |= 0x10u;
  return result;
}

uint64_t sub_1001A07A0(uint64_t result, double a2)
{
  *(double *)(result + 64) = a2;
  *(_BYTE *)(result + 80) |= 0x20u;
  return result;
}

uint64_t sub_1001A07B4(uint64_t result, double a2)
{
  *(double *)(result + 72) = a2;
  *(_BYTE *)(result + 80) |= 0x40u;
  return result;
}

uint64_t sub_1001A07C8(uint64_t a1, uint64_t *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  char v11;
  int v12;
  int v13;
  _QWORD *exception;
  __int16 v16;
  int v17;
  void *__p[2];
  uint64_t v19;

  __p[0] = 0;
  __p[1] = 0;
  v19 = 0;
  v17 = 0;
  v16 = 0;
  v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
  v5 = 0;
  v6 = 0;
  v7 = 0;
  while (1)
  {
    v8 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v17, &v16) + v4;
    if (!v17)
      break;
    switch(v16)
    {
      case 1:
        v9 = *a2;
        if (v17 != 10)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 320))(a2, a1 + 8);
        v5 = 1;
        break;
      case 2:
        v9 = *a2;
        if (v17 != 10)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 320))(a2, a1 + 16);
        v6 = 1;
        break;
      case 3:
        v9 = *a2;
        if (v17 != 8)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 312))(a2, a1 + 24);
        v7 = 1;
        break;
      case 4:
        v9 = *a2;
        if (v17 != 4)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 32);
        v11 = 1;
        goto LABEL_25;
      case 5:
        v9 = *a2;
        if (v17 != 3)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 296))(a2, a1 + 40);
        v11 = 2;
        goto LABEL_25;
      case 6:
        v9 = *a2;
        if (v17 != 3)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 296))(a2, a1 + 41);
        v11 = 4;
        goto LABEL_25;
      case 7:
        v9 = *a2;
        if (v17 != 4)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 48);
        v11 = 8;
        goto LABEL_25;
      case 8:
        v9 = *a2;
        if (v17 != 4)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 56);
        v11 = 16;
        goto LABEL_25;
      case 9:
        v9 = *a2;
        if (v17 != 4)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 64);
        v11 = 32;
        goto LABEL_25;
      case 10:
        v9 = *a2;
        if (v17 != 4)
          goto LABEL_26;
        v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 72);
        v11 = 64;
LABEL_25:
        *(_BYTE *)(a1 + 80) |= v11;
        break;
      default:
        v9 = *a2;
LABEL_26:
        v10 = (*(uint64_t (**)(uint64_t *))(v9 + 352))(a2);
        break;
    }
    v4 = v10 + v8 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2);
  }
  v12 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if ((v5 & v6 & v7 & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 1;
  }
  v13 = v12;
  if (SHIBYTE(v19) < 0)
    operator delete(__p[0]);
  return (v13 + v8);
}

void sub_1001A0B08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A0B2C(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char v16;
  int v17;
  int v18;
  int v19;
  uint64_t result;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "PedometerData");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "durationNanos", 10, 2);
  v11 = v10 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 16));
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "numberOfSteps", 8, 3);
  v14 = v13 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 24));
  v15 = v12 + v14 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v16 = *(_BYTE *)(a1 + 80);
  if ((v16 & 1) != 0)
  {
    v21 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "distance", 4, 4);
    v22 = v21 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 32));
    v15 += v22 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
    v16 = *(_BYTE *)(a1 + 80);
    if ((v16 & 2) == 0)
    {
LABEL_4:
      if ((v16 & 4) == 0)
        goto LABEL_5;
      goto LABEL_13;
    }
  }
  else if ((*(_BYTE *)(a1 + 80) & 2) == 0)
  {
    goto LABEL_4;
  }
  v23 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "floorsAscended", 3, 5);
  v24 = v15
      + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 128))(a2, *(char *)(a1 + 40));
  v15 = v23 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v24;
  v16 = *(_BYTE *)(a1 + 80);
  if ((v16 & 4) == 0)
  {
LABEL_5:
    if ((v16 & 8) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  v25 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "floorsDescended", 3, 6);
  v26 = v15
      + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 128))(a2, *(char *)(a1 + 41));
  v15 = v25 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v26;
  v16 = *(_BYTE *)(a1 + 80);
  if ((v16 & 8) == 0)
  {
LABEL_6:
    if ((v16 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  v27 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "eventWallclockTimestampSeconds", 4, 7);
  v28 = v15 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 48));
  v15 = v27 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v28;
  v16 = *(_BYTE *)(a1 + 80);
  if ((v16 & 0x10) == 0)
  {
LABEL_7:
    if ((v16 & 0x20) == 0)
      goto LABEL_8;
LABEL_16:
    v31 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "activeTime", 4, 9);
    v32 = v15 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 64));
    v15 = v31 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v32;
    if ((*(_BYTE *)(a1 + 80) & 0x40) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
LABEL_15:
  v29 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "firstStepTime", 4, 8);
  v30 = v15 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 56));
  v15 = v29 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v30;
  v16 = *(_BYTE *)(a1 + 80);
  if ((v16 & 0x20) != 0)
    goto LABEL_16;
LABEL_8:
  if ((v16 & 0x40) != 0)
  {
LABEL_9:
    v17 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "currentPace", 4, 10);
    v18 = v15 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 72));
    v15 = v17 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v18;
  }
LABEL_10:
  v19 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v19 + v15 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

__n128 sub_1001A0F8C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a1 = off_1003F9968;
  *(_BYTE *)(a1 + 80) &= 0x80u;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  result = *(__n128 *)(a2 + 64);
  *(__n128 *)(a1 + 64) = result;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return result;
}

__n128 sub_1001A0FE0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  result = *(__n128 *)(a2 + 64);
  *(__n128 *)(a1 + 64) = result;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return result;
}

void sub_1001A1020()
{
  operator delete();
}

uint64_t sub_1001A1034(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = a2;
  *(_BYTE *)(result + 48) |= 1u;
  return result;
}

uint64_t sub_1001A1048(uint64_t a1, uint64_t *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  _QWORD *exception;
  __int16 v16;
  int v17;
  void *__p[2];
  uint64_t v19;

  __p[0] = 0;
  __p[1] = 0;
  v19 = 0;
  v17 = 0;
  v16 = 0;
  v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  while (1)
  {
    v9 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v17, &v16) + v4;
    if (!v17)
      break;
    switch(v16)
    {
      case 1:
        v10 = *a2;
        if (v17 != 4)
          goto LABEL_15;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 328))(a2, a1 + 8);
        v5 = 1;
        break;
      case 2:
        v10 = *a2;
        if (v17 != 10)
          goto LABEL_15;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 320))(a2, a1 + 16);
        v6 = 1;
        break;
      case 3:
        v10 = *a2;
        if (v17 != 4)
          goto LABEL_15;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 328))(a2, a1 + 24);
        v7 = 1;
        break;
      case 4:
        v10 = *a2;
        if (v17 != 4)
          goto LABEL_15;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 328))(a2, a1 + 32);
        v8 = 1;
        break;
      case 5:
        v10 = *a2;
        if (v17 != 10)
          goto LABEL_15;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 320))(a2, a1 + 40);
        *(_BYTE *)(a1 + 48) |= 1u;
        break;
      default:
        v10 = *a2;
LABEL_15:
        v11 = (*(uint64_t (**)(uint64_t *))(v10 + 352))(a2);
        break;
    }
    v4 = v11 + v9 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2);
  }
  v12 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if ((v5 & v6 & v7 & v8 & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 1;
  }
  v13 = v12;
  if (SHIBYTE(v19) < 0)
    operator delete(__p[0]);
  return (v13 + v9);
}

void sub_1001A12A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A12C8(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t result;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "AltitudeData");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "cmLogTime", 4, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "timestampNanos", 10, 2);
  v11 = v10 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 16));
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "relativeAltitudeMeters", 4, 3);
  v14 = v13 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 24));
  v15 = v14 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v16 = v12
      + v15
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "pressureKiloPascals", 4, 4);
  v17 = (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 32));
  v18 = v16 + v17 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v19 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "backdatedTimestampNanos", 10, 5);
    v20 = v19 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 40));
    v18 += v20 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  }
  v21 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v21 + v18 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

__n128 sub_1001A1538(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a1 = off_1003F9988;
  *(_BYTE *)(a1 + 48) &= ~1u;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return result;
}

__n128 sub_1001A157C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return result;
}

uint64_t sub_1001A15A8()
{
  uint64_t v1;
  void *v2;
  char **v3;

  qword_10041AEA0 = 0;
  qword_10041AE98 = 0;
  qword_10041AE90 = (uint64_t)&qword_10041AE98;
  v1 = 0x400000000;
  v2 = &unk_100418860;
  v3 = off_100418870;
  sub_100173018(&qword_10041AE90, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AE90, (void *)&_mh_execute_header);
  qword_10041AEB8 = 0;
  qword_10041AEB0 = 0;
  qword_10041AEA8 = (uint64_t)&qword_10041AEB0;
  v1 = 0x300000000;
  v2 = &unk_100418890;
  v3 = off_1004188A0;
  sub_100173018(&qword_10041AEA8, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AEA8, (void *)&_mh_execute_header);
  qword_10041AED0 = 0;
  qword_10041AEC8 = 0;
  qword_10041AEC0 = (uint64_t)&qword_10041AEC8;
  v1 = 0x300000000;
  v2 = &unk_1004188B8;
  v3 = off_1004188C8;
  sub_100173018(&qword_10041AEC0, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AEC0, (void *)&_mh_execute_header);
}

void sub_1001A1708(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AEC0, (_QWORD *)qword_10041AEC8);
  _Unwind_Resume(a1);
}

void sub_1001A1724(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AEA8, (_QWORD *)qword_10041AEB0);
  _Unwind_Resume(a1);
}

void sub_1001A1740(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AE90, (_QWORD *)qword_10041AE98);
  _Unwind_Resume(a1);
}

void sub_1001A175C()
{
  operator delete();
}

_QWORD *sub_1001A1770(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  _QWORD *v15;
  _QWORD *v16;
  std::string *v17;
  std::string::size_type v18;
  _QWORD *v19;
  std::string *v20;
  std::string::size_type v21;
  _QWORD *v22;
  std::string *v23;
  std::string::size_type v24;
  std::string __p;
  std::bad_cast v27;
  void *v28;
  _UNKNOWN **v29;

  sub_1000F0508(a1, (uint64_t)"ObservationStats(", 17);
  v4 = sub_1000F0508(a1, (uint64_t)"sumWeights=", 11);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 8), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v27);
    v27.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v27);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"sum=", 4);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 16), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v27);
    v27.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v27);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"sumSquared=", 11);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 24), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v27);
    v27.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v27);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &__p;
  else
    v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v14 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v15 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v16 = sub_1000F0508(v15, (uint64_t)"sumSquaredWeights=", 18);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 32), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v27);
    v27.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v27);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = &__p;
  else
    v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v18 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v16, (uint64_t)v17, v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v19 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v19, (uint64_t)"min=", 4);
  if ((*(_BYTE *)(a2 + 56) & 1) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 40), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v27);
      v27.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v27);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v20 = &__p;
    else
      v20 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v21 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v21 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v20, v21);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v22 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v22, (uint64_t)"max=", 4);
  if ((*(_BYTE *)(a2 + 56) & 2) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 48), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v27);
      v27.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v27);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v23 = &__p;
    else
      v23 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v24 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v24 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v23, v24);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A1BF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001A1C64()
{
  operator delete();
}

_QWORD *sub_1001A1C78(_QWORD *a1, uint64_t a2)
{
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v6;
  std::string *v7;
  std::string::size_type v8;
  _QWORD *v9;
  std::string *v10;
  std::string::size_type v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  std::string __p;
  std::bad_cast v17;
  void *v18;
  _UNKNOWN **v19;

  sub_1000F0508(a1, (uint64_t)"LinearSaturationFunctionParameters(", 35);
  sub_1000F0508(a1, (uint64_t)"slope=", 6);
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 8), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v17);
      v17.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v6 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v6, (uint64_t)"intercept=", 10);
  if ((*(_BYTE *)(a2 + 40) & 2) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 16), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v17);
      v17.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v7 = &__p;
    else
      v7 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v8 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v7, v8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v9 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v9, (uint64_t)"max=", 4);
  if ((*(_BYTE *)(a2 + 40) & 4) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 24), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v17);
      v17.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v10 = &__p;
    else
      v10 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v11 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v10, v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v12 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v12, (uint64_t)"min=", 4);
  if ((*(_BYTE *)(a2 + 40) & 8) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 32), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v17);
      v17.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v13 = &__p;
    else
      v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v14 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v13, v14);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A1FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001A202C()
{
  operator delete();
}

__n128 sub_1001A2040(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a1 = off_1003F9A68;
  *(_BYTE *)(a1 + 24) &= 0xFCu;
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return result;
}

_QWORD *sub_1001A206C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  std::string __p;
  std::bad_cast v13;
  void *v14;
  _UNKNOWN **v15;

  sub_1000F0508(a1, (uint64_t)"Universal2d(", 12);
  v4 = sub_1000F0508(a1, (uint64_t)"x=", 2);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 8), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"y=", 2);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 16), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A220C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001A2248()
{
  operator delete();
}

uint64_t sub_1001A225C(uint64_t a1, uint64_t *a2)
{
  int i;
  int v5;
  uint64_t v6;
  int v7;
  char v8;
  int v9;
  __int16 v11;
  int v12;
  void *__p[2];
  uint64_t v14;

  __p[0] = 0;
  __p[1] = 0;
  v14 = 0;
  v12 = 0;
  v11 = 0;
  for (i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v12, &v11) + i;
    if (!v12)
      break;
    if (v11 == 2)
    {
      v6 = *a2;
      if (v12 == 4)
      {
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 16);
        v8 = 2;
        goto LABEL_9;
      }
    }
    else if (v11 == 1)
    {
      v6 = *a2;
      if (v12 == 4)
      {
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 8);
        v8 = 1;
LABEL_9:
        *(_BYTE *)(a1 + 24) |= v8;
        continue;
      }
    }
    else
    {
      v6 = *a2;
    }
    v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
  }
  v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v14) < 0)
    operator delete(__p[0]);
  return (v9 + v5);
}

void sub_1001A23B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 sub_1001A23D4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a1 = off_1003F9A88;
  *(_BYTE *)(a1 + 24) &= 0xFCu;
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return result;
}

_QWORD *sub_1001A2400(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  std::string __p;
  std::bad_cast v13;
  void *v14;
  _UNKNOWN **v15;

  sub_1000F0508(a1, (uint64_t)"LatLon(", 7);
  v4 = sub_1000F0508(a1, (uint64_t)"lat=", 4);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 8), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"lon=", 4);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 16), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A25A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001A25DC()
{
  operator delete();
}

_QWORD *sub_1001A25F0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  _QWORD *v12;
  char v13;
  _QWORD *v14;
  std::string *v15;
  std::string::size_type v16;
  std::string __p;
  std::bad_cast v19;
  _UNKNOWN **v20;
  _UNKNOWN **v21;

  sub_1000F0508(a1, (uint64_t)"HomogeneousOrthonormalMatrix2d(", 31);
  v4 = sub_1000F0508(a1, (uint64_t)"universalLocationOfCoordinateFrameOrigin=", 41);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019EAB4(a2 + 8, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v19);
    v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v19);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"universalLengthOfCoordinateFrameUnitVector=", 43);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 40), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v19);
    v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v19);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"localCoordinateFrameIsRightHanded=", 34);
  v20 = 0;
  v21 = 0;
  v19.__vftable = 0;
  if (*(_BYTE *)(a2 + 48))
    v13 = 49;
  else
    v13 = 48;
  LOBYTE(v19.__vftable) = v13;
  HIBYTE(v21) = 1;
  sub_1000F0508(v12, (uint64_t)&v19, 1);
  if (SHIBYTE(v21) < 0)
    operator delete(v19.__vftable);
  v14 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v14, (uint64_t)"universalOrientationOfCoordinateFrameX=", 39);
  if ((*(_BYTE *)(a2 + 64) & 4) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 56), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v19);
      v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v19);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v15 = &__p;
    else
      v15 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v16 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v15, v16);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A28BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001A2918()
{
  operator delete();
}

double sub_1001A292C(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)a1 = off_1003F9AC8;
  *(_QWORD *)(a1 + 16) = off_1003F9AA8;
  *(_QWORD *)(a1 + 24) = off_1003F9A68;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) &= 0xFCu;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a1 + 80) & 0xF8 | 4;
  *(_BYTE *)(a1 + 88) &= 0xF8u;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  result = *(double *)(a2 + 72);
  *(double *)(a1 + 72) = result;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return result;
}

_QWORD *sub_1001A29C8(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  std::string v16;
  std::string __p;

  sub_1000F0508(a1, (uint64_t)"BoundedCellCoordinateFrame(", 27);
  v4 = sub_1000F0508(a1, (uint64_t)"rows=", 5);
  sub_100171748((int *)(a2 + 8), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"cols=", 5);
  sub_100171748((int *)(a2 + 12), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"transform=", 10);
  memset(&v16, 0, sizeof(v16));
  if ((sub_10019F07C(a2 + 16, &v16) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&__p);
  }
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &v16;
  else
    v13 = (std::string *)v16.__r_.__value_.__r.__words[0];
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
  else
    v14 = v16.__r_.__value_.__l.__size_;
  sub_1000F0508(v12, (uint64_t)v13, v14);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v16.__r_.__value_.__l.__data_);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A2B8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001A2BD4()
{
  operator delete();
}

uint64_t sub_1001A2BE8(uint64_t a1, uint64_t *a2)
{
  int i;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  __int16 v10;
  int v11;
  void *__p[2];
  uint64_t v13;

  __p[0] = 0;
  __p[1] = 0;
  v13 = 0;
  v11 = 0;
  v10 = 0;
  for (i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v11, &v10) + i;
    if (!v11)
      break;
    if (v10 == 1)
    {
      v6 = *a2;
      if (v11 == 8)
      {
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 8);
        *(_BYTE *)(a1 + 12) |= 1u;
        continue;
      }
    }
    else
    {
      v6 = *a2;
    }
    v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
  }
  v8 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v13) < 0)
    operator delete(__p[0]);
  return (v8 + v5);
}

void sub_1001A2D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A2D28(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t result;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "WifiZaxisData");
  if ((*(_BYTE *)(a1 + 12) & 1) != 0)
  {
    v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "numberOfZaxisSlamApsUsed", 8, 1)+ v6;
    v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 8));
    v6 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  }
  v9 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2) + v6;
  result = v9 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

void sub_1001A2E44(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9B48;
  if (*(char *)(a1 + 87) < 0)
    operator delete(*(void **)(a1 + 64));
  nullsub_22(a1 + 32);
  operator delete();
}

uint64_t sub_1001A2E98(uint64_t a1, uint64_t *a2)
{
  int i;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  __int16 v12;
  int v13;
  void *v14[2];
  uint64_t v15;

  v14[0] = 0;
  v14[1] = 0;
  v15 = 0;
  v13 = 0;
  v12 = 0;
  for (i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, v14);
        ;
        i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, v14, &v13, &v12) + i;
    if (!v13)
      break;
    switch(v12)
    {
      case 1:
        v6 = *a2;
        if (v13 != 10)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 8);
        v8 = 1;
        goto LABEL_40;
      case 2:
        if (v13 != 12)
          goto LABEL_41;
        v7 = sub_1001A225C(a1 + 32, a2);
        v8 = 8;
        goto LABEL_40;
      case 3:
        v6 = *a2;
        if (v13 != 11)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 64);
        v8 = 16;
        goto LABEL_40;
      case 4:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 88);
        v8 = 32;
        goto LABEL_40;
      case 5:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 96);
        v8 = 64;
        goto LABEL_40;
      case 6:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 104);
        v8 = 128;
        goto LABEL_40;
      case 7:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 112);
        v8 = 256;
        goto LABEL_40;
      case 8:
        v6 = *a2;
        if (v13 != 8)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 120);
        v8 = 512;
        goto LABEL_40;
      case 9:
        v6 = *a2;
        if (v13 != 10)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 16);
        v8 = 2;
        goto LABEL_40;
      case 10:
        v6 = *a2;
        if (v13 != 10)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 24);
        v8 = 4;
        goto LABEL_40;
      case 11:
        v6 = *a2;
        if (v13 != 8)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 124);
        v8 = 1024;
        goto LABEL_40;
      case 12:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 128);
        v8 = 2048;
        goto LABEL_40;
      case 13:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 136);
        v8 = 4096;
        goto LABEL_40;
      case 14:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 144);
        v8 = 0x2000;
        goto LABEL_40;
      case 15:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 152);
        v8 = 0x4000;
        goto LABEL_40;
      case 16:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 160);
        v8 = 0x8000;
        goto LABEL_40;
      case 17:
        v6 = *a2;
        if (v13 != 4)
          goto LABEL_42;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 168);
        v8 = 0x10000;
        goto LABEL_40;
      case 18:
        if (v13 != 12)
          goto LABEL_41;
        v7 = sub_1001A2BE8(a1 + 176, a2);
        v8 = 0x20000;
LABEL_40:
        v9 = *(unsigned __int16 *)(a1 + 192) | (*(unsigned __int8 *)(a1 + 194) << 16) | v8;
        *(_WORD *)(a1 + 192) = v9;
        *(_BYTE *)(a1 + 194) = BYTE2(v9);
        break;
      default:
LABEL_41:
        v6 = *a2;
LABEL_42:
        v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  v10 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v15) < 0)
    operator delete(v14[0]);
  return (v10 + v5);
}

void sub_1001A32F4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 - 81) < 0)
    operator delete(*(void **)(v1 - 104));
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A3314(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  __int16 v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t result;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "GPSLocation");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "latlon", 12, 2);
  v11 = v10 + sub_10002A2B8(a1 + 32, a2);
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = *(_WORD *)(a1 + 192);
  if ((v13 & 0x10) != 0)
  {
    v31 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "provider", 11, 3);
    v32 = v31 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 64);
    v12 += v32 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
    v13 = *(_WORD *)(a1 + 192);
    if ((v13 & 0x20) == 0)
    {
LABEL_4:
      if ((v13 & 0x40) == 0)
        goto LABEL_5;
      goto LABEL_20;
    }
  }
  else if ((v13 & 0x20) == 0)
  {
    goto LABEL_4;
  }
  v33 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "altitude", 4, 4);
  v34 = v12 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 88));
  v12 = v33 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v34;
  v13 = *(_WORD *)(a1 + 192);
  if ((v13 & 0x40) == 0)
  {
LABEL_5:
    if ((v13 & 0x80) == 0)
      goto LABEL_6;
    goto LABEL_21;
  }
LABEL_20:
  v35 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "accuracy", 4, 5);
  v36 = v12 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 96));
  v12 = v35 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v36;
  v13 = *(_WORD *)(a1 + 192);
  if ((v13 & 0x80) == 0)
  {
LABEL_6:
    if ((v13 & 0x100) == 0)
      goto LABEL_7;
    goto LABEL_22;
  }
LABEL_21:
  v37 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "bearing", 4, 6);
  v38 = v12 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 104));
  v12 = v37 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v38;
  v13 = *(_WORD *)(a1 + 192);
  if ((v13 & 0x100) == 0)
  {
LABEL_7:
    if ((v13 & 0x200) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
LABEL_22:
  v39 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "speed", 4, 7);
  v40 = v12 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 112));
  v12 = v39 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v40;
  if ((*(_WORD *)(a1 + 192) & 0x200) != 0)
  {
LABEL_8:
    v14 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "numSatellites", 8, 8);
    v15 = v12 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 120));
    v12 = v14 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v15;
  }
LABEL_9:
  v16 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "receivedTimestampNanos", 10, 9);
  v17 = v12 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 16));
  v18 = v16 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v19 = v18
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "simulationTimestampNanos", 10, 10);
  v20 = v19 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 24));
  v21 = v20 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v17;
  v22 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "clGpsConfidence", 8, 11);
  v23 = v22 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 124));
  v24 = v21 + v23 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v25 = *(unsigned __int16 *)(a1 + 192);
  v26 = v25 | (*(unsigned __int8 *)(a1 + 194) << 16);
  if ((v25 & 0x800) != 0)
  {
    v41 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "horzUncSemiMaj", 4, 12);
    v42 = v41 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 128));
    v24 += v42 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
    v43 = *(unsigned __int16 *)(a1 + 192);
    v26 = v43 | (*(unsigned __int8 *)(a1 + 194) << 16);
    if ((v43 & 0x1000) == 0)
    {
LABEL_11:
      if ((v26 & 0x2000) == 0)
        goto LABEL_12;
      goto LABEL_26;
    }
  }
  else if ((v25 & 0x1000) == 0)
  {
    goto LABEL_11;
  }
  v44 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "horzUncSemiMin", 4, 13);
  v45 = v24 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 136));
  v24 = v44 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v45;
  v46 = *(unsigned __int16 *)(a1 + 192);
  v26 = v46 | (*(unsigned __int8 *)(a1 + 194) << 16);
  if ((v46 & 0x2000) == 0)
  {
LABEL_12:
    if ((v26 & 0x4000) == 0)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  v47 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "horzUncSemiMajAz", 4, 14);
  v48 = v24 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 144));
  v24 = v47 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v48;
  v49 = *(unsigned __int16 *)(a1 + 192);
  v26 = v49 | (*(unsigned __int8 *)(a1 + 194) << 16);
  if ((v49 & 0x4000) == 0)
  {
LABEL_13:
    if ((v26 & 0x8000) == 0)
      goto LABEL_14;
    goto LABEL_28;
  }
LABEL_27:
  v50 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "speedAccuracy", 4, 15);
  v51 = v24 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 152));
  v24 = v50 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v51;
  v52 = *(unsigned __int16 *)(a1 + 192);
  v26 = v52 | (*(unsigned __int8 *)(a1 + 194) << 16);
  if ((v52 & 0x8000) == 0)
  {
LABEL_14:
    if ((v26 & 0x10000) == 0)
      goto LABEL_15;
LABEL_29:
    v55 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "verticalAccuracy", 4, 17);
    v56 = v24 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 168));
    v24 = v55 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v56;
    if (((*(unsigned __int16 *)(a1 + 192) | (*(unsigned __int8 *)(a1 + 194) << 16)) & 0x20000) == 0)
      goto LABEL_17;
    goto LABEL_16;
  }
LABEL_28:
  v53 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "bearingAccuracy", 4, 16);
  v54 = v24 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 160));
  v24 = v53 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v54;
  v26 = *(unsigned __int16 *)(a1 + 192) | (*(unsigned __int8 *)(a1 + 194) << 16);
  if ((v26 & 0x10000) != 0)
    goto LABEL_29;
LABEL_15:
  if ((v26 & 0x20000) != 0)
  {
LABEL_16:
    v27 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "wifiZaxisData", 12, 18);
    v28 = v24 + sub_1001A2D28(a1 + 176, a2);
    v24 = v27 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v28;
  }
LABEL_17:
  v29 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v29 + v24 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001A3AB0(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  char v5;
  uint64_t v6;
  __int16 v7;

  *(_QWORD *)(a1 + 32) = off_1003F9A88;
  *(_QWORD *)a1 = off_1003F9B48;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) &= 0xFCu;
  *(_QWORD *)(a1 + 64) = 0;
  v4 = (std::string *)(a1 + 64);
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 176) = off_1003F9B28;
  *(_DWORD *)(a1 + 184) = 0;
  *(_BYTE *)(a1 + 188) &= ~1u;
  v5 = *(_BYTE *)(a1 + 194);
  *(_WORD *)(a1 + 192) = 0;
  v6 = a1 + 192;
  *(_BYTE *)(a1 + 194) = v5 & 0xFC;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_100077D9C(a1 + 32, a2 + 32);
  std::string::operator=(v4, (const std::string *)(a2 + 64));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 188) = *(_BYTE *)(a2 + 188);
  v7 = *(_WORD *)(a2 + 192);
  *(_BYTE *)(v6 + 2) = *(_BYTE *)(a2 + 194);
  *(_WORD *)v6 = v7;
  return a1;
}

void sub_1001A3BCC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;

  if (*(char *)(v1 + 87) < 0)
    operator delete(*v3);
  nullsub_22(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A3BF4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9B88;
  if (*(char *)(a1 + 159) < 0)
  {
    operator delete(*(void **)(a1 + 136));
    if ((*(char *)(a1 + 135) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 87) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 135) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 112));
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 63) & 0x80000000) == 0)
      goto LABEL_5;
LABEL_10:
    operator delete(*(void **)(a1 + 40));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return a1;
    goto LABEL_11;
  }
LABEL_9:
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 63) < 0)
    goto LABEL_10;
LABEL_5:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0)
    return a1;
LABEL_11:
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_1001A3CA0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9B88;
  if (*(char *)(a1 + 159) < 0)
  {
    operator delete(*(void **)(a1 + 136));
    if ((*(char *)(a1 + 135) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 87) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 135) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 112));
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 63) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(*(void **)(a1 + 64));
  if ((*(char *)(a1 + 63) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      goto LABEL_6;
LABEL_11:
    operator delete(*(void **)(a1 + 16));
LABEL_6:
    operator delete();
  }
LABEL_10:
  operator delete(*(void **)(a1 + 40));
  if ((*(char *)(a1 + 39) & 0x80000000) == 0)
    goto LABEL_6;
  goto LABEL_11;
}

std::string *sub_1001A3D50(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 16), a2);
}

std::string *sub_1001A3D58(uint64_t a1, const std::string *a2)
{
  std::string *result;

  result = std::string::operator=((std::string *)(a1 + 40), a2);
  *(_WORD *)(a1 + 160) |= 4u;
  return result;
}

std::string *sub_1001A3D88(uint64_t a1, const std::string *a2)
{
  std::string *result;

  result = std::string::operator=((std::string *)(a1 + 64), a2);
  *(_WORD *)(a1 + 160) |= 8u;
  return result;
}

uint64_t sub_1001A3DB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 88) = a2;
  return result;
}

uint64_t sub_1001A3DC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 92) = a2;
  return result;
}

uint64_t sub_1001A3DC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 96) = a2;
  return result;
}

uint64_t sub_1001A3DD0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 100) = a2;
  return result;
}

uint64_t sub_1001A3DD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 104) = a2;
  return result;
}

uint64_t sub_1001A3DE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 108) = a2;
  return result;
}

uint64_t sub_1001A3DE8(uint64_t a1, uint64_t *a2)
{
  int i;
  int v5;
  uint64_t v6;
  int v7;
  __int16 v8;
  int v9;
  __int16 v11;
  int v12;
  void *__p[2];
  uint64_t v14;

  __p[0] = 0;
  __p[1] = 0;
  v14 = 0;
  v12 = 0;
  v11 = 0;
  for (i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v12, &v11) + i;
    if (!v12)
      break;
    switch(v11)
    {
      case 1:
        v6 = *a2;
        if (v12 != 10)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 8);
        v8 = 1;
        goto LABEL_29;
      case 3:
        v6 = *a2;
        if (v12 != 11)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 136);
        v8 = 2048;
        goto LABEL_29;
      case 4:
        v6 = *a2;
        if (v12 != 11)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 16);
        v8 = 2;
        goto LABEL_29;
      case 5:
        v6 = *a2;
        if (v12 != 11)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 40);
        v8 = 4;
        goto LABEL_29;
      case 6:
        v6 = *a2;
        if (v12 != 11)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 64);
        v8 = 8;
        goto LABEL_29;
      case 7:
        v6 = *a2;
        if (v12 != 8)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 88);
        v8 = 16;
        goto LABEL_29;
      case 8:
        v6 = *a2;
        if (v12 != 8)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 92);
        v8 = 32;
        goto LABEL_29;
      case 9:
        v6 = *a2;
        if (v12 != 8)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 96);
        v8 = 64;
        goto LABEL_29;
      case 10:
        v6 = *a2;
        if (v12 != 3)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 296))(a2, a1 + 100);
        v8 = 128;
        goto LABEL_29;
      case 11:
        v6 = *a2;
        if (v12 != 8)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 104);
        v8 = 256;
        goto LABEL_29;
      case 12:
        v6 = *a2;
        if (v12 != 8)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 108);
        v8 = 512;
        goto LABEL_29;
      case 13:
        v6 = *a2;
        if (v12 != 11)
          goto LABEL_30;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 112);
        v8 = 1024;
LABEL_29:
        *(_WORD *)(a1 + 160) |= v8;
        break;
      default:
        v6 = *a2;
LABEL_30:
        v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v14) < 0)
    operator delete(__p[0]);
  return (v9 + v5);
}

void sub_1001A4130(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A4150(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  __int16 v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t result;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "BeaconMeasurement");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  if ((*(_WORD *)(a1 + 160) & 0x800) != 0)
  {
    v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "DEPRECATED_name", 11, 3);
    v11 = v10 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 136);
    v9 += v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  }
  v12 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "uuid", 11, 4);
  v13 = v9 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 16);
  v14 = v12 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v13;
  v15 = *(_WORD *)(a1 + 160);
  if ((v15 & 4) != 0)
  {
    v16 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "adData", 11, 5);
    v17 = v16 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 40);
    v14 += v17 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
    v15 = *(_WORD *)(a1 + 160);
  }
  if ((v15 & 8) != 0)
  {
    v18 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "mfrData", 11, 6);
    v19 = v14 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 64);
    v14 = v18 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v19;
  }
  v20 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "transmitPowerLevel", 8, 7);
  v21 = v14 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 88));
  v22 = v20 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v23 = v22
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "rssi", 8, 8);
  v24 = v23 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 92));
  v25 = v24 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v26 = v25
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "channel", 8, 9)+ v21;
  v27 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 96));
  v28 = v27 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v29 = v28
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "measuredPower", 3, 10);
  v30 = v29
      + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 128))(a2, *(char *)(a1 + 100));
  v31 = v30 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v32 = v31
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "minorID", 8, 11);
  v33 = v26
      + v32
      + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 104));
  v34 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v35 = v34
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "majorID", 8, 12);
  v36 = v35 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 108));
  v37 = v36 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v38 = v37
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "proximityUUID", 11, 13);
  v39 = v38 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 112);
  v40 = v39 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v41 = v33 + v40 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v41 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001A4608(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;

  *(_OWORD *)(a1 + 16) = 0u;
  v4 = (std::string *)(a1 + 40);
  *(_OWORD *)(a1 + 64) = 0u;
  v5 = (std::string *)(a1 + 64);
  *(_OWORD *)(a1 + 112) = 0u;
  v6 = (std::string *)(a1 + 112);
  v7 = (std::string *)(a1 + 136);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_WORD *)(a1 + 160) &= 0xF000u;
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = off_1003F9B88;
  *(_QWORD *)(a1 + 8) = v8;
  std::string::operator=((std::string *)(a1 + 16), (const std::string *)(a2 + 16));
  std::string::operator=(v4, (const std::string *)(a2 + 40));
  std::string::operator=(v5, (const std::string *)(a2 + 64));
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  std::string::operator=(v6, (const std::string *)(a2 + 112));
  std::string::operator=(v7, (const std::string *)(a2 + 136));
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  return a1;
}

void sub_1001A46F4(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;

  if (v1[159] < 0)
  {
    operator delete(*v6);
    if ((v1[135] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v1[87] & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v1[135] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v5);
  if ((v1[87] & 0x80000000) == 0)
  {
LABEL_4:
    if ((v1[63] & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(*v4);
  if ((v1[63] & 0x80000000) == 0)
  {
LABEL_5:
    if ((v1[39] & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(*v3);
  if ((v1[39] & 0x80000000) == 0)
LABEL_6:
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A477C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  std::string::operator=((std::string *)(a1 + 16), (const std::string *)(a2 + 16));
  std::string::operator=((std::string *)(a1 + 40), (const std::string *)(a2 + 40));
  std::string::operator=((std::string *)(a1 + 64), (const std::string *)(a2 + 64));
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(a2 + 112));
  std::string::operator=((std::string *)(a1 + 136), (const std::string *)(a2 + 136));
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  return a1;
}

void sub_1001A480C()
{
  operator delete();
}

uint64_t sub_1001A4820(uint64_t a1, uint64_t *a2)
{
  int i;
  int v5;
  uint64_t v6;
  int v7;
  char v8;
  int v9;
  __int16 v11;
  int v12;
  void *__p[2];
  uint64_t v14;

  __p[0] = 0;
  __p[1] = 0;
  v14 = 0;
  v12 = 0;
  v11 = 0;
  for (i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v12, &v11) + i;
    if (!v12)
      break;
    switch(v11)
    {
      case 1:
        v6 = *a2;
        if (v12 != 4)
          goto LABEL_18;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 8);
        v8 = 1;
        goto LABEL_17;
      case 2:
        v6 = *a2;
        if (v12 != 8)
          goto LABEL_18;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 16);
        v8 = 2;
        goto LABEL_17;
      case 3:
        v6 = *a2;
        if (v12 != 2)
          goto LABEL_18;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 280))(a2, a1 + 20);
        v8 = 4;
        goto LABEL_17;
      case 4:
        v6 = *a2;
        if (v12 != 10)
          goto LABEL_18;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 24);
        v8 = 8;
        goto LABEL_17;
      case 5:
        v6 = *a2;
        if (v12 != 2)
          goto LABEL_18;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 280))(a2, a1 + 32);
        v8 = 16;
        goto LABEL_17;
      case 6:
        v6 = *a2;
        if (v12 != 8)
          goto LABEL_18;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 36);
        v8 = 32;
LABEL_17:
        *(_BYTE *)(a1 + 40) |= v8;
        break;
      default:
        v6 = *a2;
LABEL_18:
        v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v14) < 0)
    operator delete(__p[0]);
  return (v9 + v5);
}

void sub_1001A4A54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A4A74(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_1003F9BD8;
  v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(_QWORD *)(a1 + 64) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  return a1;
}

void sub_1001A4AD0(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_1003F9BD8;
  v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(_QWORD *)(a1 + 64) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  operator delete();
}

std::string *sub_1001A4B2C(std::string *a1, const std::string *a2)
{
  std::string *result;

  result = std::string::operator=(a1 + 1, a2);
  a1[4].__r_.__value_.__s.__data_[8] |= 2u;
  return result;
}

uint64_t sub_1001A4B5C(uint64_t a1, uint64_t *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  int v21;
  _QWORD *exception;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  int v27;
  void *v28[2];
  uint64_t v29;

  v28[0] = 0;
  v28[1] = 0;
  v29 = 0;
  v27 = 0;
  v26 = 0;
  v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, v28);
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v24 = 0;
  while (1)
  {
    v9 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, v28, &v27, &v26) + v4;
    if (!v27)
      break;
    switch(v26)
    {
      case 1:
        v10 = *a2;
        if (v27 != 10)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 320))(a2, a1 + 8) + v9;
        v5 = 1;
        break;
      case 2:
        v10 = *a2;
        if (v27 != 8)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 312))(a2, a1 + 16) + v9;
        *(_BYTE *)(a1 + 104) |= 1u;
        break;
      case 3:
        v10 = *a2;
        if (v27 != 2)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 280))(a2, a1 + 20) + v9;
        v6 = 1;
        break;
      case 4:
        v10 = *a2;
        if (v27 != 2)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 280))(a2, a1 + 21) + v9;
        LODWORD(v24) = 1;
        break;
      case 5:
        v10 = *a2;
        if (v27 != 11)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 336))(a2, a1 + 24) + v9;
        *(_BYTE *)(a1 + 104) |= 2u;
        break;
      case 6:
        v10 = *a2;
        if (v27 != 6)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 304))(a2, a1 + 48) + v9;
        v7 = 1;
        break;
      case 7:
        if (v27 != 15)
          goto LABEL_24;
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a1 + 56);
        v25 = 0;
        v13 = (*(uint64_t (**)(uint64_t *, uint64_t *, char *))(*a2 + 248))(a2, &v25, (char *)&v25 + 4);
        v14 = HIDWORD(v25);
        v15 = *(_QWORD *)(a1 + 56);
        v16 = (*(_QWORD *)(a1 + 64) - v15) >> 2;
        if (HIDWORD(v25) <= v16)
        {
          if (HIDWORD(v25) < v16)
            *(_QWORD *)(a1 + 64) = v15 + 4 * HIDWORD(v25);
        }
        else
        {
          sub_1001A8018(a1 + 56, HIDWORD(v25) - v16);
          v14 = HIDWORD(v25);
        }
        v17 = v13 + v9;
        if (v14)
        {
          v18 = 0;
          v19 = 0;
          do
          {
            v17 += (*(uint64_t (**)(uint64_t *, uint64_t))(*a2 + 312))(a2, *(_QWORD *)(a1 + 56) + v18);
            ++v19;
            v18 += 4;
          }
          while (v19 < HIDWORD(v25));
        }
        v11 = (*(uint64_t (**)(uint64_t *))(*a2 + 256))(a2) + v17;
        v8 = 1;
        break;
      case 8:
        v10 = *a2;
        if (v27 != 2)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 280))(a2, a1 + 80) + v9;
        HIDWORD(v24) = 1;
        break;
      case 9:
        v10 = *a2;
        if (v27 != 4)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 328))(a2, a1 + 88) + v9;
        *(_BYTE *)(a1 + 104) |= 4u;
        break;
      case 10:
        v10 = *a2;
        if (v27 != 2)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 280))(a2, a1 + 96) + v9;
        *(_BYTE *)(a1 + 104) |= 8u;
        break;
      case 11:
        v10 = *a2;
        if (v27 != 2)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 280))(a2, a1 + 97) + v9;
        *(_BYTE *)(a1 + 104) |= 0x10u;
        break;
      case 12:
        v10 = *a2;
        if (v27 != 2)
          goto LABEL_42;
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 280))(a2, a1 + 98) + v9;
        *(_BYTE *)(a1 + 104) |= 0x20u;
        break;
      case 13:
        v10 = *a2;
        if (v27 != 8)
        {
LABEL_42:
          v12 = (*(uint64_t (**)(uint64_t *))(v10 + 352))(a2);
          goto LABEL_43;
        }
        v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 312))(a2, a1 + 100) + v9;
        *(_BYTE *)(a1 + 104) |= 0x40u;
        break;
      default:
LABEL_24:
        v12 = (*(uint64_t (**)(uint64_t *))(*a2 + 352))(a2);
LABEL_43:
        v11 = v12 + v9;
        break;
    }
    v4 = (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2) + v11;
  }
  v20 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if ((v5 & v6 & v24 & v7 & v8 & HIDWORD(v24) & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 1;
  }
  v21 = v20;
  if (SHIBYTE(v29) < 0)
    operator delete(v28[0]);
  return (v21 + v9);
}

void sub_1001A50DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 - 81) < 0)
    operator delete(*(void **)(v1 - 104));
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A510C(uint64_t a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  int *v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  int *v11;
  int *v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"[", 1);
  v6 = *(int **)a1;
  v11 = *(int **)(a1 + 8);
  v12 = v6;
  sub_1001A81B4(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"]", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_1001A52AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001A52C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_1001A52E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1001A52F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001A5308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1001A532C(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_1003F9BF8;
  *(_QWORD *)(a1 + 40) = off_1003F9BD8;
  v2 = *(void **)(a1 + 96);
  if (v2)
  {
    *(_QWORD *)(a1 + 104) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 87) < 0)
    operator delete(*(void **)(a1 + 64));
  sub_1000608EC(a1 + 16, *(char **)(a1 + 24));
  operator delete();
}

uint64_t sub_1001A53A0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  _QWORD **v11;
  uint64_t *v12;
  int v13;
  char **v14;
  char *v15;
  char **v16;
  void *v17;
  void **v18;
  _QWORD *v19;
  const void *v20;
  const void *v21;
  int v22;
  size_t v23;
  const void *v24;
  size_t v25;
  int v26;
  _BOOL4 v27;
  int v28;
  _BOOL4 v29;
  char *v30;
  _BYTE *v31;
  char v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  BOOL v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _BYTE *v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char **v56;
  int v57;
  void *__p[2];
  uint64_t v59;
  int v60;
  uint64_t v61;
  __int16 v62;
  int v63;
  void *v64[2];
  uint64_t v65;

  v2 = a2;
  v64[0] = 0;
  v64[1] = 0;
  v65 = 0;
  v63 = 0;
  v62 = 0;
  v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, v64);
  v5 = a1 + 16;
  v55 = a1;
  v56 = (char **)(a1 + 24);
  v53 = a1 + 8;
  v54 = a1 + 40;
  while (1)
  {
    v6 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*v2 + 216))(v2, v64, &v63, &v62) + v4;
    if (!v63)
      break;
    if (v62 == 3)
    {
      if (v63 == 12)
      {
        v8 = sub_1001A4B5C(v54, v2) + v6;
        *(_BYTE *)(a1 + 152) |= 4u;
        goto LABEL_80;
      }
      goto LABEL_78;
    }
    if (v62 != 2)
    {
      if (v62 == 1)
      {
        v7 = *v2;
        if (v63 == 10)
        {
          v8 = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 320))(v2, v53) + v6;
          *(_BYTE *)(a1 + 152) |= 1u;
          goto LABEL_80;
        }
        v50 = (*(uint64_t (**)(uint64_t *))(v7 + 352))(v2);
        goto LABEL_79;
      }
LABEL_78:
      v50 = (*(uint64_t (**)(uint64_t *))(*v2 + 352))(v2);
LABEL_79:
      v8 = v50 + v6;
      goto LABEL_80;
    }
    if (v63 != 13)
      goto LABEL_78;
    sub_1000608EC(v5, *(char **)(a1 + 24));
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = v56;
    v61 = 0;
    v60 = 0;
    v9 = (*(uint64_t (**)(uint64_t *, uint64_t *, int *, char *))(*v2 + 232))(v2, &v61, &v60, (char *)&v61 + 4)
       + v6;
    if (HIDWORD(v61))
    {
      v10 = 0;
      do
      {
        v57 = v9;
        v11 = (_QWORD **)v5;
        __p[0] = 0;
        __p[1] = 0;
        v59 = 0;
        v12 = v2;
        v13 = (*(uint64_t (**)(uint64_t *, void **))(*v2 + 336))(v2, __p);
        v14 = v56;
        v15 = *v56;
        v16 = v56;
        if (*v56)
        {
          if (v59 >= 0)
            v17 = (void *)HIBYTE(v59);
          else
            v17 = __p[1];
          if (v59 >= 0)
            v18 = __p;
          else
            v18 = (void **)__p[0];
          while (1)
          {
            while (1)
            {
              v14 = (char **)v15;
              v21 = (const void *)*((_QWORD *)v15 + 4);
              v19 = v15 + 32;
              v20 = v21;
              v22 = *((char *)v19 + 23);
              if (v22 >= 0)
                v23 = *((unsigned __int8 *)v19 + 23);
              else
                v23 = v19[1];
              if (v22 >= 0)
                v24 = v19;
              else
                v24 = v20;
              if (v23 >= (unint64_t)v17)
                v25 = (size_t)v17;
              else
                v25 = v23;
              v26 = memcmp(v18, v24, v25);
              v27 = (unint64_t)v17 < v23;
              if (v26)
                v27 = v26 < 0;
              if (!v27)
                break;
              v15 = *v14;
              v16 = v14;
              if (!*v14)
                goto LABEL_39;
            }
            v28 = memcmp(v24, v18, v25);
            v29 = v23 < (unint64_t)v17;
            if (v28)
              v29 = v28 < 0;
            if (!v29)
              break;
            v15 = v14[1];
            if (!v15)
            {
              v16 = v14 + 1;
              goto LABEL_39;
            }
          }
          v30 = (char *)v14;
          v5 = (uint64_t)v11;
          v2 = v12;
        }
        else
        {
LABEL_39:
          v30 = (char *)operator new(0x68uLL);
          v5 = (uint64_t)v11;
          v2 = v12;
          v31 = v30 + 32;
          if (SHIBYTE(v59) < 0)
          {
            sub_10006CED8(v31, __p[0], (unint64_t)__p[1]);
            v32 = v30[96] & 0xC0;
          }
          else
          {
            v32 = 0;
            *(_OWORD *)v31 = *(_OWORD *)__p;
            *((_QWORD *)v30 + 6) = v59;
          }
          *((_QWORD *)v30 + 7) = off_1003F9BB8;
          *((_QWORD *)v30 + 8) = 0;
          *((_DWORD *)v30 + 18) = 0;
          v30[76] = 0;
          *((_QWORD *)v30 + 10) = 0;
          v30[88] = 0;
          *((_DWORD *)v30 + 23) = 0;
          v30[96] = v32;
          *(_QWORD *)v30 = 0;
          *((_QWORD *)v30 + 1) = 0;
          *((_QWORD *)v30 + 2) = v14;
          *v16 = v30;
          v33 = v30;
          v34 = (_QWORD *)**v11;
          if (v34)
          {
            *v11 = v34;
            v33 = *v16;
          }
          v35 = *v56;
          v36 = v33 == *v56;
          v33[24] = v36;
          if (!v36)
          {
            do
            {
              v37 = *((_QWORD *)v33 + 2);
              if (*(_BYTE *)(v37 + 24))
                break;
              v38 = *(char **)(v37 + 16);
              v39 = *(_QWORD *)v38;
              if (*(_QWORD *)v38 == v37)
              {
                v42 = *((_QWORD *)v38 + 1);
                if (!v42 || (v43 = *(unsigned __int8 *)(v42 + 24), v40 = (_BYTE *)(v42 + 24), v43))
                {
                  if (*(char **)v37 == v33)
                  {
                    *(_BYTE *)(v37 + 24) = 1;
                    v38[24] = 0;
                    v46 = *(_QWORD *)(v37 + 8);
                    *(_QWORD *)v38 = v46;
                    if (v46)
                      goto LABEL_59;
                  }
                  else
                  {
                    v44 = *(uint64_t **)(v37 + 8);
                    v45 = *v44;
                    *(_QWORD *)(v37 + 8) = *v44;
                    if (v45)
                    {
                      *(_QWORD *)(v45 + 16) = v37;
                      v38 = *(char **)(v37 + 16);
                    }
                    v44[2] = (uint64_t)v38;
                    *(_QWORD *)(*(_QWORD *)(v37 + 16) + 8 * (**(_QWORD **)(v37 + 16) != v37)) = v44;
                    *v44 = v37;
                    *(_QWORD *)(v37 + 16) = v44;
                    v38 = (char *)v44[2];
                    v37 = *(_QWORD *)v38;
                    *((_BYTE *)v44 + 24) = 1;
                    v38[24] = 0;
                    v46 = *(_QWORD *)(v37 + 8);
                    *(_QWORD *)v38 = v46;
                    if (v46)
LABEL_59:
                      *(_QWORD *)(v46 + 16) = v38;
                  }
                  *(_QWORD *)(v37 + 16) = *((_QWORD *)v38 + 2);
                  *(_QWORD *)(*((_QWORD *)v38 + 2) + 8 * (**((_QWORD **)v38 + 2) != (_QWORD)v38)) = v37;
                  *(_QWORD *)(v37 + 8) = v38;
LABEL_66:
                  *((_QWORD *)v38 + 2) = v37;
                  break;
                }
              }
              else if (!v39 || (v41 = *(unsigned __int8 *)(v39 + 24), v40 = (_BYTE *)(v39 + 24), v41))
              {
                if (*(char **)v37 == v33)
                {
                  v49 = *((_QWORD *)v33 + 1);
                  *(_QWORD *)v37 = v49;
                  if (v49)
                  {
                    *(_QWORD *)(v49 + 16) = v37;
                    v38 = *(char **)(v37 + 16);
                  }
                  *((_QWORD *)v33 + 2) = v38;
                  *(_QWORD *)(*(_QWORD *)(v37 + 16) + 8 * (**(_QWORD **)(v37 + 16) != v37)) = v33;
                  *((_QWORD *)v33 + 1) = v37;
                  *(_QWORD *)(v37 + 16) = v33;
                  v38 = (char *)*((_QWORD *)v33 + 2);
                  v33[24] = 1;
                  v38[24] = 0;
                  v37 = *((_QWORD *)v38 + 1);
                  v47 = *(char **)v37;
                  *((_QWORD *)v38 + 1) = *(_QWORD *)v37;
                  if (v47)
LABEL_64:
                    *((_QWORD *)v47 + 2) = v38;
                }
                else
                {
                  *(_BYTE *)(v37 + 24) = 1;
                  v38[24] = 0;
                  v37 = *((_QWORD *)v38 + 1);
                  v47 = *(char **)v37;
                  *((_QWORD *)v38 + 1) = *(_QWORD *)v37;
                  if (v47)
                    goto LABEL_64;
                }
                *(_QWORD *)(v37 + 16) = *((_QWORD *)v38 + 2);
                *(_QWORD *)(*((_QWORD *)v38 + 2) + 8 * (**((_QWORD **)v38 + 2) != (_QWORD)v38)) = v37;
                *(_QWORD *)v37 = v38;
                goto LABEL_66;
              }
              *(_BYTE *)(v37 + 24) = 1;
              v33 = v38;
              v38[24] = v38 == v35;
              *v40 = 1;
            }
            while (v38 != v35);
          }
          ++*(_QWORD *)(v55 + 32);
        }
        v48 = sub_1001A4820((uint64_t)(v30 + 56), v2);
        if (SHIBYTE(v59) < 0)
          operator delete(__p[0]);
        v9 = v13 + v57 + v48;
        ++v10;
      }
      while (v10 < HIDWORD(v61));
    }
    v8 = (*(uint64_t (**)(uint64_t *))(*v2 + 240))(v2) + v9;
    a1 = v55;
    *(_BYTE *)(v55 + 152) |= 2u;
LABEL_80:
    v4 = (*(uint64_t (**)(uint64_t *))(*v2 + 224))(v2) + v8;
  }
  v51 = (*(uint64_t (**)(uint64_t *))(*v2 + 208))(v2);
  if (SHIBYTE(v65) < 0)
    operator delete(v64[0]);
  return (v51 + v6);
}

void sub_1001A5974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if ((a28 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A59E0(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = a1 + 24;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = off_1003F9BD8;
  *(_QWORD *)(a1 + 64) = 0;
  v4 = (std::string *)(a1 + 64);
  *(_QWORD *)(a1 + 96) = 0;
  v5 = (_QWORD *)(a1 + 96);
  *(_DWORD *)(a1 + 140) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 54) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_WORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 135) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 144) &= 0x80u;
  *(_BYTE *)(a1 + 152) &= 0xF8u;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = off_1003F9BF8;
  *(_QWORD *)(a1 + 8) = v6;
  if (a1 != a2)
    sub_1001A83E8((uint64_t **)(a1 + 16), *(_QWORD **)(a2 + 16), (_QWORD *)(a2 + 24));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  std::string::operator=(v4, (const std::string *)(a2 + 64));
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  if (a1 != a2)
    sub_1001A7ED4(v5, *(char **)(a2 + 96), *(char **)(a2 + 104), (uint64_t)(*(_QWORD *)(a2 + 104) - *(_QWORD *)(a2 + 96)) >> 2);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_WORD *)(a1 + 137) = *(_WORD *)(a2 + 137);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

void sub_1001A5B34(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  char **v3;

  sub_1001A4A74(v2);
  sub_1000608EC(v1, *v3);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A5B58(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (a1 != a2)
    sub_1001A83E8((uint64_t **)(a1 + 16), *(_QWORD **)(a2 + 16), (_QWORD *)(a2 + 24));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  std::string::operator=((std::string *)(a1 + 64), (const std::string *)(a2 + 64));
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  if (a1 != a2)
    sub_1001A7ED4((_QWORD *)(a1 + 96), *(char **)(a2 + 96), *(char **)(a2 + 104), (uint64_t)(*(_QWORD *)(a2 + 104) - *(_QWORD *)(a2 + 96)) >> 2);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_WORD *)(a1 + 137) = *(_WORD *)(a2 + 137);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t sub_1001A5C1C(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t result;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "CascadiaScanOptions");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "channelSpec", 8, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "triggerSpec", 8, 2);
  v11 = v10 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 12));
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "triggerPollingIntervalNanos", 10, 3);
  v14 = v13 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 16));
  v15 = v14 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v16 = v12
      + v15
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "triggerCounterMax", 8, 4);
  v17 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 24));
  v18 = v17 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v19 = v18
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "errorDelayNanos", 10, 5);
  LODWORD(a1) = v19 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 32));
  v20 = v16 + a1 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  LODWORD(a1) = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v20 + a1 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001A5E80(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  *(_QWORD *)result = off_1003F9C18;
  if (*(char *)(result + 47) < 0)
  {
    operator delete(*(void **)(result + 24));
    return v1;
  }
  return result;
}

void sub_1001A5ECC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9C18;
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  operator delete();
}

uint64_t sub_1001A5F18(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  char v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t result;
  _QWORD *exception;
  _QWORD *v34;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "CascadiaScanSettings");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "initiatedTimestampNanos", 10, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "delayNanos", 10, 2);
  v11 = v10 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 16));
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = *(_BYTE *)(a1 + 112);
  if ((v13 & 1) != 0)
  {
    v14 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "errorString", 11, 3);
    v15 = v14 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 24);
    v12 += v15 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
    v13 = *(_BYTE *)(a1 + 112);
  }
  if ((v13 & 2) != 0)
  {
    v16 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "errorDelayNanos", 10, 4);
    v17 = v12 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 48));
    v12 = v16 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v17;
  }
  v18 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "commandType", 8, 5);
  v19 = v12 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 56));
  v20 = v18 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v19;
  v21 = *(_BYTE *)(a1 + 112);
  if ((v21 & 4) != 0)
  {
    v22 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "rssiScanOptions", 12, 6);
    v23 = a2[7];
    v24 = a2[6] + 1;
    a2[6] = v24;
    if (v23 < v24)
    {
      v34 = __cxa_allocate_exception(0x28uLL);
      v34[2] = 0;
      v34[3] = 0;
      *v34 = off_1003F07E8;
      v34[1] = 0;
      *((_DWORD *)v34 + 8) = 6;
    }
    v25 = v22;
    v26 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "RssiScanOptions");
    v27 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
    v28 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
    --a2[6];
    v20 += v25 + v26 + v27 + v28 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
    v21 = *(_BYTE *)(a1 + 112);
  }
  if ((v21 & 8) != 0)
  {
    v29 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "cascadiaScanOptions", 12, 7);
    v30 = v20 + sub_1001A5C1C(a1 + 72, a2);
    v20 = v29 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v30;
  }
  v31 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v31 + v20 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001A62DC(uint64_t a1)
{
  char *v2;
  char *v4;
  void *v5;
  char *v6;

  *(_QWORD *)a1 = off_1003F9C38;
  if (*(char *)(a1 + 207) < 0)
  {
    operator delete(*(void **)(a1 + 184));
    v2 = *(char **)(a1 + 160);
    if (!v2)
    {
LABEL_3:
      if ((*(char *)(a1 + 159) & 0x80000000) == 0)
        goto LABEL_4;
LABEL_11:
      operator delete(*(void **)(a1 + 136));
      *(_QWORD *)(a1 + 16) = off_1003F9C18;
      if ((*(char *)(a1 + 63) & 0x80000000) == 0)
        return a1;
      goto LABEL_12;
    }
  }
  else
  {
    v2 = *(char **)(a1 + 160);
    if (!v2)
      goto LABEL_3;
  }
  v4 = *(char **)(a1 + 168);
  v5 = v2;
  if (v4 != v2)
  {
    do
    {
      v6 = v4 - 24;
      sub_1000733B4((uint64_t)(v4 - 24), *((_QWORD *)v4 - 2));
      v4 = v6;
    }
    while (v6 != v2);
    v5 = *(void **)(a1 + 160);
  }
  *(_QWORD *)(a1 + 168) = v2;
  operator delete(v5);
  if (*(char *)(a1 + 159) < 0)
    goto LABEL_11;
LABEL_4:
  *(_QWORD *)(a1 + 16) = off_1003F9C18;
  if ((*(char *)(a1 + 63) & 0x80000000) == 0)
    return a1;
LABEL_12:
  operator delete(*(void **)(a1 + 40));
  return a1;
}

void sub_1001A63C8(uint64_t a1)
{
  sub_1001A62DC(a1);
  operator delete();
}

uint64_t sub_1001A63EC(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  int v14;
  int v15;
  int v16;
  uint64_t result;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t i;
  int v23;
  _QWORD *v24;
  int v25;
  int v26;
  _QWORD *v27;
  _QWORD *v28;
  BOOL v29;
  int v30;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "CascadiaScanEvent");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, *(_QWORD *)(a1 + 8));
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "settings", 12, 2);
  v11 = v10 + sub_1001A5F18(a1 + 16, a2);
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = *(_BYTE *)(a1 + 208);
  if ((v13 & 1) == 0)
  {
    if ((*(_BYTE *)(a1 + 208) & 2) == 0)
      goto LABEL_4;
LABEL_8:
    v20 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "rssiDict", 15, 4);
    v21 = v20
        + v12
        + (*(uint64_t (**)(_DWORD *, uint64_t, _QWORD))(*(_QWORD *)a2 + 88))(a2, 13, -1431655765 * ((*(_QWORD *)(a1 + 168) - *(_QWORD *)(a1 + 160)) >> 3));
    for (i = *(_QWORD *)(a1 + 160); i != *(_QWORD *)(a1 + 168); i += 24)
    {
      v23 = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 72))(a2, 11, 11, *(unsigned int *)(i + 16))+ v21;
      v24 = *(_QWORD **)i;
      if (*(_QWORD *)i != i + 8)
      {
        do
        {
          v25 = (*(uint64_t (**)(_DWORD *, _QWORD *))(*(_QWORD *)a2 + 168))(a2, v24 + 4);
          v26 = (*(uint64_t (**)(_DWORD *, _QWORD *))(*(_QWORD *)a2 + 168))(a2, v24 + 7);
          v27 = (_QWORD *)v24[1];
          if (v27)
          {
            do
            {
              v28 = v27;
              v27 = (_QWORD *)*v27;
            }
            while (v27);
          }
          else
          {
            do
            {
              v28 = (_QWORD *)v24[2];
              v29 = *v28 == (_QWORD)v24;
              v24 = v28;
            }
            while (!v29);
          }
          v23 += v25 + v26;
          v24 = v28;
        }
        while (v28 != (_QWORD *)(i + 8));
      }
      v21 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 80))(a2) + v23;
    }
    v30 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 96))(a2);
    v12 = v30 + v21 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
    if ((*(_BYTE *)(a1 + 208) & 4) != 0)
      goto LABEL_5;
    goto LABEL_6;
  }
  v18 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "versionString", 11, 3);
  v19 = v18 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 136);
  v12 += v19 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = *(_BYTE *)(a1 + 208);
  if ((v13 & 2) != 0)
    goto LABEL_8;
LABEL_4:
  if ((v13 & 4) != 0)
  {
LABEL_5:
    v14 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "cascadiaData", 11, 5);
    v15 = v12 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 184);
    v12 = v14 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v15;
  }
LABEL_6:
  v16 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v16 + v12 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

void sub_1001A6784()
{
  operator delete();
}

__n128 sub_1001A6798(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a1 = off_1003F9C58;
  *(_BYTE *)(a1 + 24) &= 0xFCu;
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return result;
}

uint64_t sub_1001A67C4(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  *(_QWORD *)result = off_1003F9C78;
  if (*(char *)(result + 39) < 0)
  {
    operator delete(*(void **)(result + 16));
    return v1;
  }
  return result;
}

void sub_1001A6810(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9C78;
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  operator delete();
}

_QWORD *sub_1001A685C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  std::string __p;
  std::string v13;

  sub_1000F0508(a1, (uint64_t)"RadioAddress(", 13);
  v4 = sub_1000F0508(a1, (uint64_t)"addressType=", 12);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001A89C0((unsigned int *)(a2 + 8), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v13);
    v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"address=", 8);
  memset(&v13, 0, sizeof(v13));
  std::string::operator=(&v13, (const std::string *)(a2 + 16));
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &v13;
  else
    v9 = (std::string *)v13.__r_.__value_.__r.__words[0];
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(v13.__r_.__value_.__r.__words[2]);
  else
    v10 = v13.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A69C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001A6A18()
{
  operator delete();
}

_QWORD *sub_1001A6A2C(_QWORD *a1, uint64_t a2)
{
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v6;
  std::string *v7;
  std::string::size_type v8;
  _QWORD *v9;
  std::string *v10;
  std::string::size_type v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  std::string __p;
  std::string v17;

  sub_1000F0508(a1, (uint64_t)"CoarseApParams(", 15);
  sub_1000F0508(a1, (uint64_t)"weakWeight=", 11);
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 8), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v17);
      v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v6 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v6, (uint64_t)"strongWeight=", 13);
  if ((*(_BYTE *)(a2 + 32) & 2) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10016EED0((double *)(a2 + 16), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v17);
      v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v7 = &__p;
    else
      v7 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v8 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v7, v8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v9 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v9, (uint64_t)"rssiThreshold=", 14);
  if ((*(_BYTE *)(a2 + 32) & 4) != 0)
  {
    sub_100171748((int *)(a2 + 24), &v17);
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v10 = &v17;
    else
      v10 = (std::string *)v17.__r_.__value_.__r.__words[0];
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v11 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
    else
      v11 = v17.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v10, v11);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v17.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v12 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v12, (uint64_t)"rssiSmoothingRange=", 19);
  if ((*(_BYTE *)(a2 + 32) & 8) != 0)
  {
    sub_100171748((int *)(a2 + 28), &v17);
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v13 = &v17;
    else
      v13 = (std::string *)v17.__r_.__value_.__r.__words[0];
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v14 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
    else
      v14 = v17.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v13, v14);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v17.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A6D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001A6D60(_QWORD *a1)
{
  sub_1000768A4(a1);
  operator delete();
}

_QWORD *sub_1001A6D84(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  void *p_p;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  std::string *v12;
  std::string::size_type size;
  _QWORD *v14;
  _QWORD *v15;
  std::string *v16;
  std::string::size_type v17;
  _WORD *v18;
  _QWORD *v19;
  std::string *v20;
  std::string::size_type v21;
  _QWORD *v22;
  _QWORD *v23;
  std::string *v24;
  std::string::size_type v25;
  _QWORD *v26;
  std::string *v27;
  std::string::size_type v28;
  _QWORD *v29;
  std::string *v30;
  std::string::size_type v31;
  _QWORD *v32;
  std::string *v33;
  std::string::size_type v34;
  _QWORD *v35;
  std::string *v36;
  std::string::size_type v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  std::string *v42;
  std::string::size_type v43;
  _QWORD *v44;
  std::string *v45;
  std::string::size_type v46;
  _QWORD *v47;
  std::string *v48;
  std::string::size_type v49;
  _QWORD *v50;
  std::string *v51;
  std::string::size_type v52;
  _QWORD *v53;
  void *v54;
  uint64_t v55;
  _QWORD *v56;
  void *v57;
  uint64_t v58;
  std::string v60;
  void *__p;
  _UNKNOWN **v62;
  _UNKNOWN **v63;

  sub_1000F0508(a1, (uint64_t)"JointRssiMap(", 13);
  v4 = sub_1000F0508(a1, (uint64_t)"radioAddresses=", 15);
  sub_1001A7A94((uint64_t *)(a2 + 8));
  if (SHIBYTE(v63) >= 0)
    p_p = &__p;
  else
    p_p = __p;
  if (SHIBYTE(v63) >= 0)
    v6 = HIBYTE(v63);
  else
    v6 = (uint64_t)v62;
  sub_1000F0508(v4, (uint64_t)p_p, v6);
  if (SHIBYTE(v63) < 0)
    operator delete(__p);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v7, (uint64_t)"coarseApParams=", 15);
  if ((*(_WORD *)(a2 + 496) & 2) != 0)
  {
    sub_1001A7CB4((uint64_t *)(a2 + 32));
    if (SHIBYTE(v63) >= 0)
      v8 = &__p;
    else
      v8 = __p;
    if (SHIBYTE(v63) >= 0)
      v9 = HIBYTE(v63);
    else
      v9 = (uint64_t)v62;
    sub_1000F0508(a1, (uint64_t)v8, v9);
    if (SHIBYTE(v63) < 0)
      operator delete(__p);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v10 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v11 = sub_1000F0508(v10, (uint64_t)"antennaMin=", 11);
  memset(&v60, 0, sizeof(v60));
  if ((sub_10016EED0((double *)(a2 + 56), &v60) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p = &off_1003EFFF0;
    sub_1000F9804((uint64_t)&__p);
  }
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v12 = &v60;
  else
    v12 = (std::string *)v60.__r_.__value_.__r.__words[0];
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v60.__r_.__value_.__r.__words[2]);
  else
    size = v60.__r_.__value_.__l.__size_;
  sub_1000F0508(v11, (uint64_t)v12, size);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v60.__r_.__value_.__l.__data_);
  v14 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v15 = sub_1000F0508(v14, (uint64_t)"globalDbm=", 10);
  memset(&v60, 0, sizeof(v60));
  if ((sub_1001A9FA8(a2 + 64, &v60) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p = &off_1003EFFF0;
    sub_1000F9804((uint64_t)&__p);
  }
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v16 = &v60;
  else
    v16 = (std::string *)v60.__r_.__value_.__r.__words[0];
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
  else
    v17 = v60.__r_.__value_.__l.__size_;
  sub_1000F0508(v15, (uint64_t)v16, v17);
  v18 = (_WORD *)(a2 + 496);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v60.__r_.__value_.__l.__data_);
  v19 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v19, (uint64_t)"mapCellLookupMode=", 18);
  if ((*v18 & 0x10) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001AA260((unsigned int *)(a2 + 128), &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      __p = &off_1003EFFF0;
      sub_1000F9804((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v20 = &v60;
    else
      v20 = (std::string *)v60.__r_.__value_.__r.__words[0];
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v21 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    else
      v21 = v60.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v20, v21);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v22 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v23 = sub_1000F0508(v22, (uint64_t)"coordinateFrame=", 16);
  memset(&v60, 0, sizeof(v60));
  if ((sub_1001A8F24(a2 + 136, &v60) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p = &off_1003EFFF0;
    sub_1000F9804((uint64_t)&__p);
  }
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v24 = &v60;
  else
    v24 = (std::string *)v60.__r_.__value_.__r.__words[0];
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v25 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
  else
    v25 = v60.__r_.__value_.__l.__size_;
  sub_1000F0508(v23, (uint64_t)v24, v25);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v60.__r_.__value_.__l.__data_);
  v26 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v26, (uint64_t)"wifi2GpsFusionAccuracyThreshold=", 32);
  if ((*v18 & 0x40) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_10016EED0((double *)(a2 + 232), &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      __p = &off_1003EFFF0;
      sub_1000F9804((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v27 = &v60;
    else
      v27 = (std::string *)v60.__r_.__value_.__r.__words[0];
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v28 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    else
      v28 = v60.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v27, v28);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v29 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v29, (uint64_t)"wifi2GpsInjectionParticleFraction=", 34);
  if ((*v18 & 0x80) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_10016EED0((double *)(a2 + 240), &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      __p = &off_1003EFFF0;
      sub_1000F9804((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v30 = &v60;
    else
      v30 = (std::string *)v60.__r_.__value_.__r.__words[0];
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v31 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    else
      v31 = v60.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v30, v31);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v32 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v32, (uint64_t)"gpsAccuracyTransform=", 21);
  if ((*v18 & 0x100) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001AA518(a2 + 248, &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      __p = &off_1003EFFF0;
      sub_1000F9804((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v33 = &v60;
    else
      v33 = (std::string *)v60.__r_.__value_.__r.__words[0];
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v34 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    else
      v34 = v60.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v33, v34);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v35 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v35, (uint64_t)"gpsAzimuthTransform=", 20);
  if ((*v18 & 0x200) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001AA518(a2 + 296, &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      __p = &off_1003EFFF0;
      sub_1000F9804((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v36 = &v60;
    else
      v36 = (std::string *)v60.__r_.__value_.__r.__words[0];
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v37 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    else
      v37 = v60.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v36, v37);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v38 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v38, (uint64_t)"DEPRECATED_macAddresses=", 24);
  if ((*v18 & 0x400) != 0)
  {
    sub_100172DF8(a2 + 344);
    if (SHIBYTE(v63) >= 0)
      v39 = &__p;
    else
      v39 = __p;
    if (SHIBYTE(v63) >= 0)
      v40 = HIBYTE(v63);
    else
      v40 = (uint64_t)v62;
    sub_1000F0508(a1, (uint64_t)v39, v40);
    if (SHIBYTE(v63) < 0)
      operator delete(__p);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v41 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v41, (uint64_t)"DEPRECATED_globalVariance=", 26);
  if ((*v18 & 0x800) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_10016EED0((double *)(a2 + 368), &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      __p = &off_1003EFFF0;
      sub_1000F9804((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v42 = &v60;
    else
      v42 = (std::string *)v60.__r_.__value_.__r.__words[0];
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v43 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    else
      v43 = v60.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v42, v43);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v44 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v44, (uint64_t)"DEPRECATED_globalMean=", 22);
  if ((*v18 & 0x1000) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_10016EED0((double *)(a2 + 376), &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      __p = &off_1003EFFF0;
      sub_1000F9804((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v45 = &v60;
    else
      v45 = (std::string *)v60.__r_.__value_.__r.__words[0];
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v46 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    else
      v46 = v60.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v45, v46);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v47 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v47, (uint64_t)"DEPRECATED_bottomLeft=", 22);
  if ((*v18 & 0x2000) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_10019EAB4(a2 + 384, &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      __p = &off_1003EFFF0;
      sub_1000F9804((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v48 = &v60;
    else
      v48 = (std::string *)v60.__r_.__value_.__r.__words[0];
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v49 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    else
      v49 = v60.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v48, v49);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v50 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v50, (uint64_t)"DEPRECATED_topRight=", 20);
  if ((*v18 & 0x4000) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_10019EAB4(a2 + 416, &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      __p = &off_1003EFFF0;
      sub_1000F9804((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v51 = &v60;
    else
      v51 = (std::string *)v60.__r_.__value_.__r.__words[0];
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v52 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    else
      v52 = v60.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v51, v52);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v53 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v53, (uint64_t)"DEPRECATED_normalizedMutualInformation=", 39);
  if ((*v18 & 0x8000) != 0)
  {
    sub_1001970B8(a2 + 448);
    if (SHIBYTE(v63) >= 0)
      v54 = &__p;
    else
      v54 = __p;
    if (SHIBYTE(v63) >= 0)
      v55 = HIBYTE(v63);
    else
      v55 = (uint64_t)v62;
    sub_1000F0508(a1, (uint64_t)v54, v55);
    if (SHIBYTE(v63) < 0)
      operator delete(__p);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v56 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v56, (uint64_t)"DEPRECATED_overlappingCellCount=", 32);
  if ((((unsigned __int16)*v18 | (*(unsigned __int8 *)(a2 + 498) << 16)) & 0x10000) != 0)
  {
    sub_1001A510C(a2 + 472);
    if (SHIBYTE(v63) >= 0)
      v57 = &__p;
    else
      v57 = __p;
    if (SHIBYTE(v63) >= 0)
      v58 = HIBYTE(v63);
    else
      v58 = (uint64_t)v62;
    sub_1000F0508(a1, (uint64_t)v57, v58);
    if (SHIBYTE(v63) < 0)
      operator delete(__p);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A79BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A7A94(uint64_t *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"[", 1);
  v6 = *a1;
  v11 = a1[1];
  v12 = v6;
  sub_1001A97FC(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"]", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_1001A7C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001A7C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_1001A7C68(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1001A7C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001A7C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A7CB4(uint64_t *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  void *__p[2];
  unsigned __int8 v14;
  void (__cdecl **v15)(std::ostringstream *__hidden);
  _QWORD v16[8];
  void *v17[2];
  __int128 v18;
  int v19;
  void (__cdecl **v20)(std::ostringstream *__hidden);

  v15 = v2;
  *(_QWORD *)((char *)&v16[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v16[-1] + (_QWORD)*(v15 - 3));
  std::ios_base::init(v4, v16);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v16);
  *(_OWORD *)v17 = 0u;
  v18 = 0u;
  v19 = 16;
  v5 = sub_1000F0508(&v15, (uint64_t)"[", 1);
  v6 = *a1;
  v11 = a1[1];
  v12 = v6;
  sub_1001A9A7C(&v12, &v11);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_1000F0508(v5, (uint64_t)v7, v8);
  sub_1000F0508(v9, (uint64_t)"]", 1);
  if ((char)v14 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(v16);
  if (SBYTE7(v18) < 0)
    operator delete(v17[0]);
  std::streambuf::~streambuf(v16);
  return std::ios::~ios(&v20);
}

void sub_1001A7E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001A7E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  std::ostream::~ostream(va, v7 + 8);
  std::ios::~ios(v6);
  _Unwind_Resume(a1);
}

void sub_1001A7E88(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1001A7E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001A7EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a17);
  _Unwind_Resume(a1);
}

_QWORD *sub_1001A7ED4(_QWORD *result, char *__src, char *a3, size_t __sz)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  size_t v14;
  void **v15;
  _BYTE *v16;
  unint64_t v17;
  char *v18;
  void *v19;

  v6 = __src;
  v7 = result;
  v8 = result[2];
  v9 = (char *)*result;
  if (__sz > (v8 - *result) >> 2)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (__sz >> 62)
      goto LABEL_22;
    v10 = v8 >> 1;
    if (v8 >> 1 <= __sz)
      v10 = __sz;
    v11 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL;
    v12 = 0x3FFFFFFFFFFFFFFFLL;
    if (!v11)
      v12 = v10;
    if (v12 >> 62)
LABEL_22:
      sub_1000D02C0();
    v13 = 4 * v12;
    result = operator new(4 * v12);
    v9 = (char *)result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + v13;
    v14 = a3 - v6;
    if (v14)
      result = memcpy(result, v6, v14);
    v15 = (void **)(v7 + 1);
    goto LABEL_21;
  }
  v15 = (void **)(result + 1);
  v16 = (_BYTE *)result[1];
  v17 = (v16 - v9) >> 2;
  if (v17 >= __sz)
  {
    v14 = a3 - __src;
    if (a3 == __src)
      goto LABEL_21;
    v19 = (void *)*result;
LABEL_20:
    result = memmove(v19, __src, v14);
    goto LABEL_21;
  }
  v18 = &__src[4 * v17];
  if (v16 != v9)
  {
    result = memmove((void *)*result, __src, v16 - v9);
    v9 = (char *)*v15;
  }
  v14 = a3 - v18;
  if (v14)
  {
    v19 = v9;
    __src = v18;
    goto LABEL_20;
  }
LABEL_21:
  *v15 = &v9[v14];
  return result;
}

void sub_1001A8018(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  size_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  int v25;

  v5 = *(char **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = v5;
  if (a2 <= (v4 - (uint64_t)v5) >> 2)
  {
    if (a2)
    {
      bzero(v5, 4 * a2);
      v6 = &v5[4 * a2];
    }
    *(_QWORD *)(a1 + 8) = v6;
  }
  else
  {
    v7 = *(char **)a1;
    v8 = (uint64_t)&v5[-*(_QWORD *)a1];
    v9 = v8 >> 2;
    v10 = (v8 >> 2) + a2;
    if (v10 >> 62)
      sub_1000D02C0();
    v11 = v4 - (_QWORD)v7;
    if (v11 >> 1 > v10)
      v10 = v11 >> 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL)
      v12 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      if (v12 >> 62)
        sub_1000CDEB8();
      v13 = operator new(4 * v12);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[4 * v9];
    v15 = 4 * a2;
    v16 = &v13[4 * v12];
    bzero(v14, v15);
    v17 = &v14[v15];
    if (v5 != v7)
    {
      v18 = v5 - v7 - 4;
      if (v18 < 0x2C)
        goto LABEL_29;
      if ((unint64_t)(v5 - v13 - v8) < 0x20)
        goto LABEL_29;
      v19 = (v18 >> 2) + 1;
      v20 = 4 * (v19 & 0x7FFFFFFFFFFFFFF8);
      v6 = &v5[-v20];
      v14 -= v20;
      v21 = &v13[4 * v9 - 16];
      v22 = v5 - 16;
      v23 = v19 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v24 = *(_OWORD *)v22;
        *(v21 - 1) = *((_OWORD *)v22 - 1);
        *v21 = v24;
        v21 -= 2;
        v22 -= 32;
        v23 -= 8;
      }
      while (v23);
      if (v19 != (v19 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_29:
        do
        {
          v25 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v14 - 1) = v25;
          v14 -= 4;
        }
        while (v6 != v7);
      }
    }
    *(_QWORD *)a1 = v14;
    *(_QWORD *)(a1 + 8) = v17;
    *(_QWORD *)(a1 + 16) = v16;
    if (v7)
      operator delete(v7);
  }
}

uint64_t sub_1001A81B4(int **a1, int **a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  int *i;
  std::string *p_p;
  std::string::size_type size;
  std::string __p;
  void (__cdecl **v12)(std::ostringstream *__hidden);
  _QWORD v13[8];
  void *v14[2];
  __int128 v15;
  int v16;
  void (__cdecl **v17)(std::ostringstream *__hidden);

  v12 = v4;
  *(_QWORD *)((char *)&v13[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v13[-1] + (_QWORD)*(v12 - 3));
  std::ios_base::init(v6, v13);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v13);
  *(_OWORD *)v14 = 0u;
  v15 = 0u;
  v16 = 16;
  for (i = *a1; i != *a2; ++i)
  {
    if (i != *a1)
      sub_1000F0508(&v12, (uint64_t)", ", 2);
    sub_100171748(i, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(&v12, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str(v13);
  if (SBYTE7(v15) < 0)
    operator delete(v14[0]);
  std::streambuf::~streambuf(v13);
  return std::ios::~ios(&v17);
}

void sub_1001A8374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_1000F0484((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_1001A83E8(uint64_t **a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t **v15;
  uint64_t **v16;
  int v17;
  size_t v18;
  const void *v19;
  _QWORD *v20;
  const void *v21;
  const void *v22;
  int v23;
  size_t v24;
  const void *v25;
  size_t v26;
  int v27;
  _BOOL4 v28;
  uint64_t *v29;
  char *v30;
  _QWORD *v31;
  BOOL v32;
  char *v33;
  uint64_t **v34;
  char *v35;
  char *i;
  _QWORD *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;

  v4 = a2;
  v5 = a1;
  if (a1[2])
  {
    v6 = *a1;
    v8 = a1 + 1;
    v7 = a1[1];
    *a1 = (uint64_t *)(a1 + 1);
    v7[2] = 0;
    a1[1] = 0;
    a1[2] = 0;
    if (v6[1])
      v9 = (uint64_t *)v6[1];
    else
      v9 = v6;
    v40 = (uint64_t)a1;
    v42 = (char *)v9;
    if (!v9)
    {
      v35 = 0;
      goto LABEL_65;
    }
    v10 = (char *)v9[2];
    if (v10)
    {
      v11 = *(char **)v10;
      if (*(uint64_t **)v10 == v9)
      {
        *(_QWORD *)v10 = 0;
        while (1)
        {
          v39 = (char *)*((_QWORD *)v10 + 1);
          if (!v39)
            break;
          do
          {
            v10 = v39;
            v39 = *(char **)v39;
          }
          while (v39);
        }
      }
      else
      {
        for (*((_QWORD *)v10 + 1) = 0; v11; v11 = (char *)*((_QWORD *)v10 + 1))
        {
          do
          {
            v10 = v11;
            v11 = *(char **)v11;
          }
          while (v11);
        }
      }
    }
    v41 = v10;
    if (a2 == a3)
    {
      v34 = a1;
      sub_1000608EC((uint64_t)a1, (char *)v9);
      if (!v10)
        goto LABEL_66;
      goto LABEL_62;
    }
    v12 = a2;
    while (1)
    {
      std::string::operator=((std::string *)(v9 + 4), (const std::string *)(v12 + 4));
      v9[8] = v12[8];
      *((_DWORD *)v9 + 18) = *((_DWORD *)v12 + 18);
      *((_BYTE *)v9 + 76) = *((_BYTE *)v12 + 76);
      v9[10] = v12[10];
      *((_BYTE *)v9 + 88) = *((_BYTE *)v12 + 88);
      *((_DWORD *)v9 + 23) = *((_DWORD *)v12 + 23);
      *((_BYTE *)v9 + 96) = *((_BYTE *)v12 + 96);
      v13 = (uint64_t *)v42;
      v14 = *v8;
      v15 = v5 + 1;
      v16 = v5 + 1;
      if (!*v8)
        break;
      v17 = v42[55];
      if (v17 >= 0)
        v18 = v42[55];
      else
        v18 = *((_QWORD *)v42 + 5);
      if (v17 >= 0)
        v19 = v42 + 32;
      else
        v19 = (const void *)*((_QWORD *)v42 + 4);
      do
      {
        while (1)
        {
          v15 = (uint64_t **)v14;
          v22 = (const void *)v14[4];
          v20 = v14 + 4;
          v21 = v22;
          v23 = *((char *)v20 + 23);
          if (v23 >= 0)
            v24 = *((unsigned __int8 *)v20 + 23);
          else
            v24 = v20[1];
          if (v23 >= 0)
            v25 = v20;
          else
            v25 = v21;
          if (v24 >= v18)
            v26 = v18;
          else
            v26 = v24;
          v27 = memcmp(v19, v25, v26);
          v28 = v18 < v24;
          if (v27)
            v28 = v27 < 0;
          if (!v28)
            break;
          v14 = *v15;
          v16 = v15;
          if (!*v15)
            goto LABEL_34;
        }
        v14 = v15[1];
      }
      while (v14);
      v16 = v15 + 1;
      *(_QWORD *)v42 = 0;
      *((_QWORD *)v42 + 1) = 0;
      *((_QWORD *)v42 + 2) = v15;
      v15[1] = (uint64_t *)v42;
      v29 = (uint64_t *)**v5;
      if (v29)
        goto LABEL_35;
LABEL_36:
      sub_1000E05F4(v5[1], v13);
      v5[2] = (uint64_t *)((char *)v5[2] + 1);
      v9 = (uint64_t *)v41;
      v42 = v41;
      if (v41)
      {
        v10 = (char *)*((_QWORD *)v41 + 2);
        if (v10)
        {
          v30 = *(char **)v10;
          if (*(char **)v10 == v41)
          {
            *(_QWORD *)v10 = 0;
            while (1)
            {
              v33 = (char *)*((_QWORD *)v10 + 1);
              if (!v33)
                break;
              do
              {
                v10 = v33;
                v33 = *(char **)v33;
              }
              while (v33);
            }
          }
          else
          {
            for (*((_QWORD *)v10 + 1) = 0; v30; v30 = (char *)*((_QWORD *)v10 + 1))
            {
              do
              {
                v10 = v30;
                v30 = *(char **)v30;
              }
              while (v30);
            }
          }
        }
        v41 = v10;
        v31 = (_QWORD *)v12[1];
        if (v31)
        {
          do
          {
LABEL_45:
            v4 = v31;
            v31 = (_QWORD *)*v31;
          }
          while (v31);
          goto LABEL_49;
        }
      }
      else
      {
        v10 = 0;
        v31 = (_QWORD *)v12[1];
        if (v31)
          goto LABEL_45;
      }
      do
      {
        v4 = (_QWORD *)v12[2];
        v32 = *v4 == (_QWORD)v12;
        v12 = v4;
      }
      while (!v32);
LABEL_49:
      if (v9)
      {
        v12 = v4;
        if (v4 != a3)
          continue;
      }
      v34 = (uint64_t **)v40;
      sub_1000608EC(v40, (char *)v9);
      if (!v10)
        goto LABEL_66;
LABEL_62:
      for (i = (char *)*((_QWORD *)v10 + 2); i; i = (char *)*((_QWORD *)i + 2))
        v10 = i;
      a1 = v34;
      v35 = v10;
LABEL_65:
      sub_1000608EC((uint64_t)a1, v35);
      goto LABEL_66;
    }
LABEL_34:
    *(_QWORD *)v42 = 0;
    *((_QWORD *)v42 + 1) = 0;
    *((_QWORD *)v42 + 2) = v15;
    *v16 = (uint64_t *)v42;
    v29 = (uint64_t *)**v5;
    if (!v29)
      goto LABEL_36;
LABEL_35:
    *v5 = v29;
    v13 = *v16;
    goto LABEL_36;
  }
LABEL_66:
  if (v4 != a3)
  {
    do
    {
      sub_1001A87BC(v5, (uint64_t)(v4 + 4));
      v37 = (_QWORD *)v4[1];
      if (v37)
      {
        do
        {
          v38 = v37;
          v37 = (_QWORD *)*v37;
        }
        while (v37);
      }
      else
      {
        do
        {
          v38 = (_QWORD *)v4[2];
          v32 = *v38 == (_QWORD)v4;
          v4 = v38;
        }
        while (!v32);
      }
      v4 = v38;
    }
    while (v38 != a3);
  }
}

void sub_1001A8754(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1001A8768((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A8768(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1000608EC(*(_QWORD *)a1, *(char **)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = *(_QWORD *)(v3 + 16);
      }
      while (v3);
      *(_QWORD *)(a1 + 8) = v2;
    }
    sub_1000608EC(*(_QWORD *)a1, (char *)v2);
  }
  return a1;
}

char *sub_1001A87BC(uint64_t **a1, uint64_t a2)
{
  char **v4;
  char *v5;
  char *v6;
  _OWORD *v7;
  char **v8;
  char *v9;
  int v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  int v15;
  unint64_t v16;
  _QWORD *v17;
  size_t v18;
  int v19;
  _BOOL4 v20;
  uint64_t *v21;
  char *v23;

  v4 = (char **)(a1 + 1);
  v5 = (char *)operator new(0x68uLL);
  v6 = v5;
  v23 = v5;
  v7 = v5 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_10006CED8(v5 + 32, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *v7 = *(_OWORD *)a2;
    *((_QWORD *)v5 + 6) = *(_QWORD *)(a2 + 16);
  }
  *((_QWORD *)v6 + 7) = off_1003F9BB8;
  *((_QWORD *)v6 + 8) = *(_QWORD *)(a2 + 32);
  *((_DWORD *)v6 + 18) = *(_DWORD *)(a2 + 40);
  v6[76] = *(_BYTE *)(a2 + 44);
  *((_QWORD *)v6 + 10) = *(_QWORD *)(a2 + 48);
  v6[88] = *(_BYTE *)(a2 + 56);
  *((_DWORD *)v6 + 23) = *(_DWORD *)(a2 + 60);
  v6[96] = *(_BYTE *)(a2 + 64);
  v8 = v4;
  v9 = *v4;
  if (!*v4)
  {
LABEL_25:
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 0;
    *((_QWORD *)v6 + 2) = v4;
    *v8 = v6;
    v21 = (uint64_t *)**a1;
    if (!v21)
      goto LABEL_27;
LABEL_26:
    *a1 = v21;
    v6 = *v8;
    goto LABEL_27;
  }
  v10 = v6[55];
  if (v10 >= 0)
    v11 = v6[55];
  else
    v11 = *((_QWORD *)v6 + 5);
  if (v10 < 0)
    v7 = (_OWORD *)*((_QWORD *)v6 + 4);
  do
  {
    while (1)
    {
      v4 = (char **)v9;
      v14 = (_QWORD *)*((_QWORD *)v9 + 4);
      v12 = v9 + 32;
      v13 = v14;
      v15 = *((char *)v12 + 23);
      v16 = v15 >= 0 ? *((unsigned __int8 *)v12 + 23) : v12[1];
      v17 = v15 >= 0 ? v12 : v13;
      v18 = v16 >= v11 ? v11 : v16;
      v19 = memcmp(v7, v17, v18);
      v20 = v11 < v16;
      if (v19)
        v20 = v19 < 0;
      if (!v20)
        break;
      v9 = *v4;
      v8 = v4;
      if (!*v4)
        goto LABEL_25;
    }
    v9 = v4[1];
  }
  while (v9);
  v8 = v4 + 1;
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = v4;
  v4[1] = v6;
  v21 = (uint64_t *)**a1;
  if (v21)
    goto LABEL_26;
LABEL_27:
  sub_1000E05F4(a1[1], (uint64_t *)v6);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v23;
}

void sub_1001A8960(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1001A8974((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1001A8974(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16) && *(char *)(v2 + 55) < 0)
      operator delete(*(void **)(v2 + 32));
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_1001A89C0(unsigned int *a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = (_QWORD *)std::ostream::operator<<(&v32, *a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1001A8C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001A8C60(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_1001A8C78(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_1001A685C(&v32, a1);
  v5 = (char *)&v32 + (_QWORD)*(v32 - 3);
  v6 = *((_DWORD *)v5 + 8);
  v7 = *((_QWORD *)v5 + 5);
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1001A8ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001A8F0C(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_1001A8F24(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001A29C8(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1001A9190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001A91C4(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

void **sub_1001A91DC(void **result, uint64_t a2, const std::string *a3, unint64_t a4)
{
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  char *v12;
  char *v13;
  void (**v14)(char *);
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void **v22;
  char *v23;
  const std::string *v24;
  std::string *v25;
  uint64_t v26;
  const std::string *v27;
  char *v28;
  unint64_t v29;
  char *v30;
  std::string *v31;
  const std::string *v32;
  const std::string *v33;
  char *v34;
  char *v35;
  uint64_t (**v36)(char *);

  v7 = result;
  v8 = (uint64_t)result[2];
  v9 = (char *)*result;
  if (0xCCCCCCCCCCCCCCCDLL * ((v8 - (uint64_t)*result) >> 3) >= a4)
  {
    v23 = (char *)result[1];
    if (0xCCCCCCCCCCCCCCCDLL * ((v23 - v9) >> 3) >= a4)
    {
      if ((const std::string *)a2 != a3)
      {
        v31 = (std::string *)(v9 + 16);
        v32 = (const std::string *)(a2 + 16);
        do
        {
          LODWORD(v31[-1].__r_.__value_.__r.__words[2]) = v32[-1].__r_.__value_.__r.__words[2];
          result = (void **)std::string::operator=(v31, v32);
          v9 += 40;
          v31 = (std::string *)((char *)v31 + 40);
          v33 = v32 + 1;
          v32 = (const std::string *)((char *)v32 + 40);
        }
        while (v33 != a3);
        v23 = (char *)v7[1];
      }
      if (v23 != v9)
      {
        v34 = v23 - 40;
        v35 = v23 - 40;
        do
        {
          v36 = *(uint64_t (***)(char *))v35;
          v35 -= 40;
          result = (void **)(*v36)(v34);
          v15 = v34 == v9;
          v34 = v35;
        }
        while (!v15);
      }
      v7[1] = v9;
    }
    else
    {
      v24 = (const std::string *)(a2 + 8 * ((v23 - v9) >> 3));
      if (v23 != v9)
      {
        v25 = (std::string *)(v9 + 16);
        v26 = 8 * ((v23 - v9) >> 3);
        v27 = (const std::string *)(a2 + 16);
        do
        {
          LODWORD(v25[-1].__r_.__value_.__r.__words[2]) = v27[-1].__r_.__value_.__r.__words[2];
          result = (void **)std::string::operator=(v25, v27);
          v25 = (std::string *)((char *)v25 + 40);
          v27 = (const std::string *)((char *)v27 + 40);
          v26 -= 40;
        }
        while (v26);
        v9 = (char *)v7[1];
      }
      v28 = v9;
      if (v24 != a3)
      {
        v29 = 0;
        do
        {
          v30 = &v9[v29];
          *(_QWORD *)v30 = off_1003F9C78;
          *((_QWORD *)v30 + 3) = 0;
          *((_QWORD *)v30 + 4) = 0;
          *(_QWORD *)&v9[v29 + 16] = 0;
          *((_DWORD *)v30 + 2) = v24->__r_.__value_.__r.__words[v29 / 8 + 1];
          result = (void **)std::string::operator=((std::string *)&v9[v29 + 16], (const std::string *)&v24->__r_.__value_.__r.__words[v29 / 8 + 2]);
          v29 += 40;
        }
        while ((const std::string *)((char *)v24 + v29) != a3);
        v28 = &v9[v29];
      }
      v7[1] = v28;
    }
  }
  else
  {
    if (v9)
    {
      v10 = (char *)result[1];
      v11 = *result;
      if (v10 != v9)
      {
        v12 = v10 - 40;
        v13 = v10 - 40;
        do
        {
          v14 = *(void (***)(char *))v13;
          v13 -= 40;
          (*v14)(v12);
          v15 = v12 == v9;
          v12 = v13;
        }
        while (!v15);
        v11 = *v7;
      }
      v7[1] = v9;
      operator delete(v11);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x666666666666666)
      goto LABEL_40;
    v16 = 0xCCCCCCCCCCCCCCCDLL * (v8 >> 3);
    v17 = 2 * v16;
    if (2 * v16 <= a4)
      v17 = a4;
    v18 = v16 >= 0x333333333333333 ? 0x666666666666666 : v17;
    if (v18 > 0x666666666666666)
LABEL_40:
      sub_1000D02C0();
    v19 = 5 * v18;
    result = (void **)operator new(40 * v18);
    v20 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[v19];
    if ((const std::string *)a2 != a3)
    {
      v21 = 0;
      do
      {
        v22 = &v20[v21];
        *v22 = off_1003F9C78;
        v22[3] = 0;
        v22[4] = 0;
        v20[v21 + 2] = 0;
        *((_DWORD *)v22 + 2) = *(_DWORD *)(a2 + v21 * 8 + 8);
        result = (void **)std::string::operator=((std::string *)&v20[v21 + 2], (const std::string *)(a2 + v21 * 8 + 16));
        v21 += 5;
      }
      while ((const std::string *)(a2 + v21 * 8) != a3);
      v20 = (void **)((char *)v20 + v21 * 8);
    }
    v7[1] = v20;
  }
  return result;
}

void sub_1001A94F0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(char *)(v4 + 39) < 0)
    operator delete(*(void **)(v4 + 16));
  for (; v3; v3 -= 40)
    (**(void (***)(uint64_t))(v2 - 40 + v3))(v2 - 40 + v3);
  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(exception_object);
}

char *sub_1001A9530(char *result, uint64_t a2, uint64_t a3, size_t __sz)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (***v9)(_QWORD);
  uint64_t (***v10)(_QWORD);
  void *v11;
  void (***v12)(_QWORD);
  void (***v13)(_QWORD);
  void (**v14)(_QWORD);
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (***v20)(_QWORD);
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t (***v25)(_QWORD);
  uint64_t (***v26)(_QWORD);
  uint64_t v27;
  uint64_t (***v28)(_QWORD);
  unint64_t v29;
  uint64_t (***v30)(_QWORD);
  uint64_t (***v31)(_QWORD);
  uint64_t (***v32)(_QWORD);
  uint64_t (**v33)(_QWORD);

  v6 = a2;
  v7 = (uint64_t)result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(uint64_t (****)(_QWORD))result;
  if (0xCCCCCCCCCCCCCCCDLL * ((v8 - *(_QWORD *)result) >> 3) >= __sz)
  {
    v20 = (uint64_t (***)(_QWORD))*((_QWORD *)result + 1);
    v21 = 0xCCCCCCCCCCCCCCCDLL * (v20 - v9);
    if (v21 >= __sz)
    {
      if (a2 != a3)
      {
        v29 = 0;
        do
        {
          v30 = &v9[v29 / 8];
          *(_OWORD *)(v30 + 1) = *(_OWORD *)(a2 + v29 + 8);
          v30[3] = *(uint64_t (***)(_QWORD))(a2 + v29 + 24);
          *((_BYTE *)v30 + 32) = *(_BYTE *)(a2 + v29 + 32);
          v29 += 40;
        }
        while (a2 + v29 != a3);
        v20 = (uint64_t (***)(_QWORD))*((_QWORD *)result + 1);
        v9 = (uint64_t (***)(_QWORD))((char *)v9 + v29);
      }
      if (v20 != v9)
      {
        v31 = v20 - 5;
        v32 = v20 - 5;
        do
        {
          v33 = *v32;
          v32 -= 5;
          result = (char *)(*v33)(v31);
          v15 = v31 == v9;
          v31 = v32;
        }
        while (!v15);
      }
      *(_QWORD *)(v7 + 8) = v9;
    }
    else
    {
      v22 = a2 + 8 * (v20 - v9);
      if (v20 != v9)
      {
        v23 = 0;
        v24 = 40 * v21;
        do
        {
          v25 = &v9[v23 / 8];
          *(_OWORD *)(v25 + 1) = *(_OWORD *)(a2 + v23 + 8);
          v25[3] = *(uint64_t (***)(_QWORD))(a2 + v23 + 24);
          *((_BYTE *)v25 + 32) = *(_BYTE *)(a2 + v23 + 32);
          v23 += 40;
        }
        while (v24 != v23);
        v9 = (uint64_t (***)(_QWORD))*((_QWORD *)result + 1);
      }
      v26 = v9;
      if (v22 != a3)
      {
        v27 = 0;
        do
        {
          v28 = &v9[v27];
          *v28 = (uint64_t (**)(_QWORD))off_1003F9C98;
          *((_BYTE *)v28 + 32) = LOBYTE(v9[v27 + 4]) | 0xF;
          *(_OWORD *)(v28 + 1) = *(_OWORD *)(v22 + v27 * 8 + 8);
          v28[3] = *(uint64_t (***)(_QWORD))(v22 + v27 * 8 + 24);
          *((_BYTE *)v28 + 32) = *(_BYTE *)(v22 + v27 * 8 + 32);
          v27 += 5;
        }
        while (v22 + v27 * 8 != a3);
        v26 = &v9[v27];
      }
      *((_QWORD *)result + 1) = v26;
    }
  }
  else
  {
    if (v9)
    {
      v10 = (uint64_t (***)(_QWORD))*((_QWORD *)result + 1);
      v11 = *(void **)result;
      if (v10 != v9)
      {
        v12 = (void (***)(_QWORD))(v10 - 5);
        v13 = (void (***)(_QWORD))(v10 - 5);
        do
        {
          v14 = *v13;
          v13 -= 5;
          (*v14)(v12);
          v15 = v12 == (void (***)(_QWORD))v9;
          v12 = v13;
        }
        while (!v15);
        v11 = *(void **)v7;
      }
      *(_QWORD *)(v7 + 8) = v9;
      operator delete(v11);
      v8 = 0;
      *(_QWORD *)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
      *(_QWORD *)(v7 + 16) = 0;
    }
    if (__sz > 0x666666666666666)
      goto LABEL_38;
    v16 = 0xCCCCCCCCCCCCCCCDLL * (v8 >> 3);
    v17 = 2 * v16;
    if (2 * v16 <= __sz)
      v17 = __sz;
    v18 = v16 >= 0x333333333333333 ? 0x666666666666666 : v17;
    if (v18 > 0x666666666666666)
LABEL_38:
      sub_1000D02C0();
    v19 = 40 * v18;
    result = (char *)operator new(40 * v18);
    *(_QWORD *)v7 = result;
    *(_QWORD *)(v7 + 8) = result;
    for (*(_QWORD *)(v7 + 16) = &result[v19]; v6 != a3; result += 40)
    {
      *(_QWORD *)result = off_1003F9C98;
      *(_OWORD *)(result + 8) = *(_OWORD *)(v6 + 8);
      *((_QWORD *)result + 3) = *(_QWORD *)(v6 + 24);
      result[32] = *(_BYTE *)(v6 + 32);
      v6 += 40;
    }
    *(_QWORD *)(v7 + 8) = result;
  }
  return result;
}

uint64_t sub_1001A97FC(uint64_t *a1, _QWORD *a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  uint64_t i;
  std::string *p_p;
  std::string::size_type size;
  std::bad_cast *v11;
  std::string __p;
  void (__cdecl **v13)(std::ostringstream *__hidden);
  _QWORD v14[8];
  void *v15[2];
  __int128 v16;
  int v17;
  void (__cdecl **v18)(std::ostringstream *__hidden);
  std::bad_cast v19;
  _UNKNOWN **v20;
  _UNKNOWN **v21;

  v13 = v4;
  *(_QWORD *)((char *)&v14[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v14[-1] + (_QWORD)*(v13 - 3));
  std::ios_base::init(v6, v14);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v14);
  *(_OWORD *)v15 = 0u;
  v16 = 0u;
  v17 = 16;
  for (i = *a1; i != *a2; i += 40)
  {
    if (i != *a1)
      sub_1000F0508(&v13, (uint64_t)", ", 2);
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001A8C78(i, &__p) & 1) == 0)
    {
      v11 = std::bad_cast::bad_cast(&v19);
      v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)v11);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(&v13, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str(v14);
  if (SBYTE7(v16) < 0)
    operator delete(v15[0]);
  std::streambuf::~streambuf(v14);
  return std::ios::~ios(&v18);
}

void sub_1001A99F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001A9A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A9A7C(uint64_t *a1, _QWORD *a2)
{
  void (__cdecl **v4)(std::ostringstream *__hidden);
  uint64_t v5;
  std::ios_base *v6;
  uint64_t i;
  std::string *p_p;
  std::string::size_type size;
  std::bad_cast *v11;
  std::string __p;
  void (__cdecl **v13)(std::ostringstream *__hidden);
  _QWORD v14[8];
  void *v15[2];
  __int128 v16;
  int v17;
  void (__cdecl **v18)(std::ostringstream *__hidden);
  std::bad_cast v19;
  _UNKNOWN **v20;
  _UNKNOWN **v21;

  v13 = v4;
  *(_QWORD *)((char *)&v14[-1] + (_QWORD)*(v4 - 3)) = v5;
  v6 = (std::ios_base *)((char *)&v14[-1] + (_QWORD)*(v13 - 3));
  std::ios_base::init(v6, v14);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v14);
  *(_OWORD *)v15 = 0u;
  v16 = 0u;
  v17 = 16;
  for (i = *a1; i != *a2; i += 40)
  {
    if (i != *a1)
      sub_1000F0508(&v13, (uint64_t)", ", 2);
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001A9CFC(i, &__p) & 1) == 0)
    {
      v11 = std::bad_cast::bad_cast(&v19);
      v19.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
      sub_1000F9804((uint64_t)v11);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(&v13, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str(v14);
  if (SBYTE7(v16) < 0)
    operator delete(v15[0]);
  std::streambuf::~streambuf(v14);
  return std::ios::~ios(&v18);
}

void sub_1001A9C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001A9CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1000F0484((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A9CFC(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_1001A6A2C(&v32, a1);
  v5 = (char *)&v32 + (_QWORD)*(v32 - 3);
  v6 = *((_DWORD *)v5 + 8);
  v7 = *((_QWORD *)v5 + 5);
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1001A9F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001A9F90(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_1001A9FA8(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001A1770(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1001AA214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001AA248(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_1001AA260(unsigned int *a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = (_QWORD *)std::ostream::operator<<(&v32, *a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1001AA4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001AA500(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_1001AA518(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001A1C78(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1001AA784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001AA7B8(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_1001AA7D0()
{
  uint64_t v1;
  void *v2;
  char **v3;

  qword_10041AEE8 = 0;
  qword_10041AEE0 = 0;
  qword_10041AED8 = (uint64_t)&qword_10041AEE0;
  v1 = (uint64_t)&_mh_execute_header;
  v2 = &unk_1004188E0;
  v3 = &off_1004188E8;
  sub_100173018(&qword_10041AED8, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AED8, (void *)&_mh_execute_header);
  qword_10041AF00 = 0;
  qword_10041AEF8 = 0;
  qword_10041AEF0 = (uint64_t)&qword_10041AEF8;
  v1 = 0x400000000;
  v2 = &unk_1004188F0;
  v3 = off_100418900;
  sub_100173018(&qword_10041AEF0, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AEF0, (void *)&_mh_execute_header);
  qword_10041AF18 = 0;
  qword_10041AF10 = 0;
  qword_10041AF08 = (uint64_t)&qword_10041AF10;
  v1 = 0x300000000;
  v2 = &unk_100418920;
  v3 = off_100418930;
  sub_100173018(&qword_10041AF08, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AF08, (void *)&_mh_execute_header);
  qword_10041AF30 = 0;
  qword_10041AF28 = 0;
  qword_10041AF20 = (uint64_t)&qword_10041AF28;
  v1 = 0x200000000;
  v2 = &unk_100418948;
  v3 = off_100418950;
  sub_100173018(&qword_10041AF20, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AF20, (void *)&_mh_execute_header);
  qword_10041AF48 = 0;
  qword_10041AF40 = 0;
  qword_10041AF38 = (uint64_t)&qword_10041AF40;
  v1 = 0x600000000;
  v2 = &unk_100418960;
  v3 = off_100418978;
  sub_100173018(&qword_10041AF38, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AF38, (void *)&_mh_execute_header);
  qword_10041AF58 = 0;
  qword_10041AF60 = 0;
  qword_10041AF50 = (uint64_t)&qword_10041AF58;
  v1 = 0x400000000;
  v2 = &unk_1004189A8;
  v3 = off_1004189B8;
  sub_100173018(&qword_10041AF50, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AF50, (void *)&_mh_execute_header);
  qword_10041AF78 = 0;
  qword_10041AF70 = 0;
  qword_10041AF68 = (uint64_t)&qword_10041AF70;
  v1 = 0x300000000;
  v2 = &unk_1004189D8;
  v3 = off_1004189E8;
  sub_100173018(&qword_10041AF68, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AF68, (void *)&_mh_execute_header);
  qword_10041AF88 = 0;
  qword_10041AF90 = 0;
  qword_10041AF80 = (uint64_t)&qword_10041AF88;
  v1 = 0x200000000;
  v2 = &unk_100418A00;
  v3 = off_100418A08;
  sub_100173018(&qword_10041AF80, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AF80, (void *)&_mh_execute_header);
}

void sub_1001AAB34(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AF80, (_QWORD *)qword_10041AF88);
  _Unwind_Resume(a1);
}

void sub_1001AAB50(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AF68, (_QWORD *)qword_10041AF70);
  _Unwind_Resume(a1);
}

void sub_1001AAB6C(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AF50, (_QWORD *)qword_10041AF58);
  _Unwind_Resume(a1);
}

void sub_1001AAB88(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AF38, (_QWORD *)qword_10041AF40);
  _Unwind_Resume(a1);
}

void sub_1001AABA4(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AF20, (_QWORD *)qword_10041AF28);
  _Unwind_Resume(a1);
}

void sub_1001AABC0(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AF08, (_QWORD *)qword_10041AF10);
  _Unwind_Resume(a1);
}

void sub_1001AABDC(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AEF0, (_QWORD *)qword_10041AEF8);
  _Unwind_Resume(a1);
}

void sub_1001AABF8(_Unwind_Exception *a1)
{
  sub_10004AAA0((uint64_t)&qword_10041AED8, (_QWORD *)qword_10041AEE0);
  _Unwind_Resume(a1);
}

void sub_1001AAC14(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9D88;
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  operator delete();
}

_QWORD *sub_1001AAC60(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  std::string __p;

  sub_1000F0508(a1, (uint64_t)"ImageMetadata(", 14);
  v4 = sub_1000F0508(a1, (uint64_t)"width=", 6);
  sub_100171748((int *)(a2 + 8), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"height=", 7);
  sub_100171748((int *)(a2 + 12), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"id=", 3);
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&__p, (const std::string *)(a2 + 16));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &__p;
  else
    v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v14 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001AADE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001AAE10(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_1003F9DA8;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(void **)(a1 + 8);
    if (!v2)
LABEL_4:
      operator delete();
  }
  else
  {
    v2 = *(void **)(a1 + 8);
    if (!v2)
      goto LABEL_4;
  }
  *(_QWORD *)(a1 + 16) = v2;
  operator delete(v2);
  goto LABEL_4;
}

_QWORD *sub_1001AAE78(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  _QWORD *v15;
  _QWORD *v16;
  std::string *v17;
  std::string::size_type v18;
  _QWORD *v19;
  _QWORD *v20;
  std::string *v21;
  std::string::size_type v22;
  _QWORD *v23;
  _QWORD *v24;
  std::string *v25;
  std::string::size_type v26;
  std::string __p;

  sub_1000F0508(a1, (uint64_t)"TileMetadata(", 13);
  v4 = sub_1000F0508(a1, (uint64_t)"zoomFactor=", 11);
  sub_1001970B8(a2 + 8);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"tileWidth=", 10);
  sub_100171748((int *)(a2 + 32), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"tileHeight=", 11);
  sub_100171748((int *)(a2 + 36), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &__p;
  else
    v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v14 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v15 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v16 = sub_1000F0508(v15, (uint64_t)"tiledImageWidth=", 16);
  sub_100171748((int *)(a2 + 40), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = &__p;
  else
    v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v18 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v16, (uint64_t)v17, v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v19 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v20 = sub_1000F0508(v19, (uint64_t)"tiledImageHeight=", 17);
  sub_100171748((int *)(a2 + 44), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = &__p;
  else
    v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v22 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v20, (uint64_t)v21, v22);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v23 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v24 = sub_1000F0508(v23, (uint64_t)"tileImageFormat=", 16);
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&__p, (const std::string *)(a2 + 48));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v25 = &__p;
  else
    v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v26 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v24, (uint64_t)v25, v26);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001AB138(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001AB16C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9DE8;
  if (*(char *)(a1 + 375) < 0)
    operator delete(*(void **)(a1 + 352));
  sub_1000734E4(a1 + 304);
  nullsub_22(a1 + 272);
  nullsub_22(a1 + 240);
  sub_1000736E0(a1 + 128);
  nullsub_21(a1 + 56);
  sub_1000734E4(a1 + 8);
  operator delete();
}

_QWORD *sub_1001AB1E8(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  _QWORD *v12;
  std::string *v13;
  std::string::size_type v14;
  _QWORD *v15;
  _QWORD *v16;
  std::string *v17;
  std::string::size_type v18;
  _QWORD *v19;
  _QWORD *v20;
  std::string *v21;
  std::string::size_type v22;
  _QWORD *v23;
  _QWORD *v24;
  std::string *v25;
  std::string::size_type v26;
  _QWORD *v27;
  _QWORD *v28;
  std::string::value_type v29;
  _QWORD *v30;
  _QWORD *v31;
  std::string *v32;
  std::string::size_type v33;
  _QWORD *v34;
  _QWORD *v35;
  std::string *v36;
  std::string::size_type v37;
  _QWORD *v38;
  std::string *v39;
  std::string::size_type v40;
  _QWORD *v41;
  std::string *v42;
  std::string::size_type v43;
  std::string __p;
  std::string v46;

  sub_1000F0508(a1, (uint64_t)"PlanogramData(", 14);
  v4 = sub_1000F0508(a1, (uint64_t)"DEPRECATED_image=", 17);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001ABCE8(a2 + 8, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"transform=", 10);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019F07C(a2 + 56, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v12 = sub_1000F0508(v11, (uint64_t)"tiles=", 6);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001ABFA0(a2 + 128, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &__p;
  else
    v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v14 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v15 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v16 = sub_1000F0508(v15, (uint64_t)"tileOriginPixelOffsetX=", 23);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 208), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = &__p;
  else
    v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v18 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v16, (uint64_t)v17, v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v19 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v20 = sub_1000F0508(v19, (uint64_t)"tileOriginPixelOffsetY=", 23);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 216), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = &__p;
  else
    v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v22 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v20, (uint64_t)v21, v22);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v23 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v24 = sub_1000F0508(v23, (uint64_t)"tileScaleFactor=", 16);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10016EED0((double *)(a2 + 224), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v25 = &__p;
  else
    v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v26 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v24, (uint64_t)v25, v26);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v27 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v28 = sub_1000F0508(v27, (uint64_t)"autoUpdateScale=", 16);
  memset(&v46, 0, sizeof(v46));
  if (*(_BYTE *)(a2 + 232))
    v29 = 49;
  else
    v29 = 48;
  v46.__r_.__value_.__s.__data_[0] = v29;
  *((_BYTE *)&v46.__r_.__value_.__s + 23) = 1;
  sub_1000F0508(v28, (uint64_t)&v46, 1);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
  v30 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v31 = sub_1000F0508(v30, (uint64_t)"topLeftLatLon=", 14);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019B560(a2 + 240, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v32 = &__p;
  else
    v32 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v33 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v33 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v31, (uint64_t)v32, v33);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v34 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v35 = sub_1000F0508(v34, (uint64_t)"bottomRightLatLon=", 18);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019B560(a2 + 272, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v36 = &__p;
  else
    v36 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v37 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v37 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v35, (uint64_t)v36, v37);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v38 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v38, (uint64_t)"unscaledImage=", 14);
  if ((*(_WORD *)(a2 + 376) & 0x200) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001ABCE8(a2 + 304, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v46);
      v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
      sub_1000F9804((uint64_t)&v46);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v39 = &__p;
    else
      v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v40 = __p.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v39, v40);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  v41 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v41, (uint64_t)"DEPRECATED_id=", 14);
  if ((*(_WORD *)(a2 + 376) & 0x400) != 0)
  {
    memset(&v46, 0, sizeof(v46));
    std::string::operator=(&v46, (const std::string *)(a2 + 352));
    if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v42 = &v46;
    else
      v42 = (std::string *)v46.__r_.__value_.__r.__words[0];
    if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v43 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
    else
      v43 = v46.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v42, v43);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v46.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001AB948(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001ABA00(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9E08;
  if (*(char *)(a1 + 151) < 0)
    operator delete(*(void **)(a1 + 128));
  nullsub_21(a1 + 56);
  sub_1000734E4(a1 + 8);
  operator delete();
}

_QWORD *sub_1001ABA5C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  _QWORD *v11;
  std::string *v12;
  std::string::size_type v13;
  std::string __p;
  std::string v16;

  sub_1000F0508(a1, (uint64_t)"OccupancyData(", 14);
  v4 = sub_1000F0508(a1, (uint64_t)"image=", 6);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001ABCE8(a2 + 8, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v16);
    v16.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v16);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = sub_1000F0508(a1, (uint64_t)", ", 2);
  v8 = sub_1000F0508(v7, (uint64_t)"transform=", 10);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019F07C(a2 + 56, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v16);
    v16.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v16);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__p;
  else
    v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v10 = __p.__r_.__value_.__l.__size_;
  sub_1000F0508(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = sub_1000F0508(a1, (uint64_t)", ", 2);
  sub_1000F0508(v11, (uint64_t)"DEPRECATED_id=", 14);
  if ((*(_BYTE *)(a2 + 152) & 4) != 0)
  {
    memset(&v16, 0, sizeof(v16));
    std::string::operator=(&v16, (const std::string *)(a2 + 128));
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v12 = &v16;
    else
      v12 = (std::string *)v16.__r_.__value_.__r.__words[0];
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v13 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
    else
      v13 = v16.__r_.__value_.__l.__size_;
    sub_1000F0508(a1, (uint64_t)v12, v13);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_1000F0508(a1, (uint64_t)"<null>", 6);
  }
  sub_1000F0508(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001ABC88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001ABCE8(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001AAC60(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1001ABF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001ABF88(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_1001ABFA0(uint64_t a1, std::string *a2)
{
  std::ios_base *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string::size_type size;
  std::string::size_type v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  __int128 *v19;
  std::string::size_type *v20;
  unint64_t v21;
  __int128 v22;
  std::string::value_type v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *__p[2];
  __int128 v30;
  uint64_t v31;
  void (__cdecl **v32)(std::ostream *__hidden);
  std::ios_base v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;

  v31 = 0;
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  std::streambuf::basic_streambuf(&v25);
  *(_OWORD *)__p = 0u;
  v30 = 0u;
  LODWORD(v31) = 24;
  *(_QWORD *)&v27 = 0;
  v26 = 0uLL;
  *(_QWORD *)&v25 = off_1003EFE30;
  std::ios_base::init(&v33, &v25);
  v34 = 0;
  v35 = -1;
  v37 = &v36;
  v38 = (char *)&v36 + 2;
  v4 = (std::ios_base *)((char *)&v32 + (_QWORD)*(v32 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001AAE78(&v32, a1);
  v6 = *(_DWORD *)((char *)v5 + *(_QWORD *)(*v5 - 24) + 32);
  v7 = *(_QWORD *)((char *)&v33.__rdstate_ + (_QWORD)*(v32 - 3));
  v8 = *(_QWORD *)(v7 + 40);
  v37 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v38 = v9;
  if ((v6 & 5) == 0)
  {
    v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v15 = a2->__r_.__value_.__r.__words[2];
      v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0)
          v12 = a2;
        else
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (__int128 *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
              a2->__r_.__value_.__l.__size_ = v11;
            else
              *((_BYTE *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16)
        goto LABEL_13;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  v10 = 0;
LABEL_27:
  std::ostream::~ostream(&v32);
  if (SBYTE7(v30) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v25);
  return v10;
}

void sub_1001AC20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000F8D34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001AC240(void *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  sub_1000CDD68(a1);
}

uint64_t sub_1001AC258(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned int *i;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  uint64_t result;
  int v101;
  int v102;
  int v103;
  int v104;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "CellData");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "celltype", 11, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 8);
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "rat", 11, 2);
  v11 = v10 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 168))(a2, a1 + 32);
  v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "mcc", 8, 3);
  v14 = v13 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 56));
  v15 = v14 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v16 = v12
      + v15
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "mnc", 8, 4);
  v17 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 60));
  v18 = v17 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v19 = v18
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "lac", 8, 5);
  v20 = v19 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 64));
  v21 = v16 + v20 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v22 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "ci", 8, 6);
  v23 = v22 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 68));
  v24 = v23 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v25 = v24
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "uarfcn", 8, 7);
  v26 = v25 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 72));
  v27 = v21 + v26 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v28 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "psc", 8, 8);
  v29 = v28 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 76));
  v30 = v29 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v31 = v30
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "rscp", 8, 9);
  v32 = v31 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 80));
  v33 = v32 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v34 = v27
      + v33
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "ecn0", 8, 10);
  v35 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 84));
  v36 = v35 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v37 = v36
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "rssi", 8, 11);
  v38 = v37 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 88));
  v39 = v38 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v40 = v39
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "tac", 8, 12);
  v41 = v40 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 92));
  v42 = v34 + v41 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v43 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "pid", 8, 13);
  v44 = v43 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 96));
  v45 = v44 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v46 = v45
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "band_info", 8, 14);
  v47 = v46 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 100));
  v48 = v47 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v49 = v48
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "lat", 4, 15);
  v50 = v49 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 104));
  v51 = v42 + v50 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v52 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "lon", 4, 16);
  v53 = v52 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 112));
  v54 = v53 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v55 = v54
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "sid", 8, 17);
  v56 = v55 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 120));
  v57 = v56 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v58 = v57
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "nid", 8, 18);
  v59 = v58 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 124));
  v60 = v59 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v61 = v51
      + v60
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "zoneid", 8, 19);
  v62 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 128));
  v63 = v62 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v64 = v63
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "bsid", 8, 20);
  v65 = v64 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 132));
  v66 = v65 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v67 = v66
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "bandclass", 8, 21);
  v68 = v67 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 136));
  v69 = v68 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v70 = v69
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "channel", 8, 22);
  v71 = v70 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 140));
  v72 = v61 + v71 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v73 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "pnoffset", 8, 23);
  v74 = v73 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 144));
  v75 = v74 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v76 = v75
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "sector_lat", 4, 25);
  v77 = v76 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 176));
  v78 = v77 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v79 = v78
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "sector_lon", 4, 26);
  v80 = v79 + (*(uint64_t (**)(_DWORD *, double))(*(_QWORD *)a2 + 160))(a2, *(double *)(a1 + 184));
  v81 = v80 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v82 = v81
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "ltmOffset", 8, 27);
  v83 = v82 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 192));
  v84 = v72 + v83 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v85 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "daylightSaving", 8, 28);
  v86 = v85 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 196));
  v87 = v84 + v86 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  if ((*(_BYTE *)(a1 + 239) & 0x10) != 0)
  {
    v88 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "derivedMccs", 15, 29);
    v89 = v88
        + (*(uint64_t (**)(_DWORD *, uint64_t, _QWORD))(*(_QWORD *)a2 + 88))(a2, 8, (*(_QWORD *)(a1 + 208) - *(_QWORD *)(a1 + 200)) >> 2)+ v87;
    for (i = *(unsigned int **)(a1 + 200);
          i != *(unsigned int **)(a1 + 208);
          v89 += (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, v91))
    {
      v91 = *i++;
    }
    v92 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 96))(a2);
    v87 = v92 + v89 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  }
  v93 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "arfcn", 8, 30);
  v94 = v87 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 224));
  v95 = v93 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v94;
  v96 = *(_DWORD *)(a1 + 236);
  if ((v96 & 0x40000000) == 0)
  {
    if ((v96 & 0x80000000) == 0)
      goto LABEL_8;
LABEL_12:
    v103 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "rsrq", 8, 32);
    v104 = v95 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 232));
    v95 = v103 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v104;
    if ((*(_DWORD *)(a1 + 236) & 0x800000) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
  v101 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "rsrp", 8, 31);
  v102 = v101 + (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 144))(a2, *(unsigned int *)(a1 + 228));
  v95 += v102 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v96 = *(_DWORD *)(a1 + 236);
  if (v96 < 0)
    goto LABEL_12;
LABEL_8:
  if ((v96 & 0x800000) != 0)
  {
LABEL_9:
    v97 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "sectorid", 11, 33);
    v98 = v95 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a2 + 176))(a2, a1 + 152);
    v95 = v97 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2) + v98;
  }
LABEL_10:
  v99 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v99 + v95 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

_QWORD *sub_1001ACDE0(_QWORD *a1)
{
  void (***v2)(_QWORD);
  void (***v3)(_QWORD);
  void *v4;
  void (***v5)(_QWORD);
  void (***v6)(_QWORD);
  void (**v7)(_QWORD);
  BOOL v8;

  *a1 = off_1003F9E48;
  v2 = (void (***)(_QWORD))a1[2];
  if (v2)
  {
    v3 = (void (***)(_QWORD))a1[3];
    v4 = (void *)a1[2];
    if (v3 != v2)
    {
      v5 = v3 - 30;
      v6 = v3 - 30;
      do
      {
        v7 = *v6;
        v6 -= 30;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = (void *)a1[2];
    }
    a1[3] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_1001ACE5C(_QWORD *a1)
{
  void (***v2)(_QWORD);
  void (***v3)(_QWORD);
  void *v4;
  void (***v5)(_QWORD);
  void (***v6)(_QWORD);
  void (**v7)(_QWORD);
  BOOL v8;

  *a1 = off_1003F9E48;
  v2 = (void (***)(_QWORD))a1[2];
  if (v2)
  {
    v3 = (void (***)(_QWORD))a1[3];
    v4 = (void *)a1[2];
    if (v3 != v2)
    {
      v5 = v3 - 30;
      v6 = v3 - 30;
      do
      {
        v7 = *v6;
        v6 -= 30;
        (*v7)(v5);
        v8 = v5 == v2;
        v5 = v6;
      }
      while (!v8);
      v4 = (void *)a1[2];
    }
    a1[3] = v2;
    operator delete(v4);
  }
  operator delete();
}

uint64_t sub_1001ACEE8(_QWORD *a1, _DWORD *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t i;
  int v13;
  int v14;
  int v15;
  uint64_t result;
  _QWORD *exception;

  v2 = a2[7];
  v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    *exception = off_1003F07E8;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)a2 + 32))(a2, "CellScanEvent");
  v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  v8 = (*(uint64_t (**)(_DWORD *, _QWORD))(*(_QWORD *)a2 + 152))(a2, a1[1]);
  v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v10 = v9
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(_QWORD *)a2 + 48))(a2, "cellVector", 15, 2);
  v11 = v10
      + (*(uint64_t (**)(_DWORD *, uint64_t, _QWORD))(*(_QWORD *)a2 + 88))(a2, 12, -286331153 * ((a1[3] - a1[2]) >> 4));
  for (i = a1[2]; i != a1[3]; i += 240)
    v11 += sub_1001AC258(i, a2);
  v13 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 96))(a2) + v11;
  v14 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 56))(a2);
  v15 = v13 + v14 + (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 64))(a2);
  result = v15 + (*(unsigned int (**)(_DWORD *))(*(_QWORD *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001AD0A8()
{
  _QWORD v1[3];

  qword_10041AFA8 = 0;
  qword_10041AFA0 = 0;
  qword_10041AF98 = (uint64_t)&qword_10041AFA0;
  v1[0] = 0x1600000000;
  v1[1] = &unk_100418A18;
  v1[2] = &off_100418A70;
  sub_100173018(&qword_10041AF98, (uint64_t)v1);
  return __cxa_atexit((void (*)(void *))sub_10017150C, &qword_10041AF98, (void *)&_mh_execute_header);
}

void sub_1001AD138(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10004AAA0(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_1001AD150(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9E78;
  if (*(char *)(a1 + 87) < 0)
    operator delete(*(void **)(a1 + 64));
  nullsub_22(a1 + 32);
  operator delete();
}

uint64_t sub_1001AD1A4(uint64_t a1, uint64_t *a2)
{
  int i;
  int v5;
  uint64_t v6;
  int v7;
  __int16 v8;
  int v9;
  __int16 v11;
  int v12;
  void *__p[2];
  uint64_t v14;

  __p[0] = 0;
  __p[1] = 0;
  v14 = 0;
  v12 = 0;
  v11 = 0;
  for (i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v12, &v11) + i;
    if (!v12)
      break;
    switch(v11)
    {
      case 1:
        v6 = *a2;
        if (v12 != 10)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 8);
        v8 = 1;
        goto LABEL_27;
      case 2:
        if (v12 != 12)
          goto LABEL_8;
        v7 = sub_1001A225C(a1 + 32, a2);
        v8 = 8;
        goto LABEL_27;
      case 3:
        v6 = *a2;
        if (v12 != 11)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 64);
        v8 = 16;
        goto LABEL_27;
      case 4:
        v6 = *a2;
        if (v12 != 4)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 88);
        v8 = 32;
        goto LABEL_27;
      case 5:
        v6 = *a2;
        if (v12 != 4)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 96);
        v8 = 64;
        goto LABEL_27;
      case 6:
        v6 = *a2;
        if (v12 != 4)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 104);
        v8 = 128;
        goto LABEL_27;
      case 7:
        v6 = *a2;
        if (v12 != 10)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 16);
        v8 = 2;
        goto LABEL_27;
      case 8:
        v6 = *a2;
        if (v12 != 10)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 24);
        v8 = 4;
        goto LABEL_27;
      case 9:
        v6 = *a2;
        if (v12 != 4)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 112);
        v8 = 256;
        goto LABEL_27;
      case 10:
        v6 = *a2;
        if (v12 != 4)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 120);
        v8 = 512;
        goto LABEL_27;
      case 11:
        v6 = *a2;
        if (v12 != 4)
          goto LABEL_28;
        v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 128);
        v8 = 1024;
LABEL_27:
        *(_WORD *)(a1 + 136) |= v8;
        break;
      default:
LABEL_8:
        v6 = *a2;
LABEL_28:
        v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v14) < 0)
    operator delete(__p[0]);
  return (v9 + v5);
}

void sub_1001AD4B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1001AD4D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v4;
  uint64_t v5;
  uint64_t FileByName;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *__p;
  __int128 v11;

  sub_1001AD688(a1, a2, a3, a4);
  v5 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  __p = operator new(0x28uLL);
  v11 = xmmword_10038E050;
  strcpy((char *)__p, "protobuf/gen/locationd_parameters.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v5, &__p);
  v7 = FileByName;
  if (SHIBYTE(v11) < 0)
  {
    operator delete(__p);
    if (v7)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(&__p, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/locationd_parameters.pb.cc", 36);
  v8 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(&__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v8);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
LABEL_6:
  qword_100419C58 = *(_QWORD *)(v7 + 80);
  operator new();
}

void sub_1001AD620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001AD634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001AD648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001AD688(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  int v4;

  if ((byte_100419C48 & 1) == 0)
  {
    byte_100419C48 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/locationd_parameters.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n'protobuf/gen/locationd_parameters.proto\x12\x0Fproto.locationd\"\xB2\x01\n MotionActivityDebounceParameters\x12\"\n\x1AnonFitnessToCyclingSeconds\x18\x01 \x01(\r\x12\"\n\x1AnonFitnessToRunningSeconds\x18\x02 \x01(\r\x12\"\n\x1ArunningToNonFitnessSeconds\x18\x03 \x01(\r\x12\"\n\x1AcyclingToNonFitnessSeconds\x18\x04 \x01(\rB\"\n com.apple.indoor.proto.locationd", (const void *)0x113, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("protobuf/gen/locationd_parameters.proto", sub_1001AD7B0);
    operator new();
  }
}

void sub_1001AD744()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001AD76C()
{
  uint64_t result;

  if (qword_10041AFB0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFB0 + 8))(qword_10041AFB0);
  result = qword_100419C60;
  if (qword_100419C60)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_100419C60 + 8))(qword_100419C60);
  return result;
}

uint64_t sub_1001AD7B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v0 = qword_100419C68;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v3[1] = sub_1001AD4D4;
    v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419C68, v3);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
  v1 = qword_100419C58;
  if (qword_10041AFB0)
    return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(qword_100419C58);
  sub_1001AD688();
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
}

void sub_1001AD854(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1001AD868(_QWORD *a1)
{
  *a1 = off_1003F9EA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1001AD8A0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001AD8B4(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v8;
  int v9;
  int v10;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/locationd_parameters.pb.cc", 378);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 36) & 1) != 0)
  {
    v8 = *(_DWORD *)(a2 + 16);
    a1[9] |= 1u;
    a1[4] = v8;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
LABEL_12:
      v10 = *(_DWORD *)(a2 + 24);
      a1[9] |= 4u;
      a1[6] = v10;
      if ((*(_DWORD *)(a2 + 36) & 8) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_8;
    }
  }
  else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_DWORD *)(a2 + 20);
  a1[9] |= 2u;
  a1[5] = v9;
  v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 4) != 0)
    goto LABEL_12;
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    v6 = *(_DWORD *)(a2 + 28);
    a1[9] |= 8u;
    a1[7] = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001AD9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001AD9C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001AD9D8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = off_1003F9EA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_1001AD8B4((_DWORD *)a1, a2);
  return a1;
}

void sub_1001ADA30(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1001ADA4C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1001ADA60(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9EA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001ADA90(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9EA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001ADAD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_1001ADADC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10041AFB0;
  if (!qword_10041AFB0)
  {
    sub_1001AD688(0, a2, a3, a4);
    return qword_10041AFB0;
  }
  return result;
}

void sub_1001ADB14()
{
  operator new();
}

void sub_1001ADB64()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001ADB8C(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001ADBAC(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int v10;
  char *v11;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  _BYTE *v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;

  v6 = a1 + 4;
  v7 = a1 + 5;
  v8 = a1 + 6;
  v9 = a1 + 7;
  v10 = (_DWORD)a1 + 8;
  while (2)
  {
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v11;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          a1[9] |= 1u;
          if ((unint64_t)v16 >= v14)
            continue;
        }
        else
        {
          *v6 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          a1[9] |= 1u;
          if ((unint64_t)v16 >= v14)
            continue;
        }
        if (*v16 != 16)
          continue;
        v17 = v16 + 1;
        *((_QWORD *)this + 1) = v17;
        if ((unint64_t)v17 >= v14)
          goto LABEL_33;
        goto LABEL_30;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v17 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v17 >= v14)
          goto LABEL_33;
LABEL_30:
        if ((*v17 & 0x80000000) == 0)
        {
          *v7 = *v17;
          v20 = v17 + 1;
          *((_QWORD *)this + 1) = v20;
          a1[9] |= 2u;
          if ((unint64_t)v20 < v14)
            goto LABEL_35;
          continue;
        }
LABEL_33:
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
        if (!(_DWORD)result)
          return result;
        v20 = (_BYTE *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        a1[9] |= 2u;
        if ((unint64_t)v20 >= v14)
          continue;
LABEL_35:
        if (*v20 != 24)
          continue;
        v18 = v20 + 1;
        *((_QWORD *)this + 1) = v18;
        if ((unint64_t)v18 >= v14)
          goto LABEL_40;
LABEL_37:
        if ((*v18 & 0x80000000) == 0)
        {
          *v8 = *v18;
          v21 = v18 + 1;
          *((_QWORD *)this + 1) = v21;
          a1[9] |= 4u;
          if ((unint64_t)v21 < v14)
            goto LABEL_42;
          continue;
        }
LABEL_40:
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
        if (!(_DWORD)result)
          return result;
        v21 = (_BYTE *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        a1[9] |= 4u;
        if ((unint64_t)v21 >= v14)
          continue;
LABEL_42:
        if (*v21 != 32)
          continue;
        v19 = v21 + 1;
        *((_QWORD *)this + 1) = v19;
        if ((unint64_t)v19 >= v14)
          goto LABEL_47;
LABEL_44:
        if ((*v19 & 0x80000000) == 0)
        {
          *v9 = *v19;
          v22 = (unsigned __int8 *)(v19 + 1);
          *((_QWORD *)this + 1) = v22;
          a1[9] |= 8u;
          if (v22 == (unsigned __int8 *)v14)
            goto LABEL_49;
          continue;
        }
LABEL_47:
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
        if (!(_DWORD)result)
          return result;
        v24 = *((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        a1[9] |= 8u;
        if (v24 != v23)
          continue;
LABEL_49:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v18 >= v14)
          goto LABEL_40;
        goto LABEL_37;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v19 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v19 >= v14)
          goto LABEL_47;
        goto LABEL_44;
      default:
        v13 = TagFallback & 7;
LABEL_21:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v10, a4) & 1) != 0)
          continue;
        return 0;
    }
  }
}

uint64_t sub_1001ADEF0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) == 0)
  {
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_11:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001ADFB0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  unsigned int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  _QWORD *v14;
  _QWORD *v15;

  v3 = a2;
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    *(_BYTE *)a2 = 8;
    v10 = (_DWORD)a2 + 1;
    if (v9 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
      if ((*((_BYTE *)this + 36) & 2) != 0)
        goto LABEL_12;
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((_BYTE *)this + 36) & 2) != 0)
        goto LABEL_12;
    }
LABEL_3:
    if ((*((_BYTE *)this + 36) & 4) == 0)
      goto LABEL_4;
LABEL_16:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)v3 = 24;
    if (v12 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
      if ((*((_BYTE *)this + 36) & 8) != 0)
        goto LABEL_20;
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v12;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((_BYTE *)this + 36) & 8) != 0)
        goto LABEL_20;
    }
LABEL_5:
    v7 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v7;
    if (!v7)
      return v3;
    goto LABEL_6;
  }
  if ((*((_BYTE *)this + 36) & 2) == 0)
    goto LABEL_3;
LABEL_12:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  *(_BYTE *)v3 = 16;
  if (v11 > 0x7F)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    if ((*((_BYTE *)this + 36) & 4) != 0)
      goto LABEL_16;
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v11;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((_BYTE *)this + 36) & 4) != 0)
      goto LABEL_16;
  }
LABEL_4:
  if ((*((_BYTE *)this + 36) & 8) == 0)
    goto LABEL_5;
LABEL_20:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  *(_BYTE *)v3 = 32;
  if (v13 > 0x7F)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
    v15 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v15;
    if (!v15)
      return v3;
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v13;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    v14 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v14;
    if (!v14)
      return v3;
  }
LABEL_6:
  if (*v5 != v5[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, v3, a3);
  return v3;
}

uint64_t sub_1001AE10C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  uint64_t v13;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_18;
    goto LABEL_27;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)+ 1;
      v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0)
        goto LABEL_15;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_15;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_15;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v9 = 2;
  }
  v4 = (v9 + v4);
LABEL_15:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_17;
LABEL_23:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v12 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)+ 1+ v4;
      v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v6 = *(_QWORD **)(a1 + 8);
      if (!v6)
        goto LABEL_18;
    }
    else
    {
      v4 = (v4 + 2);
      v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v6 = *(_QWORD **)(a1 + 8);
      if (!v6)
        goto LABEL_18;
    }
    goto LABEL_27;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v11 >= 0x80)
  {
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2)+ 1+ v4;
    if ((*(_DWORD *)(a1 + 36) & 8) != 0)
      goto LABEL_23;
  }
  else
  {
    v4 = (v4 + 2);
    if ((v3 & 8) != 0)
      goto LABEL_23;
  }
LABEL_17:
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = *(_QWORD **)(a1 + 8);
  if (!v6)
  {
LABEL_18:
    *(_DWORD *)(a1 + 32) = v4;
    return v4;
  }
LABEL_27:
  if (*v6 == v6[1])
    goto LABEL_18;
  v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 32) = v13;
  return v13;
}

uint64_t sub_1001AE250(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/locationd_parameters.pb.cc", 366);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001AD8B4(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001AE304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001AE318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001AE32C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001AE374(uint64_t result, uint64_t a2)
{
  _DWORD *v3;

  if (a2 != result)
  {
    v3 = (_DWORD *)result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return sub_1001AD8B4(v3, a2);
  }
  return result;
}

uint64_t sub_1001AE3B4()
{
  return 1;
}

uint64_t sub_1001AE3BC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419C68;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AD4D4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419C68, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419C58;
}

void sub_1001AE430(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001AE444(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1001AE450(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v4;
  uint64_t v5;
  uint64_t FileByName;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *__p;
  __int128 v11;

  sub_1001AF970(a1, a2, a3, a4);
  v5 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  __p = operator new(0x20uLL);
  v11 = xmmword_1003825D0;
  strcpy((char *)__p, "protobuf/gen/parameters.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v5, &__p);
  v7 = FileByName;
  if (SHIBYTE(v11) < 0)
  {
    operator delete(__p);
    if (v7)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(&__p, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 159);
  v8 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(&__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v8);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
LABEL_6:
  qword_100419C80 = *(_QWORD *)(v7 + 80);
  operator new();
}

void sub_1001AF874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001AF888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001AF89C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001AF970(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  int v4;

  if ((byte_100419C70 & 1) == 0)
  {
    byte_100419C70 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_10038E678, (const void *)0x3104, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("protobuf/gen/parameters.proto", sub_1001B1374);
    operator new();
  }
}

void sub_1001B07A8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001B07D0()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001B0A58()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001B0A80()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001B0AA8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001B0B74()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001B0BA0()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001B0BC8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001B0BF0()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001B0C40()
{
  uint64_t result;

  if (qword_10041AFB8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFB8 + 8))(qword_10041AFB8);
  if (qword_100419C88)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419C88 + 8))(qword_100419C88);
  if (qword_10041AFC0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFC0 + 8))(qword_10041AFC0);
  if (qword_100419C98)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419C98 + 8))(qword_100419C98);
  if (qword_10041AFC8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFC8 + 8))(qword_10041AFC8);
  if (qword_100419CA8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419CA8 + 8))(qword_100419CA8);
  if (qword_10041AFD0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFD0 + 8))(qword_10041AFD0);
  if (qword_100419CB8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419CB8 + 8))(qword_100419CB8);
  if (qword_10041AFD8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFD8 + 8))(qword_10041AFD8);
  if (qword_100419CC8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419CC8 + 8))(qword_100419CC8);
  if (qword_10041AFE0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFE0 + 8))(qword_10041AFE0);
  if (qword_100419CD8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419CD8 + 8))(qword_100419CD8);
  if (qword_10041AFE8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFE8 + 8))(qword_10041AFE8);
  if (qword_100419CE8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419CE8 + 8))(qword_100419CE8);
  if (qword_10041AFF0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFF0 + 8))(qword_10041AFF0);
  if (qword_100419CF8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419CF8 + 8))(qword_100419CF8);
  if (qword_10041AFF8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041AFF8 + 8))(qword_10041AFF8);
  if (qword_100419D08)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419D08 + 8))(qword_100419D08);
  if (qword_10041B000)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B000 + 8))(qword_10041B000);
  if (qword_100419D20)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419D20 + 8))(qword_100419D20);
  if (qword_10041B008)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B008 + 8))(qword_10041B008);
  if (qword_100419D30)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419D30 + 8))(qword_100419D30);
  if (qword_10041B010)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B010 + 8))(qword_10041B010);
  if (qword_100419D40)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419D40 + 8))(qword_100419D40);
  if (qword_10041B018)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B018 + 8))(qword_10041B018);
  if (qword_100419D50)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419D50 + 8))(qword_100419D50);
  if (qword_10041B020)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B020 + 8))(qword_10041B020);
  if (qword_100419D60)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419D60 + 8))(qword_100419D60);
  if (qword_10041B028)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B028 + 8))(qword_10041B028);
  if (qword_100419D70)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419D70 + 8))(qword_100419D70);
  if (qword_10041B030)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B030 + 8))(qword_10041B030);
  if (qword_100419D80)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419D80 + 8))(qword_100419D80);
  if (qword_10041B038)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B038 + 8))(qword_10041B038);
  if (qword_100419D90)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419D90 + 8))(qword_100419D90);
  if (qword_10041B040)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B040 + 8))(qword_10041B040);
  if (qword_100419DA0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419DA0 + 8))(qword_100419DA0);
  if (qword_10041B048)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B048 + 8))(qword_10041B048);
  if (qword_100419DB0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419DB0 + 8))(qword_100419DB0);
  if (qword_10041B050)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B050 + 8))(qword_10041B050);
  if (qword_100419DC0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419DC0 + 8))(qword_100419DC0);
  if (qword_10041B058)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B058 + 8))(qword_10041B058);
  if (qword_100419DD0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419DD0 + 8))(qword_100419DD0);
  if (qword_10041B060)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B060 + 8))(qword_10041B060);
  if (qword_100419DE0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419DE0 + 8))(qword_100419DE0);
  if (qword_10041B068)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B068 + 8))(qword_10041B068);
  if (qword_100419DF0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419DF0 + 8))(qword_100419DF0);
  if (qword_10041B070)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B070 + 8))(qword_10041B070);
  if (qword_100419E00)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E00 + 8))(qword_100419E00);
  if (qword_10041B078)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B078 + 8))(qword_10041B078);
  if (qword_100419E10)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E10 + 8))(qword_100419E10);
  if (qword_10041B080)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B080 + 8))(qword_10041B080);
  if (qword_100419E20)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E20 + 8))(qword_100419E20);
  if (qword_10041B088)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B088 + 8))(qword_10041B088);
  if (qword_100419E30)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E30 + 8))(qword_100419E30);
  if (qword_10041B090)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B090 + 8))(qword_10041B090);
  if (qword_100419E40)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E40 + 8))(qword_100419E40);
  if (qword_10041B098)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B098 + 8))(qword_10041B098);
  if (qword_100419E50)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E50 + 8))(qword_100419E50);
  if (qword_10041B0A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B0A0 + 8))(qword_10041B0A0);
  if (qword_100419E60)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E60 + 8))(qword_100419E60);
  if (qword_10041B0A8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B0A8 + 8))(qword_10041B0A8);
  if (qword_100419E70)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E70 + 8))(qword_100419E70);
  if (qword_10041B0B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B0B0 + 8))(qword_10041B0B0);
  if (qword_100419E80)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E80 + 8))(qword_100419E80);
  if (qword_10041B0B8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B0B8 + 8))(qword_10041B0B8);
  if (qword_100419E90)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419E90 + 8))(qword_100419E90);
  if (qword_10041B0C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B0C0 + 8))(qword_10041B0C0);
  if (qword_100419EA0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419EA0 + 8))(qword_100419EA0);
  if (qword_10041B0C8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B0C8 + 8))(qword_10041B0C8);
  if (qword_100419EB0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419EB0 + 8))(qword_100419EB0);
  if (qword_10041B0D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B0D0 + 8))(qword_10041B0D0);
  if (qword_100419EC0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419EC0 + 8))(qword_100419EC0);
  if (qword_10041B0D8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B0D8 + 8))(qword_10041B0D8);
  if (qword_100419ED0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100419ED0 + 8))(qword_100419ED0);
  if (qword_10041B0E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10041B0E0 + 8))(qword_10041B0E0);
  result = qword_100419EE0;
  if (qword_100419EE0)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_100419EE0 + 8))(qword_100419EE0);
  return result;
}

uint64_t sub_1001B1374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v77[2];
  char v78;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v77[1] = sub_1001AE450;
    v78 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v77);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v77);
  }
  v1 = qword_100419C80;
  if (!qword_10041AFB8)
    ((void (*)(void))sub_1001AF970)();
  v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  v3 = qword_100419C90;
  if (!qword_10041AFC0)
    sub_1001AF970(v2);
  v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
  v5 = qword_100419CA0;
  if (!qword_10041AFC8)
    sub_1001AF970(v4);
  v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5);
  v7 = qword_100419CB0;
  if (!qword_10041AFD0)
    sub_1001AF970(v6);
  v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v7);
  v9 = qword_100419CC0;
  if (!qword_10041AFD8)
    sub_1001AF970(v8);
  v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v9);
  v11 = qword_100419CD0;
  if (!qword_10041AFE0)
    sub_1001AF970(v10);
  v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v11);
  v13 = qword_100419CE0;
  if (!qword_10041AFE8)
    sub_1001AF970(v12);
  v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v13);
  v15 = qword_100419CF0;
  if (!qword_10041AFF0)
    sub_1001AF970(v14);
  v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v15);
  v17 = qword_100419D00;
  if (!qword_10041AFF8)
    sub_1001AF970(v16);
  v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v17);
  v19 = qword_100419D18;
  if (!qword_10041B000)
    sub_1001AF970(v18);
  v20 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v19);
  v21 = qword_100419D28;
  if (!qword_10041B008)
    sub_1001AF970(v20);
  v22 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v21);
  v23 = qword_100419D38;
  if (!qword_10041B010)
    sub_1001AF970(v22);
  v24 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v23);
  v25 = qword_100419D48;
  if (!qword_10041B018)
    sub_1001AF970(v24);
  v26 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v25);
  v27 = qword_100419D58;
  if (!qword_10041B020)
    sub_1001AF970(v26);
  v28 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v27);
  v29 = qword_100419D68;
  if (!qword_10041B028)
    sub_1001AF970(v28);
  v30 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v29);
  v31 = qword_100419D78;
  if (!qword_10041B030)
    sub_1001AF970(v30);
  v32 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v31);
  v33 = qword_100419D88;
  if (!qword_10041B038)
    sub_1001AF970(v32);
  v34 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v33);
  v35 = qword_100419D98;
  if (!qword_10041B040)
    sub_1001AF970(v34);
  v36 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v35);
  v37 = qword_100419DA8;
  if (!qword_10041B048)
    sub_1001AF970(v36);
  v38 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v37);
  v39 = qword_100419DB8;
  if (!qword_10041B050)
    sub_1001AF970(v38);
  v40 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v39);
  v41 = qword_100419DC8;
  if (!qword_10041B058)
    sub_1001AF970(v40);
  v42 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v41);
  v43 = qword_100419DD8;
  if (!qword_10041B060)
    sub_1001AF970(v42);
  v44 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v43);
  v45 = qword_100419DE8;
  if (!qword_10041B068)
    sub_1001AF970(v44);
  v46 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v45);
  v47 = qword_100419DF8;
  if (!qword_10041B070)
    sub_1001AF970(v46);
  v48 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v47);
  v49 = qword_100419E08;
  if (!qword_10041B078)
    sub_1001AF970(v48);
  v50 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v49);
  v51 = qword_100419E18;
  if (!qword_10041B080)
    sub_1001AF970(v50);
  v52 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v51);
  v53 = qword_100419E28;
  if (!qword_10041B088)
    sub_1001AF970(v52);
  v54 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v53);
  v55 = qword_100419E38;
  if (!qword_10041B090)
    sub_1001AF970(v54);
  v56 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v55);
  v57 = qword_100419E48;
  if (!qword_10041B098)
    sub_1001AF970(v56);
  v58 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v57);
  v59 = qword_100419E58;
  if (!qword_10041B0A0)
    sub_1001AF970(v58);
  v60 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v59);
  v61 = qword_100419E68;
  if (!qword_10041B0A8)
    sub_1001AF970(v60);
  v62 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v61);
  v63 = qword_100419E78;
  if (!qword_10041B0B0)
    sub_1001AF970(v62);
  v64 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v63);
  v65 = qword_100419E88;
  if (!qword_10041B0B8)
    sub_1001AF970(v64);
  v66 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v65);
  v67 = qword_100419E98;
  if (!qword_10041B0C0)
    sub_1001AF970(v66);
  v68 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v67);
  v69 = qword_100419EA8;
  if (!qword_10041B0C8)
    sub_1001AF970(v68);
  v70 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v69);
  v71 = qword_100419EB8;
  if (!qword_10041B0D0)
    sub_1001AF970(v70);
  v72 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v71);
  v73 = qword_100419EC8;
  if (!qword_10041B0D8)
    sub_1001AF970(v72);
  v74 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v73);
  v75 = qword_100419ED8;
  if (qword_10041B0E0)
    return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(qword_100419ED8);
  sub_1001AF970(v74);
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v75);
}

void sub_1001B194C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B1960(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (_QWORD *)result;
  if (qword_10041AFD0)
  {
    *(_QWORD *)(result + 48) = qword_10041AFD0;
    v2 = qword_10041AFD8;
    if (qword_10041AFD8)
      goto LABEL_3;
  }
  else
  {
    result = sub_1001AF970(result);
    v1[6] = qword_10041AFD0;
    v2 = qword_10041AFD8;
    if (qword_10041AFD8)
    {
LABEL_3:
      v1[7] = v2;
      v3 = qword_10041AFE0;
      if (qword_10041AFE0)
        goto LABEL_4;
      goto LABEL_25;
    }
  }
  result = sub_1001AF970(result);
  v1[7] = qword_10041AFD8;
  v3 = qword_10041AFE0;
  if (qword_10041AFE0)
  {
LABEL_4:
    v1[8] = v3;
    v4 = qword_10041AFC8;
    if (qword_10041AFC8)
      goto LABEL_5;
    goto LABEL_26;
  }
LABEL_25:
  result = sub_1001AF970(result);
  v1[8] = qword_10041AFE0;
  v4 = qword_10041AFC8;
  if (qword_10041AFC8)
  {
LABEL_5:
    v1[9] = v4;
    v5 = qword_10041AFF0;
    if (qword_10041AFF0)
      goto LABEL_6;
    goto LABEL_27;
  }
LABEL_26:
  result = sub_1001AF970(result);
  v1[9] = qword_10041AFC8;
  v5 = qword_10041AFF0;
  if (qword_10041AFF0)
  {
LABEL_6:
    v1[10] = v5;
    v6 = qword_10041AFF8;
    if (qword_10041AFF8)
      goto LABEL_7;
    goto LABEL_28;
  }
LABEL_27:
  result = sub_1001AF970(result);
  v1[10] = qword_10041AFF0;
  v6 = qword_10041AFF8;
  if (qword_10041AFF8)
  {
LABEL_7:
    v1[11] = v6;
    v7 = qword_10041AFB8;
    if (qword_10041AFB8)
      goto LABEL_8;
    goto LABEL_29;
  }
LABEL_28:
  result = sub_1001AF970(result);
  v1[11] = qword_10041AFF8;
  v7 = qword_10041AFB8;
  if (qword_10041AFB8)
  {
LABEL_8:
    v1[13] = v7;
    v8 = qword_10041B000;
    if (qword_10041B000)
      goto LABEL_9;
    goto LABEL_30;
  }
LABEL_29:
  result = sub_1001AF970(result);
  v1[13] = qword_10041AFB8;
  v8 = qword_10041B000;
  if (qword_10041B000)
  {
LABEL_9:
    v1[18] = v8;
    v9 = qword_10041B010;
    if (qword_10041B010)
      goto LABEL_10;
    goto LABEL_31;
  }
LABEL_30:
  result = sub_1001AF970(result);
  v1[18] = qword_10041B000;
  v9 = qword_10041B010;
  if (qword_10041B010)
  {
LABEL_10:
    v1[20] = v9;
    v10 = qword_10041B0B0;
    if (qword_10041B0B0)
      goto LABEL_11;
    goto LABEL_32;
  }
LABEL_31:
  result = sub_1001AF970(result);
  v1[20] = qword_10041B010;
  v10 = qword_10041B0B0;
  if (qword_10041B0B0)
  {
LABEL_11:
    v1[21] = v10;
    v11 = qword_10041B008;
    if (qword_10041B008)
      goto LABEL_12;
    goto LABEL_33;
  }
LABEL_32:
  result = sub_1001AF970(result);
  v1[21] = qword_10041B0B0;
  v11 = qword_10041B008;
  if (qword_10041B008)
  {
LABEL_12:
    v1[22] = v11;
    v12 = qword_10041AFC0;
    if (qword_10041AFC0)
      goto LABEL_13;
    goto LABEL_34;
  }
LABEL_33:
  result = sub_1001AF970(result);
  v1[22] = qword_10041B008;
  v12 = qword_10041AFC0;
  if (qword_10041AFC0)
  {
LABEL_13:
    v1[25] = v12;
    v13 = qword_10041B020;
    if (qword_10041B020)
      goto LABEL_14;
    goto LABEL_35;
  }
LABEL_34:
  result = sub_1001AF970(result);
  v1[25] = qword_10041AFC0;
  v13 = qword_10041B020;
  if (qword_10041B020)
  {
LABEL_14:
    v1[26] = v13;
    v14 = qword_10041B028;
    if (qword_10041B028)
      goto LABEL_15;
    goto LABEL_36;
  }
LABEL_35:
  result = sub_1001AF970(result);
  v1[26] = qword_10041B020;
  v14 = qword_10041B028;
  if (qword_10041B028)
  {
LABEL_15:
    v1[27] = v14;
    v15 = qword_10041AFC0;
    if (qword_10041AFC0)
      goto LABEL_16;
    goto LABEL_37;
  }
LABEL_36:
  result = sub_1001AF970(result);
  v1[27] = qword_10041B028;
  v15 = qword_10041AFC0;
  if (qword_10041AFC0)
  {
LABEL_16:
    v1[29] = v15;
    v16 = qword_10041AFE0;
    if (qword_10041AFE0)
      goto LABEL_17;
    goto LABEL_38;
  }
LABEL_37:
  result = sub_1001AF970(result);
  v1[29] = qword_10041AFC0;
  v16 = qword_10041AFE0;
  if (qword_10041AFE0)
  {
LABEL_17:
    v1[30] = v16;
    v17 = qword_10041B0B8;
    if (qword_10041B0B8)
      goto LABEL_18;
    goto LABEL_39;
  }
LABEL_38:
  result = sub_1001AF970(result);
  v1[30] = qword_10041AFE0;
  v17 = qword_10041B0B8;
  if (qword_10041B0B8)
  {
LABEL_18:
    v1[32] = v17;
    v18 = qword_10041B0D0;
    if (qword_10041B0D0)
      goto LABEL_19;
    goto LABEL_40;
  }
LABEL_39:
  result = sub_1001AF970(result);
  v1[32] = qword_10041B0B8;
  v18 = qword_10041B0D0;
  if (qword_10041B0D0)
  {
LABEL_19:
    v1[33] = v18;
    v19 = qword_10041B0E0;
    if (qword_10041B0E0)
      goto LABEL_20;
    goto LABEL_41;
  }
LABEL_40:
  result = sub_1001AF970(result);
  v1[33] = qword_10041B0D0;
  v19 = qword_10041B0E0;
  if (qword_10041B0E0)
  {
LABEL_20:
    v1[34] = v19;
    v20 = qword_10041B0C0;
    if (qword_10041B0C0)
      goto LABEL_21;
LABEL_42:
    result = sub_1001AF970(result);
    v1[35] = qword_10041B0C0;
    v21 = qword_10041B0C8;
    if (qword_10041B0C8)
      goto LABEL_22;
    goto LABEL_43;
  }
LABEL_41:
  result = sub_1001AF970(result);
  v1[34] = qword_10041B0E0;
  v20 = qword_10041B0C0;
  if (!qword_10041B0C0)
    goto LABEL_42;
LABEL_21:
  v1[35] = v20;
  v21 = qword_10041B0C8;
  if (qword_10041B0C8)
  {
LABEL_22:
    v1[36] = v21;
    return result;
  }
LABEL_43:
  result = sub_1001AF970(result);
  v1[36] = qword_10041B0C8;
  return result;
}

BOOL sub_1001B1CC0(unsigned int a1)
{
  return a1 < 0xA;
}

uint64_t sub_1001B1CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 1944);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 40) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v9 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_QWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(_QWORD *)(a1 + 16) = v8;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    v6 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 32) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001B1DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B1DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B1DD0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003F9F70;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001B1E00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1001B1E08()
{
  operator new();
}

void sub_1001B1E5C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B1E84(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 40))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B1EA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unint64_t *v6;
  unint64_t *v7;
  unsigned int v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v11;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  unsigned __int8 *v16;
  uint64_t result;
  _BYTE *v18;
  unint64_t v19;
  unsigned int v20;

  v6 = (unint64_t *)(a1 + 16);
  v7 = (unint64_t *)(a1 + 24);
  v8 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v9 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v11 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 40) |= 1u;
          if ((unint64_t)v15 < v13)
            goto LABEL_27;
        }
        else
        {
          *v6 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          *(_DWORD *)(a1 + 40) |= 1u;
          if ((unint64_t)v15 < v13)
          {
LABEL_27:
            if (*v15 == 16)
            {
              v16 = v15 + 1;
              *((_QWORD *)this + 1) = v16;
              if ((unint64_t)v16 < v13)
                goto LABEL_29;
LABEL_32:
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
              if (!(_DWORD)result)
                return result;
              v18 = (_BYTE *)*((_QWORD *)this + 1);
              v19 = *((_QWORD *)this + 2);
              *(_DWORD *)(a1 + 40) |= 2u;
              if ((unint64_t)v18 < v19)
                goto LABEL_34;
            }
          }
        }
      }
      if (v11 != 2)
        break;
      v12 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_22;
      v16 = (unsigned __int8 *)*((_QWORD *)this + 1);
      v13 = *((_QWORD *)this + 2);
      if ((unint64_t)v16 >= v13)
        goto LABEL_32;
LABEL_29:
      if ((char)*v16 < 0)
        goto LABEL_32;
      *v7 = *v16;
      v18 = v16 + 1;
      *((_QWORD *)this + 1) = v18;
      *(_DWORD *)(a1 + 40) |= 2u;
      if ((unint64_t)v18 < v13)
      {
LABEL_34:
        if (*v18 == 29)
        {
          *((_QWORD *)this + 1) = v18 + 1;
          v20 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0)
            return 0;
LABEL_36:
          *(_DWORD *)(a1 + 32) = v20;
          *(_DWORD *)(a1 + 40) |= 4u;
          if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
        }
      }
    }
    if (v11 == 3)
    {
      v12 = TagFallback & 7;
      if (v12 == 5)
      {
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0)
          return 0;
        goto LABEL_36;
      }
    }
    else
    {
      v12 = TagFallback & 7;
    }
LABEL_22:
    if (v12 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v8, a4) & 1) != 0);
  return 0;
}

uint64_t sub_1001B2128(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 16), (unint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 24), (unint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 4) == 0)
  {
LABEL_4:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_9;
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 32), a3);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_9:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001B21CC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  _QWORD *v11;

  v4 = *((_DWORD *)this + 10);
  if ((v4 & 1) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 2);
    *(_BYTE *)a2 = 8;
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, a2 + 1, a3);
    v4 = *((_DWORD *)this + 10);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
LABEL_8:
      v10 = *((_DWORD *)this + 8);
      *(_BYTE *)a2 = 29;
      *(_DWORD *)(a2 + 1) = v10;
      a2 += 5;
      v11 = (_QWORD *)*((_QWORD *)this + 1);
      v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      v5 = v11;
      if (!v11)
        return a2;
      goto LABEL_9;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 3);
  *(_BYTE *)a2 = 16;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, a2 + 1, a3);
  if ((*((_DWORD *)this + 10) & 4) != 0)
    goto LABEL_8;
LABEL_4:
  v7 = (_QWORD *)*((_QWORD *)this + 1);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v5 = v7;
  if (!v7)
    return a2;
LABEL_9:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001B2290(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  uint64_t v8;

  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      LODWORD(v4) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
      v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0)
        goto LABEL_9;
    }
    else
    {
      LODWORD(v4) = 0;
      if ((*(_BYTE *)(a1 + 40) & 2) == 0)
      {
LABEL_9:
        if ((v3 & 4) != 0)
          v4 = (v4 + 5);
        else
          v4 = v4;
        v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        v6 = *(_QWORD **)(a1 + 8);
        if (!v6)
          goto LABEL_6;
        goto LABEL_13;
      }
    }
    LODWORD(v4) = v4
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 40);
    goto LABEL_9;
  }
  v4 = 0;
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = *(_QWORD **)(a1 + 8);
  if (!v6)
  {
LABEL_6:
    *(_DWORD *)(a1 + 36) = v4;
    return v4;
  }
LABEL_13:
  if (*v6 == v6[1])
    goto LABEL_6;
  v8 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
     + v4;
  *(_DWORD *)(a1 + 36) = v8;
  return v8;
}

uint64_t sub_1001B2344(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 1932);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001B1CCC((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B23F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B240C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B2420(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B2468()
{
  return 1;
}

uint64_t sub_1001B2470()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419C80;
}

void sub_1001B24E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B24F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v9;
  char v10;
  int v11;
  int v12;
  int v13;
  char v14;
  char v15;
  char v16;
  _BYTE v17[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v17, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 2434);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v5 = *(_DWORD *)(a2 + 44);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v9 = *(_BYTE *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(_BYTE *)(a1 + 24) = v9;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v10 = *(_BYTE *)(a2 + 25);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_BYTE *)(a1 + 25) = v10;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  v11 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 4u;
  *(_DWORD *)(a1 + 16) = v11;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  v12 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 44) |= 8u;
  *(_DWORD *)(a1 + 20) = v12;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_21:
    v14 = *(_BYTE *)(a2 + 26);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(_BYTE *)(a1 + 26) = v14;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  v13 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 44) |= 0x10u;
  *(_DWORD *)(a1 + 28) = v13;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 0x20) != 0)
    goto LABEL_21;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_22:
  v15 = *(_BYTE *)(a2 + 27);
  *(_DWORD *)(a1 + 44) |= 0x40u;
  *(_BYTE *)(a1 + 27) = v15;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 0x80u;
    *(_DWORD *)(a1 + 32) = v6;
    v5 = *(_DWORD *)(a2 + 44);
  }
LABEL_13:
  if ((v5 & 0x100) != 0)
  {
    v7 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x100u;
    *(_DWORD *)(a1 + 36) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001B2694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B26A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B26BC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA020;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001B26EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001B26F4()
{
  operator new();
}

void sub_1001B2744()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B276C(uint64_t a1)
{
  int v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(a1 + 36) = 0;
  v3 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B27A0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  unsigned int v12;
  _BYTE *v13;
  char *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  uint64_t result;
  unsigned int v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE *v27;
  _BYTE *v28;
  unsigned int v29;

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v29 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          v12 = *v11;
          v13 = v11 + 1;
          *((_QWORD *)this + 1) = v13;
          goto LABEL_38;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
        if ((_DWORD)result)
        {
          v12 = v29;
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
LABEL_38:
          *(_BYTE *)(a1 + 24) = v12 != 0;
          *(_DWORD *)(a1 + 44) |= 1u;
          if ((unint64_t)v13 >= v10 || *v13 != 16)
            continue;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
          v29 = 0;
          if ((unint64_t)v14 >= v10)
            goto LABEL_43;
          goto LABEL_41;
        }
        return result;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v14 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        v29 = 0;
        if ((unint64_t)v14 >= v10)
          goto LABEL_43;
LABEL_41:
        if (*v14 < 0)
        {
LABEL_43:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!(_DWORD)result)
            return result;
          v19 = v29;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v19 = *v14;
          v20 = v14 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        *(_BYTE *)(a1 + 25) = v19 != 0;
        *(_DWORD *)(a1 + 44) |= 2u;
        if ((unint64_t)v20 >= v10 || *v20 != 29)
          continue;
        *((_QWORD *)this + 1) = v20 + 1;
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0)
          return 0;
LABEL_48:
        *(_DWORD *)(a1 + 16) = v29;
        *(_DWORD *)(a1 + 44) |= 4u;
        v21 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v21 >= *((_QWORD *)this + 2) || *v21 != 37)
          continue;
        *((_QWORD *)this + 1) = v21 + 1;
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0)
          return 0;
LABEL_51:
        *(_DWORD *)(a1 + 20) = v29;
        *(_DWORD *)(a1 + 44) |= 8u;
        v22 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v22 >= *((_QWORD *)this + 2) || *v22 != 45)
          continue;
        *((_QWORD *)this + 1) = v22 + 1;
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0)
          return 0;
LABEL_54:
        *(_DWORD *)(a1 + 28) = v29;
        *(_DWORD *)(a1 + 44) |= 0x10u;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v23 >= v15 || *v23 != 48)
          continue;
        v16 = v23 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_57:
        v29 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!(_DWORD)result)
            return result;
          v24 = v29;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v24 = *v16;
          v25 = v16 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        *(_BYTE *)(a1 + 26) = v24 != 0;
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if ((unint64_t)v25 >= v15 || *v25 != 56)
          continue;
        v17 = v25 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_65:
        v29 = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!(_DWORD)result)
            return result;
          v26 = v29;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v26 = *v17;
          v27 = v17 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        *(_BYTE *)(a1 + 27) = v26 != 0;
        *(_DWORD *)(a1 + 44) |= 0x40u;
        if ((unint64_t)v27 >= v15 || *v27 != 69)
          continue;
        *((_QWORD *)this + 1) = v27 + 1;
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0)
          return 0;
LABEL_73:
        *(_DWORD *)(a1 + 32) = v29;
        *(_DWORD *)(a1 + 44) |= 0x80u;
        v28 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v28 >= *((_QWORD *)this + 2) || *v28 != 77)
          continue;
        *((_QWORD *)this + 1) = v28 + 1;
LABEL_76:
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 36) = v29;
        *(_DWORD *)(a1 + 44) |= 0x100u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_33;
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0)
          return 0;
        goto LABEL_48;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_33;
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0)
          return 0;
        goto LABEL_51;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_33;
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0)
          return 0;
        goto LABEL_54;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v17 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_65;
      case 8u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_33;
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0)
          return 0;
        goto LABEL_73;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_33;
        goto LABEL_76;
      default:
        v9 = TagFallback & 7;
LABEL_33:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1001B2CAC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 24), (BOOL)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 26), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 27), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x100) == 0)
  {
LABEL_10:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 36), a3);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_21:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

_BYTE *sub_1001B2DF8(uint64_t a1, _BYTE *a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  char v7;
  char v8;
  int v9;
  int v10;
  int v11;
  char v12;
  char v13;
  int v14;
  int v15;
  _QWORD *v16;

  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) != 0)
  {
    v7 = *(_BYTE *)(a1 + 24);
    *a2 = 8;
    a2[1] = v7;
    a2 += 2;
    v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_BYTE *)(a1 + 25);
  *a2 = 16;
  a2[1] = v8;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  v9 = *(_DWORD *)(a1 + 16);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  v10 = *(_DWORD *)(a1 + 20);
  *a2 = 37;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  v11 = *(_DWORD *)(a1 + 28);
  *a2 = 45;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  v12 = *(_BYTE *)(a1 + 26);
  *a2 = 48;
  a2[1] = v12;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  v13 = *(_BYTE *)(a1 + 27);
  *a2 = 56;
  a2[1] = v13;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x80) == 0)
  {
LABEL_9:
    if ((v3 & 0x100) == 0)
      goto LABEL_10;
LABEL_20:
    v15 = *(_DWORD *)(a1 + 36);
    *a2 = 77;
    *(_DWORD *)(a2 + 1) = v15;
    a2 += 5;
    v16 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v16;
    if (!v16)
      return a2;
    goto LABEL_21;
  }
LABEL_19:
  v14 = *(_DWORD *)(a1 + 32);
  *a2 = 69;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  if ((*(_DWORD *)(a1 + 44) & 0x100) != 0)
    goto LABEL_20;
LABEL_10:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_21:
  if (*v5 != v5[1])
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001B2FB8(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;

  v3 = a1[11];
  if ((_BYTE)v3)
  {
    v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0)
      v4 += 2;
    if ((v3 & 4) != 0)
      v4 += 5;
    if ((v3 & 8) != 0)
      v4 += 5;
    if ((v3 & 0x10) != 0)
      v4 += 5;
    if ((v3 & 0x20) != 0)
      v4 += 2;
    if ((v3 & 0x40) != 0)
      v4 += 2;
    if ((v3 & 0x80) != 0)
      v4 += 5;
    if ((v3 & 0x100) != 0)
      v5 = v4 + 5;
    else
      v5 = v4;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    v7 = (_QWORD *)*((_QWORD *)a1 + 1);
    if (!v7)
      goto LABEL_20;
  }
  else
  {
    if ((v3 & 0x100) != 0)
      v5 = 5;
    else
      v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    v7 = (_QWORD *)*((_QWORD *)a1 + 1);
    if (!v7)
      goto LABEL_20;
  }
  if (*v7 == v7[1])
  {
LABEL_20:
    a1[10] = v5;
    return v5;
  }
  v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  a1[10] = v9;
  return v9;
}

uint64_t sub_1001B309C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 2422);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001B24F8((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B3150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B3164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B3178(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B31C0()
{
  return 1;
}

uint64_t sub_1001B31C8()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419C90;
}

void sub_1001B323C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B3250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1001B3258()
{
  operator new();
}

void sub_1001B32AC()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B32D4(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 48))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 40) = 0;
    *(_QWORD *)(a1 + 32) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B32FC(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  _BYTE *v13;
  _BYTE *v14;
  unint64_t v15;
  _BYTE *v16;
  char *v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  uint64_t result;
  _BYTE *v22;
  _BYTE *v23;
  unint64_t v24;
  unsigned int v25;

  v6 = a1 + 7;
  v7 = a1 + 8;
  v8 = a1 + 9;
  v9 = (_DWORD)a1 + 8;
  while (2)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if (v12 != 5)
          goto LABEL_35;
        v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0)
          return 0;
        a1[4] = v25;
        a1[12] |= 1u;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 != 21)
          continue;
        *((_QWORD *)this + 1) = v13 + 1;
        goto LABEL_15;
      case 2u:
        v12 = TagFallback & 7;
        if (v12 != 5)
          goto LABEL_35;
LABEL_15:
        v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0)
          return 0;
        a1[5] = v25;
        a1[12] |= 2u;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 != 29)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
LABEL_20:
        v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0)
          return 0;
        a1[6] = v25;
        a1[12] |= 4u;
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 != 32)
          continue;
        v17 = v16 + 1;
        *((_QWORD *)this + 1) = v17;
        if ((unint64_t)v17 >= v15)
          goto LABEL_38;
LABEL_27:
        if ((*v17 & 0x80000000) == 0)
        {
          *v6 = *v17;
          v18 = v17 + 1;
          *((_QWORD *)this + 1) = v18;
          a1[12] |= 8u;
          if ((unint64_t)v18 < v15)
            goto LABEL_40;
          continue;
        }
LABEL_38:
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result)
          return result;
        v18 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        a1[12] |= 8u;
        if ((unint64_t)v18 >= v15)
          continue;
LABEL_40:
        if (*v18 != 40)
          continue;
        v19 = v18 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_42:
        if ((unint64_t)v19 < v15 && (*v19 & 0x80000000) == 0)
        {
          *v7 = *v19;
          v22 = v19 + 1;
          *((_QWORD *)this + 1) = v22;
          a1[12] |= 0x10u;
          if ((unint64_t)v22 < v15)
            goto LABEL_48;
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
        if (!(_DWORD)result)
          return result;
        v22 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        a1[12] |= 0x10u;
        if ((unint64_t)v22 >= v15)
          continue;
LABEL_48:
        if (*v22 != 48)
          continue;
        v20 = v22 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_50:
        if ((unint64_t)v20 < v15 && (*v20 & 0x80000000) == 0)
        {
          *v8 = *v20;
          v23 = v20 + 1;
          *((_QWORD *)this + 1) = v23;
          a1[12] |= 0x20u;
          if ((unint64_t)v23 < v15)
            goto LABEL_56;
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
        if (!(_DWORD)result)
          return result;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        a1[12] |= 0x20u;
        if ((unint64_t)v23 >= v24)
          continue;
LABEL_56:
        if (*v23 != 61)
          continue;
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_58:
        v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) != 0)
        {
          a1[10] = v25;
          a1[12] |= 0x40u;
          if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v12 = TagFallback & 7;
        if (v12 == 5)
          goto LABEL_20;
        goto LABEL_35;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v17 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v17 < v15)
          goto LABEL_27;
        goto LABEL_38;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_42;
      case 6u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_50;
      case 7u:
        v12 = TagFallback & 7;
        if (v12 != 5)
          goto LABEL_35;
        goto LABEL_58;
      default:
        v12 = TagFallback & 7;
LABEL_35:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v9, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1001B36E4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 36), a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x40) == 0)
  {
LABEL_8:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 40), a3);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_17:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001B37F8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  int v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  _QWORD *v15;

  v4 = *((_DWORD *)this + 12);
  if ((v4 & 1) != 0)
  {
    v8 = *((_DWORD *)this + 4);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    v4 = *((_DWORD *)this + 12);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v9 = *((_DWORD *)this + 5);
  *(_BYTE *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  v4 = *((_DWORD *)this + 12);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  v10 = *((_DWORD *)this + 6);
  *(_BYTE *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 12) & 8) == 0)
  {
LABEL_5:
    if ((*((_BYTE *)this + 48) & 0x10) == 0)
      goto LABEL_6;
LABEL_17:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(_BYTE *)a2 = 40;
    if (v12 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
      if ((*((_BYTE *)this + 48) & 0x20) != 0)
        goto LABEL_21;
    }
    else
    {
      *(_BYTE *)(a2 + 1) = (_BYTE)v12;
      a2 += 2;
      if ((*((_BYTE *)this + 48) & 0x20) != 0)
        goto LABEL_21;
    }
LABEL_7:
    if ((*((_BYTE *)this + 48) & 0x40) == 0)
      goto LABEL_8;
LABEL_25:
    v14 = *((_DWORD *)this + 10);
    *(_BYTE *)a2 = 61;
    *(_DWORD *)(a2 + 1) = v14;
    a2 += 5;
    v15 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v15;
    if (!v15)
      return a2;
    goto LABEL_26;
  }
LABEL_13:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  *(_BYTE *)a2 = 32;
  if (v11 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)a2 + 1, a3);
    if ((*((_BYTE *)this + 48) & 0x10) != 0)
      goto LABEL_17;
  }
  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v11;
    a2 += 2;
    if ((*((_BYTE *)this + 48) & 0x10) != 0)
      goto LABEL_17;
  }
LABEL_6:
  if ((*((_BYTE *)this + 48) & 0x20) == 0)
    goto LABEL_7;
LABEL_21:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  *(_BYTE *)a2 = 48;
  if (v13 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)a2 + 1, a3);
    if ((*((_BYTE *)this + 48) & 0x40) != 0)
      goto LABEL_25;
  }
  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v13;
    a2 += 2;
    if ((*((_BYTE *)this + 48) & 0x40) != 0)
      goto LABEL_25;
  }
LABEL_8:
  v7 = (_QWORD *)*((_QWORD *)this + 1);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v5 = v7;
  if (!v7)
    return a2;
LABEL_26:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001B39FC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  uint64_t v15;

  v3 = *(unsigned __int8 *)(a1 + 48);
  if (*(_BYTE *)(a1 + 48))
  {
    v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0)
      v4 += 5;
    if ((v3 & 4) != 0)
      LODWORD(v5) = v4 + 5;
    else
      LODWORD(v5) = v4;
    if ((v3 & 8) == 0)
    {
      if ((v3 & 0x10) == 0)
        goto LABEL_9;
LABEL_17:
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v11 >= 0x80)
      {
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
        v3 = *(_DWORD *)(a1 + 48);
        LODWORD(v5) = v12 + 1 + v5;
        if ((v3 & 0x20) == 0)
          goto LABEL_25;
      }
      else
      {
        LODWORD(v5) = v5 + 2;
        if ((v3 & 0x20) == 0)
          goto LABEL_25;
      }
LABEL_21:
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
      if (v13 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2)
            + 1;
        v3 = *(_DWORD *)(a1 + 48);
      }
      else
      {
        v14 = 2;
      }
      LODWORD(v5) = v14 + v5;
LABEL_25:
      if ((v3 & 0x40) != 0)
        v5 = (v5 + 5);
      else
        v5 = v5;
      v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v7 = *(_QWORD **)(a1 + 8);
      if (!v7)
        goto LABEL_12;
      goto LABEL_29;
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      v3 = *(_DWORD *)(a1 + 48);
      LODWORD(v5) = v10 + 1 + v5;
      if ((v3 & 0x10) != 0)
        goto LABEL_17;
    }
    else
    {
      LODWORD(v5) = v5 + 2;
      if ((v3 & 0x10) != 0)
        goto LABEL_17;
    }
LABEL_9:
    if ((v3 & 0x20) == 0)
      goto LABEL_25;
    goto LABEL_21;
  }
  v5 = 0;
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 8);
  if (!v7)
  {
LABEL_12:
    *(_DWORD *)(a1 + 44) = v5;
    return v5;
  }
LABEL_29:
  if (*v7 == v7[1])
    goto LABEL_12;
  v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 44) = v15;
  return v15;
}

uint64_t sub_1001B3B30(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 2872);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10003F538(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B3BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B3BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B3C0C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B3C54()
{
  return 1;
}

uint64_t sub_1001B3C5C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419CA0;
}

void sub_1001B3CD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B3CE4(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v8;
  int v9;
  char v10;
  _BYTE v11[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 3182);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 32) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v9 = *(_DWORD *)(a2 + 20);
    a1[8] |= 2u;
    a1[5] = v9;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_7;
  }
  v8 = *(_DWORD *)(a2 + 16);
  a1[8] |= 1u;
  a1[4] = v8;
  v5 = *(_DWORD *)(a2 + 32);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    v6 = *(_DWORD *)(a2 + 24);
    a1[8] |= 4u;
    a1[6] = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001B3DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B3DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B3DE8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA180;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001B3E18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_1001B3E20()
{
  operator new();
}

void sub_1001B3E70()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B3E98(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 32))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B3EBC(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t result;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;

  v6 = (_DWORD)a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_28;
        v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v16) & 1) == 0)
          return 0;
        a1[4] = v16;
        a1[8] |= 1u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 21)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_19;
        }
      }
      if (v9 == 2)
        break;
      if (v9 == 3)
      {
        v10 = TagFallback & 7;
        if (v10 == 5)
        {
          v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0)
            return 0;
          goto LABEL_23;
        }
      }
      else
      {
        v10 = TagFallback & 7;
      }
LABEL_28:
      if (v10 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
    v10 = TagFallback & 7;
    if (v10 != 5)
      goto LABEL_28;
LABEL_19:
    v15 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v15) & 1) == 0)
      return 0;
    a1[5] = v15;
    a1[8] |= 2u;
    v12 = (_BYTE *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 < *((_QWORD *)this + 2) && *v12 == 29)
    {
      *((_QWORD *)this + 1) = v12 + 1;
      v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0)
        return 0;
LABEL_23:
      a1[6] = v14;
      a1[8] |= 4u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_1001B40C4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 32);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  if ((*(_DWORD *)(v4 + 32) & 4) == 0)
  {
LABEL_4:
    v8 = *(_QWORD **)(v4 + 8);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    v6 = v8;
    if (!v8)
      return this;
    goto LABEL_9;
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v4 + 24), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_9:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1001B4168(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  int v8;
  int v9;
  _QWORD *v10;

  v3 = a1[8];
  if ((v3 & 1) != 0)
  {
    v7 = a1[4];
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v7;
    a2 += 5;
    v3 = a1[8];
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
LABEL_8:
      v9 = a1[6];
      *(_BYTE *)a2 = 29;
      *(_DWORD *)(a2 + 1) = v9;
      a2 += 5;
      v10 = (_QWORD *)*((_QWORD *)a1 + 1);
      v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
      v5 = v10;
      if (!v10)
        return a2;
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = a1[5];
  *(_BYTE *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  if ((a1[8] & 4) != 0)
    goto LABEL_8;
LABEL_4:
  v6 = (_QWORD *)*((_QWORD *)a1 + 1);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_9:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001B4238(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 32);
  v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0)
    v4 += 5;
  if ((v3 & 4) != 0)
    v4 += 5;
  if (*(_BYTE *)(a1 + 32))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 28) = v5;
  return v5;
}

uint64_t sub_1001B42A8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 3170);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001B3CE4(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B435C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B4370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B4384(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B43CC()
{
  return 1;
}

uint64_t sub_1001B43D4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419CB0;
}

void sub_1001B4448(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B445C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  _BYTE v14[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 3582);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    v8 = *(_DWORD *)(a2 + 16);
    a1[11] |= 1u;
    a1[4] = v8;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_14;
    }
  }
  else if ((*(_BYTE *)(a2 + 44) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_DWORD *)(a2 + 20);
  a1[11] |= 2u;
  a1[5] = v9;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10 = *(_DWORD *)(a2 + 24);
  a1[11] |= 4u;
  a1[6] = v10;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
LABEL_16:
    v12 = *(_DWORD *)(a2 + 32);
    a1[11] |= 0x10u;
    a1[8] = v12;
    if ((*(_DWORD *)(a2 + 44) & 0x20) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_10;
  }
LABEL_15:
  v11 = *(_DWORD *)(a2 + 28);
  a1[11] |= 8u;
  a1[7] = v11;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 0x10) != 0)
    goto LABEL_16;
LABEL_9:
  if ((v5 & 0x20) != 0)
  {
LABEL_10:
    v6 = *(_DWORD *)(a2 + 36);
    a1[11] |= 0x20u;
    a1[9] = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001B4598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B45AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B45C0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA230;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001B45F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001B45F8()
{
  operator new();
}

void sub_1001B4648()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B4670(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 44))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B4694(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  unint64_t v13;
  _BYTE *v14;
  char *v15;
  unint64_t v16;
  unsigned int v17;
  unint64_t v18;
  char *v19;
  uint64_t result;
  _BYTE *v21;
  unsigned int v22;
  unsigned int v23;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_36;
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v23) & 1) == 0)
          return 0;
        a1[4] = v23;
        a1[11] |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 21)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_36;
LABEL_15:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v23) & 1) == 0)
          return 0;
        a1[9] = v23;
        a1[11] |= 0x20u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 29)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_20:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v23) & 1) == 0)
          return 0;
        a1[5] = v23;
        a1[11] |= 2u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 37)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_25:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v23) & 1) == 0)
          return 0;
        a1[6] = v23;
        a1[11] |= 4u;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 != 40)
          continue;
        v15 = v14 + 1;
        *((_QWORD *)this + 1) = v15;
        v23 = 0;
        if ((unint64_t)v15 >= v13)
          goto LABEL_40;
LABEL_32:
        if (*v15 < 0)
        {
LABEL_40:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!(_DWORD)result)
            return result;
          v17 = v23;
          if (v23 <= 3)
          {
LABEL_34:
            a1[11] |= 8u;
            a1[7] = v17;
            goto LABEL_43;
          }
        }
        else
        {
          v17 = *v15;
          *((_QWORD *)this + 1) = v15 + 1;
          if (v17 <= 3)
            goto LABEL_34;
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 5, (int)v17);
LABEL_43:
        v21 = (_BYTE *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        if ((unint64_t)v21 >= v18 || *v21 != 48)
          continue;
        v19 = v21 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_46:
        v23 = 0;
        if ((unint64_t)v19 < v18 && (*v19 & 0x80000000) == 0)
        {
          v22 = *v19;
          *((_QWORD *)this + 1) = v19 + 1;
          if (v22 > 1)
            goto LABEL_53;
LABEL_49:
          a1[11] |= 0x10u;
          a1[8] = v22;
          if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2))
            goto LABEL_54;
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
        if (!(_DWORD)result)
          return result;
        v22 = v23;
        if (v23 <= 1)
          goto LABEL_49;
LABEL_53:
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, (int)v22);
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2))
          continue;
LABEL_54:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 5)
          goto LABEL_20;
        goto LABEL_36;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 5)
          goto LABEL_25;
        goto LABEL_36;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v15 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        v23 = 0;
        if ((unint64_t)v15 < v16)
          goto LABEL_32;
        goto LABEL_40;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v19 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_46;
      default:
        v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_1001B4A38(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 36), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 28), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 0x10) == 0)
  {
LABEL_7:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 32), (int)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_15:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001B4B30(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = *((_DWORD *)this + 11);
  if ((v4 & 1) != 0)
  {
    v8 = *((_DWORD *)this + 4);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    v4 = *((_DWORD *)this + 11);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  v9 = *((_DWORD *)this + 9);
  *(_BYTE *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v10 = *((_DWORD *)this + 5);
  *(_BYTE *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0)
      goto LABEL_6;
LABEL_13:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
    *(_BYTE *)a2 = 40;
    if ((v12 & 0x80000000) != 0)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, a2 + 1, a3);
      if ((*((_BYTE *)this + 44) & 0x10) != 0)
        goto LABEL_20;
    }
    else if (v12 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
      if ((*((_BYTE *)this + 44) & 0x10) != 0)
        goto LABEL_20;
    }
    else
    {
      *(_BYTE *)(a2 + 1) = (_BYTE)v12;
      a2 += 2;
      if ((*((_BYTE *)this + 44) & 0x10) != 0)
        goto LABEL_20;
    }
LABEL_7:
    v7 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v7;
    if (!v7)
      return a2;
    goto LABEL_27;
  }
LABEL_12:
  v11 = *((_DWORD *)this + 6);
  *(_BYTE *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 8) != 0)
    goto LABEL_13;
LABEL_6:
  if ((*((_BYTE *)this + 44) & 0x10) == 0)
    goto LABEL_7;
LABEL_20:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *(_BYTE *)a2 = 48;
  if ((v13 & 0x80000000) != 0)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, a2 + 1, a3);
    v15 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v15;
    if (!v15)
      return a2;
  }
  else if (v13 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)a2 + 1, a3);
    v16 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v16;
    if (!v16)
      return a2;
  }
  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v13;
    a2 += 2;
    v14 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v14;
    if (!v14)
      return a2;
  }
LABEL_27:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001B4D20(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  uint64_t v13;

  v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(_BYTE *)(a1 + 44))
  {
    v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0)
      v4 += 5;
    if ((v3 & 4) != 0)
      LODWORD(v5) = v4 + 5;
    else
      LODWORD(v5) = v4;
    if ((v3 & 8) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v6 & 0x80000000) != 0)
      {
        v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        v7 = 2;
      }
      LODWORD(v5) = v7 + v5;
    }
    if ((v3 & 0x10) != 0)
    {
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if ((v11 & 0x80000000) != 0)
      {
        v12 = 11;
      }
      else if (v11 >= 0x80)
      {
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2)
            + 1;
        v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        v12 = 2;
      }
      LODWORD(v5) = v12 + v5;
    }
    if ((v3 & 0x20) != 0)
      v5 = (v5 + 5);
    else
      v5 = v5;
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v9 = *(_QWORD **)(a1 + 8);
    if (!v9)
      goto LABEL_12;
  }
  else
  {
    v5 = 0;
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v9 = *(_QWORD **)(a1 + 8);
    if (!v9)
    {
LABEL_12:
      *(_DWORD *)(a1 + 40) = v5;
      return v5;
    }
  }
  if (*v9 == v9[1])
    goto LABEL_12;
  v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)
      + v5;
  *(_DWORD *)(a1 + 40) = v13;
  return v13;
}

uint64_t sub_1001B4E28(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 3570);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001B445C(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B4EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B4EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B4F04(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B4F4C()
{
  return 1;
}

uint64_t sub_1001B4F54()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419CC0;
}

void sub_1001B4FC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B4FDC(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  _DWORD *v10;
  uint64_t v11;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 3951);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
    LOBYTE(v4) = *(_BYTE *)(a2 + 44);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  else
  {
    LOBYTE(v4) = *(_BYTE *)(a2 + 44);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(_DWORD *)(a1 + 16) = v6;
    v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0)
        goto LABEL_8;
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  v7 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_DWORD *)(a1 + 20) = v7;
  v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0)
      goto LABEL_9;
LABEL_14:
    v9 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 28) = v9;
    if ((*(_DWORD *)(a2 + 44) & 0x10) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_15;
  }
LABEL_13:
  v8 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 4u;
  *(_DWORD *)(a1 + 24) = v8;
  v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 8) != 0)
    goto LABEL_14;
LABEL_9:
  if ((v4 & 0x10) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_15:
  *(_DWORD *)(a1 + 44) |= 0x10u;
  v10 = *(_DWORD **)(a1 + 32);
  if (!v10)
    operator new();
  v11 = *(_QWORD *)(a2 + 32);
  if (!v11)
    v11 = *(_QWORD *)(qword_10041AFE0 + 32);
  sub_1001B5BF0(v10, v11);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001B5168()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001B5190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B51A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B51B8(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1003FA2E0;
  if ((_QWORD *)qword_10041AFE0 != a1)
  {
    v2 = a1[4];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001B5210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001B5218()
{
  operator new();
}

void sub_1001B5268()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001B5290(uint64_t this)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  v2 = *(_BYTE *)(this + 44);
  if (v2)
  {
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = *(_QWORD *)(this + 32);
      if (this)
      {
        if (*(_BYTE *)(this + 28))
          *(_QWORD *)(this + 16) = 0;
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B52FC(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 28))
    *(_QWORD *)(a1 + 16) = 0;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B531C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  _BYTE *v14;
  _DWORD *v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v21;
  int v22;
  BOOL v23;
  int v24;
  uint64_t result;
  unsigned int v26;

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_36;
        v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v26) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 16) = v26;
        *(_DWORD *)(a1 + 44) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 21)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
LABEL_15:
        v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v26) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 20) = v26;
        *(_DWORD *)(a1 + 44) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 29)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_20:
        v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v26) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 24) = v26;
        *(_DWORD *)(a1 + 44) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 37)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_25:
        v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v26) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 28) = v26;
        v13 = *(_DWORD *)(a1 + 44) | 8;
        *(_DWORD *)(a1 + 44) = v13;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 != 42)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
        *(_DWORD *)(a1 + 44) = v13 | 0x10;
        v15 = *(_DWORD **)(a1 + 32);
        if (!v15)
LABEL_32:
          operator new();
LABEL_33:
        v26 = 0;
        v16 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0;
        }
        else
        {
          v26 = *v16;
          *((_QWORD *)this + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)this + 14);
        v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 < v18)
        {
          v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
          if (sub_1001B5E50(v15, this, v20, v21))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
              v22 = *((_DWORD *)this + 14);
              v23 = __OFSUB__(v22, 1);
              v24 = v22 - 1;
              if (v24 < 0 == v23)
                *((_DWORD *)this + 14) = v24;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 == 5)
          goto LABEL_15;
        goto LABEL_36;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 5)
          goto LABEL_20;
        goto LABEL_36;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 5)
          goto LABEL_25;
        goto LABEL_36;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_36;
        *(_DWORD *)(a1 + 44) |= 0x10u;
        v15 = *(_DWORD **)(a1 + 32);
        if (!v15)
          goto LABEL_32;
        goto LABEL_33;
      default:
        v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

void sub_1001B5684()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001B56AC(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x10) == 0)
  {
LABEL_6:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_16;
  }
LABEL_12:
  v10 = *(_QWORD *)(v5 + 32);
  if (v10)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
    v11 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v11;
    if (!v11)
      return this;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(qword_10041AFE0 + 32), a2, a4);
    v12 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v12;
    if (!v12)
      return this;
  }
LABEL_16:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001B57B0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  _DWORD *v9;
  unsigned int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  _QWORD *v14;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v15;
  _QWORD *v16;
  int v17;
  _QWORD *v18;
  _QWORD *v19;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v20;
  _QWORD *v21;

  v4 = *((_DWORD *)this + 11);
  if ((v4 & 1) != 0)
  {
    v5 = *((_DWORD *)this + 4);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v5;
    a2 += 5;
    v4 = *((_DWORD *)this + 11);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v6 = *((_DWORD *)this + 5);
  *(_BYTE *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v6;
  a2 += 5;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  v7 = *((_DWORD *)this + 6);
  *(_BYTE *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0)
      goto LABEL_24;
    goto LABEL_11;
  }
LABEL_10:
  v8 = *((_DWORD *)this + 7);
  *(_BYTE *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 0x10) == 0)
    goto LABEL_24;
LABEL_11:
  v9 = (_DWORD *)*((_QWORD *)this + 4);
  if (v9)
  {
    *(_BYTE *)a2 = 42;
    v10 = a2 + 1;
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[6];
    if (v11 <= 0x7F)
      goto LABEL_13;
  }
  else
  {
    v9 = *(_DWORD **)(qword_10041AFE0 + 32);
    *(_BYTE *)a2 = 42;
    v10 = a2 + 1;
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[6];
    if (v11 <= 0x7F)
    {
LABEL_13:
      *(_BYTE *)(a2 + 1) = (_BYTE)v11;
      a2 += 2;
      v12 = v9[7];
      if ((v12 & 1) == 0)
        goto LABEL_18;
      goto LABEL_17;
    }
  }
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v10, a3);
  v12 = v9[7];
  if ((v12 & 1) != 0)
  {
LABEL_17:
    v13 = v9[4];
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v13;
    a2 += 5;
    v12 = v9[7];
  }
LABEL_18:
  if ((v12 & 2) != 0)
  {
    v17 = v9[5];
    *(_BYTE *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v17;
    a2 += 5;
    v18 = (_QWORD *)*((_QWORD *)v9 + 1);
    v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 2);
    v14 = v18;
    if (!v18)
      goto LABEL_24;
  }
  else
  {
    v16 = (_QWORD *)*((_QWORD *)v9 + 1);
    v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 2);
    v14 = v16;
    if (!v16)
      goto LABEL_24;
  }
  if (*v14 != v14[1])
    a2 = wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
LABEL_24:
  v21 = (_QWORD *)*((_QWORD *)this + 1);
  v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v19 = v21;
  if (!v21 || *v19 == v19[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v20, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001B59D8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  _QWORD *v10;
  int v11;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v12;
  _QWORD *v13;
  uint64_t v15;

  v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(_BYTE *)(a1 + 44))
  {
    v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0)
      v4 += 5;
    if ((v3 & 4) != 0)
      v4 += 5;
    if ((v3 & 8) != 0)
      v5 = v4 + 5;
    else
      v5 = v4;
    if ((v3 & 0x10) != 0)
    {
      v6 = *(_QWORD *)(a1 + 32);
      if (!v6)
        v6 = *(_QWORD *)(qword_10041AFE0 + 32);
      v7 = *(unsigned __int8 *)(v6 + 28);
      v8 = (v7 << 31 >> 31) & 5;
      if ((v7 & 2) != 0)
        v8 += 5;
      if (*(_BYTE *)(v6 + 28))
        LODWORD(v9) = v8;
      else
        LODWORD(v9) = 0;
      v10 = *(_QWORD **)(v6 + 8);
      if (!v10 || *v10 == v10[1])
      {
        *(_DWORD *)(v6 + 24) = (_DWORD)v9;
        v11 = 1;
      }
      else
      {
        v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 8), a2)+ v9);
        *(_DWORD *)(v6 + 24) = (_DWORD)v9;
        if (v9 >= 0x80)
          v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
        else
          v11 = 1;
      }
      v5 = (v5 + (_DWORD)v9 + v11 + 1);
      v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v13 = *(_QWORD **)(a1 + 8);
      if (!v13)
        goto LABEL_23;
      goto LABEL_27;
    }
  }
  else
  {
    v5 = 0;
  }
  v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v13 = *(_QWORD **)(a1 + 8);
  if (!v13)
  {
LABEL_23:
    *(_DWORD *)(a1 + 40) = v5;
    return v5;
  }
LABEL_27:
  if (*v13 == v13[1])
    goto LABEL_23;
  v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v12, a2)
      + v5;
  *(_DWORD *)(a1 + 40) = v15;
  return v15;
}

uint64_t sub_1001B5B14(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 3939);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001B4FDC((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B5BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B5BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B5BF0(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 4207);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v6;
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001B5CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B5CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B5CCC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B5D14()
{
  return 1;
}

uint64_t sub_1001B5D1C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419CD0;
}

void sub_1001B5D90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001B5DA4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA390;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001B5DD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001B5DDC()
{
  operator new();
}

void sub_1001B5E28()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001B5E50(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  uint64_t result;
  unsigned int v12;
  unsigned int v13;

  v6 = (_DWORD)a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v9 = TagFallback & 7;
        if (v9 == 5)
        {
          v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
            return 0;
          goto LABEL_17;
        }
      }
      else
      {
        v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
    v9 = TagFallback & 7;
    if (v9 != 5)
      goto LABEL_22;
    v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0)
      return 0;
    a1[4] = v13;
    a1[7] |= 1u;
    v10 = (_BYTE *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 < *((_QWORD *)this + 2) && *v10 == 21)
    {
      *((_QWORD *)this + 1) = v10 + 1;
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
        return 0;
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_1001B5FF8(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      v8 = *(_QWORD **)(v4 + 8);
      v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      v6 = v8;
      if (!v8)
        return this;
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_7:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1001B6080(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  int v8;
  _QWORD *v9;

  v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = a1[5];
    *(_BYTE *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    v9 = (_QWORD *)*((_QWORD *)a1 + 1);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    v5 = v9;
    if (!v9)
      return a2;
    goto LABEL_7;
  }
  v7 = a1[4];
  *(_BYTE *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0)
    goto LABEL_6;
LABEL_3:
  v6 = (_QWORD *)*((_QWORD *)a1 + 1);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_7:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001B6118(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 28);
  v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0)
    v4 += 5;
  if (*(_BYTE *)(a1 + 28))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001B617C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 4195);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001B5BF0(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B6230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B6244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B6258(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B62A0()
{
  return 1;
}

uint64_t sub_1001B62A8()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419CE0;
}

void sub_1001B631C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001B6330(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA440;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001B6360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001B6368()
{
  operator new();
}

void sub_1001B63BC()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B63E4(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 44))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 29) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B6408(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x20) == 0)
  {
LABEL_7:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_15:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001B6500(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  _QWORD *v13;

  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) != 0)
  {
    v7 = *(_DWORD *)(a1 + 16);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v7;
    a2 += 5;
    v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_DWORD *)(a1 + 20);
  *(_BYTE *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v9 = *(_DWORD *)(a1 + 24);
  *(_BYTE *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10 = *(_DWORD *)(a1 + 28);
  *(_BYTE *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0)
      goto LABEL_7;
LABEL_14:
    v12 = *(_BYTE *)(a1 + 36);
    *(_BYTE *)a2 = 48;
    *(_BYTE *)(a2 + 1) = v12;
    a2 += 2;
    v13 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v13;
    if (!v13)
      return a2;
    goto LABEL_15;
  }
LABEL_13:
  v11 = *(_DWORD *)(a1 + 32);
  *(_BYTE *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  if ((*(_DWORD *)(a1 + 44) & 0x20) != 0)
    goto LABEL_14;
LABEL_7:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_15:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001B6660(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;

  v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(_BYTE *)(a1 + 44))
  {
    v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0)
      v4 += 5;
    if ((v3 & 4) != 0)
      v4 += 5;
    if ((v3 & 8) != 0)
      v4 += 5;
    if ((v3 & 0x10) != 0)
      v4 += 5;
    if ((v3 & 0x20) != 0)
      v5 = v4 + 2;
    else
      v5 = v4;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_14;
  }
  else
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
    {
LABEL_14:
      *(_DWORD *)(a1 + 40) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1])
    goto LABEL_14;
  v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 40) = v9;
  return v9;
}

uint64_t sub_1001B6718(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 4575);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000A8690((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B67CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B67E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B67F4(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B683C()
{
  return 1;
}

uint64_t sub_1001B6844()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419CF0;
}

void sub_1001B68B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001B68CC(_QWORD *a1)
{
  *a1 = off_1003FA4F0;
  if (a1[5])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001B691C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_1001B6924()
{
  operator new();
}

void sub_1001B6978()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001B69A0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v13;
  _BYTE *v14;
  unint64_t v15;
  _BYTE *v16;
  char *v17;
  unsigned int v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  char *v25;
  uint64_t result;
  _BYTE *v27;
  _BYTE *v28;
  unsigned int v29;
  _BYTE *v30;
  _BYTE *v31;
  unsigned __int8 *v32;
  int v33;
  int v34;
  signed int v35;
  int v36;
  uint64_t v37;
  int v38;
  _BYTE *v39;
  _BYTE *v40;
  unsigned __int8 *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;

  v6 = a1 + 40;
  v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  v8 = (unsigned int *)(a1 + 60);
  v9 = (unsigned int *)(a1 + 64);
  v10 = (unsigned int *)(a1 + 68);
  while (1)
  {
LABEL_2:
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v11;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if (v13 != 5)
          goto LABEL_44;
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 16) = v44;
        *(_DWORD *)(a1 + 76) |= 1u;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 != 21)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
        goto LABEL_15;
      case 2u:
        v13 = TagFallback & 7;
        if (v13 != 5)
          goto LABEL_44;
LABEL_15:
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 20) = v44;
        *(_DWORD *)(a1 + 76) |= 2u;
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 != 24)
          continue;
        v17 = v16 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_21:
        v44 = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!(_DWORD)result)
            return result;
          v18 = v44;
          if (v44 <= 2)
          {
LABEL_24:
            *(_DWORD *)(a1 + 76) |= 4u;
            *(_DWORD *)(a1 + 24) = v18;
            goto LABEL_53;
          }
        }
        else
        {
          v18 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
          if (v18 <= 2)
            goto LABEL_24;
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 3, (int)v18);
LABEL_53:
        v27 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v27 >= *((_QWORD *)this + 2) || *v27 != 37)
          continue;
        *((_QWORD *)this + 1) = v27 + 1;
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0)
          return 0;
LABEL_56:
        *(_DWORD *)(a1 + 28) = v44;
        *(_DWORD *)(a1 + 76) |= 8u;
        v28 = (_BYTE *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        if ((unint64_t)v28 >= v19 || *v28 != 40)
          continue;
        v20 = v28 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_59:
        v44 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!(_DWORD)result)
            return result;
          v29 = v44;
          if (v44 <= 2)
          {
LABEL_62:
            *(_DWORD *)(a1 + 76) |= 0x10u;
            *(_DWORD *)(a1 + 32) = v29;
            goto LABEL_66;
          }
        }
        else
        {
          v29 = *v20;
          *((_QWORD *)this + 1) = v20 + 1;
          if (v29 <= 2)
            goto LABEL_62;
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 5, (int)v29);
LABEL_66:
        v30 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v30 >= *((_QWORD *)this + 2) || *v30 != 53)
          continue;
        *((_QWORD *)this + 1) = v30 + 1;
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0)
          return 0;
LABEL_69:
        *(_DWORD *)(a1 + 36) = v44;
        *(_DWORD *)(a1 + 76) |= 0x20u;
        v31 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v31 >= *((_QWORD *)this + 2) || *v31 != 61)
          continue;
        *((_QWORD *)this + 1) = v31 + 1;
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0)
          return 0;
LABEL_72:
        *(_DWORD *)(a1 + 56) = v44;
        *(_DWORD *)(a1 + 76) |= 0x40u;
        v32 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        if ((unint64_t)v32 < v21)
        {
          v33 = *v32;
          goto LABEL_90;
        }
        continue;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v17 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_21;
      case 4u:
        v13 = TagFallback & 7;
        if (v13 != 5)
          goto LABEL_44;
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0)
          return 0;
        goto LABEL_56;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v20 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_59;
      case 6u:
        v13 = TagFallback & 7;
        if (v13 != 5)
          goto LABEL_44;
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0)
          return 0;
        goto LABEL_69;
      case 7u:
        v13 = TagFallback & 7;
        if (v13 != 5)
          goto LABEL_44;
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0)
          return 0;
        goto LABEL_72;
      case 8u:
        v13 = TagFallback & 7;
        if (v13 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v22 = (char *)*((_QWORD *)this + 1);
            v21 = *((_QWORD *)this + 2);
            goto LABEL_74;
          }
LABEL_44:
          if (v13 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) != 0)continue;
          return 0;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(this, sub_1001B1CC0, v6);
        if (!(_DWORD)result)
          return result;
        break;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v23 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_93;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v24 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_101;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v25 = (char *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_109;
      default:
        v13 = TagFallback & 7;
        goto LABEL_44;
    }
    while (1)
    {
      v32 = (unsigned __int8 *)*((_QWORD *)this + 1);
      v21 = *((_QWORD *)this + 2);
      if ((unint64_t)v32 >= v21)
        goto LABEL_2;
      v33 = *v32;
      if (v33 == 72)
        break;
LABEL_90:
      if (v33 != 64)
        goto LABEL_2;
      v22 = (char *)(v32 + 1);
      *((_QWORD *)this + 1) = v22;
LABEL_74:
      v44 = 0;
      if ((unint64_t)v22 >= v21 || (v34 = *v22, v34 < 0))
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
        if (!(_DWORD)result)
          return result;
        v35 = v44;
        if (v44 > 9)
          goto LABEL_86;
LABEL_77:
        v36 = *(_DWORD *)(a1 + 48);
        v37 = *(_QWORD *)(a1 + 40);
        if (v36 == *(_DWORD *)(a1 + 52))
        {
          if (2 * v36 <= v36 + 1)
            v38 = v36 + 1;
          else
            v38 = 2 * v36;
          if (v38 <= 4)
            v38 = 4;
          *(_DWORD *)(a1 + 52) = v38;
          operator new[]();
        }
        *(_DWORD *)(a1 + 48) = v36 + 1;
        *(_DWORD *)(v37 + 4 * v36) = v35;
      }
      else
      {
        v35 = *v22;
        *((_QWORD *)this + 1) = v22 + 1;
        if (v34 <= 9u)
          goto LABEL_77;
LABEL_86:
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 8, v35);
      }
    }
    v23 = v32 + 1;
    *((_QWORD *)this + 1) = v23;
LABEL_93:
    if ((unint64_t)v23 >= v21 || (char)*v23 < 0)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
      if (!(_DWORD)result)
        return result;
      v39 = (_BYTE *)*((_QWORD *)this + 1);
      v21 = *((_QWORD *)this + 2);
      *(_DWORD *)(a1 + 76) |= 0x100u;
      if ((unint64_t)v39 < v21)
        goto LABEL_99;
      continue;
    }
    *v8 = *v23;
    v39 = v23 + 1;
    *((_QWORD *)this + 1) = v39;
    *(_DWORD *)(a1 + 76) |= 0x100u;
    if ((unint64_t)v39 >= v21)
      continue;
LABEL_99:
    if (*v39 == 80)
    {
      v24 = v39 + 1;
      *((_QWORD *)this + 1) = v24;
LABEL_101:
      if ((unint64_t)v24 >= v21 || (char)*v24 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
        if (!(_DWORD)result)
          return result;
        v40 = (_BYTE *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        *(_DWORD *)(a1 + 76) |= 0x200u;
        if ((unint64_t)v40 < v21)
          goto LABEL_107;
        continue;
      }
      *v9 = *v24;
      v40 = v24 + 1;
      *((_QWORD *)this + 1) = v40;
      *(_DWORD *)(a1 + 76) |= 0x200u;
      if ((unint64_t)v40 >= v21)
        continue;
LABEL_107:
      if (*v40 == 88)
        break;
    }
  }
  v25 = v40 + 1;
  *((_QWORD *)this + 1) = v25;
LABEL_109:
  if ((unint64_t)v25 < v21 && (*v25 & 0x80000000) == 0)
  {
    *v10 = *v25;
    v41 = (unsigned __int8 *)(v25 + 1);
    *((_QWORD *)this + 1) = v41;
    *(_DWORD *)(a1 + 76) |= 0x400u;
    if (v41 == (unsigned __int8 *)v21)
      goto LABEL_115;
    goto LABEL_2;
  }
  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
  if ((_DWORD)result)
  {
    v43 = *((_QWORD *)this + 1);
    v42 = *((_QWORD *)this + 2);
    *(_DWORD *)(a1 + 76) |= 0x400u;
    if (v43 != v42)
      goto LABEL_2;
LABEL_115:
    if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
      goto LABEL_2;
    *((_DWORD *)this + 8) = 0;
    result = 1;
    *((_BYTE *)this + 36) = 1;
  }
  return result;
}

uint64_t sub_1001B70A0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 76);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 36), a3);
  if ((*(_DWORD *)(v5 + 76) & 0x40) == 0)
  {
LABEL_8:
    if (*(int *)(v5 + 48) < 1)
      goto LABEL_19;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 56), a3);
  if (*(int *)(v5 + 48) < 1)
    goto LABEL_19;
LABEL_17:
  v7 = 0;
  do
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(*(_QWORD *)(v5 + 40) + 4 * v7++), (int)a2, a4);
  while (v7 < *(int *)(v5 + 48));
LABEL_19:
  v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x100) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 60), a2, a4);
    v8 = *(_DWORD *)(v5 + 76);
    if ((v8 & 0x200) == 0)
    {
LABEL_21:
      if ((v8 & 0x400) == 0)
        goto LABEL_22;
      goto LABEL_26;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 64), a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 0x400) == 0)
  {
LABEL_22:
    v11 = *(_QWORD **)(v5 + 8);
    v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v9 = v11;
    if (!v11)
      return this;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 68), a2, a4);
  v12 = *(_QWORD **)(v5 + 8);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v9 = v12;
  if (!v12)
    return this;
LABEL_27:
  if (*v9 != v9[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B7254(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  unint64_t v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  unint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  unint64_t v19;
  _QWORD *v20;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v21;
  _QWORD *v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  _QWORD *v27;
  _QWORD *v28;

  v3 = a2;
  v5 = *((_DWORD *)this + 19);
  if ((v5 & 1) != 0)
  {
    v8 = *((_DWORD *)this + 4);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)((char *)a2 + 1) = v8;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 5);
    v5 = *((_DWORD *)this + 19);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
LABEL_12:
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
      *(_BYTE *)v3 = 24;
      v11 = (unint64_t)v3 + 1;
      if ((v10 & 0x80000000) != 0)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, v11, a3);
        v6 = *((_DWORD *)this + 19);
        if ((v6 & 8) != 0)
          goto LABEL_19;
      }
      else if (v10 > 0x7F)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v11, a3);
        v6 = *((_DWORD *)this + 19);
        if ((v6 & 8) != 0)
          goto LABEL_19;
      }
      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v10;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        v6 = *((_DWORD *)this + 19);
        if ((v6 & 8) != 0)
          goto LABEL_19;
      }
LABEL_5:
      if ((v6 & 0x10) == 0)
        goto LABEL_6;
LABEL_20:
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
      *(_BYTE *)v3 = 40;
      v14 = (unint64_t)v3 + 1;
      if ((v13 & 0x80000000) != 0)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, v14, a3);
        v7 = *((_DWORD *)this + 19);
        if ((v7 & 0x20) != 0)
          goto LABEL_27;
      }
      else if (v13 > 0x7F)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v14, a3);
        v7 = *((_DWORD *)this + 19);
        if ((v7 & 0x20) != 0)
          goto LABEL_27;
      }
      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v13;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        v7 = *((_DWORD *)this + 19);
        if ((v7 & 0x20) != 0)
          goto LABEL_27;
      }
LABEL_7:
      if ((v7 & 0x40) == 0)
        goto LABEL_8;
      goto LABEL_28;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  v9 = *((_DWORD *)this + 5);
  *(_BYTE *)v3 = 21;
  *(_DWORD *)((char *)v3 + 1) = v9;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if ((*((_DWORD *)this + 19) & 4) != 0)
    goto LABEL_12;
LABEL_4:
  v6 = *((_DWORD *)this + 19);
  if ((v6 & 8) == 0)
    goto LABEL_5;
LABEL_19:
  v12 = *((_DWORD *)this + 7);
  *(_BYTE *)v3 = 37;
  *(_DWORD *)((char *)v3 + 1) = v12;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if ((*((_DWORD *)this + 19) & 0x10) != 0)
    goto LABEL_20;
LABEL_6:
  v7 = *((_DWORD *)this + 19);
  if ((v7 & 0x20) == 0)
    goto LABEL_7;
LABEL_27:
  v15 = *((_DWORD *)this + 9);
  *(_BYTE *)v3 = 53;
  *(_DWORD *)((char *)v3 + 1) = v15;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if ((*((_DWORD *)this + 19) & 0x40) == 0)
  {
LABEL_8:
    if (*((int *)this + 12) < 1)
      goto LABEL_36;
    goto LABEL_29;
  }
LABEL_28:
  v16 = *((_DWORD *)this + 14);
  *(_BYTE *)v3 = 61;
  *(_DWORD *)((char *)v3 + 1) = v16;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if (*((int *)this + 12) < 1)
    goto LABEL_36;
LABEL_29:
  v17 = 0;
  do
  {
    while (1)
    {
      while (1)
      {
        v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 5) + 4 * v17);
        *(_BYTE *)v3 = 64;
        v19 = (unint64_t)v3 + 1;
        if ((v18 & 0x80000000) == 0)
          break;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v18, v19, a3);
        if (++v17 >= *((int *)this + 12))
          goto LABEL_36;
      }
      if (v18 > 0x7F)
        break;
      *((_BYTE *)v3 + 1) = (_BYTE)v18;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if (++v17 >= *((int *)this + 12))
        goto LABEL_36;
    }
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v19, a3);
    ++v17;
  }
  while (v17 < *((int *)this + 12));
LABEL_36:
  if ((*((_BYTE *)this + 77) & 1) == 0)
  {
    if ((*((_BYTE *)this + 77) & 2) == 0)
      goto LABEL_38;
LABEL_46:
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)v3 = 80;
    if (v25 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)v3 + 1, a3);
      if ((*((_BYTE *)this + 77) & 4) != 0)
        goto LABEL_50;
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v25;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((_BYTE *)this + 77) & 4) != 0)
        goto LABEL_50;
    }
LABEL_39:
    v22 = (_QWORD *)*((_QWORD *)this + 1);
    v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v20 = v22;
    if (!v22)
      return v3;
    goto LABEL_40;
  }
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  *(_BYTE *)v3 = 72;
  if (v24 > 0x7F)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v3 + 1, a3);
    if ((*((_BYTE *)this + 77) & 2) != 0)
      goto LABEL_46;
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v24;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((_BYTE *)this + 77) & 2) != 0)
      goto LABEL_46;
  }
LABEL_38:
  if ((*((_BYTE *)this + 77) & 4) == 0)
    goto LABEL_39;
LABEL_50:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  *(_BYTE *)v3 = 88;
  if (v26 > 0x7F)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v3 + 1, a3);
    v28 = (_QWORD *)*((_QWORD *)this + 1);
    v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v20 = v28;
    if (!v28)
      return v3;
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v26;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    v27 = (_QWORD *)*((_QWORD *)this + 1);
    v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v20 = v27;
    if (!v27)
      return v3;
  }
LABEL_40:
  if (*v20 != v20[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v3, a3);
  return v3;
}

uint64_t sub_1001B75D4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  uint64_t v20;
  _QWORD *v21;

  v3 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v3)
  {
    if ((v3 & 2) != 0)
      v4 = ((v3 << 31 >> 31) & 5) + 5;
    else
      v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 4) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v5 & 0x80000000) != 0)
      {
        v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 76);
      }
      else
      {
        v6 = 2;
      }
      v4 += v6;
    }
    if ((v3 & 8) != 0)
      v4 += 5;
    if ((v3 & 0x10) != 0)
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if ((v8 & 0x80000000) != 0)
      {
        v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 76);
      }
      else
      {
        v9 = 2;
      }
      v4 += v9;
    }
    v10 = v4 + 5;
    if ((v3 & 0x20) == 0)
      v10 = v4;
    if ((v3 & 0x40) != 0)
      v7 = v10 + 5;
    else
      v7 = v10;
    if ((v3 & 0xFF00) == 0)
      goto LABEL_32;
  }
  else
  {
    v7 = 0;
    if ((v3 & 0xFF00) == 0)
      goto LABEL_32;
  }
  if ((v3 & 0x100) == 0)
  {
    if ((v3 & 0x200) == 0)
      goto LABEL_31;
    goto LABEL_44;
  }
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    v3 = *(_DWORD *)(a1 + 76);
    v7 += v17 + 1;
    if ((v3 & 0x200) != 0)
      goto LABEL_44;
  }
  else
  {
    v7 += 2;
    if ((v3 & 0x200) != 0)
    {
LABEL_44:
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if (v18 >= 0x80)
      {
        v7 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2)
            + 1;
        if ((*(_DWORD *)(a1 + 76) & 0x400) != 0)
          goto LABEL_48;
      }
      else
      {
        v7 += 2;
        if ((v3 & 0x400) != 0)
          goto LABEL_48;
      }
LABEL_32:
      v11 = *(_DWORD *)(a1 + 48);
      if (v11 >= 1)
        goto LABEL_33;
LABEL_52:
      v13 = 0;
      goto LABEL_53;
    }
  }
LABEL_31:
  if ((v3 & 0x400) == 0)
    goto LABEL_32;
LABEL_48:
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
  if (v19 >= 0x80)
  {
    v7 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    v11 = *(_DWORD *)(a1 + 48);
    if (v11 < 1)
      goto LABEL_52;
  }
  else
  {
    v7 += 2;
    v11 = *(_DWORD *)(a1 + 48);
    if (v11 < 1)
      goto LABEL_52;
  }
LABEL_33:
  v12 = 0;
  v13 = 0;
  do
  {
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 40)
                                                                                           + 4 * v12);
    if ((v15 & 0x80000000) != 0)
    {
      v14 = 10;
    }
    else if (v15 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      v11 = *(_DWORD *)(a1 + 48);
    }
    else
    {
      v14 = 1;
    }
    v13 += v14;
    ++v12;
  }
  while (v12 < v11);
LABEL_53:
  v20 = (v13 + v7 + v11);
  v21 = *(_QWORD **)(a1 + 8);
  if (v21 && *v21 != v21[1])
    v20 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v20;
  *(_DWORD *)(a1 + 72) = v20;
  return v20;
}

uint64_t sub_1001B77F0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 5209);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100006F44((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B78A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B78B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B78CC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B7914()
{
  return 1;
}

uint64_t sub_1001B791C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D00;
}

void sub_1001B7990(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B79A4(_DWORD *a1, uint64_t a2)
{
  int v4;
  uint64_t v6;
  char v7;
  _BYTE v8[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v8, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 5467);
    v6 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v6);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_3;
  }
  if ((*(_BYTE *)(a2 + 24) & 1) != 0)
  {
LABEL_3:
    v4 = *(_DWORD *)(a2 + 16);
    a1[6] |= 1u;
    a1[4] = v4;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001B7A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B7A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B7A6C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA5A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001B7A9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 20) = a2;
  return result;
}

void sub_1001B7AA4()
{
  operator new();
}

void sub_1001B7AF4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B7B1C(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 24))
    *(_DWORD *)(a1 + 16) = 0;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B7B3C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  unsigned __int8 *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  uint64_t result;
  unsigned int v10;

  v6 = a1 + 8;
  do
  {
    while (1)
    {
      v7 = (unsigned __int8 *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 < *((_QWORD *)this + 2) && ((char)*v7 & 0x80000000) == 0)
        break;
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if ((_DWORD)TagFallback != 13)
        goto LABEL_5;
LABEL_10:
      v10 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v10) & 1) == 0)
        return 0;
      *(_DWORD *)(a1 + 16) = v10;
      *(_DWORD *)(a1 + 24) |= 1u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    *((_QWORD *)this + 1) = v7 + 1;
    if ((_DWORD)TagFallback == 13)
      goto LABEL_10;
LABEL_5:
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_1001B7C60(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;

  v4 = this;
  if ((*(_BYTE *)(this + 24) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
  v7 = *(_QWORD **)(v4 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v5 = v7;
  if (v7)
  {
    if (*v5 != v5[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v6, a2, a3);
  }
  return this;
}

uint64_t sub_1001B7CC0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;

  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v3 = *(_DWORD *)(a1 + 16);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v3;
    a2 += 5;
  }
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6 || *v5 == v5[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001B7D14(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  unsigned __int8 *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = *(_QWORD **)(a1 + 8);
  v3 = (unsigned __int8 *)(a1 + 8);
  v4 = v5;
  v6 = (v3[16] << 31 >> 31) & 5;
  if (v5 && *v4 != v4[1])
    v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)v3, a2)+ v6;
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

uint64_t sub_1001B7D64(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 5455);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001B79A4(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B7E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B7E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B7E40(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B7E88()
{
  return 1;
}

uint64_t sub_1001B7E90()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D18;
}

void sub_1001B7F04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B7F18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_1001B7F20()
{
  operator new();
}

void sub_1001B7F74()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B7F9C(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 76))
  {
    *(_QWORD *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 17) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B7FC8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t result;
  unint64_t v17;

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_45;
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v17;
        *(_DWORD *)(a1 + 76) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_45;
LABEL_15:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 24) = v17;
        *(_DWORD *)(a1 + 76) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 25)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_20:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 32) = v17;
        *(_DWORD *)(a1 + 76) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 33)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_25:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 40) = v17;
        *(_DWORD *)(a1 + 76) |= 8u;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 != 41)
          continue;
        *((_QWORD *)this + 1) = v13 + 1;
LABEL_30:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 48) = v17;
        *(_DWORD *)(a1 + 76) |= 0x10u;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 != 49)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
LABEL_35:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 64) = v17;
        *(_DWORD *)(a1 + 76) |= 0x40u;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 != 57)
          continue;
        *((_QWORD *)this + 1) = v15 + 1;
LABEL_40:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 56) = v17;
        *(_DWORD *)(a1 + 76) |= 0x20u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_20;
        goto LABEL_45;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_25;
        goto LABEL_45;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_30;
        goto LABEL_45;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_35;
        goto LABEL_45;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_40;
        goto LABEL_45;
      default:
        v9 = TagFallback & 7;
LABEL_45:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
    return result;
  }
}

uint64_t sub_1001B832C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 76);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 76);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
  v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v4 + 64), a3);
  if ((*(_DWORD *)(v4 + 76) & 0x20) == 0)
  {
LABEL_8:
    v8 = *(_QWORD **)(v4 + 8);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    v6 = v8;
    if (!v8)
      return this;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v4 + 56), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_17:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1001B8440(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 76);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)(a2 + 1) = v8;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  v9 = *(_QWORD *)(a1 + 32);
  *(_BYTE *)a2 = 25;
  *(_QWORD *)(a2 + 1) = v9;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  v10 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)a2 = 33;
  *(_QWORD *)(a2 + 1) = v10;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x40) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  v11 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)a2 = 41;
  *(_QWORD *)(a2 + 1) = v11;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 0x40) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0)
      goto LABEL_8;
LABEL_16:
    v13 = *(_QWORD *)(a1 + 56);
    *(_BYTE *)a2 = 57;
    *(_QWORD *)(a2 + 1) = v13;
    a2 += 9;
    v14 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v14;
    if (!v14)
      return a2;
    goto LABEL_17;
  }
LABEL_15:
  v12 = *(_QWORD *)(a1 + 64);
  *(_BYTE *)a2 = 49;
  *(_QWORD *)(a2 + 1) = v12;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 76) & 0x20) != 0)
    goto LABEL_16;
LABEL_8:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_17:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001B86D0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;

  v3 = *(unsigned __int8 *)(a1 + 76);
  if (*(_BYTE *)(a1 + 76))
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v4 += 9;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v4 += 9;
    if ((v3 & 0x10) != 0)
      v4 += 9;
    if ((v3 & 0x20) != 0)
      v4 += 9;
    if ((v3 & 0x40) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_16;
  }
  else
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
    {
LABEL_16:
      *(_DWORD *)(a1 + 72) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1])
    goto LABEL_16;
  v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 72) = v9;
  return v9;
}

uint64_t sub_1001B8794(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 5865);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000C4BB8((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B8848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B885C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B8870(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B88B8()
{
  return 1;
}

uint64_t sub_1001B88C0()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D28;
}

void sub_1001B8934(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B8948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001B8950()
{
  operator new();
}

void sub_1001B89A4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B89CC(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 44))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 29) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B89F0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  _BYTE *v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  _BYTE *v15;
  unint64_t v16;
  char *v17;
  uint64_t result;
  unint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  unsigned int v22;
  unsigned __int8 *v23;
  unsigned int v24;

  v6 = (unsigned int *)(a1 + 24);
  v7 = a1 + 8;
  while (2)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_32;
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 16) = v24;
        *(_DWORD *)(a1 + 44) |= 1u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 21)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
        goto LABEL_15;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_32;
LABEL_15:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 20) = v24;
        *(_DWORD *)(a1 + 44) |= 2u;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 != 24)
          continue;
        v14 = v13 + 1;
        *((_QWORD *)this + 1) = v14;
LABEL_21:
        if ((unint64_t)v14 < v12 && (*v14 & 0x80000000) == 0)
        {
          *v6 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          *(_DWORD *)(a1 + 44) |= 4u;
          if ((unint64_t)v15 < v12)
            goto LABEL_38;
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result)
          return result;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v15 >= v19)
          continue;
LABEL_38:
        if (*v15 != 37)
          continue;
        *((_QWORD *)this + 1) = v15 + 1;
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0)
          return 0;
LABEL_40:
        *(_DWORD *)(a1 + 28) = v24;
        *(_DWORD *)(a1 + 44) |= 8u;
        v20 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v20 >= *((_QWORD *)this + 2) || *v20 != 45)
          continue;
        *((_QWORD *)this + 1) = v20 + 1;
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0)
          return 0;
LABEL_43:
        *(_DWORD *)(a1 + 32) = v24;
        *(_DWORD *)(a1 + 44) |= 0x10u;
        v21 = (_BYTE *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        if ((unint64_t)v21 >= v16 || *v21 != 48)
          continue;
        v17 = v21 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_46:
        v24 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!(_DWORD)result)
            return result;
          v22 = v24;
          v23 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          v22 = *v17;
          v23 = (unsigned __int8 *)(v17 + 1);
          *((_QWORD *)this + 1) = v23;
        }
        *(_BYTE *)(a1 + 36) = v22 != 0;
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if (v23 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v14 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_21;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_32;
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0)
          return 0;
        goto LABEL_40;
      case 5u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_32;
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0)
          return 0;
        goto LABEL_43;
      case 6u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_46;
      default:
        v10 = TagFallback & 7;
LABEL_32:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1001B8D8C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x20) == 0)
  {
LABEL_7:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_15:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001B8E84(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  char v14;
  _QWORD *v15;

  v4 = *((_DWORD *)this + 11);
  if ((v4 & 1) != 0)
  {
    v9 = *((_DWORD *)this + 4);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v9;
    a2 += 5;
    v4 = *((_DWORD *)this + 11);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
LABEL_11:
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
      *(_BYTE *)a2 = 24;
      if (v11 > 0x7F)
      {
        a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)a2 + 1, a3);
        v5 = *((_DWORD *)this + 11);
        if ((v5 & 8) != 0)
          goto LABEL_15;
      }
      else
      {
        *(_BYTE *)(a2 + 1) = (_BYTE)v11;
        a2 += 2;
        v5 = *((_DWORD *)this + 11);
        if ((v5 & 8) != 0)
          goto LABEL_15;
      }
LABEL_5:
      if ((v5 & 0x10) == 0)
        goto LABEL_6;
      goto LABEL_16;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = *((_DWORD *)this + 5);
  *(_BYTE *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 4) != 0)
    goto LABEL_11;
LABEL_4:
  v5 = *((_DWORD *)this + 11);
  if ((v5 & 8) == 0)
    goto LABEL_5;
LABEL_15:
  v12 = *((_DWORD *)this + 7);
  *(_BYTE *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v12;
  a2 += 5;
  v5 = *((_DWORD *)this + 11);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0)
      goto LABEL_7;
LABEL_17:
    v14 = *((_BYTE *)this + 36);
    *(_BYTE *)a2 = 48;
    *(_BYTE *)(a2 + 1) = v14;
    a2 += 2;
    v15 = (_QWORD *)*((_QWORD *)this + 1);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v6 = v15;
    if (!v15)
      return a2;
    goto LABEL_18;
  }
LABEL_16:
  v13 = *((_DWORD *)this + 8);
  *(_BYTE *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 0x20) != 0)
    goto LABEL_17;
LABEL_7:
  v8 = (_QWORD *)*((_QWORD *)this + 1);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v6 = v8;
  if (!v8)
    return a2;
LABEL_18:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001B9018(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  unsigned int v11;
  uint64_t v12;

  v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(_BYTE *)(a1 + 44))
  {
    if ((v3 & 2) != 0)
      v4 = ((v3 << 31 >> 31) & 5) + 5;
    else
      v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 4) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        v6 = 2;
      }
      v4 += v6;
    }
    v11 = v4 + 5;
    if ((v3 & 8) == 0)
      v11 = v4;
    if ((v3 & 0x10) != 0)
      v11 += 5;
    if ((v3 & 0x20) != 0)
      v7 = v11 + 2;
    else
      v7 = v11;
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v9 = *(_QWORD **)(a1 + 8);
    if (!v9)
      goto LABEL_9;
  }
  else
  {
    v7 = 0;
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v9 = *(_QWORD **)(a1 + 8);
    if (!v9)
    {
LABEL_9:
      *(_DWORD *)(a1 + 40) = v7;
      return v7;
    }
  }
  if (*v9 == v9[1])
    goto LABEL_9;
  v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)
      + v7;
  *(_DWORD *)(a1 + 40) = v12;
  return v12;
}

uint64_t sub_1001B90EC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 6267);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100048C5C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001B91A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B91B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B91C8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001B9210()
{
  return 1;
}

uint64_t sub_1001B9218()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D38;
}

void sub_1001B928C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B92A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 296) = a2;
  return result;
}

uint64_t sub_1001B92A8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10041B018;
  if (!qword_10041B018)
  {
    sub_1001AF970(0, a2, a3, a4);
    return qword_10041B018;
  }
  return result;
}

void sub_1001B92E0()
{
  operator new();
}

void sub_1001B9364()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B938C(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 56))
  {
    *(_BYTE *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 12) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B93B4(uint64_t a1)
{
  int v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 60);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 36) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_WORD *)(a1 + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
    *(_QWORD *)(a1 + 48) = 0;
  v3 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 13) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B93F0(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B9410(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B9430(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 60))
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 13) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B9458(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  v2 = *(_DWORD *)(this + 44);
  if ((_BYTE)v2)
  {
    *(_WORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 36))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
        }
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    *(_QWORD *)(v1 + 26) = 0;
    v2 = *(_DWORD *)(v1 + 44);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 36) = 0;
    *(_BYTE *)(v1 + 34) = 0;
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B94E0(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 48))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_BYTE *)(a1 + 40) = 0;
    *(_QWORD *)(a1 + 32) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B9508(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 56))
  {
    *(_WORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 12) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001B9530(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  _QWORD *v10;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;

  v5 = this;
  v6 = *(_DWORD *)(this + 300);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 16), (unint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_52;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_56;
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_57;
  }
LABEL_56:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 44), a3);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
LABEL_61:
    v14 = *(_QWORD *)(v5 + 56);
    if (v14)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v14, a2, a4);
      v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x200) != 0)
        goto LABEL_65;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(qword_10041B018 + 56), a2, a4);
      v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x200) != 0)
        goto LABEL_65;
    }
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
LABEL_69:
    v16 = *(_QWORD *)(v5 + 72);
    if (v16)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v16, a2, a4);
      v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x800) != 0)
        goto LABEL_73;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_QWORD *)(qword_10041B018 + 72), a2, a4);
      v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x800) != 0)
        goto LABEL_73;
    }
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
LABEL_74:
    v17 = *(_QWORD *)(v5 + 80);
    if (v17)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v17, a2, a4);
      v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x2000) != 0)
        goto LABEL_78;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_QWORD *)(qword_10041B018 + 80), a2, a4);
      v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x2000) != 0)
        goto LABEL_78;
    }
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
LABEL_82:
    v19 = *(_QWORD *)(v5 + 104);
    if (v19)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v19, a2, a4);
      v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x8000) != 0)
        goto LABEL_86;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_QWORD *)(qword_10041B018 + 104), a2, a4);
      v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x8000) != 0)
        goto LABEL_86;
    }
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_87;
  }
LABEL_57:
  v13 = *(_QWORD *)(v5 + 48);
  if (v13)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v13, a2, a4);
    v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x100) != 0)
      goto LABEL_61;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_QWORD *)(qword_10041B018 + 48), a2, a4);
    v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x100) != 0)
      goto LABEL_61;
  }
LABEL_10:
  if ((v6 & 0x200) == 0)
    goto LABEL_11;
LABEL_65:
  v15 = *(_QWORD *)(v5 + 64);
  if (v15)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v15, a2, a4);
    v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x400) != 0)
      goto LABEL_69;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_QWORD *)(qword_10041B018 + 64), a2, a4);
    v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x400) != 0)
      goto LABEL_69;
  }
LABEL_12:
  if ((v6 & 0x800) == 0)
    goto LABEL_13;
LABEL_73:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(float *)(v5 + 96), a3);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x1000) != 0)
    goto LABEL_74;
LABEL_14:
  if ((v6 & 0x2000) == 0)
    goto LABEL_15;
LABEL_78:
  v18 = *(_QWORD *)(v5 + 88);
  if (v18)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v18, a2, a4);
    v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x4000) != 0)
      goto LABEL_82;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_QWORD *)(qword_10041B018 + 88), a2, a4);
    v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x4000) != 0)
      goto LABEL_82;
  }
LABEL_16:
  if ((v6 & 0x8000) == 0)
    goto LABEL_17;
LABEL_86:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(double *)(v5 + 112), a3);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_88;
  }
LABEL_87:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_DWORD *)(v5 + 100), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_89;
  }
LABEL_88:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (int)a2, *(float *)(v5 + 120), a3);
  v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_90;
  }
LABEL_89:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (int)a2, *(float *)(v5 + 124), a3);
  if ((*(_DWORD *)(v5 + 300) & 0x80000) == 0)
  {
LABEL_21:
    if ((*(_BYTE *)(v5 + 305) & 1) == 0)
      goto LABEL_22;
    goto LABEL_91;
  }
LABEL_90:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (int)a2, *(float *)(v5 + 128), a3);
  if ((*(_BYTE *)(v5 + 305) & 1) == 0)
  {
LABEL_22:
    v7 = *(_DWORD *)(v5 + 300);
    if ((v7 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_92;
  }
LABEL_91:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (int)a2, *(float *)(v5 + 248), a3);
  v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x200000) == 0)
  {
LABEL_23:
    if ((v7 & 0x400000) == 0)
      goto LABEL_24;
LABEL_93:
    v20 = *(_QWORD *)(v5 + 144);
    if (v20)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v20, a2, a4);
      v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x800000) != 0)
        goto LABEL_97;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(_QWORD *)(qword_10041B018 + 144), a2, a4);
      v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x800000) != 0)
        goto LABEL_97;
    }
LABEL_25:
    if ((v7 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_98;
  }
LABEL_92:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (int)a2, *(float *)(v5 + 136), a3);
  v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x400000) != 0)
    goto LABEL_93;
LABEL_24:
  if ((v7 & 0x800000) == 0)
    goto LABEL_25;
LABEL_97:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(_DWORD *)(v5 + 140), (int)a2, a4);
  v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v7 & 0x2000000) == 0)
      goto LABEL_27;
LABEL_99:
    v21 = *(_QWORD *)(v5 + 160);
    if (v21)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v21, a2, a4);
      v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x4000000) != 0)
        goto LABEL_103;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(_QWORD *)(qword_10041B018 + 160), a2, a4);
      v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x4000000) != 0)
        goto LABEL_103;
    }
LABEL_28:
    if ((v7 & 0x8000000) == 0)
      goto LABEL_29;
LABEL_107:
    v23 = *(_QWORD *)(v5 + 176);
    if (v23)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v23, a2, a4);
      v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x10000000) != 0)
        goto LABEL_111;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(_QWORD *)(qword_10041B018 + 176), a2, a4);
      v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x10000000) != 0)
        goto LABEL_111;
    }
LABEL_30:
    if ((v7 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_112;
  }
LABEL_98:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (int)a2, *(double *)(v5 + 152), a3);
  v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x2000000) != 0)
    goto LABEL_99;
LABEL_27:
  if ((v7 & 0x4000000) == 0)
    goto LABEL_28;
LABEL_103:
  v22 = *(_QWORD *)(v5 + 168);
  if (v22)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v22, a2, a4);
    v7 = *(_DWORD *)(v5 + 300);
    if ((v7 & 0x8000000) != 0)
      goto LABEL_107;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(_QWORD *)(qword_10041B018 + 168), a2, a4);
    v7 = *(_DWORD *)(v5 + 300);
    if ((v7 & 0x8000000) != 0)
      goto LABEL_107;
  }
LABEL_29:
  if ((v7 & 0x10000000) == 0)
    goto LABEL_30;
LABEL_111:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned __int8 *)(v5 + 192), (BOOL)a2, a4);
  v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v7 & 0x40000000) == 0)
      goto LABEL_32;
    goto LABEL_113;
  }
LABEL_112:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, (int)a2, *(double *)(v5 + 184), a3);
  v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v7 & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_114;
  }
LABEL_113:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned __int8 *)(v5 + 193), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 300) & 0x80000000) == 0)
  {
LABEL_33:
    v8 = *(_DWORD *)(v5 + 304);
    if ((v8 & 1) == 0)
      goto LABEL_34;
LABEL_115:
    v24 = *(_QWORD *)(v5 + 200);
    if (v24)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v24, a2, a4);
      v8 = *(_DWORD *)(v5 + 304);
      if ((v8 & 2) != 0)
        goto LABEL_119;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(_QWORD *)(qword_10041B018 + 200), a2, a4);
      v8 = *(_DWORD *)(v5 + 304);
      if ((v8 & 2) != 0)
        goto LABEL_119;
    }
LABEL_35:
    if ((v8 & 4) == 0)
      goto LABEL_36;
    goto LABEL_120;
  }
LABEL_114:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, (int)a2, *(float *)(v5 + 196), a3);
  v8 = *(_DWORD *)(v5 + 304);
  if ((v8 & 1) != 0)
    goto LABEL_115;
LABEL_34:
  if ((v8 & 2) == 0)
    goto LABEL_35;
LABEL_119:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned __int8 *)(v5 + 194), (BOOL)a2, a4);
  v8 = *(_DWORD *)(v5 + 304);
  if ((v8 & 4) == 0)
  {
LABEL_36:
    if ((v8 & 8) == 0)
      goto LABEL_37;
LABEL_124:
    v26 = *(_QWORD *)(v5 + 216);
    if (v26)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, v26, a2, a4);
      if ((*(_BYTE *)(v5 + 302) & 0x10) != 0)
        goto LABEL_128;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(_QWORD *)(qword_10041B018 + 216), a2, a4);
      if ((*(_BYTE *)(v5 + 302) & 0x10) != 0)
        goto LABEL_128;
    }
LABEL_38:
    v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x10) == 0)
      goto LABEL_39;
    goto LABEL_129;
  }
LABEL_120:
  v25 = *(_QWORD *)(v5 + 208);
  if (v25)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, v25, a2, a4);
    if ((*(_DWORD *)(v5 + 304) & 8) != 0)
      goto LABEL_124;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(_QWORD *)(qword_10041B018 + 208), a2, a4);
    if ((*(_DWORD *)(v5 + 304) & 8) != 0)
      goto LABEL_124;
  }
LABEL_37:
  if ((*(_BYTE *)(v5 + 302) & 0x10) == 0)
    goto LABEL_38;
LABEL_128:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, (int)a2, *(float *)(v5 + 132), a3);
  v9 = *(_DWORD *)(v5 + 304);
  if ((v9 & 0x10) == 0)
  {
LABEL_39:
    if ((v9 & 0x20) == 0)
      goto LABEL_40;
LABEL_130:
    v27 = *(_QWORD *)(v5 + 232);
    if (v27)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, v27, a2, a4);
      v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x40) != 0)
        goto LABEL_134;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(_QWORD *)(qword_10041B018 + 232), a2, a4);
      v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x40) != 0)
        goto LABEL_134;
    }
LABEL_41:
    if ((v9 & 0x80) == 0)
      goto LABEL_42;
LABEL_135:
    v28 = *(_QWORD *)(v5 + 240);
    if (v28)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, v28, a2, a4);
      v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x200) != 0)
        goto LABEL_139;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(_QWORD *)(qword_10041B018 + 240), a2, a4);
      v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x200) != 0)
        goto LABEL_139;
    }
LABEL_43:
    if ((v9 & 0x400) == 0)
      goto LABEL_44;
    goto LABEL_140;
  }
LABEL_129:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, (int)a2, *(float *)(v5 + 224), a3);
  v9 = *(_DWORD *)(v5 + 304);
  if ((v9 & 0x20) != 0)
    goto LABEL_130;
LABEL_40:
  if ((v9 & 0x40) == 0)
    goto LABEL_41;
LABEL_134:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, (int)a2, *(float *)(v5 + 228), a3);
  v9 = *(_DWORD *)(v5 + 304);
  if ((v9 & 0x80) != 0)
    goto LABEL_135;
LABEL_42:
  if ((v9 & 0x200) == 0)
    goto LABEL_43;
LABEL_139:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, (int)a2, *(float *)(v5 + 252), a3);
  v9 = *(_DWORD *)(v5 + 304);
  if ((v9 & 0x400) == 0)
  {
LABEL_44:
    if ((v9 & 0x800) == 0)
      goto LABEL_45;
LABEL_144:
    v30 = *(_QWORD *)(v5 + 264);
    if (v30)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, v30, a2, a4);
      v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x1000) != 0)
        goto LABEL_148;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, *(_QWORD *)(qword_10041B018 + 264), a2, a4);
      v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x1000) != 0)
        goto LABEL_148;
    }
LABEL_46:
    if ((v9 & 0x2000) == 0)
      goto LABEL_47;
LABEL_152:
    v32 = *(_QWORD *)(v5 + 280);
    if (v32)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, v32, a2, a4);
      if ((*(_DWORD *)(v5 + 304) & 0x4000) != 0)
        goto LABEL_156;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(_QWORD *)(qword_10041B018 + 280), a2, a4);
      if ((*(_DWORD *)(v5 + 304) & 0x4000) != 0)
        goto LABEL_156;
    }
LABEL_48:
    v12 = *(_QWORD **)(v5 + 8);
    v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v10 = v12;
    if (!v12)
      return this;
    goto LABEL_160;
  }
LABEL_140:
  v29 = *(_QWORD *)(v5 + 256);
  if (v29)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, v29, a2, a4);
    v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x800) != 0)
      goto LABEL_144;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, *(_QWORD *)(qword_10041B018 + 256), a2, a4);
    v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x800) != 0)
      goto LABEL_144;
  }
LABEL_45:
  if ((v9 & 0x1000) == 0)
    goto LABEL_46;
LABEL_148:
  v31 = *(_QWORD *)(v5 + 272);
  if (v31)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, v31, a2, a4);
    v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x2000) != 0)
      goto LABEL_152;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, *(_QWORD *)(qword_10041B018 + 272), a2, a4);
    v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x2000) != 0)
      goto LABEL_152;
  }
LABEL_47:
  if ((v9 & 0x4000) == 0)
    goto LABEL_48;
LABEL_156:
  v33 = *(_QWORD *)(v5 + 288);
  if (v33)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, v33, a2, a4);
    v34 = *(_QWORD **)(v5 + 8);
    v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v10 = v34;
    if (!v34)
      return this;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, *(_QWORD *)(qword_10041B018 + 288), a2, a4);
    v35 = *(_QWORD **)(v5 + 8);
    v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v10 = v35;
    if (!v35)
      return this;
  }
LABEL_160:
  if (*v10 != v10[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B9E00(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  unint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  unint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  unint64_t v14;
  int v15;
  int v16;
  _DWORD *v17;
  unsigned int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  _QWORD *v22;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v23;
  _QWORD *v24;
  int v25;
  int v26;
  _QWORD *v27;
  int v28;
  unsigned int *v29;
  unsigned int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int *v34;
  unsigned int v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int *v39;
  unsigned int v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  uint64_t v42;
  unsigned __int8 *v43;
  int v44;
  uint64_t v45;
  unsigned int v46;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unsigned int *v50;
  unsigned int v51;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v52;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v53;
  unsigned __int8 *v54;
  uint64_t v55;
  unsigned int v56;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v57;
  int v58;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v59;
  _QWORD *v60;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v61;
  _QWORD *v62;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v63;
  int v64;
  _QWORD *v65;
  int v66;
  int v67;
  int v68;
  uint64_t v69;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v70;
  unint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v79;
  int v80;
  _QWORD *v81;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v82;
  _QWORD *v83;
  int v84;
  int v85;
  int v86;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v87;
  unint64_t v88;
  uint64_t v89;
  unsigned int *v90;
  unsigned int v91;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v92;
  uint64_t v93;
  unsigned __int8 *v94;
  uint64_t v95;
  unsigned int v96;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v97;
  uint64_t v98;
  unsigned __int8 *v99;
  uint64_t v100;
  unsigned int v101;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v102;
  uint64_t v103;
  unsigned __int8 *v104;
  char v105;
  uint64_t v106;
  char v107;
  int v108;
  uint64_t v109;
  unsigned int v110;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v111;
  _BYTE *v112;
  unsigned __int8 *v113;
  char v114;
  uint64_t v115;
  unsigned int v116;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v117;
  _BYTE *v118;
  unsigned __int8 *v119;
  unsigned int *v120;
  unsigned int v121;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v122;
  uint64_t v123;
  unsigned __int8 *v124;
  int v125;
  int v126;
  uint64_t v127;
  unsigned int v128;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v129;
  _BYTE *v130;
  unsigned __int8 *v131;
  int v132;
  unsigned int *v133;
  unsigned int v134;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v135;
  uint64_t v136;
  unsigned __int8 *v137;
  int v138;
  uint64_t v139;
  unsigned int v140;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v141;
  int v142;
  uint64_t v143;
  _QWORD *v144;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  int v149;
  _QWORD *v150;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v151;
  _QWORD *v152;
  unsigned int *v153;
  unsigned int v154;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v155;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v156;
  unsigned __int8 *v157;
  unsigned int *v158;
  unsigned int v159;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v160;
  _BYTE *v161;
  unsigned __int8 *v162;
  uint64_t v163;
  unsigned int v164;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v165;
  uint64_t v166;
  unsigned __int8 *v167;
  uint64_t v168;
  unsigned int v169;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v170;
  _QWORD *v171;
  uint64_t v172;
  unsigned __int8 *v173;
  _QWORD *v174;

  v3 = a2;
  v5 = *((_DWORD *)this + 75);
  if ((v5 & 1) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 2);
    *(_BYTE *)a2 = 8;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v7, (unint64_t)a2 + 1, a3);
    if ((*((_DWORD *)this + 75) & 2) == 0)
    {
LABEL_3:
      if ((*((_BYTE *)this + 300) & 4) == 0)
        goto LABEL_4;
LABEL_15:
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
      *(_BYTE *)v3 = 24;
      v10 = (unint64_t)v3 + 1;
      if ((v9 & 0x80000000) != 0)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, v10, a3);
        if ((*((_BYTE *)this + 300) & 8) != 0)
          goto LABEL_22;
      }
      else if (v9 > 0x7F)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
        if ((*((_BYTE *)this + 300) & 8) != 0)
          goto LABEL_22;
      }
      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v9;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        if ((*((_BYTE *)this + 300) & 8) != 0)
          goto LABEL_22;
      }
LABEL_5:
      if ((*((_BYTE *)this + 300) & 0x10) == 0)
        goto LABEL_6;
LABEL_29:
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 9);
      *(_BYTE *)v3 = 40;
      v14 = (unint64_t)v3 + 1;
      if ((v13 & 0x80000000) != 0)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, v14, a3);
        v6 = *((_DWORD *)this + 75);
        if ((v6 & 0x20) != 0)
          goto LABEL_36;
      }
      else if (v13 > 0x7F)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v14, a3);
        v6 = *((_DWORD *)this + 75);
        if ((v6 & 0x20) != 0)
          goto LABEL_36;
      }
      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v13;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        v6 = *((_DWORD *)this + 75);
        if ((v6 & 0x20) != 0)
          goto LABEL_36;
      }
LABEL_7:
      if ((v6 & 0x40) == 0)
        goto LABEL_8;
LABEL_37:
      v16 = *((_DWORD *)this + 11);
      *(_BYTE *)v3 = 69;
      *(_DWORD *)((char *)v3 + 1) = v16;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
      if ((*((_DWORD *)this + 75) & 0x80) == 0)
        goto LABEL_53;
      goto LABEL_38;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  *(_BYTE *)v3 = 16;
  if (v8 > 0x7F)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    if ((*((_BYTE *)this + 300) & 4) != 0)
      goto LABEL_15;
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v8;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((_BYTE *)this + 300) & 4) != 0)
      goto LABEL_15;
  }
LABEL_4:
  if ((*((_BYTE *)this + 300) & 8) == 0)
    goto LABEL_5;
LABEL_22:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *(_BYTE *)v3 = 32;
  v12 = (unint64_t)v3 + 1;
  if ((v11 & 0x80000000) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
    if ((*((_BYTE *)this + 300) & 0x10) != 0)
      goto LABEL_29;
  }
  else if (v11 > 0x7F)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
    if ((*((_BYTE *)this + 300) & 0x10) != 0)
      goto LABEL_29;
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v11;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((_BYTE *)this + 300) & 0x10) != 0)
      goto LABEL_29;
  }
LABEL_6:
  v6 = *((_DWORD *)this + 75);
  if ((v6 & 0x20) == 0)
    goto LABEL_7;
LABEL_36:
  v15 = *((_DWORD *)this + 10);
  *(_BYTE *)v3 = 61;
  *(_DWORD *)((char *)v3 + 1) = v15;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  v6 = *((_DWORD *)this + 75);
  if ((v6 & 0x40) != 0)
    goto LABEL_37;
LABEL_8:
  if ((v6 & 0x80) == 0)
    goto LABEL_53;
LABEL_38:
  v17 = (_DWORD *)*((_QWORD *)this + 6);
  if (v17)
  {
    *(_BYTE *)v3 = 74;
    v18 = (_DWORD)v3 + 1;
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[7];
    if (v19 <= 0x7F)
      goto LABEL_40;
LABEL_43:
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, v18, a3);
    v20 = v17[8];
    if ((v20 & 1) == 0)
      goto LABEL_45;
    goto LABEL_44;
  }
  v17 = *(_DWORD **)(qword_10041B018 + 48);
  *(_BYTE *)v3 = 74;
  v18 = (_DWORD)v3 + 1;
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[7];
  if (v19 > 0x7F)
    goto LABEL_43;
LABEL_40:
  *((_BYTE *)v3 + 1) = (_BYTE)v19;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  v20 = v17[8];
  if ((v20 & 1) != 0)
  {
LABEL_44:
    v21 = v17[4];
    *(_BYTE *)v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v21;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    v20 = v17[8];
  }
LABEL_45:
  if ((v20 & 2) != 0)
  {
    v25 = v17[5];
    *(_BYTE *)v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v25;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    if ((v17[8] & 4) == 0)
    {
LABEL_47:
      v24 = (_QWORD *)*((_QWORD *)v17 + 1);
      v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v17 + 2);
      v22 = v24;
      if (!v24)
        goto LABEL_53;
      goto LABEL_51;
    }
  }
  else if ((v20 & 4) == 0)
  {
    goto LABEL_47;
  }
  v26 = v17[6];
  *(_BYTE *)v3 = 29;
  *(_DWORD *)((char *)v3 + 1) = v26;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  v27 = (_QWORD *)*((_QWORD *)v17 + 1);
  v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v17 + 2);
  v22 = v27;
  if (!v27)
    goto LABEL_53;
LABEL_51:
  if (*v22 != v22[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v23, v3, a3);
LABEL_53:
  v28 = *((_DWORD *)this + 75);
  if ((v28 & 0x100) != 0)
  {
    v29 = (unsigned int *)*((_QWORD *)this + 7);
    if (v29)
    {
      *(_BYTE *)v3 = 82;
      v30 = (_DWORD)v3 + 1;
      v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29[10];
      if (v31 <= 0x7F)
        goto LABEL_63;
    }
    else
    {
      v29 = *(unsigned int **)(qword_10041B018 + 56);
      *(_BYTE *)v3 = 82;
      v30 = (_DWORD)v3 + 1;
      v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29[10];
      if (v31 <= 0x7F)
      {
LABEL_63:
        *((_BYTE *)v3 + 1) = (_BYTE)v31;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B4B30((wireless_diagnostics::google::protobuf::internal::WireFormat *)v29, (uint64_t)v3 + 2, a3);
        v28 = *((_DWORD *)this + 75);
        if ((v28 & 0x200) != 0)
          goto LABEL_67;
LABEL_55:
        if ((v28 & 0x400) == 0)
          goto LABEL_56;
LABEL_73:
        v39 = (unsigned int *)*((_QWORD *)this + 9);
        if (v39)
        {
          *(_BYTE *)v3 = 98;
          v40 = (_DWORD)v3 + 1;
          v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[11];
          if (v41 <= 0x7F)
            goto LABEL_75;
        }
        else
        {
          v39 = *(unsigned int **)(qword_10041B018 + 72);
          *(_BYTE *)v3 = 98;
          v40 = (_DWORD)v3 + 1;
          v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[11];
          if (v41 <= 0x7F)
          {
LABEL_75:
            *((_BYTE *)v3 + 1) = (_BYTE)v41;
            v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B37F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, (uint64_t)v3 + 2, a3);
            v28 = *((_DWORD *)this + 75);
            if ((v28 & 0x800) != 0)
              goto LABEL_79;
LABEL_57:
            if ((v28 & 0x1000) == 0)
              goto LABEL_58;
LABEL_80:
            v45 = *((_QWORD *)this + 10);
            if (v45)
            {
              *(_BYTE *)v3 = 114;
              v46 = (_DWORD)v3 + 1;
              v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v45 + 40);
              if (v47 <= 0x7F)
                goto LABEL_82;
            }
            else
            {
              v45 = *(_QWORD *)(qword_10041B018 + 80);
              *(_BYTE *)v3 = 114;
              v46 = (_DWORD)v3 + 1;
              v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v45 + 40);
              if (v47 <= 0x7F)
              {
LABEL_82:
                *((_BYTE *)v3 + 1) = (_BYTE)v47;
                v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B6500(v45, (uint64_t)v3 + 2, a3);
                v28 = *((_DWORD *)this + 75);
                if ((v28 & 0x2000) != 0)
                  goto LABEL_86;
LABEL_59:
                if ((v28 & 0x4000) == 0)
                  goto LABEL_107;
                goto LABEL_92;
              }
            }
            v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v47, v46, a3);
            v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B6500(v45, v48, v49);
            v28 = *((_DWORD *)this + 75);
            if ((v28 & 0x2000) != 0)
              goto LABEL_86;
            goto LABEL_59;
          }
        }
        v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, v40, a3);
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B37F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, v42, v43);
        v28 = *((_DWORD *)this + 75);
        if ((v28 & 0x800) != 0)
          goto LABEL_79;
        goto LABEL_57;
      }
    }
    v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, v30, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B4B30((wireless_diagnostics::google::protobuf::internal::WireFormat *)v29, v32, v33);
    v28 = *((_DWORD *)this + 75);
    if ((v28 & 0x200) != 0)
      goto LABEL_67;
    goto LABEL_55;
  }
  if ((v28 & 0x200) == 0)
    goto LABEL_55;
LABEL_67:
  v34 = (unsigned int *)*((_QWORD *)this + 8);
  if (v34)
  {
    *(_BYTE *)v3 = 90;
    v35 = (_DWORD)v3 + 1;
    v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[10];
    if (v36 <= 0x7F)
      goto LABEL_69;
LABEL_72:
    v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, v35, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B57B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v37, v38);
    v28 = *((_DWORD *)this + 75);
    if ((v28 & 0x400) != 0)
      goto LABEL_73;
    goto LABEL_56;
  }
  v34 = *(unsigned int **)(qword_10041B018 + 64);
  *(_BYTE *)v3 = 90;
  v35 = (_DWORD)v3 + 1;
  v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[10];
  if (v36 > 0x7F)
    goto LABEL_72;
LABEL_69:
  *((_BYTE *)v3 + 1) = (_BYTE)v36;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B57B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, (uint64_t)v3 + 2, a3);
  v28 = *((_DWORD *)this + 75);
  if ((v28 & 0x400) != 0)
    goto LABEL_73;
LABEL_56:
  if ((v28 & 0x800) == 0)
    goto LABEL_57;
LABEL_79:
  v44 = *((_DWORD *)this + 24);
  *(_BYTE *)v3 = 109;
  *(_DWORD *)((char *)v3 + 1) = v44;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  v28 = *((_DWORD *)this + 75);
  if ((v28 & 0x1000) != 0)
    goto LABEL_80;
LABEL_58:
  if ((v28 & 0x2000) == 0)
    goto LABEL_59;
LABEL_86:
  v50 = (unsigned int *)*((_QWORD *)this + 11);
  if (v50)
  {
    *(_BYTE *)v3 = 122;
    v51 = (_DWORD)v3 + 1;
    v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v50[18];
    if (v52 <= 0x7F)
      goto LABEL_88;
LABEL_91:
    v53 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v52, v51, a3);
    v3 = sub_1001B7254((wireless_diagnostics::google::protobuf::internal::WireFormat *)v50, v53, v54);
    if ((*((_DWORD *)this + 75) & 0x4000) == 0)
      goto LABEL_107;
    goto LABEL_92;
  }
  v50 = *(unsigned int **)(qword_10041B018 + 88);
  *(_BYTE *)v3 = 122;
  v51 = (_DWORD)v3 + 1;
  v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v50[18];
  if (v52 > 0x7F)
    goto LABEL_91;
LABEL_88:
  *((_BYTE *)v3 + 1) = (_BYTE)v52;
  v3 = sub_1001B7254((wireless_diagnostics::google::protobuf::internal::WireFormat *)v50, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
  if ((*((_DWORD *)this + 75) & 0x4000) == 0)
    goto LABEL_107;
LABEL_92:
  v55 = *((_QWORD *)this + 13);
  if (v55)
  {
    *(_WORD *)v3 = 386;
    v56 = (_DWORD)v3 + 2;
    v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v55 + 36);
    if (v57 <= 0x7F)
      goto LABEL_94;
LABEL_97:
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v57, v56, a3);
    v58 = *(_DWORD *)(v55 + 40);
    if ((v58 & 1) == 0)
      goto LABEL_99;
    goto LABEL_98;
  }
  v55 = *(_QWORD *)(qword_10041B018 + 104);
  *(_WORD *)v3 = 386;
  v56 = (_DWORD)v3 + 2;
  v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v55 + 36);
  if (v57 > 0x7F)
    goto LABEL_97;
LABEL_94:
  *((_BYTE *)v3 + 2) = (_BYTE)v57;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  v58 = *(_DWORD *)(v55 + 40);
  if ((v58 & 1) != 0)
  {
LABEL_98:
    v59 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v55 + 16);
    *(_BYTE *)v3 = 8;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v59, (unint64_t)v3 + 1, a3);
    v58 = *(_DWORD *)(v55 + 40);
  }
LABEL_99:
  if ((v58 & 2) != 0)
  {
    v63 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v55 + 24);
    *(_BYTE *)v3 = 16;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v63, (unint64_t)v3 + 1, a3);
    if ((*(_DWORD *)(v55 + 40) & 4) == 0)
    {
LABEL_101:
      v62 = *(_QWORD **)(v55 + 8);
      v61 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v55 + 8);
      v60 = v62;
      if (!v62)
        goto LABEL_107;
      goto LABEL_105;
    }
  }
  else if ((v58 & 4) == 0)
  {
    goto LABEL_101;
  }
  v64 = *(_DWORD *)(v55 + 32);
  *(_BYTE *)v3 = 29;
  *(_DWORD *)((char *)v3 + 1) = v64;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  v65 = *(_QWORD **)(v55 + 8);
  v61 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v55 + 8);
  v60 = v65;
  if (!v65)
    goto LABEL_107;
LABEL_105:
  if (*v60 != v60[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v61, v3, a3);
LABEL_107:
  v66 = *((_DWORD *)this + 75);
  if ((v66 & 0x8000) == 0)
  {
    if ((v66 & 0x10000) == 0)
      goto LABEL_109;
LABEL_117:
    v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 25);
    *(_WORD *)v3 = 400;
    v71 = (unint64_t)v3 + 2;
    if ((v70 & 0x80000000) != 0)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v70, v71, a3);
      v67 = *((_DWORD *)this + 75);
      if ((v67 & 0x20000) != 0)
        goto LABEL_124;
    }
    else if (v70 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v70, v71, a3);
      v67 = *((_DWORD *)this + 75);
      if ((v67 & 0x20000) != 0)
        goto LABEL_124;
    }
    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v70;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      v67 = *((_DWORD *)this + 75);
      if ((v67 & 0x20000) != 0)
        goto LABEL_124;
    }
LABEL_110:
    if ((v67 & 0x40000) == 0)
      goto LABEL_111;
    goto LABEL_125;
  }
  v69 = *((_QWORD *)this + 14);
  *(_WORD *)v3 = 393;
  *(_QWORD *)((char *)v3 + 2) = v69;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 10);
  if ((*((_DWORD *)this + 75) & 0x10000) != 0)
    goto LABEL_117;
LABEL_109:
  v67 = *((_DWORD *)this + 75);
  if ((v67 & 0x20000) == 0)
    goto LABEL_110;
LABEL_124:
  v72 = *((_DWORD *)this + 30);
  *(_WORD *)v3 = 413;
  *(_DWORD *)((char *)v3 + 2) = v72;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  v67 = *((_DWORD *)this + 75);
  if ((v67 & 0x40000) == 0)
  {
LABEL_111:
    if ((v67 & 0x80000) == 0)
      goto LABEL_112;
    goto LABEL_126;
  }
LABEL_125:
  v73 = *((_DWORD *)this + 31);
  *(_WORD *)v3 = 421;
  *(_DWORD *)((char *)v3 + 2) = v73;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  if ((*((_DWORD *)this + 75) & 0x80000) == 0)
  {
LABEL_112:
    if ((*((_BYTE *)this + 305) & 1) == 0)
      goto LABEL_113;
    goto LABEL_127;
  }
LABEL_126:
  v74 = *((_DWORD *)this + 32);
  *(_WORD *)v3 = 429;
  *(_DWORD *)((char *)v3 + 2) = v74;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  if ((*((_BYTE *)this + 305) & 1) == 0)
  {
LABEL_113:
    v68 = *((_DWORD *)this + 75);
    if ((v68 & 0x200000) == 0)
      goto LABEL_114;
LABEL_128:
    v76 = *((_DWORD *)this + 34);
    *(_WORD *)v3 = 445;
    *(_DWORD *)((char *)v3 + 2) = v76;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
    if ((*((_DWORD *)this + 75) & 0x400000) == 0)
      goto LABEL_139;
    goto LABEL_129;
  }
LABEL_127:
  v75 = *((_DWORD *)this + 62);
  *(_WORD *)v3 = 437;
  *(_DWORD *)((char *)v3 + 2) = v75;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  v68 = *((_DWORD *)this + 75);
  if ((v68 & 0x200000) != 0)
    goto LABEL_128;
LABEL_114:
  if ((v68 & 0x400000) == 0)
    goto LABEL_139;
LABEL_129:
  v77 = *((_QWORD *)this + 18);
  if (v77)
  {
    *(_WORD *)v3 = 450;
    v78 = (_DWORD)v3 + 2;
    v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v77 + 20);
    if (v79 <= 0x7F)
      goto LABEL_131;
  }
  else
  {
    v77 = *(_QWORD *)(qword_10041B018 + 144);
    *(_WORD *)v3 = 450;
    v78 = (_DWORD)v3 + 2;
    v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v77 + 20);
    if (v79 <= 0x7F)
    {
LABEL_131:
      *((_BYTE *)v3 + 2) = (_BYTE)v79;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      if ((*(_BYTE *)(v77 + 24) & 1) == 0)
        goto LABEL_136;
      goto LABEL_135;
    }
  }
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v79, v78, a3);
  if ((*(_BYTE *)(v77 + 24) & 1) != 0)
  {
LABEL_135:
    v80 = *(_DWORD *)(v77 + 16);
    *(_BYTE *)v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v80;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  }
LABEL_136:
  v83 = *(_QWORD **)(v77 + 8);
  v82 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v77 + 8);
  v81 = v83;
  if (v83 && *v81 != v81[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v82, v3, a3);
LABEL_139:
  if ((*((_BYTE *)this + 302) & 0x80) != 0)
  {
    v87 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 35);
    *(_WORD *)v3 = 456;
    v88 = (unint64_t)v3 + 2;
    if ((v87 & 0x80000000) != 0)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v87, v88, a3);
      v84 = *((_DWORD *)this + 75);
      if ((v84 & 0x1000000) != 0)
        goto LABEL_167;
    }
    else if (v87 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v87, v88, a3);
      v84 = *((_DWORD *)this + 75);
      if ((v84 & 0x1000000) != 0)
        goto LABEL_167;
    }
    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v87;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      v84 = *((_DWORD *)this + 75);
      if ((v84 & 0x1000000) != 0)
        goto LABEL_167;
    }
LABEL_141:
    if ((v84 & 0x2000000) == 0)
      goto LABEL_142;
LABEL_168:
    v90 = (unsigned int *)*((_QWORD *)this + 20);
    if (v90)
    {
      *(_WORD *)v3 = 474;
      v91 = (_DWORD)v3 + 2;
      v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v90[10];
      if (v92 <= 0x7F)
        goto LABEL_170;
    }
    else
    {
      v90 = *(unsigned int **)(qword_10041B018 + 160);
      *(_WORD *)v3 = 474;
      v91 = (_DWORD)v3 + 2;
      v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v90[10];
      if (v92 <= 0x7F)
      {
LABEL_170:
        *((_BYTE *)v3 + 2) = (_BYTE)v92;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B8E84((wireless_diagnostics::google::protobuf::internal::WireFormat *)v90, (uint64_t)v3 + 3, a3);
        v84 = *((_DWORD *)this + 75);
        if ((v84 & 0x4000000) != 0)
          goto LABEL_174;
LABEL_143:
        if ((v84 & 0x8000000) == 0)
          goto LABEL_144;
LABEL_180:
        v100 = *((_QWORD *)this + 22);
        if (v100)
        {
          *(_WORD *)v3 = 490;
          v101 = (_DWORD)v3 + 2;
          v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v100 + 72);
          if (v102 <= 0x7F)
            goto LABEL_182;
        }
        else
        {
          v100 = *(_QWORD *)(qword_10041B018 + 176);
          *(_WORD *)v3 = 490;
          v101 = (_DWORD)v3 + 2;
          v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v100 + 72);
          if (v102 <= 0x7F)
          {
LABEL_182:
            *((_BYTE *)v3 + 2) = (_BYTE)v102;
            v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B8440(v100, (uint64_t)v3 + 3, a3);
            v84 = *((_DWORD *)this + 75);
            if ((v84 & 0x10000000) != 0)
              goto LABEL_186;
LABEL_145:
            if ((v84 & 0x20000000) == 0)
              goto LABEL_146;
            goto LABEL_187;
          }
        }
        v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v102, v101, a3);
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B8440(v100, v103, v104);
        v84 = *((_DWORD *)this + 75);
        if ((v84 & 0x10000000) != 0)
          goto LABEL_186;
        goto LABEL_145;
      }
    }
    v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v92, v91, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B8E84((wireless_diagnostics::google::protobuf::internal::WireFormat *)v90, v93, v94);
    v84 = *((_DWORD *)this + 75);
    if ((v84 & 0x4000000) != 0)
      goto LABEL_174;
    goto LABEL_143;
  }
  v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x1000000) == 0)
    goto LABEL_141;
LABEL_167:
  v89 = *((_QWORD *)this + 19);
  *(_WORD *)v3 = 465;
  *(_QWORD *)((char *)v3 + 2) = v89;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 10);
  v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x2000000) != 0)
    goto LABEL_168;
LABEL_142:
  if ((v84 & 0x4000000) == 0)
    goto LABEL_143;
LABEL_174:
  v95 = *((_QWORD *)this + 21);
  if (v95)
  {
    *(_WORD *)v3 = 482;
    v96 = (_DWORD)v3 + 2;
    v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v95 + 52);
    if (v97 <= 0x7F)
      goto LABEL_176;
LABEL_179:
    v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v97, v96, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CC4DC(v95, v98, v99);
    v84 = *((_DWORD *)this + 75);
    if ((v84 & 0x8000000) != 0)
      goto LABEL_180;
    goto LABEL_144;
  }
  v95 = *(_QWORD *)(qword_10041B018 + 168);
  *(_WORD *)v3 = 482;
  v96 = (_DWORD)v3 + 2;
  v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v95 + 52);
  if (v97 > 0x7F)
    goto LABEL_179;
LABEL_176:
  *((_BYTE *)v3 + 2) = (_BYTE)v97;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CC4DC(v95, (uint64_t)v3 + 3, a3);
  v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x8000000) != 0)
    goto LABEL_180;
LABEL_144:
  if ((v84 & 0x10000000) == 0)
    goto LABEL_145;
LABEL_186:
  v105 = *((_BYTE *)this + 192);
  *(_WORD *)v3 = 496;
  *((_BYTE *)v3 + 2) = v105;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x20000000) == 0)
  {
LABEL_146:
    if ((v84 & 0x40000000) == 0)
      goto LABEL_147;
    goto LABEL_188;
  }
LABEL_187:
  v106 = *((_QWORD *)this + 23);
  *(_WORD *)v3 = 505;
  *(_QWORD *)((char *)v3 + 2) = v106;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 10);
  v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x40000000) == 0)
  {
LABEL_147:
    if ((v84 & 0x80000000) == 0)
      goto LABEL_148;
    goto LABEL_189;
  }
LABEL_188:
  v107 = *((_BYTE *)this + 193);
  *(_WORD *)v3 = 640;
  *((_BYTE *)v3 + 2) = v107;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  if ((*((_DWORD *)this + 75) & 0x80000000) == 0)
  {
LABEL_148:
    v85 = *((_DWORD *)this + 76);
    if ((v85 & 1) == 0)
      goto LABEL_149;
LABEL_190:
    v109 = *((_QWORD *)this + 25);
    if (v109)
    {
      *(_WORD *)v3 = 658;
      v110 = (_DWORD)v3 + 2;
      v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v109 + 40);
      if (v111 <= 0x7F)
        goto LABEL_192;
    }
    else
    {
      v109 = *(_QWORD *)(qword_10041B018 + 200);
      *(_WORD *)v3 = 658;
      v110 = (_DWORD)v3 + 2;
      v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v109 + 40);
      if (v111 <= 0x7F)
      {
LABEL_192:
        *((_BYTE *)v3 + 2) = (_BYTE)v111;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B2DF8(v109, (_BYTE *)v3 + 3, a3);
        v85 = *((_DWORD *)this + 76);
        if ((v85 & 2) != 0)
          goto LABEL_196;
LABEL_150:
        if ((v85 & 4) == 0)
          goto LABEL_151;
        goto LABEL_197;
      }
    }
    v112 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v111, v110, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B2DF8(v109, v112, v113);
    v85 = *((_DWORD *)this + 76);
    if ((v85 & 2) != 0)
      goto LABEL_196;
    goto LABEL_150;
  }
LABEL_189:
  v108 = *((_DWORD *)this + 49);
  *(_WORD *)v3 = 653;
  *(_DWORD *)((char *)v3 + 2) = v108;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  v85 = *((_DWORD *)this + 76);
  if ((v85 & 1) != 0)
    goto LABEL_190;
LABEL_149:
  if ((v85 & 2) == 0)
    goto LABEL_150;
LABEL_196:
  v114 = *((_BYTE *)this + 194);
  *(_WORD *)v3 = 664;
  *((_BYTE *)v3 + 2) = v114;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  v85 = *((_DWORD *)this + 76);
  if ((v85 & 4) == 0)
  {
LABEL_151:
    if ((v85 & 8) == 0)
      goto LABEL_152;
LABEL_203:
    v120 = (unsigned int *)*((_QWORD *)this + 27);
    if (v120)
    {
      *(_WORD *)v3 = 682;
      v121 = (_DWORD)v3 + 2;
      v122 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v120[8];
      if (v122 <= 0x7F)
        goto LABEL_205;
    }
    else
    {
      v120 = *(unsigned int **)(qword_10041B018 + 216);
      *(_WORD *)v3 = 682;
      v121 = (_DWORD)v3 + 2;
      v122 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v120[8];
      if (v122 <= 0x7F)
      {
LABEL_205:
        *((_BYTE *)v3 + 2) = (_BYTE)v122;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BDD50((wireless_diagnostics::google::protobuf::internal::WireFormat *)v120, (uint64_t)v3 + 3, a3);
        if ((*((_BYTE *)this + 302) & 0x10) != 0)
          goto LABEL_209;
LABEL_153:
        v86 = *((_DWORD *)this + 76);
        if ((v86 & 0x10) == 0)
          goto LABEL_154;
        goto LABEL_210;
      }
    }
    v123 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v122, v121, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BDD50((wireless_diagnostics::google::protobuf::internal::WireFormat *)v120, v123, v124);
    if ((*((_BYTE *)this + 302) & 0x10) != 0)
      goto LABEL_209;
    goto LABEL_153;
  }
LABEL_197:
  v115 = *((_QWORD *)this + 26);
  if (v115)
  {
    *(_WORD *)v3 = 674;
    v116 = (_DWORD)v3 + 2;
    v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v115 + 56);
    if (v117 <= 0x7F)
      goto LABEL_199;
LABEL_202:
    v118 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v117, v116, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BD450(v115, v118, v119);
    if ((*((_DWORD *)this + 76) & 8) != 0)
      goto LABEL_203;
    goto LABEL_152;
  }
  v115 = *(_QWORD *)(qword_10041B018 + 208);
  *(_WORD *)v3 = 674;
  v116 = (_DWORD)v3 + 2;
  v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v115 + 56);
  if (v117 > 0x7F)
    goto LABEL_202;
LABEL_199:
  *((_BYTE *)v3 + 2) = (_BYTE)v117;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BD450(v115, (_BYTE *)v3 + 3, a3);
  if ((*((_DWORD *)this + 76) & 8) != 0)
    goto LABEL_203;
LABEL_152:
  if ((*((_BYTE *)this + 302) & 0x10) == 0)
    goto LABEL_153;
LABEL_209:
  v125 = *((_DWORD *)this + 33);
  *(_WORD *)v3 = 693;
  *(_DWORD *)((char *)v3 + 2) = v125;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  v86 = *((_DWORD *)this + 76);
  if ((v86 & 0x10) == 0)
  {
LABEL_154:
    if ((v86 & 0x20) == 0)
      goto LABEL_155;
LABEL_211:
    v127 = *((_QWORD *)this + 29);
    if (v127)
    {
      *(_WORD *)v3 = 706;
      v128 = (_DWORD)v3 + 2;
      v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v127 + 40);
      if (v129 <= 0x7F)
        goto LABEL_213;
    }
    else
    {
      v127 = *(_QWORD *)(qword_10041B018 + 232);
      *(_WORD *)v3 = 706;
      v128 = (_DWORD)v3 + 2;
      v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v127 + 40);
      if (v129 <= 0x7F)
      {
LABEL_213:
        *((_BYTE *)v3 + 2) = (_BYTE)v129;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B2DF8(v127, (_BYTE *)v3 + 3, a3);
        v86 = *((_DWORD *)this + 76);
        if ((v86 & 0x40) != 0)
          goto LABEL_217;
LABEL_156:
        if ((v86 & 0x80) == 0)
          goto LABEL_157;
        goto LABEL_218;
      }
    }
    v130 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v129, v128, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B2DF8(v127, v130, v131);
    v86 = *((_DWORD *)this + 76);
    if ((v86 & 0x40) != 0)
      goto LABEL_217;
    goto LABEL_156;
  }
LABEL_210:
  v126 = *((_DWORD *)this + 56);
  *(_WORD *)v3 = 701;
  *(_DWORD *)((char *)v3 + 2) = v126;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  v86 = *((_DWORD *)this + 76);
  if ((v86 & 0x20) != 0)
    goto LABEL_211;
LABEL_155:
  if ((v86 & 0x40) == 0)
    goto LABEL_156;
LABEL_217:
  v132 = *((_DWORD *)this + 57);
  *(_WORD *)v3 = 717;
  *(_DWORD *)((char *)v3 + 2) = v132;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  v86 = *((_DWORD *)this + 76);
  if ((v86 & 0x80) == 0)
  {
LABEL_157:
    if ((v86 & 0x200) == 0)
      goto LABEL_158;
LABEL_224:
    v138 = *((_DWORD *)this + 63);
    *(_WORD *)v3 = 733;
    *(_DWORD *)((char *)v3 + 2) = v138;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
    if ((*((_DWORD *)this + 76) & 0x400) == 0)
      goto LABEL_238;
    goto LABEL_225;
  }
LABEL_218:
  v133 = (unsigned int *)*((_QWORD *)this + 30);
  if (v133)
  {
    *(_WORD *)v3 = 722;
    v134 = (_DWORD)v3 + 2;
    v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v133[10];
    if (v135 <= 0x7F)
      goto LABEL_220;
LABEL_223:
    v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v135, v134, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B57B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v133, v136, v137);
    v86 = *((_DWORD *)this + 76);
    if ((v86 & 0x200) != 0)
      goto LABEL_224;
    goto LABEL_158;
  }
  v133 = *(unsigned int **)(qword_10041B018 + 240);
  *(_WORD *)v3 = 722;
  v134 = (_DWORD)v3 + 2;
  v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v133[10];
  if (v135 > 0x7F)
    goto LABEL_223;
LABEL_220:
  *((_BYTE *)v3 + 2) = (_BYTE)v135;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001B57B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v133, (uint64_t)v3 + 3, a3);
  v86 = *((_DWORD *)this + 76);
  if ((v86 & 0x200) != 0)
    goto LABEL_224;
LABEL_158:
  if ((v86 & 0x400) == 0)
    goto LABEL_238;
LABEL_225:
  v139 = *((_QWORD *)this + 32);
  if (v139)
  {
    *(_WORD *)v3 = 738;
    v140 = (_DWORD)v3 + 2;
    v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v139 + 32);
    if (v141 <= 0x7F)
      goto LABEL_227;
LABEL_230:
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v141, v140, a3);
    v142 = *(_DWORD *)(v139 + 36);
    if ((v142 & 1) == 0)
      goto LABEL_232;
    goto LABEL_231;
  }
  v139 = *(_QWORD *)(qword_10041B018 + 256);
  *(_WORD *)v3 = 738;
  v140 = (_DWORD)v3 + 2;
  v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v139 + 32);
  if (v141 > 0x7F)
    goto LABEL_230;
LABEL_227:
  *((_BYTE *)v3 + 2) = (_BYTE)v141;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  v142 = *(_DWORD *)(v139 + 36);
  if ((v142 & 1) != 0)
  {
LABEL_231:
    v143 = *(_QWORD *)(v139 + 16);
    *(_BYTE *)v3 = 9;
    *(_QWORD *)((char *)v3 + 1) = v143;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    v142 = *(_DWORD *)(v139 + 36);
  }
LABEL_232:
  if ((v142 & 2) != 0)
  {
    v147 = *(_QWORD *)(v139 + 24);
    *(_BYTE *)v3 = 17;
    *(_QWORD *)((char *)v3 + 1) = v147;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    v148 = *(_QWORD **)(v139 + 8);
    v145 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v139 + 8);
    v144 = v148;
    if (!v148)
      goto LABEL_238;
  }
  else
  {
    v146 = *(_QWORD **)(v139 + 8);
    v145 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v139 + 8);
    v144 = v146;
    if (!v146)
      goto LABEL_238;
  }
  if (*v144 != v144[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v145, v3, a3);
LABEL_238:
  v149 = *((_DWORD *)this + 76);
  if ((v149 & 0x800) != 0)
  {
    v153 = (unsigned int *)*((_QWORD *)this + 33);
    if (v153)
    {
      *(_WORD *)v3 = 746;
      v154 = (_DWORD)v3 + 2;
      v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v153[14];
      if (v155 <= 0x7F)
        goto LABEL_246;
    }
    else
    {
      v153 = *(unsigned int **)(qword_10041B018 + 264);
      *(_WORD *)v3 = 746;
      v154 = (_DWORD)v3 + 2;
      v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v153[14];
      if (v155 <= 0x7F)
      {
LABEL_246:
        *((_BYTE *)v3 + 2) = (_BYTE)v155;
        v3 = sub_1001CE498((wireless_diagnostics::google::protobuf::internal::WireFormat *)v153, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3), a3);
        v149 = *((_DWORD *)this + 76);
        if ((v149 & 0x1000) != 0)
          goto LABEL_250;
LABEL_240:
        if ((v149 & 0x2000) == 0)
          goto LABEL_241;
LABEL_256:
        v163 = *((_QWORD *)this + 35);
        if (v163)
        {
          *(_WORD *)v3 = 762;
          v164 = (_DWORD)v3 + 2;
          v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v163 + 44);
          if (v165 <= 0x7F)
            goto LABEL_258;
        }
        else
        {
          v163 = *(_QWORD *)(qword_10041B018 + 280);
          *(_WORD *)v3 = 762;
          v164 = (_DWORD)v3 + 2;
          v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v163 + 44);
          if (v165 <= 0x7F)
          {
LABEL_258:
            *((_BYTE *)v3 + 2) = (_BYTE)v165;
            v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CD290(v163, (uint64_t)v3 + 3, a3);
            if ((*((_DWORD *)this + 76) & 0x4000) != 0)
              goto LABEL_262;
LABEL_242:
            v152 = (_QWORD *)*((_QWORD *)this + 1);
            v151 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
            v150 = v152;
            if (!v152)
              return v3;
            goto LABEL_268;
          }
        }
        v166 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v165, v164, a3);
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CD290(v163, v166, v167);
        if ((*((_DWORD *)this + 76) & 0x4000) != 0)
          goto LABEL_262;
        goto LABEL_242;
      }
    }
    v156 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v155, v154, a3);
    v3 = sub_1001CE498((wireless_diagnostics::google::protobuf::internal::WireFormat *)v153, v156, v157);
    v149 = *((_DWORD *)this + 76);
    if ((v149 & 0x1000) != 0)
      goto LABEL_250;
    goto LABEL_240;
  }
  if ((v149 & 0x1000) == 0)
    goto LABEL_240;
LABEL_250:
  v158 = (unsigned int *)*((_QWORD *)this + 34);
  if (v158)
  {
    *(_WORD *)v3 = 754;
    v159 = (_DWORD)v3 + 2;
    v160 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v158[10];
    if (v160 <= 0x7F)
      goto LABEL_252;
LABEL_255:
    v161 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v160, v159, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CFBF8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v158, v161, v162);
    v149 = *((_DWORD *)this + 76);
    if ((v149 & 0x2000) != 0)
      goto LABEL_256;
    goto LABEL_241;
  }
  v158 = *(unsigned int **)(qword_10041B018 + 272);
  *(_WORD *)v3 = 754;
  v159 = (_DWORD)v3 + 2;
  v160 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v158[10];
  if (v160 > 0x7F)
    goto LABEL_255;
LABEL_252:
  *((_BYTE *)v3 + 2) = (_BYTE)v160;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CFBF8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v158, (_BYTE *)v3 + 3, a3);
  v149 = *((_DWORD *)this + 76);
  if ((v149 & 0x2000) != 0)
    goto LABEL_256;
LABEL_241:
  if ((v149 & 0x4000) == 0)
    goto LABEL_242;
LABEL_262:
  v168 = *((_QWORD *)this + 36);
  if (v168)
  {
    *(_WORD *)v3 = 898;
    v169 = (_DWORD)v3 + 2;
    v170 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v168 + 52);
    if (v170 <= 0x7F)
      goto LABEL_264;
LABEL_267:
    v172 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v170, v169, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CDB24(v168, v172, v173);
    v174 = (_QWORD *)*((_QWORD *)this + 1);
    v151 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v150 = v174;
    if (!v174)
      return v3;
    goto LABEL_268;
  }
  v168 = *(_QWORD *)(qword_10041B018 + 288);
  *(_WORD *)v3 = 898;
  v169 = (_DWORD)v3 + 2;
  v170 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v168 + 52);
  if (v170 > 0x7F)
    goto LABEL_267;
LABEL_264:
  *((_BYTE *)v3 + 2) = (_BYTE)v170;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CDB24(v168, (uint64_t)v3 + 3, a3);
  v171 = (_QWORD *)*((_QWORD *)this + 1);
  v151 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v150 = v171;
  if (!v171)
    return v3;
LABEL_268:
  if (*v150 != v150[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v151, v3, a3);
  return v3;
}

uint64_t sub_1001BB1F8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  _QWORD *v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  uint64_t v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v34;
  _QWORD *v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  uint64_t v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v42;
  _QWORD *v43;
  int v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  _QWORD *v49;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v50;
  int v51;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  int v56;
  int v57;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v58;
  int v59;
  unint64_t v60;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v61;
  _QWORD *v62;
  unsigned int v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v68;
  _QWORD *v69;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v70;
  uint64_t v71;
  int v72;
  int v73;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v74;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v75;
  _QWORD *v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  _DWORD *v81;
  int v82;
  int v83;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v84;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v85;
  _QWORD *v86;
  int v87;
  unsigned int v88;
  _DWORD *v89;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v90;
  uint64_t v91;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v92;
  int v93;
  _DWORD *v94;
  int v95;
  int v96;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v97;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v98;
  _QWORD *v99;
  int v100;
  unsigned int v101;
  uint64_t v102;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v103;
  int v104;
  unsigned int v105;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v106;
  _QWORD *v107;
  uint64_t v109;
  int v110;
  int v111;
  int v112;
  _QWORD *v113;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v114;
  uint64_t v115;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v116;
  uint64_t v117;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v118;
  uint64_t v119;
  int v120;
  int v121;
  int v122;
  _QWORD *v123;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v124;
  uint64_t v125;
  int v126;
  int v127;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v128;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v129;
  _QWORD *v130;
  int v131;
  uint64_t v132;

  v3 = *(_DWORD *)(a1 + 300);
  if (!(_BYTE)v3)
  {
    v5 = 0;
    goto LABEL_57;
  }
  if ((v3 & 1) != 0)
  {
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 300);
    if ((v3 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_11;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    v3 = *(_DWORD *)(a1 + 300);
  }
  else
  {
    v7 = 1;
  }
  v4 += v7 + 1;
LABEL_11:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v8 & 0x80000000) != 0)
    {
      v4 += 11;
      if ((v3 & 8) != 0)
        goto LABEL_22;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      v3 = *(_DWORD *)(a1 + 300);
      v4 += v9 + 1;
      if ((v3 & 8) != 0)
        goto LABEL_22;
    }
    else
    {
      v4 += 2;
      if ((v3 & 8) != 0)
        goto LABEL_22;
    }
LABEL_13:
    if ((v3 & 0x10) == 0)
      goto LABEL_35;
LABEL_29:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 10;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      v3 = *(_DWORD *)(a1 + 300);
    }
    else
    {
      v13 = 1;
    }
    v4 += v13 + 1;
    goto LABEL_35;
  }
  if ((v3 & 8) == 0)
    goto LABEL_13;
LABEL_22:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if ((v10 & 0x80000000) != 0)
  {
    v4 += 11;
    if ((v3 & 0x10) == 0)
      goto LABEL_35;
    goto LABEL_29;
  }
  if (v10 < 0x80)
  {
    v4 += 2;
    if ((v3 & 0x10) == 0)
      goto LABEL_35;
    goto LABEL_29;
  }
  v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
  v3 = *(_DWORD *)(a1 + 300);
  v4 += v11 + 1;
  if ((v3 & 0x10) != 0)
    goto LABEL_29;
LABEL_35:
  v14 = v4 + 5;
  if ((v3 & 0x20) == 0)
    v14 = v4;
  if ((v3 & 0x40) != 0)
    v5 = v14 + 5;
  else
    v5 = v14;
  if ((v3 & 0x80) != 0)
  {
    v15 = *(_QWORD *)(a1 + 48);
    if (!v15)
      v15 = *(_QWORD *)(qword_10041B018 + 48);
    v16 = *(unsigned __int8 *)(v15 + 32);
    v17 = (v16 << 31 >> 31) & 5;
    if ((v16 & 2) != 0)
      v17 += 5;
    if ((v16 & 4) != 0)
      v17 += 5;
    if (*(_BYTE *)(v15 + 32))
      LODWORD(v18) = v17;
    else
      LODWORD(v18) = 0;
    v19 = *(_QWORD **)(v15 + 8);
    if (!v19 || *v19 == v19[1])
    {
      *(_DWORD *)(v15 + 28) = (_DWORD)v18;
      v20 = 1;
    }
    else
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 8), a2)+ v18);
      *(_DWORD *)(v15 + 28) = (_DWORD)v18;
      if (v18 >= 0x80)
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      else
        v20 = 1;
    }
    v5 = (v5 + (_DWORD)v18 + v20 + 1);
    v3 = *(_DWORD *)(a1 + 300);
  }
LABEL_57:
  if ((v3 & 0xFF00) == 0)
    goto LABEL_142;
  if ((v3 & 0x100) == 0)
  {
    if ((v3 & 0x200) == 0)
      goto LABEL_60;
LABEL_74:
    v24 = *(_QWORD *)(a1 + 64);
    if (v24)
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B59D8(v24, a2);
      if (v25 < 0x80)
        goto LABEL_76;
    }
    else
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B59D8(*(_QWORD *)(qword_10041B018 + 64), a2);
      if (v25 < 0x80)
      {
LABEL_76:
        LODWORD(v5) = v5 + (_DWORD)v25 + 2;
        v3 = *(_DWORD *)(a1 + 300);
        if ((v3 & 0x400) != 0)
          goto LABEL_80;
LABEL_61:
        if ((v3 & 0x800) != 0)
          v21 = v5 + 5;
        else
          v21 = v5;
        if ((v3 & 0x1000) == 0)
          goto LABEL_65;
LABEL_89:
        v30 = *(_QWORD *)(a1 + 80);
        if (v30)
        {
          v31 = *(unsigned __int8 *)(v30 + 44);
          if (*(_BYTE *)(v30 + 44))
            goto LABEL_91;
        }
        else
        {
          v30 = *(_QWORD *)(qword_10041B018 + 80);
          v31 = *(unsigned __int8 *)(v30 + 44);
          if (*(_BYTE *)(v30 + 44))
          {
LABEL_91:
            v32 = (v31 << 31 >> 31) & 5;
            if ((v31 & 2) != 0)
              v32 += 5;
            if ((v31 & 4) != 0)
              v32 += 5;
            if ((v31 & 8) != 0)
              v32 += 5;
            if ((v31 & 0x10) != 0)
              v32 += 5;
            if ((v31 & 0x20) != 0)
              v33 = v32 + 2;
            else
              v33 = v32;
            v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v30 + 8);
            v35 = *(_QWORD **)(v30 + 8);
            if (!v35)
              goto LABEL_110;
            goto LABEL_106;
          }
        }
        v33 = 0;
        v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v30 + 8);
        v35 = *(_QWORD **)(v30 + 8);
        if (!v35)
          goto LABEL_110;
LABEL_106:
        if (*v35 != v35[1])
        {
          v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v34, a2)+ v33);
          *(_DWORD *)(v30 + 40) = (_DWORD)v36;
          if (v36 >= 0x80)
          {
            v21 += (_DWORD)v36
                 + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2)+ 1;
            v3 = *(_DWORD *)(a1 + 300);
            if ((v3 & 0x2000) != 0)
              goto LABEL_113;
          }
          else
          {
            v21 += (_DWORD)v36 + 1 + 1;
            v3 = *(_DWORD *)(a1 + 300);
            if ((v3 & 0x2000) != 0)
              goto LABEL_113;
          }
          goto LABEL_66;
        }
LABEL_110:
        *(_DWORD *)(v30 + 40) = v33;
        v21 += v33 + 1 + 1;
        v3 = *(_DWORD *)(a1 + 300);
        if ((v3 & 0x2000) != 0)
          goto LABEL_113;
LABEL_66:
        if ((v3 & 0x4000) == 0)
          goto LABEL_139;
LABEL_119:
        v39 = *(_QWORD *)(a1 + 104);
        if (v39)
        {
          LOBYTE(v40) = *(_BYTE *)(v39 + 40);
          if ((_BYTE)v40)
            goto LABEL_121;
        }
        else
        {
          v39 = *(_QWORD *)(qword_10041B018 + 104);
          LOBYTE(v40) = *(_BYTE *)(v39 + 40);
          if ((_BYTE)v40)
          {
LABEL_121:
            if ((v40 & 1) != 0)
            {
              LODWORD(v41) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v39 + 16), (unint64_t)a2)+ 1;
              v40 = *(_DWORD *)(v39 + 40);
              if ((v40 & 2) == 0)
                goto LABEL_129;
            }
            else
            {
              LODWORD(v41) = 0;
              if ((v40 & 2) == 0)
              {
LABEL_129:
                if ((v40 & 4) != 0)
                  v41 = (v41 + 5);
                else
                  v41 = v41;
                v42 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v39 + 8);
                v43 = *(_QWORD **)(v39 + 8);
                if (v43)
                {
LABEL_133:
                  if (*v43 != v43[1])
                    v41 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v42, a2)+ v41;
                }
LABEL_135:
                *(_DWORD *)(v39 + 36) = v41;
                if (v41 >= 0x80)
                  v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v41, a2);
                else
                  v44 = 1;
                v21 += v41 + v44 + 2;
                v3 = *(_DWORD *)(a1 + 300);
                goto LABEL_139;
              }
            }
            LODWORD(v41) = v41
                         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v39 + 24), (unint64_t)a2)+ 1;
            v40 = *(_DWORD *)(v39 + 40);
            goto LABEL_129;
          }
        }
        v41 = 0;
        v42 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v39 + 8);
        v43 = *(_QWORD **)(v39 + 8);
        if (v43)
          goto LABEL_133;
        goto LABEL_135;
      }
    }
    LODWORD(v5) = v5
                + (_DWORD)v25
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)+ 1;
    v3 = *(_DWORD *)(a1 + 300);
    if ((v3 & 0x400) != 0)
      goto LABEL_80;
    goto LABEL_61;
  }
  v22 = *(_QWORD *)(a1 + 56);
  if (v22)
  {
    v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B4D20(v22, a2);
    if (v23 < 0x80)
      goto LABEL_70;
LABEL_73:
    LODWORD(v5) = v5
                + (_DWORD)v23
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2)+ 1;
    v3 = *(_DWORD *)(a1 + 300);
    if ((v3 & 0x200) != 0)
      goto LABEL_74;
    goto LABEL_60;
  }
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B4D20(*(_QWORD *)(qword_10041B018 + 56), a2);
  if (v23 >= 0x80)
    goto LABEL_73;
LABEL_70:
  LODWORD(v5) = v5 + (_DWORD)v23 + 2;
  v3 = *(_DWORD *)(a1 + 300);
  if ((v3 & 0x200) != 0)
    goto LABEL_74;
LABEL_60:
  if ((v3 & 0x400) == 0)
    goto LABEL_61;
LABEL_80:
  v26 = *(_QWORD *)(a1 + 72);
  if (v26)
  {
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B39FC(v26, a2);
    if (v27 < 0x80)
    {
LABEL_82:
      v28 = 1;
      goto LABEL_85;
    }
  }
  else
  {
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B39FC(*(_QWORD *)(qword_10041B018 + 72), a2);
    if (v27 < 0x80)
      goto LABEL_82;
  }
  v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
LABEL_85:
  v29 = v5 + (_DWORD)v27 + v28 + 1;
  v3 = *(_DWORD *)(a1 + 300);
  if ((v3 & 0x800) != 0)
    v21 = v29 + 5;
  else
    v21 = v29;
  if ((v3 & 0x1000) != 0)
    goto LABEL_89;
LABEL_65:
  if ((v3 & 0x2000) == 0)
    goto LABEL_66;
LABEL_113:
  v37 = *(_QWORD *)(a1 + 88);
  if (v37)
  {
    v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B75D4(v37, a2);
    if (v38 < 0x80)
      goto LABEL_115;
LABEL_118:
    v21 += (_DWORD)v38
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2)
         + 1;
    v3 = *(_DWORD *)(a1 + 300);
    if ((v3 & 0x4000) == 0)
      goto LABEL_139;
    goto LABEL_119;
  }
  v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B75D4(*(_QWORD *)(qword_10041B018 + 88), a2);
  if (v38 >= 0x80)
    goto LABEL_118;
LABEL_115:
  v21 += (_DWORD)v38 + 2;
  v3 = *(_DWORD *)(a1 + 300);
  if ((v3 & 0x4000) != 0)
    goto LABEL_119;
LABEL_139:
  if ((v3 & 0x8000) != 0)
    v5 = v21 + 10;
  else
    v5 = v21;
LABEL_142:
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
      if ((v45 & 0x80000000) != 0)
      {
        v46 = 10;
      }
      else if (v45 >= 0x80)
      {
        v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45, a2);
        v3 = *(_DWORD *)(a1 + 300);
      }
      else
      {
        v46 = 1;
      }
      LODWORD(v5) = v5 + v46 + 2;
    }
    v47 = v5 + 6;
    if ((v3 & 0x20000) == 0)
      v47 = v5;
    if ((v3 & 0x40000) != 0)
      v47 += 6;
    if ((v3 & 0x80000) != 0)
      v47 += 6;
    if ((v3 & 0x100000) != 0)
      v47 += 6;
    if ((v3 & 0x200000) != 0)
      v5 = v47 + 6;
    else
      v5 = v47;
    if ((v3 & 0x400000) != 0)
    {
      v48 = *(_QWORD *)(a1 + 144);
      if (!v48)
        v48 = *(_QWORD *)(qword_10041B018 + 144);
      v49 = *(_QWORD **)(v48 + 8);
      LODWORD(v50) = (*(unsigned __int8 *)(v48 + 24) << 31 >> 31) & 5;
      if (!v49 || *v49 == v49[1])
      {
        *(_DWORD *)(v48 + 20) = (_DWORD)v50;
        v51 = 1;
      }
      else
      {
        v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v48 + 8), a2)+ v50);
        *(_DWORD *)(v48 + 20) = (_DWORD)v50;
        if (v50 >= 0x80)
          v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50, a2);
        else
          v51 = 1;
      }
      v5 = (v5 + (_DWORD)v50 + v51 + 2);
      v3 = *(_DWORD *)(a1 + 300);
    }
    if ((v3 & 0x800000) != 0)
    {
      v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
      if ((v52 & 0x80000000) != 0)
      {
        v53 = 10;
      }
      else if (v52 >= 0x80)
      {
        v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52, a2);
        v3 = *(_DWORD *)(a1 + 300);
      }
      else
      {
        v53 = 1;
      }
      v5 = (v5 + v53 + 2);
    }
  }
  if (HIBYTE(v3))
  {
    if ((v3 & 0x1000000) != 0)
      v54 = v5 + 10;
    else
      v54 = v5;
    if ((v3 & 0x2000000) == 0)
    {
      if ((v3 & 0x4000000) == 0)
        goto LABEL_184;
LABEL_213:
      v64 = *(_QWORD *)(a1 + 168);
      if (v64)
      {
        v65 = *(unsigned __int8 *)(v64 + 56);
        if (*(_BYTE *)(v64 + 56))
          goto LABEL_215;
      }
      else
      {
        v64 = *(_QWORD *)(qword_10041B018 + 168);
        v65 = *(unsigned __int8 *)(v64 + 56);
        if (*(_BYTE *)(v64 + 56))
        {
LABEL_215:
          v66 = (v65 << 31 >> 31) & 9;
          if ((v65 & 2) != 0)
            v66 += 9;
          if ((v65 & 4) != 0)
            v66 += 9;
          if ((v65 & 8) != 0)
            v66 += 9;
          if ((v65 & 0x10) != 0)
            v67 = v66 + 2;
          else
            v67 = v66;
          v68 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v64 + 8);
          v69 = *(_QWORD **)(v64 + 8);
          if (!v69)
            goto LABEL_232;
          goto LABEL_228;
        }
      }
      v67 = 0;
      v68 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v64 + 8);
      v69 = *(_QWORD **)(v64 + 8);
      if (!v69)
        goto LABEL_232;
LABEL_228:
      if (*v69 != v69[1])
      {
        v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v68, a2)+ v67);
        *(_DWORD *)(v64 + 52) = (_DWORD)v70;
        if (v70 >= 0x80)
        {
          v54 += (_DWORD)v70
               + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70, a2)+ 2;
          v3 = *(_DWORD *)(a1 + 300);
          if ((v3 & 0x8000000) == 0)
          {
LABEL_260:
            v78 = v54 + 3;
            if ((v3 & 0x10000000) == 0)
              v78 = v54;
            if ((v3 & 0x20000000) != 0)
              v78 += 10;
            if ((v3 & 0x40000000) != 0)
              v78 += 3;
            if (v3 >= 0)
              v5 = v78;
            else
              v5 = v78 + 6;
            goto LABEL_269;
          }
        }
        else
        {
          v54 += (_DWORD)v70 + 1 + 2;
          v3 = *(_DWORD *)(a1 + 300);
          if ((v3 & 0x8000000) == 0)
            goto LABEL_260;
        }
LABEL_235:
        v71 = *(_QWORD *)(a1 + 176);
        if (v71)
        {
          v72 = *(unsigned __int8 *)(v71 + 76);
          if (*(_BYTE *)(v71 + 76))
            goto LABEL_237;
        }
        else
        {
          v71 = *(_QWORD *)(qword_10041B018 + 176);
          v72 = *(unsigned __int8 *)(v71 + 76);
          if (*(_BYTE *)(v71 + 76))
          {
LABEL_237:
            v73 = (v72 << 31 >> 31) & 9;
            if ((v72 & 2) != 0)
              v73 += 9;
            if ((v72 & 4) != 0)
              v73 += 9;
            if ((v72 & 8) != 0)
              v73 += 9;
            if ((v72 & 0x10) != 0)
              v73 += 9;
            if ((v72 & 0x20) != 0)
              v73 += 9;
            if ((v72 & 0x40) != 0)
              LODWORD(v74) = v73 + 9;
            else
              LODWORD(v74) = v73;
            v75 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v71 + 8);
            v76 = *(_QWORD **)(v71 + 8);
            if (!v76)
              goto LABEL_257;
LABEL_254:
            if (*v76 != v76[1])
            {
              v74 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v75, a2)
                                                                                    + v74);
              *(_DWORD *)(v71 + 72) = (_DWORD)v74;
              if (v74 >= 0x80)
                v77 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v74, a2);
              else
                v77 = 1;
              goto LABEL_259;
            }
LABEL_257:
            *(_DWORD *)(v71 + 72) = (_DWORD)v74;
            v77 = 1;
LABEL_259:
            v54 += (_DWORD)v74 + v77 + 2;
            v3 = *(_DWORD *)(a1 + 300);
            goto LABEL_260;
          }
        }
        LODWORD(v74) = 0;
        v75 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v71 + 8);
        v76 = *(_QWORD **)(v71 + 8);
        if (!v76)
          goto LABEL_257;
        goto LABEL_254;
      }
LABEL_232:
      *(_DWORD *)(v64 + 52) = v67;
      v54 += v67 + 1 + 2;
      v3 = *(_DWORD *)(a1 + 300);
      if ((v3 & 0x8000000) == 0)
        goto LABEL_260;
      goto LABEL_235;
    }
    v55 = *(_QWORD *)(a1 + 160);
    if (v55)
    {
      v56 = *(unsigned __int8 *)(v55 + 44);
      if (*(_BYTE *)(v55 + 44))
        goto LABEL_188;
    }
    else
    {
      v55 = *(_QWORD *)(qword_10041B018 + 160);
      v56 = *(unsigned __int8 *)(v55 + 44);
      if (*(_BYTE *)(v55 + 44))
      {
LABEL_188:
        if ((v56 & 2) != 0)
          v57 = ((v56 << 31 >> 31) & 5) + 5;
        else
          v57 = (v56 << 31 >> 31) & 5;
        if ((v56 & 4) != 0)
        {
          v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v55 + 24);
          if (v58 >= 0x80)
          {
            v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58, a2)+ 1;
            v56 = *(_DWORD *)(v55 + 44);
          }
          else
          {
            v59 = 2;
          }
          v57 += v59;
        }
        v63 = v57 + 5;
        if ((v56 & 8) == 0)
          v63 = v57;
        if ((v56 & 0x10) != 0)
          v63 += 5;
        if ((v56 & 0x20) != 0)
          v60 = v63 + 2;
        else
          v60 = v63;
        v61 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v55 + 8);
        v62 = *(_QWORD **)(v55 + 8);
        if (!v62)
        {
LABEL_209:
          *(_DWORD *)(v55 + 40) = v60;
          if (v60 >= 0x80)
          {
            v54 += v60
                 + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v60, a2)+ 2;
            v3 = *(_DWORD *)(a1 + 300);
            if ((v3 & 0x4000000) != 0)
              goto LABEL_213;
          }
          else
          {
            v54 += v60 + 3;
            v3 = *(_DWORD *)(a1 + 300);
            if ((v3 & 0x4000000) != 0)
              goto LABEL_213;
          }
LABEL_184:
          if ((v3 & 0x8000000) == 0)
            goto LABEL_260;
          goto LABEL_235;
        }
LABEL_207:
        if (*v62 != v62[1])
          v60 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v61, a2)+ v60;
        goto LABEL_209;
      }
    }
    v60 = 0;
    v61 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v55 + 8);
    v62 = *(_QWORD **)(v55 + 8);
    if (!v62)
      goto LABEL_209;
    goto LABEL_207;
  }
LABEL_269:
  v79 = *(_DWORD *)(a1 + 304);
  if (!(_BYTE)v79)
    goto LABEL_283;
  if ((v79 & 1) == 0)
  {
    if ((v79 & 2) != 0)
      v80 = v5 + 3;
    else
      v80 = v5;
    if ((v79 & 4) == 0)
      goto LABEL_275;
LABEL_320:
    v89 = *(_DWORD **)(a1 + 208);
    if (v89)
    {
      v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BD698(v89, a2);
      if (v90 < 0x80)
        goto LABEL_322;
    }
    else
    {
      v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BD698(*(_DWORD **)(qword_10041B018 + 208), a2);
      if (v90 < 0x80)
      {
LABEL_322:
        v80 += (_DWORD)v90 + 3;
        v79 = *(_DWORD *)(a1 + 304);
        if ((v79 & 8) != 0)
          goto LABEL_326;
LABEL_276:
        if ((v79 & 0x10) != 0)
          v80 += 6;
        if ((v79 & 0x20) == 0)
          goto LABEL_279;
        goto LABEL_334;
      }
    }
    v80 += (_DWORD)v90
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90, a2)
         + 2;
    v79 = *(_DWORD *)(a1 + 304);
    if ((v79 & 8) != 0)
      goto LABEL_326;
    goto LABEL_276;
  }
  v81 = *(_DWORD **)(a1 + 200);
  if (v81)
  {
    v82 = v81[11];
    if ((_BYTE)v82)
      goto LABEL_287;
LABEL_307:
    if ((v82 & 0x100) != 0)
      LODWORD(v84) = 5;
    else
      LODWORD(v84) = 0;
    v85 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v81 + 2);
    v86 = (_QWORD *)*((_QWORD *)v81 + 1);
    if (!v86)
      goto LABEL_314;
    goto LABEL_311;
  }
  v81 = *(_DWORD **)(qword_10041B018 + 200);
  v82 = v81[11];
  if (!(_BYTE)v82)
    goto LABEL_307;
LABEL_287:
  v83 = 2 * (v82 & 1);
  if ((v82 & 2) != 0)
    v83 += 2;
  if ((v82 & 4) != 0)
    v83 += 5;
  if ((v82 & 8) != 0)
    v83 += 5;
  if ((v82 & 0x10) != 0)
    v83 += 5;
  if ((v82 & 0x20) != 0)
    v83 += 2;
  if ((v82 & 0x40) != 0)
    v83 += 2;
  if ((v82 & 0x80) != 0)
    v83 += 5;
  if ((v82 & 0x100) != 0)
    LODWORD(v84) = v83 + 5;
  else
    LODWORD(v84) = v83;
  v85 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v81 + 2);
  v86 = (_QWORD *)*((_QWORD *)v81 + 1);
  if (!v86)
    goto LABEL_314;
LABEL_311:
  if (*v86 != v86[1])
  {
    v84 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v85, a2)+ v84);
    v81[10] = (_DWORD)v84;
    if (v84 >= 0x80)
      v87 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v84, a2);
    else
      v87 = 1;
    goto LABEL_316;
  }
LABEL_314:
  v81[10] = (_DWORD)v84;
  v87 = 1;
LABEL_316:
  v88 = v5 + (_DWORD)v84 + v87 + 2;
  v79 = *(_DWORD *)(a1 + 304);
  if ((v79 & 2) != 0)
    v80 = v88 + 3;
  else
    v80 = v88;
  if ((v79 & 4) != 0)
    goto LABEL_320;
LABEL_275:
  if ((v79 & 8) == 0)
    goto LABEL_276;
LABEL_326:
  v91 = *(_QWORD *)(a1 + 216);
  if (v91)
  {
    v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BDEA4(v91, a2);
    if (v92 < 0x80)
    {
LABEL_328:
      v93 = 1;
      goto LABEL_331;
    }
  }
  else
  {
    v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BDEA4(*(_QWORD *)(qword_10041B018 + 216), a2);
    if (v92 < 0x80)
      goto LABEL_328;
  }
  v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92, a2);
LABEL_331:
  v80 += (_DWORD)v92 + v93 + 2;
  v79 = *(_DWORD *)(a1 + 304);
  if ((v79 & 0x10) != 0)
    v80 += 6;
  if ((v79 & 0x20) == 0)
  {
LABEL_279:
    if ((v79 & 0x40) != 0)
      v5 = v80 + 6;
    else
      v5 = v80;
    if ((v79 & 0x80) == 0)
      goto LABEL_283;
LABEL_369:
    v102 = *(_QWORD *)(a1 + 240);
    if (v102)
    {
      v103 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B59D8(v102, a2);
      if (v103 < 0x80)
      {
LABEL_371:
        v104 = 1;
        goto LABEL_374;
      }
    }
    else
    {
      v103 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B59D8(*(_QWORD *)(qword_10041B018 + 240), a2);
      if (v103 < 0x80)
        goto LABEL_371;
    }
    v104 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v103, a2);
LABEL_374:
    v5 = (v5 + (_DWORD)v103 + v104 + 2);
    v79 = *(_DWORD *)(a1 + 304);
    if ((v79 & 0xFF00) == 0)
      goto LABEL_385;
LABEL_375:
    v105 = v5 + 6;
    if ((v79 & 0x100) == 0)
      v105 = v5;
    if ((v79 & 0x200) != 0)
      v5 = v105 + 6;
    else
      v5 = v105;
    if ((v79 & 0x400) == 0)
    {
      if ((v79 & 0x800) == 0)
        goto LABEL_382;
LABEL_402:
      v115 = *(_QWORD *)(a1 + 264);
      if (v115)
      {
        v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CE584(v115, a2);
        if (v116 < 0x80)
          goto LABEL_404;
      }
      else
      {
        v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CE584(*(_QWORD *)(qword_10041B018 + 264), a2);
        if (v116 < 0x80)
        {
LABEL_404:
          v5 = (v5 + (_DWORD)v116 + 3);
          v79 = *(_DWORD *)(a1 + 304);
          if ((v79 & 0x1000) != 0)
            goto LABEL_408;
LABEL_383:
          if ((v79 & 0x2000) == 0)
            goto LABEL_384;
LABEL_414:
          v119 = *(_QWORD *)(a1 + 280);
          if (!v119)
            v119 = *(_QWORD *)(qword_10041B018 + 280);
          v120 = *(unsigned __int8 *)(v119 + 48);
          v121 = (v120 << 31 >> 31) & 9 | v120 & 2;
          if ((v120 & 4) != 0)
            v121 += 9;
          if ((v120 & 8) != 0)
            v121 += 9;
          if (*(_BYTE *)(v119 + 48))
            v122 = v121;
          else
            v122 = 0;
          v123 = *(_QWORD **)(v119 + 8);
          if (!v123 || *v123 == v123[1])
          {
            *(_DWORD *)(v119 + 44) = v122;
            v5 = (v5 + v122 + 1 + 2);
            if ((*(_DWORD *)(a1 + 304) & 0x4000) == 0)
              goto LABEL_385;
          }
          else
          {
            v124 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v119 + 8), a2)+ v122);
            *(_DWORD *)(v119 + 44) = (_DWORD)v124;
            if (v124 >= 0x80)
            {
              v5 = v5
                 + (_DWORD)v124
                 + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v124, a2)+ 2;
              if ((*(_DWORD *)(a1 + 304) & 0x4000) == 0)
                goto LABEL_385;
            }
            else
            {
              v5 = (v5 + (_DWORD)v124 + 1 + 2);
              if ((*(_DWORD *)(a1 + 304) & 0x4000) == 0)
                goto LABEL_385;
            }
          }
LABEL_431:
          v125 = *(_QWORD *)(a1 + 288);
          if (v125)
          {
            v126 = *(unsigned __int8 *)(v125 + 56);
            if (*(_BYTE *)(v125 + 56))
              goto LABEL_433;
          }
          else
          {
            v125 = *(_QWORD *)(qword_10041B018 + 288);
            v126 = *(unsigned __int8 *)(v125 + 56);
            if (*(_BYTE *)(v125 + 56))
            {
LABEL_433:
              v127 = (v126 << 31 >> 31) & 9 | v126 & 2;
              if ((v126 & 4) != 0)
                v127 += 9;
              if ((v126 & 8) != 0)
                v127 += 9;
              if ((v126 & 0x10) != 0)
                v127 += 9;
              if ((v126 & 0x20) != 0)
                LODWORD(v128) = v127 + 2;
              else
                LODWORD(v128) = v127;
              v129 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v125 + 8);
              v130 = *(_QWORD **)(v125 + 8);
              if (!v130)
                goto LABEL_449;
LABEL_446:
              if (*v130 != v130[1])
              {
                v128 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v129, a2)
                                                                                       + v128);
                *(_DWORD *)(v125 + 52) = (_DWORD)v128;
                if (v128 >= 0x80)
                  v131 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v128, a2);
                else
                  v131 = 1;
LABEL_451:
                v5 = (v5 + (_DWORD)v128 + v131 + 2);
                v106 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
                v107 = *(_QWORD **)(a1 + 8);
                if (!v107)
                  goto LABEL_386;
                goto LABEL_452;
              }
LABEL_449:
              *(_DWORD *)(v125 + 52) = (_DWORD)v128;
              v131 = 1;
              goto LABEL_451;
            }
          }
          LODWORD(v128) = 0;
          v129 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v125 + 8);
          v130 = *(_QWORD **)(v125 + 8);
          if (!v130)
            goto LABEL_449;
          goto LABEL_446;
        }
      }
      v5 = (_DWORD)v5
         + (_DWORD)v116
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v116, a2)+ 2;
      v79 = *(_DWORD *)(a1 + 304);
      if ((v79 & 0x1000) != 0)
        goto LABEL_408;
      goto LABEL_383;
    }
    v109 = *(_QWORD *)(a1 + 256);
    if (!v109)
      v109 = *(_QWORD *)(qword_10041B018 + 256);
    v110 = *(unsigned __int8 *)(v109 + 36);
    v111 = (v110 << 31 >> 31) & 9;
    if ((v110 & 2) != 0)
      v111 += 9;
    if (*(_BYTE *)(v109 + 36))
      v112 = v111;
    else
      v112 = 0;
    v113 = *(_QWORD **)(v109 + 8);
    if (!v113 || *v113 == v113[1])
    {
      *(_DWORD *)(v109 + 32) = v112;
      v5 = (v5 + v112 + 1 + 2);
      v79 = *(_DWORD *)(a1 + 304);
      if ((v79 & 0x800) != 0)
        goto LABEL_402;
    }
    else
    {
      v114 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v109 + 8), a2)+ v112);
      *(_DWORD *)(v109 + 32) = (_DWORD)v114;
      if (v114 >= 0x80)
      {
        v5 = v5
           + (_DWORD)v114
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v114, a2)+ 2;
        v79 = *(_DWORD *)(a1 + 304);
        if ((v79 & 0x800) != 0)
          goto LABEL_402;
      }
      else
      {
        v5 = (v5 + (_DWORD)v114 + 1 + 2);
        v79 = *(_DWORD *)(a1 + 304);
        if ((v79 & 0x800) != 0)
          goto LABEL_402;
      }
    }
LABEL_382:
    if ((v79 & 0x1000) == 0)
      goto LABEL_383;
LABEL_408:
    v117 = *(_QWORD *)(a1 + 272);
    if (v117)
    {
      v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CFE1C(v117, a2);
      if (v118 < 0x80)
        goto LABEL_410;
    }
    else
    {
      v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CFE1C(*(_QWORD *)(qword_10041B018 + 272), a2);
      if (v118 < 0x80)
      {
LABEL_410:
        v5 = (v5 + (_DWORD)v118 + 3);
        v79 = *(_DWORD *)(a1 + 304);
        if ((v79 & 0x2000) != 0)
          goto LABEL_414;
LABEL_384:
        if ((v79 & 0x4000) == 0)
          goto LABEL_385;
        goto LABEL_431;
      }
    }
    v5 = (_DWORD)v5
       + (_DWORD)v118
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v118, a2)+ 2;
    v79 = *(_DWORD *)(a1 + 304);
    if ((v79 & 0x2000) != 0)
      goto LABEL_414;
    goto LABEL_384;
  }
LABEL_334:
  v94 = *(_DWORD **)(a1 + 232);
  if (v94)
  {
    v95 = v94[11];
    if ((_BYTE)v95)
      goto LABEL_336;
LABEL_356:
    if ((v95 & 0x100) != 0)
      LODWORD(v97) = 5;
    else
      LODWORD(v97) = 0;
    v98 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v94 + 2);
    v99 = (_QWORD *)*((_QWORD *)v94 + 1);
    if (!v99)
      goto LABEL_363;
    goto LABEL_360;
  }
  v94 = *(_DWORD **)(qword_10041B018 + 232);
  v95 = v94[11];
  if (!(_BYTE)v95)
    goto LABEL_356;
LABEL_336:
  v96 = 2 * (v95 & 1);
  if ((v95 & 2) != 0)
    v96 += 2;
  if ((v95 & 4) != 0)
    v96 += 5;
  if ((v95 & 8) != 0)
    v96 += 5;
  if ((v95 & 0x10) != 0)
    v96 += 5;
  if ((v95 & 0x20) != 0)
    v96 += 2;
  if ((v95 & 0x40) != 0)
    v96 += 2;
  if ((v95 & 0x80) != 0)
    v96 += 5;
  if ((v95 & 0x100) != 0)
    LODWORD(v97) = v96 + 5;
  else
    LODWORD(v97) = v96;
  v98 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v94 + 2);
  v99 = (_QWORD *)*((_QWORD *)v94 + 1);
  if (!v99)
    goto LABEL_363;
LABEL_360:
  if (*v99 != v99[1])
  {
    v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v98, a2)+ v97);
    v94[10] = (_DWORD)v97;
    if (v97 >= 0x80)
      v100 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97, a2);
    else
      v100 = 1;
    goto LABEL_365;
  }
LABEL_363:
  v94[10] = (_DWORD)v97;
  v100 = 1;
LABEL_365:
  v101 = v80 + (_DWORD)v97 + v100 + 2;
  v79 = *(_DWORD *)(a1 + 304);
  if ((v79 & 0x40) != 0)
    v5 = v101 + 6;
  else
    v5 = v101;
  if ((v79 & 0x80) != 0)
    goto LABEL_369;
LABEL_283:
  if ((v79 & 0xFF00) != 0)
    goto LABEL_375;
LABEL_385:
  v106 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v107 = *(_QWORD **)(a1 + 8);
  if (!v107)
  {
LABEL_386:
    *(_DWORD *)(a1 + 296) = v5;
    return v5;
  }
LABEL_452:
  if (*v107 == v107[1])
    goto LABEL_386;
  v132 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v106, a2)
       + v5;
  *(_DWORD *)(a1 + 296) = v132;
  return v132;
}

uint64_t sub_1001BC36C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 8268);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000A74E0((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001BC420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BC434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BC448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  int v16;
  char v17;
  _BYTE v18[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v18, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 8991);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v5 = *(_DWORD *)(a2 + 60);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v10 = *(_BYTE *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 1u;
    *(_BYTE *)(a1 + 32) = v10;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_21;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v11 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(_DWORD *)(a1 + 16) = v11;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  v12 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_DWORD *)(a1 + 20) = v12;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  v13 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 60) |= 8u;
  *(_QWORD *)(a1 + 24) = v13;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_24:
    v15 = *(_BYTE *)(a2 + 33);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(_BYTE *)(a1 + 33) = v15;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  v14 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 60) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v14;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x20) != 0)
    goto LABEL_24;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_25:
  v16 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) |= 0x40u;
  *(_DWORD *)(a1 + 40) = v16;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 60) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v6;
    v5 = *(_DWORD *)(a2 + 60);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      v7 = *(_DWORD *)(a2 + 48);
      *(_DWORD *)(a1 + 60) |= 0x100u;
      *(_DWORD *)(a1 + 48) = v7;
      v5 = *(_DWORD *)(a2 + 60);
    }
    if ((v5 & 0x200) != 0)
    {
      v8 = *(_DWORD *)(a2 + 52);
      *(_DWORD *)(a1 + 60) |= 0x200u;
      *(_DWORD *)(a1 + 52) = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BC608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BC61C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BC630(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v8;
  int v9;
  int v10;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 9341);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 36) & 1) != 0)
  {
    v8 = *(_DWORD *)(a2 + 16);
    a1[9] |= 1u;
    a1[4] = v8;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
LABEL_12:
      v10 = *(_DWORD *)(a2 + 24);
      a1[9] |= 4u;
      a1[6] = v10;
      if ((*(_DWORD *)(a2 + 36) & 8) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_8;
    }
  }
  else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_DWORD *)(a2 + 20);
  a1[9] |= 2u;
  a1[5] = v9;
  v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 4) != 0)
    goto LABEL_12;
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    v6 = *(_DWORD *)(a2 + 28);
    a1[9] |= 8u;
    a1[7] = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BC72C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BC740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BC754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 15765);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_QWORD *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BC808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BC81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BC830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 16837);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 60);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 60) & 1) != 0)
  {
    v8 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 1u;
    *(_QWORD *)(a1 + 16) = v8;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_13;
    }
  }
  else if ((*(_BYTE *)(a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(_QWORD *)(a1 + 24) = v9;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
LABEL_14:
    v11 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(_QWORD *)(a1 + 40) = v11;
    if ((*(_DWORD *)(a2 + 60) & 0x10) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_9;
  }
LABEL_13:
  v10 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_QWORD *)(a1 + 32) = v10;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 8) != 0)
    goto LABEL_14;
LABEL_8:
  if ((v5 & 0x10) != 0)
  {
LABEL_9:
    v6 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(_QWORD *)(a1 + 48) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BC94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BC960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BC974(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  char v6;
  int v7;
  char v8;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  int v16;
  char v17;
  char v18;
  _BYTE v19[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v19, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 17772);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v18, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
    v4 = *(_DWORD *)(a2 + 44);
    if (!(_BYTE)v4)
      goto LABEL_14;
  }
  else
  {
    v4 = *(_DWORD *)(a2 + 44);
    if (!(_BYTE)v4)
      goto LABEL_14;
  }
  if ((v4 & 1) != 0)
  {
    v10 = *(_BYTE *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(_BYTE *)(a1 + 24) = v10;
    v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0)
        goto LABEL_8;
LABEL_22:
      *(_DWORD *)(a1 + 44) |= 4u;
      v12 = *(_QWORD *)(a1 + 16);
      if (!v12)
        operator new();
      v13 = *(_QWORD *)(a2 + 16);
      if (v13)
      {
        sub_1001CE83C(v12, v13);
        v4 = *(_DWORD *)(a2 + 44);
        if ((v4 & 8) != 0)
          goto LABEL_28;
      }
      else
      {
        sub_1001CE83C(v12, *(_QWORD *)(qword_10041B0E0 + 16));
        v4 = *(_DWORD *)(a2 + 44);
        if ((v4 & 8) != 0)
          goto LABEL_28;
      }
LABEL_9:
      if ((v4 & 0x10) == 0)
        goto LABEL_10;
      goto LABEL_29;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  v11 = *(_BYTE *)(a2 + 25);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_BYTE *)(a1 + 25) = v11;
  v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) != 0)
    goto LABEL_22;
LABEL_8:
  if ((v4 & 8) == 0)
    goto LABEL_9;
LABEL_28:
  v14 = *(_BYTE *)(a2 + 26);
  *(_DWORD *)(a1 + 44) |= 8u;
  *(_BYTE *)(a1 + 26) = v14;
  v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0)
      goto LABEL_11;
    goto LABEL_30;
  }
LABEL_29:
  v15 = *(_BYTE *)(a2 + 27);
  *(_DWORD *)(a1 + 44) |= 0x10u;
  *(_BYTE *)(a1 + 27) = v15;
  v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x20) == 0)
  {
LABEL_11:
    if ((v4 & 0x40) == 0)
      goto LABEL_12;
    goto LABEL_31;
  }
LABEL_30:
  v16 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 44) |= 0x20u;
  *(_DWORD *)(a1 + 28) = v16;
  v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x40) == 0)
  {
LABEL_12:
    if ((v4 & 0x80) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_31:
  v17 = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 44) |= 0x40u;
  *(_BYTE *)(a1 + 32) = v17;
  v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x80) != 0)
  {
LABEL_13:
    v6 = *(_BYTE *)(a2 + 33);
    *(_DWORD *)(a1 + 44) |= 0x80u;
    *(_BYTE *)(a1 + 33) = v6;
    v4 = *(_DWORD *)(a2 + 44);
  }
LABEL_14:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      v7 = *(_DWORD *)(a2 + 36);
      *(_DWORD *)(a1 + 44) |= 0x100u;
      *(_DWORD *)(a1 + 36) = v7;
      v4 = *(_DWORD *)(a2 + 44);
    }
    if ((v4 & 0x200) != 0)
    {
      v8 = *(_BYTE *)(a2 + 34);
      *(_DWORD *)(a1 + 44) |= 0x200u;
      *(_BYTE *)(a1 + 34) = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BCBBC()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001BCBE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BCBF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BCC0C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001BCC54()
{
  return 1;
}

uint64_t sub_1001BCC5C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D48;
}

void sub_1001BCCD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001BCCE4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA860;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001BCD14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_1001BCD1C()
{
  operator new();
}

void sub_1001BCD7C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001BCDA4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  unsigned int v12;
  _BYTE *v13;
  unint64_t v14;
  char *v15;
  uint64_t result;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  unsigned int v26[2];

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v26[0] = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!(_DWORD)result)
            return result;
          v12 = v26[0];
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v12 = *v11;
          v13 = v11 + 1;
          *((_QWORD *)this + 1) = v13;
        }
        *(_BYTE *)(a1 + 32) = v12 != 0;
        *(_DWORD *)(a1 + 60) |= 1u;
        if ((unint64_t)v13 >= v10 || *v13 != 21)
          continue;
        *((_QWORD *)this + 1) = v13 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
        goto LABEL_45;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_37;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
LABEL_45:
        *(_DWORD *)(a1 + 16) = v26[0];
        *(_DWORD *)(a1 + 60) |= 2u;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 != 29)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
LABEL_48:
        *(_DWORD *)(a1 + 20) = v26[0];
        *(_DWORD *)(a1 + 60) |= 4u;
        v18 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 != 33)
          continue;
        *((_QWORD *)this + 1) = v18 + 1;
        *(_QWORD *)v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0;
LABEL_51:
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v26;
        *(_DWORD *)(a1 + 60) |= 8u;
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 != 45)
          continue;
        *((_QWORD *)this + 1) = v19 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
LABEL_54:
        *(_DWORD *)(a1 + 36) = v26[0];
        *(_DWORD *)(a1 + 60) |= 0x10u;
        v20 = (_BYTE *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v20 >= v14 || *v20 != 48)
          continue;
        v15 = v20 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_57:
        v26[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!(_DWORD)result)
            return result;
          v21 = v26[0];
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v21 = *v15;
          v22 = v15 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        *(_BYTE *)(a1 + 33) = v21 != 0;
        *(_DWORD *)(a1 + 60) |= 0x20u;
        if ((unint64_t)v22 >= v14 || *v22 != 61)
          continue;
        *((_QWORD *)this + 1) = v22 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
LABEL_65:
        *(_DWORD *)(a1 + 40) = v26[0];
        *(_DWORD *)(a1 + 60) |= 0x40u;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v23 >= *((_QWORD *)this + 2) || *v23 != 69)
          continue;
        *((_QWORD *)this + 1) = v23 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
LABEL_68:
        *(_DWORD *)(a1 + 44) = v26[0];
        *(_DWORD *)(a1 + 60) |= 0x80u;
        v24 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v24 >= *((_QWORD *)this + 2) || *v24 != 77)
          continue;
        *((_QWORD *)this + 1) = v24 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
LABEL_71:
        *(_DWORD *)(a1 + 48) = v26[0];
        *(_DWORD *)(a1 + 60) |= 0x100u;
        v25 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 != 85)
          continue;
        *((_QWORD *)this + 1) = v25 + 1;
LABEL_74:
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) != 0)
        {
          *(_DWORD *)(a1 + 52) = v26[0];
          *(_DWORD *)(a1 + 60) |= 0x200u;
          if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_37;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
        goto LABEL_48;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_37;
        *(_QWORD *)v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0;
        goto LABEL_51;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_37;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
        goto LABEL_54;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_37;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
        goto LABEL_65;
      case 8u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_37;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
        goto LABEL_68;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_37;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
        goto LABEL_71;
      case 0xAu:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_37;
        goto LABEL_74;
      default:
        v9 = TagFallback & 7;
LABEL_37:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1001BD2E8(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 32), (BOOL)a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 36), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 33), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 44), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 48), a3);
  if ((*(_DWORD *)(v5 + 60) & 0x200) == 0)
  {
LABEL_11:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(float *)(v5 + 52), a3);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_23:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

_BYTE *sub_1001BD450(uint64_t a1, _BYTE *a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  char v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  _QWORD *v17;

  v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 1) != 0)
  {
    v7 = *(_BYTE *)(a1 + 32);
    *a2 = 8;
    a2[1] = v7;
    a2 += 2;
    v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_DWORD *)(a1 + 16);
  *a2 = 21;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  v9 = *(_DWORD *)(a1 + 20);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  v10 = *(_QWORD *)(a1 + 24);
  *a2 = 33;
  *(_QWORD *)(a2 + 1) = v10;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  v11 = *(_DWORD *)(a1 + 36);
  *a2 = 45;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  v12 = *(_BYTE *)(a1 + 33);
  *a2 = 48;
  a2[1] = v12;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  v13 = *(_DWORD *)(a1 + 40);
  *a2 = 61;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x80) == 0)
  {
LABEL_9:
    if ((v3 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  v14 = *(_DWORD *)(a1 + 44);
  *a2 = 69;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x100) == 0)
  {
LABEL_10:
    if ((v3 & 0x200) == 0)
      goto LABEL_11;
LABEL_22:
    v16 = *(_DWORD *)(a1 + 52);
    *a2 = 85;
    *(_DWORD *)(a2 + 1) = v16;
    a2 += 5;
    v17 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v17;
    if (!v17)
      return a2;
    goto LABEL_23;
  }
LABEL_21:
  v15 = *(_DWORD *)(a1 + 48);
  *a2 = 77;
  *(_DWORD *)(a2 + 1) = v15;
  a2 += 5;
  if ((*(_DWORD *)(a1 + 60) & 0x200) != 0)
    goto LABEL_22;
LABEL_11:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_23:
  if (*v5 != v5[1])
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001BD698(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v3 = a1[15];
  if ((_BYTE)v3)
  {
    v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0)
      v4 = (2 * (v3 & 1)) | 5;
    if ((v3 & 4) != 0)
      v4 += 5;
    if ((v3 & 8) != 0)
      v4 += 9;
    if ((v3 & 0x10) != 0)
      v4 += 5;
    if ((v3 & 0x20) != 0)
      v4 += 2;
    if ((v3 & 0x40) != 0)
      v4 += 5;
    if ((v3 & 0x80) != 0)
      v4 += 5;
  }
  else
  {
    v4 = 0;
  }
  v5 = v4 + 5;
  if ((v3 & 0x100) == 0)
    v5 = v4;
  if ((v3 & 0x200) != 0)
    v5 += 5;
  if ((v3 & 0xFF00) != 0)
    v6 = v5;
  else
    v6 = v4;
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  v8 = (_QWORD *)*((_QWORD *)a1 + 1);
  if (v8 && *v8 != v8[1])
    v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v7, a2)
       + v6;
  a1[14] = v6;
  return v6;
}

uint64_t sub_1001BD76C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 8979);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BC448((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001BD820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BD834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BD848(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001BD890()
{
  return 1;
}

uint64_t sub_1001BD898()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D58;
}

void sub_1001BD90C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001BD920(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA910;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001BD950(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1001BD958()
{
  operator new();
}

void sub_1001BD9A8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001BD9D0(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  unint64_t v11;
  _BYTE *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  char *v16;
  uint64_t result;
  unsigned int v18;
  unsigned __int8 *v19;
  unsigned int v20;

  v6 = (_DWORD)a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_25;
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0)
          return 0;
        a1[4] = v20;
        a1[9] |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 21)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_25;
LABEL_15:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0)
          return 0;
        a1[5] = v20;
        a1[9] |= 2u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 != 24)
          continue;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_21:
        v20 = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!(_DWORD)result)
            return result;
          v14 = v20;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          v14 = *v13;
          v15 = v13 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        a1[6] = -(v14 & 1) ^ (v14 >> 1);
        a1[9] |= 4u;
        if ((unint64_t)v15 >= v11 || *v15 != 32)
          continue;
        v16 = v15 + 1;
        *((_QWORD *)this + 1) = v16;
        v20 = 0;
        if ((unint64_t)v16 >= v11)
          goto LABEL_37;
LABEL_35:
        if (*v16 < 0)
        {
LABEL_37:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!(_DWORD)result)
            return result;
          v18 = v20;
          v19 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          v18 = *v16;
          v19 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)this + 1) = v19;
        }
        a1[7] = -(v18 & 1) ^ (v18 >> 1);
        a1[9] |= 8u;
        if (v19 != (unsigned __int8 *)v11 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v13 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_21;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v16 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        v20 = 0;
        if ((unint64_t)v16 >= v11)
          goto LABEL_37;
        goto LABEL_35;
      default:
        v9 = TagFallback & 7;
LABEL_25:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1001BDC90(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) == 0)
  {
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), (int)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_11:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001BDD50(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  int v9;
  int v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = *((_DWORD *)this + 9);
  if ((v4 & 1) != 0)
  {
    v9 = *((_DWORD *)this + 4);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v9;
    a2 += 5;
    v4 = *((_DWORD *)this + 9);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
LABEL_10:
      v11 = *((_DWORD *)this + 6);
      *(_BYTE *)a2 = 24;
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v11) ^ (v11 >> 31));
      if (v12 > 0x7F)
      {
        a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
        if ((*((_BYTE *)this + 36) & 8) != 0)
          goto LABEL_14;
      }
      else
      {
        *(_BYTE *)(a2 + 1) = (2 * v11) ^ (v11 >> 31);
        a2 += 2;
        if ((*((_BYTE *)this + 36) & 8) != 0)
          goto LABEL_14;
      }
LABEL_5:
      v7 = (_QWORD *)*((_QWORD *)this + 1);
      v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      v5 = v7;
      if (!v7)
        return a2;
      goto LABEL_6;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = *((_DWORD *)this + 5);
  *(_BYTE *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 9) & 4) != 0)
    goto LABEL_10;
LABEL_4:
  if ((*((_BYTE *)this + 36) & 8) == 0)
    goto LABEL_5;
LABEL_14:
  v13 = *((_DWORD *)this + 7);
  *(_BYTE *)a2 = 32;
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v13) ^ (v13 >> 31));
  if (v14 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)a2 + 1, a3);
    v16 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v16;
    if (!v16)
      return a2;
  }
  else
  {
    *(_BYTE *)(a2 + 1) = (2 * v13) ^ (v13 >> 31);
    a2 += 2;
    v15 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v15;
    if (!v15)
      return a2;
  }
LABEL_6:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001BDEA4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  uint64_t v11;

  v3 = *(unsigned __int8 *)(a1 + 36);
  if (!*(_BYTE *)(a1 + 36))
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_8;
    goto LABEL_19;
  }
  v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0)
    v5 = v4 + 5;
  else
    v5 = v4;
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_7;
LABEL_15:
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 28)) ^ (*(int *)(a1 + 28) >> 31));
    if (v10 >= 0x80)
    {
      v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)+ 1+ v5;
      v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v7 = *(_QWORD **)(a1 + 8);
      if (!v7)
        goto LABEL_8;
    }
    else
    {
      v5 = (v5 + 2);
      v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v7 = *(_QWORD **)(a1 + 8);
      if (!v7)
        goto LABEL_8;
    }
    goto LABEL_19;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31));
  if (v9 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)+ 1+ v5;
    if ((*(_DWORD *)(a1 + 36) & 8) != 0)
      goto LABEL_15;
  }
  else
  {
    v5 = (v5 + 2);
    if ((v3 & 8) != 0)
      goto LABEL_15;
  }
LABEL_7:
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 8);
  if (!v7)
  {
LABEL_8:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_19:
  if (*v7 == v7[1])
    goto LABEL_8;
  v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v11;
  return v11;
}

uint64_t sub_1001BDFB4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 9329);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BC630(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001BE068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BE07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BE090(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001BE0D8()
{
  return 1;
}

uint64_t sub_1001BE0E0()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D68;
}

void sub_1001BE154(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BE168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 9627);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 44) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 44) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v9 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(_QWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(_QWORD *)(a1 + 16) = v8;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    v6 = *(_QWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_QWORD *)(a1 + 32) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BE244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BE258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BE26C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA9C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001BE29C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FA9C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001BE2E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001BE2E8()
{
  operator new();
}

void sub_1001BE350()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001BE378(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 44))
  {
    *(_OWORD *)(a1 + 16) = xmmword_10038E0B0;
    *(_QWORD *)(a1 + 32) = 0xC05390D4FDF3B646;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001BE3B4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t result;
  unint64_t v14;

  v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if (v10 != 1)
          goto LABEL_28;
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 17)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_19;
        }
      }
      if (v9 == 2)
        break;
      if (v9 == 3)
      {
        v10 = TagFallback & 7;
        if (v10 == 1)
        {
          v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
            return 0;
          goto LABEL_23;
        }
      }
      else
      {
        v10 = TagFallback & 7;
      }
LABEL_28:
      if (v10 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
    v10 = TagFallback & 7;
    if (v10 != 1)
      goto LABEL_28;
LABEL_19:
    v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
      return 0;
    *(_QWORD *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 44) |= 2u;
    v12 = (_BYTE *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 < *((_QWORD *)this + 2) && *v12 == 25)
    {
      *((_QWORD *)this + 1) = v12 + 1;
      v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
        return 0;
LABEL_23:
      *(_QWORD *)(a1 + 32) = v14;
      *(_DWORD *)(a1 + 44) |= 4u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_1001BE5BC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 4) == 0)
  {
LABEL_4:
    v8 = *(_QWORD **)(v4 + 8);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    v6 = v8;
    if (!v8)
      return this;
    goto LABEL_9;
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_9:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1001BE660(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
LABEL_8:
      v9 = *(_QWORD *)(a1 + 32);
      *(_BYTE *)a2 = 25;
      *(_QWORD *)(a2 + 1) = v9;
      a2 += 9;
      v10 = *(_QWORD **)(a1 + 8);
      v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v5 = v10;
      if (!v10)
        return a2;
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)(a2 + 1) = v8;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 44) & 4) != 0)
    goto LABEL_8;
LABEL_4:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_9:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001BE790(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 44);
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v4 += 9;
  if ((v3 & 4) != 0)
    v4 += 9;
  if (*(_BYTE *)(a1 + 44))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_1001BE800(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 9615);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BE168((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001BE8B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BE8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BE8DC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001BE924()
{
  return 1;
}

uint64_t sub_1001BE92C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D78;
}

void sub_1001BE9A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BE9B4(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 9875);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v6;
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BEA68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BEA7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BEA90(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FAA70;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001BEAC0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FAA70;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001BEB04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001BEB0C()
{
  operator new();
}

void sub_1001BEB64()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001BEB8C(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 28))
    *(_QWORD *)(a1 + 16) = 0x42852A7F415A872BLL;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001BEBB4(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  uint64_t result;
  unsigned int v12;
  unsigned int v13;

  v6 = (_DWORD)a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v9 = TagFallback & 7;
        if (v9 == 5)
        {
          v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
            return 0;
          goto LABEL_17;
        }
      }
      else
      {
        v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
    v9 = TagFallback & 7;
    if (v9 != 5)
      goto LABEL_22;
    v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0)
      return 0;
    a1[4] = v13;
    a1[7] |= 1u;
    v10 = (_BYTE *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 < *((_QWORD *)this + 2) && *v10 == 21)
    {
      *((_QWORD *)this + 1) = v10 + 1;
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
        return 0;
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_1001BED5C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      v8 = *(_QWORD **)(v4 + 8);
      v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      v6 = v8;
      if (!v8)
        return this;
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_7:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1001BEDE4(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  int v8;
  _QWORD *v9;

  v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = a1[5];
    *(_BYTE *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    v9 = (_QWORD *)*((_QWORD *)a1 + 1);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    v5 = v9;
    if (!v9)
      return a2;
    goto LABEL_7;
  }
  v7 = a1[4];
  *(_BYTE *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0)
    goto LABEL_6;
LABEL_3:
  v6 = (_QWORD *)*((_QWORD *)a1 + 1);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_7:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001BEE7C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 28);
  v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0)
    v4 += 5;
  if (*(_BYTE *)(a1 + 28))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001BEEE0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 9863);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BE9B4(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001BEF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BEFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BEFBC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001BF004()
{
  return 1;
}

uint64_t sub_1001BF00C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D88;
}

void sub_1001BF080(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BF094(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 10119);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v6;
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BF148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BF15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BF170(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FAB20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001BF1A0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FAB20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001BF1E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001BF1EC()
{
  operator new();
}

void sub_1001BF244()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001BF26C(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 28))
    *(_QWORD *)(a1 + 16) = 0x4120000040200000;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001BF294(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  uint64_t result;
  unsigned int v12;
  unsigned int v13;

  v6 = (_DWORD)a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v9 = TagFallback & 7;
        if (v9 == 5)
        {
          v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
            return 0;
          goto LABEL_17;
        }
      }
      else
      {
        v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
    v9 = TagFallback & 7;
    if (v9 != 5)
      goto LABEL_22;
    v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0)
      return 0;
    a1[4] = v13;
    a1[7] |= 1u;
    v10 = (_BYTE *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 < *((_QWORD *)this + 2) && *v10 == 21)
    {
      *((_QWORD *)this + 1) = v10 + 1;
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
        return 0;
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_1001BF43C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      v8 = *(_QWORD **)(v4 + 8);
      v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      v6 = v8;
      if (!v8)
        return this;
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_7:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1001BF4C4(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  int v8;
  _QWORD *v9;

  v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = a1[5];
    *(_BYTE *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    v9 = (_QWORD *)*((_QWORD *)a1 + 1);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    v5 = v9;
    if (!v9)
      return a2;
    goto LABEL_7;
  }
  v7 = a1[4];
  *(_BYTE *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0)
    goto LABEL_6;
LABEL_3:
  v6 = (_QWORD *)*((_QWORD *)a1 + 1);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_7:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001BF55C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 28);
  v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0)
    v4 += 5;
  if (*(_BYTE *)(a1 + 28))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001BF5C0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 10107);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BF094(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001BF674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BF688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BF69C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001BF6E4()
{
  return 1;
}

uint64_t sub_1001BF6EC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419D98;
}

void sub_1001BF760(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BF774(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 10363);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v6;
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BF828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BF83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BF850(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FABD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001BF880(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FABD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001BF8C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001BF8CC()
{
  operator new();
}

void sub_1001BF924()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001BF94C(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 28))
    *(_QWORD *)(a1 + 16) = 0xC24800003FC00000;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001BF974(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  uint64_t result;
  unsigned int v12;
  unsigned int v13;

  v6 = (_DWORD)a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v9 = TagFallback & 7;
        if (v9 == 5)
        {
          v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
            return 0;
          goto LABEL_17;
        }
      }
      else
      {
        v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
    v9 = TagFallback & 7;
    if (v9 != 5)
      goto LABEL_22;
    v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0)
      return 0;
    a1[4] = v13;
    a1[7] |= 1u;
    v10 = (_BYTE *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 < *((_QWORD *)this + 2) && *v10 == 21)
    {
      *((_QWORD *)this + 1) = v10 + 1;
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
        return 0;
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_1001BFB1C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      v8 = *(_QWORD **)(v4 + 8);
      v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      v6 = v8;
      if (!v8)
        return this;
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_7:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1001BFBA4(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  int v8;
  _QWORD *v9;

  v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = a1[5];
    *(_BYTE *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    v9 = (_QWORD *)*((_QWORD *)a1 + 1);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    v5 = v9;
    if (!v9)
      return a2;
    goto LABEL_7;
  }
  v7 = a1[4];
  *(_BYTE *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0)
    goto LABEL_6;
LABEL_3:
  v6 = (_QWORD *)*((_QWORD *)a1 + 1);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_7:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001BFC3C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 28);
  v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0)
    v4 += 5;
  if (*(_BYTE *)(a1 + 28))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001BFCA0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 10351);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BF774(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001BFD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BFD68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BFD7C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001BFDC4()
{
  return 1;
}

uint64_t sub_1001BFDCC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419DA8;
}

void sub_1001BFE40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BFE54(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 10607);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v6;
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BFF08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BFF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BFF30(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FAC80;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001BFF60(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FAC80;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001BFFA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001BFFAC()
{
  operator new();
}

void sub_1001C0004()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C002C(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 28))
    *(_QWORD *)(a1 + 16) = 0xC3C800003DCCCCCDLL;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001C0054(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  uint64_t result;
  unsigned int v12;
  unsigned int v13;

  v6 = (_DWORD)a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v9 = TagFallback & 7;
        if (v9 == 5)
        {
          v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
            return 0;
          goto LABEL_17;
        }
      }
      else
      {
        v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
    v9 = TagFallback & 7;
    if (v9 != 5)
      goto LABEL_22;
    v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0)
      return 0;
    a1[4] = v13;
    a1[7] |= 1u;
    v10 = (_BYTE *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 < *((_QWORD *)this + 2) && *v10 == 21)
    {
      *((_QWORD *)this + 1) = v10 + 1;
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0)
        return 0;
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_1001C01FC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      v8 = *(_QWORD **)(v4 + 8);
      v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      v6 = v8;
      if (!v8)
        return this;
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_7:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1001C0284(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  int v8;
  _QWORD *v9;

  v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = a1[5];
    *(_BYTE *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    v9 = (_QWORD *)*((_QWORD *)a1 + 1);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    v5 = v9;
    if (!v9)
      return a2;
    goto LABEL_7;
  }
  v7 = a1[4];
  *(_BYTE *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0)
    goto LABEL_6;
LABEL_3:
  v6 = (_QWORD *)*((_QWORD *)a1 + 1);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_7:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001C031C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 28);
  v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0)
    v4 += 5;
  if (*(_BYTE *)(a1 + 28))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001C0380(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 10595);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BFE54(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C0434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C0448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C045C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C04A4()
{
  return 1;
}

uint64_t sub_1001C04AC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419DB8;
}

void sub_1001C0520(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C0534(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  char v15;
  _BYTE v16[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v16, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 10947);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
    LOBYTE(v4) = *(_BYTE *)(a2 + 52);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  else
  {
    LOBYTE(v4) = *(_BYTE *)(a2 + 52);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 1) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    v6 = *(_DWORD **)(a1 + 16);
    if (!v6)
      operator new();
    v7 = *(_QWORD *)(a2 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10041B058 + 16);
    sub_1001BE9B4(v6, v7);
    v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 2u;
    v8 = *(_DWORD **)(a1 + 24);
    if (!v8)
      operator new();
    v9 = *(_QWORD *)(a2 + 24);
    if (!v9)
      v9 = *(_QWORD *)(qword_10041B058 + 24);
    sub_1001BF094(v8, v9);
    v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 4u;
    v10 = *(_DWORD **)(a1 + 32);
    if (!v10)
      operator new();
    v11 = *(_QWORD *)(a2 + 32);
    if (!v11)
      v11 = *(_QWORD *)(qword_10041B058 + 32);
    sub_1001BF774(v10, v11);
    v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 8u;
    v12 = *(_DWORD **)(a1 + 40);
    if (!v12)
      operator new();
    v13 = *(_QWORD *)(a2 + 40);
    if (!v13)
      v13 = *(_QWORD *)(qword_10041B058 + 40);
    sub_1001BFE54(v12, v13);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C07D4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C0808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C081C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C0830(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = off_1003FAD30;
  if ((_QWORD *)qword_10041B058 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = a1[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = a1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C08C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = off_1003FAD30;
  if ((_QWORD *)qword_10041B058 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = a1[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = a1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001C096C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1001C0974()
{
  operator new();
}

void sub_1001C09C8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C09F0(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  uint64_t v7;

  v1 = this;
  if (*(_BYTE *)(this + 52))
  {
    if ((*(_BYTE *)(this + 52) & 1) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 28))
          *(_QWORD *)(this + 16) = 0x42852A7F415A872BLL;
        v2 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v2)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    if ((*(_BYTE *)(v1 + 52) & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
      {
        if (*(_BYTE *)(this + 28))
          *(_QWORD *)(this + 16) = 0x4120000040200000;
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    if ((*(_BYTE *)(v1 + 52) & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        if (*(_BYTE *)(this + 28))
          *(_QWORD *)(this + 16) = 0xC24800003FC00000;
        v4 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v4)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    if ((*(_BYTE *)(v1 + 52) & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
      {
        if (*(_BYTE *)(this + 28))
          *(_QWORD *)(this + 16) = 0xC3C800003DCCCCCDLL;
        v5 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v5)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  v7 = *(_QWORD *)(v1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 11) = 0;
  if (v7)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  return this;
}

uint64_t sub_1001C0AFC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _DWORD *v10;
  char *v11;
  _DWORD *v12;
  char *v13;
  _DWORD *v14;
  char *v15;
  _DWORD *v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v31;
  int v32;
  int v33;
  _BYTE *v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v39;
  int v40;
  int v41;
  _BYTE *v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v47;
  int v48;
  int v49;
  uint64_t result;
  unsigned int v51;

  v6 = a1 + 8;
  while (1)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 < *((_QWORD *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_27;
        *(_DWORD *)(a1 + 52) |= 1u;
        v10 = *(_DWORD **)(a1 + 16);
        if (!v10)
          operator new();
        v51 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0;
        }
        else
        {
          v51 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        v18 = *((_DWORD *)this + 14);
        v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1001BEBB4(v10, this, v21, v22) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        v23 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)this + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v26 >= *((_QWORD *)this + 2) || *v26 != 18)
          continue;
        *((_QWORD *)this + 1) = v26 + 1;
        *(_DWORD *)(a1 + 52) |= 2u;
        v12 = *(_DWORD **)(a1 + 24);
        if (!v12)
LABEL_39:
          operator new();
LABEL_16:
        v51 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0;
        }
        else
        {
          v51 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        v27 = *((_DWORD *)this + 14);
        v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28)
          return 0;
        v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1001BF294(v12, this, v30, v31) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        v32 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v24)
          *((_DWORD *)this + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 != 26)
          continue;
        *((_QWORD *)this + 1) = v34 + 1;
        *(_DWORD *)(a1 + 52) |= 4u;
        v14 = *(_DWORD **)(a1 + 32);
        if (!v14)
LABEL_51:
          operator new();
LABEL_20:
        v51 = 0;
        v15 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0;
        }
        else
        {
          v51 = *v15;
          *((_QWORD *)this + 1) = v15 + 1;
        }
        v35 = *((_DWORD *)this + 14);
        v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1001BF974(v14, this, v38, v39) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        v40 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v40, 1);
        v41 = v40 - 1;
        if (v41 < 0 == v24)
          *((_DWORD *)this + 14) = v41;
        v42 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v42 >= *((_QWORD *)this + 2) || *v42 != 34)
          continue;
        *((_QWORD *)this + 1) = v42 + 1;
        *(_DWORD *)(a1 + 52) |= 8u;
        v16 = *(_DWORD **)(a1 + 40);
        if (!v16)
LABEL_63:
          operator new();
LABEL_24:
        v51 = 0;
        v17 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0;
        }
        else
        {
          v51 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
        }
        v43 = *((_DWORD *)this + 14);
        v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44)
          return 0;
        v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1001C0054(v16, this, v46, v47) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        v48 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v48, 1);
        v49 = v48 - 1;
        if (v49 < 0 == v24)
          *((_DWORD *)this + 14) = v49;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_27;
        *(_DWORD *)(a1 + 52) |= 2u;
        v12 = *(_DWORD **)(a1 + 24);
        if (v12)
          goto LABEL_16;
        goto LABEL_39;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_27;
        *(_DWORD *)(a1 + 52) |= 4u;
        v14 = *(_DWORD **)(a1 + 32);
        if (v14)
          goto LABEL_20;
        goto LABEL_51;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_27;
        *(_DWORD *)(a1 + 52) |= 8u;
        v16 = *(_DWORD **)(a1 + 40);
        if (v16)
          goto LABEL_24;
        goto LABEL_63;
      default:
        v9 = TagFallback & 7;
LABEL_27:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

void sub_1001C10C8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C10FC(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    v10 = *(_QWORD *)(this + 16);
    if (v10)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0)
        goto LABEL_11;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(qword_10041B058 + 16), a2, a4);
      v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0)
        goto LABEL_11;
    }
LABEL_3:
    if ((v6 & 4) == 0)
      goto LABEL_4;
LABEL_15:
    v12 = *(_QWORD *)(v5 + 32);
    if (v12)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v12, a2, a4);
      if ((*(_DWORD *)(v5 + 52) & 8) != 0)
        goto LABEL_19;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(qword_10041B058 + 32), a2, a4);
      if ((*(_DWORD *)(v5 + 52) & 8) != 0)
        goto LABEL_19;
    }
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_23;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_11:
  v11 = *(_QWORD *)(v5 + 24);
  if (v11)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 4) != 0)
      goto LABEL_15;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(qword_10041B058 + 24), a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 4) != 0)
      goto LABEL_15;
  }
LABEL_4:
  if ((v6 & 8) == 0)
    goto LABEL_5;
LABEL_19:
  v13 = *(_QWORD *)(v5 + 40);
  if (v13)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v13, a2, a4);
    v14 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v14;
    if (!v14)
      return this;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(qword_10041B058 + 40), a2, a4);
    v15 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v15;
    if (!v15)
      return this;
  }
LABEL_23:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C125C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  _DWORD *v5;
  unsigned int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  _QWORD *v10;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v11;
  _QWORD *v12;
  int v13;
  _QWORD *v14;
  _DWORD *v15;
  unsigned int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  _QWORD *v20;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v21;
  _QWORD *v22;
  int v23;
  _QWORD *v24;
  _DWORD *v25;
  unsigned int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  int v29;
  _QWORD *v30;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v31;
  _QWORD *v32;
  int v33;
  _QWORD *v34;
  _DWORD *v35;
  unsigned int v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  _QWORD *v40;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v41;
  _QWORD *v42;
  int v43;
  _QWORD *v44;
  _QWORD *v45;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v46;
  _QWORD *v47;

  v3 = a2;
  if ((*((_BYTE *)this + 52) & 1) == 0)
    goto LABEL_15;
  v5 = (_DWORD *)*((_QWORD *)this + 2);
  if (v5)
  {
    *(_BYTE *)a2 = 10;
    v6 = (_DWORD)a2 + 1;
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[6];
    if (v7 <= 0x7F)
      goto LABEL_4;
  }
  else
  {
    v5 = *(_DWORD **)(qword_10041B058 + 16);
    *(_BYTE *)a2 = 10;
    v6 = (_DWORD)a2 + 1;
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[6];
    if (v7 <= 0x7F)
    {
LABEL_4:
      *((_BYTE *)v3 + 1) = (_BYTE)v7;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      v8 = v5[7];
      if ((v8 & 1) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
  }
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
  v8 = v5[7];
  if ((v8 & 1) != 0)
  {
LABEL_8:
    v9 = v5[4];
    *(_BYTE *)v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v9;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    v8 = v5[7];
  }
LABEL_9:
  if ((v8 & 2) != 0)
  {
    v13 = v5[5];
    *(_BYTE *)v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v13;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    v14 = (_QWORD *)*((_QWORD *)v5 + 1);
    v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 2);
    v10 = v14;
    if (!v14)
      goto LABEL_15;
  }
  else
  {
    v12 = (_QWORD *)*((_QWORD *)v5 + 1);
    v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 2);
    v10 = v12;
    if (!v12)
      goto LABEL_15;
  }
  if (*v10 != v10[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, v3, a3);
LABEL_15:
  if ((*((_BYTE *)this + 52) & 2) == 0)
    goto LABEL_29;
  v15 = (_DWORD *)*((_QWORD *)this + 3);
  if (v15)
  {
    *(_BYTE *)v3 = 18;
    v16 = (_DWORD)v3 + 1;
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[6];
    if (v17 <= 0x7F)
      goto LABEL_18;
LABEL_21:
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v16, a3);
    v18 = v15[7];
    if ((v18 & 1) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
  v15 = *(_DWORD **)(qword_10041B058 + 24);
  *(_BYTE *)v3 = 18;
  v16 = (_DWORD)v3 + 1;
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[6];
  if (v17 > 0x7F)
    goto LABEL_21;
LABEL_18:
  *((_BYTE *)v3 + 1) = (_BYTE)v17;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  v18 = v15[7];
  if ((v18 & 1) != 0)
  {
LABEL_22:
    v19 = v15[4];
    *(_BYTE *)v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v19;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    v18 = v15[7];
  }
LABEL_23:
  if ((v18 & 2) != 0)
  {
    v23 = v15[5];
    *(_BYTE *)v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v23;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    v24 = (_QWORD *)*((_QWORD *)v15 + 1);
    v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 2);
    v20 = v24;
    if (!v24)
      goto LABEL_29;
  }
  else
  {
    v22 = (_QWORD *)*((_QWORD *)v15 + 1);
    v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 2);
    v20 = v22;
    if (!v22)
      goto LABEL_29;
  }
  if (*v20 != v20[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v3, a3);
LABEL_29:
  if ((*((_BYTE *)this + 52) & 4) == 0)
    goto LABEL_43;
  v25 = (_DWORD *)*((_QWORD *)this + 4);
  if (v25)
  {
    *(_BYTE *)v3 = 26;
    v26 = (_DWORD)v3 + 1;
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[6];
    if (v27 <= 0x7F)
      goto LABEL_32;
LABEL_35:
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, v26, a3);
    v28 = v25[7];
    if ((v28 & 1) == 0)
      goto LABEL_37;
    goto LABEL_36;
  }
  v25 = *(_DWORD **)(qword_10041B058 + 32);
  *(_BYTE *)v3 = 26;
  v26 = (_DWORD)v3 + 1;
  v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[6];
  if (v27 > 0x7F)
    goto LABEL_35;
LABEL_32:
  *((_BYTE *)v3 + 1) = (_BYTE)v27;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  v28 = v25[7];
  if ((v28 & 1) != 0)
  {
LABEL_36:
    v29 = v25[4];
    *(_BYTE *)v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v29;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    v28 = v25[7];
  }
LABEL_37:
  if ((v28 & 2) != 0)
  {
    v33 = v25[5];
    *(_BYTE *)v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v33;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    v34 = (_QWORD *)*((_QWORD *)v25 + 1);
    v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v25 + 2);
    v30 = v34;
    if (!v34)
      goto LABEL_43;
  }
  else
  {
    v32 = (_QWORD *)*((_QWORD *)v25 + 1);
    v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v25 + 2);
    v30 = v32;
    if (!v32)
      goto LABEL_43;
  }
  if (*v30 != v30[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v31, v3, a3);
LABEL_43:
  if ((*((_BYTE *)this + 52) & 8) == 0)
    goto LABEL_57;
  v35 = (_DWORD *)*((_QWORD *)this + 5);
  if (v35)
  {
    *(_BYTE *)v3 = 34;
    v36 = (_DWORD)v3 + 1;
    v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35[6];
    if (v37 <= 0x7F)
      goto LABEL_46;
  }
  else
  {
    v35 = *(_DWORD **)(qword_10041B058 + 40);
    *(_BYTE *)v3 = 34;
    v36 = (_DWORD)v3 + 1;
    v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35[6];
    if (v37 <= 0x7F)
    {
LABEL_46:
      *((_BYTE *)v3 + 1) = (_BYTE)v37;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      v38 = v35[7];
      if ((v38 & 1) == 0)
        goto LABEL_51;
      goto LABEL_50;
    }
  }
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, v36, a3);
  v38 = v35[7];
  if ((v38 & 1) != 0)
  {
LABEL_50:
    v39 = v35[4];
    *(_BYTE *)v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v39;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    v38 = v35[7];
  }
LABEL_51:
  if ((v38 & 2) != 0)
  {
    v43 = v35[5];
    *(_BYTE *)v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v43;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    v44 = (_QWORD *)*((_QWORD *)v35 + 1);
    v41 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v35 + 2);
    v40 = v44;
    if (!v44)
      goto LABEL_57;
  }
  else
  {
    v42 = (_QWORD *)*((_QWORD *)v35 + 1);
    v41 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v35 + 2);
    v40 = v42;
    if (!v42)
      goto LABEL_57;
  }
  if (*v40 != v40[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v41, v3, a3);
LABEL_57:
  v47 = (_QWORD *)*((_QWORD *)this + 1);
  v46 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v45 = v47;
  if (!v47 || *v45 == v45[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v46, v3, a3);
}

uint64_t sub_1001C16A8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  _QWORD *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  uint64_t v13;
  int v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  _QWORD *v17;
  int v18;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  _QWORD *v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  uint64_t v26;
  int v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  _QWORD *v30;
  int v31;
  uint64_t v32;

  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_39;
    goto LABEL_69;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10041B058 + 16);
    v8 = *(unsigned __int8 *)(v7 + 28);
    v9 = (v8 << 31 >> 31) & 5;
    if ((v8 & 2) != 0)
      v9 += 5;
    if (*(_BYTE *)(v7 + 28))
      v10 = v9;
    else
      v10 = 0;
    v11 = *(_QWORD **)(v7 + 8);
    if (!v11 || *v11 == v11[1])
    {
      *(_DWORD *)(v7 + 24) = v10;
      v4 = (v10 + 2);
      v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0)
        goto LABEL_36;
    }
    else
    {
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8), a2)+ v10);
      *(_DWORD *)(v7 + 24) = (_DWORD)v12;
      if (v12 >= 0x80)
      {
        v4 = v12
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)+ 1;
        v3 = *(_DWORD *)(a1 + 52);
        if ((v3 & 2) == 0)
          goto LABEL_36;
      }
      else
      {
        v4 = ((_DWORD)v12 + 2);
        v3 = *(_DWORD *)(a1 + 52);
        if ((v3 & 2) == 0)
          goto LABEL_36;
      }
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      goto LABEL_36;
  }
  v13 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v13 = *(_QWORD *)(qword_10041B058 + 24);
  v14 = *(unsigned __int8 *)(v13 + 28);
  v15 = (v14 << 31 >> 31) & 5;
  if ((v14 & 2) != 0)
    v15 += 5;
  if (*(_BYTE *)(v13 + 28))
    LODWORD(v16) = v15;
  else
    LODWORD(v16) = 0;
  v17 = *(_QWORD **)(v13 + 8);
  if (!v17 || *v17 == v17[1])
  {
    *(_DWORD *)(v13 + 24) = (_DWORD)v16;
    v18 = 1;
  }
  else
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v13 + 8), a2)+ v16);
    *(_DWORD *)(v13 + 24) = (_DWORD)v16;
    if (v16 >= 0x80)
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    else
      v18 = 1;
  }
  v4 = (v4 + (_DWORD)v16 + v18 + 1);
  v3 = *(_DWORD *)(a1 + 52);
LABEL_36:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_38;
LABEL_55:
    v26 = *(_QWORD *)(a1 + 40);
    if (!v26)
      v26 = *(_QWORD *)(qword_10041B058 + 40);
    v27 = *(unsigned __int8 *)(v26 + 28);
    v28 = (v27 << 31 >> 31) & 5;
    if ((v27 & 2) != 0)
      v28 += 5;
    if (*(_BYTE *)(v26 + 28))
      LODWORD(v29) = v28;
    else
      LODWORD(v29) = 0;
    v30 = *(_QWORD **)(v26 + 8);
    if (!v30 || *v30 == v30[1])
    {
      *(_DWORD *)(v26 + 24) = (_DWORD)v29;
      v31 = 1;
    }
    else
    {
      v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v26 + 8), a2)+ v29);
      *(_DWORD *)(v26 + 24) = (_DWORD)v29;
      if (v29 >= 0x80)
        v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
      else
        v31 = 1;
    }
    v4 = (v4 + (_DWORD)v29 + v31 + 1);
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_39;
    goto LABEL_69;
  }
  v20 = *(_QWORD *)(a1 + 32);
  if (!v20)
    v20 = *(_QWORD *)(qword_10041B058 + 32);
  v21 = *(unsigned __int8 *)(v20 + 28);
  v22 = (v21 << 31 >> 31) & 5;
  if ((v21 & 2) != 0)
    v22 += 5;
  if (*(_BYTE *)(v20 + 28))
    v23 = v22;
  else
    v23 = 0;
  v24 = *(_QWORD **)(v20 + 8);
  if (!v24 || *v24 == v24[1])
  {
    *(_DWORD *)(v20 + 24) = v23;
    v4 = (v4 + v23 + 2);
    if ((*(_DWORD *)(a1 + 52) & 8) != 0)
      goto LABEL_55;
  }
  else
  {
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8), a2)+ v23);
    *(_DWORD *)(v20 + 24) = (_DWORD)v25;
    if (v25 >= 0x80)
    {
      v4 = (_DWORD)v4
         + (_DWORD)v25
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)+ 1;
      if ((*(_DWORD *)(a1 + 52) & 8) != 0)
        goto LABEL_55;
    }
    else
    {
      v4 = (v4 + (_DWORD)v25 + 2);
      if ((*(_DWORD *)(a1 + 52) & 8) != 0)
        goto LABEL_55;
    }
  }
LABEL_38:
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = *(_QWORD **)(a1 + 8);
  if (!v6)
  {
LABEL_39:
    *(_DWORD *)(a1 + 48) = v4;
    return v4;
  }
LABEL_69:
  if (*v6 == v6[1])
    goto LABEL_39;
  v32 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 48) = v32;
  return v32;
}

uint64_t sub_1001C19D4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 10935);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C0534((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C1A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C1A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C1AB0(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C1AF8()
{
  return 1;
}

uint64_t sub_1001C1B00()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419DC8;
}

void sub_1001C1B74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C1B88(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 11281);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
    LOBYTE(v4) = *(_BYTE *)(a2 + 52);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  else
  {
    LOBYTE(v4) = *(_BYTE *)(a2 + 52);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 1) != 0)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_QWORD *)(a1 + 16) = v6;
    v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0)
        goto LABEL_8;
LABEL_12:
      *(_DWORD *)(a1 + 52) |= 4u;
      v8 = *(_QWORD *)(a1 + 32);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 32);
      if (v9)
      {
        sub_1001BE168(v8, v9);
        if ((*(_DWORD *)(a2 + 52) & 8) == 0)
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      else
      {
        sub_1001BE168(v8, *(_QWORD *)(qword_10041B060 + 32));
        if ((*(_DWORD *)(a2 + 52) & 8) == 0)
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(_QWORD *)(a1 + 24) = v7;
  v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) != 0)
    goto LABEL_12;
LABEL_8:
  if ((v4 & 8) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_18:
  *(_DWORD *)(a1 + 52) |= 8u;
  v10 = *(_QWORD *)(a1 + 40);
  if (!v10)
    operator new();
  v11 = *(_QWORD *)(a2 + 40);
  if (!v11)
    v11 = *(_QWORD *)(qword_10041B060 + 40);
  sub_1001C0534(v10, v11);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C1D84()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C1DAC()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C1DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C1DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C1DFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = off_1003FADE0;
  if ((_QWORD *)qword_10041B060 != a1)
  {
    v2 = a1[4];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[5];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C1E68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = off_1003FADE0;
  if ((_QWORD *)qword_10041B060 != a1)
  {
    v2 = a1[4];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[5];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001C1EE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1001C1EF0()
{
  operator new();
}

void sub_1001C1F4C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C1F74(uint64_t this)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  v2 = *(_BYTE *)(this + 52);
  if (v2)
  {
    *(_OWORD *)(this + 16) = xmmword_10038E0C0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 32);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(_OWORD *)(this + 16) = xmmword_10038E0B0;
          *(_QWORD *)(this + 32) = 0xC05390D4FDF3B646;
        }
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    if ((*(_BYTE *)(v1 + 52) & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
        this = sub_1001C09F0(this);
    }
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_1001C2018(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  int v11;
  _BYTE *v12;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v30;
  int v31;
  int v32;
  uint64_t result;
  unsigned int v34[2];

  v6 = a1 + 8;
  while (1)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 < *((_QWORD *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_27;
        *(_QWORD *)v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v34;
        *(_DWORD *)(a1 + 52) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
LABEL_15:
        *(_QWORD *)v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v34;
        v11 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v11;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 26)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
        *(_DWORD *)(a1 + 52) = v11 | 4;
        v13 = *(_QWORD *)(a1 + 32);
        if (!v13)
LABEL_22:
          operator new();
LABEL_23:
        v34[0] = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0;
        }
        else
        {
          v34[0] = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        v15 = *((_DWORD *)this + 14);
        v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1001BE3B4(v13, this, v18, v19) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        v20 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v22 < 0 == v21)
          *((_DWORD *)this + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v23 >= *((_QWORD *)this + 2) || *v23 != 34)
          continue;
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_39:
        *(_DWORD *)(a1 + 52) |= 8u;
        v24 = *(_QWORD *)(a1 + 40);
        if (!v24)
          operator new();
        v34[0] = 0;
        v25 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0;
        }
        else
        {
          v34[0] = *v25;
          *((_QWORD *)this + 1) = v25 + 1;
        }
        v26 = *((_DWORD *)this + 14);
        v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27)
          return 0;
        v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1001C0AFC(v24, this, v29, v30) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        v31 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v31, 1);
        v32 = v31 - 1;
        if (v32 < 0 == v21)
          *((_DWORD *)this + 14) = v32;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_15;
        goto LABEL_27;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_27;
        *(_DWORD *)(a1 + 52) |= 4u;
        v13 = *(_QWORD *)(a1 + 32);
        if (!v13)
          goto LABEL_22;
        goto LABEL_23;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_27;
        goto LABEL_39;
      default:
        v9 = TagFallback & 7;
LABEL_27:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

void sub_1001C240C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C2434()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C245C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
LABEL_9:
      v10 = *(_QWORD *)(v5 + 32);
      if (v10)
      {
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v10, a2, a4);
        if ((*(_DWORD *)(v5 + 52) & 8) != 0)
          goto LABEL_13;
      }
      else
      {
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(qword_10041B060 + 32), a2, a4);
        if ((*(_DWORD *)(v5 + 52) & 8) != 0)
          goto LABEL_13;
      }
LABEL_5:
      v9 = *(_QWORD **)(v5 + 8);
      v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
      v7 = v9;
      if (!v9)
        return this;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) != 0)
    goto LABEL_9;
LABEL_4:
  if ((v6 & 8) == 0)
    goto LABEL_5;
LABEL_13:
  v11 = *(_QWORD *)(v5 + 40);
  if (v11)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v11, a2, a4);
    v12 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v12;
    if (!v12)
      return this;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(qword_10041B060 + 40), a2, a4);
    v13 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v13;
    if (!v13)
      return this;
  }
LABEL_17:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C256C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int *v16;
  unsigned int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  _QWORD *v19;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v20;
  unsigned __int8 *v21;
  _QWORD *v22;

  v3 = a2;
  v5 = *((_DWORD *)this + 13);
  if ((v5 & 1) != 0)
  {
    v9 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)((char *)a2 + 1) = v9;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    v5 = *((_DWORD *)this + 13);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
LABEL_9:
      v11 = *((_QWORD *)this + 4);
      if (v11)
      {
        *(_BYTE *)v3 = 26;
        v12 = (_DWORD)v3 + 1;
        v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v11 + 40);
        if (v13 <= 0x7F)
          goto LABEL_11;
      }
      else
      {
        v11 = *(_QWORD *)(qword_10041B060 + 32);
        *(_BYTE *)v3 = 26;
        v12 = (_DWORD)v3 + 1;
        v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v11 + 40);
        if (v13 <= 0x7F)
        {
LABEL_11:
          *((_BYTE *)v3 + 1) = (_BYTE)v13;
          v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BE660(v11, (uint64_t)v3 + 2, a3);
          if ((*((_DWORD *)this + 13) & 8) != 0)
            goto LABEL_15;
LABEL_5:
          v8 = (_QWORD *)*((_QWORD *)this + 1);
          v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
          v6 = v8;
          if (!v8)
            return v3;
          goto LABEL_21;
        }
      }
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BE660(v11, v14, v15);
      if ((*((_DWORD *)this + 13) & 8) != 0)
        goto LABEL_15;
      goto LABEL_5;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = *((_QWORD *)this + 3);
  *(_BYTE *)v3 = 17;
  *(_QWORD *)((char *)v3 + 1) = v10;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v5 = *((_DWORD *)this + 13);
  if ((v5 & 4) != 0)
    goto LABEL_9;
LABEL_4:
  if ((v5 & 8) == 0)
    goto LABEL_5;
LABEL_15:
  v16 = (unsigned int *)*((_QWORD *)this + 5);
  if (v16)
  {
    *(_BYTE *)v3 = 34;
    v17 = (_DWORD)v3 + 1;
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[12];
    if (v18 <= 0x7F)
      goto LABEL_17;
LABEL_20:
    v20 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v17, a3);
    v3 = sub_1001C125C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v20, v21);
    v22 = (_QWORD *)*((_QWORD *)this + 1);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v6 = v22;
    if (!v22)
      return v3;
    goto LABEL_21;
  }
  v16 = *(unsigned int **)(qword_10041B060 + 40);
  *(_BYTE *)v3 = 34;
  v17 = (_DWORD)v3 + 1;
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[12];
  if (v18 > 0x7F)
    goto LABEL_20;
LABEL_17:
  *((_BYTE *)v3 + 1) = (_BYTE)v18;
  v3 = sub_1001C125C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
  v19 = (_QWORD *)*((_QWORD *)this + 1);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v6 = v19;
  if (!v19)
    return v3;
LABEL_21:
  if (*v6 != v6[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
  return v3;
}

uint64_t sub_1001C2778(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  _QWORD *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  uint64_t v18;

  v3 = *(unsigned __int8 *)(a1 + 52);
  if (!*(_BYTE *)(a1 + 52))
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_8;
    goto LABEL_34;
  }
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v5 = v4 + 9;
  else
    v5 = v4;
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_7;
LABEL_28:
    v15 = *(_QWORD *)(a1 + 40);
    if (v15)
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C16A8(v15, a2);
      if (v16 < 0x80)
      {
LABEL_30:
        v17 = 1;
        goto LABEL_33;
      }
    }
    else
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C16A8(*(_QWORD *)(qword_10041B060 + 40), a2);
      if (v16 < 0x80)
        goto LABEL_30;
    }
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
LABEL_33:
    v5 = (v5 + (_DWORD)v16 + v17 + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_8;
    goto LABEL_34;
  }
  v9 = *(_QWORD *)(a1 + 32);
  if (!v9)
    v9 = *(_QWORD *)(qword_10041B060 + 32);
  v10 = *(unsigned __int8 *)(v9 + 44);
  v11 = (v10 << 31 >> 31) & 9;
  if ((v10 & 2) != 0)
    v11 += 9;
  if ((v10 & 4) != 0)
    v11 += 9;
  if (*(_BYTE *)(v9 + 44))
    v12 = v11;
  else
    v12 = 0;
  v13 = *(_QWORD **)(v9 + 8);
  if (!v13 || *v13 == v13[1])
  {
    *(_DWORD *)(v9 + 40) = v12;
    v5 = (v5 + v12 + 1 + 1);
    if ((*(_DWORD *)(a1 + 52) & 8) != 0)
      goto LABEL_28;
  }
  else
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8), a2)+ v12);
    *(_DWORD *)(v9 + 40) = (_DWORD)v14;
    if (v14 >= 0x80)
    {
      v5 = v5
         + (_DWORD)v14
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)+ 1;
      if ((*(_DWORD *)(a1 + 52) & 8) != 0)
        goto LABEL_28;
    }
    else
    {
      v5 = (v5 + (_DWORD)v14 + 1 + 1);
      if ((*(_DWORD *)(a1 + 52) & 8) != 0)
        goto LABEL_28;
    }
  }
LABEL_7:
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 8);
  if (!v7)
  {
LABEL_8:
    *(_DWORD *)(a1 + 48) = v5;
    return v5;
  }
LABEL_34:
  if (*v7 == v7[1])
    goto LABEL_8;
  v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 48) = v18;
  return v18;
}

uint64_t sub_1001C293C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 11269);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C1B88((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C29F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C2A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C2A18(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C2A60()
{
  return 1;
}

uint64_t sub_1001C2A68()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419DD8;
}

void sub_1001C2ADC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C2AF0(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  _BYTE v13[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 11637);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    v8 = *(_DWORD *)(a2 + 16);
    a1[10] |= 1u;
    a1[4] = v8;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_13;
    }
  }
  else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_DWORD *)(a2 + 20);
  a1[10] |= 2u;
  a1[5] = v9;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
LABEL_14:
    v11 = *(_DWORD *)(a2 + 28);
    a1[10] |= 8u;
    a1[7] = v11;
    if ((*(_DWORD *)(a2 + 40) & 0x10) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_9;
  }
LABEL_13:
  v10 = *(_DWORD *)(a2 + 24);
  a1[10] |= 4u;
  a1[6] = v10;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 8) != 0)
    goto LABEL_14;
LABEL_8:
  if ((v5 & 0x10) != 0)
  {
LABEL_9:
    v6 = *(_DWORD *)(a2 + 32);
    a1[10] |= 0x10u;
    a1[8] = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C2C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C2C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C2C34(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FAE90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C2C64(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FAE90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001C2CA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1001C2CB0()
{
  operator new();
}

void sub_1001C2D10()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C2D38(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 40))
  {
    *(_DWORD *)(a1 + 16) = 10;
    *(_OWORD *)(a1 + 20) = xmmword_10038E0D0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001C2D68(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  uint64_t result;
  unint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  unsigned int v19;

  v6 = a1 + 4;
  v7 = (_DWORD)a1 + 8;
  while (2)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *v6 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)this + 1) = v13;
          a1[10] |= 1u;
          if ((unint64_t)v13 >= v11)
            continue;
          goto LABEL_29;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if ((_DWORD)result)
        {
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          a1[10] |= 1u;
          if ((unint64_t)v13 >= v15)
            continue;
LABEL_29:
          if (*v13 != 21)
            continue;
          *((_QWORD *)this + 1) = v13 + 1;
          v19 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0)
            return 0;
          goto LABEL_31;
        }
        return result;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_24;
        v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0)
          return 0;
LABEL_31:
        a1[5] = v19;
        a1[10] |= 2u;
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 != 29)
          continue;
        *((_QWORD *)this + 1) = v16 + 1;
        v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0)
          return 0;
LABEL_34:
        a1[6] = v19;
        a1[10] |= 4u;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 != 37)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
        v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0)
          return 0;
LABEL_37:
        a1[7] = v19;
        a1[10] |= 8u;
        v18 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 != 45)
          continue;
        *((_QWORD *)this + 1) = v18 + 1;
LABEL_40:
        v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0)
          return 0;
        a1[8] = v19;
        a1[10] |= 0x10u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_24;
        v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0)
          return 0;
        goto LABEL_34;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_24;
        v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0)
          return 0;
        goto LABEL_37;
      case 5u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_24;
        goto LABEL_40;
      default:
        v10 = TagFallback & 7;
LABEL_24:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1001C3094(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  if ((*(_DWORD *)(v5 + 40) & 0x10) == 0)
  {
LABEL_6:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 32), a3);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_13:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

_BYTE *sub_1001C3170(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _QWORD *v13;

  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    *a2 = 8;
    if (v8 > 0x7F)
    {
      a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
      v4 = *((_DWORD *)this + 10);
      if ((v4 & 2) != 0)
        goto LABEL_12;
    }
    else
    {
      a2[1] = (_BYTE)v8;
      a2 += 2;
      v4 = *((_DWORD *)this + 10);
      if ((v4 & 2) != 0)
        goto LABEL_12;
    }
LABEL_3:
    if ((v4 & 4) == 0)
      goto LABEL_4;
    goto LABEL_13;
  }
  v4 = *((_DWORD *)this + 10);
  if ((v4 & 2) == 0)
    goto LABEL_3;
LABEL_12:
  v9 = *((_DWORD *)this + 5);
  *a2 = 21;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  v4 = *((_DWORD *)this + 10);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  v10 = *((_DWORD *)this + 6);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  v4 = *((_DWORD *)this + 10);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0)
      goto LABEL_6;
LABEL_15:
    v12 = *((_DWORD *)this + 8);
    *a2 = 45;
    *(_DWORD *)(a2 + 1) = v12;
    a2 += 5;
    v13 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v13;
    if (!v13)
      return a2;
    goto LABEL_16;
  }
LABEL_14:
  v11 = *((_DWORD *)this + 7);
  *a2 = 37;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  if ((*((_DWORD *)this + 10) & 0x10) != 0)
    goto LABEL_15;
LABEL_6:
  v7 = (_QWORD *)*((_QWORD *)this + 1);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v5 = v7;
  if (!v7)
    return a2;
LABEL_16:
  if (*v5 != v5[1])
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001C32E4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  uint64_t v10;

  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if (v9 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        v4 = 2;
      }
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      v4 += 5;
    if ((v3 & 4) != 0)
      v4 += 5;
    if ((v3 & 8) != 0)
      v4 += 5;
    if ((v3 & 0x10) != 0)
      v5 = v4 + 5;
    else
      v5 = v4;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_5;
  }
  else
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
    {
LABEL_5:
      *(_DWORD *)(a1 + 36) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1])
    goto LABEL_5;
  v10 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 36) = v10;
  return v10;
}

uint64_t sub_1001C33B0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 11625);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C2AF0(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C3464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C3478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C348C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C34D4()
{
  return 1;
}

uint64_t sub_1001C34DC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419DE8;
}

void sub_1001C3550(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C3564(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _DWORD *v9;
  uint64_t v10;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 11976);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
    LOBYTE(v4) = *(_BYTE *)(a2 + 48);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  else
  {
    LOBYTE(v4) = *(_BYTE *)(a2 + 48);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 1) != 0)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(_QWORD *)(a1 + 16) = v6;
    v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0)
        goto LABEL_8;
LABEL_12:
      v8 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 48) |= 4u;
      *(_DWORD *)(a1 + 40) = v8;
      if ((*(_DWORD *)(a2 + 48) & 8) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) |= 2u;
  *(_QWORD *)(a1 + 24) = v7;
  v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 4) != 0)
    goto LABEL_12;
LABEL_8:
  if ((v4 & 8) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_13:
  *(_DWORD *)(a1 + 48) |= 8u;
  v9 = *(_DWORD **)(a1 + 32);
  if (!v9)
    operator new();
  v10 = *(_QWORD *)(a2 + 32);
  if (!v10)
    v10 = *(_QWORD *)(qword_10041B070 + 32);
  sub_1001C2AF0(v9, v10);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C36E4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C370C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C3720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C3734(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1003FAF40;
  if ((_QWORD *)qword_10041B070 != a1)
  {
    v2 = a1[4];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C378C(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1003FAF40;
  if ((_QWORD *)qword_10041B070 != a1)
  {
    v2 = a1[4];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001C37F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1001C3800()
{
  operator new();
}

void sub_1001C385C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C3884(uint64_t this)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  v2 = *(_BYTE *)(this + 48);
  if (v2)
  {
    *(_OWORD *)(this + 16) = xmmword_10038E0E0;
    *(_DWORD *)(this + 40) = 0;
    if ((v2 & 8) != 0)
    {
      this = *(_QWORD *)(this + 32);
      if (this)
      {
        if (*(_BYTE *)(this + 40))
        {
          *(_DWORD *)(this + 16) = 10;
          *(_OWORD *)(this + 20) = xmmword_10038E0D0;
        }
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 32) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 10) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_1001C390C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  unint64_t v11;
  _BYTE *v12;
  char *v13;
  unsigned int v14;
  uint64_t result;
  _BYTE *v16;
  _DWORD *v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v23;
  int v24;
  BOOL v25;
  int v26;
  unsigned int v27[2];

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_26;
        *(_QWORD *)v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v27;
        *(_DWORD *)(a1 + 48) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_26;
LABEL_15:
        *(_QWORD *)v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v27;
        *(_DWORD *)(a1 + 48) |= 2u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 != 24)
          continue;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_21:
        v27[0] = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!(_DWORD)result)
            return result;
          v14 = v27[0];
          if (v27[0] <= 1)
          {
LABEL_24:
            *(_DWORD *)(a1 + 48) |= 4u;
            *(_DWORD *)(a1 + 40) = v14;
            goto LABEL_32;
          }
        }
        else
        {
          v14 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
          if (v14 <= 1)
            goto LABEL_24;
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v14);
LABEL_32:
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 != 34)
          continue;
        *((_QWORD *)this + 1) = v16 + 1;
LABEL_35:
        *(_DWORD *)(a1 + 48) |= 8u;
        v17 = *(_DWORD **)(a1 + 32);
        if (!v17)
          operator new();
        v27[0] = 0;
        v18 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0;
        }
        else
        {
          v27[0] = *v18;
          *((_QWORD *)this + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)this + 14);
        v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 < v20)
        {
          v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
          if (sub_1001C2D68(v17, this, v22, v23))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
              v24 = *((_DWORD *)this + 14);
              v25 = __OFSUB__(v24, 1);
              v26 = v24 - 1;
              if (v26 < 0 == v25)
                *((_DWORD *)this + 14) = v26;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v13 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_21;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_26;
        goto LABEL_35;
      default:
        v9 = TagFallback & 7;
LABEL_26:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
        continue;
    }
  }
}

void sub_1001C3C64()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C3C8C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 40), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 8) == 0)
  {
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_14;
  }
LABEL_10:
  v10 = *(_QWORD *)(v5 + 32);
  if (v10)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
    v11 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v11;
    if (!v11)
      return this;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(qword_10041B070 + 32), a2, a4);
    v12 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v12;
    if (!v12)
      return this;
  }
LABEL_14:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C3D74(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  unint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  _QWORD *v16;
  _BYTE *v17;
  unsigned __int8 *v18;
  _QWORD *v19;

  v3 = a2;
  v5 = *((_DWORD *)this + 12);
  if ((v5 & 1) != 0)
  {
    v9 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)((char *)a2 + 1) = v9;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    v5 = *((_DWORD *)this + 12);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
LABEL_9:
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
      *(_BYTE *)v3 = 24;
      v12 = (unint64_t)v3 + 1;
      if ((v11 & 0x80000000) != 0)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
        if ((*((_BYTE *)this + 48) & 8) != 0)
          goto LABEL_16;
      }
      else if (v11 > 0x7F)
      {
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
        if ((*((_BYTE *)this + 48) & 8) != 0)
          goto LABEL_16;
      }
      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v11;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        if ((*((_BYTE *)this + 48) & 8) != 0)
          goto LABEL_16;
      }
LABEL_5:
      v8 = (_QWORD *)*((_QWORD *)this + 1);
      v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      v6 = v8;
      if (!v8)
        return v3;
      goto LABEL_22;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = *((_QWORD *)this + 3);
  *(_BYTE *)v3 = 17;
  *(_QWORD *)((char *)v3 + 1) = v10;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 12) & 4) != 0)
    goto LABEL_9;
LABEL_4:
  if ((*((_BYTE *)this + 48) & 8) == 0)
    goto LABEL_5;
LABEL_16:
  v13 = (unsigned int *)*((_QWORD *)this + 4);
  if (v13)
  {
    *(_BYTE *)v3 = 34;
    v14 = (_DWORD)v3 + 1;
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[9];
    if (v15 <= 0x7F)
      goto LABEL_18;
LABEL_21:
    v17 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v14, a3);
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C3170((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v17, v18);
    v19 = (_QWORD *)*((_QWORD *)this + 1);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v6 = v19;
    if (!v19)
      return v3;
    goto LABEL_22;
  }
  v13 = *(unsigned int **)(qword_10041B070 + 32);
  *(_BYTE *)v3 = 34;
  v14 = (_DWORD)v3 + 1;
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[9];
  if (v15 > 0x7F)
    goto LABEL_21;
LABEL_18:
  *((_BYTE *)v3 + 1) = (_BYTE)v15;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C3170((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, (_BYTE *)v3 + 2, a3);
  v16 = (_QWORD *)*((_QWORD *)this + 1);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v6 = v16;
  if (!v16)
    return v3;
LABEL_22:
  if (*v6 != v6[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
  return v3;
}

uint64_t sub_1001C3F58(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v14;
  _QWORD *v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  uint64_t v18;

  v3 = *(unsigned __int8 *)(a1 + 48);
  if (!*(_BYTE *)(a1 + 48))
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_8;
    goto LABEL_44;
  }
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v5 = v4 + 9;
  else
    v5 = v4;
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_7;
LABEL_18:
    v10 = *(_QWORD *)(a1 + 32);
    if (v10)
    {
      LOBYTE(v11) = *(_BYTE *)(v10 + 40);
      if ((_BYTE)v11)
        goto LABEL_20;
    }
    else
    {
      v10 = *(_QWORD *)(qword_10041B070 + 32);
      LOBYTE(v11) = *(_BYTE *)(v10 + 40);
      if ((_BYTE)v11)
      {
LABEL_20:
        if ((v11 & 1) != 0)
        {
          v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 16);
          if (v16 >= 0x80)
          {
            v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)+ 1;
            v11 = *(_DWORD *)(v10 + 40);
          }
          else
          {
            v12 = 2;
          }
        }
        else
        {
          v12 = 0;
        }
        if ((v11 & 2) != 0)
          v12 += 5;
        if ((v11 & 4) != 0)
          v12 += 5;
        if ((v11 & 8) != 0)
          v12 += 5;
        if ((v11 & 0x10) != 0)
          v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v12 + 5);
        else
          v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
        v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v10 + 8);
        v15 = *(_QWORD **)(v10 + 8);
        if (!v15)
        {
LABEL_40:
          *(_DWORD *)(v10 + 36) = (_DWORD)v13;
          if (v13 >= 0x80)
            v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
          else
            v17 = 1;
          v5 = (v5 + (_DWORD)v13 + v17 + 1);
          v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
          v7 = *(_QWORD **)(a1 + 8);
          if (!v7)
            goto LABEL_8;
          goto LABEL_44;
        }
LABEL_38:
        if (*v15 != v15[1])
          v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v14, a2)+ v13);
        goto LABEL_40;
      }
    }
    v13 = 0;
    v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v10 + 8);
    v15 = *(_QWORD **)(v10 + 8);
    if (!v15)
      goto LABEL_40;
    goto LABEL_38;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if ((v9 & 0x80000000) != 0)
  {
    v5 = (v5 + 11);
    if ((v3 & 8) != 0)
      goto LABEL_18;
  }
  else if (v9 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)+ 1+ v5;
    if ((*(_DWORD *)(a1 + 48) & 8) != 0)
      goto LABEL_18;
  }
  else
  {
    v5 = (v5 + 2);
    if ((v3 & 8) != 0)
      goto LABEL_18;
  }
LABEL_7:
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 8);
  if (!v7)
  {
LABEL_8:
    *(_DWORD *)(a1 + 44) = v5;
    return v5;
  }
LABEL_44:
  if (*v7 == v7[1])
    goto LABEL_8;
  v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 44) = v18;
  return v18;
}

uint64_t sub_1001C4124(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 11964);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C3564((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C41D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C41EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C4200(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C4248()
{
  return 1;
}

uint64_t sub_1001C4250()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419DF8;
}

void sub_1001C42C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C42D8(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  std::string *v5;
  uint64_t v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  const std::string *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  std::string *v14;
  uint64_t v15;
  std::string *v16;
  uint64_t v17;
  uint64_t v18;
  const std::string *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  _BYTE v25[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v25, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 12249);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v24, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    v6 = 0;
    do
    {
      while (1)
      {
        v10 = *(const std::string **)(*(_QWORD *)(a2 + 16) + 8 * v6);
        v11 = a1[7];
        v12 = (int)a1[6];
        if ((int)v12 >= v11)
          break;
        v13 = *((_QWORD *)a1 + 2);
        a1[6] = v12 + 1;
        v5 = std::string::operator=(*(std::string **)(v13 + 8 * v12), v10);
        if (++v6 >= *(int *)(a2 + 24))
          goto LABEL_11;
      }
      if (v11 == a1[8])
      {
        v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v11 + 1);
        v11 = a1[7];
      }
      a1[7] = v11 + 1;
      v7 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v5);
      v8 = *((_QWORD *)a1 + 2);
      v9 = (int)a1[6];
      a1[6] = v9 + 1;
      *(_QWORD *)(v8 + 8 * v9) = v7;
      v5 = std::string::operator=(v7, v10);
      ++v6;
    }
    while (v6 < *(int *)(a2 + 24));
  }
LABEL_11:
  v14 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 10), *(_DWORD *)(a2 + 48) + a1[12]);
  if (*(int *)(a2 + 48) >= 1)
  {
    v15 = 0;
    do
    {
      while (1)
      {
        v19 = *(const std::string **)(*(_QWORD *)(a2 + 40) + 8 * v15);
        v20 = a1[13];
        v21 = (int)a1[12];
        if ((int)v21 >= v20)
          break;
        v22 = *((_QWORD *)a1 + 5);
        a1[12] = v21 + 1;
        v14 = std::string::operator=(*(std::string **)(v22 + 8 * v21), v19);
        if (++v15 >= *(int *)(a2 + 48))
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      if (v20 == a1[14])
      {
        v14 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 10), v20 + 1);
        v20 = a1[13];
      }
      a1[13] = v20 + 1;
      v16 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v14);
      v17 = *((_QWORD *)a1 + 5);
      v18 = (int)a1[12];
      a1[12] = v18 + 1;
      *(_QWORD *)(v17 + 8 * v18) = v16;
      v14 = std::string::operator=(v16, v19);
      ++v15;
    }
    while (v15 < *(int *)(a2 + 48));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C44F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C4504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C4518(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a1 = off_1003FAFF0;
  if (*(int *)(a1 + 52) >= 1)
  {
    v2 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete(*(_QWORD *)(*(_QWORD *)(a1 + 40)
                                                                                                + 8 * v2++));
    while (v2 < *(int *)(a1 + 52));
  }
  if (*(_QWORD *)(a1 + 40))
    operator delete[]();
  if (*(int *)(a1 + 28) >= 1)
  {
    v3 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete(*(_QWORD *)(*(_QWORD *)(a1 + 16)
                                                                                                + 8 * v3++));
    while (v3 < *(int *)(a1 + 28));
  }
  if (*(_QWORD *)(a1 + 16))
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C45E8(uint64_t a1)
{
  sub_1001C4518(a1);
  operator delete();
}

uint64_t sub_1001C460C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_1001C4614()
{
  operator new();
}

void sub_1001C4670()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C4698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v6;

  if (*(int *)(a1 + 24) >= 1)
  {
    v1 = 0;
    do
    {
      while (1)
      {
        v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v1);
        if (*(char *)(v2 + 23) < 0)
          break;
        *(_BYTE *)v2 = 0;
        *(_BYTE *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 24))
          goto LABEL_6;
      }
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 24));
  }
LABEL_6:
  *(_DWORD *)(a1 + 24) = 0;
  if (*(int *)(a1 + 48) >= 1)
  {
    v3 = 0;
    do
    {
      while (1)
      {
        v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8 * v3);
        if (*(char *)(v4 + 23) < 0)
          break;
        *(_BYTE *)v4 = 0;
        *(_BYTE *)(v4 + 23) = 0;
        if (++v3 >= *(int *)(a1 + 48))
          goto LABEL_11;
      }
      **(_BYTE **)v4 = 0;
      *(_QWORD *)(v4 + 8) = 0;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 48));
  }
LABEL_11:
  v6 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 15) = 0;
  if (v6)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001C4764(uint64_t result, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  unsigned int v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;

  v5 = result;
  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 16);
  v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 40);
  v8 = result + 8;
  while (1)
  {
LABEL_2:
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
      *((_DWORD *)this + 8) = result;
      if (!(_DWORD)result)
        return 1;
    }
    else
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)v10;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)v10)
        return 1;
    }
    if (v10 >> 3 == 1)
      break;
    if (v10 >> 3 == 2)
    {
      v11 = v10 & 7;
      if (v11 == 2)
      {
        v12 = *(_DWORD *)(v5 + 52);
        v13 = *(int *)(v5 + 48);
        if ((int)v13 >= v12)
          goto LABEL_30;
LABEL_11:
        v14 = *(_QWORD *)(v5 + 40);
        *(_DWORD *)(v5 + 48) = v13 + 1;
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, *(_QWORD *)(v14 + 8 * v13));
        if ((_DWORD)result)
          goto LABEL_33;
        return result;
      }
    }
    else
    {
      v11 = v10 & 7;
    }
LABEL_25:
    if (v11 == 4)
      return 1;
    result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v10, v8, a4);
    if ((result & 1) == 0)
      return 0;
  }
  v11 = v10 & 7;
  if (v11 != 2)
    goto LABEL_25;
  v15 = *(_DWORD *)(v5 + 28);
  v16 = *(int *)(v5 + 24);
  if ((int)v16 >= v15)
  {
    while (1)
    {
      if (v15 == *(_DWORD *)(v5 + 32))
      {
        result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v15 + 1);
        v15 = *(_DWORD *)(v5 + 28);
      }
      *(_DWORD *)(v5 + 28) = v15 + 1;
      v18 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
      v19 = *(_QWORD *)(v5 + 16);
      v20 = *(int *)(v5 + 24);
      *(_DWORD *)(v5 + 24) = v20 + 1;
      *(_QWORD *)(v19 + 8 * v20) = v18;
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v18);
      if (!(_DWORD)result)
        break;
LABEL_20:
      v21 = (_BYTE *)*((_QWORD *)this + 1);
      if ((unint64_t)v21 >= *((_QWORD *)this + 2))
        goto LABEL_2;
      v22 = *v21;
      if (v22 != 10)
      {
        if (v22 != 18)
          goto LABEL_2;
        while (1)
        {
          *((_QWORD *)this + 1) = v21 + 1;
          v12 = *(_DWORD *)(v5 + 52);
          v13 = *(int *)(v5 + 48);
          if ((int)v13 < v12)
            goto LABEL_11;
LABEL_30:
          if (v12 == *(_DWORD *)(v5 + 56))
          {
            result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v12 + 1);
            v12 = *(_DWORD *)(v5 + 52);
          }
          *(_DWORD *)(v5 + 52) = v12 + 1;
          v23 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
          v24 = *(_QWORD *)(v5 + 40);
          v25 = *(int *)(v5 + 48);
          *(_DWORD *)(v5 + 48) = v25 + 1;
          *(_QWORD *)(v24 + 8 * v25) = v23;
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v23);
          if (!(_DWORD)result)
            return result;
LABEL_33:
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v26 = (_BYTE *)*((_QWORD *)this + 2);
          if (v21 >= v26 || *v21 != 18)
          {
            if (v21 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              result = 1;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
        }
      }
      *((_QWORD *)this + 1) = v21 + 1;
      v15 = *(_DWORD *)(v5 + 28);
      v16 = *(int *)(v5 + 24);
      if ((int)v16 < v15)
        goto LABEL_15;
    }
  }
  else
  {
LABEL_15:
    v17 = *(_QWORD *)(v5 + 16);
    *(_DWORD *)(v5 + 24) = v16 + 1;
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, *(_QWORD *)(v17 + 8 * v16));
    if ((_DWORD)result)
      goto LABEL_20;
  }
  return result;
}

uint64_t sub_1001C49EC(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8 * v5++), a2);
    while (v5 < *(int *)(v4 + 24));
  }
  if (*(int *)(v4 + 48) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2, *(_QWORD *)(*(_QWORD *)(v4 + 40) + 8 * v6++), a2);
    while (v6 < *(int *)(v4 + 48));
  }
  v9 = *(_QWORD **)(v4 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C4AA8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t i;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  const void *v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  uint64_t j;
  int v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  const void *v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  _QWORD *v20;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v21;
  _QWORD *v22;

  if (*((int *)this + 6) >= 1)
  {
    for (i = 0; i < *((int *)this + 6); ++i)
    {
      v11 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * i);
      *(_BYTE *)a2 = 10;
      if (*(char *)(v11 + 23) < 0)
      {
        v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
        if (v12 <= 0x7F)
        {
LABEL_15:
          *((_BYTE *)a2 + 1) = (_BYTE)v12;
          v7 = (_DWORD)a2 + 2;
          goto LABEL_4;
        }
      }
      else
      {
        v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
        if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu)
          goto LABEL_15;
      }
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
LABEL_4:
      v8 = *(char *)(v11 + 23);
      if (v8 >= 0)
        v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
      else
        v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
      if (v8 >= 0)
        v10 = (const void *)*(unsigned __int8 *)(v11 + 23);
      else
        v10 = (const void *)*(unsigned int *)(v11 + 8);
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
    }
  }
  if (*((int *)this + 12) >= 1)
  {
    for (j = 0; j < *((int *)this + 12); ++j)
    {
      v18 = *(_QWORD *)(*((_QWORD *)this + 5) + 8 * j);
      *(_BYTE *)a2 = 18;
      if (*(char *)(v18 + 23) < 0)
      {
        v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v18 + 8);
        if (v19 <= 0x7F)
        {
LABEL_30:
          *((_BYTE *)a2 + 1) = (_BYTE)v19;
          v14 = (_DWORD)a2 + 2;
          goto LABEL_19;
        }
      }
      else
      {
        v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
        if (*(unsigned __int8 *)(v18 + 23) <= 0x7Fu)
          goto LABEL_30;
      }
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)a2 + 1, a3);
LABEL_19:
      v15 = *(char *)(v18 + 23);
      if (v15 >= 0)
        v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
      else
        v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
      if (v15 >= 0)
        v17 = (const void *)*(unsigned __int8 *)(v18 + 23);
      else
        v17 = (const void *)*(unsigned int *)(v18 + 8);
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
    }
  }
  v22 = (_QWORD *)*((_QWORD *)this + 1);
  v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v20 = v22;
  if (!v22 || *v20 == v20[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, a2, a3);
}

uint64_t sub_1001C4C28(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t i;
  int v15;
  int v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;

  v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    v5 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v4 = 0;
    v5 = *(_DWORD *)(a1 + 24);
    do
    {
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v4);
      v7 = *(unsigned __int8 *)(v10 + 23);
      v9 = v7;
      v8 = *(_QWORD *)(v10 + 8);
      if ((v7 & 0x80u) == 0)
        v11 = *(unsigned __int8 *)(v10 + 23);
      else
        v11 = v8;
      if (v11 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
        v7 = *(unsigned __int8 *)(v10 + 23);
        v8 = *(_QWORD *)(v10 + 8);
        v3 = *(_DWORD *)(a1 + 24);
        v9 = *(_BYTE *)(v10 + 23);
      }
      else
      {
        v6 = 1;
      }
      if (v9 < 0)
        v7 = v8;
      v5 += v6 + v7;
      ++v4;
    }
    while (v4 < v3);
  }
  v12 = *(_DWORD *)(a1 + 48);
  v13 = (v12 + v5);
  if (v12 >= 1)
  {
    for (i = 0; i < v12; ++i)
    {
      v19 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8 * i);
      v16 = *(unsigned __int8 *)(v19 + 23);
      v18 = v16;
      v17 = *(_QWORD *)(v19 + 8);
      if ((v16 & 0x80u) == 0)
        v20 = *(unsigned __int8 *)(v19 + 23);
      else
        v20 = v17;
      if (v20 >= 0x80)
      {
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20, a2);
        v16 = *(unsigned __int8 *)(v19 + 23);
        v17 = *(_QWORD *)(v19 + 8);
        v12 = *(_DWORD *)(a1 + 48);
        v18 = *(_BYTE *)(v19 + 23);
      }
      else
      {
        v15 = 1;
      }
      if (v18 < 0)
        v16 = v17;
      v13 = (v15 + v13 + v16);
    }
  }
  v21 = *(_QWORD **)(a1 + 8);
  if (v21 && *v21 != v21[1])
    v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v13;
  *(_DWORD *)(a1 + 64) = v13;
  return v13;
}

uint64_t sub_1001C4D68(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 12237);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C42D8(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C4E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C4E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C4E44(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C4E8C()
{
  return 1;
}

uint64_t sub_1001C4E94()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E08;
}

void sub_1001C4F08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C4F1C(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  char v11;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 12564);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
    LOBYTE(v4) = *(_BYTE *)(a2 + 44);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  else
  {
    LOBYTE(v4) = *(_BYTE *)(a2 + 44);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    v6 = *(_DWORD **)(a1 + 16);
    if (!v6)
      operator new();
    v7 = *(_QWORD *)(a2 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10041B080 + 16);
    sub_1001C42D8(v6, v7);
    v4 = *(_DWORD *)(a2 + 44);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0)
      goto LABEL_12;
LABEL_16:
    v11 = *(_BYTE *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_BYTE *)(a1 + 32) = v11;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_13;
  }
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_QWORD *)(a1 + 24) = v10;
  v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) != 0)
    goto LABEL_16;
LABEL_12:
  if ((v4 & 8) != 0)
  {
LABEL_13:
    v8 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 36) = v8;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C5094()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C50BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C50D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C50E4(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1003FB0A0;
  if ((_QWORD *)qword_10041B080 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C513C(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1003FB0A0;
  if ((_QWORD *)qword_10041B080 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001C51A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001C51B0()
{
  operator new();
}

void sub_1001C5218()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C5240(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  uint64_t v8;

  v1 = this;
  if (*(_BYTE *)(this + 44))
  {
    if ((*(_BYTE *)(this + 44) & 1) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        if (*(int *)(this + 24) >= 1)
        {
          v2 = 0;
          do
          {
            while (1)
            {
              v3 = *(_QWORD *)(*(_QWORD *)(this + 16) + 8 * v2);
              if (*(char *)(v3 + 23) < 0)
                break;
              *(_BYTE *)v3 = 0;
              *(_BYTE *)(v3 + 23) = 0;
              if (++v2 >= *(int *)(this + 24))
                goto LABEL_9;
            }
            **(_BYTE **)v3 = 0;
            *(_QWORD *)(v3 + 8) = 0;
            ++v2;
          }
          while (v2 < *(int *)(this + 24));
        }
LABEL_9:
        *(_DWORD *)(this + 24) = 0;
        if (*(int *)(this + 48) >= 1)
        {
          v4 = 0;
          do
          {
            while (1)
            {
              v5 = *(_QWORD *)(*(_QWORD *)(this + 40) + 8 * v4);
              if (*(char *)(v5 + 23) < 0)
                break;
              *(_BYTE *)v5 = 0;
              *(_BYTE *)(v5 + 23) = 0;
              if (++v4 >= *(int *)(this + 48))
                goto LABEL_14;
            }
            **(_BYTE **)v5 = 0;
            *(_QWORD *)(v5 + 8) = 0;
            ++v4;
          }
          while (v4 < *(int *)(this + 48));
        }
LABEL_14:
        v6 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 40) = 0;
        *(_DWORD *)(this + 60) = 0;
        if (v6)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    *(_QWORD *)(v1 + 24) = 0x4049000000000000;
    *(_BYTE *)(v1 + 32) = 1;
    *(_DWORD *)(v1 + 36) = 307200;
  }
  v8 = *(_QWORD *)(v1 + 8);
  v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v7 + 9) = 0;
  if (v8)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  return this;
}

uint64_t sub_1001C5370(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE *v27;
  uint64_t result;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32[2];

  v6 = (unsigned int *)(a1 + 36);
  v7 = a1 + 8;
  while (1)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 < *((_QWORD *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_22;
        *(_DWORD *)(a1 + 44) |= 1u;
        v11 = *(_QWORD *)(a1 + 16);
        if (!v11)
          operator new();
        v32[0] = 0;
        v12 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v32))return 0;
        }
        else
        {
          v32[0] = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
        }
        v16 = *((_DWORD *)this + 14);
        v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17)
          return 0;
        v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32[0]);
        if (!sub_1001C4764(v11, this, v19, v20) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        v21 = *((_DWORD *)this + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)this + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v24 >= *((_QWORD *)this + 2) || *v24 != 17)
          continue;
        *((_QWORD *)this + 1) = v24 + 1;
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0;
        goto LABEL_36;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 1)
          goto LABEL_22;
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0;
LABEL_36:
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v32;
        *(_DWORD *)(a1 + 44) |= 2u;
        v25 = (_BYTE *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v25 >= v13 || *v25 != 24)
          continue;
        v14 = v25 + 1;
        *((_QWORD *)this + 1) = v14;
        v32[0] = 0;
        if ((unint64_t)v14 >= v13)
          goto LABEL_41;
LABEL_39:
        if (*v14 < 0)
        {
LABEL_41:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v32);
          if (!(_DWORD)result)
            return result;
          v26 = v32[0];
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          v26 = *v14;
          v27 = v14 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        *(_BYTE *)(a1 + 32) = v26 != 0;
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v27 >= v13 || *v27 != 32)
          continue;
        v15 = v27 + 1;
        *((_QWORD *)this + 1) = v15;
        if ((unint64_t)v15 >= v13)
          goto LABEL_49;
LABEL_46:
        if (*v15 < 0)
        {
LABEL_49:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v31 = *((_QWORD *)this + 1);
          v30 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 44) |= 8u;
          if (v31 != v30)
            continue;
        }
        else
        {
          *v6 = *v15;
          v29 = (unsigned __int8 *)(v15 + 1);
          *((_QWORD *)this + 1) = v29;
          *(_DWORD *)(a1 + 44) |= 8u;
          if (v29 != (unsigned __int8 *)v13)
            continue;
        }
        if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        v32[0] = 0;
        if ((unint64_t)v14 >= v13)
          goto LABEL_41;
        goto LABEL_39;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v15 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 >= v13)
          goto LABEL_49;
        goto LABEL_46;
      default:
        v10 = TagFallback & 7;
LABEL_22:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) != 0)
          continue;
        return 0;
    }
  }
}

void sub_1001C5700()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C5728(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    v10 = *(_QWORD *)(this + 16);
    if (v10)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      v6 = *(_DWORD *)(v5 + 44);
      if ((v6 & 2) != 0)
        goto LABEL_11;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(qword_10041B080 + 16), a2, a4);
      v6 = *(_DWORD *)(v5 + 44);
      if ((v6 & 2) != 0)
        goto LABEL_11;
    }
LABEL_3:
    if ((v6 & 4) == 0)
      goto LABEL_4;
    goto LABEL_12;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 32), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) == 0)
  {
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 36), a2, a4);
  v11 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v11;
  if (!v11)
    return this;
LABEL_14:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C5810(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  unsigned int *v10;
  unsigned int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  char v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  _QWORD *v19;
  _QWORD *v20;

  v5 = *((_DWORD *)this + 11);
  if ((v5 & 1) != 0)
  {
    v10 = (unsigned int *)*((_QWORD *)this + 2);
    if (v10)
    {
      *(_BYTE *)a2 = 10;
      v11 = (_DWORD)a2 + 1;
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[16];
      if (v12 <= 0x7F)
        goto LABEL_10;
    }
    else
    {
      v10 = *(unsigned int **)(qword_10041B080 + 16);
      *(_BYTE *)a2 = 10;
      v11 = (_DWORD)a2 + 1;
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[16];
      if (v12 <= 0x7F)
      {
LABEL_10:
        *((_BYTE *)a2 + 1) = (_BYTE)v12;
        a2 = sub_1001C4AA8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2), a3, a4);
        v5 = *((_DWORD *)this + 11);
        if ((v5 & 2) != 0)
          goto LABEL_14;
LABEL_3:
        if ((v5 & 4) == 0)
          goto LABEL_4;
        goto LABEL_15;
      }
    }
    v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
    a2 = sub_1001C4AA8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v13, v14, v15);
    v5 = *((_DWORD *)this + 11);
    if ((v5 & 2) != 0)
      goto LABEL_14;
    goto LABEL_3;
  }
  if ((v5 & 2) == 0)
    goto LABEL_3;
LABEL_14:
  v16 = *((_QWORD *)this + 3);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)((char *)a2 + 1) = v16;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
  v5 = *((_DWORD *)this + 11);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  v17 = *((_BYTE *)this + 32);
  *(_BYTE *)a2 = 24;
  *((_BYTE *)a2 + 1) = v17;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  if ((*((_DWORD *)this + 11) & 8) == 0)
  {
LABEL_5:
    v8 = (_QWORD *)*((_QWORD *)this + 1);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v6 = v8;
    if (!v8)
      return a2;
    goto LABEL_6;
  }
LABEL_16:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  *(_BYTE *)a2 = 32;
  if (v18 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)a2 + 1, a3);
    v20 = (_QWORD *)*((_QWORD *)this + 1);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v6 = v20;
    if (!v20)
      return a2;
  }
  else
  {
    *((_BYTE *)a2 + 1) = (_BYTE)v18;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    v19 = (_QWORD *)*((_QWORD *)this + 1);
    v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v6 = v19;
    if (!v19)
      return a2;
  }
LABEL_6:
  if (*v6 != v6[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, a2, a3);
  return a2;
}

uint64_t sub_1001C599C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  _QWORD *v11;

  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    v5 = 0;
    goto LABEL_21;
  }
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v6)
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C4C28(v6, a2);
      if (v7 < 0x80)
      {
LABEL_7:
        v8 = 1;
LABEL_10:
        v4 = (_DWORD)v7 + v8 + 1;
        v3 = *(_DWORD *)(a1 + 44);
        goto LABEL_11;
      }
    }
    else
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C4C28(*(_QWORD *)(qword_10041B080 + 16), a2);
      if (v7 < 0x80)
        goto LABEL_7;
    }
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    goto LABEL_10;
  }
  v4 = 0;
LABEL_11:
  if ((v3 & 2) != 0)
    v4 += 9;
  if ((v3 & 4) != 0)
    v5 = v4 + 2;
  else
    v5 = v4;
  if ((v3 & 8) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v9 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
          + 1;
    else
      v10 = 2;
    v5 = (v10 + v5);
  }
LABEL_21:
  v11 = *(_QWORD **)(a1 + 8);
  if (v11 && *v11 != v11[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_1001C5A88(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 12552);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C4F1C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C5B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C5B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C5B64(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C5BAC()
{
  return 1;
}

uint64_t sub_1001C5BB4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E18;
}

void sub_1001C5C28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C5C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::string *v5;
  uint64_t v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  const std::string *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v16;
  _BYTE v17[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v17, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 12828);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    v6 = 0;
    do
    {
      while (1)
      {
        v10 = *(const std::string **)(*(_QWORD *)(a2 + 16) + 8 * v6);
        v11 = *(_DWORD *)(a1 + 28);
        v12 = *(int *)(a1 + 24);
        if ((int)v12 >= v11)
          break;
        v13 = *(_QWORD *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v12 + 1;
        v5 = std::string::operator=(*(std::string **)(v13 + 8 * v12), v10);
        if (++v6 >= *(int *)(a2 + 24))
          goto LABEL_11;
      }
      if (v11 == *(_DWORD *)(a1 + 32))
      {
        v5 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v11 + 1);
        v11 = *(_DWORD *)(a1 + 28);
      }
      *(_DWORD *)(a1 + 28) = v11 + 1;
      v7 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v5);
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(int *)(a1 + 24);
      *(_DWORD *)(a1 + 24) = v9 + 1;
      *(_QWORD *)(v8 + 8 * v9) = v7;
      v5 = std::string::operator=(v7, v10);
      ++v6;
    }
    while (v6 < *(int *)(a2 + 24));
  }
LABEL_11:
  if ((*(_BYTE *)(a2 + 48) & 1) != 0)
  {
    v14 = *(_BYTE *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(_BYTE *)(a1 + 40) = v14;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C5DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C5DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C5DD0(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_1003FB150;
  if (*(int *)(a1 + 28) >= 1)
  {
    v2 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete(*(_QWORD *)(*(_QWORD *)(a1 + 16)
                                                                                                + 8 * v2++));
    while (v2 < *(int *)(a1 + 28));
  }
  if (*(_QWORD *)(a1 + 16))
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C5E50(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_1003FB150;
  if (*(int *)(a1 + 28) >= 1)
  {
    v2 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete(*(_QWORD *)(*(_QWORD *)(a1 + 16)
                                                                                                + 8 * v2++));
    while (v2 < *(int *)(a1 + 28));
  }
  if (*(_QWORD *)(a1 + 16))
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001C5EE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1001C5EEC()
{
  operator new();
}

void sub_1001C5F48()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C5F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;

  if (*(_BYTE *)(a1 + 48))
    *(_BYTE *)(a1 + 40) = 1;
  if (*(int *)(a1 + 24) >= 1)
  {
    v1 = 0;
    do
    {
      while (1)
      {
        v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v1);
        if (*(char *)(v2 + 23) < 0)
          break;
        *(_BYTE *)v2 = 0;
        *(_BYTE *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 24))
          goto LABEL_8;
      }
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 24));
  }
LABEL_8:
  v4 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001C5FF0(uint64_t result, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unsigned int v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  unsigned int v22;

  v5 = result;
  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 16);
  v7 = result + 8;
  do
  {
    while (1)
    {
LABEL_2:
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
        *((_DWORD *)this + 8) = result;
        if (!(_DWORD)result)
          return 1;
      }
      else
      {
        v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + 8) = (_DWORD)v9;
        *((_QWORD *)this + 1) = v8 + 1;
        if (!(_DWORD)v9)
          return 1;
      }
      if (v9 >> 3 == 1)
        break;
      if (v9 >> 3 == 2)
      {
        v10 = v9 & 7;
        if (v10 == 2)
        {
          v11 = *(_DWORD *)(v5 + 28);
          v12 = *(int *)(v5 + 24);
          if ((int)v12 >= v11)
            goto LABEL_26;
          goto LABEL_11;
        }
      }
      else
      {
        v10 = v9 & 7;
      }
LABEL_18:
      if (v10 == 4)
        return 1;
      result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v9, v7, a4);
      if ((result & 1) == 0)
        return 0;
    }
    v10 = v9 & 7;
    if ((v9 & 7) != 0)
      goto LABEL_18;
    v22 = 0;
    v14 = (char *)*((_QWORD *)this + 1);
    v15 = *((_QWORD *)this + 2);
    if ((unint64_t)v14 >= v15 || *v14 < 0)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
      if (!(_DWORD)result)
        return result;
      v16 = v22;
      v17 = (_BYTE *)*((_QWORD *)this + 1);
      v15 = *((_QWORD *)this + 2);
    }
    else
    {
      v16 = *v14;
      v17 = v14 + 1;
      *((_QWORD *)this + 1) = v17;
    }
    *(_BYTE *)(v5 + 40) = v16 != 0;
    *(_DWORD *)(v5 + 48) |= 1u;
  }
  while ((unint64_t)v17 >= v15 || *v17 != 18);
  while (1)
  {
    *((_QWORD *)this + 1) = v17 + 1;
    v11 = *(_DWORD *)(v5 + 28);
    v12 = *(int *)(v5 + 24);
    if ((int)v12 < v11)
      break;
LABEL_26:
    if (v11 == *(_DWORD *)(v5 + 32))
    {
      result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v11 + 1);
      v11 = *(_DWORD *)(v5 + 28);
    }
    *(_DWORD *)(v5 + 28) = v11 + 1;
    v18 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
    v19 = *(_QWORD *)(v5 + 16);
    v20 = *(int *)(v5 + 24);
    *(_DWORD *)(v5 + 24) = v20 + 1;
    *(_QWORD *)(v19 + 8 * v20) = v18;
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v18);
    if (!(_DWORD)result)
      return result;
LABEL_29:
    v17 = (_BYTE *)*((_QWORD *)this + 1);
    v21 = (_BYTE *)*((_QWORD *)this + 2);
    if (v17 >= v21 || *v17 != 18)
    {
      if (v17 == v21 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
      goto LABEL_2;
    }
  }
LABEL_11:
  v13 = *(_QWORD *)(v5 + 16);
  *(_DWORD *)(v5 + 24) = v12 + 1;
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, *(_QWORD *)(v13 + 8 * v12));
  if ((_DWORD)result)
    goto LABEL_29;
  return result;
}

uint64_t sub_1001C6224(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if ((*(_BYTE *)(this + 48) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 40), (BOOL)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2);
    while (v6 < *(int *)(v5 + 24));
  }
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C62C4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  char v6;
  uint64_t i;
  int v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  const void *v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  _QWORD *v14;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v15;
  _QWORD *v16;

  v4 = a2;
  if ((*((_BYTE *)this + 48) & 1) != 0)
  {
    v6 = *((_BYTE *)this + 40);
    *(_BYTE *)a2 = 8;
    *((_BYTE *)a2 + 1) = v6;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }
  if (*((int *)this + 6) >= 1)
  {
    for (i = 0; i < *((int *)this + 6); ++i)
    {
      v12 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * i);
      *(_BYTE *)v4 = 18;
      if (*(char *)(v12 + 23) < 0)
      {
        v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v12 + 8);
        if (v13 <= 0x7F)
        {
LABEL_17:
          *((_BYTE *)v4 + 1) = (_BYTE)v13;
          v8 = (_DWORD)v4 + 2;
          goto LABEL_6;
        }
      }
      else
      {
        v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
        if (*(unsigned __int8 *)(v12 + 23) <= 0x7Fu)
          goto LABEL_17;
      }
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v4 + 1, a3);
LABEL_6:
      v9 = *(char *)(v12 + 23);
      if (v9 >= 0)
        v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
      else
        v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v12;
      if (v9 >= 0)
        v11 = (const void *)*(unsigned __int8 *)(v12 + 23);
      else
        v11 = (const void *)*(unsigned int *)(v12 + 8);
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v10, v11, v8, a4);
    }
  }
  v16 = (_QWORD *)*((_QWORD *)this + 1);
  v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v14 = v16;
  if (!v16 || *v14 == v14[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v4, a3);
}

uint64_t sub_1001C63CC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t i;
  int v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v3 = 2 * (*(_DWORD *)(a1 + 48) & 1);
  if (!*(_DWORD *)(a1 + 48))
    v3 = 0;
  v4 = *(_DWORD *)(a1 + 24);
  v5 = (v3 + v4);
  if (v4 >= 1)
  {
    for (i = 0; i < v4; ++i)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * i);
      v8 = *(unsigned __int8 *)(v11 + 23);
      v10 = v8;
      v9 = *(_QWORD *)(v11 + 8);
      if ((v8 & 0x80u) == 0)
        v12 = *(unsigned __int8 *)(v11 + 23);
      else
        v12 = v9;
      if (v12 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12, a2);
        v8 = *(unsigned __int8 *)(v11 + 23);
        v9 = *(_QWORD *)(v11 + 8);
        v4 = *(_DWORD *)(a1 + 24);
        v10 = *(_BYTE *)(v11 + 23);
      }
      else
      {
        v7 = 1;
      }
      if (v10 < 0)
        v8 = v9;
      v5 = (v7 + v5 + v8);
    }
  }
  v13 = *(_QWORD **)(a1 + 8);
  if (v13 && *v13 != v13[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 44) = v5;
  return v5;
}

uint64_t sub_1001C64A0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 12816);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C5C3C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C6554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C6568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C657C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C65C4()
{
  return 1;
}

uint64_t sub_1001C65CC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E28;
}

void sub_1001C6640(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C6654(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  _BYTE v26[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v26, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 13520);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v25, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
    v4 = *(_DWORD *)(a2 + 92);
    if (!(_BYTE)v4)
      goto LABEL_30;
  }
  else
  {
    v4 = *(_DWORD *)(a2 + 92);
    if (!(_BYTE)v4)
      goto LABEL_30;
  }
  if ((v4 & 1) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    v6 = *(_QWORD *)(a1 + 16);
    if (!v6)
      operator new();
    v7 = *(_QWORD *)(a2 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10041B090 + 16);
    sub_1001C1B88(v6, v7);
    v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 2u;
    v8 = *(_QWORD *)(a1 + 24);
    if (!v8)
      operator new();
    v9 = *(_QWORD *)(a2 + 24);
    if (!v9)
      v9 = *(_QWORD *)(qword_10041B090 + 24);
    sub_1001C3564(v8, v9);
    v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 4u;
    v10 = *(_QWORD *)(a1 + 32);
    if (!v10)
      operator new();
    v11 = *(_QWORD *)(a2 + 32);
    if (!v11)
      v11 = *(_QWORD *)(qword_10041B090 + 32);
    sub_1001C4F1C(v10, v11);
    v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 8u;
    v12 = *(_QWORD *)(a1 + 40);
    if (!v12)
      operator new();
    v13 = *(_QWORD *)(a2 + 40);
    if (!v13)
      v13 = *(_QWORD *)(qword_10041B090 + 40);
    sub_1001C5C3C(v12, v13);
    v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 0x10) != 0)
  {
    v22 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 92) |= 0x10u;
    *(_QWORD *)(a1 + 48) = v22;
    v4 = *(_DWORD *)(a2 + 92);
    if ((v4 & 0x20) == 0)
    {
LABEL_27:
      if ((v4 & 0x40) == 0)
        goto LABEL_28;
      goto LABEL_47;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_27;
  }
  v23 = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x20u;
  *(_QWORD *)(a1 + 56) = v23;
  v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x40) == 0)
  {
LABEL_28:
    if ((v4 & 0x80) == 0)
      goto LABEL_30;
    goto LABEL_29;
  }
LABEL_47:
  v24 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(_DWORD *)(a1 + 64) = v24;
  v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x80) != 0)
  {
LABEL_29:
    v14 = *(_BYTE *)(a2 + 68);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(_BYTE *)(a1 + 68) = v14;
    v4 = *(_DWORD *)(a2 + 92);
  }
LABEL_30:
  if ((v4 & 0xFF00) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v4 & 0x100) != 0)
  {
    v17 = *(_BYTE *)(a2 + 69);
    *(_DWORD *)(a1 + 92) |= 0x100u;
    *(_BYTE *)(a1 + 69) = v17;
    v4 = *(_DWORD *)(a2 + 92);
    if ((v4 & 0x200) == 0)
    {
LABEL_33:
      if ((v4 & 0x400) == 0)
        goto LABEL_34;
      goto LABEL_41;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_33;
  }
  v18 = *(_BYTE *)(a2 + 70);
  *(_DWORD *)(a1 + 92) |= 0x200u;
  *(_BYTE *)(a1 + 70) = v18;
  v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_34:
    if ((v4 & 0x800) == 0)
      goto LABEL_35;
    goto LABEL_42;
  }
LABEL_41:
  v19 = *(_BYTE *)(a2 + 71);
  *(_DWORD *)(a1 + 92) |= 0x400u;
  *(_BYTE *)(a1 + 71) = v19;
  v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x800) == 0)
  {
LABEL_35:
    if ((v4 & 0x1000) == 0)
      goto LABEL_36;
LABEL_43:
    v21 = *(_BYTE *)(a2 + 80);
    *(_DWORD *)(a1 + 92) |= 0x1000u;
    *(_BYTE *)(a1 + 80) = v21;
    if ((*(_DWORD *)(a2 + 92) & 0x2000) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_37;
  }
LABEL_42:
  v20 = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 92) |= 0x800u;
  *(_QWORD *)(a1 + 72) = v20;
  v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x1000) != 0)
    goto LABEL_43;
LABEL_36:
  if ((v4 & 0x2000) != 0)
  {
LABEL_37:
    v15 = *(_DWORD *)(a2 + 84);
    *(_DWORD *)(a1 + 92) |= 0x2000u;
    *(_DWORD *)(a1 + 84) = v15;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C6A60()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C6A88()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C6AB0()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C6AD8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C6B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C6B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C6B28(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = off_1003FB200;
  if ((_QWORD *)qword_10041B090 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = a1[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = a1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C6BBC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = off_1003FB200;
  if ((_QWORD *)qword_10041B090 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = a1[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = a1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001C6C64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 88) = a2;
  return result;
}

void sub_1001C6C6C()
{
  operator new();
}

void sub_1001C6CE8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C6D10(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v17;
  uint64_t v18;

  v1 = this;
  v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        v4 = *(_BYTE *)(v3 + 52);
        if (v4)
        {
          *(_OWORD *)(v3 + 16) = xmmword_10038E0C0;
          if ((v4 & 4) != 0)
          {
            this = *(_QWORD *)(v3 + 32);
            if (this)
            {
              if (*(_BYTE *)(this + 44))
              {
                *(_OWORD *)(this + 16) = xmmword_10038E0B0;
                *(_QWORD *)(this + 32) = 0xC05390D4FDF3B646;
              }
              v5 = *(_QWORD *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 36) = 0;
              if (v5)
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
            }
          }
          if ((*(_BYTE *)(v3 + 52) & 8) != 0)
          {
            this = *(_QWORD *)(v3 + 40);
            if (this)
              this = sub_1001C09F0(this);
          }
        }
        v7 = *(_QWORD *)(v3 + 8);
        v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 8);
        *((_DWORD *)v6 + 11) = 0;
        if (v7)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
      }
    }
    if ((*(_BYTE *)(v1 + 92) & 2) != 0)
    {
      v8 = *(_QWORD *)(v1 + 24);
      if (v8)
      {
        v9 = *(_BYTE *)(v8 + 48);
        if (v9)
        {
          *(_OWORD *)(v8 + 16) = xmmword_10038E0E0;
          *(_DWORD *)(v8 + 40) = 0;
          if ((v9 & 8) != 0)
          {
            this = *(_QWORD *)(v8 + 32);
            if (this)
            {
              if (*(_BYTE *)(this + 40))
              {
                *(_DWORD *)(this + 16) = 10;
                *(_OWORD *)(this + 20) = xmmword_10038E0D0;
              }
              v10 = *(_QWORD *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 32) = 0;
              if (v10)
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
            }
          }
        }
        v12 = *(_QWORD *)(v8 + 8);
        v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v8 + 8);
        *((_DWORD *)v11 + 10) = 0;
        if (v12)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v11);
      }
    }
    v13 = *(_DWORD *)(v1 + 92);
    if ((v13 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        this = sub_1001C5240(this);
        v13 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v13 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
      {
        if (*(_BYTE *)(this + 48))
          *(_BYTE *)(this + 40) = 1;
        if (*(int *)(this + 24) >= 1)
        {
          v14 = 0;
          do
          {
            while (1)
            {
              v15 = *(_QWORD *)(*(_QWORD *)(this + 16) + 8 * v14);
              if (*(char *)(v15 + 23) < 0)
                break;
              *(_BYTE *)v15 = 0;
              *(_BYTE *)(v15 + 23) = 0;
              if (++v14 >= *(int *)(this + 24))
                goto LABEL_39;
            }
            **(_BYTE **)v15 = 0;
            *(_QWORD *)(v15 + 8) = 0;
            ++v14;
          }
          while (v14 < *(int *)(this + 24));
        }
LABEL_39:
        v16 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 40) = 0;
        if (v16)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    *(_OWORD *)(v1 + 48) = xmmword_10038E150;
    *(_DWORD *)(v1 + 64) = 15;
    *(_BYTE *)(v1 + 68) = 1;
    v2 = *(_DWORD *)(v1 + 92);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 76) = 0;
    *(_QWORD *)(v1 + 69) = 0;
    *(_BYTE *)(v1 + 80) = 1;
    *(_DWORD *)(v1 + 84) = 0;
  }
  v18 = *(_QWORD *)(v1 + 8);
  v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v17 + 21) = 0;
  if (v18)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v17);
  return this;
}

uint64_t sub_1001C6F30(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  unsigned __int8 *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v31;
  int v32;
  BOOL v33;
  int v34;
  _BYTE *v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v40;
  int v41;
  int v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  uint64_t result;
  unsigned int v49;
  _BYTE *v50;
  _BYTE *v51;
  int v52;
  unint64_t v53;
  char *v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v59;
  int v60;
  int v61;
  _BYTE *v62;
  unsigned int v63;
  _BYTE *v64;
  unsigned int v65;
  _BYTE *v66;
  int v67;
  char *v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v73;
  int v74;
  int v75;
  _BYTE *v76;
  _BYTE *v77;
  unsigned int v78;
  _BYTE *v79;
  unsigned int v80;
  unsigned int v81[2];

  v6 = (unsigned int *)(a1 + 64);
  v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_48;
        *(_DWORD *)(a1 + 92) |= 1u;
        v11 = *(_QWORD *)(a1 + 16);
        if (!v11)
          operator new();
        v81[0] = 0;
        v12 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81))return 0;
        }
        else
        {
          v81[0] = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
        }
        v27 = *((_DWORD *)this + 14);
        v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28)
          return 0;
        v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v81[0]);
        if (!sub_1001C2018(v11, this, v30, v31) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        v32 = *((_DWORD *)this + 14);
        v33 = __OFSUB__(v32, 1);
        v34 = v32 - 1;
        if (v34 < 0 == v33)
          *((_DWORD *)this + 14) = v34;
        v35 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v35 >= *((_QWORD *)this + 2) || *v35 != 18)
          continue;
        *((_QWORD *)this + 1) = v35 + 1;
        *(_DWORD *)(a1 + 92) |= 2u;
        v13 = *(_QWORD *)(a1 + 24);
        if (!v13)
LABEL_60:
          operator new();
LABEL_16:
        v81[0] = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81))return 0;
        }
        else
        {
          v81[0] = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        v36 = *((_DWORD *)this + 14);
        v37 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v36 + 1;
        if (v36 >= v37)
          return 0;
        v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v81[0]);
        if (!sub_1001C390C(v13, this, v39, v40) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
        v41 = *((_DWORD *)this + 14);
        v33 = __OFSUB__(v41, 1);
        v42 = v41 - 1;
        if (v42 < 0 == v33)
          *((_DWORD *)this + 14) = v42;
        v43 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v43 >= *((_QWORD *)this + 2) || *v43 != 25)
          continue;
        *((_QWORD *)this + 1) = v43 + 1;
        *(_QWORD *)v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0;
LABEL_72:
        *(_QWORD *)(a1 + 48) = *(_QWORD *)v81;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        v44 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v44 >= *((_QWORD *)this + 2) || *v44 != 33)
          continue;
        *((_QWORD *)this + 1) = v44 + 1;
        *(_QWORD *)v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0;
LABEL_75:
        *(_QWORD *)(a1 + 56) = *(_QWORD *)v81;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        v45 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v45 >= v15 || *v45 != 40)
          continue;
        v16 = v45 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_78:
        v81[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!(_DWORD)result)
            return result;
          v46 = v81[0];
          v47 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v46 = *v16;
          v47 = v16 + 1;
          *((_QWORD *)this + 1) = v47;
        }
        *(_BYTE *)(a1 + 68) = v46 != 0;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        if ((unint64_t)v47 >= v15 || *v47 != 48)
          continue;
        v17 = v47 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_86:
        v81[0] = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!(_DWORD)result)
            return result;
          v49 = v81[0];
          v50 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v49 = *v17;
          v50 = v17 + 1;
          *((_QWORD *)this + 1) = v50;
        }
        *(_BYTE *)(a1 + 69) = v49 != 0;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        if ((unint64_t)v50 >= v15 || *v50 != 56)
          continue;
        v18 = v50 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_94:
        if ((unint64_t)v18 >= v15 || (char)*v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v51 = (_BYTE *)*((_QWORD *)this + 1);
          v53 = *((_QWORD *)this + 2);
          v52 = *(_DWORD *)(a1 + 92) | 0x40;
          *(_DWORD *)(a1 + 92) = v52;
          if ((unint64_t)v51 < v53)
            goto LABEL_100;
          continue;
        }
        *v6 = *v18;
        v51 = v18 + 1;
        *((_QWORD *)this + 1) = v51;
        v52 = *(_DWORD *)(a1 + 92) | 0x40;
        *(_DWORD *)(a1 + 92) = v52;
        if ((unint64_t)v51 >= v15)
          continue;
LABEL_100:
        if (*v51 != 66)
          continue;
        *((_QWORD *)this + 1) = v51 + 1;
        *(_DWORD *)(a1 + 92) = v52 | 4;
        v19 = *(_QWORD *)(a1 + 32);
        if (!v19)
LABEL_102:
          operator new();
LABEL_103:
        v81[0] = 0;
        v54 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v54 >= *((_QWORD *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81))return 0;
        }
        else
        {
          v81[0] = *v54;
          *((_QWORD *)this + 1) = v54 + 1;
        }
        v55 = *((_DWORD *)this + 14);
        v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56)
          return 0;
        v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v81[0]);
        if (!sub_1001C5370(v19, this, v58, v59) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        v60 = *((_DWORD *)this + 14);
        v33 = __OFSUB__(v60, 1);
        v61 = v60 - 1;
        if (v61 < 0 == v33)
          *((_DWORD *)this + 14) = v61;
        v62 = (_BYTE *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        if ((unint64_t)v62 >= v20 || *v62 != 72)
          continue;
        v21 = v62 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_115:
        v81[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!(_DWORD)result)
            return result;
          v63 = v81[0];
          v64 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          v63 = *v21;
          v64 = v21 + 1;
          *((_QWORD *)this + 1) = v64;
        }
        *(_BYTE *)(a1 + 70) = v63 != 0;
        *(_DWORD *)(a1 + 92) |= 0x200u;
        if ((unint64_t)v64 >= v20 || *v64 != 80)
          continue;
        v22 = v64 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_123:
        v81[0] = 0;
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!(_DWORD)result)
            return result;
          v65 = v81[0];
          v66 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          v65 = *v22;
          v66 = v22 + 1;
          *((_QWORD *)this + 1) = v66;
        }
        *(_BYTE *)(a1 + 71) = v65 != 0;
        v67 = *(_DWORD *)(a1 + 92) | 0x400;
        *(_DWORD *)(a1 + 92) = v67;
        if ((unint64_t)v66 >= v20 || *v66 != 90)
          continue;
        *((_QWORD *)this + 1) = v66 + 1;
        *(_DWORD *)(a1 + 92) = v67 | 8;
        v23 = *(_QWORD *)(a1 + 40);
        if (!v23)
LABEL_131:
          operator new();
LABEL_132:
        v81[0] = 0;
        v68 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v68 >= *((_QWORD *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81))return 0;
        }
        else
        {
          v81[0] = *v68;
          *((_QWORD *)this + 1) = v68 + 1;
        }
        v69 = *((_DWORD *)this + 14);
        v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 < v70)
        {
          v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v81[0]);
          if (sub_1001C5FF0(v23, this, v72, v73))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
              v74 = *((_DWORD *)this + 14);
              v33 = __OFSUB__(v74, 1);
              v75 = v74 - 1;
              if (v75 < 0 == v33)
                *((_DWORD *)this + 14) = v75;
              v76 = (_BYTE *)*((_QWORD *)this + 1);
              if ((unint64_t)v76 < *((_QWORD *)this + 2) && *v76 == 97)
              {
                *((_QWORD *)this + 1) = v76 + 1;
                *(_QWORD *)v81 = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0;
LABEL_144:
                *(_QWORD *)(a1 + 72) = *(_QWORD *)v81;
                *(_DWORD *)(a1 + 92) |= 0x800u;
                v77 = (_BYTE *)*((_QWORD *)this + 1);
                v24 = *((_QWORD *)this + 2);
                if ((unint64_t)v77 < v24 && *v77 == 104)
                {
                  v25 = v77 + 1;
                  *((_QWORD *)this + 1) = v25;
LABEL_147:
                  v81[0] = 0;
                  if ((unint64_t)v25 >= v24 || *v25 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
                    if (!(_DWORD)result)
                      return result;
                    v78 = v81[0];
                    v79 = (_BYTE *)*((_QWORD *)this + 1);
                    v24 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    v78 = *v25;
                    v79 = v25 + 1;
                    *((_QWORD *)this + 1) = v79;
                  }
                  *(_BYTE *)(a1 + 80) = v78 != 0;
                  *(_DWORD *)(a1 + 92) |= 0x1000u;
                  if ((unint64_t)v79 < v24 && *v79 == 112)
                  {
                    v26 = v79 + 1;
                    *((_QWORD *)this + 1) = v26;
LABEL_155:
                    v81[0] = 0;
                    if ((unint64_t)v26 >= v24 || *v26 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
                      if (!(_DWORD)result)
                        return result;
                      v80 = v81[0];
                      if (v81[0] <= 3)
                        goto LABEL_158;
LABEL_162:
                      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 14, (int)v80);
                      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2))
                        goto LABEL_163;
                    }
                    else
                    {
                      v80 = *v26;
                      *((_QWORD *)this + 1) = v26 + 1;
                      if (v80 > 3)
                        goto LABEL_162;
LABEL_158:
                      *(_DWORD *)(a1 + 92) |= 0x2000u;
                      *(_DWORD *)(a1 + 84) = v80;
                      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2))
                      {
LABEL_163:
                        if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
                        {
                          *((_DWORD *)this + 8) = 0;
                          result = 1;
                          *((_BYTE *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_48;
        *(_DWORD *)(a1 + 92) |= 2u;
        v13 = *(_QWORD *)(a1 + 24);
        if (v13)
          goto LABEL_16;
        goto LABEL_60;
      case 3u:
        v10 = TagFallback & 7;
        if (v10 != 1)
          goto LABEL_48;
        *(_QWORD *)v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0;
        goto LABEL_72;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 != 1)
          goto LABEL_48;
        *(_QWORD *)v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0;
        goto LABEL_75;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_78;
      case 6u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v17 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_86;
      case 7u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v18 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_94;
      case 8u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_48;
        *(_DWORD *)(a1 + 92) |= 4u;
        v19 = *(_QWORD *)(a1 + 32);
        if (!v19)
          goto LABEL_102;
        goto LABEL_103;
      case 9u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v21 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_115;
      case 0xAu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v22 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_123;
      case 0xBu:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_48;
        *(_DWORD *)(a1 + 92) |= 8u;
        v23 = *(_QWORD *)(a1 + 40);
        if (!v23)
          goto LABEL_131;
        goto LABEL_132;
      case 0xCu:
        v10 = TagFallback & 7;
        if (v10 != 1)
          goto LABEL_48;
        *(_QWORD *)v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0;
        goto LABEL_144;
      case 0xDu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v25 = (char *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        goto LABEL_147;
      case 0xEu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v26 = (char *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        goto LABEL_155;
      default:
        v10 = TagFallback & 7;
LABEL_48:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)return 0;
        continue;
    }
  }
}

void sub_1001C79E4()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C7A0C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C7A34()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C7A5C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C7A84(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_21:
    v11 = *(_QWORD *)(v5 + 24);
    if (v11)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
      v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x10) != 0)
        goto LABEL_25;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(qword_10041B090 + 24), a2, a4);
      v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x10) != 0)
        goto LABEL_25;
    }
LABEL_4:
    if ((v6 & 0x20) == 0)
      goto LABEL_5;
    goto LABEL_26;
  }
  v10 = *(_QWORD *)(this + 16);
  if (v10)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) != 0)
      goto LABEL_21;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(qword_10041B090 + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) != 0)
      goto LABEL_21;
  }
LABEL_3:
  if ((v6 & 0x10) == 0)
    goto LABEL_4;
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 0x80) == 0)
      goto LABEL_6;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_6:
    if ((v6 & 0x100) == 0)
      goto LABEL_7;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 68), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 69), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 4) == 0)
      goto LABEL_9;
LABEL_30:
    v12 = *(_QWORD *)(v5 + 32);
    if (v12)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
      v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x200) != 0)
        goto LABEL_34;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(qword_10041B090 + 32), a2, a4);
      v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x200) != 0)
        goto LABEL_34;
    }
LABEL_10:
    if ((v6 & 0x400) == 0)
      goto LABEL_11;
    goto LABEL_35;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 64), a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) != 0)
    goto LABEL_30;
LABEL_9:
  if ((v6 & 0x200) == 0)
    goto LABEL_10;
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 70), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x400) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0)
      goto LABEL_12;
LABEL_36:
    v13 = *(_QWORD *)(v5 + 40);
    if (v13)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v13, a2, a4);
      v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x800) != 0)
        goto LABEL_40;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_QWORD *)(qword_10041B090 + 40), a2, a4);
      v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x800) != 0)
        goto LABEL_40;
    }
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_41;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 71), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) != 0)
    goto LABEL_36;
LABEL_12:
  if ((v6 & 0x800) == 0)
    goto LABEL_13;
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 80), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 92) & 0x2000) == 0)
  {
LABEL_15:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 84), (int)a2, a4);
  v14 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v14;
  if (!v14)
    return this;
LABEL_43:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C7CFC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  int v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;
  unsigned int *v11;
  unsigned int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v14;
  unsigned __int8 *v15;
  unsigned int *v16;
  unsigned int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  unsigned int *v26;
  unsigned int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  char v32;
  char v33;
  unsigned int *v34;
  unsigned int v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v37;
  unsigned __int8 *v38;
  unsigned __int8 *v39;
  uint64_t v40;
  char v41;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v42;
  unint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;

  v4 = a2;
  v6 = *((_DWORD *)this + 23);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_23:
    v16 = (unsigned int *)*((_QWORD *)this + 3);
    if (v16)
    {
      *(_BYTE *)v4 = 18;
      v17 = (_DWORD)v4 + 1;
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[11];
      if (v18 <= 0x7F)
        goto LABEL_25;
    }
    else
    {
      v16 = *(unsigned int **)(qword_10041B090 + 24);
      *(_BYTE *)v4 = 18;
      v17 = (_DWORD)v4 + 1;
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[11];
      if (v18 <= 0x7F)
      {
LABEL_25:
        *((_BYTE *)v4 + 1) = (_BYTE)v18;
        v4 = sub_1001C3D74((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
        v6 = *((_DWORD *)this + 23);
        if ((v6 & 0x10) != 0)
          goto LABEL_29;
LABEL_4:
        if ((v6 & 0x20) == 0)
          goto LABEL_5;
        goto LABEL_30;
      }
    }
    v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v17, a3);
    v4 = sub_1001C3D74((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v19, v20);
    v6 = *((_DWORD *)this + 23);
    if ((v6 & 0x10) != 0)
      goto LABEL_29;
    goto LABEL_4;
  }
  v11 = (unsigned int *)*((_QWORD *)this + 2);
  if (v11)
  {
    *(_BYTE *)a2 = 10;
    v12 = (_DWORD)a2 + 1;
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[12];
    if (v13 <= 0x7F)
      goto LABEL_19;
LABEL_22:
    v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    v4 = sub_1001C256C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15);
    v6 = *((_DWORD *)this + 23);
    if ((v6 & 2) != 0)
      goto LABEL_23;
    goto LABEL_3;
  }
  v11 = *(unsigned int **)(qword_10041B090 + 16);
  *(_BYTE *)a2 = 10;
  v12 = (_DWORD)a2 + 1;
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[12];
  if (v13 > 0x7F)
    goto LABEL_22;
LABEL_19:
  *((_BYTE *)v4 + 1) = (_BYTE)v13;
  v4 = sub_1001C256C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
  v6 = *((_DWORD *)this + 23);
  if ((v6 & 2) != 0)
    goto LABEL_23;
LABEL_3:
  if ((v6 & 0x10) == 0)
    goto LABEL_4;
LABEL_29:
  v21 = *((_QWORD *)this + 6);
  *(_BYTE *)v4 = 25;
  *(_QWORD *)((char *)v4 + 1) = v21;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  v6 = *((_DWORD *)this + 23);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 0x80) == 0)
      goto LABEL_6;
    goto LABEL_31;
  }
LABEL_30:
  v22 = *((_QWORD *)this + 7);
  *(_BYTE *)v4 = 33;
  *(_QWORD *)((char *)v4 + 1) = v22;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  v6 = *((_DWORD *)this + 23);
  if ((v6 & 0x80) == 0)
  {
LABEL_6:
    if ((v6 & 0x100) == 0)
      goto LABEL_7;
    goto LABEL_32;
  }
LABEL_31:
  v23 = *((_BYTE *)this + 68);
  *(_BYTE *)v4 = 40;
  *((_BYTE *)v4 + 1) = v23;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  v6 = *((_DWORD *)this + 23);
  if ((v6 & 0x100) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_33;
  }
LABEL_32:
  v24 = *((_BYTE *)this + 69);
  *(_BYTE *)v4 = 48;
  *((_BYTE *)v4 + 1) = v24;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((*((_DWORD *)this + 23) & 0x40) == 0)
  {
LABEL_8:
    v7 = *((_DWORD *)this + 23);
    if ((v7 & 4) == 0)
      goto LABEL_9;
LABEL_37:
    v26 = (unsigned int *)*((_QWORD *)this + 4);
    if (v26)
    {
      *(_BYTE *)v4 = 66;
      v27 = (_DWORD)v4 + 1;
      v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[10];
      if (v28 <= 0x7F)
        goto LABEL_39;
    }
    else
    {
      v26 = *(unsigned int **)(qword_10041B090 + 32);
      *(_BYTE *)v4 = 66;
      v27 = (_DWORD)v4 + 1;
      v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[10];
      if (v28 <= 0x7F)
      {
LABEL_39:
        *((_BYTE *)v4 + 1) = (_BYTE)v28;
        v4 = sub_1001C5810((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        v7 = *((_DWORD *)this + 23);
        if ((v7 & 0x200) != 0)
          goto LABEL_43;
LABEL_10:
        if ((v7 & 0x400) == 0)
          goto LABEL_11;
        goto LABEL_44;
      }
    }
    v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, v27, a3);
    v4 = sub_1001C5810((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, v29, v30, v31);
    v7 = *((_DWORD *)this + 23);
    if ((v7 & 0x200) != 0)
      goto LABEL_43;
    goto LABEL_10;
  }
LABEL_33:
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  *(_BYTE *)v4 = 56;
  if (v25 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)v4 + 1, a3);
    v7 = *((_DWORD *)this + 23);
    if ((v7 & 4) != 0)
      goto LABEL_37;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v25;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    v7 = *((_DWORD *)this + 23);
    if ((v7 & 4) != 0)
      goto LABEL_37;
  }
LABEL_9:
  if ((v7 & 0x200) == 0)
    goto LABEL_10;
LABEL_43:
  v32 = *((_BYTE *)this + 70);
  *(_BYTE *)v4 = 72;
  *((_BYTE *)v4 + 1) = v32;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  v7 = *((_DWORD *)this + 23);
  if ((v7 & 0x400) == 0)
  {
LABEL_11:
    if ((v7 & 8) == 0)
      goto LABEL_12;
LABEL_45:
    v34 = (unsigned int *)*((_QWORD *)this + 5);
    if (v34)
    {
      *(_BYTE *)v4 = 90;
      v35 = (_DWORD)v4 + 1;
      v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[11];
      if (v36 <= 0x7F)
        goto LABEL_47;
    }
    else
    {
      v34 = *(unsigned int **)(qword_10041B090 + 40);
      *(_BYTE *)v4 = 90;
      v35 = (_DWORD)v4 + 1;
      v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[11];
      if (v36 <= 0x7F)
      {
LABEL_47:
        *((_BYTE *)v4 + 1) = (_BYTE)v36;
        v4 = sub_1001C62C4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        v7 = *((_DWORD *)this + 23);
        if ((v7 & 0x800) != 0)
          goto LABEL_51;
LABEL_13:
        if ((v7 & 0x1000) == 0)
          goto LABEL_14;
        goto LABEL_52;
      }
    }
    v37 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, v35, a3);
    v4 = sub_1001C62C4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v37, v38, v39);
    v7 = *((_DWORD *)this + 23);
    if ((v7 & 0x800) != 0)
      goto LABEL_51;
    goto LABEL_13;
  }
LABEL_44:
  v33 = *((_BYTE *)this + 71);
  *(_BYTE *)v4 = 80;
  *((_BYTE *)v4 + 1) = v33;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  v7 = *((_DWORD *)this + 23);
  if ((v7 & 8) != 0)
    goto LABEL_45;
LABEL_12:
  if ((v7 & 0x800) == 0)
    goto LABEL_13;
LABEL_51:
  v40 = *((_QWORD *)this + 9);
  *(_BYTE *)v4 = 97;
  *(_QWORD *)((char *)v4 + 1) = v40;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  v7 = *((_DWORD *)this + 23);
  if ((v7 & 0x1000) == 0)
  {
LABEL_14:
    if ((v7 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_53;
  }
LABEL_52:
  v41 = *((_BYTE *)this + 80);
  *(_BYTE *)v4 = 104;
  *((_BYTE *)v4 + 1) = v41;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((*((_DWORD *)this + 23) & 0x2000) == 0)
  {
LABEL_15:
    v10 = (_QWORD *)*((_QWORD *)this + 1);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v8 = v10;
    if (!v10)
      return v4;
    goto LABEL_60;
  }
LABEL_53:
  v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 21);
  *(_BYTE *)v4 = 112;
  v43 = (unint64_t)v4 + 1;
  if ((v42 & 0x80000000) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v42, v43, a3);
    v45 = (_QWORD *)*((_QWORD *)this + 1);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v8 = v45;
    if (!v45)
      return v4;
  }
  else if (v42 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v42, v43, a3);
    v46 = (_QWORD *)*((_QWORD *)this + 1);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v8 = v46;
    if (!v46)
      return v4;
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v42;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    v44 = (_QWORD *)*((_QWORD *)this + 1);
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v8 = v44;
    if (!v44)
      return v4;
  }
LABEL_60:
  if (*v8 != v8[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
  return v4;
}

uint64_t sub_1001C81A4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  uint64_t v13;
  int v14;
  int v15;
  unint64_t v16;
  uint64_t i;
  int v18;
  int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  int v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  unsigned int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  _QWORD *v32;

  v3 = *(_DWORD *)(a1 + 92);
  if (!(_BYTE)v3)
  {
    v5 = 0;
    if ((v3 & 0xFF00) == 0)
      goto LABEL_82;
    goto LABEL_64;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_19;
LABEL_13:
    v8 = *(_QWORD *)(a1 + 24);
    if (v8)
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C3F58(v8, a2);
      if (v9 < 0x80)
      {
LABEL_15:
        v10 = 1;
LABEL_18:
        v4 += (_DWORD)v9 + v10 + 1;
        v3 = *(_DWORD *)(a1 + 92);
        goto LABEL_19;
      }
    }
    else
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C3F58(*(_QWORD *)(qword_10041B090 + 24), a2);
      if (v9 < 0x80)
        goto LABEL_15;
    }
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    goto LABEL_18;
  }
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C2778(v6, a2);
    if (v7 < 0x80)
      goto LABEL_9;
LABEL_12:
    v4 = (_DWORD)v7
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)
       + 1;
    v3 = *(_DWORD *)(a1 + 92);
    if ((v3 & 2) == 0)
      goto LABEL_19;
    goto LABEL_13;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C2778(*(_QWORD *)(qword_10041B090 + 16), a2);
  if (v7 >= 0x80)
    goto LABEL_12;
LABEL_9:
  v4 = (_DWORD)v7 + 2;
  v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 2) != 0)
    goto LABEL_13;
LABEL_19:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_50;
    goto LABEL_28;
  }
  v11 = *(_QWORD *)(a1 + 32);
  if (v11)
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C599C(v11, a2);
    if (v12 < 0x80)
      goto LABEL_24;
  }
  else
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C599C(*(_QWORD *)(qword_10041B090 + 32), a2);
    if (v12 < 0x80)
    {
LABEL_24:
      v4 += (_DWORD)v12 + 2;
      v3 = *(_DWORD *)(a1 + 92);
      if ((v3 & 8) == 0)
        goto LABEL_50;
      goto LABEL_28;
    }
  }
  v4 += (_DWORD)v12
      + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)
      + 1;
  v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 8) == 0)
    goto LABEL_50;
LABEL_28:
  v13 = *(_QWORD *)(a1 + 40);
  if (!v13)
    v13 = *(_QWORD *)(qword_10041B090 + 40);
  v14 = 2 * (*(_DWORD *)(v13 + 48) & 1);
  if (!*(_DWORD *)(v13 + 48))
    v14 = 0;
  v15 = *(_DWORD *)(v13 + 24);
  v16 = (v14 + v15);
  if (v15 >= 1)
  {
    for (i = 0; i < v15; ++i)
    {
      v22 = *(_QWORD *)(*(_QWORD *)(v13 + 16) + 8 * i);
      v19 = *(unsigned __int8 *)(v22 + 23);
      v21 = v19;
      v20 = *(_QWORD *)(v22 + 8);
      if ((v19 & 0x80u) == 0)
        v23 = *(unsigned __int8 *)(v22 + 23);
      else
        v23 = v20;
      if (v23 >= 0x80)
      {
        v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23, a2);
        v19 = *(unsigned __int8 *)(v22 + 23);
        v20 = *(_QWORD *)(v22 + 8);
        v15 = *(_DWORD *)(v13 + 24);
        v21 = *(_BYTE *)(v22 + 23);
      }
      else
      {
        v18 = 1;
      }
      if (v21 < 0)
        v19 = v20;
      v16 = (v18 + v16 + v19);
    }
  }
  v24 = *(_QWORD **)(v13 + 8);
  if (v24 && *v24 != v24[1])
    v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v13 + 8), a2)+ v16;
  *(_DWORD *)(v13 + 44) = v16;
  if (v16 >= 0x80)
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16, a2);
  else
    v25 = 1;
  v4 += v16 + v25 + 1;
  v3 = *(_DWORD *)(a1 + 92);
LABEL_50:
  v26 = v4 + 9;
  if ((v3 & 0x10) == 0)
    v26 = v4;
  if ((v3 & 0x20) != 0)
    LODWORD(v5) = v26 + 9;
  else
    LODWORD(v5) = v26;
  if ((v3 & 0x40) != 0)
  {
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v27 >= 0x80)
    {
      v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      v28 = 2;
    }
    LODWORD(v5) = v28 + v5;
  }
  if ((v3 & 0x80) != 0)
    v5 = (v5 + 2);
  else
    v5 = v5;
  if ((v3 & 0xFF00) != 0)
  {
LABEL_64:
    v29 = v5 + 2;
    if ((v3 & 0x100) == 0)
      v29 = v5;
    if ((v3 & 0x200) != 0)
      v29 += 2;
    if ((v3 & 0x400) != 0)
      v29 += 2;
    if ((v3 & 0x800) != 0)
      v29 += 9;
    if ((v3 & 0x1000) != 0)
      v5 = v29 + 2;
    else
      v5 = v29;
    if ((v3 & 0x2000) != 0)
    {
      v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
      if ((v30 & 0x80000000) != 0)
      {
        v31 = 11;
      }
      else if (v30 >= 0x80)
      {
        v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2)
            + 1;
      }
      else
      {
        v31 = 2;
      }
      v5 = (v31 + v5);
    }
  }
LABEL_82:
  v32 = *(_QWORD **)(a1 + 8);
  if (v32 && *v32 != v32[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 88) = v5;
  return v5;
}

uint64_t sub_1001C84FC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 13508);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C6654((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C85B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C85C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C85D8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C8620()
{
  return 1;
}

uint64_t sub_1001C8628()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E38;
}

void sub_1001C869C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C86B0(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  int v5;
  char v6;
  char v8;
  char v9;
  char v10;
  _BYTE v11[48];

  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 13848);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = a2[24];
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((a2[24] & 1) == 0)
  {
    if ((a2[24] & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v9 = a2[17];
    *(_DWORD *)(a1 + 24) |= 2u;
    *(_BYTE *)(a1 + 17) = v9;
    if ((*((_DWORD *)a2 + 6) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_7;
  }
  v8 = a2[16];
  *(_DWORD *)(a1 + 24) |= 1u;
  *(_BYTE *)(a1 + 16) = v8;
  v5 = *((_DWORD *)a2 + 6);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    v6 = a2[18];
    *(_DWORD *)(a1 + 24) |= 4u;
    *(_BYTE *)(a1 + 18) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C878C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C87A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C87B4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FB2B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C87E4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FB2B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001C8828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 20) = a2;
  return result;
}

void sub_1001C8830()
{
  operator new();
}

void sub_1001C888C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C88B4(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 24))
  {
    *(_WORD *)(a1 + 16) = 257;
    *(_BYTE *)(a1 + 18) = 1;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001C88E0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  unsigned __int8 *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned __int8 *v16;
  unsigned int v17;
  _BYTE *v18;
  unsigned int v19;
  char *v20;
  uint64_t result;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;

  v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v24 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!(_DWORD)result)
            return result;
          v14 = v24;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          v14 = *v13;
          v15 = v13 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        *(_BYTE *)(a1 + 16) = v14 != 0;
        *(_DWORD *)(a1 + 24) |= 1u;
        if ((unint64_t)v15 < v11 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          v23 = 0;
          if ((unint64_t)v16 >= v11)
            goto LABEL_31;
          goto LABEL_29;
        }
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_21;
      v16 = (unsigned __int8 *)*((_QWORD *)this + 1);
      v11 = *((_QWORD *)this + 2);
      v23 = 0;
      if ((unint64_t)v16 >= v11)
      {
LABEL_31:
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
        if (!(_DWORD)result)
          return result;
        v17 = v23;
        v18 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_33;
      }
LABEL_29:
      if ((char)*v16 < 0)
        goto LABEL_31;
      v17 = *v16;
      v18 = v16 + 1;
      *((_QWORD *)this + 1) = v18;
LABEL_33:
      *(_BYTE *)(a1 + 17) = v17 != 0;
      *(_DWORD *)(a1 + 24) |= 2u;
      if ((unint64_t)v18 < v11 && *v18 == 24)
      {
        v12 = v18 + 1;
        *((_QWORD *)this + 1) = v12;
        v22 = 0;
        if ((unint64_t)v12 >= v11)
          goto LABEL_38;
LABEL_36:
        if ((char)*v12 < 0)
        {
LABEL_38:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result)
            return result;
          v19 = v22;
          v20 = (char *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
          goto LABEL_40;
        }
        v19 = *v12;
        v20 = (char *)(v12 + 1);
        *((_QWORD *)this + 1) = v20;
LABEL_40:
        *(_BYTE *)(a1 + 18) = v19 != 0;
        *(_DWORD *)(a1 + 24) |= 4u;
        if (v20 == (char *)v11 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        v22 = 0;
        if ((unint64_t)v12 >= v11)
          goto LABEL_38;
        goto LABEL_36;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_21:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1001C8B64(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 16), (BOOL)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 17), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 4) == 0)
  {
LABEL_4:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_9;
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 18), (BOOL)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_9:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C8C08(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  char v7;
  char v8;
  char v9;
  _QWORD *v10;

  v3 = *(_DWORD *)(a1 + 24);
  if ((v3 & 1) != 0)
  {
    v7 = *(_BYTE *)(a1 + 16);
    *(_BYTE *)a2 = 8;
    *((_BYTE *)a2 + 1) = v7;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    v3 = *(_DWORD *)(a1 + 24);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
LABEL_8:
      v9 = *(_BYTE *)(a1 + 18);
      *(_BYTE *)a2 = 24;
      *((_BYTE *)a2 + 1) = v9;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      v10 = *(_QWORD **)(a1 + 8);
      v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v5 = v10;
      if (!v10)
        return a2;
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_BYTE *)(a1 + 17);
  *(_BYTE *)a2 = 16;
  *((_BYTE *)a2 + 1) = v8;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  if ((*(_DWORD *)(a1 + 24) & 4) != 0)
    goto LABEL_8;
LABEL_4:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_9:
  if (*v5 != v5[1])
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, a2, a3);
  return a2;
}

uint64_t sub_1001C8C90(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = a1[6];
  v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
    v4 += 2;
  if ((v3 & 4) != 0)
    v4 += 2;
  if (a1[6])
    v5 = v4;
  else
    v5 = 0;
  v8 = (_QWORD *)*((_QWORD *)a1 + 1);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  a1[5] = v5;
  return v5;
}

uint64_t sub_1001C8CF8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  _BYTE *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 13836);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C86B0((uint64_t)a1, v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001C8DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C8DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C8DD4(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001C8E1C()
{
  return 1;
}

uint64_t sub_1001C8E24()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E48;
}

void sub_1001C8E98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C8EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  _BYTE v29[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v29, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 14733);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v29, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v28, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
  }
  v5 = *(_DWORD *)(a2 + 156);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v14 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 156) |= 1u;
    *(_DWORD *)(a1 + 16) = v14;
    v5 = *(_DWORD *)(a2 + 156);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_38;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v15 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 156) |= 2u;
  *(_DWORD *)(a1 + 20) = v15;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_39;
  }
LABEL_38:
  v16 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 156) |= 4u;
  *(_QWORD *)(a1 + 24) = v16;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_40;
  }
LABEL_39:
  v17 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 156) |= 8u;
  *(_QWORD *)(a1 + 32) = v17;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_41:
    v19 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 156) |= 0x20u;
    *(_QWORD *)(a1 + 48) = v19;
    v5 = *(_DWORD *)(a2 + 156);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_40:
  v18 = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 156) |= 0x10u;
  *(_QWORD *)(a1 + 40) = v18;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 0x20) != 0)
    goto LABEL_41;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_42:
  v20 = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 156) |= 0x40u;
  *(_QWORD *)(a1 + 56) = v20;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 156) |= 0x80u;
    *(_DWORD *)(a1 + 88) = v6;
    v5 = *(_DWORD *)(a2 + 156);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_23;
  if ((v5 & 0x100) != 0)
  {
    v21 = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 156) |= 0x100u;
    *(_QWORD *)(a1 + 64) = v21;
    v5 = *(_DWORD *)(a2 + 156);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_46;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v22 = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 156) |= 0x200u;
  *(_QWORD *)(a1 + 72) = v22;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_47;
  }
LABEL_46:
  v23 = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 156) |= 0x400u;
  *(_QWORD *)(a1 + 80) = v23;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_48;
  }
LABEL_47:
  v24 = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 156) |= 0x800u;
  *(_QWORD *)(a1 + 96) = v24;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_49;
  }
LABEL_48:
  v25 = *(_QWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 156) |= 0x1000u;
  *(_QWORD *)(a1 + 104) = v25;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_50;
  }
LABEL_49:
  v26 = *(_BYTE *)(a2 + 92);
  *(_DWORD *)(a1 + 156) |= 0x2000u;
  *(_BYTE *)(a1 + 92) = v26;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_50:
  v27 = *(_QWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 156) |= 0x4000u;
  *(_QWORD *)(a1 + 112) = v27;
  v5 = *(_DWORD *)(a2 + 156);
  if ((v5 & 0x8000) != 0)
  {
LABEL_22:
    v7 = *(_DWORD *)(a2 + 120);
    *(_DWORD *)(a1 + 156) |= 0x8000u;
    *(_DWORD *)(a1 + 120) = v7;
    v5 = *(_DWORD *)(a2 + 156);
  }
LABEL_23:
  if ((v5 & 0xFF0000) != 0)
  {
    if ((v5 & 0x10000) != 0)
    {
      v8 = *(_DWORD *)(a2 + 124);
      *(_DWORD *)(a1 + 156) |= 0x10000u;
      *(_DWORD *)(a1 + 124) = v8;
      v5 = *(_DWORD *)(a2 + 156);
    }
    if ((v5 & 0x20000) != 0)
    {
      *(_DWORD *)(a1 + 156) |= 0x20000u;
      v9 = *(_QWORD *)(a1 + 128);
      if (!v9)
        operator new();
      v10 = *(_BYTE **)(a2 + 128);
      if (!v10)
        v10 = *(_BYTE **)(qword_10041B0A0 + 128);
      sub_1001C86B0(v9, v10);
      v5 = *(_DWORD *)(a2 + 156);
    }
    if ((v5 & 0x40000) != 0)
    {
      v11 = *(_QWORD *)(a2 + 136);
      *(_DWORD *)(a1 + 156) |= 0x40000u;
      *(_QWORD *)(a1 + 136) = v11;
      v5 = *(_DWORD *)(a2 + 156);
    }
    if ((v5 & 0x80000) != 0)
    {
      v12 = *(_QWORD *)(a2 + 144);
      *(_DWORD *)(a1 + 156) |= 0x80000u;
      *(_QWORD *)(a1 + 144) = v12;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C9220()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C9248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C925C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C9270(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1003FB360;
  if ((_QWORD *)qword_10041B0A0 != a1)
  {
    v2 = a1[16];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001C92C8(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1003FB360;
  if ((_QWORD *)qword_10041B0A0 != a1)
  {
    v2 = a1[16];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001C9334(uint64_t result, int a2)
{
  *(_DWORD *)(result + 152) = a2;
  return result;
}

void sub_1001C933C()
{
  operator new();
}

void sub_1001C9400()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C9428(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  v2 = *(_DWORD *)(this + 156);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(this + 16) = 0x6400000014;
    *(_OWORD *)(this + 24) = xmmword_10038E0F0;
    *(_OWORD *)(this + 40) = xmmword_10038E100;
    *(_QWORD *)(this + 56) = 0x4014000000000000;
    *(_DWORD *)(this + 88) = 7;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 64) = xmmword_10038E160;
    *(_QWORD *)(this + 80) = 0xC03E000000000000;
    *(_OWORD *)(this + 96) = xmmword_10038E130;
    *(_BYTE *)(this + 92) = 0;
    *(_QWORD *)(this + 112) = 0x4059000000000000;
    *(_DWORD *)(this + 120) = 15;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 124) = 30;
    if ((v2 & 0x20000) != 0)
    {
      this = *(_QWORD *)(this + 128);
      if (this)
      {
        if (*(_BYTE *)(this + 24))
        {
          *(_WORD *)(this + 16) = 257;
          *(_BYTE *)(this + 18) = 1;
        }
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    *(_OWORD *)(v1 + 136) = xmmword_10038E140;
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 37) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_1001C952C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  _BYTE *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  unint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  int v28;
  unsigned int *v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v38;
  int v39;
  BOOL v40;
  int v41;
  _BYTE *v42;
  unint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;
  unint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  unsigned __int8 *v57;
  unsigned __int8 *v58;
  unsigned int v59;
  unsigned __int8 *v60;
  unsigned int v61[2];

  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = (unsigned int *)(a1 + 88);
  v9 = (unsigned int *)(a1 + 120);
  v10 = (unsigned int *)(a1 + 124);
  v11 = a1 + 8;
  while (1)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 < *((_QWORD *)this + 2) && (*v12 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_76;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 156) |= 1u;
          if ((unint64_t)v17 >= v15)
            continue;
        }
        else
        {
          *v6 = *v16;
          v17 = v16 + 1;
          *((_QWORD *)this + 1) = v17;
          *(_DWORD *)(a1 + 156) |= 1u;
          if ((unint64_t)v17 >= v15)
            continue;
        }
        if (*v17 != 16)
          continue;
        v18 = v17 + 1;
        *((_QWORD *)this + 1) = v18;
        if ((unint64_t)v18 >= v15)
          goto LABEL_105;
LABEL_102:
        if (*v18 < 0)
        {
LABEL_105:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 156) |= 2u;
          if ((unint64_t)v42 >= v43)
            continue;
        }
        else
        {
          *v7 = *v18;
          v42 = v18 + 1;
          *((_QWORD *)this + 1) = v42;
          *(_DWORD *)(a1 + 156) |= 2u;
          if ((unint64_t)v42 >= v15)
            continue;
        }
        if (*v42 != 25)
          continue;
        *((_QWORD *)this + 1) = v42 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_109:
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 4u;
        v44 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v44 >= *((_QWORD *)this + 2) || *v44 != 33)
          continue;
        *((_QWORD *)this + 1) = v44 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_112:
        *(_QWORD *)(a1 + 136) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x40000u;
        v45 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v45 >= *((_QWORD *)this + 2) || *v45 != 41)
          continue;
        *((_QWORD *)this + 1) = v45 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_115:
        *(_QWORD *)(a1 + 32) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 8u;
        v46 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v46 >= *((_QWORD *)this + 2) || *v46 != 49)
          continue;
        *((_QWORD *)this + 1) = v46 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_118:
        *(_QWORD *)(a1 + 144) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x80000u;
        v47 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v47 >= *((_QWORD *)this + 2) || *v47 != 57)
          continue;
        *((_QWORD *)this + 1) = v47 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_121:
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        v48 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v48 >= *((_QWORD *)this + 2) || *v48 != 65)
          continue;
        *((_QWORD *)this + 1) = v48 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_124:
        *(_QWORD *)(a1 + 48) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        v49 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v49 >= *((_QWORD *)this + 2) || *v49 != 73)
          continue;
        *((_QWORD *)this + 1) = v49 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_127:
        *(_QWORD *)(a1 + 56) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x40u;
        v50 = (_BYTE *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        if ((unint64_t)v50 >= v19 || *v50 != 80)
          continue;
        v20 = v50 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_130:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v51 = (_BYTE *)*((_QWORD *)this + 1);
          v52 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 156) |= 0x80u;
          if ((unint64_t)v51 >= v52)
            continue;
        }
        else
        {
          *v8 = *v20;
          v51 = v20 + 1;
          *((_QWORD *)this + 1) = v51;
          *(_DWORD *)(a1 + 156) |= 0x80u;
          if ((unint64_t)v51 >= v19)
            continue;
        }
        if (*v51 != 89)
          continue;
        *((_QWORD *)this + 1) = v51 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_138:
        *(_QWORD *)(a1 + 64) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x100u;
        v53 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v53 >= *((_QWORD *)this + 2) || *v53 != 97)
          continue;
        *((_QWORD *)this + 1) = v53 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_141:
        *(_QWORD *)(a1 + 72) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x200u;
        v54 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v54 >= *((_QWORD *)this + 2) || *v54 != 105)
          continue;
        *((_QWORD *)this + 1) = v54 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_144:
        *(_QWORD *)(a1 + 80) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x400u;
        v55 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v55 >= *((_QWORD *)this + 2) || *v55 != 113)
          continue;
        *((_QWORD *)this + 1) = v55 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_147:
        *(_QWORD *)(a1 + 96) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x800u;
        v56 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v56 >= *((_QWORD *)this + 2) || *v56 != 121)
          continue;
        *((_QWORD *)this + 1) = v56 + 1;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_150:
        *(_QWORD *)(a1 + 104) = *(_QWORD *)v61;
        *(_DWORD *)(a1 + 156) |= 0x1000u;
        v57 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        if ((int)v21 - (int)v57 < 2 || *v57 != 128 || v57[1] != 1)
          continue;
        v22 = v57 + 2;
        *((_QWORD *)this + 1) = v22;
        if ((unint64_t)v22 >= v21)
          goto LABEL_157;
LABEL_154:
        if ((char)*v22 < 0)
        {
LABEL_157:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v58 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v21 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 156) |= 0x8000u;
          if ((int)v21 - (int)v58 < 2)
            continue;
        }
        else
        {
          *v9 = *v22;
          v58 = v22 + 1;
          *((_QWORD *)this + 1) = v58;
          *(_DWORD *)(a1 + 156) |= 0x8000u;
          if ((int)v21 - (int)v58 < 2)
            continue;
        }
        if (*v58 != 136 || v58[1] != 1)
          continue;
        v23 = v58 + 2;
        *((_QWORD *)this + 1) = v23;
        v61[0] = 0;
        if ((unint64_t)v23 >= v21)
          goto LABEL_164;
LABEL_162:
        if ((char)*v23 < 0)
        {
LABEL_164:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61);
          if (!(_DWORD)result)
            return result;
          v59 = v61[0];
          v60 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v21 = *((_QWORD *)this + 2);
        }
        else
        {
          v59 = *v23;
          v60 = v23 + 1;
          *((_QWORD *)this + 1) = v60;
        }
        *(_BYTE *)(a1 + 92) = v59 != 0;
        *(_DWORD *)(a1 + 156) |= 0x2000u;
        if ((int)v21 - (int)v60 >= 2 && *v60 == 145 && v60[1] == 1)
        {
          *((_QWORD *)this + 1) = v60 + 2;
          *(_QWORD *)v61 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
LABEL_63:
          *(_QWORD *)(a1 + 112) = *(_QWORD *)v61;
          *(_DWORD *)(a1 + 156) |= 0x4000u;
          v25 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v24 = *((_QWORD *)this + 2);
          if ((int)v24 - (int)v25 >= 2 && *v25 == 152 && v25[1] == 1)
          {
            v26 = v25 + 2;
            *((_QWORD *)this + 1) = v26;
LABEL_69:
            if ((unint64_t)v26 >= v24 || (char)*v26 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
              if (!(_DWORD)result)
                return result;
              v27 = (unsigned __int8 *)*((_QWORD *)this + 1);
              v32 = *((_QWORD *)this + 2);
              v28 = *(_DWORD *)(a1 + 156) | 0x10000;
              *(_DWORD *)(a1 + 156) = v28;
              if ((int)v32 - (int)v27 < 2)
                continue;
            }
            else
            {
              *v10 = *v26;
              v27 = v26 + 1;
              *((_QWORD *)this + 1) = v27;
              v28 = *(_DWORD *)(a1 + 156) | 0x10000;
              *(_DWORD *)(a1 + 156) = v28;
              if ((int)v24 - (int)v27 < 2)
                continue;
            }
            if (*v27 == 162 && v27[1] == 1)
            {
              v29 = v10;
              *((_QWORD *)this + 1) = v27 + 2;
              *(_DWORD *)(a1 + 156) = v28 | 0x20000;
              v30 = *(_QWORD *)(a1 + 128);
              if (!v30)
LABEL_84:
                operator new();
LABEL_85:
              v61[0] = 0;
              v33 = (char *)*((_QWORD *)this + 1);
              if ((unint64_t)v33 >= *((_QWORD *)this + 2) || *v33 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61))return 0;
              }
              else
              {
                v61[0] = *v33;
                *((_QWORD *)this + 1) = v33 + 1;
              }
              v34 = *((_DWORD *)this + 14);
              v35 = *((_DWORD *)this + 15);
              *((_DWORD *)this + 14) = v34 + 1;
              if (v34 >= v35)
                return 0;
              v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v61[0]);
              if (!sub_1001C88E0(v30, this, v37, v38) || !*((_BYTE *)this + 36))
                return 0;
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
              v39 = *((_DWORD *)this + 14);
              v40 = __OFSUB__(v39, 1);
              v41 = v39 - 1;
              if (v41 < 0 == v40)
                *((_DWORD *)this + 14) = v41;
              v10 = v29;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
            }
          }
        }
        break;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_76;
        v18 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v18 >= v15)
          goto LABEL_105;
        goto LABEL_102;
      case 3u:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_109;
      case 4u:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_112;
      case 5u:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_115;
      case 6u:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_118;
      case 7u:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_121;
      case 8u:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_124;
      case 9u:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_127;
      case 0xAu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_76;
        v20 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_130;
      case 0xBu:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_138;
      case 0xCu:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_141;
      case 0xDu:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_144;
      case 0xEu:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_147;
      case 0xFu:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0;
        goto LABEL_150;
      case 0x10u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_76;
        v22 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        if ((unint64_t)v22 >= v21)
          goto LABEL_157;
        goto LABEL_154;
      case 0x11u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_76;
        v23 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        v61[0] = 0;
        if ((unint64_t)v23 >= v21)
          goto LABEL_164;
        goto LABEL_162;
      case 0x12u:
        v14 = TagFallback & 7;
        if (v14 != 1)
          goto LABEL_76;
        *(_QWORD *)v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) != 0)goto LABEL_63;
        return 0;
      case 0x13u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_76;
        v26 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        goto LABEL_69;
      case 0x14u:
        v14 = TagFallback & 7;
        if (v14 != 2)
          goto LABEL_76;
        v29 = v10;
        *(_DWORD *)(a1 + 156) |= 0x20000u;
        v30 = *(_QWORD *)(a1 + 128);
        if (!v30)
          goto LABEL_84;
        goto LABEL_85;
      default:
        v14 = TagFallback & 7;
LABEL_76:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v11, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

void sub_1001CA09C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CA0C4(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 156);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 156);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 0x40000) == 0)
      goto LABEL_5;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x40000) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 136), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x80000) == 0)
      goto LABEL_7;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x80000) == 0)
  {
LABEL_7:
    if ((v6 & 0x10) == 0)
      goto LABEL_8;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 144), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x10) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0)
      goto LABEL_9;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0)
      goto LABEL_10;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 0x80) == 0)
      goto LABEL_11;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x80) == 0)
  {
LABEL_11:
    if ((v6 & 0x100) == 0)
      goto LABEL_12;
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 88), a2, a4);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x100) == 0)
  {
LABEL_12:
    if ((v6 & 0x200) == 0)
      goto LABEL_13;
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x200) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0)
      goto LABEL_14;
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x800) == 0)
      goto LABEL_15;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x800) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0)
      goto LABEL_16;
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 96), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, *(double *)(v5 + 104), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x2000) == 0)
      goto LABEL_18;
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_DWORD *)(v5 + 120), a2, a4);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x2000) == 0)
  {
LABEL_18:
    if ((v6 & 0x4000) == 0)
      goto LABEL_19;
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 92), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x4000) == 0)
  {
LABEL_19:
    if ((v6 & 0x10000) == 0)
      goto LABEL_20;
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (int)a2, *(double *)(v5 + 112), a3);
  v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x10000) == 0)
  {
LABEL_20:
    if ((v6 & 0x20000) == 0)
      goto LABEL_21;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 124), a2, a4);
  if ((*(_DWORD *)(v5 + 156) & 0x20000) == 0)
  {
LABEL_21:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_46;
  }
LABEL_42:
  v10 = *(_QWORD *)(v5 + 128);
  if (v10)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v10, a2, a4);
    v11 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v11;
    if (!v11)
      return this;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(_QWORD *)(qword_10041B0A0 + 128), a2, a4);
    v12 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v12;
    if (!v12)
      return this;
  }
LABEL_46:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CA36C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  unsigned int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  char v29;
  uint64_t v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  char v32;
  _QWORD *v33;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v34;
  _QWORD *v35;
  char v36;
  char v37;
  _QWORD *v38;
  _QWORD *v39;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v40;
  _QWORD *v41;

  v3 = a2;
  if ((*((_BYTE *)this + 156) & 1) == 0)
  {
    if ((*((_BYTE *)this + 156) & 2) == 0)
      goto LABEL_3;
LABEL_29:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)v3 = 16;
    if (v14 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
      v5 = *((_DWORD *)this + 39);
      if ((v5 & 4) != 0)
        goto LABEL_33;
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v14;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      v5 = *((_DWORD *)this + 39);
      if ((v5 & 4) != 0)
        goto LABEL_33;
    }
LABEL_4:
    if ((v5 & 0x40000) == 0)
      goto LABEL_5;
    goto LABEL_34;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  *(_BYTE *)a2 = 8;
  v13 = (_DWORD)a2 + 1;
  if (v12 > 0x7F)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v13, a3);
    if ((*((_BYTE *)this + 156) & 2) != 0)
      goto LABEL_29;
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v12;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((_BYTE *)this + 156) & 2) != 0)
      goto LABEL_29;
  }
LABEL_3:
  v5 = *((_DWORD *)this + 39);
  if ((v5 & 4) == 0)
    goto LABEL_4;
LABEL_33:
  v15 = *((_QWORD *)this + 3);
  *(_BYTE *)v3 = 25;
  *(_QWORD *)((char *)v3 + 1) = v15;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x40000) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0)
      goto LABEL_6;
    goto LABEL_35;
  }
LABEL_34:
  v16 = *((_QWORD *)this + 17);
  *(_BYTE *)v3 = 33;
  *(_QWORD *)((char *)v3 + 1) = v16;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v5 = *((_DWORD *)this + 39);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x80000) == 0)
      goto LABEL_7;
    goto LABEL_36;
  }
LABEL_35:
  v17 = *((_QWORD *)this + 4);
  *(_BYTE *)v3 = 41;
  *(_QWORD *)((char *)v3 + 1) = v17;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x80000) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0)
      goto LABEL_8;
    goto LABEL_37;
  }
LABEL_36:
  v18 = *((_QWORD *)this + 18);
  *(_BYTE *)v3 = 49;
  *(_QWORD *)((char *)v3 + 1) = v18;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0)
      goto LABEL_9;
    goto LABEL_38;
  }
LABEL_37:
  v19 = *((_QWORD *)this + 5);
  *(_BYTE *)v3 = 57;
  *(_QWORD *)((char *)v3 + 1) = v19;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0)
      goto LABEL_10;
    goto LABEL_39;
  }
LABEL_38:
  v20 = *((_QWORD *)this + 6);
  *(_BYTE *)v3 = 65;
  *(_QWORD *)((char *)v3 + 1) = v20;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x80) == 0)
      goto LABEL_11;
LABEL_40:
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    *(_BYTE *)v3 = 80;
    if (v22 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)v3 + 1, a3);
      v6 = *((_DWORD *)this + 39);
      if ((v6 & 0x100) != 0)
        goto LABEL_44;
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v22;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      v6 = *((_DWORD *)this + 39);
      if ((v6 & 0x100) != 0)
        goto LABEL_44;
    }
LABEL_12:
    if ((v6 & 0x200) == 0)
      goto LABEL_13;
    goto LABEL_45;
  }
LABEL_39:
  v21 = *((_QWORD *)this + 7);
  *(_BYTE *)v3 = 73;
  *(_QWORD *)((char *)v3 + 1) = v21;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 39) & 0x80) != 0)
    goto LABEL_40;
LABEL_11:
  v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x100) == 0)
    goto LABEL_12;
LABEL_44:
  v23 = *((_QWORD *)this + 8);
  *(_BYTE *)v3 = 89;
  *(_QWORD *)((char *)v3 + 1) = v23;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x200) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0)
      goto LABEL_14;
    goto LABEL_46;
  }
LABEL_45:
  v24 = *((_QWORD *)this + 9);
  *(_BYTE *)v3 = 97;
  *(_QWORD *)((char *)v3 + 1) = v24;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x800) == 0)
      goto LABEL_15;
    goto LABEL_47;
  }
LABEL_46:
  v25 = *((_QWORD *)this + 10);
  *(_BYTE *)v3 = 105;
  *(_QWORD *)((char *)v3 + 1) = v25;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x800) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0)
      goto LABEL_16;
    goto LABEL_48;
  }
LABEL_47:
  v26 = *((_QWORD *)this + 12);
  *(_BYTE *)v3 = 113;
  *(_QWORD *)((char *)v3 + 1) = v26;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
LABEL_49:
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
    *(_WORD *)v3 = 384;
    if (v28 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)v3 + 2, a3);
      v7 = *((_DWORD *)this + 39);
      if ((v7 & 0x2000) != 0)
        goto LABEL_53;
    }
    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v28;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      v7 = *((_DWORD *)this + 39);
      if ((v7 & 0x2000) != 0)
        goto LABEL_53;
    }
LABEL_18:
    if ((v7 & 0x4000) == 0)
      goto LABEL_19;
    goto LABEL_54;
  }
LABEL_48:
  v27 = *((_QWORD *)this + 13);
  *(_BYTE *)v3 = 121;
  *(_QWORD *)((char *)v3 + 1) = v27;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 39) & 0x8000) != 0)
    goto LABEL_49;
LABEL_17:
  v7 = *((_DWORD *)this + 39);
  if ((v7 & 0x2000) == 0)
    goto LABEL_18;
LABEL_53:
  v29 = *((_BYTE *)this + 92);
  *(_WORD *)v3 = 392;
  *((_BYTE *)v3 + 2) = v29;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  v7 = *((_DWORD *)this + 39);
  if ((v7 & 0x4000) == 0)
  {
LABEL_19:
    if ((v7 & 0x10000) == 0)
      goto LABEL_20;
LABEL_55:
    v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 31);
    *(_WORD *)v3 = 408;
    if (v31 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v3 + 2, a3);
      if ((*((_BYTE *)this + 158) & 2) == 0)
        goto LABEL_71;
    }
    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v31;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      if ((*((_BYTE *)this + 158) & 2) == 0)
        goto LABEL_71;
    }
    goto LABEL_21;
  }
LABEL_54:
  v30 = *((_QWORD *)this + 14);
  *(_WORD *)v3 = 401;
  *(_QWORD *)((char *)v3 + 2) = v30;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 10);
  if ((*((_DWORD *)this + 39) & 0x10000) != 0)
    goto LABEL_55;
LABEL_20:
  if ((*((_BYTE *)this + 158) & 2) == 0)
    goto LABEL_71;
LABEL_21:
  v8 = *((_QWORD *)this + 16);
  if (v8)
  {
    *(_WORD *)v3 = 418;
    v9 = (_DWORD)v3 + 2;
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 20);
    if (v10 <= 0x7F)
      goto LABEL_23;
LABEL_61:
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    v11 = *(_DWORD *)(v8 + 24);
    if ((v11 & 1) == 0)
      goto LABEL_63;
    goto LABEL_62;
  }
  v8 = *(_QWORD *)(qword_10041B0A0 + 128);
  *(_WORD *)v3 = 418;
  v9 = (_DWORD)v3 + 2;
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 20);
  if (v10 > 0x7F)
    goto LABEL_61;
LABEL_23:
  *((_BYTE *)v3 + 2) = (_BYTE)v10;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  v11 = *(_DWORD *)(v8 + 24);
  if ((v11 & 1) != 0)
  {
LABEL_62:
    v32 = *(_BYTE *)(v8 + 16);
    *(_BYTE *)v3 = 8;
    *((_BYTE *)v3 + 1) = v32;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    v11 = *(_DWORD *)(v8 + 24);
  }
LABEL_63:
  if ((v11 & 2) == 0)
  {
    if ((v11 & 4) == 0)
      goto LABEL_65;
LABEL_68:
    v37 = *(_BYTE *)(v8 + 18);
    *(_BYTE *)v3 = 24;
    *((_BYTE *)v3 + 1) = v37;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    v38 = *(_QWORD **)(v8 + 8);
    v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
    v33 = v38;
    if (!v38)
      goto LABEL_71;
    goto LABEL_69;
  }
  v36 = *(_BYTE *)(v8 + 17);
  *(_BYTE *)v3 = 16;
  *((_BYTE *)v3 + 1) = v36;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  if ((*(_DWORD *)(v8 + 24) & 4) != 0)
    goto LABEL_68;
LABEL_65:
  v35 = *(_QWORD **)(v8 + 8);
  v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
  v33 = v35;
  if (!v35)
    goto LABEL_71;
LABEL_69:
  if (*v33 != v33[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v34, v3, a3);
LABEL_71:
  v41 = (_QWORD *)*((_QWORD *)this + 1);
  v40 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v39 = v41;
  if (!v41 || *v39 == v39[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v40, v3, a3);
}

uint64_t sub_1001CAA98(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  unsigned int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  unsigned int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  _DWORD *v18;
  int v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  _QWORD *v22;
  int v23;
  unsigned int v24;
  _QWORD *v25;

  v3 = *(_DWORD *)(a1 + 156);
  if (!(_BYTE)v3)
  {
    v5 = 0;
    goto LABEL_30;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_14;
LABEL_10:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 156);
    }
    else
    {
      v9 = 2;
    }
    v4 += v9;
    goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v6 < 0x80)
  {
    v4 = 2;
    if ((v3 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  v3 = *(_DWORD *)(a1 + 156);
  v4 = v7 + 1;
  if ((v3 & 2) != 0)
    goto LABEL_10;
LABEL_14:
  v10 = v4 + 9;
  if ((v3 & 4) == 0)
    v10 = v4;
  if ((v3 & 8) != 0)
    v10 += 9;
  if ((v3 & 0x10) != 0)
    v10 += 9;
  if ((v3 & 0x20) != 0)
    v10 += 9;
  if ((v3 & 0x40) != 0)
    v5 = v10 + 9;
  else
    v5 = v10;
  if ((v3 & 0x80) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 156);
    }
    else
    {
      v12 = 2;
    }
    v5 = (v12 + v5);
  }
LABEL_30:
  if ((v3 & 0xFF00) != 0)
  {
    v13 = v5 + 9;
    if ((v3 & 0x100) == 0)
      v13 = v5;
    if ((v3 & 0x200) != 0)
      v13 += 9;
    if ((v3 & 0x400) != 0)
      v13 += 9;
    if ((v3 & 0x800) != 0)
      v13 += 9;
    if ((v3 & 0x1000) != 0)
      v13 += 9;
    if ((v3 & 0x2000) != 0)
      v13 += 3;
    if ((v3 & 0x4000) != 0)
      v5 = v13 + 10;
    else
      v5 = v13;
    if ((v3 & 0x8000) != 0)
    {
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
      if (v14 >= 0x80)
      {
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
            + 2;
        v3 = *(_DWORD *)(a1 + 156);
      }
      else
      {
        v15 = 3;
      }
      v5 = (v15 + v5);
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
      if (v16 >= 0x80)
      {
        v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)
            + 2;
        v3 = *(_DWORD *)(a1 + 156);
      }
      else
      {
        v17 = 3;
      }
      LODWORD(v5) = v17 + v5;
    }
    if ((v3 & 0x20000) != 0)
    {
      v18 = *(_DWORD **)(a1 + 128);
      if (!v18)
        v18 = *(_DWORD **)(qword_10041B0A0 + 128);
      v19 = v18[6];
      v20 = 2 * (v19 & 1);
      if ((v19 & 2) != 0)
        v20 += 2;
      if ((v19 & 4) != 0)
        v20 += 2;
      if (v18[6])
        LODWORD(v21) = v20;
      else
        LODWORD(v21) = 0;
      v22 = (_QWORD *)*((_QWORD *)v18 + 1);
      if (!v22 || *v22 == v22[1])
      {
        v18[5] = (_DWORD)v21;
        v23 = 1;
      }
      else
      {
        v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v18 + 2), a2)+ v21);
        v18[5] = (_DWORD)v21;
        if (v21 >= 0x80)
          v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
        else
          v23 = 1;
      }
      LODWORD(v5) = v5 + (_DWORD)v21 + v23 + 2;
      v3 = *(_DWORD *)(a1 + 156);
    }
    v24 = v5 + 9;
    if ((v3 & 0x40000) == 0)
      v24 = v5;
    if ((v3 & 0x80000) != 0)
      v5 = v24 + 9;
    else
      v5 = v24;
  }
  v25 = *(_QWORD **)(a1 + 8);
  if (v25 && *v25 != v25[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 152) = v5;
  return v5;
}

uint64_t sub_1001CAD20(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 14721);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001C8EAC((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001CADD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CADE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CADFC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001CAE44()
{
  return 1;
}

uint64_t sub_1001CAE4C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E58;
}

void sub_1001CAEC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CAED4(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const std::string *v9;
  std::string *v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  _BYTE v15[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v15, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 15154);
    v5 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v5);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
    LOBYTE(v4) = *(_BYTE *)(a2 + 52);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  else
  {
    LOBYTE(v4) = *(_BYTE *)(a2 + 52);
    if (!(_BYTE)v4)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 1) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    v6 = *(_QWORD *)(a1 + 16);
    if (!v6)
      operator new();
    v7 = *(_QWORD *)(a2 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10041B0A8 + 16);
    sub_1001C6654(v6, v7);
    v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    v8 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(_QWORD *)(a1 + 24) = v8;
    v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_20;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  v9 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 52) |= 4u;
  v10 = *(std::string **)(a1 + 32);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v10, v9);
  if ((*(_DWORD *)(a2 + 52) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 52) |= 8u;
    v11 = *(_QWORD *)(a1 + 40);
    if (!v11)
      operator new();
    v12 = *(_QWORD *)(a2 + 40);
    if (!v12)
      v12 = *(_QWORD *)(qword_10041B0A8 + 40);
    sub_1001C8EAC(v11, v12);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001CB190()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001CB1B8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001CB1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CB1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CB208(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *a1 = off_1003FB410;
  v2 = a1[4];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    operator delete();
  }
  if ((_QWORD *)qword_10041B0A8 != a1)
  {
    v4 = a1[2];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = a1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001CB2B4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *a1 = off_1003FB410;
  v2 = a1[4];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    operator delete();
  }
  if ((_QWORD *)qword_10041B0A8 != a1)
  {
    v4 = a1[2];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = a1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1001CB374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1001CB37C()
{
  operator new();
}

void sub_1001CB3D8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CB400(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 52);
  if (!(_BYTE)v2)
    goto LABEL_12;
  if ((*(_BYTE *)(this + 52) & 1) != 0)
  {
    this = *(_QWORD *)(this + 16);
    if (this)
    {
      this = sub_1001C6D10(this);
      v2 = *(_DWORD *)(v1 + 52);
    }
  }
  *(_QWORD *)(v1 + 24) = 0;
  if ((v2 & 4) != 0)
  {
    v3 = *(_QWORD *)(v1 + 32);
    if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
        if ((*(_BYTE *)(v1 + 52) & 8) == 0)
          goto LABEL_12;
        goto LABEL_10;
      }
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
    }
  }
  if ((*(_BYTE *)(v1 + 52) & 8) == 0)
    goto LABEL_12;
LABEL_10:
  this = *(_QWORD *)(v1 + 40);
  if (this)
    this = sub_1001C9428(this);
LABEL_12:
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_1001CB4AC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t result;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v21;
  int v22;
  BOOL v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v29;
  int v30;
  int v31;
  _BYTE *v32;
  int v33;
  _BYTE *v34;
  unsigned int v35[2];

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_31;
        *(_DWORD *)(a1 + 52) |= 1u;
        v10 = *(_QWORD *)(a1 + 16);
        if (!v10)
          operator new();
        v35[0] = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35))return 0;
        }
        else
        {
          v35[0] = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        v25 = *((_DWORD *)this + 14);
        v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26)
          return 0;
        v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35[0]);
        if (!sub_1001C6F30(v10, this, v28, v29) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        v30 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v30, 1);
        v31 = v30 - 1;
        if (v31 < 0 == v23)
          *((_DWORD *)this + 14) = v31;
        v32 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 != 17)
          continue;
        *((_QWORD *)this + 1) = v32 + 1;
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v35) & 1) == 0)return 0;
LABEL_53:
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v35;
        v33 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v33;
        v34 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 != 26)
          continue;
        *((_QWORD *)this + 1) = v34 + 1;
        *(_DWORD *)(a1 + 52) = v33 | 4;
        v12 = *(void **)(a1 + 32);
        if (v12 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
LABEL_20:
          operator new();
LABEL_21:
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v12);
        if (!(_DWORD)result)
          return result;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 != 34)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
LABEL_26:
        *(_DWORD *)(a1 + 52) |= 8u;
        v15 = *(_QWORD *)(a1 + 40);
        if (!v15)
          operator new();
        v35[0] = 0;
        v16 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35))return 0;
        }
        else
        {
          v35[0] = *v16;
          *((_QWORD *)this + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)this + 14);
        v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18)
          return 0;
        v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35[0]);
        if (!sub_1001C952C(v15, this, v20, v21) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
        v22 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)this + 14) = v24;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_31;
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v35) & 1) == 0)return 0;
        goto LABEL_53;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_31;
        *(_DWORD *)(a1 + 52) |= 4u;
        v12 = *(void **)(a1 + 32);
        if (v12 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          goto LABEL_20;
        goto LABEL_21;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_26;
        goto LABEL_31;
      default:
        v9 = TagFallback & 7;
LABEL_31:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
    return result;
  }
}

void sub_1001CB9A0()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001CB9C8()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CB9F0(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    v10 = *(_QWORD *)(this + 16);
    if (v10)
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0)
        goto LABEL_11;
    }
    else
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(qword_10041B0A8 + 16), a2, a4);
      v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0)
        goto LABEL_11;
    }
LABEL_3:
    if ((v6 & 4) == 0)
      goto LABEL_4;
    goto LABEL_12;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(3, *(_QWORD *)(v5 + 32), a2);
  if ((*(_DWORD *)(v5 + 52) & 8) == 0)
  {
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_17;
  }
LABEL_13:
  v11 = *(_QWORD *)(v5 + 40);
  if (v11)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v11, a2, a4);
    v12 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v12;
    if (!v12)
      return this;
  }
  else
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(qword_10041B0A8 + 40), a2, a4);
    v13 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v13;
    if (!v13)
      return this;
  }
LABEL_17:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CBB00(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  unsigned int *v10;
  unsigned int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  const void *v22;
  unsigned int *v23;
  unsigned int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  _QWORD *v26;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v27;
  unsigned __int8 *v28;
  _QWORD *v29;

  v4 = a2;
  v6 = *((_DWORD *)this + 13);
  if ((v6 & 1) != 0)
  {
    v10 = (unsigned int *)*((_QWORD *)this + 2);
    if (v10)
    {
      *(_BYTE *)a2 = 10;
      v11 = (_DWORD)a2 + 1;
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[22];
      if (v12 <= 0x7F)
        goto LABEL_9;
    }
    else
    {
      v10 = *(unsigned int **)(qword_10041B0A8 + 16);
      *(_BYTE *)a2 = 10;
      v11 = (_DWORD)a2 + 1;
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[22];
      if (v12 <= 0x7F)
      {
LABEL_9:
        *((_BYTE *)v4 + 1) = (_BYTE)v12;
        v4 = sub_1001C7CFC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        v6 = *((_DWORD *)this + 13);
        if ((v6 & 2) != 0)
          goto LABEL_13;
LABEL_3:
        if ((v6 & 4) == 0)
          goto LABEL_4;
        goto LABEL_14;
      }
    }
    v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
    v4 = sub_1001C7CFC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v13, v14, v15);
    v6 = *((_DWORD *)this + 13);
    if ((v6 & 2) != 0)
      goto LABEL_13;
    goto LABEL_3;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_13:
  v16 = *((_QWORD *)this + 3);
  *(_BYTE *)v4 = 17;
  *(_QWORD *)((char *)v4 + 1) = v16;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  v6 = *((_DWORD *)this + 13);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_26;
  }
LABEL_14:
  v17 = *((_QWORD *)this + 4);
  *(_BYTE *)v4 = 26;
  if (*(char *)(v17 + 23) < 0)
  {
    v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v17 + 8);
    if (v18 <= 0x7F)
      goto LABEL_16;
  }
  else
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
    if (*(unsigned __int8 *)(v17 + 23) <= 0x7Fu)
    {
LABEL_16:
      *((_BYTE *)v4 + 1) = (_BYTE)v18;
      v19 = (_DWORD)v4 + 2;
      goto LABEL_19;
    }
  }
  v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
LABEL_19:
  v20 = *(char *)(v17 + 23);
  if (v20 >= 0)
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
  else
    v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
  if (v20 >= 0)
    v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
  else
    v22 = (const void *)*(unsigned int *)(v17 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v21, v22, v19, a4);
  if ((*((_DWORD *)this + 13) & 8) == 0)
  {
LABEL_5:
    v9 = (_QWORD *)*((_QWORD *)this + 1);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v7 = v9;
    if (!v9)
      return v4;
    goto LABEL_32;
  }
LABEL_26:
  v23 = (unsigned int *)*((_QWORD *)this + 5);
  if (v23)
  {
    *(_BYTE *)v4 = 34;
    v24 = (_DWORD)v4 + 1;
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[38];
    if (v25 <= 0x7F)
      goto LABEL_28;
LABEL_31:
    v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, v24, a3);
    v4 = sub_1001CA36C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, v27, v28);
    v29 = (_QWORD *)*((_QWORD *)this + 1);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v7 = v29;
    if (!v29)
      return v4;
    goto LABEL_32;
  }
  v23 = *(unsigned int **)(qword_10041B0A8 + 40);
  *(_BYTE *)v4 = 34;
  v24 = (_DWORD)v4 + 1;
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[38];
  if (v25 > 0x7F)
    goto LABEL_31;
LABEL_28:
  *((_BYTE *)v4 + 1) = (_BYTE)v25;
  v4 = sub_1001CA36C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
  v26 = (_QWORD *)*((_QWORD *)this + 1);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v7 = v26;
  if (!v26)
    return v4;
LABEL_32:
  if (*v7 != v7[1])
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
  return v4;
}

uint64_t sub_1001CBD28(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  uint64_t v20;

  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_30;
    goto LABEL_37;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      v4 = 9;
    else
      v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      goto LABEL_28;
LABEL_19:
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(unsigned __int8 *)(v10 + 23);
    v12 = v11;
    v13 = *(_QWORD *)(v10 + 8);
    if ((v11 & 0x80u) == 0)
      v14 = *(unsigned __int8 *)(v10 + 23);
    else
      v14 = v13;
    if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14, a2);
      v11 = *(unsigned __int8 *)(v10 + 23);
      v13 = *(_QWORD *)(v10 + 8);
      v3 = *(_DWORD *)(a1 + 52);
      v12 = *(_BYTE *)(v10 + 23);
    }
    else
    {
      v15 = 1;
    }
    if (v12 < 0)
      v11 = v13;
    v4 = (v4 + v15 + v11 + 1);
    goto LABEL_28;
  }
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C81A4(v7, a2);
    if (v8 < 0x80)
    {
LABEL_12:
      v9 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C81A4(*(_QWORD *)(qword_10041B0A8 + 16), a2);
    if (v8 < 0x80)
      goto LABEL_12;
  }
  v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
LABEL_15:
  v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 2) != 0)
    v4 = ((_DWORD)v8 + v9 + 10);
  else
    v4 = ((_DWORD)v8 + v9 + 1);
  if ((v3 & 4) != 0)
    goto LABEL_19;
LABEL_28:
  if ((v3 & 8) != 0)
  {
    v17 = *(_QWORD *)(a1 + 40);
    if (v17)
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CAA98(v17, a2);
      if (v18 < 0x80)
      {
LABEL_33:
        v19 = 1;
        goto LABEL_36;
      }
    }
    else
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CAA98(*(_QWORD *)(qword_10041B0A8 + 40), a2);
      if (v18 < 0x80)
        goto LABEL_33;
    }
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
LABEL_36:
    v4 = (v4 + (_DWORD)v18 + v19 + 1);
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_30;
    goto LABEL_37;
  }
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = *(_QWORD **)(a1 + 8);
  if (!v6)
  {
LABEL_30:
    *(_DWORD *)(a1 + 48) = v4;
    return v4;
  }
LABEL_37:
  if (*v6 == v6[1])
    goto LABEL_30;
  v20 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 48) = v20;
  return v20;
}

uint64_t sub_1001CBED8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 15142);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001CAED4((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001CBF8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CBFA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CBFB4(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001CBFFC(uint64_t a1)
{
  return *(_DWORD *)(a1 + 52) & 1;
}

uint64_t sub_1001CC008()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E68;
}

void sub_1001CC07C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CC090(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

void sub_1001CC098()
{
  operator new();
}

void sub_1001CC0F0()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CC118(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  unint64_t v13;
  _BYTE *v14;
  char *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  uint64_t result;
  unsigned int v19[2];

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_31;
        *(_QWORD *)v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v19) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v19;
        *(_DWORD *)(a1 + 56) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_31;
LABEL_15:
        *(_QWORD *)v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v19) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v19;
        *(_DWORD *)(a1 + 56) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 25)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_20:
        *(_QWORD *)v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v19) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)v19;
        *(_DWORD *)(a1 + 56) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 33)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_25:
        *(_QWORD *)v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v19) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v19;
        *(_DWORD *)(a1 + 56) |= 8u;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 != 40)
          continue;
        v15 = v14 + 1;
        *((_QWORD *)this + 1) = v15;
        v19[0] = 0;
        if ((unint64_t)v15 >= v13)
          goto LABEL_37;
LABEL_35:
        if (*v15 < 0)
        {
LABEL_37:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v19);
          if (!(_DWORD)result)
            return result;
          v16 = v19[0];
          v17 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          v16 = *v15;
          v17 = (unsigned __int8 *)(v15 + 1);
          *((_QWORD *)this + 1) = v17;
        }
        *(_BYTE *)(a1 + 48) = v16 != 0;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        if (v17 != (unsigned __int8 *)v13 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_20;
        goto LABEL_31;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_25;
        goto LABEL_31;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_31;
        v15 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        v19[0] = 0;
        if ((unint64_t)v15 < v13)
          goto LABEL_35;
        goto LABEL_37;
      default:
        v9 = TagFallback & 7;
LABEL_31:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1001CC400(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 56) & 0x10) == 0)
  {
LABEL_6:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 48), (BOOL)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_13:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001CC4DC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 56);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)(a2 + 1) = v8;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  v9 = *(_QWORD *)(a1 + 32);
  *(_BYTE *)a2 = 25;
  *(_QWORD *)(a2 + 1) = v9;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
LABEL_12:
    v11 = *(_BYTE *)(a1 + 48);
    *(_BYTE *)a2 = 40;
    *(_BYTE *)(a2 + 1) = v11;
    a2 += 2;
    v12 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v12;
    if (!v12)
      return a2;
    goto LABEL_13;
  }
LABEL_11:
  v10 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)a2 = 33;
  *(_QWORD *)(a2 + 1) = v10;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 56) & 0x10) != 0)
    goto LABEL_12;
LABEL_6:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_13:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001CC684(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;

  v3 = *(unsigned __int8 *)(a1 + 56);
  if (*(_BYTE *)(a1 + 56))
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v4 += 9;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v4 += 9;
    if ((v3 & 0x10) != 0)
      v5 = v4 + 2;
    else
      v5 = v4;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_12;
  }
  else
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
    {
LABEL_12:
      *(_DWORD *)(a1 + 52) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1])
    goto LABEL_12;
  v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 52) = v9;
  return v9;
}

uint64_t sub_1001CC730(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 15497);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000C49B8((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001CC7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CC7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CC80C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001CC854()
{
  return 1;
}

uint64_t sub_1001CC85C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E78;
}

void sub_1001CC8D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001CC8E4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FB570;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001CC914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1001CC91C()
{
  operator new();
}

void sub_1001CC96C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CC994(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  uint64_t result;
  unint64_t v12;

  v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v9 = TagFallback & 7;
        if (v9 == 1)
        {
          v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0)
            return 0;
          goto LABEL_17;
        }
      }
      else
      {
        v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
    v9 = TagFallback & 7;
    if (v9 != 1)
      goto LABEL_22;
    v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0)
      return 0;
    *(_QWORD *)(a1 + 16) = v12;
    *(_DWORD *)(a1 + 36) |= 1u;
    v10 = (_BYTE *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 < *((_QWORD *)this + 2) && *v10 == 17)
    {
      *((_QWORD *)this + 1) = v10 + 1;
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0)
        return 0;
LABEL_17:
      *(_QWORD *)(a1 + 24) = v12;
      *(_DWORD *)(a1 + 36) |= 2u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_1001CCB3C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 2) == 0)
    {
LABEL_3:
      v8 = *(_QWORD **)(v4 + 8);
      v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      v6 = v8;
      if (!v8)
        return this;
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v9 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v9;
  if (!v9)
    return this;
LABEL_7:
  if (*v6 != v6[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  return this;
}

uint64_t sub_1001CCBC4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = *(_QWORD *)(a1 + 24);
    *(_BYTE *)a2 = 17;
    *(_QWORD *)(a2 + 1) = v8;
    a2 += 9;
    v9 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v9;
    if (!v9)
      return a2;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a1 + 16);
  *(_BYTE *)a2 = 9;
  *(_QWORD *)(a2 + 1) = v7;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 36) & 2) != 0)
    goto LABEL_6;
LABEL_3:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_7:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001CCC9C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 36);
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v4 += 9;
  if (*(_BYTE *)(a1 + 36))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_1001CCD00(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 15753);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BC754((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001CCDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CCDC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CCDDC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001CCE24()
{
  return 1;
}

uint64_t sub_1001CCE2C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E88;
}

void sub_1001CCEA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CCEB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1001CCEBC()
{
  operator new();
}

void sub_1001CCF14()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CCF3C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  uint64_t result;
  _BYTE *v16;
  unsigned int v17[2];

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_23;
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v17;
        *(_DWORD *)(a1 + 48) |= 1u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 != 16)
          continue;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
        goto LABEL_16;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v12 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_16:
        v17[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v17);
          if (!(_DWORD)result)
            return result;
          v13 = v17[0];
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v13 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_BYTE *)(a1 + 40) = v13 != 0;
        *(_DWORD *)(a1 + 48) |= 2u;
        if ((unint64_t)v14 >= v10 || *v14 != 25)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0;
LABEL_31:
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v17;
        *(_DWORD *)(a1 + 48) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 != 33)
          continue;
        *((_QWORD *)this + 1) = v16 + 1;
LABEL_34:
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)v17;
        *(_DWORD *)(a1 + 48) |= 8u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_23;
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0;
        goto LABEL_31;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_23;
        goto LABEL_34;
      default:
        v9 = TagFallback & 7;
LABEL_23:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1001CD1D0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 40), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 48) & 8) == 0)
  {
LABEL_5:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_11:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001CD290(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 48);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)a2 = 16;
  *(_BYTE *)(a2 + 1) = v8;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
LABEL_10:
    v10 = *(_QWORD *)(a1 + 32);
    *(_BYTE *)a2 = 33;
    *(_QWORD *)(a2 + 1) = v10;
    a2 += 9;
    v11 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v11;
    if (!v11)
      return a2;
    goto LABEL_11;
  }
LABEL_9:
  v9 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a2 = 25;
  *(_QWORD *)(a2 + 1) = v9;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 48) & 8) != 0)
    goto LABEL_10;
LABEL_5:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_11:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001CD3E0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
  if ((v3 & 4) != 0)
    v4 += 9;
  if ((v3 & 8) != 0)
    v4 += 9;
  if (*(_BYTE *)(a1 + 48))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 44) = v5;
  return v5;
}

uint64_t sub_1001CD458(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 16065);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000C47D4((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001CD50C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CD520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CD534(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001CD57C()
{
  return 1;
}

uint64_t sub_1001CD584()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419E98;
}

void sub_1001CD5F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CD60C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

void sub_1001CD614()
{
  operator new();
}

void sub_1001CD66C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CD694(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  uint64_t result;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  unsigned int v21;
  unsigned __int8 *v22;
  unsigned int v23[2];

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_29;
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v23;
        *(_DWORD *)(a1 + 56) |= 1u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 != 16)
          continue;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
        goto LABEL_16;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v12 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_16:
        v23[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v23);
          if (!(_DWORD)result)
            return result;
          v13 = v23[0];
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v13 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_BYTE *)(a1 + 48) = v13 != 0;
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v14 >= v10 || *v14 != 25)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0;
LABEL_38:
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v23;
        *(_DWORD *)(a1 + 56) |= 4u;
        v18 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 != 33)
          continue;
        *((_QWORD *)this + 1) = v18 + 1;
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0;
LABEL_41:
        *(_QWORD *)(a1 + 32) = *(_QWORD *)v23;
        *(_DWORD *)(a1 + 56) |= 8u;
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 != 41)
          continue;
        *((_QWORD *)this + 1) = v19 + 1;
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0;
LABEL_44:
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v23;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        v20 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v20 >= v15 || *v20 != 48)
          continue;
        v16 = v20 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_47:
        v23[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v23);
          if (!(_DWORD)result)
            return result;
          v21 = v23[0];
          v22 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v21 = *v16;
          v22 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)this + 1) = v22;
        }
        *(_BYTE *)(a1 + 49) = v21 != 0;
        *(_DWORD *)(a1 + 56) |= 0x20u;
        if (v22 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_29;
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0;
        goto LABEL_38;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_29;
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0;
        goto LABEL_41;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_29;
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0;
        goto LABEL_44;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_47;
      default:
        v9 = TagFallback & 7;
LABEL_29:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1001CDA2C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 48), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 56) & 0x20) == 0)
  {
LABEL_7:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 49), (BOOL)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_15:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001CDB24(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 56);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)a2 = 16;
  *(_BYTE *)(a2 + 1) = v8;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v9 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a2 = 25;
  *(_QWORD *)(a2 + 1) = v9;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10 = *(_QWORD *)(a1 + 32);
  *(_BYTE *)a2 = 33;
  *(_QWORD *)(a2 + 1) = v10;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0)
      goto LABEL_7;
LABEL_14:
    v12 = *(_BYTE *)(a1 + 49);
    *(_BYTE *)a2 = 48;
    *(_BYTE *)(a2 + 1) = v12;
    a2 += 2;
    v13 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v13;
    if (!v13)
      return a2;
    goto LABEL_15;
  }
LABEL_13:
  v11 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)a2 = 41;
  *(_QWORD *)(a2 + 1) = v11;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 56) & 0x20) != 0)
    goto LABEL_14;
LABEL_7:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_15:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001CDCEC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;

  v3 = *(unsigned __int8 *)(a1 + 56);
  if (*(_BYTE *)(a1 + 56))
  {
    v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v4 += 9;
    if ((v3 & 0x10) != 0)
      v4 += 9;
    if ((v3 & 0x20) != 0)
      v5 = v4 + 2;
    else
      v5 = v4;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_12;
  }
  else
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
    {
LABEL_12:
      *(_DWORD *)(a1 + 52) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1])
    goto LABEL_12;
  v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 52) = v9;
  return v9;
}

uint64_t sub_1001CDDA0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 16453);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000C45B0((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001CDE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CDE68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CDE7C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001CDEC4()
{
  return 1;
}

uint64_t sub_1001CDECC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419EA8;
}

void sub_1001CDF40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001CDF54(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FB780;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001CDF84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_1001CDF8C()
{
  operator new();
}

void sub_1001CDFE0()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CE008(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unint64_t *v6;
  unint64_t *v7;
  unint64_t *v8;
  unint64_t *v9;
  unint64_t *v10;
  unsigned int v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  _BYTE *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  unsigned __int8 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;

  v6 = (unint64_t *)(a1 + 16);
  v7 = (unint64_t *)(a1 + 24);
  v8 = (unint64_t *)(a1 + 32);
  v9 = (unint64_t *)(a1 + 40);
  v10 = (unint64_t *)(a1 + 48);
  v11 = a1 + 8;
  while (1)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 < *((_QWORD *)this + 2) && (*v12 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 60) |= 1u;
          if ((unint64_t)v17 >= v15)
            continue;
        }
        else
        {
          *v6 = *v16;
          v17 = v16 + 1;
          *((_QWORD *)this + 1) = v17;
          *(_DWORD *)(a1 + 60) |= 1u;
          if ((unint64_t)v17 >= v15)
            continue;
        }
        if (*v17 != 16)
          continue;
        v18 = v17 + 1;
        *((_QWORD *)this + 1) = v18;
        if ((unint64_t)v18 >= v15)
          goto LABEL_36;
        goto LABEL_33;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v18 >= v15)
          goto LABEL_36;
LABEL_33:
        if (*v18 < 0)
        {
LABEL_36:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 60) |= 2u;
          if ((unint64_t)v22 >= v15)
            continue;
        }
        else
        {
          *v7 = *v18;
          v22 = v18 + 1;
          *((_QWORD *)this + 1) = v22;
          *(_DWORD *)(a1 + 60) |= 2u;
          if ((unint64_t)v22 >= v15)
            continue;
        }
        if (*v22 != 24)
          continue;
        v19 = v22 + 1;
        *((_QWORD *)this + 1) = v19;
        if ((unint64_t)v19 >= v15)
          goto LABEL_43;
LABEL_40:
        if (*v19 < 0)
        {
LABEL_43:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 60) |= 4u;
          if ((unint64_t)v23 >= v15)
            continue;
        }
        else
        {
          *v8 = *v19;
          v23 = v19 + 1;
          *((_QWORD *)this + 1) = v23;
          *(_DWORD *)(a1 + 60) |= 4u;
          if ((unint64_t)v23 >= v15)
            continue;
        }
        if (*v23 != 32)
          continue;
        v20 = v23 + 1;
        *((_QWORD *)this + 1) = v20;
        if ((unint64_t)v20 >= v15)
          goto LABEL_50;
LABEL_47:
        if (*v20 < 0)
        {
LABEL_50:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 60) |= 8u;
          if ((unint64_t)v24 >= v15)
            continue;
        }
        else
        {
          *v9 = *v20;
          v24 = v20 + 1;
          *((_QWORD *)this + 1) = v24;
          *(_DWORD *)(a1 + 60) |= 8u;
          if ((unint64_t)v24 >= v15)
            continue;
        }
        if (*v24 != 40)
          continue;
        v21 = v24 + 1;
        *((_QWORD *)this + 1) = v21;
        if ((unint64_t)v21 >= v15)
          goto LABEL_57;
LABEL_54:
        if (*v21 < 0)
        {
LABEL_57:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v27 = *((_QWORD *)this + 1);
          v26 = *((_QWORD *)this + 2);
          *(_DWORD *)(a1 + 60) |= 0x10u;
          if (v27 != v26)
            continue;
        }
        else
        {
          *v10 = *v21;
          v25 = (unsigned __int8 *)(v21 + 1);
          *((_QWORD *)this + 1) = v25;
          *(_DWORD *)(a1 + 60) |= 0x10u;
          if (v25 != (unsigned __int8 *)v15)
            continue;
        }
        if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v19 >= v15)
          goto LABEL_43;
        goto LABEL_40;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v20 >= v15)
          goto LABEL_50;
        goto LABEL_47;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v21 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v21 >= v15)
          goto LABEL_57;
        goto LABEL_54;
      default:
        v14 = TagFallback & 7;
LABEL_24:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v11, a4) & 1) != 0)
          continue;
        return 0;
    }
  }
}

uint64_t sub_1001CE3BC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 16), (unint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 24), (unint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 32), (unint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 40), (unint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x10) == 0)
  {
LABEL_6:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 48), (unint64_t)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_13:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CE498(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  _QWORD *v13;

  v4 = *((_DWORD *)this + 15);
  if ((v4 & 1) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 2);
    *(_BYTE *)a2 = 8;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, (unint64_t)a2 + 1, a3);
    v4 = *((_DWORD *)this + 15);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 3);
  *(_BYTE *)a2 = 16;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, (unint64_t)a2 + 1, a3);
  v4 = *((_DWORD *)this + 15);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 4);
  *(_BYTE *)a2 = 24;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, (unint64_t)a2 + 1, a3);
  v4 = *((_DWORD *)this + 15);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0)
      goto LABEL_6;
LABEL_12:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 6);
    *(_BYTE *)a2 = 40;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, (unint64_t)a2 + 1, a3);
    v13 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v13;
    if (!v13)
      return a2;
    goto LABEL_13;
  }
LABEL_11:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 5);
  *(_BYTE *)a2 = 32;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, (unint64_t)a2 + 1, a3);
  if ((*((_DWORD *)this + 15) & 0x10) != 0)
    goto LABEL_12;
LABEL_6:
  v7 = (_QWORD *)*((_QWORD *)this + 1);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v5 = v7;
  if (!v7)
    return a2;
LABEL_13:
  if (*v5 != v5[1])
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, a2, a3);
  return a2;
}

uint64_t sub_1001CE584(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  uint64_t v8;

  LOBYTE(v3) = *(_BYTE *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v6 = *(_QWORD **)(a1 + 8);
    if (!v6)
      goto LABEL_13;
    goto LABEL_17;
  }
  if ((*(_BYTE *)(a1 + 60) & 1) != 0)
  {
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 2) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
  v4 = 0;
  if ((*(_BYTE *)(a1 + 60) & 2) != 0)
  {
LABEL_8:
    v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 60);
  }
LABEL_9:
  if ((v3 & 4) != 0)
  {
    v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 8) == 0)
    {
LABEL_11:
      if ((v3 & 0x10) == 0)
        goto LABEL_12;
LABEL_16:
      v4 = v4
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48), (unint64_t)a2)+ 1;
      v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      v6 = *(_QWORD **)(a1 + 8);
      if (!v6)
        goto LABEL_13;
      goto LABEL_17;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_11;
  }
  v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
  if ((*(_DWORD *)(a1 + 60) & 0x10) != 0)
    goto LABEL_16;
LABEL_12:
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = *(_QWORD **)(a1 + 8);
  if (!v6)
  {
LABEL_13:
    *(_DWORD *)(a1 + 56) = v4;
    return v4;
  }
LABEL_17:
  if (*v6 == v6[1])
    goto LABEL_13;
  v8 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
     + v4;
  *(_DWORD *)(a1 + 56) = v8;
  return v8;
}

uint64_t sub_1001CE688(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 16825);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BC830((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001CE73C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CE750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CE764(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001CE7AC()
{
  return 1;
}

uint64_t sub_1001CE7B4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419EB8;
}

void sub_1001CE828(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CE83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 17229);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 36) & 1) != 0)
  {
    v8 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 1u;
    *(_QWORD *)(a1 + 16) = v8;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_14;
    }
  }
  else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 36) |= 2u;
  *(_BYTE *)(a1 + 24) = v9;
  v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10 = *(_BYTE *)(a2 + 25);
  *(_DWORD *)(a1 + 36) |= 4u;
  *(_BYTE *)(a1 + 25) = v10;
  v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
LABEL_16:
    v12 = *(_BYTE *)(a2 + 27);
    *(_DWORD *)(a1 + 36) |= 0x10u;
    *(_BYTE *)(a1 + 27) = v12;
    if ((*(_DWORD *)(a2 + 36) & 0x20) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_10;
  }
LABEL_15:
  v11 = *(_BYTE *)(a2 + 26);
  *(_DWORD *)(a1 + 36) |= 8u;
  *(_BYTE *)(a1 + 26) = v11;
  v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 0x10) != 0)
    goto LABEL_16;
LABEL_9:
  if ((v5 & 0x20) != 0)
  {
LABEL_10:
    v6 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 36) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001CE978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CE98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CE9A0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1003FB830;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001CE9D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1001CE9D8()
{
  operator new();
}

void sub_1001CEA28()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CEA50(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1001CEA70(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t result;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  unsigned int v23;
  _BYTE *v24;
  unsigned int v25[2];

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_29;
        *(_QWORD *)v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v25) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v25;
        *(_DWORD *)(a1 + 36) |= 1u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 != 16)
          continue;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
        goto LABEL_16;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v12 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_16:
        v25[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v25);
          if (!(_DWORD)result)
            return result;
          v13 = v25[0];
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v13 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_BYTE *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v14 >= v10 || *v14 != 24)
          continue;
        v15 = v14 + 1;
        *((_QWORD *)this + 1) = v15;
        v25[0] = 0;
        if ((unint64_t)v15 >= v10)
          goto LABEL_39;
LABEL_37:
        if (*v15 < 0)
        {
LABEL_39:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v25);
          if (!(_DWORD)result)
            return result;
          v19 = v25[0];
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v19 = *v15;
          v20 = v15 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        *(_BYTE *)(a1 + 25) = v19 != 0;
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v20 >= v10 || *v20 != 32)
          continue;
        v16 = v20 + 1;
        *((_QWORD *)this + 1) = v16;
        v25[0] = 0;
        if ((unint64_t)v16 >= v10)
          goto LABEL_46;
LABEL_44:
        if (*v16 < 0)
        {
LABEL_46:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v25);
          if (!(_DWORD)result)
            return result;
          v21 = v25[0];
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v21 = *v16;
          v22 = v16 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        *(_BYTE *)(a1 + 26) = v21 != 0;
        *(_DWORD *)(a1 + 36) |= 8u;
        if ((unint64_t)v22 >= v10 || *v22 != 40)
          continue;
        v17 = v22 + 1;
        *((_QWORD *)this + 1) = v17;
        v25[0] = 0;
        if ((unint64_t)v17 >= v10)
          goto LABEL_53;
LABEL_51:
        if (*v17 < 0)
        {
LABEL_53:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v25);
          if (!(_DWORD)result)
            return result;
          v23 = v25[0];
          v24 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v23 = *v17;
          v24 = v17 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        *(_BYTE *)(a1 + 27) = v23 != 0;
        *(_DWORD *)(a1 + 36) |= 0x10u;
        if ((unint64_t)v24 >= v10 || *v24 != 53)
          continue;
        *((_QWORD *)this + 1) = v24 + 1;
LABEL_58:
        v25[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v25) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 28) = v25[0];
        *(_DWORD *)(a1 + 36) |= 0x20u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v15 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        v25[0] = 0;
        if ((unint64_t)v15 >= v10)
          goto LABEL_39;
        goto LABEL_37;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v16 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        v25[0] = 0;
        if ((unint64_t)v16 >= v10)
          goto LABEL_46;
        goto LABEL_44;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v17 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        v25[0] = 0;
        if ((unint64_t)v17 >= v10)
          goto LABEL_53;
        goto LABEL_51;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_29;
        goto LABEL_58;
      default:
        v9 = TagFallback & 7;
LABEL_29:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1001CEE3C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 26), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 27), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 0x20) == 0)
  {
LABEL_7:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 28), a3);
  v10 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v10;
  if (!v10)
    return this;
LABEL_15:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

uint64_t sub_1001CEF34(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  int v12;
  _QWORD *v13;

  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)a2 = 16;
  *(_BYTE *)(a2 + 1) = v8;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v9 = *(_BYTE *)(a1 + 25);
  *(_BYTE *)a2 = 24;
  *(_BYTE *)(a2 + 1) = v9;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10 = *(_BYTE *)(a1 + 26);
  *(_BYTE *)a2 = 32;
  *(_BYTE *)(a2 + 1) = v10;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0)
      goto LABEL_7;
LABEL_14:
    v12 = *(_DWORD *)(a1 + 28);
    *(_BYTE *)a2 = 53;
    *(_DWORD *)(a2 + 1) = v12;
    a2 += 5;
    v13 = *(_QWORD **)(a1 + 8);
    v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v5 = v13;
    if (!v13)
      return a2;
    goto LABEL_15;
  }
LABEL_13:
  v11 = *(_BYTE *)(a1 + 27);
  *(_BYTE *)a2 = 40;
  *(_BYTE *)(a2 + 1) = v11;
  a2 += 2;
  if ((*(_DWORD *)(a1 + 36) & 0x20) != 0)
    goto LABEL_14;
LABEL_7:
  v6 = *(_QWORD **)(a1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v5 = v6;
  if (!v6)
    return a2;
LABEL_15:
  if (*v5 != v5[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001CF06C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  uint64_t v9;

  v3 = *(unsigned __int8 *)(a1 + 36);
  if (*(_BYTE *)(a1 + 36))
  {
    v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
    if ((v3 & 4) != 0)
      v4 += 2;
    if ((v3 & 8) != 0)
      v4 += 2;
    if ((v3 & 0x10) != 0)
      v4 += 2;
    if ((v3 & 0x20) != 0)
      v5 = v4 + 5;
    else
      v5 = v4;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
      goto LABEL_12;
  }
  else
  {
    v5 = 0;
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    v7 = *(_QWORD **)(a1 + 8);
    if (!v7)
    {
LABEL_12:
      *(_DWORD *)(a1 + 32) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1])
    goto LABEL_12;
  v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 32) = v9;
  return v9;
}

uint64_t sub_1001CF120(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 17217);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001CE83C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001CF1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CF1E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CF1FC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001CF244()
{
  return 1;
}

uint64_t sub_1001CF24C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419EC8;
}

void sub_1001CF2C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001CF2D4(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1003FB8E0;
  if ((_QWORD *)qword_10041B0E0 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001CF32C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001CF334()
{
  operator new();
}

void sub_1001CF38C()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CF3B4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  unsigned int v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  char *v24;
  uint64_t result;
  unsigned int v26;
  _BYTE *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v33;
  int v34;
  BOOL v35;
  int v36;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  _BYTE *v42;
  unsigned int v43;
  _BYTE *v44;
  unsigned int v45;
  _BYTE *v46;
  _BYTE *v47;
  unsigned int v48;
  unsigned __int8 *v49;
  unsigned int v50;

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v50 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!(_DWORD)result)
            return result;
          v12 = v50;
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v12 = *v11;
          v13 = v11 + 1;
          *((_QWORD *)this + 1) = v13;
        }
        *(_BYTE *)(a1 + 24) = v12 != 0;
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v13 >= v10 || *v13 != 16)
          continue;
        v14 = v13 + 1;
        *((_QWORD *)this + 1) = v14;
        v50 = 0;
        if ((unint64_t)v14 >= v10)
          goto LABEL_47;
LABEL_45:
        if (*v14 < 0)
        {
LABEL_47:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!(_DWORD)result)
            return result;
          v26 = v50;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v26 = *v14;
          v27 = v14 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        *(_BYTE *)(a1 + 25) = v26 != 0;
        v28 = *(_DWORD *)(a1 + 44) | 2;
        *(_DWORD *)(a1 + 44) = v28;
        if ((unint64_t)v27 >= v10 || *v27 != 26)
          continue;
        *((_QWORD *)this + 1) = v27 + 1;
        *(_DWORD *)(a1 + 44) = v28 | 4;
        v15 = *(_QWORD *)(a1 + 16);
        if (!v15)
LABEL_52:
          operator new();
LABEL_18:
        v50 = 0;
        v16 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50))return 0;
        }
        else
        {
          v50 = *v16;
          *((_QWORD *)this + 1) = v16 + 1;
        }
        v29 = *((_DWORD *)this + 14);
        v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30)
          return 0;
        v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v50);
        if (!sub_1001CEA70(v15, this, v32, v33) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        v34 = *((_DWORD *)this + 14);
        v35 = __OFSUB__(v34, 1);
        v36 = v34 - 1;
        if (v36 < 0 == v35)
          *((_DWORD *)this + 14) = v36;
        v37 = (_BYTE *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        if ((unint64_t)v37 >= v17 || *v37 != 32)
          continue;
        v18 = v37 + 1;
        *((_QWORD *)this + 1) = v18;
        v50 = 0;
        if ((unint64_t)v18 >= v17)
          goto LABEL_66;
LABEL_64:
        if (*v18 < 0)
        {
LABEL_66:
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!(_DWORD)result)
            return result;
          v38 = v50;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v17 = *((_QWORD *)this + 2);
        }
        else
        {
          v38 = *v18;
          v39 = v18 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        *(_BYTE *)(a1 + 26) = v38 != 0;
        *(_DWORD *)(a1 + 44) |= 8u;
        if ((unint64_t)v39 >= v17 || *v39 != 40)
          continue;
        v19 = v39 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_71:
        v50 = 0;
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!(_DWORD)result)
            return result;
          v40 = v50;
          v41 = (_BYTE *)*((_QWORD *)this + 1);
          v17 = *((_QWORD *)this + 2);
        }
        else
        {
          v40 = *v19;
          v41 = v19 + 1;
          *((_QWORD *)this + 1) = v41;
        }
        *(_BYTE *)(a1 + 27) = v40 != 0;
        *(_DWORD *)(a1 + 44) |= 0x10u;
        if ((unint64_t)v41 >= v17 || *v41 != 53)
          continue;
        *((_QWORD *)this + 1) = v41 + 1;
        v50 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v50) & 1) == 0)
          return 0;
LABEL_79:
        *(_DWORD *)(a1 + 28) = v50;
        *(_DWORD *)(a1 + 44) |= 0x20u;
        v42 = (_BYTE *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        if ((unint64_t)v42 >= v20 || *v42 != 56)
          continue;
        v21 = v42 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_82:
        v50 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!(_DWORD)result)
            return result;
          v43 = v50;
          v44 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          v43 = *v21;
          v44 = v21 + 1;
          *((_QWORD *)this + 1) = v44;
        }
        *(_BYTE *)(a1 + 32) = v43 != 0;
        *(_DWORD *)(a1 + 44) |= 0x40u;
        if ((unint64_t)v44 >= v20 || *v44 != 64)
          continue;
        v22 = v44 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_90:
        v50 = 0;
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!(_DWORD)result)
            return result;
          v45 = v50;
          v46 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          v45 = *v22;
          v46 = v22 + 1;
          *((_QWORD *)this + 1) = v46;
        }
        *(_BYTE *)(a1 + 33) = v45 != 0;
        *(_DWORD *)(a1 + 44) |= 0x80u;
        if ((unint64_t)v46 >= v20 || *v46 != 77)
          continue;
        *((_QWORD *)this + 1) = v46 + 1;
        v50 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v50) & 1) != 0)
        {
LABEL_98:
          *(_DWORD *)(a1 + 36) = v50;
          *(_DWORD *)(a1 + 44) |= 0x100u;
          v47 = (_BYTE *)*((_QWORD *)this + 1);
          v23 = *((_QWORD *)this + 2);
          if ((unint64_t)v47 < v23 && *v47 == 80)
          {
            v24 = v47 + 1;
            *((_QWORD *)this + 1) = v24;
LABEL_101:
            v50 = 0;
            if ((unint64_t)v24 >= v23 || *v24 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
              if (!(_DWORD)result)
                return result;
              v48 = v50;
              v49 = (unsigned __int8 *)*((_QWORD *)this + 1);
              v23 = *((_QWORD *)this + 2);
            }
            else
            {
              v48 = *v24;
              v49 = (unsigned __int8 *)(v24 + 1);
              *((_QWORD *)this + 1) = v49;
            }
            *(_BYTE *)(a1 + 34) = v48 != 0;
            *(_DWORD *)(a1 + 44) |= 0x200u;
            if (v49 == (unsigned __int8 *)v23
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              result = 1;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v14 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        v50 = 0;
        if ((unint64_t)v14 >= v10)
          goto LABEL_47;
        goto LABEL_45;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_36;
        *(_DWORD *)(a1 + 44) |= 4u;
        v15 = *(_QWORD *)(a1 + 16);
        if (v15)
          goto LABEL_18;
        goto LABEL_52;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v18 = (char *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        v50 = 0;
        if ((unint64_t)v18 >= v17)
          goto LABEL_66;
        goto LABEL_64;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v19 = (char *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        goto LABEL_71;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_36;
        v50 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v50) & 1) == 0)
          return 0;
        goto LABEL_79;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v21 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_82;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v22 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_90;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 != 5)
          goto LABEL_36;
        v50 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v50) & 1) == 0)
          return 0;
        goto LABEL_98;
      case 0xAu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v24 = (char *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        goto LABEL_101;
      default:
        v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

void sub_1001CFA40()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CFA68(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 24), (BOOL)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
LABEL_15:
      v10 = *(_QWORD *)(v5 + 16);
      if (v10)
      {
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v10, a2, a4);
        v6 = *(_DWORD *)(v5 + 44);
        if ((v6 & 8) != 0)
          goto LABEL_19;
      }
      else
      {
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(qword_10041B0E0 + 16), a2, a4);
        v6 = *(_DWORD *)(v5 + 44);
        if ((v6 & 8) != 0)
          goto LABEL_19;
      }
LABEL_5:
      if ((v6 & 0x10) == 0)
        goto LABEL_6;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0)
    goto LABEL_15;
LABEL_4:
  if ((v6 & 8) == 0)
    goto LABEL_5;
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 26), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 27), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 32), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 33), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 36), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x200) == 0)
  {
LABEL_11:
    v9 = *(_QWORD **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9)
      return this;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 34), (BOOL)a2, a4);
  v11 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v11;
  if (!v11)
    return this;
LABEL_26:
  if (*v7 != v7[1])
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  return this;
}

_BYTE *sub_1001CFBF8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  int v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  uint64_t v13;
  unsigned __int8 *v14;
  char v15;
  char v16;
  int v17;
  char v18;
  char v19;
  int v20;
  char v21;
  _QWORD *v22;

  v4 = *((_DWORD *)this + 11);
  if ((v4 & 1) != 0)
  {
    v8 = *((_BYTE *)this + 24);
    *a2 = 8;
    a2[1] = v8;
    a2 += 2;
    v4 = *((_DWORD *)this + 11);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
LABEL_15:
      v10 = *((_QWORD *)this + 2);
      if (v10)
      {
        *a2 = 26;
        v11 = (_DWORD)a2 + 1;
        v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 32);
        if (v12 <= 0x7F)
          goto LABEL_17;
      }
      else
      {
        v10 = *(_QWORD *)(qword_10041B0E0 + 16);
        *a2 = 26;
        v11 = (_DWORD)a2 + 1;
        v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 32);
        if (v12 <= 0x7F)
        {
LABEL_17:
          a2[1] = (_BYTE)v12;
          a2 = (_BYTE *)sub_1001CEF34(v10, (uint64_t)(a2 + 2), a3);
          v4 = *((_DWORD *)this + 11);
          if ((v4 & 8) != 0)
            goto LABEL_21;
LABEL_5:
          if ((v4 & 0x10) == 0)
            goto LABEL_6;
          goto LABEL_22;
        }
      }
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
      a2 = (_BYTE *)sub_1001CEF34(v10, v13, v14);
      v4 = *((_DWORD *)this + 11);
      if ((v4 & 8) != 0)
        goto LABEL_21;
      goto LABEL_5;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v9 = *((_BYTE *)this + 25);
  *a2 = 16;
  a2[1] = v9;
  a2 += 2;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 4) != 0)
    goto LABEL_15;
LABEL_4:
  if ((v4 & 8) == 0)
    goto LABEL_5;
LABEL_21:
  v15 = *((_BYTE *)this + 26);
  *a2 = 32;
  a2[1] = v15;
  a2 += 2;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  v16 = *((_BYTE *)this + 27);
  *a2 = 40;
  a2[1] = v16;
  a2 += 2;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  v17 = *((_DWORD *)this + 7);
  *a2 = 53;
  *(_DWORD *)(a2 + 1) = v17;
  a2 += 5;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  v18 = *((_BYTE *)this + 32);
  *a2 = 56;
  a2[1] = v18;
  a2 += 2;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_26;
  }
LABEL_25:
  v19 = *((_BYTE *)this + 33);
  *a2 = 64;
  a2[1] = v19;
  a2 += 2;
  v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0)
      goto LABEL_11;
LABEL_27:
    v21 = *((_BYTE *)this + 34);
    *a2 = 80;
    a2[1] = v21;
    a2 += 2;
    v22 = (_QWORD *)*((_QWORD *)this + 1);
    v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    v5 = v22;
    if (!v22)
      return a2;
    goto LABEL_28;
  }
LABEL_26:
  v20 = *((_DWORD *)this + 9);
  *a2 = 77;
  *(_DWORD *)(a2 + 1) = v20;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 0x200) != 0)
    goto LABEL_27;
LABEL_11:
  v7 = (_QWORD *)*((_QWORD *)this + 1);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v5 = v7;
  if (!v7)
    return a2;
LABEL_28:
  if (*v5 != v5[1])
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  return a2;
}

uint64_t sub_1001CFE1C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  _QWORD *v15;

  v3 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    v11 = 0;
    goto LABEL_38;
  }
  if ((v3 & 2) != 0)
    v4 = 2 * (v3 & 1) + 2;
  else
    v4 = 2 * (v3 & 1);
  if ((v3 & 4) != 0)
  {
    v5 = *(_QWORD *)(a1 + 16);
    if (v5)
    {
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
        goto LABEL_8;
    }
    else
    {
      v5 = *(_QWORD *)(qword_10041B0E0 + 16);
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
LABEL_8:
        v7 = (v6 << 31 >> 31) & 9 | v6 & 2;
        if ((v6 & 4) != 0)
          v7 += 2;
        if ((v6 & 8) != 0)
          v7 += 2;
        if ((v6 & 0x10) != 0)
          v7 += 2;
        if ((v6 & 0x20) != 0)
          LODWORD(v8) = v7 + 5;
        else
          LODWORD(v8) = v7;
        v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
        v10 = *(_QWORD **)(v5 + 8);
        if (!v10)
          goto LABEL_25;
LABEL_22:
        if (*v10 != v10[1])
        {
          v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v9, a2)+ v8);
          *(_DWORD *)(v5 + 32) = (_DWORD)v8;
          if (v8 >= 0x80)
            v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
          else
            v12 = 1;
          goto LABEL_27;
        }
LABEL_25:
        *(_DWORD *)(v5 + 32) = (_DWORD)v8;
        v12 = 1;
LABEL_27:
        v4 = (v4 | 1) + (_DWORD)v8 + v12;
        v3 = *(_DWORD *)(a1 + 44);
        goto LABEL_28;
      }
    }
    LODWORD(v8) = 0;
    v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v10 = *(_QWORD **)(v5 + 8);
    if (!v10)
      goto LABEL_25;
    goto LABEL_22;
  }
LABEL_28:
  v11 = v4 + 2;
  if ((v3 & 8) == 0)
    v11 = v4;
  if ((v3 & 0x10) != 0)
    v11 += 2;
  if ((v3 & 0x20) != 0)
    v11 += 5;
  if ((v3 & 0x40) != 0)
    v11 += 2;
  if ((v3 & 0x80) != 0)
    v11 += 2;
LABEL_38:
  v13 = v11 + 5;
  if ((v3 & 0x100) == 0)
    v13 = v11;
  if ((v3 & 0x200) != 0)
    v13 += 2;
  if ((v3 & 0xFF00) != 0)
    v14 = v13;
  else
    v14 = v11;
  v15 = *(_QWORD **)(a1 + 8);
  if (v15 && *v15 != v15[1])
    v14 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v14;
  *(_DWORD *)(a1 + 40) = v14;
  return v14;
}

uint64_t sub_1001CFFC0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", 17760);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1001BC974((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1001D0074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D0088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D009C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1001D00E4()
{
  return 1;
}

uint64_t sub_1001D00EC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100419F40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001AE450;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100419F40, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100419ED8;
}

void sub_1001D0160(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D0174(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001D017C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001D0184(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001D018C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1001D0194(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001D019C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001D01A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001D01AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001D01B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_1001D01BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1001D01C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_1001D01CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001D01D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 296);
}

uint64_t sub_1001D01DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1001D01E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001D01EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001D01F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001D01FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001D0204(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001D020C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001D0214(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001D021C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001D0224(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001D022C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001D0234(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_1001D023C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001D0244(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001D024C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_1001D0254(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1001D025C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 152);
}

uint64_t sub_1001D0264(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001D026C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1001D0274(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001D027C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001D0284(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1001D028C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1001D0294(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001D029C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1001D0344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, _QWORD *a11)
{
  void *v11;
  void *v12;

  sub_10004AAA0((uint64_t)&a10, a11);

  _Unwind_Resume(a1);
}

void sub_1001D0374(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

char *sub_1001D0384(uint64_t a1, uint64_t *a2)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return sub_1001900A4((char *)a1, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3));
}

_QWORD *sub_1001D03C0(_QWORD *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = a1 + 1;
  return sub_1001D0F4C(a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
}

void sub_1001D03F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10004AAA0(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_1001D0424(uint64_t **a1, uint64_t **a2)
{
  if (a1 != a2)
    sub_10009CE4C(a1, *a2, a2 + 1);
}

void sub_1001D0450(uint64_t a1, int8x16_t *a2)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_1001D04B0((uint64_t)exception, a1, a2);
}

void sub_1001D0498(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

int8x16_t sub_1001D04B0(uint64_t a1, uint64_t a2, int8x16_t *a3)
{
  int8x16_t result;

  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)a1 = &off_1003FBDB0;
  *(_QWORD *)(a1 + 8) = off_1003FBDE0;
  *(_QWORD *)(a1 + 16) = off_1003FBE08;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 48) = a3[1].i32[0];
  result = vextq_s8(*a3, *a3, 8uLL);
  *(int8x16_t *)(a1 + 32) = result;
  return result;
}

std::exception *sub_1001D04E4(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1[2].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    a1[3].__vftable = 0;
  std::exception::~exception(a1 + 1);
  return a1;
}

void sub_1001D053C()
{
  operator new();
}

void sub_1001D0600()
{
  std::exception *v0;

  std::exception::~exception(v0);
  operator delete();
}

void sub_1001D062C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001D0648(uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x38uLL);
  sub_1001D08A8((uint64_t)exception, a1);
}

void sub_1001D0684(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1001D0698(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1[2].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[3].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      a1[3].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);
  operator delete();
}

void sub_1001D0700(std::exception *this)
{
  std::exception_vtbl *v2;

  this[1].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    this[2].__vftable = 0;
  std::exception::~exception(this);
}

void sub_1001D0750(std::exception *this)
{
  std::exception_vtbl *v2;

  this[1].__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = this[2].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      this[2].__vftable = 0;
  }
  std::exception::~exception(this);
  operator delete();
}

const char *sub_1001D07BC()
{
  return "Boost.Geometry Empty-Input exception";
}

void sub_1001D07C8(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
    a1[1].__vftable = 0;
  std::exception::~exception(a1 - 1);
}

void sub_1001D0818(std::exception *a1)
{
  std::exception_vtbl *v2;

  a1->__vftable = (std::exception_vtbl *)&off_1003EDD90;
  v2 = a1[1].__vftable;
  if (v2)
  {
    if ((*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2))
      a1[1].__vftable = 0;
  }
  std::exception::~exception(a1 - 1);
  operator delete();
}

void sub_1001D0884(std::exception *a1)
{
  std::exception::~exception(a1);
  operator delete();
}

uint64_t sub_1001D08A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = &off_1003EDEA0;
  *(_QWORD *)(a1 + 8) = &off_1003FBE28;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = &off_1003EDD90;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)a1 = &off_1003FBDB0;
  *(_QWORD *)(a1 + 8) = off_1003FBDE0;
  *(_QWORD *)(a1 + 16) = off_1003FBE08;
  return a1;
}

void sub_1001D0940(_Unwind_Exception *a1)
{
  std::exception *v1;

  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

double sub_1001D0954(double *a1, double *a2, double *a3, double *a4, double *a5, double *a6, double *a7, double *a8, double *a9, double *a10)
{
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double result;
  double v18;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  int v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  int v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63[4];
  double v64[8];
  double v65[8];
  double v66;
  double v67;
  double v68;
  double v69;

  a8[1] = -(*a8 - *a4 * *a5);
  v10 = *a9;
  v11 = -(*a9 - *a6 * *a7);
  a9[1] = v11;
  v12 = a8[1];
  v13 = v12 - v11;
  v14 = v12 - (v12 - v11) - v11 + v12 - (v12 - v11 + v12 - (v12 - v11));
  v15 = *a8 + v13;
  v16 = v13 - (v15 - *a8) + *a8 - (v15 - (v15 - *a8));
  v66 = v14;
  v67 = v16 - (v16 - v10) - v10 + v16 - (v16 - v10 + v16 - (v16 - v10));
  v68 = v16 - v10 - (v15 + v16 - v10 - v15) + v15 - (v15 + v16 - v10 - (v15 + v16 - v10 - v15));
  v69 = v15 + v16 - v10;
  result = v14 + 0.0 + v67 + v68 + v69;
  v18 = fabs(result);
  if (v18 < *a10 * 2.22044605e-16)
  {
    a4[1] = *a1 - *a4 - *a3 + *a1 - (*a4 + *a1 - *a4);
    a5[1] = a2[1] - *a5 - a3[1] + a2[1] - (*a5 + a2[1] - *a5);
    a6[1] = a1[1] - *a6 - a3[1] + a1[1] - (*a6 + a1[1] - *a6);
    v23 = *a7;
    v24 = *a2 - *a7 - *a3 + *a2 - (*a7 + *a2 - *a7);
    a7[1] = v24;
    v25 = a4[1];
    v26 = a6[1];
    v27 = a5[1];
    if (v25 != 0.0 || v26 != 0.0 || v27 != 0.0 || v24 != 0.0)
    {
      v28 = v18 * 3.33066907e-16 + *a10 * 1.10933565e-31;
      v29 = v25 * *a5;
      v30 = v23 * v26;
      result = result + v29 + *a4 * v27 - (v23 * v26 + *a6 * v24);
      if (fabs(result) < v28)
      {
        v31 = -(v29 - v25 * *a5);
        v32 = -(v30 - v26 * v23);
        v33 = v31 - v32;
        v34 = v31 - (v31 - v32) - v32 + v31 - (v31 - v32 + v31 - (v31 - v32));
        v35 = v29 + v33;
        v36 = v33 - (v29 + v33 - v29) + v29 - (v29 + v33 - (v29 + v33 - v29));
        v59 = v34;
        v60 = v36 - (v36 - v30) - v30 + v36 - (v36 - v30 + v36 - (v36 - v30));
        v61 = v36 - v30 - (v35 + v36 - v30 - v35) + v35 - (v35 + v36 - v30 - (v35 + v36 - v30 - v35));
        v62 = v35 + v36 - v30;
        v37 = sub_1001D0D50(&v66, &v59, v65, 4, 4);
        v38 = a5[1];
        v39 = a4[1];
        v40 = *a4 * v38;
        v41 = -(v40 - v40);
        v42 = a7[1];
        v43 = a6[1];
        v44 = *a6 * v42;
        v45 = -(v44 - v44);
        v46 = v41 - v45;
        v47 = v41 - (v41 - v45) - v45 + v41 - (v41 - v45 + v41 - (v41 - v45));
        v48 = v40 + v46;
        v49 = v46 - (v40 + v46 - v40) + v40 - (v40 + v46 - (v40 + v46 - v40));
        v59 = v47;
        v60 = v49 - (v49 - v44) - v44 + v49 - (v49 - v44 + v49 - (v49 - v44));
        v61 = v49 - v44 - (v48 + v49 - v44 - v48) + v48 - (v48 + v49 - v44 - (v48 + v49 - v44 - v48));
        v62 = v48 + v49 - v44;
        v50 = v38 * v39;
        v51 = -(v38 * v39 - v39 * v38);
        v52 = v42 * v43;
        v53 = -(v42 * v43 - v43 * v42);
        v54 = v51 - v53;
        v55 = v51 - (v51 - v53) - v53 + v51 - (v51 - v53 + v51 - (v51 - v53));
        v56 = v50 + v54;
        v57 = v54 - (v50 + v54 - v50) + v50 - (v50 + v54 - (v50 + v54 - v50));
        v63[0] = v55;
        v63[1] = v57 - (v57 - v52) - v52 + v57 - (v57 - v52 + v57 - (v57 - v52));
        v63[2] = v57 - v52 - (v56 + v57 - v52 - v56) + v56 - (v56 + v57 - v52 - (v56 + v57 - v52 - v56));
        v63[3] = v56 + v57 - v52;
        v58 = sub_1001D0D50(&v59, v63, v64, 4, 4);
        return *(&v59 + (int)sub_1001D0D50(v65, v64, &v59, v37, v58) - 1);
      }
    }
  }
  return result;
}

uint64_t sub_1001D0D50(double *a1, double *a2, double *a3, int a4, int a5)
{
  double v6;
  double v7;
  double v8;
  int v9;
  int v10;
  uint64_t result;
  double v13;
  double v14;
  double v15;
  double v16;
  int v17;
  double v18;
  double v19;
  int v20;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  BOOL v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double *v39;
  uint64_t v40;
  double v41;
  double v42;
  double *v43;
  uint64_t v44;
  double v45;
  double v46;

  v6 = *a2;
  v7 = fabs(*a2);
  v8 = fabs(*a1);
  v9 = v7 <= v8;
  v10 = v7 > v8;
  if (v7 > v8)
    v6 = *a1;
  if (v10 >= a4 || v9 >= a5)
  {
    result = 0;
    goto LABEL_40;
  }
  v13 = a2[v7 <= v8];
  v14 = a1[v7 > v8];
  v15 = fabs(v13);
  v16 = fabs(v14);
  if (v7 > v8)
    v17 = 1;
  else
    v17 = 2;
  v18 = v6 + v13;
  v19 = v6 + v13 - v13;
  if (v7 <= v8)
    v20 = 1;
  else
    v20 = 2;
  v21 = v6 + v14;
  v22 = v6 + v14 - v14;
  if (v15 > v16)
  {
    v10 = v20;
  }
  else
  {
    v22 = v19;
    v21 = v18;
    v9 = v17;
  }
  v23 = v6 - v22;
  if (v23 == 0.0)
  {
    result = 0;
    v6 = v21;
    if (v10 >= a4 || v9 >= a5)
      goto LABEL_40;
  }
  else
  {
    *a3 = v23;
    result = 1;
    v6 = v21;
    if (v10 >= a4 || v9 >= a5)
      goto LABEL_40;
  }
  do
  {
    v26 = a2[v9];
    v27 = a1[v10];
    v28 = fabs(v26) <= fabs(v27);
    v29 = v6 + v26;
    v30 = v6 + v26 - v6;
    v31 = v6 + v26 - v30;
    v32 = v26 - v30;
    v33 = v6 + v27;
    v34 = v6 + v27 - v6;
    v35 = v6 + v27 - v34;
    v36 = v27 - v34;
    if (!v28)
    {
      v31 = v35;
      v32 = v36;
    }
    v37 = v6 - v31;
    if (v28)
      v6 = v29;
    else
      v6 = v33;
    if (v28)
      ++v9;
    else
      ++v10;
    v38 = v32 + v37;
    if (v38 != 0.0)
    {
      a3[(int)result] = v38;
      result = (result + 1);
    }
  }
  while (v10 < a4 && v9 < a5);
LABEL_40:
  if (v10 < a4)
  {
    v39 = &a1[v10];
    v40 = a4 - (uint64_t)v10;
    do
    {
      v41 = v6;
      v6 = v6 + *v39;
      v42 = *v39 - (v6 - v41) + v41 - (v6 - (v6 - v41));
      if (v42 != 0.0)
      {
        a3[(int)result] = v42;
        result = (result + 1);
      }
      ++v39;
      --v40;
    }
    while (v40);
  }
  if (v9 < a5)
  {
    v43 = &a2[v9];
    v44 = a5 - (uint64_t)v9;
    do
    {
      v45 = v6;
      v6 = v6 + *v43;
      v46 = *v43 - (v6 - v45) + v45 - (v6 - (v6 - v45));
      if (v46 != 0.0)
      {
        a3[(int)result] = v46;
        result = (result + 1);
      }
      ++v43;
      --v44;
    }
    while (v44);
  }
  if (v6 != 0.0 || (_DWORD)result == 0)
  {
    a3[(int)result] = v6;
    return (result + 1);
  }
  return result;
}

_QWORD *sub_1001D0F4C(_QWORD *result, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t **v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  if (a2 != a3)
  {
    v18[7] = v3;
    v18[8] = v4;
    v6 = a2;
    v7 = (_QWORD **)result;
    v8 = result + 1;
    do
    {
      result = sub_1001D1058(v7, v8, v18, &v17, v6 + 4);
      if (*result)
      {
        v9 = (_QWORD *)v6[1];
        if (v9)
          goto LABEL_11;
      }
      else
      {
        v10 = (uint64_t **)result;
        v11 = (uint64_t *)operator new(0x28uLL);
        v11[4] = v6[4];
        v12 = v18[0];
        *v11 = 0;
        v11[1] = 0;
        v11[2] = v12;
        *v10 = v11;
        v13 = (_QWORD *)**v7;
        if (v13)
        {
          *v7 = v13;
          v14 = *v10;
        }
        else
        {
          v14 = v11;
        }
        result = sub_1000E05F4(v7[1], v14);
        v7[2] = (_QWORD *)((char *)v7[2] + 1);
        v9 = (_QWORD *)v6[1];
        if (v9)
        {
          do
          {
LABEL_11:
            v15 = v9;
            v9 = (_QWORD *)*v9;
          }
          while (v9);
          goto LABEL_3;
        }
      }
      do
      {
        v15 = (_QWORD *)v6[2];
        v16 = *v15 == (_QWORD)v6;
        v6 = v15;
      }
      while (!v16);
LABEL_3:
      v6 = v15;
    }
    while (v15 != a3);
  }
  return result;
}

_QWORD *sub_1001D1058(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, unint64_t *a5)
{
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  unint64_t v16;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;

  v5 = a1 + 1;
  if (a1 + 1 == a2 || (v6 = *a5, v7 = a2[4], *a5 < v7))
  {
    v8 = *a2;
    if ((_QWORD *)*a1 == a2)
    {
      v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      v9 = (_QWORD *)*a2;
      do
      {
        v10 = v9;
        v9 = (_QWORD *)v9[1];
      }
      while (v9);
    }
    else
    {
      v14 = a2;
      do
      {
        v10 = (_QWORD *)v14[2];
        v15 = *v10 == (_QWORD)v14;
        v14 = v10;
      }
      while (v15);
    }
    v16 = *a5;
    if (v10[4] < *a5)
      goto LABEL_17;
    v18 = (_QWORD *)*v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          v19 = v18;
          v20 = v18[4];
          if (v16 >= v20)
            break;
          v18 = (_QWORD *)*v19;
          v5 = v19;
          if (!*v19)
            goto LABEL_25;
        }
        if (v20 >= v16)
          break;
        v5 = v19 + 1;
        v18 = (_QWORD *)v19[1];
      }
      while (v18);
LABEL_25:
      *a3 = v19;
      return v5;
    }
    else
    {
      *a3 = v5;
      return a1 + 1;
    }
  }
  else if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = a2;
    return a4;
  }
  else
  {
    v11 = a2[1];
    if (v11)
    {
      v12 = (_QWORD *)a2[1];
      do
      {
        v13 = v12;
        v12 = (_QWORD *)*v12;
      }
      while (v12);
    }
    else
    {
      v21 = a2;
      do
      {
        v13 = (_QWORD *)v21[2];
        v15 = *v13 == (_QWORD)v21;
        v21 = v13;
      }
      while (!v15);
    }
    if (v13 == v5 || v6 < v13[4])
    {
      if (v11)
      {
        *a3 = v13;
        return v13;
      }
      else
      {
        *a3 = a2;
        return a2 + 1;
      }
    }
    else
    {
      v22 = (_QWORD *)*v5;
      if (*v5)
      {
        do
        {
          while (1)
          {
            v23 = v22;
            v24 = v22[4];
            if (v6 >= v24)
              break;
            v22 = (_QWORD *)*v23;
            v5 = v23;
            if (!*v23)
              goto LABEL_41;
          }
          if (v24 >= v6)
            break;
          v5 = v23 + 1;
          v22 = (_QWORD *)v23[1];
        }
        while (v22);
LABEL_41:
        *a3 = v23;
        return v5;
      }
      else
      {
        *a3 = v5;
        return a1 + 1;
      }
    }
  }
}

char *sub_1001D1208(void **a1, const char **a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  const char *v9;
  size_t v10;
  size_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  char *v20;
  char *v22;
  char *v23;
  char *v24;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_1000D02C0();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_1000CDEB8();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v22 = v8;
  v23 = v8;
  v24 = &v7[24 * v6];
  v9 = *a2;
  v10 = strlen(*a2);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_1000CDE30();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v16 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v16 = v10 | 7;
    v17 = v16 + 1;
    v18 = (char *)operator new(v16 + 1);
    *((_QWORD *)v8 + 1) = v11;
    *((_QWORD *)v8 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v8 = v18;
    v8 = v18;
  }
  else
  {
    v8[23] = v10;
    if (!v10)
    {
      *v8 = 0;
      v12 = v8;
      v13 = v8 + 24;
      v14 = (char *)*a1;
      v15 = (char *)a1[1];
      if (v15 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, v9, v11);
  v8[v11] = 0;
  v12 = v22;
  v13 = v23 + 24;
  v14 = (char *)*a1;
  v15 = (char *)a1[1];
  if (v15 == *a1)
  {
LABEL_23:
    *a1 = v12;
    a1[1] = v13;
    a1[2] = v24;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v19 = *(_OWORD *)(v15 - 24);
    *((_QWORD *)v12 - 1) = *((_QWORD *)v15 - 1);
    *(_OWORD *)(v12 - 24) = v19;
    v12 -= 24;
    *((_QWORD *)v15 - 2) = 0;
    *((_QWORD *)v15 - 1) = 0;
    *((_QWORD *)v15 - 3) = 0;
    v15 -= 24;
  }
  while (v15 != v14);
  v20 = (char *)*a1;
  v15 = (char *)a1[1];
  *a1 = v12;
  a1[1] = v13;
  a1[2] = v24;
  if (v15 != v20)
  {
    do
    {
      if (*(v15 - 1) < 0)
        operator delete(*((void **)v15 - 3));
      v15 -= 24;
    }
    while (v15 != v20);
    v15 = v20;
  }
LABEL_28:
  if (v15)
    operator delete(v15);
  return v13;
}

void sub_1001D1424(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000FF910((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D1464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D14C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D15A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D1668(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001D16A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D1864(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D1878(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001D18D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001D19BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D1A38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D1A8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D1CA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D1CB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D1CC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D1CDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001D1D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D1EB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D1EC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D1ED8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1001D1F30()
{
  if (qword_100417EE8 != -1)
    dispatch_once(&qword_100417EE8, &stru_1003FBE40);
  return (id)qword_100417EF0;
}

uint64_t sub_1001D1F7C(uint64_t a1)
{
  _QWORD *v2;

  v2 = operator new(0x90uLL);
  v2[1] = 0;
  v2[2] = 0;
  *v2 = off_1003FBE70;
  *(_QWORD *)a1 = sub_10009DCEC((uint64_t)(v2 + 3));
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return a1;
}

void sub_1001D1FD8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D1FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  if (!v2)
    v2 = *(_QWORD *)(qword_10042EAD0 + 96);
  return sub_1001AD9D8(a2, v2);
}

uint64_t sub_1001D201C(uint64_t a1)
{
  return *(unsigned int *)(*(_QWORD *)a1 + 24);
}

uint64_t sub_1001D2028@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return sub_10031D3BC(a3, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 8 * a2));
}

void sub_1001D203C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Client");
  v2 = (void *)qword_100417EF0;
  qword_100417EF0 = (uint64_t)v1;

}

void sub_1001D206C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1003FBE70;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1001D207C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1003FBE70;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

void sub_1001D20AC(void *a1, NSObject *a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, a7, 0x26u);
}

void sub_1001D20C4(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x26u);
}

BOOL sub_1001D20CC(NSObject *a1)
{
  return os_log_type_enabled(a1, OS_LOG_TYPE_INFO);
}

uint64_t sub_1001D20D8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1001D2134()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1001D2190()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

int *sub_1001D21A4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int *a3@<X8>)
{
  return sub_10009E30C(a3, a1, a2 | 0x200u, 0, 0x1A4u);
}

void sub_1001D21C0(id a1)
{
  qword_100417EF0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Client");
}

BOOL sub_1001D2224()
{
  return os_log_type_enabled((os_log_t)qword_100417EF0, OS_LOG_TYPE_FAULT);
}

BOOL sub_1001D2238()
{
  uint64_t v0;

  return os_log_type_enabled(*(os_log_t *)(v0 + 3824), OS_LOG_TYPE_INFO);
}

BOOL sub_1001D2248()
{
  uint64_t v0;

  return os_signpost_enabled(*(os_log_t *)(v0 + 3824));
}

void sub_1001D2254(void *a1, int a2, int a3, int a4, const char *a5, const char *a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  NSObject *v13;

  _os_signpost_emit_with_name_impl(a1, v13, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, &buf, 0x2Cu);
}

void sub_1001D2274(void *a1, int a2, int a3, int a4, const char *a5, const char *a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  NSObject *v13;

  _os_signpost_emit_with_name_impl(a1, v13, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, &buf, 0x26u);
}

void sub_1001D2294(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  NSObject *v13;

  _os_log_impl(a1, v13, OS_LOG_TYPE_FAULT, a4, &buf, 0x26u);
}

void sub_1001D22A8(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  NSObject *v13;

  _os_log_impl(a1, v13, OS_LOG_TYPE_FAULT, a4, &buf, 0x2Cu);
}

void sub_1001D22BC(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  NSObject *v13;

  _os_log_impl(a1, v13, OS_LOG_TYPE_INFO, a4, &buf, 0x26u);
}

void sub_1001D22D0(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  NSObject *v13;

  _os_log_impl(a1, v13, OS_LOG_TYPE_INFO, a4, &buf, 0x2Cu);
}

void sub_1001D23AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D2424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D24D0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  v2 = (void *)qword_100417F00;
  qword_100417F00 = (uint64_t)v1;

}

void sub_1001D2500()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

void sub_1001D2540(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D2624(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D26AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D279C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001D27B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id sub_1001D2824(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, "encodeBytes:length:forKey:", a2, 156, CFSTR("locationInfo"));
}

id sub_1001D2838(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, "encodeBytes:length:forKey:", a2, 560, CFSTR("locationPrivateInfo"));
}

void sub_1001D284C(void *a1@<X0>, char *a2@<X8>)
{
  void *v4;
  id v5;
  size_t v6;
  size_t v7;
  unint64_t v8;

  v4 = objc_autoreleasePoolPush();
  v8 = 0;
  v5 = objc_msgSend(objc_retainAutorelease(a1), "decodeBytesForKey:returnedLength:", CFSTR("pipelineDiagnosticReport"), &v8);
  if (v8 >= 0x88)
    v6 = 136;
  else
    v6 = v8;
  if (v8 <= 0x88)
    v7 = 136 - v8;
  else
    v7 = 0;
  memcpy(a2, v5, v6);
  bzero(&a2[v6], v7);
  objc_autoreleasePoolPop(v4);
}

id sub_1001D28DC(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, "encodeBytes:length:forKey:", a2, 136, CFSTR("pipelineDiagnosticReport"));
}

id sub_1001D28F0(void *a1, const char *a2)
{
  return objc_msgSend(a1, "encodeInteger:forKey:", *(_QWORD *)a2, CFSTR("gpsExpiryInfo"));
}

void sub_1001D292C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D29AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D2A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001D2A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D2A90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D2B7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_1001D2BB8()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1001D2C14()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1001D2C70(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  v2 = (void *)qword_100417EE0;
  qword_100417EE0 = (uint64_t)v1;

}

void sub_1001D2CA0()
{
  objc_autoreleasePoolPop(objc_autoreleasePoolPush());
}

uint64_t sub_1001D2CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = off_1003FBF40;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  v6 = *(_BYTE **)(a2 + 16);
  v5 = *(_BYTE **)(a2 + 24);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_1000D02C0();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 32) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 24) = v9;
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

void sub_1001D2D58(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 24) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001D2D74(uint64_t a1)
{
  return *(_DWORD *)(a1 + 40) > 0;
}

uint64_t sub_1001D2D84(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

double sub_1001D2D8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;

  v1 = *(_QWORD *)(a1 + 48);
  if (!v1)
    return 1.0 * 1.0;
  v2 = 0;
  v3 = 1.0;
  do
  {
    v3 = v3 * *(double *)(*(_QWORD *)(a1 + 16) + 8 * v2);
    v2 += v1--;
  }
  while (v1);
  return v3 * v3;
}

double sub_1001D2DC8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  _QWORD *v7;
  void *__p[2];
  uint64_t v9;
  void *v10;
  void *v11[2];
  char v12;
  std::string v13;

  v4 = *(_QWORD *)(a1 + 48);
  if (v4 != sub_100270038(a2))
  {
    v7 = sub_1000D5048(&v13, "");
    sub_100174738((uint64_t)v7, 0, 0);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v13.__r_.__value_.__l.__data_);
    sub_1000F2AE4((uint64_t)v11);
  }
  if (strcmp(*(const char **)(a1 + 8), "L"))
  {
    sub_1000D5048(v11, "");
    sub_10015C750("Vector64F::lapackLSolve assumes UPLO=L for now, so that's all we support at the moment.", &v13);
    sub_100174738((uint64_t)v11, (uint64_t)&v13, 1);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v13.__r_.__value_.__l.__data_);
    if (v12 < 0)
      operator delete(v11[0]);
    sub_1000F2AE4((uint64_t)&v10);
  }
  *(_OWORD *)__p = *(_OWORD *)a2;
  v9 = a2[2];
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_100270090((__CLPK_doublereal **)(a1 + 16), (uint64_t)__p, (uint64_t)&v13);
  v5 = (void *)*a2;
  if (*a2)
  {
    a2[1] = v5;
    operator delete(v5);
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  *(std::string *)a2 = v13;
  memset(&v13, 0, sizeof(v13));
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return sub_100270054((uint64_t)a2);
}

void sub_1001D2F78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D2FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  int64_t v9;
  char *v10;
  char *v11;
  __CLPK_integer v13;
  __CLPK_integer __info;
  __CLPK_integer __ldb;
  __CLPK_integer __nrhs;

  v6 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  __ldb = v6;
  __nrhs = v5;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  v8 = *(const void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v9 = v7 - *(_QWORD *)a2;
  if (v7 == *(_QWORD *)a2)
  {
    v10 = 0;
  }
  else
  {
    if (v9 < 0)
      sub_1000D02C0();
    v10 = (char *)operator new(v7 - *(_QWORD *)a2);
    *a3 = v10;
    v11 = &v10[8 * (v9 >> 3)];
    a3[2] = v11;
    memcpy(v10, v8, v9);
    a3[1] = v11;
  }
  a3[3] = v6;
  a3[4] = v5;
  v13 = *(_QWORD *)(a1 + 48);
  __info = 0;
  return dpptrs_(*(char **)(a1 + 8), &v13, &__nrhs, *(__CLPK_doublereal **)(a1 + 16), (__CLPK_doublereal *)v10, &__ldb, &__info);
}

void sub_1001D30A4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v2;

  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1001D30D4(_QWORD *a1)
{
  void *v2;

  *a1 = off_1003FBF40;
  v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1001D3110(_QWORD *a1)
{
  void *v2;

  *a1 = off_1003FBF40;
  v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  operator delete();
}

uint64_t sub_1001D315C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
}

uint64_t sub_1001D3168()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1001D31C4()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

int32x2_t sub_1001D3220(uint64_t a1, uint64_t a2)
{
  float64x2_t *v3;

  v3 = (float64x2_t *)(a1 + 24);
  sub_100304530((double *)(a1 + 24), a2);
  return sub_10015C8F0((int32x2_t *)a1, v3);
}

uint64_t sub_1001D3250(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
        goto LABEL_6;
      return a1;
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v5)
    return a1;
LABEL_6:
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (v7)
    return a1;
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

uint64_t sub_1001D32FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];
  uint64_t v15;
  std::__shared_weak_count *v16;

  *(_OWORD *)a1 = xmmword_100391E90;
  *(_OWORD *)(a1 + 16) = unk_100391EA0;
  *(_OWORD *)(a1 + 32) = xmmword_100391EB0;
  *(_OWORD *)(a1 + 48) = unk_100391EC0;
  sub_1001D3454(a2, a1 + 64);
  v4 = a2[1];
  v15 = *a2;
  v16 = (std::__shared_weak_count *)v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_100071CB4(a1 + 160, (uint64_t)&v15, 0.0, 0.0);
  v7 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v14[0] = sub_10006F854((double *)*a2);
  v14[1] = v10;
  v14[2] = v11;
  v14[3] = v12;
  sub_10030330C((uint64_t)v14, (int32x2_t *)(a1 + 192), *(_QWORD *)(*a2 + 64));
  *(_OWORD *)(a1 + 200) = xmmword_100391E90;
  *(_OWORD *)(a1 + 216) = unk_100391EA0;
  *(_OWORD *)(a1 + 232) = xmmword_100391EB0;
  *(_OWORD *)(a1 + 248) = unk_100391EC0;
  return a1;
}

void sub_1001D341C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_1000E095C(v2 - 64);
  sub_1001D36D8(v1);
  _Unwind_Resume(a1);
}

void sub_1001D3438(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_1000E095C(v2);
  sub_1001D36D8(v1);
  _Unwind_Resume(a1);
}

void sub_1001D3454(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  int v32;
  int v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  int v36;
  int v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  int v40;
  int v41;
  uint64_t v42;
  std::__shared_weak_count *v43;

  v4 = (std::__shared_weak_count *)a1[1];
  v42 = *a1;
  v43 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v40 = -1;
  v41 = -1;
  sub_100071CC8(a2, &v42, &v41, &v40);
  v7 = (std::__shared_weak_count *)a1[1];
  v38 = *a1;
  v39 = v7;
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v36 = -1;
  v37 = -1;
  sub_100071CC8(a2 + 24, &v38, &v37, &v36);
  v10 = (std::__shared_weak_count *)a1[1];
  v34 = *a1;
  v35 = v10;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v32 = -1;
  v33 = -1;
  sub_100071CC8(a2 + 48, &v34, &v33, &v32);
  v13 = (std::__shared_weak_count *)a1[1];
  v30 = *a1;
  v31 = v13;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  v28 = -1;
  v29 = -1;
  sub_100071CC8(a2 + 72, &v30, &v29, &v28);
  v16 = v31;
  if (v31)
  {
    v17 = (unint64_t *)&v31->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = v35;
  if (v35)
  {
    v20 = (unint64_t *)&v35->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v22 = v39;
  if (v39)
  {
    v23 = (unint64_t *)&v39->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v25 = v43;
  if (v43)
  {
    v26 = (unint64_t *)&v43->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
}

void sub_1001D3674(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  sub_1000E095C((uint64_t)va);
  sub_1000E095C((uint64_t)va1);
  sub_1000E095C((uint64_t)va2);
  sub_1000E095C(v4 - 48);
  do
  {
    v3 -= 24;
    sub_1000E095C(v3);
  }
  while (v3 != v2);
  _Unwind_Resume(a1);
}

void sub_1001D36C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1000E095C(v1 - 48);
  _Unwind_Resume(a1);
}

_QWORD *sub_1001D36D8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;

  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[7];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[7];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[4];
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      v11 = (std::__shared_weak_count *)a1[1];
      if (v11)
        goto LABEL_16;
      return a1;
    }
  }
  v11 = (std::__shared_weak_count *)a1[1];
  if (!v11)
    return a1;
LABEL_16:
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

BOOL sub_1001D3804(int *a1, uint64_t a2, double a3, double a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  _BOOL8 v11;
  double v12;
  double v13;
  double v14;
  int v15;
  int v16;
  double v17;
  double v18;
  void *v21;
  void *v22[2];
  char v23;
  std::string __p;

  v4 = vcvtmd_s64_f64(a3);
  v5 = vcvtmd_s64_f64(a4);
  v7 = *a1;
  v6 = a1[1];
  v11 = v4 > -2 && v5 > -2 && v6 > v4 && v7 > v5;
  if (v11)
  {
    v12 = 0.0;
    v13 = 0.0;
    v14 = 0.0;
    if ((v4 & 0x80000000) == 0 && (v5 & 0x80000000) == 0)
    {
      v13 = (1.0 - vabdd_f64(a3, (double)v4)) * (1.0 - vabdd_f64(a4, (double)v5));
      v14 = v13 + 0.0;
    }
    *(double *)(a2 + 8) = v13;
    *(_DWORD *)a2 = v6 * v5 + v4;
    v15 = v4 + 1;
    if ((v5 & 0x80000000) == 0 && v15 < v6)
    {
      v12 = (1.0 - vabdd_f64(a3, (double)v15)) * (1.0 - vabdd_f64(a4, (double)v5));
      v14 = v14 + v12;
    }
    *(double *)(a2 + 24) = v12;
    *(_DWORD *)(a2 + 16) = v6 * v5 + v15;
    v16 = v5 + 1;
    v17 = 0.0;
    if (v4 < 0 || v16 >= v7)
    {
      v18 = 0.0;
    }
    else
    {
      v18 = (1.0 - vabdd_f64(a3, (double)v4)) * (1.0 - vabdd_f64(a4, (double)v16));
      v14 = v14 + v18;
    }
    *(double *)(a2 + 40) = v18;
    *(_DWORD *)(a2 + 32) = v16 * v6 + v4;
    if (v15 < v6 && v16 < v7)
    {
      v17 = (1.0 - vabdd_f64(a3, (double)v15)) * (1.0 - vabdd_f64(a4, (double)v16));
      v14 = v14 + v17;
    }
    *(double *)(a2 + 56) = v17;
    *(_DWORD *)(a2 + 48) = v16 * v6 + v15;
    if (v14 <= 0.0)
    {
      sub_1000D5048(v22, "");
      sub_1000F9D38("Why didn't we fail fast?", &__p);
      sub_100174738((uint64_t)v22, (uint64_t)&__p, 1);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (v23 < 0)
        operator delete(v22[0]);
      sub_1000F2AE4((uint64_t)&v21);
    }
    *(double *)(a2 + 8) = v13 / v14;
    *(double *)(a2 + 24) = v12 / v14;
    *(double *)(a2 + 40) = v18 / v14;
    *(double *)(a2 + 56) = v17 / v14;
  }
  return v11;
}

void sub_1001D3A48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1001D3A8C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;

  v2 = (std::__shared_weak_count *)a1[21];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[18];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[18];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[15];
  if (!v8)
    goto LABEL_15;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = (std::__shared_weak_count *)a1[12];
    if (!v11)
      goto LABEL_21;
  }
  else
  {
LABEL_15:
    v11 = (std::__shared_weak_count *)a1[12];
    if (!v11)
      goto LABEL_21;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[9];
  if (!v14)
    return a1;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (v16)
    return a1;
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  return a1;
}

unsigned int *sub_1001D3BEC(unsigned int *a1, double *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  double v9;
  double v10;
  uint64_t v12[2];

  v4 = (std::__shared_weak_count *)*((_QWORD *)a2 + 4);
  v12[0] = (uint64_t)a2[3];
  v12[1] = (uint64_t)v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_1001D32FC((uint64_t)a1, v12);
  if (v4)
  {
    v7 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v9 = a2[5];
  v10 = a2[6];
  *((double *)a1 + 22) = v9;
  *((double *)a1 + 23) = v10;
  if (sub_1001D3804((int *)a1 + 48, (uint64_t)a1, v9, v10))
  {
    if (*((double *)a1 + 1) > 0.0)
      sub_10015C8E0((uint64_t)(a1 + 16), (uint64_t)(a1 + 48), *a1);
    if (*((double *)a1 + 3) > 0.0)
      sub_10015C8E0((uint64_t)(a1 + 22), (uint64_t)(a1 + 48), a1[4]);
    if (*((double *)a1 + 5) > 0.0)
      sub_10015C8E0((uint64_t)(a1 + 28), (uint64_t)(a1 + 48), a1[8]);
    if (*((double *)a1 + 7) > 0.0)
      sub_10015C8E0((uint64_t)(a1 + 34), (uint64_t)(a1 + 48), a1[12]);
  }
  return a1;
}

void sub_1001D3D0C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_1001D3A8C(v1);
  _Unwind_Resume(a1);
}

void sub_1001D3D20(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_1001D3A8C(v1);
  _Unwind_Resume(a1);
}

void sub_1001D3D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000E095C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1001D3D48(unsigned int *a1, uint64_t a2)
{
  double result;

  sub_100304530((double *)a1 + 20, a2);
  if (!sub_1001D3804((int *)a1 + 48, (uint64_t)a1, *((double *)a1 + 22), *((double *)a1 + 23)))
    return result;
  if (*((double *)a1 + 1) <= 0.0)
  {
    if (*((double *)a1 + 3) <= 0.0)
      goto LABEL_4;
LABEL_8:
    sub_10015C8E0((uint64_t)(a1 + 22), (uint64_t)(a1 + 48), a1[4]);
    if (*((double *)a1 + 5) <= 0.0)
    {
LABEL_5:
      result = *((double *)a1 + 7);
      if (result <= 0.0)
        return result;
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_10015C8E0((uint64_t)(a1 + 16), (uint64_t)(a1 + 48), *a1);
  if (*((double *)a1 + 3) > 0.0)
    goto LABEL_8;
LABEL_4:
  if (*((double *)a1 + 5) <= 0.0)
    goto LABEL_5;
LABEL_9:
  sub_10015C8E0((uint64_t)(a1 + 28), (uint64_t)(a1 + 48), a1[8]);
  result = *((double *)a1 + 7);
  if (result > 0.0)
LABEL_6:
    sub_10015C8E0((uint64_t)(a1 + 34), (uint64_t)(a1 + 48), a1[12]);
  return result;
}

uint64_t sub_1001D3E20@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  int v6;
  double v7;
  double v8;
  double v9;
  int v10;
  double v11;
  int v12;
  double v13;
  double v14;
  double v15;
  uint64_t result;
  double v17;
  __int128 v19;
  __int128 v20;
  double v21;
  void *__p;
  void *v23[2];
  char v24;
  std::string v25;
  std::string v26;

  v6 = sub_10026C88C(a2, a1 + 64);
  *(_DWORD *)(a1 + 200) = v6;
  v7 = 0.0;
  v8 = 0.0;
  if (v6 != -1)
    v8 = *(double *)(a1 + 8);
  *(double *)(a1 + 208) = v8;
  v9 = v8 + 0.0;
  v10 = sub_10026C88C(a2, a1 + 88);
  *(_DWORD *)(a1 + 216) = v10;
  if (v10 != -1)
    v7 = *(double *)(a1 + 24);
  *(double *)(a1 + 224) = v7;
  v11 = v7 + v9;
  v12 = sub_10026C88C(a2, a1 + 112);
  *(_DWORD *)(a1 + 232) = v12;
  v13 = 0.0;
  v14 = 0.0;
  if (v12 != -1)
    v14 = *(double *)(a1 + 40);
  *(double *)(a1 + 240) = v14;
  v15 = v14 + v11;
  result = sub_10026C88C(a2, a1 + 136);
  *(_DWORD *)(a1 + 248) = result;
  if ((_DWORD)result != -1)
    v13 = *(double *)(a1 + 56);
  *(double *)(a1 + 256) = v13;
  v17 = v13 + v15;
  v21 = v13 + v15;
  if (v13 + v15 < 0.0 || v17 >= 1.00000001)
  {
    sub_1000D5048(v23, "");
    sub_1000F9D38("Unexpected totalWeight: ", &v25);
    sub_10016EE34(&v21, &v26);
    sub_100174738((uint64_t)v23, (uint64_t)&v25, 2);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v26.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_20:
        if ((v24 & 0x80000000) == 0)
          goto LABEL_21;
LABEL_24:
        operator delete(v23[0]);
LABEL_21:
        sub_1000F2AE4((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_20;
    }
    operator delete(v25.__r_.__value_.__l.__data_);
    if ((v24 & 0x80000000) == 0)
      goto LABEL_21;
    goto LABEL_24;
  }
  if (v17 > 0.0 && v17 < 1.0)
  {
    *(double *)(a1 + 208) = *(double *)(a1 + 208) / v17;
    *(double *)(a1 + 224) = *(double *)(a1 + 224) / v17;
    *(double *)(a1 + 240) = *(double *)(a1 + 240) / v17;
    *(double *)(a1 + 256) = *(double *)(a1 + 256) / v17;
  }
  v19 = *(_OWORD *)(a1 + 216);
  *a3 = *(_OWORD *)(a1 + 200);
  a3[1] = v19;
  v20 = *(_OWORD *)(a1 + 248);
  a3[2] = *(_OWORD *)(a1 + 232);
  a3[3] = v20;
  return result;
}

void sub_1001D4064(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D40C0()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1001D411C()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

void sub_1001D4178()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x50uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_100391FA0;
  strcpy(v1.__r_.__value_.__l.__data_, "LocalizerType not ported to generate ParticleGenerator initialization step");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF600;
  sub_10018D04C((uint64_t)v0);
  sub_1000EF6D4(&v2, (uint64_t)"auto newParticleGeneratorImpl(const LocalizerSpec &, const Params &, const Universal2d *)::(anonymous class)::operator()() const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/particle_generator.cpp", 34, (uint64_t)v0);
}

void sub_1001D42D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, std::runtime_error a20,std::runtime_error a21,_UNKNOWN **a22,uint64_t a23)
{
  std::runtime_error *v23;

  std::runtime_error::~runtime_error(v23);
  a22 = &off_1003EDD90;
  if (a23 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)a23 + 32))(a23))
    a23 = 0;
  std::runtime_error::~runtime_error(&a21);
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a20);
  if (a19 < 0)
    operator delete(a14);
  __cxa_free_exception(v23);
  _Unwind_Resume(a1);
}

void sub_1001D438C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  void *v19;

  if (a19 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v19);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1001D437CLL);
}

void sub_1001D43B0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1001D43C4()
{
  operator new();
}

void sub_1001D449C(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  if (a2)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 8))(a2);
  sub_100342A4C((uint64_t *)va);
  operator delete();
}

void sub_1001D44E4()
{
  operator new();
}

void sub_1001D45E4(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v1 = va_arg(va1, _QWORD);
  if (a1)
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  sub_100342A7C((uint64_t *)va, (uint64_t *)va1);
  operator delete();
}

void sub_1001D4630()
{
  operator new();
}

void sub_1001D4708(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  if (a2)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 8))(a2);
  sub_100342A4C((uint64_t *)va);
  operator delete();
}

void sub_1001D4750()
{
  operator new();
}

void sub_1001D4828(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  if (a2)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 8))(a2);
  sub_100342A4C((uint64_t *)va);
  operator delete();
}

void sub_1001D4874()
{
  operator new();
}

void sub_1001D4A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1001D4AD0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D4AA0(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_1001D4ABC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_1001D4AD0(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 16))(v2);
      v6 = v2 + 3;
      do
      {
        v7 = __ldaxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 24))(v2);
    }
  }
  return a1;
}

void sub_1001D4B50()
{
  operator new();
}

void sub_1001D4B98()
{
  operator delete();
}

void sub_1001D4BAC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::const_iterator v4;
  std::string *v5;
  __int128 v6;
  void **v7;
  std::string::size_type v8;
  std::string *v9;
  __int128 v10;
  void *__p[2];
  unsigned __int8 v12;
  std::string v13;
  std::string v14;
  std::string v15;
  std::string v16;

  sub_1000F020C((const char *)((unint64_t)"P13LocalizerType" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  else
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  std::string::insert(&v13, v4, 91);
  v14 = v13;
  memset(&v13, 0, sizeof(v13));
  v5 = std::string::append(&v14, "] = ");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_1001D4DEC((unsigned int *)(a1 + 8));
  if ((v12 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v12 & 0x80u) == 0)
    v8 = v12;
  else
    v8 = (std::string::size_type)__p[1];
  v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_13;
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_18;
}

void sub_1001D4D28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
LABEL_6:
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D4DEC(unsigned int *a1)
{
  void (__cdecl **v2)(std::ostringstream *__hidden);
  uint64_t v3;
  std::ios_base *v4;
  void (__cdecl **v6)(std::ostringstream *__hidden);
  _QWORD v7[8];
  void *__p[2];
  __int128 v9;
  int v10;
  void (__cdecl **v11)(std::ostringstream *__hidden);

  v6 = v2;
  *(_QWORD *)((char *)&v7[-1] + (_QWORD)*(v2 - 3)) = v3;
  v4 = (std::ios_base *)((char *)&v7[-1] + (_QWORD)*(v6 - 3));
  std::ios_base::init(v4, v7);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v7);
  *(_OWORD *)__p = 0u;
  v9 = 0u;
  v10 = 16;
  std::ostream::operator<<(&v6, *a1);
  std::stringbuf::str(v7);
  if (SBYTE7(v9) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(v7);
  return std::ios::~ios(&v11);
}

void sub_1001D4F24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  std::ostream::~ostream(va, v3 + 8);
  std::ios::~ios(v2);
  _Unwind_Resume(a1);
}

void sub_1001D4F44(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

void sub_1001D4F58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000F0484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D4F70()
{
  operator delete();
}

uint64_t sub_1001D4F84(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_1001D4F9C()
{
  return 0;
}

uint64_t sub_1001D4FA4()
{
  return 0;
}

uint64_t sub_1001D4FAC()
{
  return 0;
}

_QWORD *sub_1001D4FB4(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)*a1;
  if (*a1)
  {
    v3 = (_QWORD *)a1[1];
    v4 = (_QWORD *)*a1;
    if (v3 != v2)
    {
      do
      {
        v6 = *--v3;
        v5 = v6;
        *v3 = 0;
        if (v6)
          (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
      }
      while (v3 != v2);
      v4 = (_QWORD *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

_QWORD *sub_1001D5028(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v3 = a1[1] - *a1;
  v4 = v3 >> 3;
  v5 = (v3 >> 3) + 1;
  if (v5 >> 61)
    sub_1000D02C0();
  v7 = a1[2] - *a1;
  if (v7 >> 2 > v5)
    v5 = v7 >> 2;
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8)
    v8 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v8 = v5;
  if (v8)
  {
    if (v8 >> 61)
      sub_1000CDEB8();
    v9 = (char *)operator new(8 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[8 * v4];
  v11 = &v9[8 * v8];
  v12 = *a2;
  *a2 = 0;
  *(_QWORD *)v10 = v12;
  v13 = v10 + 8;
  v14 = (char *)*a1;
  v15 = (char *)a1[1];
  if (v15 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v13;
    a1[2] = v11;
    if (!v15)
      return v13;
    goto LABEL_26;
  }
  v16 = (unint64_t)&v15[-*a1 - 8];
  if (v16 < 0x78 || &v15[-(v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v10 && &v9[v3 - (v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v15)
    goto LABEL_34;
  v17 = (v16 >> 3) + 1;
  v18 = 8 * (v17 & 0x3FFFFFFFFFFFFFFCLL);
  v10 -= v18;
  v19 = &v15[-v18];
  v20 = v15 - 16;
  v21 = &v9[8 * v4 - 16];
  v22 = v17 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    v24 = *((_OWORD *)v20 - 1);
    v23 = *(_OWORD *)v20;
    *((_OWORD *)v20 - 1) = 0uLL;
    *(_OWORD *)v20 = 0uLL;
    *((_OWORD *)v21 - 1) = v24;
    *(_OWORD *)v21 = v23;
    v20 -= 32;
    v21 -= 32;
    v22 -= 4;
  }
  while (v22);
  v15 = v19;
  if (v17 != (v17 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_34:
    do
    {
      v25 = *((_QWORD *)v15 - 1);
      v15 -= 8;
      *(_QWORD *)v15 = 0;
      *((_QWORD *)v10 - 1) = v25;
      v10 -= 8;
    }
    while (v15 != v14);
  }
  v26 = (char *)*a1;
  v15 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v11;
  if (v15 != v26)
  {
    do
    {
      v28 = *((_QWORD *)v15 - 1);
      v15 -= 8;
      v27 = v28;
      *(_QWORD *)v15 = 0;
      if (v28)
        (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
    }
    while (v15 != v26);
    v15 = v26;
  }
  if (v15)
LABEL_26:
    operator delete(v15);
  return v13;
}

void sub_1001D51DC()
{
  operator new();
}

void sub_1001D53E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1001D4AD0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001D5408(void *a1)
{
  uint64_t v1;

  __cxa_begin_catch(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  __cxa_rethrow();
}

void sub_1001D5424(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_1001D5438(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  *a1 = 0;
  return result;
}

uint64_t sub_1001D5448()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  *v0 = 0;
  return result;
}

uint64_t sub_1001D5454()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1001D54B0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1001D550C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  float64x2_t *v9;
  float64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  float64x2_t v20;
  _BYTE v21[32];
  _BYTE v22[8];
  float64x2_t v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;

  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 56))(a3);
  *(_QWORD *)a4 = off_1003F9A68;
  *(_QWORD *)(a4 + 8) = 0;
  v9 = (float64x2_t *)(a4 + 8);
  *(_QWORD *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 24) &= 0xFCu;
  if (result)
  {
    if (!*(_BYTE *)(a1 + 40))
    {
      sub_1001A23D4((uint64_t)v21, result + 1624);
      sub_10006FC40(&v19);
      sub_100159B60((uint64_t)v22, (uint64_t)v21, &v19);
      v10 = v20.f64[0];
      if (*(_QWORD *)&v20.f64[0])
      {
        v11 = (unint64_t *)(*(_QWORD *)&v20.f64[0] + 8);
        do
          v12 = __ldaxr(v11);
        while (__stlxr(v12 - 1, v11));
        if (!v12)
        {
          (*(void (**)(float64_t))(**(_QWORD **)&v10 + 16))(COERCE_FLOAT64_T(*(_QWORD *)&v10));
          std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&v10);
        }
      }
      sub_1001D5840((unsigned __int8 *)(a1 + 40), (uint64_t)v22);
      v13 = v25;
      if (v25)
      {
        p_shared_owners = (unint64_t *)&v25->__shared_owners_;
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      v16 = v24;
      if (v24)
      {
        v17 = (unint64_t *)&v24->__shared_owners_;
        do
          v18 = __ldaxr(v17);
        while (__stlxr(v18 - 1, v17));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      nullsub_22(v22);
      nullsub_22(v21);
    }
    sub_1001D5758((_QWORD *)a1, a2, (uint64_t)v22);
    sub_1001D5758((_QWORD *)a1, a3, (uint64_t)&v19);
    *v9 = vsubq_f64(v23, v20);
    nullsub_23(&v19);
    return nullsub_23(v22);
  }
  else
  {
    v9->f64[0] = 0.0;
    *(_QWORD *)(a4 + 16) = 0;
  }
  return result;
}

void sub_1001D56D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  sub_10015A328((uint64_t)va1);
  nullsub_22((uint64_t *)va);
  nullsub_23(v5);
  _Unwind_Resume(a1);
}

void sub_1001D5714(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_23(v1);
  _Unwind_Resume(a1);
}

void sub_1001D5728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  nullsub_23(va);
  nullsub_23(v9);
  _Unwind_Resume(a1);
}

void sub_1001D5744(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_23(v1);
  _Unwind_Resume(a1);
}

void sub_1001D5758(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _BYTE v8[32];
  uint64_t v9[3];

  v9[0] = a2;
  v6 = sub_1001D5958(a1, v9);
  if (v6)
  {
    sub_1001A2040(a3, (uint64_t)(v6 + 3));
  }
  else
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    sub_1001A23D4((uint64_t)v8, v7 + 1624);
    sub_100159CBC((uint64_t)(a1 + 6), (uint64_t)v8, (uint64_t)v9);
    sub_100159E28((uint64_t)v9, a3);
    nullsub_22(v8);
    v9[0] = a2;
    sub_1001D5A6C((uint64_t)a1, v9, v9, a3);
  }
}

void sub_1001D5818(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_23(v1);
  _Unwind_Resume(a1);
}

void sub_1001D582C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_22(va);
  _Unwind_Resume(a1);
}

void sub_1001D5840(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;

  v5 = *a1;
  v4 = (uint64_t)(a1 + 8);
  v6 = (_QWORD *)(a2 + 32);
  if (!v5)
  {
    sub_1001A23D4(v4, a2);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 32);
    *v6 = 0;
    v6[1] = 0;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 56) = 0;
    *a1 = 1;
    return;
  }
  sub_100077D9C(v4, a2);
  v7 = *(_OWORD *)(a2 + 32);
  *v6 = 0;
  v6[1] = 0;
  v8 = (std::__shared_weak_count *)*((_QWORD *)a1 + 6);
  *(_OWORD *)(a1 + 40) = v7;
  if (!v8)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v15 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 56) = 0;
    v12 = (std::__shared_weak_count *)*((_QWORD *)a1 + 8);
    *(_OWORD *)(a1 + 56) = v15;
    if (!v12)
      return;
  }
  else
  {
LABEL_6:
    v11 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 56) = 0;
    v12 = (std::__shared_weak_count *)*((_QWORD *)a1 + 8);
    *(_OWORD *)(a1 + 56) = v11;
    if (!v12)
      return;
  }
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

_QWORD *sub_1001D5958(_QWORD *a1, uint64_t *a2)
{
  int8x8_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = HIDWORD(*a2);
  v5 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ v4);
  v6 = 0x9DDFEA08EB382D69
     * ((0x9DDFEA08EB382D69 * (v4 ^ (v5 >> 47) ^ v5)) ^ ((0x9DDFEA08EB382D69 * (v4 ^ (v5 >> 47) ^ v5)) >> 47));
  v7 = (uint8x8_t)vcnt_s8(v2);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    v8 = v6;
    if (v6 >= *(_QWORD *)&v2)
      v8 = v6 % *(_QWORD *)&v2;
  }
  else
  {
    v8 = v6 & (*(_QWORD *)&v2 - 1);
  }
  v9 = *(_QWORD **)(*a1 + 8 * v8);
  if (!v9)
    return 0;
  result = (_QWORD *)*v9;
  if (*v9)
  {
    if (v7.u32[0] < 2uLL)
    {
      v11 = *(_QWORD *)&v2 - 1;
      while (1)
      {
        v13 = result[1];
        if (v13 == v6)
        {
          if (result[2] == v3)
            return result;
        }
        else if ((v13 & v11) != v8)
        {
          return 0;
        }
        result = (_QWORD *)*result;
        if (!result)
          return result;
      }
    }
    do
    {
      v12 = result[1];
      if (v12 == v6)
      {
        if (result[2] == v3)
          return result;
      }
      else
      {
        if (v12 >= *(_QWORD *)&v2)
          v12 %= *(_QWORD *)&v2;
        if (v12 != v8)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *sub_1001D5A6C(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  _QWORD *v14;
  _QWORD *result;
  unint64_t v16;
  uint64_t v17;
  float v18;
  float v19;
  _QWORD *v20;
  _QWORD *v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t prime;
  int8x8_t v26;
  unint64_t v27;
  uint8x8_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;

  v8 = *a2;
  v9 = HIDWORD(*a2);
  v10 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ v9);
  v11 = 0x9DDFEA08EB382D69
      * ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) ^ ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) >> 47));
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      v4 = 0x9DDFEA08EB382D69
         * ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) ^ ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) >> 47));
      if (v11 >= v12)
        v4 = v11 % v12;
    }
    else
    {
      v4 = v11 & (v12 - 1);
    }
    v14 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      result = (_QWORD *)*v14;
      if (*v14)
      {
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            v17 = result[1];
            if (v17 == v11)
            {
              if (result[2] == v8)
                return result;
            }
            else if ((v17 & (v12 - 1)) != v4)
            {
              goto LABEL_23;
            }
            result = (_QWORD *)*result;
            if (!result)
              goto LABEL_23;
          }
        }
        do
        {
          v16 = result[1];
          if (v16 == v11)
          {
            if (result[2] == v8)
              return result;
          }
          else
          {
            if (v16 >= v12)
              v16 %= v12;
            if (v16 != v4)
              break;
          }
          result = (_QWORD *)*result;
        }
        while (result);
      }
    }
  }
LABEL_23:
  v32 = operator new(0x38uLL);
  *v32 = 0;
  v32[1] = v11;
  v32[2] = *a3;
  sub_1001A2040((uint64_t)(v32 + 3), a4);
  v18 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    v22 = 1;
    if (v12 >= 3)
      v22 = (v12 & (v12 - 1)) != 0;
    v23 = v22 | (2 * v12);
    v24 = vcvtps_u32_f32(v18 / v19);
    if (v23 <= v24)
      prime = v24;
    else
      prime = v23;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v26 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v26)
      goto LABEL_37;
    if (prime < *(_QWORD *)&v26)
    {
      v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v26 < 3uLL || (v28 = (uint8x8_t)vcnt_s8(v26), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        v27 = std::__next_prime(v27);
      }
      else
      {
        v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2)
          v27 = v29;
      }
      if (prime <= v27)
        prime = v27;
      if (prime < *(_QWORD *)&v26)
LABEL_37:
        sub_100005DD8(a1, prime);
    }
    v12 = *(_QWORD *)(a1 + 8);
    v30 = v12 - 1;
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
      {
        v4 = v11 % v12;
        v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v11 % v12));
        v21 = v32;
        if (v20)
          goto LABEL_26;
      }
      else
      {
        v4 = v11;
        v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v11);
        v21 = v32;
        if (v20)
          goto LABEL_26;
      }
    }
    else
    {
      v4 = v30 & v11;
      v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v30 & v11));
      v21 = v32;
      if (v20)
        goto LABEL_26;
    }
LABEL_50:
    *v21 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v32;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*v32)
    {
      v31 = *(_QWORD *)(*v32 + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v31 >= v12)
          v31 %= v12;
      }
      else
      {
        v31 &= v12 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v31) = v32;
    }
    goto LABEL_61;
  }
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  v21 = v32;
  if (!v20)
    goto LABEL_50;
LABEL_26:
  *v21 = *v20;
  *v20 = v32;
LABEL_61:
  result = v32;
  ++*(_QWORD *)(a1 + 24);
  return result;
}

void sub_1001D5DE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1001D5E10((char **)va);
  _Unwind_Resume(a1);
}

void sub_1001D5DFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1001D5E10((char **)va);
  _Unwind_Resume(a1);
}

char **sub_1001D5E10(char **a1)
{
  char *v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16))
      nullsub_23(v2 + 24);
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_1001D5E54()
{
  uint64_t result;

  if ((byte_100417F40 & 1) == 0)
  {
    byte_100417F40 = 1;
    sub_1000CD6A4(qword_100417F30);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F30, (void *)&_mh_execute_header);
  }
  return result;
}

uint64_t sub_1001D5EB0()
{
  uint64_t result;

  if ((byte_100417F58 & 1) == 0)
  {
    byte_100417F58 = 1;
    sub_1000CD9E0(qword_100417F48);
    return __cxa_atexit((void (*)(void *))sub_1000CD964, qword_100417F48, (void *)&_mh_execute_header);
  }
  return result;
}

_QWORD *sub_1001D5F0C(_QWORD *a1)
{
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;

  *a1 = off_1003FC070;
  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  v3 = (_QWORD *)a1[3];
  if (v3)
  {
    do
    {
      v4 = (_QWORD *)*v3;
      operator delete(v3);
      v3 = v4;
    }
    while (v4);
  }
  v5 = (void *)a1[1];
  a1[1] = 0;
  if (v5)
    operator delete(v5);
  return a1;
}

void sub_1001D5F70(_QWORD *a1)
{
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;

  *a1 = off_1003FC070;
  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  v3 = (_QWORD *)a1[3];
  if (v3)
  {
    do
    {
      v4 = (_QWORD *)*v3;
      operator delete(v3);
      v3 = v4;
    }
    while (v4);
  }
  v5 = (void *)a1[1];
  a1[1] = 0;
  if (v5)
    operator delete(v5);
  operator delete();
}

uint64_t *sub_1001D5FE4(uint64_t a1, int *a2, _QWORD *a3)
{
  int v6;
  _DWORD *v7;
  int v8;
  _QWORD *v9;
  uint64_t *result;
  _DWORD *v11;
  _DWORD *v12;
  double v13;
  int v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  __int128 v19;
  int v20;
  __int128 v21;
  int v22;
  int v23;
  __int128 v24;
  int v25;
  int v26;
  __int128 v27;
  int v28;
  _BYTE v29[64];

  v7 = a2 + 2;
  v6 = *a2;
  v8 = *a2 >> 31;
  if (v6 >> 31 == v6)
  {
    *(_QWORD *)&v27 = *(_QWORD *)v7;
    v8 = v6;
  }
  else
  {
    v27 = *(_OWORD *)v7;
    v28 = a2[6];
  }
  v26 = v8 ^ v6;
  sub_1001D73DC((uint64_t)v29, &v26, &v26);
  v9 = (_QWORD *)(a1 + 8);
  result = sub_1001D7B38(v9, (uint64_t)v29);
  if (result)
  {
    if (*((double *)result + 10) != 0.0)
    {
      v12 = (_DWORD *)*a3;
      v11 = (_DWORD *)a3[1];
      if (v12 != v11)
      {
        v13 = 0.0;
        do
        {
          while (1)
          {
            v14 = *a2;
            v15 = *a2 >> 31;
            if (v14 >> 31 == v14)
            {
              *(_QWORD *)&v24 = *(_QWORD *)v7;
              v15 = v14;
            }
            else
            {
              v24 = *(_OWORD *)v7;
              v25 = v7[4];
            }
            v23 = v15 ^ v14;
            v17 = v12 + 2;
            v16 = *v12;
            v18 = (int)*v12 >> 31;
            if (v16 >> 31 == v16)
            {
              *(_QWORD *)&v21 = *v17;
              v18 = v16;
            }
            else
            {
              v19 = *(_OWORD *)v17;
              v22 = v12[6];
              v21 = v19;
            }
            v20 = v16 ^ v18;
            sub_1001D73DC((uint64_t)v29, &v23, &v20);
            result = sub_1001D7B38(v9, (uint64_t)v29);
            if (!result)
              break;
            v13 = v13 + *((double *)result + 10);
            v12 += 52;
            if (v12 == v11)
              return result;
          }
          v13 = v13 + 0.0;
          v12 += 52;
        }
        while (v12 != v11);
      }
    }
  }
  return result;
}

void sub_1001D61DC(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  char *v36;
  int v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  int v55;
  int v56;
  uint64_t v57;
  _QWORD *v58;
  int v59;
  char *v60;
  int v61;
  __int128 v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  int v68;
  _QWORD **v69;
  int v70;
  int v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  int v76;
  unint64_t v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  _QWORD *v118;
  int v119;
  _QWORD *v120;
  int v121;
  __int128 v122;
  _QWORD *v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  _BYTE *v127;
  int v128;
  uint64_t v129;
  int v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  unint64_t v137;
  _QWORD **v138;
  _QWORD *v139;
  _QWORD **v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  char *v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  int v149;
  unint64_t v150;
  char *v151;
  double v152;
  int v153;
  int v154;
  BOOL v155;
  int v157;
  int v160;
  int v161;
  char *v162;
  __int128 v163;
  int v164;
  int v165;
  char *v166;
  __int128 v167;
  uint64_t *v168;
  _QWORD *v169;
  _QWORD *v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned __int8 v176;
  unsigned int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  uint64_t v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  _QWORD **v195;
  _QWORD *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  char *v200;
  int v201;
  __int128 v202;
  int v203;
  int v204;
  __int128 v205;
  int v206;
  __int128 v207;
  __int128 v208;
  uint64_t v209;
  int v210;

  v3 = *a1;
  v4 = (_QWORD *)a1[1];
  if ((_QWORD *)((char *)v4 - *a1) == (_QWORD *)16)
  {
    *a2 = *(_QWORD *)v3;
    v5 = *(_QWORD *)(v3 + 8);
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
    return;
  }
  v8 = operator new(0x60uLL);
  v8[1] = 0;
  v8[2] = 0;
  *v8 = off_1003FC0C0;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  *((_DWORD *)v8 + 16) = 1065353216;
  v8[10] = 0;
  v8[11] = 0;
  v8[9] = 0;
  a2[1] = (uint64_t)v8;
  v8[3] = off_1003FC070;
  v168 = a2;
  v169 = v4;
  *a2 = (uint64_t)(v8 + 3);
  v198 = 0;
  v199 = 0;
  v200 = 0;
  v196 = 0;
  v197 = 0;
  v195 = &v196;
  if ((_QWORD *)v3 == v4)
  {
    v137 = 0;
    v207 = 0uLL;
    v136 = &v196;
    *(_QWORD *)&v208 = 0;
    goto LABEL_197;
  }
  v177 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v178 = 0;
  v179 = 0;
  v181 = 0;
  v182 = 0;
  v180 = 0;
  v20 = (_QWORD *)v3;
  while (2)
  {
    v170 = v20;
    v21 = (_QWORD *)*v20;
    v22 = (uint64_t *)v21[3];
    v184 = v3;
    v186 = v14;
    v190 = v9;
    v192 = v13;
    v194 = v12;
    v174 = v16;
    v175 = v15;
    v172 = v18;
    v173 = v17;
    v171 = v19;
    v188 = v11;
    if (v22)
    {
      while (1)
      {
        while (1)
        {
          v26 = *((_DWORD *)v22 + 4);
          v27 = v26;
          if (v26 >> 31 != v26)
          {
            v209 = v22[4];
            v210 = *((_DWORD *)v22 + 10);
            v27 = v26 >> 31;
          }
          v28 = v11;
          v29 = v10;
          v30 = *((_DWORD *)v22 + 12);
          v31 = v30;
          if (v30 >> 31 != v30)
          {
            *(_QWORD *)&v207 = v22[8];
            DWORD2(v207) = *((_DWORD *)v22 + 18);
            v31 = v30 >> 31;
          }
          v32 = v22[3];
          v33 = v27 ^ v26;
          v34 = v22[7];
          v35 = v31 ^ v30;
          v208 = *((_OWORD *)v22 + 5);
          v36 = v199;
          if (v199 >= v200)
            break;
          if (v33 >> 31 == v33)
          {
            *((_QWORD *)v199 + 1) = v32;
            *(_DWORD *)v36 = 0;
            v37 = v35 >> 31;
            if (v35 >> 31 == v35)
              goto LABEL_34;
          }
          else
          {
            v50 = v209;
            *((_QWORD *)v199 + 1) = v32;
            *((_QWORD *)v36 + 2) = v50;
            *((_DWORD *)v36 + 6) = v210;
            *(_DWORD *)v36 = (v33 >> 31) ^ v33;
            v37 = v35 >> 31;
            if (v35 >> 31 == v35)
            {
LABEL_34:
              *((_QWORD *)v36 + 5) = v34;
              v37 = v31 ^ v30;
              goto LABEL_13;
            }
          }
          v25 = v207;
          *((_QWORD *)v36 + 5) = v34;
          *((_QWORD *)v36 + 6) = v25;
          *((_DWORD *)v36 + 14) = DWORD2(v207);
LABEL_13:
          v13 = v192;
          v11 = v28;
          *((_DWORD *)v36 + 8) = v37 ^ v35;
          *((_OWORD *)v36 + 4) = v208;
          v10 = v29;
          v199 = v36 + 80;
          v22 = (uint64_t *)*v22;
          v3 = v184;
          v14 = v186;
          if (!v22)
            goto LABEL_51;
        }
        v38 = v198;
        v39 = 0xCCCCCCCCCCCCCCCDLL * ((v199 - v198) >> 4);
        v40 = v39 + 1;
        if (v39 + 1 > 0x333333333333333)
          sub_1000D02C0();
        v41 = v29;
        if (0x999999999999999ALL * ((v200 - v198) >> 4) > v40)
          v40 = 0x999999999999999ALL * ((v200 - v198) >> 4);
        if (0xCCCCCCCCCCCCCCCDLL * ((v200 - v198) >> 4) >= 0x199999999999999)
          v42 = 0x333333333333333;
        else
          v42 = v40;
        if (v42)
        {
          if (v42 > 0x333333333333333)
            sub_1000CDEB8();
          v43 = v34;
          v44 = v42;
          v45 = operator new(80 * v42);
          v34 = v43;
          v42 = v44;
          v46 = (uint64_t)&v45[5 * v39];
          v47 = v33 >> 31;
          if (v33 >> 31 == v33)
          {
LABEL_31:
            *(_QWORD *)(v46 + 8) = v32;
            *(_DWORD *)v46 = 0;
            v48 = v35 >> 31;
            if (v35 >> 31 == v35)
              goto LABEL_37;
            goto LABEL_32;
          }
        }
        else
        {
          v45 = 0;
          v46 = 16 * ((v199 - v198) >> 4);
          v47 = v33 >> 31;
          if (v33 >> 31 == v33)
            goto LABEL_31;
        }
        v51 = v209;
        *(_QWORD *)(v46 + 8) = v32;
        *(_QWORD *)(v46 + 16) = v51;
        *(_DWORD *)(v46 + 24) = v210;
        *(_DWORD *)v46 = v47 ^ v33;
        v48 = v35 >> 31;
        if (v35 >> 31 == v35)
        {
LABEL_37:
          *(_QWORD *)(v46 + 40) = v34;
          v48 = v35;
          goto LABEL_38;
        }
LABEL_32:
        v49 = v207;
        *(_QWORD *)(v46 + 40) = v34;
        *(_QWORD *)(v46 + 48) = v49;
        *(_DWORD *)(v46 + 56) = DWORD2(v207);
LABEL_38:
        v13 = v192;
        *(_DWORD *)(v46 + 32) = v48 ^ v35;
        v45[5 * v39 + 4] = v208;
        v52 = v46;
        v10 = v41;
        v11 = v188;
        if (v36 != v38)
        {
          v53 = 0;
          do
          {
            v58 = (_QWORD *)(v46 + v53 - 72);
            v59 = *(_DWORD *)&v36[v53 - 80];
            v60 = &v36[v53 - 72];
            if (v59 == v59 >> 31)
            {
              *v58 = *(_QWORD *)v60;
              v61 = v59;
            }
            else
            {
              v62 = *(_OWORD *)v60;
              *(_DWORD *)(v46 + v53 - 56) = *(_DWORD *)&v36[v53 - 56];
              *(_OWORD *)v58 = v62;
              v61 = *(_DWORD *)&v36[v53 - 80];
              v59 = v61 >> 31;
            }
            *(_DWORD *)(v46 + v53 - 80) = v61 ^ v59;
            v63 = (_QWORD *)(v46 + v53 - 40);
            v56 = *(_DWORD *)&v36[v53 - 48];
            v64 = &v36[v53 - 40];
            if (v56 == v56 >> 31)
            {
              *v63 = *(_QWORD *)v64;
              v55 = v56;
            }
            else
            {
              v54 = *(_OWORD *)v64;
              *(_DWORD *)(v46 + v53 - 24) = *(_DWORD *)&v36[v53 - 24];
              *(_OWORD *)v63 = v54;
              v55 = *(_DWORD *)&v36[v53 - 48];
              v56 = v55 >> 31;
            }
            v57 = v46 + v53;
            *(_DWORD *)(v57 - 48) = v55 ^ v56;
            *(_OWORD *)(v57 - 16) = *(_OWORD *)&v36[v53 - 16];
            v53 -= 80;
          }
          while (&v36[v53] != v38);
          v36 = v198;
          v52 = v46 + v53;
        }
        v65 = v46 + 80;
        v198 = (char *)v52;
        v200 = (char *)&v45[5 * v42];
        if (v36)
          operator delete(v36);
        v9 = v190;
        v16 = v174;
        v15 = v175;
        v18 = v172;
        v17 = v173;
        v19 = v171;
        v199 = (char *)v65;
        v22 = (uint64_t *)*v22;
        v3 = v184;
        v14 = v186;
        if (!v22)
        {
LABEL_51:
          v23 = *(_QWORD *)(*v170 + 48);
          v183 = *(_QWORD *)(*v170 + 56);
          v24 = v9;
          if (v23 == v183)
            goto LABEL_8;
          goto LABEL_52;
        }
      }
    }
    v23 = v21[6];
    v183 = v21[7];
    v24 = v9;
    if (v23 == v183)
      goto LABEL_8;
LABEL_52:
    v187 = v197;
    do
    {
      v66 = v196;
      if (!v196)
      {
        v191 = v24;
        v193 = v13;
        v189 = v11;
        v185 = v10;
        v110 = (_QWORD *)v3;
        v111 = v19;
        v112 = v18;
        v113 = v17;
        v114 = v15;
        v115 = v14;
        v116 = &v196;
        v69 = &v196;
        goto LABEL_150;
      }
      v67 = *(_DWORD *)v23;
      v68 = *(int *)v23 >> 31;
      do
      {
        while (1)
        {
          v69 = (_QWORD **)v66;
          v70 = *((_DWORD *)v66 + 8);
          v71 = v70 >> 31;
          v72 = v70;
          if (v70 >> 31 != v70)
          {
            v24 = *((unsigned __int8 *)v69 + 48);
            v10 = *((unsigned __int8 *)v69 + 49);
            v11 = *((unsigned __int8 *)v69 + 50);
            v194 = *((unsigned __int8 *)v69 + 51);
            v13 = *((unsigned __int8 *)v69 + 52);
            v14 = *((unsigned __int8 *)v69 + 53);
            v15 = *((unsigned __int8 *)v69 + 54);
            v16 = *((unsigned __int8 *)v69 + 55);
            v17 = *((unsigned __int8 *)v69 + 56);
            v18 = *((unsigned __int8 *)v69 + 57);
            v19 = *((unsigned __int8 *)v69 + 58);
            v72 = v70 >> 31;
            v3 = *((unsigned __int8 *)v69 + 59);
          }
          v73 = (unint64_t)v69[5];
          v74 = HIBYTE(v73);
          v75 = v72 ^ v70;
          v76 = v75 >> 31;
          if (v68 == v67)
            break;
          if (v76 != v75)
          {
            v91 = *(unsigned __int8 *)(v23 + 8);
            if (v91 < v73)
              goto LABEL_55;
            if (v91 <= v73)
            {
              v92 = *(unsigned __int8 *)(v23 + 9);
              if (v92 < BYTE1(v73))
                goto LABEL_55;
              if (v92 <= BYTE1(v73))
              {
                v93 = *(unsigned __int8 *)(v23 + 10);
                if (v93 < BYTE2(v73))
                  goto LABEL_55;
                if (v93 <= BYTE2(v73))
                {
                  v94 = *(unsigned __int8 *)(v23 + 11);
                  if (v94 < BYTE3(v73))
                    goto LABEL_55;
                  if (v94 <= BYTE3(v73))
                  {
                    v95 = *(unsigned __int8 *)(v23 + 12);
                    if (v95 < BYTE4(v73))
                      goto LABEL_55;
                    if (v95 <= BYTE4(v73))
                    {
                      v96 = *(unsigned __int8 *)(v23 + 13);
                      if (v96 < BYTE5(v73))
                        goto LABEL_55;
                      if (v96 <= BYTE5(v73))
                      {
                        v97 = *(unsigned __int8 *)(v23 + 14);
                        if (v97 < BYTE6(v73))
                          goto LABEL_55;
                        if (v97 <= BYTE6(v73))
                        {
                          v98 = *(unsigned __int8 *)(v23 + 15);
                          if (v98 < v74)
                            goto LABEL_55;
                          if (v98 <= v74)
                          {
                            v99 = *(unsigned __int8 *)(v23 + 16);
                            if (v99 < v24)
                              goto LABEL_55;
                            if (v24 >= v99)
                            {
                              v100 = *(unsigned __int8 *)(v23 + 17);
                              if (v100 < v10)
                                goto LABEL_55;
                              if (v10 >= v100)
                              {
                                v101 = *(unsigned __int8 *)(v23 + 18);
                                if (v101 < v11)
                                  goto LABEL_55;
                                if (v11 >= v101)
                                {
                                  v102 = *(unsigned __int8 *)(v23 + 19);
                                  if (v102 < v194)
                                    goto LABEL_55;
                                  if (v194 >= v102)
                                  {
                                    v103 = *(unsigned __int8 *)(v23 + 20);
                                    if (v103 < v13)
                                      goto LABEL_55;
                                    if (v13 >= v103)
                                    {
                                      v104 = *(unsigned __int8 *)(v23 + 21);
                                      if (v104 < v14)
                                        goto LABEL_55;
                                      if (v14 >= v104)
                                      {
                                        v105 = *(unsigned __int8 *)(v23 + 22);
                                        if (v105 < v15)
                                          goto LABEL_55;
                                        if (v15 >= v105)
                                        {
                                          v106 = *(unsigned __int8 *)(v23 + 23);
                                          if (v106 < v16)
                                            goto LABEL_55;
                                          if (v16 >= v106)
                                          {
                                            v107 = *(unsigned __int8 *)(v23 + 24);
                                            if (v107 < v17)
                                              goto LABEL_55;
                                            if (v17 >= v107)
                                            {
                                              v108 = *(unsigned __int8 *)(v23 + 25);
                                              if (v108 < v18)
                                                goto LABEL_55;
                                              if (v18 >= v108)
                                              {
                                                v109 = *(unsigned __int8 *)(v23 + 26);
                                                if (v109 < v19
                                                  || v19 >= v109
                                                  && *(unsigned __int8 *)(v23 + 27) < v3)
                                                {
                                                  goto LABEL_55;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          LODWORD(v182) = *(unsigned __int8 *)(v23 + 17);
          HIDWORD(v182) = *(unsigned __int8 *)(v23 + 16);
          LODWORD(v181) = *(unsigned __int8 *)(v23 + 19);
          HIDWORD(v181) = *(unsigned __int8 *)(v23 + 18);
          LODWORD(v180) = *(unsigned __int8 *)(v23 + 21);
          HIDWORD(v180) = *(unsigned __int8 *)(v23 + 20);
          LODWORD(v179) = *(unsigned __int8 *)(v23 + 23);
          HIDWORD(v179) = *(unsigned __int8 *)(v23 + 22);
          LODWORD(v178) = *(unsigned __int8 *)(v23 + 25);
          HIDWORD(v178) = *(unsigned __int8 *)(v23 + 24);
          v176 = *(_BYTE *)(v23 + 27);
          v177 = *(unsigned __int8 *)(v23 + 26);
          v77 = *(_QWORD *)(v23 + 8);
          v78 = v68 ^ v67;
          v79 = (v68 ^ v67) >> 31;
          if (v71 == v70)
          {
LABEL_144:
            if (v79 == v78 && v73 >= v77)
              goto LABEL_178;
            goto LABEL_146;
          }
LABEL_62:
          if (v79 == v78)
            goto LABEL_178;
          if (v73 >= v77)
          {
            if (v73 > v77)
              goto LABEL_178;
            if (BYTE1(v73) >= BYTE1(v77))
            {
              if (BYTE1(v73) > BYTE1(v77))
                goto LABEL_178;
              if (BYTE2(v73) >= BYTE2(v77))
              {
                if (BYTE2(v73) > BYTE2(v77))
                  goto LABEL_178;
                if (BYTE3(v73) >= BYTE3(v77))
                {
                  if (BYTE3(v73) > BYTE3(v77))
                    goto LABEL_178;
                  if (BYTE4(v73) >= BYTE4(v77))
                  {
                    if (BYTE4(v73) > BYTE4(v77))
                      goto LABEL_178;
                    if (BYTE5(v73) >= BYTE5(v77))
                    {
                      if (BYTE5(v73) > BYTE5(v77))
                        goto LABEL_178;
                      if (BYTE6(v73) >= BYTE6(v77))
                      {
                        if (BYTE6(v73) > BYTE6(v77))
                          goto LABEL_178;
                        if (v74 >= HIBYTE(v77))
                        {
                          if (v74 > HIBYTE(v77))
                            goto LABEL_178;
                          v80 = *((unsigned __int8 *)v69 + 48);
                          if (v80 >= HIDWORD(v182))
                          {
                            if (HIDWORD(v182) < v80)
                              goto LABEL_178;
                            v81 = *((unsigned __int8 *)v69 + 49);
                            if (v81 >= v182)
                            {
                              if (v182 < v81)
                                goto LABEL_178;
                              v82 = *((unsigned __int8 *)v69 + 50);
                              if (v82 >= HIDWORD(v181))
                              {
                                if (HIDWORD(v181) < v82)
                                  goto LABEL_178;
                                v83 = *((unsigned __int8 *)v69 + 51);
                                if (v83 >= v181)
                                {
                                  if (v181 < v83)
                                    goto LABEL_178;
                                  v84 = *((unsigned __int8 *)v69 + 52);
                                  if (v84 >= HIDWORD(v180))
                                  {
                                    if (HIDWORD(v180) < v84)
                                      goto LABEL_178;
                                    v85 = *((unsigned __int8 *)v69 + 53);
                                    if (v85 >= v180)
                                    {
                                      if (v180 < v85)
                                        goto LABEL_178;
                                      v86 = *((unsigned __int8 *)v69 + 54);
                                      if (v86 >= HIDWORD(v179))
                                      {
                                        if (HIDWORD(v179) < v86)
                                          goto LABEL_178;
                                        v87 = *((unsigned __int8 *)v69 + 55);
                                        if (v87 >= v179)
                                        {
                                          if (v179 < v87)
                                            goto LABEL_178;
                                          v88 = *((unsigned __int8 *)v69 + 56);
                                          if (v88 >= HIDWORD(v178))
                                          {
                                            if (HIDWORD(v178) < v88)
                                              goto LABEL_178;
                                            v89 = *((unsigned __int8 *)v69 + 57);
                                            if (v89 >= v178)
                                            {
                                              if (v178 < v89)
                                                goto LABEL_178;
                                              v90 = *((unsigned __int8 *)v69 + 58);
                                              if (v90 >= v177
                                                && (v177 < v90 || *((unsigned __int8 *)v69 + 59) >= v176))
                                              {
                                                goto LABEL_178;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
LABEL_146:
          v66 = v69[1];
          if (!v66)
          {
            v191 = v24;
            v193 = v13;
            v189 = v11;
            v185 = v10;
            v110 = (_QWORD *)v3;
            v111 = v19;
            v112 = v18;
            v113 = v17;
            v114 = v15;
            v115 = v14;
            v116 = v69 + 1;
            goto LABEL_150;
          }
        }
        if (v76 == v75 && *(_QWORD *)(v23 + 8) >= v73)
        {
          v77 = *(_QWORD *)(v23 + 8);
          v78 = 0;
          v79 = 0;
          if (v71 == v70)
            goto LABEL_144;
          goto LABEL_62;
        }
LABEL_55:
        v66 = *v69;
      }
      while (*v69);
      v191 = v24;
      v193 = v13;
      v189 = v11;
      v185 = v10;
      v110 = (_QWORD *)v3;
      v111 = v19;
      v112 = v18;
      v113 = v17;
      v114 = v15;
      v115 = v14;
      v116 = v69;
LABEL_150:
      v117 = operator new(0x40uLL);
      v118 = v117 + 5;
      v120 = (_QWORD *)(v23 + 8);
      v119 = *(_DWORD *)v23;
      v121 = *(int *)v23 >> 31;
      if (v119 >> 31 == v119)
      {
        *v118 = *v120;
        v121 = v119;
      }
      else
      {
        v122 = *(_OWORD *)v120;
        *((_DWORD *)v117 + 14) = *(_DWORD *)(v23 + 24);
        *(_OWORD *)v118 = v122;
      }
      *((_DWORD *)v117 + 8) = v121 ^ v119;
      *v117 = 0;
      v117[1] = 0;
      v117[2] = v69;
      *v116 = v117;
      if (*v195)
      {
        v195 = (_QWORD **)*v195;
        v117 = (_QWORD *)*v116;
      }
      v123 = v196;
      v155 = v117 == v196;
      *((_BYTE *)v117 + 24) = v117 == v196;
      v14 = v115;
      v15 = v114;
      v17 = v113;
      v18 = v112;
      v19 = v111;
      v3 = (unint64_t)v110;
      v10 = v185;
      v11 = v189;
      v24 = v191;
      v13 = v193;
      if (!v155)
      {
        do
        {
          v124 = v117[2];
          if (*(_BYTE *)(v124 + 24))
            break;
          v125 = *(_QWORD **)(v124 + 16);
          v126 = *v125;
          if (*v125 == v124)
          {
            v129 = v125[1];
            if (!v129 || (v130 = *(unsigned __int8 *)(v129 + 24), v127 = (_BYTE *)(v129 + 24), v130))
            {
              if (*(_QWORD **)v124 == v117)
              {
                *(_BYTE *)(v124 + 24) = 1;
                *((_BYTE *)v125 + 24) = 0;
                v133 = *(_QWORD *)(v124 + 8);
                *v125 = v133;
                if (v133)
                  goto LABEL_170;
              }
              else
              {
                v131 = *(uint64_t **)(v124 + 8);
                v132 = *v131;
                *(_QWORD *)(v124 + 8) = *v131;
                if (v132)
                {
                  *(_QWORD *)(v132 + 16) = v124;
                  v125 = *(_QWORD **)(v124 + 16);
                }
                v131[2] = (uint64_t)v125;
                *(_QWORD *)(*(_QWORD *)(v124 + 16) + 8 * (**(_QWORD **)(v124 + 16) != v124)) = v131;
                *v131 = v124;
                *(_QWORD *)(v124 + 16) = v131;
                v125 = (_QWORD *)v131[2];
                v124 = *v125;
                *((_BYTE *)v131 + 24) = 1;
                *((_BYTE *)v125 + 24) = 0;
                v133 = *(_QWORD *)(v124 + 8);
                *v125 = v133;
                if (v133)
LABEL_170:
                  *(_QWORD *)(v133 + 16) = v125;
              }
              *(_QWORD *)(v124 + 16) = v125[2];
              *(_QWORD *)(v125[2] + 8 * (*(_QWORD *)v125[2] != (_QWORD)v125)) = v124;
              *(_QWORD *)(v124 + 8) = v125;
LABEL_176:
              v125[2] = v124;
              break;
            }
          }
          else if (!v126 || (v128 = *(unsigned __int8 *)(v126 + 24), v127 = (_BYTE *)(v126 + 24), v128))
          {
            if (*(_QWORD **)v124 == v117)
            {
              v135 = v117[1];
              *(_QWORD *)v124 = v135;
              if (v135)
              {
                *(_QWORD *)(v135 + 16) = v124;
                v125 = *(_QWORD **)(v124 + 16);
              }
              v117[2] = v125;
              *(_QWORD *)(*(_QWORD *)(v124 + 16) + 8 * (**(_QWORD **)(v124 + 16) != v124)) = v117;
              v117[1] = v124;
              *(_QWORD *)(v124 + 16) = v117;
              v125 = (_QWORD *)v117[2];
              *((_BYTE *)v117 + 24) = 1;
              *((_BYTE *)v125 + 24) = 0;
              v124 = v125[1];
              v134 = *(_QWORD **)v124;
              v125[1] = *(_QWORD *)v124;
              if (v134)
LABEL_174:
                v134[2] = v125;
            }
            else
            {
              *(_BYTE *)(v124 + 24) = 1;
              *((_BYTE *)v125 + 24) = 0;
              v124 = v125[1];
              v134 = *(_QWORD **)v124;
              v125[1] = *(_QWORD *)v124;
              if (v134)
                goto LABEL_174;
            }
            *(_QWORD *)(v124 + 16) = v125[2];
            *(_QWORD *)(v125[2] + 8 * (*(_QWORD *)v125[2] != (_QWORD)v125)) = v124;
            *(_QWORD *)v124 = v125;
            goto LABEL_176;
          }
          *(_BYTE *)(v124 + 24) = 1;
          v117 = v125;
          *((_BYTE *)v125 + 24) = v125 == v123;
          *v127 = 1;
        }
        while (v125 != v123);
      }
      v197 = ++v187;
LABEL_178:
      v23 += 32;
    }
    while (v23 != v183);
LABEL_8:
    v9 = v24;
    v20 = v170 + 2;
    v12 = v194;
    if (v170 + 2 != v169)
      continue;
    break;
  }
  v136 = v195;
  v207 = 0uLL;
  *(_QWORD *)&v208 = 0;
  if (v195 == &v196)
  {
    v137 = 0;
  }
  else
  {
    v137 = 0;
    v138 = v195;
    do
    {
      v139 = v138[1];
      if (v139)
      {
        do
        {
          v140 = (_QWORD **)v139;
          v139 = (_QWORD *)*v139;
        }
        while (v139);
      }
      else
      {
        do
        {
          v140 = (_QWORD **)v138[2];
          v155 = *v140 == v138;
          v138 = v140;
        }
        while (!v155);
      }
      ++v137;
      v138 = v140;
    }
    while (v140 != &v196);
  }
LABEL_197:
  sub_1001D7FCC(&v207, v136, &v196, v137);
  v141 = *v168;
  v143 = *v168 + 48;
  v142 = *(void **)v143;
  if (*(_QWORD *)v143)
  {
    *(_QWORD *)(v141 + 56) = v142;
    operator delete(v142);
    *(_QWORD *)v143 = 0;
    *(_QWORD *)(v143 + 8) = 0;
    *(_QWORD *)(v143 + 16) = 0;
  }
  v144 = v198;
  v145 = (unint64_t)v199;
  v146 = (v199 - v198) / 80;
  v147 = 126 - 2 * __clz(v146);
  v155 = v199 == v198;
  *(_OWORD *)(v141 + 48) = v207;
  *(_QWORD *)(v141 + 64) = v208;
  if (v155)
    v148 = 0;
  else
    v148 = v147;
  sub_1001D80E4((unint64_t)v144, v145, v148, 1);
  if ((char *)v145 != v144)
  {
    v149 = 0;
    v150 = v146 - 1;
    if (v146 <= 1)
      v146 = 1;
    v151 = v144 + 120;
    v152 = 0.0;
    while (1)
    {
      v153 = *((_DWORD *)v151 - 12);
      v152 = v152 + (double)v153 * *((double *)v151 - 7);
      v149 += v153;
      DWORD2(v207) = v149;
      if (!v150)
        goto LABEL_231;
      v154 = *((_DWORD *)v151 - 30);
      if ((*((_DWORD *)v151 - 10) ^ (*((int *)v151 - 10) >> 31)) != ((v154 >> 31) ^ v154))
        goto LABEL_231;
      if (v154 >> 31 == v154)
      {
        if (*((_QWORD *)v151 - 4) != *((_QWORD *)v151 - 14))
          goto LABEL_231;
      }
      else
      {
        v155 = *((_QWORD *)v151 - 4) == *((_QWORD *)v151 - 14) && *((_QWORD *)v151 - 3) == *((_QWORD *)v151 - 13);
        if (!v155 || *((_DWORD *)v151 - 4) != (unint64_t)*((unsigned int *)v151 - 24))
          goto LABEL_231;
      }
      v157 = *((_DWORD *)v151 - 22);
      if ((*((_DWORD *)v151 - 2) ^ (*((int *)v151 - 2) >> 31)) != ((v157 >> 31) ^ v157))
        goto LABEL_231;
      if (v157 >> 31 == v157)
      {
        if (*(_QWORD *)v151 == *((_QWORD *)v151 - 10))
          goto LABEL_206;
LABEL_231:
        if (v149)
        {
          *(double *)&v207 = v152 / (double)v149;
          v160 = *((_DWORD *)v151 - 30);
          v161 = v160 >> 31;
          v162 = v151 - 112;
          if (v160 >> 31 == v160)
          {
            *(_QWORD *)&v202 = *(_QWORD *)v162;
            v161 = v160;
          }
          else
          {
            v163 = *(_OWORD *)v162;
            v203 = *((_DWORD *)v151 - 24);
            v202 = v163;
          }
          v201 = v160 ^ v161;
          v164 = *((_DWORD *)v151 - 22);
          v165 = v164 >> 31;
          v166 = v151 - 80;
          if (v164 >> 31 == v164)
          {
            *(_QWORD *)&v205 = *(_QWORD *)v166;
            v165 = v164;
          }
          else
          {
            v167 = *(_OWORD *)v166;
            v206 = *((_DWORD *)v151 - 16);
            v205 = v167;
          }
          v204 = v164 ^ v165;
          sub_1001D71E8(v141, &v201, &v207);
        }
        v149 = 0;
        *(_QWORD *)&v207 = 0;
        DWORD2(v207) = 0;
        v152 = 0.0;
        v151 += 80;
        --v150;
        if (!--v146)
        {
LABEL_240:
          sub_10004AAA0((uint64_t)&v195, v196);
          goto LABEL_242;
        }
      }
      else
      {
        if (*(_QWORD *)v151 != *((_QWORD *)v151 - 10)
          || *((_QWORD *)v151 + 1) != *((_QWORD *)v151 - 9)
          || *((_DWORD *)v151 + 4) != (unint64_t)*((unsigned int *)v151 - 16))
        {
          goto LABEL_231;
        }
LABEL_206:
        v151 += 80;
        --v150;
        if (!--v146)
          goto LABEL_240;
      }
    }
  }
  sub_10004AAA0((uint64_t)&v195, v196);
  if (v144)
LABEL_242:
    operator delete(v144);
}

void sub_1001D71A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,_QWORD *a30,uint64_t a31,void *__p,uint64_t a33)
{
  sub_10004AAA0((uint64_t)&a29, a30);
  if (__p)
  {
    a33 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_1000E095C(a10);
  _Unwind_Resume(a1);
}

_QWORD *sub_1001D71E8(uint64_t a1, _DWORD *a2, _OWORD *a3)
{
  return sub_1001E0110(a1 + 8, (uint64_t)a2, a2, a3);
}

void sub_1001D736C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D73DC(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  __int128 *v4;
  int v5;
  _QWORD *v6;
  int v7;
  __int128 v8;
  int v9;
  _QWORD *v10;
  int v11;
  _QWORD *v12;
  int v13;
  __int128 v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  __int128 v25;
  int v26;
  uint64_t v27;
  int v28;

  v4 = (__int128 *)(a1 + 8);
  v6 = a2 + 2;
  v5 = *a2;
  if (v5 == v5 >> 31)
  {
    *(_QWORD *)v4 = *v6;
    v7 = v5;
  }
  else
  {
    v8 = *(_OWORD *)v6;
    *(_DWORD *)(a1 + 24) = a2[6];
    *v4 = v8;
    v7 = *a2;
    v5 = (int)*a2 >> 31;
  }
  v9 = v7 ^ v5;
  *(_DWORD *)a1 = v9;
  v10 = (_QWORD *)(a1 + 40);
  v12 = a3 + 2;
  v11 = *a3;
  if (v11 == v11 >> 31)
  {
    *v10 = *v12;
    v13 = v11;
  }
  else
  {
    v14 = *(_OWORD *)v12;
    *(_DWORD *)(a1 + 56) = a3[6];
    *(_OWORD *)v10 = v14;
    v13 = *a3;
    v11 = (int)*a3 >> 31;
  }
  v15 = v13 ^ v11;
  *(_DWORD *)(a1 + 32) = v15;
  v16 = v9 >> 31;
  if (v9 >> 31 == v9)
  {
    *(_QWORD *)&v25 = *(_QWORD *)v4;
    v17 = 0;
    v18 = 0;
    if (v15 != v15 >> 31)
      goto LABEL_9;
  }
  else
  {
    v25 = *v4;
    v26 = *(_DWORD *)(a1 + 24);
    v17 = v16 ^ v9;
    v18 = (v16 ^ v9) >> 31;
    if (v15 != v15 >> 31)
    {
LABEL_9:
      if (v18 == v17 || !sub_1001D7688((unsigned __int8 *)(a1 + 40), (unsigned __int8 *)&v25))
        return a1;
      v9 = *(_DWORD *)a1;
      v16 = *(int *)a1 >> 31;
      goto LABEL_15;
    }
  }
  if (v18 == v17 && *v10 >= (unint64_t)v25)
    return a1;
LABEL_15:
  v19 = *(_QWORD *)v4;
  if (v16 == v9)
  {
    v20 = *(_DWORD *)(a1 + 32);
    if (v9 == v20)
    {
      v21 = 0;
      *(_QWORD *)v4 = *v10;
      v22 = 0;
      if (v9)
        goto LABEL_28;
      goto LABEL_25;
    }
    v21 = 0;
  }
  else
  {
    v27 = *(_QWORD *)(a1 + 16);
    v28 = *(_DWORD *)(a1 + 24);
    v21 = v16 ^ v9;
    v20 = *(_DWORD *)(a1 + 32);
    if (v9 == v20)
    {
      *v4 = *(_OWORD *)v10;
      *((_DWORD *)v4 + 4) = *(_DWORD *)(a1 + 56);
      v22 = v21 >> 31;
      if (v9 != v21)
      {
LABEL_28:
        *v10 = v19;
        if (v22 != v21)
        {
          *(_QWORD *)(a1 + 48) = v27;
          *(_DWORD *)(a1 + 56) = v28;
          *(_DWORD *)(a1 + 32) = v22 ^ v21;
        }
        else
        {
          *(_DWORD *)(a1 + 32) = 0;
        }
        return a1;
      }
      goto LABEL_25;
    }
  }
  v9 = v20;
  v23 = v20 ^ (v20 >> 31);
  if (v23)
  {
    *v4 = *(_OWORD *)v10;
    *((_DWORD *)v4 + 4) = *(_DWORD *)(a1 + 56);
    *(_DWORD *)a1 = v23;
    v22 = v21 >> 31;
    if (v9 != v21)
      goto LABEL_28;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a1 + 40);
    *(_DWORD *)a1 = 0;
    v22 = v21 >> 31;
    if (v9 != v21)
      goto LABEL_28;
  }
LABEL_25:
  *v10 = v19;
  if (v22 != v9)
  {
    *(_QWORD *)(a1 + 48) = v27;
    *(_DWORD *)(a1 + 56) = v28;
  }
  return a1;
}

BOOL sub_1001D7688(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;

  v2 = *a1;
  v3 = *a2;
  if (v2 < v3)
    return 1;
  if (v3 < v2)
    return 0;
  v5 = a1[1];
  v6 = a2[1];
  if (v5 < v6)
    return 1;
  if (v6 < v5)
    return 0;
  v7 = a1[2];
  v8 = a2[2];
  if (v7 < v8)
    return 1;
  if (v8 < v7)
    return 0;
  v9 = a1[3];
  v10 = a2[3];
  if (v9 < v10)
    return 1;
  if (v10 < v9)
    return 0;
  v11 = a1[4];
  v12 = a2[4];
  if (v11 < v12)
    return 1;
  if (v12 < v11)
    return 0;
  v13 = a1[5];
  v14 = a2[5];
  if (v13 < v14)
    return 1;
  if (v14 < v13)
    return 0;
  v15 = a1[6];
  v16 = a2[6];
  if (v15 < v16)
    return 1;
  if (v16 < v15)
    return 0;
  v17 = a1[7];
  v18 = a2[7];
  if (v17 < v18)
    return 1;
  if (v18 < v17)
    return 0;
  v19 = a1[8];
  v20 = a2[8];
  if (v19 < v20)
    return 1;
  if (v20 < v19)
    return 0;
  v21 = a1[9];
  v22 = a2[9];
  if (v21 < v22)
    return 1;
  if (v22 < v21)
    return 0;
  v23 = a1[10];
  v24 = a2[10];
  if (v23 < v24)
    return 1;
  if (v24 < v23)
    return 0;
  v25 = a1[11];
  v26 = a2[11];
  if (v25 < v26)
    return 1;
  if (v26 < v25)
    return 0;
  v27 = a1[12];
  v28 = a2[12];
  if (v27 < v28)
    return 1;
  if (v28 < v27)
    return 0;
  v29 = a1[13];
  v30 = a2[13];
  if (v29 < v30)
    return 1;
  if (v30 < v29)
    return 0;
  v31 = a1[14];
  v32 = a2[14];
  if (v31 < v32)
    return 1;
  if (v32 < v31)
    return 0;
  v33 = a1[15];
  v34 = a2[15];
  if (v33 < v34)
    return 1;
  if (v34 < v33)
    return 0;
  v35 = a1[16];
  v36 = a2[16];
  if (v35 < v36)
    return 1;
  if (v36 < v35)
    return 0;
  v37 = a1[17];
  v38 = a2[17];
  if (v37 < v38)
    return 1;
  if (v38 < v37)
    return 0;
  v39 = a1[18];
  v40 = a2[18];
  if (v39 < v40)
    return 1;
  if (v40 >= v39)
    return a1[19] < a2[19];
  return 0;
}

void sub_1001D7994(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1003FC0C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1001D79A4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1003FC0C0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1001D79D4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1001D79E4()
{
  _BYTE v0[24];
  std::string v1;
  std::runtime_error v2;

  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_100391FB0;
  strcpy(v1.__r_.__value_.__l.__data_, "unsupported conversion for beacon mac address ");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_1003EF830;
  sub_10018D04C((uint64_t)v0);
  sub_1000F2F7C(&v2, (uint64_t)"uint64_t RawRadioAddressVisitor::Uint64::operator()(const RawBeaconAddress &) const", (uint64_t)"../../../common/sensors/mac_address_util.h", 131, (uint64_t)v0);
}

void sub_1001D7A98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p)
    operator delete(__p);
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1001D7B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1001D7AF0);
}

void sub_1001D7B24(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1001D7B38(_QWORD *a1, uint64_t a2)
{
  unint64_t *v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint8x8_t v7;
  uint64_t v8;
  uint64_t v9;
  int8x8_t v10;
  uint64_t *result;
  uint64_t **v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  int v22;
  uint64_t v25;
  int v26;
  int v29;
  char v32;
  char *v33;

  v33 = &v32;
  v3 = (unint64_t *)(a2 + 8);
  if (*(_DWORD *)a2 != *(int *)a2 >> 31)
    sub_1001D79E4();
  v4 = *v3;
  v33 = &v32;
  v5 = (uint64_t *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32) != *(int *)(a2 + 32) >> 31)
    sub_1001D79E4();
  v10 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v10)
    return 0;
  v9 = *v5;
  v6 = (v9 ^ v4 ^ ((v9 ^ v4) >> 32)) + 31;
  v7 = (uint8x8_t)vcnt_s8(v10);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    v8 = (v9 ^ v4 ^ ((v9 ^ v4) >> 32)) + 31;
    if (v6 >= *(_QWORD *)&v10)
      v8 = v6 % *(_QWORD *)&v10;
  }
  else
  {
    v8 = (*(_QWORD *)&v10 - 1) & v6;
  }
  v12 = *(uint64_t ***)(*a1 + 8 * v8);
  if (!v12)
    return 0;
  result = *v12;
  if (*v12)
  {
    v13 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
    v14 = *(_QWORD *)(a2 + 8);
    v15 = *(_DWORD *)(a2 + 32) ^ (*(int *)(a2 + 32) >> 31);
    v16 = *(_QWORD *)(a2 + 40);
    if (v7.u32[0] < 2uLL)
    {
      v17 = *(_QWORD *)&v10 - 1;
      while (1)
      {
        v25 = result[1];
        if (v6 != v25)
        {
          if ((v25 & v17) != v8)
            return 0;
          goto LABEL_46;
        }
        v26 = *((_DWORD *)result + 4);
        if (v13 == ((v26 >> 31) ^ v26))
        {
          if (v26 >> 31 == v26)
          {
            if (v14 != result[3])
              goto LABEL_46;
          }
          else if (*v3 != result[3]
                 || *(_QWORD *)(a2 + 16) != result[4]
                 || *(_DWORD *)(a2 + 24) != (unint64_t)*((unsigned int *)result + 10))
          {
            goto LABEL_46;
          }
          v29 = *((_DWORD *)result + 12);
          if (v15 == ((v29 >> 31) ^ v29))
          {
            if (v29 >> 31 == v29)
            {
              if (v16 == result[7])
                return result;
            }
            else if (*v5 == result[7]
                   && *(_QWORD *)(a2 + 48) == result[8]
                   && *(_DWORD *)(a2 + 56) == (unint64_t)*((unsigned int *)result + 18))
            {
              return result;
            }
          }
        }
LABEL_46:
        result = (uint64_t *)*result;
        if (!result)
          return result;
      }
    }
    do
    {
      v18 = result[1];
      if (v6 == v18)
      {
        v19 = *((_DWORD *)result + 4);
        if (v13 == ((v19 >> 31) ^ v19))
        {
          if (v19 >> 31 == v19)
          {
            if (v14 != result[3])
              goto LABEL_16;
          }
          else if (*v3 != result[3]
                 || *(_QWORD *)(a2 + 16) != result[4]
                 || *(_DWORD *)(a2 + 24) != (unint64_t)*((unsigned int *)result + 10))
          {
            goto LABEL_16;
          }
          v22 = *((_DWORD *)result + 12);
          if (v15 == ((v22 >> 31) ^ v22))
          {
            if (v22 >> 31 == v22)
            {
              if (v16 == result[7])
                return result;
            }
            else if (*v5 == result[7]
                   && *(_QWORD *)(a2 + 48) == result[8]
                   && *(_DWORD *)(a2 + 56) == (unint64_t)*((unsigned int *)result + 18))
            {
              return result;
            }
          }
        }
      }
      else
      {
        if (v18 >= *(_QWORD *)&v10)
          v18 %= *(_QWORD *)&v10;
        if (v18 != v8)
          return 0;
      }
LABEL_16:
      result = (uint64_t *)*result;
    }
    while (result);
  }
  return result;
}

_DWORD *sub_1001D7E30(void **a1, int *a2)
{
  char *v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  _DWORD *v14;
  int v15;
  int v16;
  char *v17;
  _DWORD *v18;
  char *v19;
  __int128 v20;
  int v21;
  int v22;
  int *v23;
  int v24;
  int *v25;
  _QWORD *v26;

  v4 = (char *)*a1;
  v3 = (char *)a1[1];
  v5 = (v3 - (_BYTE *)*a1) >> 5;
  v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 59)
    sub_1000D02C0();
  v8 = (_BYTE *)a1[2] - v4;
  if (v8 >> 4 > v6)
    v6 = v8 >> 4;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0)
    v9 = 0x7FFFFFFFFFFFFFFLL;
  else
    v9 = v6;
  if (!v9)
  {
    v10 = 0;
    v11 = (int *)(32 * v5);
    v12 = 32 * v5 + 8;
    v14 = a2 + 2;
    v13 = *a2;
    v16 = *a2 >> 31;
    if (v16 == *a2)
      goto LABEL_10;
LABEL_20:
    *(_OWORD *)v12 = *(_OWORD *)v14;
    *(_DWORD *)(v12 + 16) = v14[4];
    v17 = &v10[32 * v9];
    *v11 = v16 ^ v13;
    v18 = v11 + 8;
    if (v3 != v4)
      goto LABEL_11;
LABEL_21:
    *a1 = v11;
    a1[1] = v18;
    a1[2] = v17;
    if (!v3)
      return v18;
    goto LABEL_17;
  }
  if (v9 >> 59)
    sub_1000CDEB8();
  v10 = (char *)operator new(32 * v9);
  v11 = (int *)&v10[32 * v5];
  v12 = (uint64_t)(v11 + 2);
  v15 = *a2;
  v14 = a2 + 2;
  v13 = v15;
  v16 = v15 >> 31;
  if (v15 >> 31 != v15)
    goto LABEL_20;
LABEL_10:
  *(_QWORD *)v12 = *(_QWORD *)v14;
  v17 = &v10[32 * v9];
  *v11 = 0;
  v18 = v11 + 8;
  if (v3 == v4)
    goto LABEL_21;
LABEL_11:
  v19 = v3;
  do
  {
    v24 = *((_DWORD *)v19 - 8);
    v19 -= 32;
    v22 = v24;
    v25 = v11 - 6;
    v26 = v19 + 8;
    if (v24 == v24 >> 31)
    {
      *(_QWORD *)v25 = *v26;
      v21 = v22;
    }
    else
    {
      v20 = *(_OWORD *)v26;
      *(v11 - 2) = *((_DWORD *)v19 + 6);
      *(_OWORD *)v25 = v20;
      v21 = *((_DWORD *)v3 - 8);
      v22 = v21 >> 31;
    }
    v23 = v11 - 8;
    *(v11 - 8) = v21 ^ v22;
    v3 = v19;
    v11 -= 8;
  }
  while (v19 != v4);
  v3 = (char *)*a1;
  *a1 = v23;
  a1[1] = v18;
  a1[2] = v17;
  if (v3)
LABEL_17:
    operator delete(v3);
  return v18;
}

_DWORD *sub_1001D7FCC(_DWORD *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  _QWORD *v5;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  __int128 v11;
  _QWORD *v12;
  BOOL v13;

  if (a4)
  {
    v5 = result;
    if (a4 >> 59)
      sub_1000D02C0();
    result = operator new(32 * a4);
    *v5 = result;
    v5[1] = result;
    v5[2] = &result[8 * a4];
    if (a2 == a3)
    {
LABEL_4:
      v5[1] = result;
      return result;
    }
    while (1)
    {
      v8 = result + 2;
      v9 = a2 + 5;
      if (*((_DWORD *)a2 + 8) == *((int *)a2 + 8) >> 31)
      {
        *v8 = *v9;
        *result = 0;
        v10 = (_QWORD *)a2[1];
        if (v10)
          goto LABEL_11;
      }
      else
      {
        v11 = *(_OWORD *)v9;
        result[6] = *((_DWORD *)a2 + 14);
        *(_OWORD *)v8 = v11;
        *result = *((_DWORD *)a2 + 8) ^ (*((int *)a2 + 8) >> 31);
        v10 = (_QWORD *)a2[1];
        if (v10)
        {
          do
          {
LABEL_11:
            v12 = v10;
            v10 = (_QWORD *)*v10;
          }
          while (v10);
          goto LABEL_6;
        }
      }
      do
      {
        v12 = (_QWORD *)a2[2];
        v13 = *v12 == (_QWORD)a2;
        a2 = v12;
      }
      while (!v13);
LABEL_6:
      result += 8;
      a2 = v12;
      if (v12 == a3)
        goto LABEL_4;
    }
  }
  return result;
}

void sub_1001D80C8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001D80E4(unint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  int v22;
  int v23;
  unint64_t v24;
  int v25;
  int v26;
  int v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  int v31;
  int *v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  BOOL v38;
  int v39;
  int v40;
  __int128 v41;
  BOOL v42;
  int v43;
  int v44;
  unsigned __int8 *v45;
  int v46;
  BOOL v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unint64_t *v73;
  unint64_t v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  unsigned int v144;
  uint64_t v145;
  unsigned int v146;
  uint64_t v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  uint64_t v156;
  int v157;
  int v158;
  int v159;
  uint64_t v160;
  unint64_t v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  BOOL v167;
  unsigned int v168;
  BOOL v169;
  unsigned int v170;
  BOOL v171;
  unsigned int v172;
  BOOL v173;
  unsigned int v174;
  BOOL v175;
  unsigned int v176;
  BOOL v177;
  unsigned int v178;
  BOOL v179;
  unsigned int v180;
  BOOL v181;
  unsigned int v182;
  BOOL v183;
  unsigned int v184;
  BOOL v185;
  unsigned int v186;
  BOOL v187;
  unsigned int v188;
  BOOL v189;
  unsigned int v190;
  BOOL v191;
  unsigned int v192;
  BOOL v193;
  unsigned int v194;
  BOOL v195;
  unsigned int v196;
  BOOL v197;
  unsigned int v198;
  BOOL v199;
  unsigned int v200;
  BOOL v201;
  unsigned int v202;
  BOOL v203;
  uint64_t v204;
  uint64_t v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  uint64_t v237;
  _QWORD *v238;
  int v239;
  int v240;
  int v241;
  __int128 *v242;
  __int128 v243;
  int v244;
  __int128 *v245;
  __int128 v246;
  _QWORD *v247;
  __int128 v248;
  __int128 v249;
  uint64_t v250;
  _QWORD *v251;
  int v252;
  int v253;
  int v254;
  unint64_t v255;
  __int128 v256;
  int v257;
  _OWORD *v258;
  __int128 v259;
  _QWORD *v260;
  __int128 v261;
  __int128 v262;
  uint64_t v263;
  int v264;
  _QWORD *v265;
  int v266;
  __int128 v267;
  int v268;
  int v269;
  _QWORD *v270;
  __int128 v271;
  unint64_t v272;
  _BOOL4 v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  uint64_t v291;
  uint64_t v292;
  unsigned int v293;
  int v294;
  unint64_t v295;
  unsigned int v296;
  unint64_t v297;
  unint64_t v298;
  unsigned int v299;
  uint64_t v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  uint64_t v310;
  int v311;
  int v312;
  int v313;
  unsigned int v314;
  unint64_t v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unint64_t v319;
  int v320;
  int v321;
  BOOL v322;
  uint64_t v323;
  BOOL v324;
  unsigned int v325;
  BOOL v326;
  BOOL v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  int v340;
  unint64_t v341;
  int v342;
  int v343;
  unint64_t v344;
  uint64_t v345;
  unint64_t v346;
  int v347;
  int v348;
  unint64_t v349;
  BOOL v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unint64_t v370;
  unsigned int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  _BOOL4 v386;
  int v387;
  int v388;
  unint64_t v389;
  int v390;
  int v391;
  unint64_t v392;
  int *v393;
  _QWORD *v394;
  int v395;
  __int128 *v396;
  __int128 v397;
  __int128 v398;
  int v399;
  int v400;
  _QWORD *v401;
  int v402;
  __int128 *v403;
  __int128 v404;
  __int128 v405;
  uint64_t v406;
  int v407;
  _QWORD *v408;
  int v409;
  _OWORD *v410;
  __int128 v411;
  __int128 v412;
  int v413;
  _QWORD *v414;
  int v415;
  unint64_t v416;
  __int128 v417;
  __int128 v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  int64_t v426;
  int64_t v427;
  uint64_t v428;
  __int128 v429;
  uint64_t v430;
  int64_t v431;
  uint64_t v432;
  uint64_t v433;
  BOOL v434;
  int v435;
  _QWORD *v436;
  int v437;
  __int128 v438;
  int v439;
  int v440;
  _QWORD *v441;
  __int128 v442;
  uint64_t v443;
  _QWORD *v444;
  _QWORD *v445;
  int v446;
  int v447;
  int v448;
  __int128 *v449;
  __int128 v450;
  int v451;
  __int128 *v452;
  __int128 v453;
  _QWORD *v454;
  _QWORD *v455;
  __int128 v456;
  __int128 v457;
  uint64_t v458;
  uint64_t v459;
  _QWORD *v460;
  int v461;
  int v462;
  int v463;
  __int128 v464;
  int v465;
  __int128 v466;
  _QWORD *v467;
  __int128 v468;
  __int128 v469;
  uint64_t v470;
  int *v471;
  int v472;
  int v473;
  _QWORD *v474;
  int v475;
  int v476;
  _QWORD *v477;
  uint64_t i;
  _DWORD *v479;
  int v480;
  _QWORD *v481;
  _QWORD *v482;
  _DWORD *v483;
  int v484;
  int v485;
  int v486;
  _OWORD *v487;
  _OWORD *v488;
  int v489;
  _OWORD *v490;
  _OWORD *v491;
  _DWORD *v492;
  _DWORD *v493;
  uint64_t v494;
  int v495;
  int v496;
  _QWORD *v497;
  __int128 v498;
  int v499;
  int v500;
  int v501;
  int v502;
  uint64_t v503;
  int v504;
  int v505;
  int v506;
  _QWORD *v507;
  int v508;
  int v509;
  __int128 v510;
  int v511;
  int v512;
  _OWORD *v513;
  int v514;
  int v515;
  int v516;
  __int128 v517;
  int v518;
  __int128 v519;
  _QWORD *v520;
  __int128 v521;
  int64_t v522;
  unint64_t v523;
  uint64_t v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  uint64_t v531;
  __int128 v532;
  uint64_t v533;
  _QWORD *v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  int v538;
  int v539;
  int v540;
  unint64_t v541;
  unint64_t v542;
  int v543;
  int v544;
  int v545;
  unint64_t v546;
  int v547;
  int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  unsigned int v552;
  unsigned int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  int v561;
  int v562;
  _QWORD *v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  unsigned int v574;
  unsigned int v575;
  unsigned int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  unsigned int v581;
  unsigned int v582;
  __int128 v583;
  int v584;
  unsigned __int8 *v585;
  int v586;
  _QWORD *v587;
  _QWORD *v588;
  int v589;
  int v590;
  int v591;
  __int128 *v592;
  __int128 v593;
  int v594;
  __int128 *v595;
  __int128 v596;
  _QWORD *v597;
  _QWORD *v598;
  __int128 v599;
  int v600;
  int v601;
  unint64_t v602;
  int v603;
  _QWORD *v604;
  _QWORD *v605;
  int v606;
  int v607;
  int v608;
  __int128 *v609;
  __int128 v610;
  int v611;
  int v612;
  int v613;
  int v614;
  __int128 *v615;
  __int128 v616;
  _QWORD *v617;
  _QWORD *v618;
  __int128 v619;
  __int128 v620;
  uint64_t v621;
  int v622;
  int v623;
  int v624;
  int v625;
  uint64_t v626;
  unint64_t v627;
  uint64_t v628;
  int v629;
  _QWORD *v630;
  int v631;
  __int128 v632;
  int v633;
  int v634;
  _QWORD *v635;
  __int128 v636;
  uint64_t v637;
  __int128 *v638;
  _OWORD *v639;
  int v640;
  int v641;
  int v642;
  __int128 *v643;
  __int128 v644;
  uint64_t v645;
  uint64_t v646;
  int v647;
  __int128 *v648;
  __int128 v649;
  _QWORD *v650;
  _QWORD *v651;
  uint64_t v652;
  __int128 v653;
  __int128 v654;
  uint64_t v655;
  uint64_t v656;
  int v657;
  int v658;
  int v659;
  uint64_t *v660;
  int v661;
  int v662;
  uint64_t v663;
  int v664;
  int v665;
  __int128 v666;
  int v667;
  int v668;
  unsigned __int8 *v669;
  int v670;
  _QWORD *v671;
  int v672;
  int v673;
  int v674;
  __int128 v675;
  int v676;
  __int128 v677;
  _QWORD *v678;
  __int128 v679;
  __int128 v680;
  uint64_t v681;
  uint64_t v682;
  int *v683;
  int v684;
  int v685;
  uint64_t v686;
  int v687;
  int v688;
  unint64_t v689;
  int v690;
  unint64_t v691;
  int v692;
  int v693;
  int v694;
  _QWORD *v695;
  _QWORD *v696;
  int v697;
  int v698;
  int v699;
  int v700;
  _QWORD *v701;
  _QWORD *v702;
  uint64_t v703;
  int v704;
  int v705;
  int v706;
  int v707;
  unsigned __int8 *v708;
  unint64_t v709;
  int v710;
  int v711;
  int v712;
  int v713;
  int v714;
  int v715;
  unint64_t v716;
  int v717;
  int v718;
  unint64_t v719;
  unint64_t v720;
  int *v721;
  uint64_t v722;
  _QWORD *v723;
  _QWORD *v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  unint64_t v729;
  unint64_t v730;
  unint64_t v731;
  unint64_t v732;
  uint64_t v733;
  unint64_t v734;
  unint64_t v735;
  unint64_t v737;
  uint64_t v738;
  int v739;
  int v740;
  unint64_t v741;
  unint64_t v742;
  unint64_t v743;
  unint64_t v744;
  uint64_t v745;
  unsigned int v746;
  unsigned int v747;
  unsigned int v748;
  unsigned int v749;
  int v750;
  int v751;
  int v752;
  int v753;
  int v754;
  int v755;
  int v756;
  int v757;
  int v758;
  uint64_t v759;
  unint64_t v760;
  int v761;
  int v762;
  int v763;
  unsigned int v764;
  unsigned int v765;
  unsigned int v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  unsigned int v771;
  unsigned __int8 v772;
  unsigned __int8 v773;
  unsigned int v774;
  unsigned __int8 v775;
  unsigned int v776;
  unsigned int v777;
  uint64_t v778;
  int v779;
  int v780;
  uint64_t v781;
  int v782;
  unint64_t v783;
  unsigned int v784;
  unsigned int v785;
  unint64_t v786;
  unsigned int v787;
  unsigned int v788;
  _BYTE v789[12];
  unint64_t v790;
  uint64_t v791;
  unint64_t v792;
  unint64_t v793;
  unint64_t v794;
  uint64_t v795;
  unsigned int v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  unsigned int v800;
  unsigned int v801;
  uint64_t v802;
  uint64_t v803;
  unint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  __int128 *v808;
  uint64_t v809;
  uint64_t v810;
  _BYTE v811[20];
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  int v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  unint64_t v820;
  unint64_t v821;
  unint64_t v822;
  unint64_t v823;
  __int128 v824;
  unint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  int v830;
  __int128 v831;
  uint64_t v832;
  int v833;
  _BYTE v834[24];
  int v835;
  int v836;
  __int128 v837;
  int v838;
  __int128 v839;
  int v840;
  __int128 v841;
  int v842;
  int v843;
  __int128 v844;
  int v845;
  _BYTE v846[24];
  int v847;

  v8 = &v834[8];
  v9 = &v846[8];
LABEL_2:
  v726 = a1 + 160;
  v727 = a1 + 80;
  v734 = a1 + 64;
  v725 = a1 - 80;
  v745 = a1;
  v729 = a1 + 40;
  v730 = a1 + 8;
  v10 = (int *)a2;
  while (2)
  {
    v11 = (uint64_t)v10 - v745;
    v12 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v10 - v745) >> 4);
    a2 = (unint64_t)v10;
    switch(v12)
    {
      case 0:
      case 1:
        return;
      case 2:
        v420 = (uint64_t)(v10 - 20);
        if (sub_1001DF450(v420, v745))
        {
          sub_1001DF660(v745, v420);
          *(_OWORD *)v834 = *(_OWORD *)(v745 + 64);
          v421 = *(_QWORD *)(a2 - 16);
          *(_DWORD *)(v745 + 72) = *(_DWORD *)(a2 - 8);
          *(_QWORD *)(v745 + 64) = v421;
          v422 = *(_QWORD *)v834;
          *(_DWORD *)(a2 - 8) = *(_DWORD *)&v834[8];
          *(_QWORD *)(a2 - 16) = v422;
        }
        return;
      case 3:
        sub_1001DEDD8(v745, v745 + 80, (uint64_t)(v10 - 20));
        return;
      case 4:
        sub_1001DF938((__n128 *)v745, v745 + 80, v745 + 160, (uint64_t)(v10 - 20));
        return;
      case 5:
        sub_1001DEC74((__n128 *)v745, v745 + 80, v745 + 160, v745 + 240, (uint64_t)(v10 - 20));
        return;
      default:
        if (v11 > 1919)
        {
          if (!a3)
          {
            if ((int *)v745 == v10)
              return;
            v426 = (unint64_t)(v12 - 2) >> 1;
            v427 = v426;
            v428 = v745;
LABEL_834:
            v431 = v427;
            if (v426 < v427)
              goto LABEL_833;
            v4 = (2 * v427) | 1;
            v432 = v428 + 80 * v4;
            if (2 * v427 + 2 < v12)
            {
              if (sub_1001DF450(v428 + 80 * v4, v432 + 80))
              {
                v432 += 80;
                v4 = 2 * v431 + 2;
              }
              v428 = v745;
            }
            v433 = v428 + 80 * v431;
            v434 = sub_1001DF450(v432, v433);
            v428 = v745;
            if (v434)
              goto LABEL_833;
            v436 = (_QWORD *)(v433 + 8);
            v435 = *(_DWORD *)v433;
            v437 = *(int *)v433 >> 31;
            if (v435 >> 31 == v435)
            {
              *(_QWORD *)&v834[8] = *v436;
              v437 = v435;
            }
            else
            {
              v438 = *(_OWORD *)v436;
              v835 = *(_DWORD *)(v433 + 24);
              *(_OWORD *)&v834[8] = v438;
            }
            *(_DWORD *)v834 = v437 ^ v435;
            v439 = *(_DWORD *)(v433 + 32);
            v440 = v439 >> 31;
            v441 = (_QWORD *)(v433 + 40);
            if (v439 >> 31 == v439)
            {
              *(_QWORD *)&v837 = *v441;
              v440 = v439;
            }
            else
            {
              v442 = *(_OWORD *)v441;
              v838 = *(_DWORD *)(v433 + 56);
              v837 = v442;
            }
            v836 = v440 ^ v439;
            v839 = *(_OWORD *)(v745 + 80 * v431 + 64);
            while (1)
            {
              v443 = v432;
              if (*(_DWORD *)v433 == *(_DWORD *)v432)
              {
                v444 = (_QWORD *)(v432 + 8);
                v445 = (_QWORD *)(v433 + 8);
                if (*(_DWORD *)v433 == *(int *)v433 >> 31)
                {
                  *v445 = *v444;
                  v446 = *(_DWORD *)(v433 + 32);
                  v447 = *(_DWORD *)(v432 + 32);
                  if (v446 != v447)
                    goto LABEL_850;
                }
                else
                {
                  v456 = *(_OWORD *)v444;
                  *(_DWORD *)(v433 + 24) = *(_DWORD *)(v432 + 24);
                  *(_OWORD *)v445 = v456;
                  v446 = *(_DWORD *)(v433 + 32);
                  v447 = *(_DWORD *)(v432 + 32);
                  if (v446 != v447)
                    goto LABEL_850;
                }
              }
              else
              {
                v451 = *(_DWORD *)v432 ^ (*(int *)v432 >> 31);
                v452 = (__int128 *)(v432 + 8);
                if (v451)
                {
                  v453 = *v452;
                  *(_DWORD *)(v433 + 24) = *(_DWORD *)(v432 + 24);
                  *(_OWORD *)(v433 + 8) = v453;
                  *(_DWORD *)v433 = v451;
                  v446 = *(_DWORD *)(v433 + 32);
                  v447 = *(_DWORD *)(v432 + 32);
                  if (v446 != v447)
                    goto LABEL_850;
                }
                else
                {
                  *(_QWORD *)(v433 + 8) = *(_QWORD *)v452;
                  *(_DWORD *)v433 = 0;
                  v446 = *(_DWORD *)(v433 + 32);
                  v447 = *(_DWORD *)(v432 + 32);
                  if (v446 != v447)
                  {
LABEL_850:
                    v448 = v447 ^ (v447 >> 31);
                    v449 = (__int128 *)(v432 + 40);
                    if (v448)
                    {
                      v450 = *v449;
                      *(_DWORD *)(v433 + 56) = *(_DWORD *)(v432 + 56);
                      *(_OWORD *)(v433 + 40) = v450;
                      *(_DWORD *)(v433 + 32) = v448;
                    }
                    else
                    {
                      *(_QWORD *)(v433 + 40) = *(_QWORD *)v449;
                      *(_DWORD *)(v433 + 32) = 0;
                    }
                    goto LABEL_860;
                  }
                }
              }
              v454 = (_QWORD *)(v432 + 40);
              v455 = (_QWORD *)(v433 + 40);
              if (v446 == v446 >> 31)
              {
                *v455 = *v454;
              }
              else
              {
                v457 = *(_OWORD *)v454;
                *(_DWORD *)(v433 + 56) = *(_DWORD *)(v432 + 56);
                *(_OWORD *)v455 = v457;
              }
LABEL_860:
              v458 = *(_QWORD *)(v432 + 64);
              *(_DWORD *)(v433 + 72) = *(_DWORD *)(v432 + 72);
              *(_QWORD *)(v433 + 64) = v458;
              if (v426 >= v4)
              {
                v459 = (2 * v4) | 1;
                v432 = v745 + 80 * v459;
                v4 = 2 * v4 + 2;
                if (v4 >= v12)
                {
                  v4 = v459;
                }
                else if (sub_1001DF450(v745 + 80 * v459, v432 + 80))
                {
                  v432 += 80;
                }
                else
                {
                  v4 = v459;
                }
                v433 = v443;
                if (!sub_1001DF450(v432, (uint64_t)v834))
                  continue;
              }
              if (*(_DWORD *)v443 == *(_DWORD *)v834)
              {
                v460 = (_QWORD *)(v443 + 8);
                if (*(_DWORD *)v443 == *(int *)v443 >> 31)
                {
                  *v460 = *(_QWORD *)&v834[8];
                  v461 = *(_DWORD *)(v443 + 32);
                  v462 = v836;
                  if (v461 != v836)
                  {
LABEL_873:
                    v463 = v462 ^ (v462 >> 31);
                    if (v463)
                    {
                      v464 = v837;
                      *(_DWORD *)(v443 + 56) = v838;
                      *(_OWORD *)(v443 + 40) = v464;
                      *(_DWORD *)(v443 + 32) = v463;
                    }
                    else
                    {
                      *(_QWORD *)(v443 + 40) = v837;
                      *(_DWORD *)(v443 + 32) = 0;
                    }
                    goto LABEL_832;
                  }
                }
                else
                {
                  v468 = *(_OWORD *)&v834[8];
                  *(_DWORD *)(v443 + 24) = v835;
                  *(_OWORD *)v460 = v468;
                  v461 = *(_DWORD *)(v443 + 32);
                  v462 = v836;
                  if (v461 != v836)
                    goto LABEL_873;
                }
              }
              else
              {
                v465 = *(_DWORD *)v834 ^ (*(int *)v834 >> 31);
                if (v465)
                {
                  v466 = *(_OWORD *)&v834[8];
                  *(_DWORD *)(v443 + 24) = v835;
                  *(_OWORD *)(v443 + 8) = v466;
                  *(_DWORD *)v443 = v465;
                  v461 = *(_DWORD *)(v443 + 32);
                  v462 = v836;
                  if (v461 != v836)
                    goto LABEL_873;
                }
                else
                {
                  *(_QWORD *)(v443 + 8) = *(_QWORD *)&v834[8];
                  *(_DWORD *)v443 = 0;
                  v461 = *(_DWORD *)(v443 + 32);
                  v462 = v836;
                  if (v461 != v836)
                    goto LABEL_873;
                }
              }
              v467 = (_QWORD *)(v443 + 40);
              if (v461 == v461 >> 31)
              {
                *v467 = v837;
              }
              else
              {
                v429 = v837;
                *(_DWORD *)(v443 + 56) = v838;
                *(_OWORD *)v467 = v429;
              }
LABEL_832:
              v428 = v745;
              v430 = v839;
              *(_DWORD *)(v443 + 72) = DWORD2(v839);
              *(_QWORD *)(v443 + 64) = v430;
LABEL_833:
              v427 = v431 - 1;
              if (v431)
                goto LABEL_834;
              v822 = 0;
              v821 = 0;
              v820 = 0;
              LODWORD(v819) = 0;
              v818 = 0;
              v817 = 0;
              LODWORD(v816) = 0;
              LODWORD(v828) = 0;
              LODWORD(v827) = 0;
              LODWORD(v826) = 0;
              LODWORD(v825) = 0;
              v824 = 0uLL;
              v823 = 0;
              v522 = v11 / 0x50uLL;
              v805 = v428 + 16;
              v804 = v428 + 48;
              v808 = (__int128 *)(v428 + 64);
              v523 = a2;
LABEL_959:
              v524 = v745;
              v525 = *(_DWORD *)v745;
              v526 = *(int *)v745 >> 31;
              *(_QWORD *)&v811[12] = *(_QWORD *)(v745 + 8);
              if (v525 >> 31 == v525)
              {
                v526 = *(_DWORD *)v745;
                v527 = *(_DWORD *)(v745 + 32);
                v528 = v527 >> 31;
                v529 = v527;
                *(_DWORD *)&v811[4] = v527;
                if (v527 >> 31 == v527)
                {
LABEL_964:
                  *(_DWORD *)v811 = v529;
                  v531 = 0;
                  *(_DWORD *)&v811[8] = v526 ^ v525;
                  v812 = *(_QWORD *)(v745 + 40);
                  v831 = *v808;
                  while (1)
                  {
                    v535 = v524;
                    v524 += 80 * v531 + 80;
                    v536 = 2 * v531;
                    v531 = (2 * v531) | 1;
                    v537 = v536 + 2;
                    if (v536 + 2 >= v522)
                      goto LABEL_1072;
                    v538 = *(_DWORD *)(v524 + 80);
                    v539 = v538 >> 31;
                    v540 = v538;
                    if (v538 >> 31 != v538)
                    {
                      LODWORD(v828) = *(unsigned __int8 *)(v524 + 96);
                      LODWORD(v827) = *(unsigned __int8 *)(v524 + 97);
                      LODWORD(v826) = *(unsigned __int8 *)(v524 + 98);
                      LODWORD(v825) = *(unsigned __int8 *)(v524 + 99);
                      HIDWORD(v824) = *(unsigned __int8 *)(v524 + 100);
                      DWORD2(v824) = *(unsigned __int8 *)(v524 + 101);
                      DWORD1(v824) = *(unsigned __int8 *)(v524 + 102);
                      LODWORD(v824) = *(unsigned __int8 *)(v524 + 103);
                      HIDWORD(v823) = *(unsigned __int8 *)(v524 + 104);
                      LODWORD(v823) = *(unsigned __int8 *)(v524 + 105);
                      HIDWORD(v822) = *(unsigned __int8 *)(v524 + 106);
                      v540 = v538 >> 31;
                      LOBYTE(v4) = *(_BYTE *)(v524 + 107);
                    }
                    v541 = *(_QWORD *)(v524 + 88);
                    v542 = HIBYTE(v541);
                    v543 = v540 ^ v538;
                    v544 = *(int *)v524 >> 31;
                    v545 = (v540 ^ v538) >> 31;
                    if (v544 == *(_DWORD *)v524)
                    {
                      if (v545 != v543)
                        goto LABEL_1071;
                      v546 = *(_QWORD *)(v524 + 8);
                      if (v546 < v541)
                        goto LABEL_1071;
                      v547 = 0;
                      v548 = 0;
                      if (v539 == v538)
                        goto LABEL_1017;
                    }
                    else
                    {
                      if (v545 != v543)
                      {
                        v564 = *(unsigned __int8 *)(v524 + 8);
                        if (v564 < v541)
                          goto LABEL_1071;
                        if (v564 <= v541)
                        {
                          v565 = *(unsigned __int8 *)(v524 + 9);
                          if (v565 < BYTE1(v541))
                            goto LABEL_1071;
                          if (v565 <= BYTE1(v541))
                          {
                            v566 = *(unsigned __int8 *)(v524 + 10);
                            if (v566 < BYTE2(v541))
                              goto LABEL_1071;
                            if (v566 <= BYTE2(v541))
                            {
                              v567 = *(unsigned __int8 *)(v524 + 11);
                              if (v567 < BYTE3(v541))
                                goto LABEL_1071;
                              if (v567 <= BYTE3(v541))
                              {
                                v568 = *(unsigned __int8 *)(v524 + 12);
                                if (v568 < BYTE4(v541))
                                  goto LABEL_1071;
                                if (v568 <= BYTE4(v541))
                                {
                                  v569 = *(unsigned __int8 *)(v524 + 13);
                                  if (v569 < BYTE5(v541))
                                    goto LABEL_1071;
                                  if (v569 <= BYTE5(v541))
                                  {
                                    v570 = *(unsigned __int8 *)(v524 + 14);
                                    if (v570 < BYTE6(v541))
                                      goto LABEL_1071;
                                    if (v570 <= BYTE6(v541))
                                    {
                                      v571 = *(unsigned __int8 *)(v524 + 15);
                                      if (v571 < v542)
                                        goto LABEL_1071;
                                      if (v571 <= v542)
                                      {
                                        v572 = *(unsigned __int8 *)(v524 + 16);
                                        if (v572 < v828)
                                          goto LABEL_1071;
                                        if (v828 >= v572)
                                        {
                                          v573 = *(unsigned __int8 *)(v524 + 17);
                                          if (v573 < v827)
                                            goto LABEL_1071;
                                          if (v827 >= v573)
                                          {
                                            v574 = *(unsigned __int8 *)(v524 + 18);
                                            if (v574 < v826)
                                              goto LABEL_1071;
                                            if (v826 >= v574)
                                            {
                                              v575 = *(unsigned __int8 *)(v524 + 19);
                                              if (v575 < v825
                                                || v825 >= v575
                                                && ((v576 = *(unsigned __int8 *)(v524 + 20), v576 < HIDWORD(v824))
                                                 || HIDWORD(v824) >= v576
                                                 && ((v577 = *(unsigned __int8 *)(v524 + 21), v577 < DWORD2(v824))
                                                  || DWORD2(v824) >= v577
                                                  && ((v578 = *(unsigned __int8 *)(v524 + 22), v578 < DWORD1(v824))
                                                   || DWORD1(v824) >= v578
                                                   && ((v579 = *(unsigned __int8 *)(v524 + 23), v579 < v824)
                                                    || v824 >= v579
                                                    && ((v580 = *(unsigned __int8 *)(v524 + 24), v580 < HIDWORD(v823))
                                                     || HIDWORD(v823) >= v580
                                                     && ((v581 = *(unsigned __int8 *)(v524 + 25),
                                                          v581 < v823)
                                                      || v823 >= v581
                                                      && ((v582 = *(unsigned __int8 *)(v524 + 26), v582 < HIDWORD(v822))
                                                       || HIDWORD(v822) >= v582
                                                       && *(unsigned __int8 *)(v524 + 27) < v4))))))))
                                              {
LABEL_1071:
                                                v524 += 80;
                                                v531 = v537;
                                                goto LABEL_1072;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      LODWORD(v822) = *(unsigned __int8 *)(v524 + 16);
                      HIDWORD(v821) = *(unsigned __int8 *)(v524 + 17);
                      LODWORD(v821) = *(unsigned __int8 *)(v524 + 18);
                      HIDWORD(v820) = *(unsigned __int8 *)(v524 + 19);
                      LODWORD(v820) = *(unsigned __int8 *)(v524 + 20);
                      LODWORD(v819) = *(unsigned __int8 *)(v524 + 21);
                      HIDWORD(v818) = *(unsigned __int8 *)(v524 + 22);
                      LODWORD(v818) = *(unsigned __int8 *)(v524 + 23);
                      HIDWORD(v817) = *(unsigned __int8 *)(v524 + 24);
                      LODWORD(v817) = *(unsigned __int8 *)(v524 + 25);
                      LODWORD(v816) = *(unsigned __int8 *)(v524 + 26);
                      LOBYTE(v815) = *(_BYTE *)(v524 + 27);
                      v546 = *(_QWORD *)(v524 + 8);
                      v547 = v544 ^ *(_DWORD *)v524;
                      v548 = v547 >> 31;
                      if (v539 == v538)
                      {
LABEL_1017:
                        if (v548 != v547 || v541 < v546)
                          goto LABEL_1072;
                        goto LABEL_1022;
                      }
                    }
                    if (v548 != v547)
                    {
                      if (v541 < v546)
                        goto LABEL_1072;
                      if (v541 <= v546)
                      {
                        if (BYTE1(v541) < BYTE1(v546))
                          goto LABEL_1072;
                        if (BYTE1(v541) <= BYTE1(v546))
                        {
                          if (BYTE2(v541) < BYTE2(v546))
                            goto LABEL_1072;
                          if (BYTE2(v541) <= BYTE2(v546))
                          {
                            if (BYTE3(v541) < BYTE3(v546))
                              goto LABEL_1072;
                            if (BYTE3(v541) <= BYTE3(v546))
                            {
                              if (BYTE4(v541) < BYTE4(v546))
                                goto LABEL_1072;
                              if (BYTE4(v541) <= BYTE4(v546))
                              {
                                if (BYTE5(v541) < BYTE5(v546))
                                  goto LABEL_1072;
                                if (BYTE5(v541) <= BYTE5(v546))
                                {
                                  if (BYTE6(v541) < BYTE6(v546))
                                    goto LABEL_1072;
                                  if (BYTE6(v541) <= BYTE6(v546))
                                  {
                                    if (v542 < HIBYTE(v546))
                                      goto LABEL_1072;
                                    if (v542 <= HIBYTE(v546))
                                    {
                                      v549 = *(unsigned __int8 *)(v524 + 96);
                                      if (v549 < v822)
                                        goto LABEL_1072;
                                      if (v822 >= v549)
                                      {
                                        v550 = *(unsigned __int8 *)(v524 + 97);
                                        if (v550 < HIDWORD(v821))
                                          goto LABEL_1072;
                                        if (HIDWORD(v821) >= v550)
                                        {
                                          v551 = *(unsigned __int8 *)(v524 + 98);
                                          if (v551 < v821)
                                            goto LABEL_1072;
                                          if (v821 >= v551)
                                          {
                                            v552 = *(unsigned __int8 *)(v524 + 99);
                                            if (v552 < HIDWORD(v820))
                                              goto LABEL_1072;
                                            if (HIDWORD(v820) >= v552)
                                            {
                                              v553 = *(unsigned __int8 *)(v524 + 100);
                                              if (v553 < v820)
                                                goto LABEL_1072;
                                              if (v820 >= v553)
                                              {
                                                v554 = *(unsigned __int8 *)(v524 + 101);
                                                if (v554 < v819)
                                                  goto LABEL_1072;
                                                if (v819 >= v554)
                                                {
                                                  v555 = *(unsigned __int8 *)(v524 + 102);
                                                  if (v555 < HIDWORD(v818))
                                                    goto LABEL_1072;
                                                  if (HIDWORD(v818) >= v555)
                                                  {
                                                    v556 = *(unsigned __int8 *)(v524 + 103);
                                                    if (v556 < v818)
                                                      goto LABEL_1072;
                                                    if (v818 >= v556)
                                                    {
                                                      v557 = *(unsigned __int8 *)(v524 + 104);
                                                      if (v557 < HIDWORD(v817))
                                                        goto LABEL_1072;
                                                      if (HIDWORD(v817) >= v557)
                                                      {
                                                        v558 = *(unsigned __int8 *)(v524 + 105);
                                                        if (v558 < v817)
                                                          goto LABEL_1072;
                                                        if (v817 >= v558)
                                                        {
                                                          v559 = *(unsigned __int8 *)(v524 + 106);
                                                          if (v559 < v816
                                                            || v816 >= v559
                                                            && *(unsigned __int8 *)(v524 + 107) < v815)
                                                          {
                                                            goto LABEL_1072;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
LABEL_1022:
                    v561 = *(_DWORD *)(v524 + 112);
                    v562 = v561 >> 31;
                    v563 = (_QWORD *)(v524 + 120);
                    if (v561 >> 31 == v561)
                    {
                      *(_QWORD *)&v834[8] = *v563;
                      v562 = v561;
                    }
                    else
                    {
                      v583 = *(_OWORD *)v563;
                      v835 = *(_DWORD *)(v524 + 136);
                      *(_OWORD *)&v834[8] = v583;
                    }
                    v584 = v562 ^ v561;
                    *(_DWORD *)v834 = v584;
                    v585 = (unsigned __int8 *)(v524 + 40);
                    v586 = v584 >> 31;
                    if (*(_DWORD *)(v524 + 32) == *(int *)(v524 + 32) >> 31)
                    {
                      if (v586 != v584 || *(_QWORD *)v585 < *(_QWORD *)&v834[8])
                        goto LABEL_1071;
                    }
                    else if (v586 != v584 && sub_1001D7688(v585, &v834[8]))
                    {
                      goto LABEL_1071;
                    }
LABEL_1072:
                    if (*(_DWORD *)v535 == *(_DWORD *)v524)
                    {
                      v587 = (_QWORD *)(v524 + 8);
                      v588 = (_QWORD *)(v535 + 8);
                      if (*(_DWORD *)v535 == *(int *)v535 >> 31)
                      {
                        *v588 = *v587;
                        v589 = *(_DWORD *)(v535 + 32);
                        v590 = *(_DWORD *)(v524 + 32);
                        if (v589 == v590)
                          goto LABEL_1079;
                      }
                      else
                      {
                        v599 = *(_OWORD *)v587;
                        *(_DWORD *)(v535 + 24) = *(_DWORD *)(v524 + 24);
                        *(_OWORD *)v588 = v599;
                        v589 = *(_DWORD *)(v535 + 32);
                        v590 = *(_DWORD *)(v524 + 32);
                        if (v589 == v590)
                          goto LABEL_1079;
                      }
                    }
                    else
                    {
                      v594 = *(_DWORD *)v524 ^ (*(int *)v524 >> 31);
                      v595 = (__int128 *)(v524 + 8);
                      if (v594)
                      {
                        v596 = *v595;
                        *(_DWORD *)(v535 + 24) = *(_DWORD *)(v524 + 24);
                        *(_OWORD *)(v535 + 8) = v596;
                        *(_DWORD *)v535 = v594;
                        v589 = *(_DWORD *)(v535 + 32);
                        v590 = *(_DWORD *)(v524 + 32);
                        if (v589 == v590)
                          goto LABEL_1079;
                      }
                      else
                      {
                        *(_QWORD *)(v535 + 8) = *(_QWORD *)v595;
                        *(_DWORD *)v535 = 0;
                        v589 = *(_DWORD *)(v535 + 32);
                        v590 = *(_DWORD *)(v524 + 32);
                        if (v589 == v590)
                        {
LABEL_1079:
                          v597 = (_QWORD *)(v524 + 40);
                          v598 = (_QWORD *)(v535 + 40);
                          if (v589 == v589 >> 31)
                          {
                            *v598 = *v597;
                          }
                          else
                          {
                            v532 = *(_OWORD *)v597;
                            *(_DWORD *)(v535 + 56) = *(_DWORD *)(v524 + 56);
                            *(_OWORD *)v598 = v532;
                          }
                          goto LABEL_966;
                        }
                      }
                    }
                    v591 = v590 ^ (v590 >> 31);
                    v592 = (__int128 *)(v524 + 40);
                    if (v591)
                    {
                      v593 = *v592;
                      *(_DWORD *)(v535 + 56) = *(_DWORD *)(v524 + 56);
                      *(_OWORD *)(v535 + 40) = v593;
                      *(_DWORD *)(v535 + 32) = v591;
                    }
                    else
                    {
                      *(_QWORD *)(v535 + 40) = *(_QWORD *)v592;
                      *(_DWORD *)(v535 + 32) = 0;
                    }
LABEL_966:
                    v534 = (_QWORD *)(v524 + 64);
                    v533 = *(_QWORD *)(v524 + 64);
                    *(_DWORD *)(v535 + 72) = *(_DWORD *)(v524 + 72);
                    *(_QWORD *)(v535 + 64) = v533;
                    if (v531 > (uint64_t)((unint64_t)(v522 - 2) >> 1))
                    {
                      v600 = *(_DWORD *)v811 ^ *(_DWORD *)&v811[4];
                      v601 = *(_DWORD *)v524;
                      if (v524 == v523 - 80)
                      {
                        v602 = v523 - 80;
                        v611 = *(int *)&v811[8] >> 31;
                        if (v601 == *(_DWORD *)&v811[8])
                        {
                          if (v611 == *(_DWORD *)&v811[8])
                          {
                            *(_QWORD *)(v524 + 8) = *(_QWORD *)&v811[12];
                            v612 = v600 >> 31;
                            if (*(_DWORD *)(v524 + 32) != v600)
                            {
LABEL_1095:
                              v613 = v612 ^ v600;
                              *(_QWORD *)(v524 + 40) = v812;
                              if (v613)
                              {
                                *(_QWORD *)(v524 + 48) = v829;
                                *(_DWORD *)(v524 + 56) = v830;
                                *(_DWORD *)(v524 + 32) = v613;
                              }
                              else
                              {
                                *(_DWORD *)(v524 + 32) = 0;
                              }
LABEL_957:
                              *(_DWORD *)(v524 + 72) = DWORD2(v831);
                              *v534 = v831;
                              goto LABEL_958;
                            }
                          }
                          else
                          {
                            *(_QWORD *)(v524 + 8) = *(_QWORD *)&v811[12];
                            *(_QWORD *)(v524 + 16) = v832;
                            *(_DWORD *)(v524 + 24) = v833;
                            v612 = v600 >> 31;
                            if (*(_DWORD *)(v524 + 32) != v600)
                              goto LABEL_1095;
                          }
                        }
                        else if (v611 != *(_DWORD *)&v811[8])
                        {
                          *(_QWORD *)(v524 + 8) = *(_QWORD *)&v811[12];
                          *(_QWORD *)(v524 + 16) = v832;
                          *(_DWORD *)(v524 + 24) = v833;
                          *(_DWORD *)v524 = v611 ^ *(_DWORD *)&v811[8];
                          v612 = v600 >> 31;
                          if (*(_DWORD *)(v524 + 32) != v600)
                            goto LABEL_1095;
                        }
                        else
                        {
                          *(_QWORD *)(v524 + 8) = *(_QWORD *)&v811[12];
                          *(_DWORD *)v524 = 0;
                          v612 = v600 >> 31;
                          if (*(_DWORD *)(v524 + 32) != v600)
                            goto LABEL_1095;
                        }
                        *(_QWORD *)(v524 + 40) = v812;
                        if (v612 != v600)
                        {
                          *(_QWORD *)(v524 + 48) = v829;
                          *(_DWORD *)(v524 + 56) = v830;
                        }
                        goto LABEL_957;
                      }
                      v602 = v523 - 80;
                      v603 = *(_DWORD *)(v523 - 80);
                      if (v601 == v603)
                      {
                        v604 = (_QWORD *)(v523 - 72);
                        v605 = (_QWORD *)(v524 + 8);
                        if (v601 == v601 >> 31)
                        {
                          *v605 = *v604;
                          v606 = *(_DWORD *)(v524 + 32);
                          v607 = *(_DWORD *)(v523 - 48);
                          if (v606 != v607)
                          {
LABEL_1090:
                            v608 = v607 ^ (v607 >> 31);
                            v609 = (__int128 *)(v523 - 40);
                            if (v608)
                            {
                              v610 = *v609;
                              *(_DWORD *)(v524 + 56) = *(_DWORD *)(v523 - 24);
                              *(_OWORD *)(v524 + 40) = v610;
                              *(_DWORD *)(v524 + 32) = v608;
                            }
                            else
                            {
                              *(_QWORD *)(v524 + 40) = *(_QWORD *)v609;
                              *(_DWORD *)(v524 + 32) = 0;
                            }
                            goto LABEL_1109;
                          }
                        }
                        else
                        {
                          v619 = *(_OWORD *)v604;
                          *(_DWORD *)(v524 + 24) = *(_DWORD *)(v523 - 56);
                          *(_OWORD *)v605 = v619;
                          v606 = *(_DWORD *)(v524 + 32);
                          v607 = *(_DWORD *)(v523 - 48);
                          if (v606 != v607)
                            goto LABEL_1090;
                        }
                      }
                      else
                      {
                        v614 = v603 ^ (v603 >> 31);
                        v615 = (__int128 *)(v523 - 72);
                        if (v614)
                        {
                          v616 = *v615;
                          *(_DWORD *)(v524 + 24) = *(_DWORD *)(v523 - 56);
                          *(_OWORD *)(v524 + 8) = v616;
                          *(_DWORD *)v524 = v614;
                          v606 = *(_DWORD *)(v524 + 32);
                          v607 = *(_DWORD *)(v523 - 48);
                          if (v606 != v607)
                            goto LABEL_1090;
                        }
                        else
                        {
                          *(_QWORD *)(v524 + 8) = *(_QWORD *)v615;
                          *(_DWORD *)v524 = 0;
                          v606 = *(_DWORD *)(v524 + 32);
                          v607 = *(_DWORD *)(v523 - 48);
                          if (v606 != v607)
                            goto LABEL_1090;
                        }
                      }
                      v617 = (_QWORD *)(v523 - 40);
                      v618 = (_QWORD *)(v524 + 40);
                      if (v606 == v606 >> 31)
                      {
                        *v618 = *v617;
                      }
                      else
                      {
                        v620 = *(_OWORD *)v617;
                        *(_DWORD *)(v524 + 56) = *(_DWORD *)(v523 - 24);
                        *(_OWORD *)v618 = v620;
                      }
LABEL_1109:
                      v621 = *(_QWORD *)(v523 - 16);
                      *(_DWORD *)(v524 + 72) = *(_DWORD *)(v523 - 8);
                      *v534 = v621;
                      v622 = *(int *)&v811[8] >> 31;
                      if (*(_DWORD *)(v523 - 80) == *(_DWORD *)&v811[8])
                      {
                        if (v622 == *(_DWORD *)&v811[8])
                        {
                          *(_QWORD *)(v523 - 72) = *(_QWORD *)&v811[12];
                          v623 = v600 >> 31;
                          if (*(_DWORD *)(v523 - 48) != v600)
                          {
LABEL_1112:
                            v624 = v623 ^ v600;
                            *(_QWORD *)(v523 - 40) = v812;
                            if (v624)
                            {
                              *(_DWORD *)(v523 - 24) = v830;
                              *(_QWORD *)(v523 - 32) = v829;
                              *(_DWORD *)(v523 - 48) = v624;
                            }
                            else
                            {
                              *(_DWORD *)(v523 - 48) = 0;
                            }
                            goto LABEL_1124;
                          }
                        }
                        else
                        {
                          *(_QWORD *)(v523 - 72) = *(_QWORD *)&v811[12];
                          *(_DWORD *)(v523 - 56) = v833;
                          *(_QWORD *)(v523 - 64) = v832;
                          v623 = v600 >> 31;
                          if (*(_DWORD *)(v523 - 48) != v600)
                            goto LABEL_1112;
                        }
                      }
                      else
                      {
                        v625 = v622 ^ *(_DWORD *)&v811[8];
                        if (v625)
                        {
                          *(_QWORD *)(v523 - 72) = *(_QWORD *)&v811[12];
                          *(_DWORD *)(v523 - 56) = v833;
                          *(_QWORD *)(v523 - 64) = v832;
                          *(_DWORD *)(v523 - 80) = v625;
                          v623 = v600 >> 31;
                          if (*(_DWORD *)(v523 - 48) != v600)
                            goto LABEL_1112;
                        }
                        else
                        {
                          *(_QWORD *)(v523 - 72) = *(_QWORD *)&v811[12];
                          *(_DWORD *)(v523 - 80) = 0;
                          v623 = v600 >> 31;
                          if (*(_DWORD *)(v523 - 48) != v600)
                            goto LABEL_1112;
                        }
                      }
                      *(_QWORD *)(v523 - 40) = v812;
                      if (v623 != v600)
                      {
                        *(_DWORD *)(v523 - 24) = v830;
                        *(_QWORD *)(v523 - 32) = v829;
                      }
LABEL_1124:
                      *(_DWORD *)(v523 - 8) = DWORD2(v831);
                      *(_QWORD *)(v523 - 16) = v831;
                      v626 = v524 + 80 - v745;
                      if (v626 < 81)
                        goto LABEL_958;
                      v627 = (v626 / 0x50uLL - 2) >> 1;
                      v628 = v745 + 80 * v627;
                      if (!sub_1001DF450(v628, v524))
                        goto LABEL_958;
                      v630 = (_QWORD *)(v524 + 8);
                      v629 = *(_DWORD *)v524;
                      v631 = *(int *)v524 >> 31;
                      if (v629 >> 31 == v629)
                      {
                        *(_QWORD *)&v834[8] = *v630;
                        v631 = v629;
                      }
                      else
                      {
                        v632 = *(_OWORD *)v630;
                        v835 = *(_DWORD *)(v524 + 24);
                        *(_OWORD *)&v834[8] = v632;
                      }
                      *(_DWORD *)v834 = v631 ^ v629;
                      v633 = *(_DWORD *)(v524 + 32);
                      v634 = v633 >> 31;
                      v635 = (_QWORD *)(v524 + 40);
                      if (v633 >> 31 == v633)
                      {
                        *(_QWORD *)&v837 = *v635;
                        v634 = v633;
                      }
                      else
                      {
                        v636 = *(_OWORD *)v635;
                        v838 = *(_DWORD *)(v524 + 56);
                        v837 = v636;
                      }
                      v836 = v634 ^ v633;
                      v839 = *(_OWORD *)v534;
                      while (2)
                      {
                        while (2)
                        {
                          v637 = v628;
                          if (*(_DWORD *)v524 != *(_DWORD *)v628)
                          {
                            v647 = *(_DWORD *)v628 ^ (*(int *)v628 >> 31);
                            v648 = (__int128 *)(v628 + 8);
                            if (v647)
                            {
                              v649 = *v648;
                              *(_DWORD *)(v524 + 24) = *(_DWORD *)(v628 + 24);
                              *(_OWORD *)(v524 + 8) = v649;
                              *(_DWORD *)v524 = v647;
                              v640 = *(_DWORD *)(v524 + 32);
                              v641 = *(_DWORD *)(v628 + 32);
                              if (v640 != v641)
                                goto LABEL_1141;
                            }
                            else
                            {
                              *(_QWORD *)(v524 + 8) = *(_QWORD *)v648;
                              *(_DWORD *)v524 = 0;
                              v640 = *(_DWORD *)(v524 + 32);
                              v641 = *(_DWORD *)(v628 + 32);
                              if (v640 != v641)
                                goto LABEL_1141;
                            }
                            goto LABEL_1146;
                          }
                          v638 = (__int128 *)(v628 + 8);
                          v639 = (_OWORD *)(v524 + 8);
                          if (*(_DWORD *)v524 != *(int *)v524 >> 31)
                          {
                            v653 = *v638;
                            *(_DWORD *)(v524 + 24) = *(_DWORD *)(v628 + 24);
                            *v639 = v653;
                            v640 = *(_DWORD *)(v524 + 32);
                            v641 = *(_DWORD *)(v628 + 32);
                            if (v640 != v641)
                              goto LABEL_1141;
LABEL_1146:
                            v650 = (_QWORD *)(v628 + 40);
                            v651 = (_QWORD *)(v524 + 40);
                            if (v640 == v640 >> 31)
                            {
                              *v651 = *v650;
                              v646 = v628 + 64;
                              v652 = *(_QWORD *)(v628 + 64);
                              *(_DWORD *)(v524 + 72) = *(_DWORD *)(v628 + 72);
                              *(_QWORD *)(v524 + 64) = v652;
                              if (!v627)
                                goto LABEL_1184;
                            }
                            else
                            {
                              v654 = *(_OWORD *)v650;
                              *(_DWORD *)(v524 + 56) = *(_DWORD *)(v628 + 56);
                              *(_OWORD *)v651 = v654;
                              v646 = v628 + 64;
                              v655 = *(_QWORD *)(v628 + 64);
                              *(_DWORD *)(v524 + 72) = *(_DWORD *)(v628 + 72);
                              *(_QWORD *)(v524 + 64) = v655;
                              if (!v627)
                                goto LABEL_1184;
                            }
                            goto LABEL_1154;
                          }
                          *(_QWORD *)v639 = *(_QWORD *)v638;
                          v640 = *(_DWORD *)(v524 + 32);
                          v641 = *(_DWORD *)(v628 + 32);
                          if (v640 == v641)
                            goto LABEL_1146;
LABEL_1141:
                          v642 = v641 ^ (v641 >> 31);
                          v643 = (__int128 *)(v628 + 40);
                          if (v642)
                          {
                            v644 = *v643;
                            *(_DWORD *)(v524 + 56) = *(_DWORD *)(v628 + 56);
                            *(_OWORD *)(v524 + 40) = v644;
                            *(_DWORD *)(v524 + 32) = v642;
                            v646 = v628 + 64;
                            v645 = *(_QWORD *)(v628 + 64);
                            *(_DWORD *)(v524 + 72) = *(_DWORD *)(v628 + 72);
                            *(_QWORD *)(v524 + 64) = v645;
                            if (!v627)
                              goto LABEL_1184;
                          }
                          else
                          {
                            *(_QWORD *)(v524 + 40) = *(_QWORD *)v643;
                            *(_DWORD *)(v524 + 32) = 0;
                            v646 = v628 + 64;
                            v656 = *(_QWORD *)(v628 + 64);
                            *(_DWORD *)(v524 + 72) = *(_DWORD *)(v628 + 72);
                            *(_QWORD *)(v524 + 64) = v656;
                            if (!v627)
                              goto LABEL_1184;
                          }
LABEL_1154:
                          v657 = *(int *)v834 >> 31;
                          if (*(int *)v834 >> 31 == *(_DWORD *)v834)
                          {
                            *(_QWORD *)&v846[8] = *(_QWORD *)&v834[8];
                            v657 = *(_DWORD *)v834;
                          }
                          else
                          {
                            *(_OWORD *)&v846[8] = *(_OWORD *)&v834[8];
                            v847 = v835;
                          }
                          v627 = (v627 - 1) >> 1;
                          v628 = v745 + 80 * v627;
                          v658 = v657 ^ *(_DWORD *)v834;
                          *(_DWORD *)v846 = v658;
                          v660 = (uint64_t *)(v628 + 8);
                          v659 = *(_DWORD *)v628;
                          v661 = *(int *)v628 >> 31;
                          v662 = v658 >> 31;
                          if (v661 != *(_DWORD *)v628)
                          {
                            if (v662 != v658)
                            {
                              if (sub_1001D7688((unsigned __int8 *)(v628 + 8), &v846[8]))
                                goto LABEL_1137;
                              v659 = *(_DWORD *)v628;
                              v661 = *(int *)v628 >> 31;
                            }
                            if (v661 == v659)
                            {
                              v663 = *v660;
                              goto LABEL_1166;
                            }
                            v666 = *(_OWORD *)v660;
                            v845 = *(_DWORD *)(v628 + 24);
                            v844 = v666;
                            v664 = v661 ^ v659;
                            v843 = v664;
                            v665 = v664 >> 31;
                            if (*(_DWORD *)v834 != *(int *)v834 >> 31)
                              goto LABEL_1173;
LABEL_1167:
                            if (v665 != v664 || *(_QWORD *)&v834[8] < (unint64_t)v844)
                              goto LABEL_1184;
LABEL_1175:
                            v667 = v836 >> 31;
                            if (v836 >> 31 == v836)
                            {
                              *(_QWORD *)&v841 = v837;
                              v667 = v836;
                            }
                            else
                            {
                              v841 = v837;
                              v842 = v838;
                            }
                            v668 = v667 ^ v836;
                            v840 = v667 ^ v836;
                            v669 = (unsigned __int8 *)(v628 + 40);
                            v670 = (v667 ^ v836) >> 31;
                            if (*(_DWORD *)(v628 + 32) == *(int *)(v628 + 32) >> 31)
                            {
                              if (v670 != v668)
                                goto LABEL_1137;
                              v524 = v637;
                              if (*(_QWORD *)v669 >= (unint64_t)v841)
                                goto LABEL_1184;
                            }
                            else
                            {
                              if (v670 == v668)
                                goto LABEL_1184;
                              v524 = v637;
                              if (!sub_1001D7688(v669, (unsigned __int8 *)&v841))
                                goto LABEL_1184;
                            }
                            continue;
                          }
                          break;
                        }
                        if (v662 != v658 || (v663 = *v660, (unint64_t)*v660 < *(_QWORD *)&v846[8]))
                        {
LABEL_1137:
                          v524 = v637;
                          continue;
                        }
                        break;
                      }
LABEL_1166:
                      *(_QWORD *)&v844 = v663;
                      v664 = 0;
                      v843 = 0;
                      v665 = 0;
                      if (*(_DWORD *)v834 == *(int *)v834 >> 31)
                        goto LABEL_1167;
LABEL_1173:
                      if (v665 == v664 || !sub_1001D7688(&v834[8], (unsigned __int8 *)&v844))
                        goto LABEL_1175;
LABEL_1184:
                      if (*(_DWORD *)v637 == *(_DWORD *)v834)
                      {
                        v671 = (_QWORD *)(v637 + 8);
                        if (*(_DWORD *)v637 == *(int *)v637 >> 31)
                        {
                          *v671 = *(_QWORD *)&v834[8];
                          v672 = *(_DWORD *)(v637 + 32);
                          v673 = v836;
                          if (v672 != v836)
                          {
LABEL_1187:
                            v674 = v673 ^ (v673 >> 31);
                            if (v674)
                            {
                              v675 = v837;
                              *(_DWORD *)(v637 + 56) = v838;
                              *(_OWORD *)(v637 + 40) = v675;
                              *(_DWORD *)(v637 + 32) = v674;
                            }
                            else
                            {
                              *(_QWORD *)(v637 + 40) = v837;
                              *(_DWORD *)(v637 + 32) = 0;
                            }
                            goto LABEL_1200;
                          }
                        }
                        else
                        {
                          v679 = *(_OWORD *)&v834[8];
                          *(_DWORD *)(v637 + 24) = v835;
                          *(_OWORD *)v671 = v679;
                          v672 = *(_DWORD *)(v637 + 32);
                          v673 = v836;
                          if (v672 != v836)
                            goto LABEL_1187;
                        }
                      }
                      else
                      {
                        v676 = *(_DWORD *)v834 ^ (*(int *)v834 >> 31);
                        if (v676)
                        {
                          v677 = *(_OWORD *)&v834[8];
                          *(_DWORD *)(v637 + 24) = v835;
                          *(_OWORD *)(v637 + 8) = v677;
                          *(_DWORD *)v637 = v676;
                          v672 = *(_DWORD *)(v637 + 32);
                          v673 = v836;
                          if (v672 != v836)
                            goto LABEL_1187;
                        }
                        else
                        {
                          *(_QWORD *)(v637 + 8) = *(_QWORD *)&v834[8];
                          *(_DWORD *)v637 = 0;
                          v672 = *(_DWORD *)(v637 + 32);
                          v673 = v836;
                          if (v672 != v836)
                            goto LABEL_1187;
                        }
                      }
                      v678 = (_QWORD *)(v637 + 40);
                      if (v672 == v672 >> 31)
                      {
                        *v678 = v837;
                      }
                      else
                      {
                        v680 = v837;
                        *(_DWORD *)(v637 + 56) = v838;
                        *(_OWORD *)v678 = v680;
                      }
LABEL_1200:
                      v681 = v839;
                      *(_DWORD *)(v646 + 8) = DWORD2(v839);
                      *(_QWORD *)v646 = v681;
LABEL_958:
                      v167 = v522-- <= 2;
                      v523 = v602;
                      if (v167)
                        return;
                      goto LABEL_959;
                    }
                  }
                }
              }
              else
              {
                v832 = *(_QWORD *)v805;
                v833 = *(_DWORD *)(v805 + 8);
                v530 = *(_DWORD *)(v745 + 32);
                v528 = v530 >> 31;
                v529 = v530;
                *(_DWORD *)&v811[4] = v530;
                if (v530 >> 31 == v530)
                  goto LABEL_964;
              }
              v829 = *(_QWORD *)v804;
              v830 = *(_DWORD *)(v804 + 8);
              v529 = v528;
              goto LABEL_964;
            }
          }
          v13 = (unint64_t)v12 >> 1;
          v14 = v745 + 80 * v13;
          v15 = (uint64_t)(v10 - 20);
          if ((unint64_t)v11 < 0x2801)
          {
            sub_1001DEDD8(v745 + 80 * v13, v745, v15);
            v16 = (int *)v745;
            v20 = a3 - 1;
            v733 = v20;
            if ((a4 & 1) != 0)
              goto LABEL_11;
          }
          else
          {
            sub_1001DEDD8(v745, v745 + 80 * v13, v15);
            v5 = v745 + 80 * v13 - 80;
            sub_1001DEDD8(v727, v5, a2 - 160);
            v4 = v745 + 80 * v13 + 80;
            sub_1001DEDD8(v726, v4, a2 - 240);
            sub_1001DEDD8(v5, v14, v4);
            v16 = (int *)v745;
            sub_1001DF660(v745, v14);
            v17 = v745 + 80 * v13;
            *(_OWORD *)v834 = *(_OWORD *)v734;
            v18 = *(_QWORD *)(v17 + 64);
            *(_DWORD *)(v734 + 8) = *(_DWORD *)(v17 + 72);
            *(_QWORD *)v734 = v18;
            v19 = *(_QWORD *)v834;
            *(_DWORD *)(v17 + 72) = *(_DWORD *)&v834[8];
            *(_QWORD *)(v17 + 64) = v19;
            v20 = a3 - 1;
            v733 = v20;
            if ((a4 & 1) != 0)
              goto LABEL_11;
          }
          v21 = sub_1001DF450(v725, (uint64_t)v16);
          v16 = (int *)v745;
          if (v21)
          {
LABEL_11:
            v22 = *v16;
            v23 = *v16 >> 31;
            v24 = a2;
            if (v23 == *v16)
            {
              *(_QWORD *)&v834[8] = *(_QWORD *)v730;
              v25 = 0;
              *(_DWORD *)v834 = 0;
              v26 = v16[8];
              v27 = v26 >> 31;
              if (v26 >> 31 != v26)
                goto LABEL_13;
LABEL_15:
              *(_QWORD *)&v837 = *(_QWORD *)v729;
              v27 = v26;
            }
            else
            {
              v29 = *(_OWORD *)v730;
              v835 = *(_DWORD *)(v730 + 16);
              *(_OWORD *)&v834[8] = v29;
              v25 = v23 ^ v22;
              *(_DWORD *)v834 = v25;
              v26 = v16[8];
              v27 = v26 >> 31;
              if (v26 >> 31 == v26)
                goto LABEL_15;
LABEL_13:
              v28 = *(_OWORD *)v729;
              v838 = *(_DWORD *)(v729 + 16);
              v837 = v28;
            }
            v30 = 0;
            v836 = v27 ^ v26;
            v839 = *(_OWORD *)v734;
LABEL_18:
            v31 = v25 >> 31;
            if (v25 >> 31 == v25)
            {
              *(_QWORD *)&v846[8] = *(_QWORD *)&v834[8];
              v31 = v25;
            }
            else
            {
              *(_OWORD *)&v846[8] = *(_OWORD *)&v834[8];
              v847 = v835;
            }
            v32 = &v16[v30];
            v33 = v31 ^ v25;
            *(_DWORD *)v846 = v33;
            v34 = v16[v30 + 20];
            v35 = v34 >> 31;
            v36 = (uint64_t)&v16[v30 + 22];
            v37 = v33 >> 31;
            if (v34 >> 31 == v34)
            {
              if (v37 == v33)
              {
                v35 = v16[v30 + 20];
                if (*(_QWORD *)v36 >= *(_QWORD *)&v846[8])
                {
LABEL_29:
                  *(_QWORD *)&v844 = *(_QWORD *)v36;
                  v39 = v35 ^ v34;
                  v843 = v39;
                  v40 = v39 >> 31;
                  if (*(_DWORD *)v834 == *(int *)v834 >> 31)
                    goto LABEL_30;
LABEL_34:
                  if (v40 == v39)
                    goto LABEL_36;
                  v42 = sub_1001D7688(&v834[8], (unsigned __int8 *)&v844);
                  v16 = (int *)v745;
                  v24 = a2;
                  if (!v42)
                    goto LABEL_36;
LABEL_45:
                  v48 = (unint64_t)&v16[v30 + 20];
                  v49 = v24;
                  if (v30 * 4)
                  {
                    do
                      v49 -= 80;
                    while (!sub_1001DF450(v49, (uint64_t)v834));
                  }
                  else
                  {
                    v49 = a2;
                    do
                    {
                      if (v48 >= v49)
                        break;
                      v49 -= 80;
                    }
                    while (!sub_1001DF450(v49, (uint64_t)v834));
                  }
                  v731 = v49;
                  v732 = (unint64_t)&v16[v30 + 20];
                  if (v48 < v49)
                  {
                    v50 = v49;
                    a1 = v48;
                    while (1)
                    {
                      sub_1001DF660(a1, v50);
                      *(_OWORD *)v846 = *(_OWORD *)(a1 + 64);
                      v53 = *(_DWORD *)(v50 + 72);
                      *(_QWORD *)(a1 + 64) = *(_QWORD *)(v50 + 64);
                      v825 = a1;
                      *(_DWORD *)(a1 + 72) = v53;
                      *(_QWORD *)(v50 + 64) = *(_QWORD *)v846;
                      v816 = v50;
                      *(_DWORD *)(v50 + 72) = *(_DWORD *)&v846[8];
                      v54 = *(int *)v834 >> 31;
                      v55 = v834[17];
                      LODWORD(v821) = v834[8];
                      LOBYTE(v815) = v834[10];
                      HIDWORD(v822) = BYTE2(v835);
                      LODWORD(v822) = HIBYTE(v835);
                      v738 = HIBYTE(*(_QWORD *)&v834[8]);
                      HIDWORD(v818) = (*(int *)v834 >> 31) ^ *(_DWORD *)v834;
                      LODWORD(v818) = SHIDWORD(v818) >> 31;
                      v735 = BYTE7(v837);
                      LODWORD(v790) = v836 >> 31;
                      v780 = (v836 >> 31) ^ v836;
                      v779 = v780 >> 31;
                      v56 = HIDWORD(v744);
                      v57 = v744;
                      v58 = HIDWORD(v743);
                      v60 = HIDWORD(v742);
                      v59 = v743;
                      v62 = HIDWORD(v741);
                      v61 = v742;
                      v64 = v740;
                      v63 = v741;
                      v65 = v739;
                      while (1)
                      {
LABEL_56:
                        v66 = v825;
                        v67 = v825 + 80;
                        v68 = *(_DWORD *)(v825 + 80);
                        if (v54 != *(_DWORD *)v834)
                        {
                          v65 = HIBYTE(v835);
                          LODWORD(v8) = BYTE2(v835);
                          LODWORD(v14) = BYTE1(v835);
                          LODWORD(v48) = v835;
                          LODWORD(v9) = v834[23];
                          LODWORD(v20) = v834[22];
                          LODWORD(v16) = v834[21];
                          LODWORD(v4) = v834[20];
                          LODWORD(v5) = v834[19];
                        }
                        v69 = v826;
                        if (v54 != *(_DWORD *)v834)
                          v69 = v834[18];
                        LODWORD(v826) = v69;
                        v70 = v827;
                        if (v54 != *(_DWORD *)v834)
                          v70 = v55;
                        LODWORD(v827) = v70;
                        v71 = v828;
                        if (v54 != *(_DWORD *)v834)
                          v71 = v834[16];
                        LODWORD(v828) = v71;
                        v72 = v68 >> 31;
                        v73 = (unint64_t *)(v825 + 88);
                        if (v68 >> 31 != v68)
                          break;
                        v825 += 80;
                        v55 = v834[17];
                        if ((_DWORD)v818 == HIDWORD(v818))
                        {
LABEL_66:
                          v74 = *v73;
                          if (v74 >= *(_QWORD *)&v834[8])
                          {
                            v75 = 0;
                            v76 = 0;
                            if (v54 != *(_DWORD *)v834)
                              goto LABEL_126;
LABEL_68:
                            if (v76 != v75 || *(_QWORD *)&v834[8] < v74)
                              goto LABEL_232;
LABEL_164:
                            v100 = v806;
                            if ((_DWORD)v790 != v836)
                              v100 = HIBYTE(v838);
                            LODWORD(v806) = v100;
                            v101 = v807;
                            if ((_DWORD)v790 != v836)
                              v101 = BYTE2(v838);
                            LODWORD(v807) = v101;
                            v102 = (int)v808;
                            if ((_DWORD)v790 != v836)
                              v102 = BYTE1(v838);
                            LODWORD(v808) = v102;
                            v103 = v809;
                            if ((_DWORD)v790 != v836)
                              v103 = v838;
                            LODWORD(v809) = v103;
                            v104 = v810;
                            if ((_DWORD)v790 != v836)
                              v104 = HIBYTE(v837);
                            LODWORD(v810) = v104;
                            v105 = *(_DWORD *)v811;
                            if ((_DWORD)v790 != v836)
                              v105 = BYTE14(v837);
                            *(_DWORD *)v811 = v105;
                            v106 = *(_DWORD *)&v811[4];
                            if ((_DWORD)v790 != v836)
                              v106 = BYTE13(v837);
                            *(_DWORD *)&v811[4] = v106;
                            v107 = *(_DWORD *)&v811[8];
                            if ((_DWORD)v790 != v836)
                              v107 = BYTE12(v837);
                            *(_DWORD *)&v811[8] = v107;
                            v108 = *(_DWORD *)&v811[12];
                            if ((_DWORD)v790 != v836)
                              v108 = BYTE11(v837);
                            *(_DWORD *)&v811[12] = v108;
                            v109 = v812;
                            if ((_DWORD)v790 != v836)
                              v109 = BYTE10(v837);
                            LODWORD(v812) = v109;
                            if ((_DWORD)v790 != v836)
                              v56 = BYTE9(v837);
                            v110 = v813;
                            if ((_DWORD)v790 != v836)
                              v110 = BYTE8(v837);
                            LODWORD(v813) = v110;
                            if (*(_DWORD *)(v66 + 112) == *(int *)(v66 + 112) >> 31)
                            {
                              if (v779 == v780 && *(_QWORD *)(v66 + 120) >= (unint64_t)v837)
                                goto LABEL_232;
                            }
                            else
                            {
                              if (v779 == v780)
                                goto LABEL_232;
                              v111 = *(unsigned __int8 *)(v66 + 120);
                              if (v111 >= v837)
                              {
                                if (v111 > v837)
                                  goto LABEL_232;
                                v112 = *(unsigned __int8 *)(v66 + 121);
                                if (v112 >= BYTE1(v837))
                                {
                                  if (v112 > BYTE1(v837))
                                    goto LABEL_232;
                                  v113 = *(unsigned __int8 *)(v66 + 122);
                                  if (v113 >= BYTE2(v837))
                                  {
                                    if (v113 > BYTE2(v837))
                                      goto LABEL_232;
                                    v114 = *(unsigned __int8 *)(v66 + 123);
                                    if (v114 >= BYTE3(v837))
                                    {
                                      if (v114 > BYTE3(v837))
                                        goto LABEL_232;
                                      v115 = *(unsigned __int8 *)(v66 + 124);
                                      if (v115 >= BYTE4(v837))
                                      {
                                        if (v115 > BYTE4(v837))
                                          goto LABEL_232;
                                        v116 = *(unsigned __int8 *)(v66 + 125);
                                        if (v116 >= BYTE5(v837))
                                        {
                                          if (v116 > BYTE5(v837))
                                            goto LABEL_232;
                                          v117 = *(unsigned __int8 *)(v66 + 126);
                                          if (v117 >= BYTE6(v837))
                                          {
                                            if (v117 > BYTE6(v837))
                                              goto LABEL_232;
                                            v118 = *(unsigned __int8 *)(v66 + 127);
                                            if (v118 >= v735)
                                            {
                                              if (v118 > v735)
                                                goto LABEL_232;
                                              v119 = *(unsigned __int8 *)(v66 + 128);
                                              if (v119 >= v110)
                                              {
                                                if (v119 > v110)
                                                  goto LABEL_232;
                                                v120 = *(unsigned __int8 *)(v66 + 129);
                                                if (v120 >= v56)
                                                {
                                                  if (v120 > v56)
                                                    goto LABEL_232;
                                                  v121 = *(unsigned __int8 *)(v66 + 130);
                                                  if (v121 >= v812)
                                                  {
                                                    if (v121 > v812)
                                                      goto LABEL_232;
                                                    v122 = *(unsigned __int8 *)(v66 + 131);
                                                    if (v122 >= v811[12])
                                                    {
                                                      if (v122 > v811[12])
                                                        goto LABEL_232;
                                                      v123 = *(unsigned __int8 *)(v66 + 132);
                                                      if (v123 >= v811[8])
                                                      {
                                                        if (v123 > v811[8])
                                                          goto LABEL_232;
                                                        v124 = *(unsigned __int8 *)(v66 + 133);
                                                        if (v124 >= v811[4])
                                                        {
                                                          if (v124 > v811[4])
                                                            goto LABEL_232;
                                                          v125 = *(unsigned __int8 *)(v66 + 134);
                                                          if (v125 >= v811[0])
                                                          {
                                                            if (v125 > v811[0])
                                                              goto LABEL_232;
                                                            v126 = *(unsigned __int8 *)(v66 + 135);
                                                            if (v126 >= v810)
                                                            {
                                                              if (v126 > v810)
                                                                goto LABEL_232;
                                                              v127 = *(unsigned __int8 *)(v66 + 136);
                                                              if (v127 >= v809)
                                                              {
                                                                if (v127 > v809)
                                                                  goto LABEL_232;
                                                                v128 = *(unsigned __int8 *)(v66 + 137);
                                                                if (v128 >= v808)
                                                                {
                                                                  if (v128 > v808)
                                                                    goto LABEL_232;
                                                                  v129 = *(unsigned __int8 *)(v66 + 138);
                                                                  if (v129 >= v807
                                                                    && (v129 > v807
                                                                     || *(unsigned __int8 *)(v66 + 139) >= v806))
                                                                  {
                                                                    goto LABEL_232;
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      v825 += 80;
                      v55 = v834[17];
                      if ((_DWORD)v818 != HIDWORD(v818))
                      {
                        while (1)
                        {
                          v81 = *(unsigned __int8 *)(v67 + 8);
                          if (v81 >= v821)
                          {
                            v825 = v67;
                            if (v81 > v821)
                              goto LABEL_124;
                            v82 = *(unsigned __int8 *)(v67 + 9);
                            if (v82 >= v834[9])
                            {
                              if (v82 > v834[9])
                                goto LABEL_124;
                              v83 = *(unsigned __int8 *)(v67 + 10);
                              if (v83 >= v834[10])
                              {
                                if (v83 > v834[10])
                                  goto LABEL_124;
                                v84 = *(unsigned __int8 *)(v67 + 11);
                                if (v84 >= v834[11])
                                {
                                  if (v84 > v834[11])
                                    goto LABEL_124;
                                  v85 = *(unsigned __int8 *)(v67 + 12);
                                  if (v85 >= v834[12])
                                  {
                                    if (v85 > v834[12])
                                      goto LABEL_124;
                                    v86 = *(unsigned __int8 *)(v67 + 13);
                                    if (v86 >= v834[13])
                                    {
                                      if (v86 > v834[13])
                                        goto LABEL_124;
                                      v87 = *(unsigned __int8 *)(v67 + 14);
                                      if (v87 >= v834[14])
                                      {
                                        if (v87 > v834[14])
                                          goto LABEL_124;
                                        v88 = *(unsigned __int8 *)(v67 + 15);
                                        if (v88 >= v738)
                                        {
                                          if (v88 > v738)
                                            goto LABEL_124;
                                          v89 = *(unsigned __int8 *)(v67 + 16);
                                          if (v89 >= v828)
                                          {
                                            if (v89 > v828)
                                              goto LABEL_124;
                                            v90 = *(unsigned __int8 *)(v67 + 17);
                                            if (v90 >= v827)
                                            {
                                              if (v90 > v827)
                                                goto LABEL_124;
                                              v91 = *(unsigned __int8 *)(v67 + 18);
                                              if (v91 >= v826)
                                              {
                                                if (v91 > v826)
                                                  goto LABEL_124;
                                                v92 = *(unsigned __int8 *)(v67 + 19);
                                                if (v92 >= v5)
                                                {
                                                  if (v92 > v5)
                                                    goto LABEL_124;
                                                  v93 = *(unsigned __int8 *)(v67 + 20);
                                                  if (v93 >= v4)
                                                  {
                                                    if (v93 > v4)
                                                      goto LABEL_124;
                                                    v94 = *(unsigned __int8 *)(v67 + 21);
                                                    if (v94 >= v16)
                                                    {
                                                      if (v94 > v16)
                                                        goto LABEL_124;
                                                      v95 = *(unsigned __int8 *)(v67 + 22);
                                                      if (v95 >= v20)
                                                      {
                                                        if (v95 > v20)
                                                          goto LABEL_124;
                                                        v96 = *(unsigned __int8 *)(v67 + 23);
                                                        if (v96 >= v9)
                                                        {
                                                          if (v96 > v9)
                                                            goto LABEL_124;
                                                          v97 = *(unsigned __int8 *)(v67 + 24);
                                                          if (v97 >= v48)
                                                          {
                                                            if (v97 > v48)
                                                              goto LABEL_124;
                                                            v98 = *(unsigned __int8 *)(v67 + 25);
                                                            if (v98 >= v14)
                                                            {
                                                              if (v98 > v14)
                                                              {
LABEL_124:
                                                                v73 = (unint64_t *)(v67 + 8);
                                                                v66 = v67 - 80;
                                                                goto LABEL_125;
                                                              }
                                                              v99 = *(unsigned __int8 *)(v67 + 26);
                                                              if (v99 >= v8)
                                                                break;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          v66 = v67;
                          v77 = *(_DWORD *)(v67 + 80);
                          v67 += 80;
                          v68 = v77;
                          if (v54 != *(_DWORD *)v834)
                          {
                            v65 = HIBYTE(v835);
                            LODWORD(v8) = BYTE2(v835);
                            LODWORD(v14) = BYTE1(v835);
                            LODWORD(v48) = v835;
                            LODWORD(v9) = v834[23];
                            LODWORD(v20) = v834[22];
                            LODWORD(v16) = v834[21];
                            LODWORD(v4) = v834[20];
                            LODWORD(v5) = v834[19];
                          }
                          v78 = v826;
                          if (v54 != *(_DWORD *)v834)
                            v78 = v834[18];
                          LODWORD(v826) = v78;
                          v79 = v827;
                          if (v54 != *(_DWORD *)v834)
                            v79 = v55;
                          LODWORD(v827) = v79;
                          v80 = v828;
                          if (v54 != *(_DWORD *)v834)
                            v80 = v834[16];
                          v55 = v834[17];
                          LODWORD(v828) = v80;
                          v72 = v68 >> 31;
                          if (v68 >> 31 == v68)
                          {
                            v73 = (unint64_t *)(v67 + 8);
                            v825 = v67;
                            if ((_DWORD)v818 != HIDWORD(v818))
                              goto LABEL_56;
                            goto LABEL_66;
                          }
                        }
                        v73 = (unint64_t *)(v67 + 8);
                        v66 = v67 - 80;
                        if (v99 <= v8
                          && *(unsigned __int8 *)(v67 + 27) < v65)
                        {
                          goto LABEL_56;
                        }
                      }
LABEL_125:
                      v57 = *(unsigned __int8 *)(v66 + 96);
                      LOBYTE(v776) = *(_BYTE *)(v66 + 97);
                      v58 = *(unsigned __int8 *)(v66 + 98);
                      v59 = *(unsigned __int8 *)(v66 + 99);
                      v60 = *(unsigned __int8 *)(v66 + 100);
                      v61 = *(unsigned __int8 *)(v66 + 101);
                      v62 = *(unsigned __int8 *)(v66 + 102);
                      v63 = *(unsigned __int8 *)(v66 + 103);
                      v64 = *(unsigned __int8 *)(v66 + 104);
                      v775 = *(_BYTE *)(v66 + 105);
                      LOBYTE(v774) = *(_BYTE *)(v66 + 106);
                      v773 = *(_BYTE *)(v66 + 107);
                      v74 = *v73;
                      v75 = v72 ^ v68;
                      v76 = (v72 ^ v68) >> 31;
                      if (v54 == *(_DWORD *)v834)
                        goto LABEL_68;
LABEL_126:
                      if (v76 == v75)
                        goto LABEL_164;
                      if (v821 >= v74)
                      {
                        if (v821 > v74)
                          goto LABEL_164;
                        if (v834[9] >= BYTE1(v74))
                        {
                          if (v834[9] > BYTE1(v74))
                            goto LABEL_164;
                          if (v834[10] >= BYTE2(v74))
                          {
                            if (v834[10] > BYTE2(v74))
                              goto LABEL_164;
                            if (v834[11] >= BYTE3(v74))
                            {
                              if (v834[11] > BYTE3(v74))
                                goto LABEL_164;
                              if (v834[12] >= BYTE4(v74))
                              {
                                if (v834[12] > BYTE4(v74))
                                  goto LABEL_164;
                                if (v834[13] >= BYTE5(v74))
                                {
                                  if (v834[13] > BYTE5(v74))
                                    goto LABEL_164;
                                  if (v834[14] >= BYTE6(v74))
                                  {
                                    if (v834[14] > BYTE6(v74))
                                      goto LABEL_164;
                                    if (v738 >= HIBYTE(v74))
                                    {
                                      if (v738 > HIBYTE(v74))
                                        goto LABEL_164;
                                      if (v834[16] >= v57)
                                      {
                                        v55 = v834[17];
                                        if (v834[16] > v57
                                          || v834[17] >= v776
                                          && (v834[17] > v776
                                           || v834[18] >= v58
                                           && (v834[18] > v58
                                            || v834[19] >= v59
                                            && (v834[19] > v59
                                             || v834[20] >= v60
                                             && (v834[20] > v60
                                              || v834[21] >= v61
                                              && (v834[21] > v61
                                               || v834[22] >= v62
                                               && (v834[22] > v62
                                                || v834[23] >= v63
                                                && (v834[23] > v63
                                                 || v835 >= v64
                                                 && (v835 > v64
                                                  || BYTE1(v835) >= v775
                                                  && (BYTE1(v835) > v775
                                                   || v822 >= __PAIR64__(v774, v773)))))))))))
                                        {
                                          goto LABEL_164;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
LABEL_232:
                      v792 = __PAIR64__(v9, v14);
                      LODWORD(v797) = v48;
                      v793 = __PAIR64__(v16, v20);
                      v796 = v4;
                      v794 = __PAIR64__(v8, v5);
                      LODWORD(v817) = *(int *)v834 >> 31;
                      v740 = v64;
                      v741 = __PAIR64__(v62, v63);
                      v742 = __PAIR64__(v60, v61);
                      v743 = __PAIR64__(v58, v59);
                      v744 = __PAIR64__(v56, v57);
                      v130 = v816;
                      v131 = HIDWORD(v817);
                      v132 = v834[20];
                      while (2)
                      {
                        v133 = 0;
                        v816 = v130;
                        v134 = v799;
                        v135 = v798;
                        v136 = v801;
                        v137 = v814;
                        v138 = v763;
                        v139 = v803;
                        v140 = v762;
                        v141 = v802;
                        v142 = v761;
                        v143 = v760;
                        v144 = v834[16];
                        v145 = v834[17];
                        v146 = v834[18];
                        v147 = v132;
                        v148 = v834[21];
                        v149 = v834[22];
                        v150 = v834[23];
                        v151 = HIBYTE(v835);
                        v152 = BYTE1(v835);
                        v153 = BYTE2(v835);
                        v154 = v835;
                        v155 = v800;
                        while (1)
                        {
                          v819 = v133;
                          v156 = v130 + v133;
                          if ((_DWORD)v817 != *(_DWORD *)v834)
                            v137 = v144;
                          LODWORD(v814) = v137;
                          if ((_DWORD)v817 == *(_DWORD *)v834)
                            v157 = v138;
                          else
                            v157 = v145;
                          if ((_DWORD)v817 != *(_DWORD *)v834)
                            v139 = v146;
                          LODWORD(v803) = v139;
                          if ((_DWORD)v817 != *(_DWORD *)v834)
                          {
                            v140 = v834[19];
                            v141 = v147;
                          }
                          LODWORD(v802) = v141;
                          if ((_DWORD)v817 != *(_DWORD *)v834)
                          {
                            v142 = v148;
                            v143 = v149;
                            v135 = v150;
                            v131 = v154;
                          }
                          HIDWORD(v817) = v131;
                          if ((_DWORD)v817 != *(_DWORD *)v834)
                            v136 = v152;
                          v801 = v136;
                          if ((_DWORD)v817 != *(_DWORD *)v834)
                          {
                            v155 = v153;
                            v134 = v151;
                          }
                          LODWORD(v799) = v134;
                          v158 = *(_DWORD *)(v156 - 80);
                          v159 = v158 >> 31;
                          LODWORD(v798) = v135;
                          v160 = v145;
                          v132 = v147;
                          v800 = v155;
                          if (v158 >> 31 == v158)
                          {
                            LODWORD(v5) = v794;
                            LODWORD(v16) = HIDWORD(v793);
                            LODWORD(v20) = v793;
                            LODWORD(v9) = HIDWORD(v792);
                            LODWORD(v48) = v797;
                            LODWORD(v14) = v792;
                            if ((_DWORD)v818 != HIDWORD(v818))
                            {
                              LODWORD(v4) = v796;
LABEL_415:
                              v52 = v777;
                              v51 = v130;
                              LODWORD(v8) = HIDWORD(v794);
                              goto LABEL_54;
                            }
                            v161 = *(_QWORD *)(v156 - 72);
                            LODWORD(v4) = v796;
                            if (v161 < *(_QWORD *)&v834[8])
                              goto LABEL_415;
                            v162 = v834[18];
                            LODWORD(v8) = HIDWORD(v794);
                            v163 = 0;
                            v164 = 0;
                            v165 = v834[16];
                            if ((_DWORD)v817 == *(_DWORD *)v834)
                              goto LABEL_339;
                          }
                          else
                          {
                            v162 = v834[18];
                            LODWORD(v5) = v794;
                            LODWORD(v16) = HIDWORD(v793);
                            LODWORD(v20) = v793;
                            LODWORD(v9) = HIDWORD(v792);
                            LODWORD(v48) = v797;
                            LODWORD(v14) = v792;
                            v51 = v130;
                            LODWORD(v8) = HIDWORD(v794);
                            if ((_DWORD)v818 != HIDWORD(v818))
                            {
                              v166 = *(unsigned __int8 *)(v156 - 72);
                              v167 = v166 > v821;
                              if (v166 < v821)
                                goto LABEL_53;
                              v51 = v816;
                              if (!v167)
                              {
                                v168 = *(unsigned __int8 *)(v816 + v819 - 71);
                                v169 = v168 > v834[9];
                                if (v168 < v834[9])
                                  goto LABEL_53;
                                v51 = v816;
                                if (!v169)
                                {
                                  v170 = *(unsigned __int8 *)(v816 + v819 - 70);
                                  v171 = v170 > v834[10];
                                  if (v170 < v834[10])
                                    goto LABEL_53;
                                  v51 = v816;
                                  if (!v171)
                                  {
                                    v172 = *(unsigned __int8 *)(v816 + v819 - 69);
                                    v173 = v172 > v834[11];
                                    if (v172 < v834[11])
                                      goto LABEL_53;
                                    v51 = v816;
                                    if (!v173)
                                    {
                                      v174 = *(unsigned __int8 *)(v816 + v819 - 68);
                                      v175 = v174 > v834[12];
                                      if (v174 < v834[12])
                                        goto LABEL_53;
                                      v51 = v816;
                                      if (!v175)
                                      {
                                        v176 = *(unsigned __int8 *)(v816 + v819 - 67);
                                        v177 = v176 > v834[13];
                                        if (v176 < v834[13])
                                          goto LABEL_53;
                                        v51 = v816;
                                        if (!v177)
                                        {
                                          v178 = *(unsigned __int8 *)(v816 + v819 - 66);
                                          v179 = v178 > v834[14];
                                          if (v178 < v834[14])
                                            goto LABEL_53;
                                          v51 = v816;
                                          if (!v179)
                                          {
                                            v180 = *(unsigned __int8 *)(v816 + v819 - 65);
                                            v181 = v180 > v738;
                                            if (v180 < v738)
                                              goto LABEL_53;
                                            v51 = v816;
                                            if (!v181)
                                            {
                                              v182 = *(unsigned __int8 *)(v816 + v819 - 64);
                                              v183 = v182 > v814;
                                              if (v182 < v814)
                                                goto LABEL_53;
                                              v51 = v816;
                                              if (!v183)
                                              {
                                                v184 = *(unsigned __int8 *)(v816 + v819 - 63);
                                                v185 = v184 > v157;
                                                if (v184 < v157)
                                                  goto LABEL_53;
                                                v51 = v816;
                                                if (!v185)
                                                {
                                                  v186 = *(unsigned __int8 *)(v816 + v819 - 62);
                                                  v187 = v186 > v139;
                                                  if (v186 < v139)
                                                    goto LABEL_53;
                                                  v51 = v816;
                                                  if (!v187)
                                                  {
                                                    v188 = *(unsigned __int8 *)(v816 + v819 - 61);
                                                    v189 = v188 > v140;
                                                    if (v188 < v140)
                                                      goto LABEL_53;
                                                    v51 = v816;
                                                    if (!v189)
                                                    {
                                                      v190 = *(unsigned __int8 *)(v816 + v819 - 60);
                                                      v191 = v190 > v141;
                                                      if (v190 < v141)
                                                        goto LABEL_53;
                                                      v51 = v816;
                                                      if (!v191)
                                                      {
                                                        v192 = *(unsigned __int8 *)(v816 + v819 - 59);
                                                        v193 = v192 > v142;
                                                        if (v192 < v142)
                                                          goto LABEL_53;
                                                        v51 = v816;
                                                        if (!v193)
                                                        {
                                                          v194 = *(unsigned __int8 *)(v816 + v819 - 58);
                                                          v195 = v194 > v143;
                                                          if (v194 < v143)
                                                            goto LABEL_53;
                                                          v51 = v816;
                                                          if (!v195)
                                                          {
                                                            v196 = *(unsigned __int8 *)(v816 + v819 - 57);
                                                            v197 = v196 > v135;
                                                            if (v196 < v135)
                                                              goto LABEL_53;
                                                            v51 = v816;
                                                            if (!v197)
                                                            {
                                                              v198 = *(unsigned __int8 *)(v816 + v819 - 56);
                                                              v199 = v198 > BYTE4(v817);
                                                              if (v198 < BYTE4(v817))
                                                                goto LABEL_53;
                                                              v51 = v816;
                                                              if (!v199)
                                                              {
                                                                v200 = *(unsigned __int8 *)(v816 + v819 - 55);
                                                                v201 = v200 > v136;
                                                                if (v200 < v136)
                                                                  goto LABEL_53;
                                                                v51 = v816;
                                                                if (!v201)
                                                                {
                                                                  v202 = *(unsigned __int8 *)(v816 + v819 - 54);
                                                                  v203 = v202 > v800;
                                                                  if (v202 < v800)
                                                                  {
LABEL_53:
                                                                    v51 = v816;
                                                                    LODWORD(v4) = v796;
                                                                    v52 = v777;
                                                                    goto LABEL_54;
                                                                  }
                                                                  v51 = v816;
                                                                  if (!v203)
                                                                  {
                                                                    v51 = v816;
                                                                    if (*(unsigned __int8 *)(v816 + v819 - 53) < v799)
                                                                    {
                                                                      LODWORD(v4) = v796;
                                                                      v52 = v777;
                                                                      goto LABEL_54;
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            v204 = v51 + v819;
                            v777 = *(unsigned __int8 *)(v204 - 64);
                            v772 = *(_BYTE *)(v204 - 63);
                            LOBYTE(v771) = *(_BYTE *)(v204 - 62);
                            BYTE4(v770) = *(_BYTE *)(v204 - 61);
                            LOBYTE(v770) = *(_BYTE *)(v204 - 60);
                            BYTE4(v769) = *(_BYTE *)(v204 - 59);
                            LOBYTE(v769) = *(_BYTE *)(v204 - 58);
                            BYTE4(v768) = *(_BYTE *)(v204 - 57);
                            LOBYTE(v768) = *(_BYTE *)(v204 - 56);
                            BYTE4(v767) = *(_BYTE *)(v204 - 55);
                            LOBYTE(v767) = *(_BYTE *)(v204 - 54);
                            LOBYTE(v766) = *(_BYTE *)(v204 - 53);
                            v161 = *(_QWORD *)(v156 - 72);
                            LODWORD(v4) = v796;
                            v163 = v159 ^ v158;
                            v164 = (v159 ^ v158) >> 31;
                            v165 = v834[16];
                            if ((_DWORD)v817 == *(_DWORD *)v834)
                            {
LABEL_339:
                              v131 = HIDWORD(v817);
                              if (v164 != v163)
                              {
                                v51 = v816;
                                goto LABEL_394;
                              }
                              v205 = v816;
                              if (*(_QWORD *)&v834[8] < v161)
                              {
                                v51 = v816;
                                goto LABEL_394;
                              }
                              goto LABEL_341;
                            }
                          }
                          v131 = HIDWORD(v817);
                          if (v164 == v163)
                            goto LABEL_338;
                          if (v821 >= v161)
                          {
                            if (v821 > v161)
                              goto LABEL_338;
                            if (v834[9] >= BYTE1(v161))
                            {
                              if (v834[9] > BYTE1(v161))
                                goto LABEL_338;
                              if (v834[10] >= BYTE2(v161))
                              {
                                if (v834[10] > BYTE2(v161))
                                  goto LABEL_338;
                                if (v834[11] >= BYTE3(v161))
                                {
                                  if (v834[11] > BYTE3(v161))
                                    goto LABEL_338;
                                  if (v834[12] >= BYTE4(v161))
                                  {
                                    if (v834[12] > BYTE4(v161))
                                      goto LABEL_338;
                                    if (v834[13] >= BYTE5(v161))
                                    {
                                      if (v834[13] > BYTE5(v161))
                                        goto LABEL_338;
                                      if (v834[14] >= BYTE6(v161))
                                      {
                                        if (v834[14] > BYTE6(v161))
                                          goto LABEL_338;
                                        if (v738 >= HIBYTE(v161))
                                        {
                                          if (v738 > HIBYTE(v161))
                                            goto LABEL_338;
                                          if (v165 >= v777)
                                          {
                                            if (v165 > v777)
                                              goto LABEL_338;
                                            if (v160 >= v772)
                                            {
                                              if (v160 > v772)
                                                goto LABEL_338;
                                              if (v162 >= v771)
                                              {
                                                if (v162 > v771)
                                                  goto LABEL_338;
                                                if (v834[19] >= BYTE4(v770))
                                                {
                                                  if (v834[19] > BYTE4(v770))
                                                    goto LABEL_338;
                                                  if (v147 >= v770)
                                                  {
                                                    if (v147 > v770)
                                                      goto LABEL_338;
                                                    if (v834[21] >= BYTE4(v769))
                                                    {
                                                      if (v834[21] > BYTE4(v769))
                                                        goto LABEL_338;
                                                      if (v834[22] >= v769)
                                                      {
                                                        if (v834[22] > v769)
                                                          goto LABEL_338;
                                                        if (v834[23] >= BYTE4(v768))
                                                        {
                                                          if (v834[23] > BYTE4(v768))
                                                            goto LABEL_338;
                                                          if (v835 >= v768)
                                                          {
                                                            if (v835 > v768)
                                                              goto LABEL_338;
                                                            if (BYTE1(v835) >= BYTE4(v767))
                                                            {
                                                              if (BYTE1(v835) > BYTE4(v767))
                                                              {
LABEL_338:
                                                                v205 = v816 + v819;
                                                                goto LABEL_341;
                                                              }
                                                              if (BYTE2(v835) >= v767)
                                                                break;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          v133 = v819 - 80;
                          v137 = v165;
                          v138 = v160;
                          v139 = v162;
                          v140 = v834[19];
                          v141 = v147;
                          v142 = v834[21];
                          v149 = v834[22];
                          v143 = v834[22];
                          v150 = v834[23];
                          v135 = v834[23];
                          v154 = v835;
                          v131 = v835;
                          v148 = v834[21];
                          v146 = v162;
                          v145 = v160;
                          v144 = v165;
                          v152 = BYTE1(v835);
                          v136 = BYTE1(v835);
                          v153 = BYTE2(v835);
                          v155 = BYTE2(v835);
                          v151 = HIBYTE(v835);
                          v134 = HIBYTE(v835);
                          v130 = v816;
                        }
                        v205 = v816 + v819;
                        if (BYTE2(v835) <= v767
                          && HIBYTE(v835) < v766)
                        {
                          v51 = v816;
LABEL_394:
                          LODWORD(v760) = v143;
                          v761 = v142;
                          v762 = v140;
                          v763 = v157;
                          v130 = v51 + v819 - 80;
                          continue;
                        }
                        break;
                      }
LABEL_341:
                      v206 = v750;
                      if ((_DWORD)v790 != v836)
                        v206 = HIBYTE(v838);
                      v750 = v206;
                      v207 = v751;
                      if ((_DWORD)v790 != v836)
                        v207 = BYTE2(v838);
                      v751 = v207;
                      v208 = v752;
                      if ((_DWORD)v790 != v836)
                        v208 = BYTE1(v838);
                      v752 = v208;
                      v209 = v753;
                      if ((_DWORD)v790 != v836)
                        v209 = v838;
                      v753 = v209;
                      v210 = v754;
                      if ((_DWORD)v790 != v836)
                        v210 = HIBYTE(v837);
                      v754 = v210;
                      v211 = v755;
                      if ((_DWORD)v790 != v836)
                        v211 = BYTE14(v837);
                      v755 = v211;
                      v212 = v756;
                      if ((_DWORD)v790 != v836)
                        v212 = BYTE13(v837);
                      v756 = v212;
                      v213 = v757;
                      if ((_DWORD)v790 != v836)
                        v213 = BYTE12(v837);
                      v757 = v213;
                      v214 = v758;
                      if ((_DWORD)v790 != v836)
                        v214 = BYTE11(v837);
                      v215 = v759;
                      if ((_DWORD)v790 != v836)
                        v215 = BYTE10(v837);
                      LODWORD(v759) = v215;
                      v216 = v748;
                      if ((_DWORD)v790 == v836)
                      {
                        v217 = v749;
                      }
                      else
                      {
                        v216 = BYTE9(v837);
                        v217 = BYTE8(v837);
                      }
                      v749 = v217;
                      v748 = v216;
                      v758 = v214;
                      if (*(_DWORD *)(v205 - 48) != *(int *)(v205 - 48) >> 31)
                      {
                        if (v779 != v780)
                        {
                          v218 = *(unsigned __int8 *)(v205 - 40);
                          LODWORD(v48) = v797;
                          if (v218 < v837)
                            goto LABEL_417;
                          if (v218 <= v837)
                          {
                            v219 = *(unsigned __int8 *)(v205 - 39);
                            if (v219 < BYTE1(v837))
                              goto LABEL_417;
                            if (v219 <= BYTE1(v837))
                            {
                              v220 = *(unsigned __int8 *)(v205 - 38);
                              if (v220 < BYTE2(v837))
                                goto LABEL_417;
                              if (v220 <= BYTE2(v837))
                              {
                                v221 = *(unsigned __int8 *)(v205 - 37);
                                if (v221 < BYTE3(v837))
                                  goto LABEL_417;
                                if (v221 <= BYTE3(v837))
                                {
                                  v222 = *(unsigned __int8 *)(v205 - 36);
                                  if (v222 < BYTE4(v837))
                                    goto LABEL_417;
                                  if (v222 <= BYTE4(v837))
                                  {
                                    v223 = *(unsigned __int8 *)(v205 - 35);
                                    if (v223 < BYTE5(v837))
                                      goto LABEL_417;
                                    if (v223 <= BYTE5(v837))
                                    {
                                      v224 = *(unsigned __int8 *)(v205 - 34);
                                      if (v224 < BYTE6(v837))
                                        goto LABEL_417;
                                      if (v224 <= BYTE6(v837))
                                      {
                                        v225 = *(unsigned __int8 *)(v205 - 33);
                                        if (v225 < v735)
                                          goto LABEL_417;
                                        if (v225 <= v735)
                                        {
                                          v226 = *(unsigned __int8 *)(v205 - 32);
                                          if (v226 < v217)
                                            goto LABEL_417;
                                          if (v226 <= v217)
                                          {
                                            v227 = *(unsigned __int8 *)(v205 - 31);
                                            if (v227 < v216)
                                              goto LABEL_417;
                                            if (v227 <= v216)
                                            {
                                              v228 = *(unsigned __int8 *)(v205 - 30);
                                              if (v228 < v759)
                                                goto LABEL_417;
                                              v132 = v834[20];
                                              if (v228 <= v759)
                                              {
                                                v229 = *(unsigned __int8 *)(v205 - 29);
                                                if (v229 >= v214)
                                                {
                                                  if (v229 > v214)
                                                    goto LABEL_393;
                                                  v230 = *(unsigned __int8 *)(v205 - 28);
                                                  if (v230 >= v757)
                                                  {
                                                    if (v230 > v757)
                                                      goto LABEL_411;
                                                    v231 = *(unsigned __int8 *)(v205 - 27);
                                                    if (v231 >= v756)
                                                    {
                                                      if (v231 > v756)
                                                        goto LABEL_411;
                                                      v232 = *(unsigned __int8 *)(v205 - 26);
                                                      if (v232 >= v755)
                                                      {
                                                        if (v232 > v755)
                                                          goto LABEL_411;
                                                        v233 = *(unsigned __int8 *)(v205 - 25);
                                                        if (v233 >= v754)
                                                        {
                                                          if (v233 > v754)
                                                            goto LABEL_411;
                                                          v234 = *(unsigned __int8 *)(v205 - 24);
                                                          if (v234 >= v753)
                                                          {
                                                            if (v234 <= v753)
                                                            {
                                                              v235 = *(unsigned __int8 *)(v205 - 23);
                                                              if (v235 < v752)
                                                                goto LABEL_418;
                                                              if (v235 > v752)
                                                                goto LABEL_411;
                                                              v236 = *(unsigned __int8 *)(v205 - 22);
                                                              if (v236 < v751)
                                                              {
LABEL_418:
                                                                v51 = v816;
                                                                v52 = v777;
                                                                LODWORD(v5) = v794;
                                                                LODWORD(v4) = v796;
                                                                LODWORD(v16) = HIDWORD(v793);
                                                                LODWORD(v20) = v793;
                                                                LODWORD(v9) = HIDWORD(v792);
                                                                LODWORD(v48) = v797;
                                                                LODWORD(v14) = v792;
                                                                LODWORD(v8) = HIDWORD(v794);
                                                                goto LABEL_54;
                                                              }
                                                              if (v236 <= v751)
                                                              {
                                                                v51 = v816;
                                                                v131 = HIDWORD(v817);
                                                                v132 = v834[20];
                                                                LODWORD(v5) = v794;
                                                                LODWORD(v4) = v796;
                                                                LODWORD(v16) = HIDWORD(v793);
                                                                LODWORD(v20) = v793;
                                                                LODWORD(v9) = HIDWORD(v792);
                                                                LODWORD(v14) = v792;
                                                                LODWORD(v8) = HIDWORD(v794);
                                                                if (*(unsigned __int8 *)(v205 - 21) >= v750)
                                                                  goto LABEL_394;
                                                                goto LABEL_413;
                                                              }
                                                            }
LABEL_411:
                                                            v51 = v816;
                                                            v131 = HIDWORD(v817);
                                                            v132 = v834[20];
                                                            goto LABEL_394;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
LABEL_417:
                                                v51 = v816;
                                                v52 = v777;
                                                goto LABEL_54;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
LABEL_393:
                        v51 = v816;
                        v131 = HIDWORD(v817);
                        goto LABEL_394;
                      }
                      if (v779 == v780)
                      {
                        v51 = v816;
                        v131 = HIDWORD(v817);
                        if (*(_QWORD *)(v205 - 40) >= (unint64_t)v837)
                          goto LABEL_394;
LABEL_413:
                        v52 = v777;
                        LODWORD(v48) = v797;
                      }
                      else
                      {
                        v51 = v816;
                        v52 = v777;
                        LODWORD(v48) = v797;
                      }
LABEL_54:
                      v739 = v65;
                      LODWORD(v760) = v143;
                      v761 = v142;
                      v762 = v140;
                      v763 = v157;
                      v777 = v52;
                      v50 = v51 + v819 - 80;
                      a1 = v825;
                      if (v825 >= v50)
                        goto LABEL_420;
                    }
                  }
                  a1 = (unint64_t)&v16[v30 + 20];
LABEL_420:
                  v10 = (int *)(a1 - 80);
                  v237 = v745;
                  a3 = v733;
                  v8 = &v834[8];
                  v9 = &v846[8];
                  if (a1 - 80 != v745)
                  {
                    if (*(_DWORD *)v745 == *v10)
                    {
                      v238 = (_QWORD *)(a1 - 72);
                      if (*(_DWORD *)v745 == *(int *)v745 >> 31)
                      {
                        *(_QWORD *)v730 = *v238;
                        v239 = *(_DWORD *)(v745 + 32);
                        v240 = *(_DWORD *)(a1 - 48);
                        if (v239 != v240)
                        {
LABEL_424:
                          v241 = v240 ^ (v240 >> 31);
                          v242 = (__int128 *)(a1 - 40);
                          if (v241)
                          {
                            v243 = *v242;
                            *(_DWORD *)(v729 + 16) = *(_DWORD *)(a1 - 24);
                            *(_OWORD *)v729 = v243;
                            *(_DWORD *)(v745 + 32) = v241;
                          }
                          else
                          {
                            *(_QWORD *)(v745 + 40) = *(_QWORD *)v242;
                            *(_DWORD *)(v745 + 32) = 0;
                          }
                          goto LABEL_434;
                        }
                      }
                      else
                      {
                        v248 = *(_OWORD *)v238;
                        *(_DWORD *)(v730 + 16) = *(_DWORD *)(a1 - 56);
                        *(_OWORD *)v730 = v248;
                        v239 = *(_DWORD *)(v745 + 32);
                        v240 = *(_DWORD *)(a1 - 48);
                        if (v239 != v240)
                          goto LABEL_424;
                      }
                    }
                    else
                    {
                      v244 = *v10 ^ (*v10 >> 31);
                      v245 = (__int128 *)(a1 - 72);
                      if (v244)
                      {
                        v246 = *v245;
                        *(_DWORD *)(v730 + 16) = *(_DWORD *)(a1 - 56);
                        *(_OWORD *)v730 = v246;
                        *(_DWORD *)v745 = v244;
                        v239 = *(_DWORD *)(v745 + 32);
                        v240 = *(_DWORD *)(a1 - 48);
                        if (v239 != v240)
                          goto LABEL_424;
                      }
                      else
                      {
                        *(_QWORD *)(v745 + 8) = *(_QWORD *)v245;
                        *(_DWORD *)v745 = 0;
                        v239 = *(_DWORD *)(v745 + 32);
                        v240 = *(_DWORD *)(a1 - 48);
                        if (v239 != v240)
                          goto LABEL_424;
                      }
                    }
                    v247 = (_QWORD *)(a1 - 40);
                    if (v239 == v239 >> 31)
                    {
                      *(_QWORD *)v729 = *v247;
                    }
                    else
                    {
                      v249 = *(_OWORD *)v247;
                      *(_DWORD *)(v729 + 16) = *(_DWORD *)(a1 - 24);
                      *(_OWORD *)v729 = v249;
                    }
LABEL_434:
                    v250 = *(_QWORD *)(a1 - 16);
                    *(_DWORD *)(v734 + 8) = *(_DWORD *)(a1 - 8);
                    *(_QWORD *)v734 = v250;
                  }
                  if (*v10 == *(_DWORD *)v834)
                  {
                    v251 = (_QWORD *)(a1 - 72);
                    if (*v10 == *v10 >> 31)
                    {
                      *v251 = *(_QWORD *)&v834[8];
                      v252 = *(_DWORD *)(a1 - 48);
                      v253 = v836;
                      if (v252 != v836)
                      {
LABEL_438:
                        v254 = v253 ^ (v253 >> 31);
                        if (v254)
                        {
                          v255 = a1 - 40;
                          v256 = v837;
                          *(_DWORD *)(v255 + 16) = v838;
                          *(_OWORD *)v255 = v256;
                          *(_DWORD *)(a1 - 48) = v254;
                        }
                        else
                        {
                          *(_QWORD *)(a1 - 40) = v837;
                          *(_DWORD *)(a1 - 48) = 0;
                        }
                        goto LABEL_448;
                      }
                    }
                    else
                    {
                      v261 = *(_OWORD *)&v834[8];
                      *(_DWORD *)(a1 - 56) = v835;
                      *(_OWORD *)v251 = v261;
                      v252 = *(_DWORD *)(a1 - 48);
                      v253 = v836;
                      if (v252 != v836)
                        goto LABEL_438;
                    }
                  }
                  else
                  {
                    v257 = *(_DWORD *)v834 ^ (*(int *)v834 >> 31);
                    v258 = (_OWORD *)(a1 - 72);
                    if (v257)
                    {
                      v259 = *(_OWORD *)&v834[8];
                      *(_DWORD *)(a1 - 56) = v835;
                      *v258 = v259;
                      *v10 = v257;
                      v252 = *(_DWORD *)(a1 - 48);
                      v253 = v836;
                      if (v252 != v836)
                        goto LABEL_438;
                    }
                    else
                    {
                      *(_QWORD *)v258 = *(_QWORD *)&v834[8];
                      *v10 = 0;
                      v252 = *(_DWORD *)(a1 - 48);
                      v253 = v836;
                      if (v252 != v836)
                        goto LABEL_438;
                    }
                  }
                  v260 = (_QWORD *)(a1 - 40);
                  if (v252 == v252 >> 31)
                  {
                    *v260 = v837;
                  }
                  else
                  {
                    v262 = v837;
                    *(_DWORD *)(a1 - 24) = v838;
                    *(_OWORD *)v260 = v262;
                  }
LABEL_448:
                  v263 = v839;
                  *(_DWORD *)(a1 - 8) = DWORD2(v839);
                  *(_QWORD *)(a1 - 16) = v263;
                  if (v732 >= v731)
                  {
                    LODWORD(v5) = sub_1001DEF6C(v745, a1 - 80);
                    if (sub_1001DEF6C(a1, a2))
                    {
                      if ((v5 & 1) == 0)
                        continue;
                      return;
                    }
                    v237 = v745;
                    if ((v5 & 1) != 0)
                      goto LABEL_2;
                  }
                  sub_1001D80E4(v237, a1 - 80, v733, a4 & 1);
                  a4 = 0;
                  goto LABEL_2;
                }
              }
            }
            else
            {
              if (v37 != v33)
              {
                v38 = sub_1001D7688((unsigned __int8 *)&v16[v30 + 22], &v846[8]);
                v16 = (int *)v745;
                v24 = a2;
                if (v38)
                  goto LABEL_17;
                v34 = v32[20];
                v35 = v34 >> 31;
              }
              if (v35 == v34)
                goto LABEL_29;
              v41 = *(_OWORD *)v36;
              v845 = *(_DWORD *)(v36 + 16);
              v844 = v41;
              v39 = v35 ^ v34;
              v843 = v39;
              v40 = v39 >> 31;
              if (*(_DWORD *)v834 != *(int *)v834 >> 31)
                goto LABEL_34;
LABEL_30:
              if (v40 != v39 || *(_QWORD *)&v834[8] < (unint64_t)v844)
                goto LABEL_45;
LABEL_36:
              v43 = v836 >> 31;
              if (v836 >> 31 == v836)
              {
                *(_QWORD *)&v841 = v837;
                v43 = v836;
              }
              else
              {
                v841 = v837;
                v842 = v838;
              }
              v44 = v43 ^ v836;
              v840 = v43 ^ v836;
              v45 = (unsigned __int8 *)&v16[v30 + 30];
              v46 = (v43 ^ v836) >> 31;
              if (v16[v30 + 28] == v16[v30 + 28] >> 31)
              {
                if (v46 == v44 && *(_QWORD *)v45 >= (unint64_t)v841)
                  goto LABEL_45;
              }
              else
              {
                if (v46 == v44)
                  goto LABEL_45;
                v47 = sub_1001D7688(v45, (unsigned __int8 *)&v841);
                v16 = (int *)v745;
                v24 = a2;
                if (!v47)
                  goto LABEL_45;
              }
            }
LABEL_17:
            v25 = *(_DWORD *)v834;
            v30 += 20;
            goto LABEL_18;
          }
          v265 = (_QWORD *)(v745 + 8);
          v264 = *(_DWORD *)v745;
          v266 = *(int *)v745 >> 31;
          v723 = (_QWORD *)(v745 + 8);
          if (v264 >> 31 == v264)
          {
            *(_QWORD *)&v834[8] = *v265;
            v266 = v264;
          }
          else
          {
            v267 = *(_OWORD *)v265;
            v835 = *(_DWORD *)(v745 + 24);
            *(_OWORD *)&v834[8] = v267;
          }
          *(_DWORD *)v834 = v266 ^ v264;
          v268 = *(_DWORD *)(v745 + 32);
          v269 = v268 >> 31;
          v270 = (_QWORD *)(v745 + 40);
          v724 = (_QWORD *)(v745 + 40);
          if (v268 >> 31 == v268)
          {
            *(_QWORD *)&v837 = *v270;
            v269 = v268;
          }
          else
          {
            v271 = *(_OWORD *)v270;
            v838 = *(_DWORD *)(v745 + 56);
            v837 = v271;
          }
          v836 = v269 ^ v268;
          v839 = *(_OWORD *)(v745 + 64);
          if (sub_1001DF450((uint64_t)v834, v15))
          {
            a1 = v745;
            do
              a1 += 80;
            while (!sub_1001DF450((uint64_t)v834, a1));
          }
          else
          {
            v272 = v745 + 80;
            do
            {
              a1 = v272;
              if (v272 >= a2)
                break;
              v273 = sub_1001DF450((uint64_t)v834, v272);
              v272 = a1 + 80;
            }
            while (!v273);
          }
          v274 = a2;
          if (a1 < a2)
          {
            v274 = a2;
            do
              v274 -= 80;
            while (sub_1001DF450((uint64_t)v834, v274));
          }
          if (a1 < v274)
          {
            v749 = 0;
            v748 = 0;
            v747 = 0;
            v746 = 0;
            v743 = 0;
            v744 = 0;
            v741 = 0;
            v742 = 0;
            v275 = 0;
            LODWORD(v826) = 0;
            v824 = 0uLL;
            v823 = 0;
            LODWORD(v817) = 0;
            v822 = 0;
            v276 = 0;
            LODWORD(v827) = 0;
            v781 = 0;
            v277 = 0;
            LODWORD(v4) = 0;
            HIDWORD(v820) = 0;
            v821 = 0;
            v278 = 0;
            v279 = 0;
            v778 = 0;
            v777 = 0;
            v788 = 0;
            v790 = 0;
            LODWORD(v791) = 0;
            v771 = 0;
            v769 = 0;
            v770 = 0;
            v767 = 0;
            v768 = 0;
            v766 = 0;
            v765 = 0;
            v764 = 0;
            v785 = 0;
            memset(v789, 0, sizeof(v789));
            v280 = 0;
            v281 = 0;
            v282 = 0;
            v283 = 0;
            v284 = 0;
            v285 = 0;
            v286 = 0;
            v287 = 0;
            v288 = 0;
            v289 = 0;
            v290 = 0;
            LODWORD(v291) = 0;
            v784 = 0;
            v787 = 0;
            LODWORD(v792) = 0;
            do
            {
              LODWORD(v828) = v279;
              v776 = v291;
              v800 = v290;
              LODWORD(v799) = v289;
              LODWORD(v798) = v288;
              LODWORD(v797) = v287;
              v796 = v286;
              LODWORD(v795) = v285;
              v794 = __PAIR64__(v284, v283);
              v793 = __PAIR64__(v282, v281);
              HIDWORD(v792) = v280;
              sub_1001DF660(a1, v274);
              v292 = v276;
              v293 = v817;
              *(_OWORD *)v846 = *(_OWORD *)(a1 + 64);
              v294 = *(_DWORD *)(v274 + 72);
              *(_QWORD *)(a1 + 64) = *(_QWORD *)(v274 + 64);
              *(_DWORD *)(a1 + 72) = v294;
              *(_QWORD *)(v274 + 64) = *(_QWORD *)v846;
              v804 = v274;
              *(_DWORD *)(v274 + 72) = *(_DWORD *)&v846[8];
              v773 = v834[8];
              v761 = v834[9];
              v758 = v834[11];
              v755 = v834[12];
              v752 = v834[13];
              v740 = v834[14];
              LODWORD(v813) = v834[16];
              LODWORD(v812) = v834[17];
              LODWORD(v808) = v835;
              LODWORD(v807) = BYTE1(v835);
              LODWORD(v806) = BYTE2(v835);
              v782 = v836 >> 31;
              v756 = v837;
              v753 = BYTE1(v837);
              v750 = BYTE2(v837);
              v295 = a1;
              LODWORD(v814) = v834[10];
              v775 = v834[12];
              v763 = v834[13];
              LODWORD(v803) = *(_DWORD *)&v834[8];
              v759 = HIBYTE(*(_QWORD *)&v834[8]);
              v772 = v837;
              v757 = BYTE3(v837);
              v754 = BYTE4(v837);
              v751 = BYTE5(v837);
              v739 = BYTE6(v837);
              v762 = v837;
              v737 = BYTE7(v837);
              HIDWORD(v817) = *(int *)v834 >> 31;
              LODWORD(v816) = (*(int *)v834 >> 31) ^ *(_DWORD *)v834;
              v815 = (int)v816 >> 31;
              v296 = v821;
              *(_DWORD *)&v811[12] = v834[18];
              *(_DWORD *)&v811[8] = v834[19];
              *(_DWORD *)&v811[4] = v834[20];
              *(_DWORD *)v811 = v834[21];
              LODWORD(v810) = v834[22];
              LODWORD(v809) = v834[23];
              v801 = v834[8];
              LODWORD(v802) = v834[9];
              while (1)
              {
                while (1)
                {
LABEL_479:
                  while (1)
                  {
                    v297 = v295 + 80;
                    v760 = v295;
                    v298 = v295;
                    v299 = HIDWORD(v821);
LABEL_481:
                    v300 = v275;
                    v301 = v826;
                    v302 = HIDWORD(v824);
                    v303 = DWORD2(v824);
                    v304 = DWORD1(v824);
                    v305 = v824;
                    v306 = HIDWORD(v823);
                    v307 = v823;
                    v308 = v293;
                    v309 = HIDWORD(v822);
                    v310 = v292;
                    LODWORD(v817) = v822;
                    v311 = *(_DWORD *)v297;
                    v312 = *(int *)v297 >> 31;
                    v313 = *(_DWORD *)v297;
                    v314 = HIDWORD(v820);
                    if (v312 != *(_DWORD *)v297)
                    {
                      HIDWORD(v781) = *(unsigned __int8 *)(v297 + 16);
                      v277 = *(unsigned __int8 *)(v297 + 17);
                      LODWORD(v4) = *(unsigned __int8 *)(v297 + 18);
                      v314 = *(unsigned __int8 *)(v297 + 19);
                      v299 = *(unsigned __int8 *)(v297 + 20);
                      v278 = *(unsigned __int8 *)(v297 + 21);
                      v296 = *(unsigned __int8 *)(v297 + 22);
                      LODWORD(v828) = *(unsigned __int8 *)(v297 + 23);
                      LODWORD(v781) = *(unsigned __int8 *)(v297 + 24);
                      HIDWORD(v778) = *(unsigned __int8 *)(v297 + 25);
                      LODWORD(v778) = *(unsigned __int8 *)(v297 + 26);
                      v313 = v311 >> 31;
                      v777 = *(unsigned __int8 *)(v297 + 27);
                    }
                    v821 = __PAIR64__(v299, v296);
                    HIDWORD(v818) = v278;
                    LODWORD(v819) = v4;
                    v820 = __PAIR64__(v314, v277);
                    v825 = v297;
                    v315 = *(_QWORD *)(v297 + 8);
                    v316 = BYTE1(v315);
                    v317 = BYTE2(v315);
                    v318 = BYTE3(v315);
                    v319 = HIBYTE(v315);
                    v320 = v313 ^ v311;
                    v321 = (v313 ^ v311) >> 31;
                    if (HIDWORD(v817) == *(_DWORD *)v834)
                    {
                      v322 = v321 == v320 && *(_QWORD *)&v834[8] >= v315;
                      v275 = v300;
                      v323 = v310;
                      a1 = v825;
                      if (!v322)
                      {
LABEL_629:
                        v275 = v300;
                        LODWORD(v826) = v301;
                        *((_QWORD *)&v824 + 1) = __PAIR64__(v302, v303);
                        *(_QWORD *)&v824 = __PAIR64__(v304, v305);
                        v823 = __PAIR64__(v306, v307);
                        v293 = v308;
                        v292 = v310;
                        v822 = __PAIR64__(v309, v817);
                        v9 = &v846[8];
                        goto LABEL_630;
                      }
                    }
                    else
                    {
                      v275 = v834[16];
                      LODWORD(v826) = v834[17];
                      v824 = *(_OWORD *)v811;
                      HIDWORD(v823) = v834[22];
                      LODWORD(v823) = v834[23];
                      v293 = v835;
                      HIDWORD(v822) = BYTE1(v835);
                      v323 = BYTE2(v835);
                      LODWORD(v822) = HIBYTE(v835);
                      v324 = v321 == v320;
                      a1 = v825;
                      if (!v324)
                      {
                        if (v834[8] < v315)
                          goto LABEL_629;
                        v275 = v834[16];
                        LODWORD(v826) = v834[17];
                        v824 = *(_OWORD *)v811;
                        HIDWORD(v823) = v834[22];
                        LODWORD(v823) = v834[23];
                        v293 = v835;
                        HIDWORD(v822) = BYTE1(v835);
                        v323 = BYTE2(v835);
                        LODWORD(v822) = HIBYTE(v835);
                        if (v834[8] <= v315)
                        {
                          if (v834[9] < BYTE1(v315))
                            goto LABEL_629;
                          v275 = v834[16];
                          LODWORD(v826) = v834[17];
                          v824 = *(_OWORD *)v811;
                          HIDWORD(v823) = v834[22];
                          LODWORD(v823) = v834[23];
                          v293 = v835;
                          HIDWORD(v822) = BYTE1(v835);
                          v323 = BYTE2(v835);
                          LODWORD(v822) = HIBYTE(v835);
                          if (v834[9] <= BYTE1(v315))
                          {
                            if (v834[10] < BYTE2(v315))
                              goto LABEL_629;
                            v275 = v834[16];
                            LODWORD(v826) = v834[17];
                            v824 = *(_OWORD *)v811;
                            HIDWORD(v823) = v834[22];
                            LODWORD(v823) = v834[23];
                            v293 = v835;
                            HIDWORD(v822) = BYTE1(v835);
                            v323 = BYTE2(v835);
                            LODWORD(v822) = HIBYTE(v835);
                            if (v834[10] <= BYTE2(v315))
                            {
                              if (v834[11] < BYTE3(v315))
                                goto LABEL_629;
                              v275 = v834[16];
                              LODWORD(v826) = v834[17];
                              v824 = *(_OWORD *)v811;
                              HIDWORD(v823) = v834[22];
                              LODWORD(v823) = v834[23];
                              v293 = v835;
                              HIDWORD(v822) = BYTE1(v835);
                              v323 = BYTE2(v835);
                              LODWORD(v822) = HIBYTE(v835);
                              if (v834[11] <= BYTE3(v315))
                              {
                                if (v834[12] < BYTE4(v315))
                                  goto LABEL_629;
                                v275 = v834[16];
                                LODWORD(v826) = v834[17];
                                v824 = *(_OWORD *)v811;
                                HIDWORD(v823) = v834[22];
                                LODWORD(v823) = v834[23];
                                v293 = v835;
                                HIDWORD(v822) = BYTE1(v835);
                                v323 = BYTE2(v835);
                                LODWORD(v822) = HIBYTE(v835);
                                if (v834[12] <= BYTE4(v315))
                                {
                                  if (v834[13] < BYTE5(v315))
                                    goto LABEL_629;
                                  v275 = v834[16];
                                  LODWORD(v826) = v834[17];
                                  v824 = *(_OWORD *)v811;
                                  HIDWORD(v823) = v834[22];
                                  LODWORD(v823) = v834[23];
                                  v293 = v835;
                                  HIDWORD(v822) = BYTE1(v835);
                                  v323 = BYTE2(v835);
                                  LODWORD(v822) = HIBYTE(v835);
                                  if (v834[13] <= BYTE5(v315))
                                  {
                                    if (v834[14] < BYTE6(v315))
                                      goto LABEL_629;
                                    v275 = v834[16];
                                    LODWORD(v826) = v834[17];
                                    v824 = *(_OWORD *)v811;
                                    HIDWORD(v823) = v834[22];
                                    LODWORD(v823) = v834[23];
                                    v293 = v835;
                                    HIDWORD(v822) = BYTE1(v835);
                                    v323 = BYTE2(v835);
                                    LODWORD(v822) = HIBYTE(v835);
                                    if (v834[14] <= BYTE6(v315))
                                    {
                                      if (v834[15] < v319)
                                        goto LABEL_629;
                                      v275 = v834[16];
                                      LODWORD(v826) = v834[17];
                                      v824 = *(_OWORD *)v811;
                                      HIDWORD(v823) = v834[22];
                                      LODWORD(v823) = v834[23];
                                      v293 = v835;
                                      HIDWORD(v822) = BYTE1(v835);
                                      v323 = BYTE2(v835);
                                      LODWORD(v822) = HIBYTE(v835);
                                      if (v834[15] <= v319)
                                      {
                                        if (v834[16] < HIDWORD(v781))
                                          goto LABEL_629;
                                        v275 = v834[16];
                                        LODWORD(v826) = v834[17];
                                        v824 = *(_OWORD *)v811;
                                        HIDWORD(v823) = v834[22];
                                        LODWORD(v823) = v834[23];
                                        v293 = v835;
                                        HIDWORD(v822) = BYTE1(v835);
                                        v323 = BYTE2(v835);
                                        LODWORD(v822) = HIBYTE(v835);
                                        if (HIDWORD(v781) >= v834[16])
                                        {
                                          if (v834[17] < v820)
                                          {
                                            v275 = v300;
                                            LODWORD(v826) = v301;
                                            *((_QWORD *)&v824 + 1) = __PAIR64__(v302, v303);
                                            *(_QWORD *)&v824 = __PAIR64__(v304, v305);
                                            v823 = __PAIR64__(v306, v307);
                                            v293 = v308;
                                            v292 = v310;
                                            v822 = __PAIR64__(v309, v817);
                                            v9 = &v846[8];
                                            v277 = v820;
                                            goto LABEL_631;
                                          }
                                          v275 = v834[16];
                                          LODWORD(v826) = v834[17];
                                          v824 = *(_OWORD *)v811;
                                          HIDWORD(v823) = v834[22];
                                          LODWORD(v823) = v834[23];
                                          v293 = v835;
                                          HIDWORD(v822) = BYTE1(v835);
                                          v323 = BYTE2(v835);
                                          LODWORD(v822) = HIBYTE(v835);
                                          if (v820 >= v834[17])
                                          {
                                            if (v834[18] < v819)
                                            {
                                              v275 = v300;
                                              LODWORD(v826) = v301;
                                              *((_QWORD *)&v824 + 1) = __PAIR64__(v302, v303);
                                              *(_QWORD *)&v824 = __PAIR64__(v304, v305);
                                              v823 = __PAIR64__(v306, v307);
                                              v293 = v308;
                                              v292 = v310;
                                              v822 = __PAIR64__(v309, v817);
                                              v9 = &v846[8];
                                              v277 = v820;
                                              LODWORD(v4) = v819;
                                              goto LABEL_632;
                                            }
                                            v275 = v834[16];
                                            LODWORD(v826) = v834[17];
                                            HIDWORD(v824) = v834[18];
                                            *(_QWORD *)((char *)&v824 + 4) = *(_QWORD *)&v811[4];
                                            LODWORD(v824) = v834[21];
                                            HIDWORD(v823) = v834[22];
                                            LODWORD(v823) = v834[23];
                                            v293 = v835;
                                            HIDWORD(v822) = BYTE1(v835);
                                            v323 = BYTE2(v835);
                                            LODWORD(v822) = HIBYTE(v835);
                                            if (v819 >= v834[18])
                                            {
                                              if (v834[19] < HIDWORD(v820))
                                                goto LABEL_629;
                                              v275 = v834[16];
                                              LODWORD(v826) = v834[17];
                                              HIDWORD(v824) = v834[18];
                                              DWORD2(v824) = v834[19];
                                              *(_QWORD *)&v824 = *(_QWORD *)v811;
                                              HIDWORD(v823) = v834[22];
                                              LODWORD(v823) = v834[23];
                                              v293 = v835;
                                              HIDWORD(v822) = BYTE1(v835);
                                              v323 = BYTE2(v835);
                                              LODWORD(v822) = HIBYTE(v835);
                                              if (HIDWORD(v820) >= v834[19])
                                              {
                                                if (v834[20] < HIDWORD(v821))
                                                  goto LABEL_629;
                                                v275 = v834[16];
                                                LODWORD(v826) = v834[17];
                                                *((_QWORD *)&v824 + 1) = *(_QWORD *)&v811[8];
                                                DWORD1(v824) = v834[20];
                                                LODWORD(v824) = v834[21];
                                                HIDWORD(v823) = v834[22];
                                                LODWORD(v823) = v834[23];
                                                v293 = v835;
                                                HIDWORD(v822) = BYTE1(v835);
                                                v323 = BYTE2(v835);
                                                LODWORD(v822) = HIBYTE(v835);
                                                if (HIDWORD(v821) >= v834[20])
                                                {
                                                  if (v834[21] < v278)
                                                    goto LABEL_629;
                                                  v275 = v834[16];
                                                  LODWORD(v826) = v834[17];
                                                  *((_QWORD *)&v824 + 1) = *(_QWORD *)&v811[8];
                                                  DWORD1(v824) = v834[20];
                                                  LODWORD(v824) = v834[21];
                                                  HIDWORD(v823) = v834[22];
                                                  LODWORD(v823) = v834[23];
                                                  v293 = v835;
                                                  HIDWORD(v822) = BYTE1(v835);
                                                  v323 = BYTE2(v835);
                                                  LODWORD(v822) = HIBYTE(v835);
                                                  if (v278 >= v834[21])
                                                  {
                                                    if (v834[22] < v296)
                                                      goto LABEL_629;
                                                    v275 = v834[16];
                                                    LODWORD(v826) = v834[17];
                                                    v824 = *(_OWORD *)v811;
                                                    HIDWORD(v823) = v834[22];
                                                    LODWORD(v823) = v834[23];
                                                    v293 = v835;
                                                    HIDWORD(v822) = BYTE1(v835);
                                                    v323 = BYTE2(v835);
                                                    LODWORD(v822) = HIBYTE(v835);
                                                    if (v296 >= v834[22])
                                                    {
                                                      if (v834[23] < v828)
                                                        goto LABEL_629;
                                                      v275 = v834[16];
                                                      LODWORD(v826) = v834[17];
                                                      v824 = *(_OWORD *)v811;
                                                      HIDWORD(v823) = v834[22];
                                                      LODWORD(v823) = v834[23];
                                                      v293 = v835;
                                                      HIDWORD(v822) = BYTE1(v835);
                                                      v323 = BYTE2(v835);
                                                      LODWORD(v822) = HIBYTE(v835);
                                                      if (v828 >= v834[23])
                                                      {
                                                        if (v835 < v781)
                                                          goto LABEL_784;
                                                        v275 = v834[16];
                                                        LODWORD(v826) = v834[17];
                                                        v824 = *(_OWORD *)v811;
                                                        HIDWORD(v823) = v834[22];
                                                        LODWORD(v823) = v834[23];
                                                        v293 = v835;
                                                        HIDWORD(v822) = BYTE1(v835);
                                                        v323 = BYTE2(v835);
                                                        LODWORD(v822) = HIBYTE(v835);
                                                        a1 = v825;
                                                        if (v781 >= v835)
                                                        {
                                                          if (BYTE1(v835) < HIDWORD(v778))
                                                            goto LABEL_784;
                                                          v275 = v834[16];
                                                          LODWORD(v826) = v834[17];
                                                          v824 = *(_OWORD *)v811;
                                                          HIDWORD(v823) = v834[22];
                                                          LODWORD(v823) = v834[23];
                                                          v293 = v835;
                                                          HIDWORD(v822) = BYTE1(v835);
                                                          v323 = BYTE2(v835);
                                                          LODWORD(v822) = HIBYTE(v835);
                                                          a1 = v825;
                                                          if (HIDWORD(v778) >= BYTE1(v835))
                                                          {
                                                            if (BYTE2(v835) < v778)
                                                            {
LABEL_784:
                                                              v275 = v300;
                                                              LODWORD(v826) = v301;
                                                              *((_QWORD *)&v824 + 1) = __PAIR64__(v302, v303);
                                                              *(_QWORD *)&v824 = __PAIR64__(v304, v305);
                                                              v823 = __PAIR64__(v306, v307);
                                                              v293 = v308;
                                                              v292 = v310;
                                                              v822 = __PAIR64__(v309, v817);
                                                              v9 = &v846[8];
                                                              a1 = v825;
LABEL_630:
                                                              v277 = v820;
LABEL_631:
                                                              LODWORD(v4) = v819;
LABEL_632:
                                                              v325 = v834[8];
                                                              LODWORD(v5) = v834[9];
                                                              goto LABEL_633;
                                                            }
                                                            v275 = v834[16];
                                                            LODWORD(v826) = v834[17];
                                                            v824 = *(_OWORD *)v811;
                                                            HIDWORD(v823) = v834[22];
                                                            LODWORD(v823) = v834[23];
                                                            v293 = v835;
                                                            HIDWORD(v822) = BYTE1(v835);
                                                            v323 = BYTE2(v835);
                                                            LODWORD(v822) = HIBYTE(v835);
                                                            a1 = v825;
                                                            if (v778 >= BYTE2(v835))
                                                            {
                                                              LODWORD(v826) = v834[17];
                                                              v824 = *(_OWORD *)v811;
                                                              HIDWORD(v823) = v834[22];
                                                              LODWORD(v823) = v834[23];
                                                              v293 = v835;
                                                              HIDWORD(v822) = BYTE1(v835);
                                                              v323 = BYTE2(v835);
                                                              LODWORD(v822) = HIBYTE(v835);
                                                              v275 = v834[16];
                                                              if (HIBYTE(v835) < v777)
                                                                goto LABEL_629;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    if (v312 != v311)
                      break;
                    v295 = a1;
                    v9 = &v846[8];
                    v277 = v820;
                    LODWORD(v4) = v819;
                    v325 = v834[8];
                    LODWORD(v5) = v834[9];
                    v292 = v323;
                    if (v815 == (_DWORD)v816)
                    {
                      v295 = a1;
                      if (v315 >= *(_QWORD *)&v834[8])
                      {
                        v298 = a1 - 80;
                        goto LABEL_578;
                      }
                    }
                  }
                  v325 = v834[8];
                  v292 = v323;
                  if (v815 == (_DWORD)v816)
                  {
                    v298 = v760;
                    v9 = &v846[8];
                    v277 = v820;
                    LODWORD(v4) = v819;
LABEL_575:
                    LODWORD(v5) = v834[9];
                    goto LABEL_578;
                  }
                  v322 = v315 >= v801;
                  v326 = v315 > v801;
                  v299 = HIDWORD(v821);
                  LODWORD(v5) = v834[9];
                  if (!v322)
                    goto LABEL_480;
                  if (v326)
                    goto LABEL_576;
                  v327 = v316 > v834[9];
                  if (v316 < v834[9])
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (v327)
                    goto LABEL_577;
                  if (v317 < v834[10])
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (v317 > v834[10])
                    goto LABEL_577;
                  if (v318 < v834[11])
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (v318 > v834[11])
                    goto LABEL_577;
                  if (BYTE4(v315) < v834[12])
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (BYTE4(v315) > v834[12])
                    goto LABEL_577;
                  if (BYTE5(v315) < v834[13])
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (BYTE5(v315) > v834[13])
                    goto LABEL_577;
                  if (BYTE6(v315) < v834[14])
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (BYTE6(v315) > v834[14])
                    goto LABEL_577;
                  if (v319 < v759)
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (v319 > v759)
                    goto LABEL_577;
                  v328 = *(unsigned __int8 *)(a1 + 16);
                  if (v328 < v275)
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (v275 < v328)
                    goto LABEL_577;
                  v329 = *(unsigned __int8 *)(a1 + 17);
                  if (v329 < v826)
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (v826 < v329)
                    goto LABEL_577;
                  v330 = *(unsigned __int8 *)(a1 + 18);
                  if (v330 < HIDWORD(v824))
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (HIDWORD(v824) < v330)
                    goto LABEL_577;
                  v331 = *(unsigned __int8 *)(a1 + 19);
                  if (v331 < DWORD2(v824))
                    goto LABEL_480;
                  v9 = &v846[8];
                  if (DWORD2(v824) < v331)
                    goto LABEL_577;
                  v332 = *(unsigned __int8 *)(a1 + 20);
                  if (v332 < DWORD1(v824))
                    goto LABEL_480;
                  if (DWORD1(v824) < v332)
                    goto LABEL_576;
                  v333 = *(unsigned __int8 *)(a1 + 21);
                  if (v333 < v824)
                    goto LABEL_480;
                  if (v824 < v333)
                    goto LABEL_576;
                  v334 = *(unsigned __int8 *)(a1 + 22);
                  if (v334 < HIDWORD(v823))
                    goto LABEL_480;
                  if (HIDWORD(v823) < v334)
                    goto LABEL_576;
                  v335 = *(unsigned __int8 *)(a1 + 23);
                  if (v335 < v823)
                    goto LABEL_480;
                  if (v823 < v335)
                    goto LABEL_576;
                  v336 = *(unsigned __int8 *)(a1 + 24);
                  if (v336 < v293)
                    goto LABEL_480;
                  if (v293 < v336)
                  {
LABEL_576:
                    v9 = &v846[8];
LABEL_577:
                    v277 = v820;
                    LODWORD(v4) = v819;
                    goto LABEL_578;
                  }
                  v337 = *(unsigned __int8 *)(a1 + 25);
                  if (v337 < HIDWORD(v822))
                    goto LABEL_480;
                  if (HIDWORD(v822) < v337)
                  {
                    a1 = v825;
                    v298 = v825 - 80;
                    v9 = &v846[8];
LABEL_626:
                    v277 = v820;
                    LODWORD(v4) = v819;
                    v292 = v323;
                    v325 = v834[8];
                    goto LABEL_575;
                  }
                  a1 = v825;
                  v338 = *(unsigned __int8 *)(v825 + 26);
                  v299 = HIDWORD(v821);
                  if (v338 < v323)
                  {
LABEL_480:
                    v298 += 80;
                    v297 = a1 + 80;
                    v277 = v820;
                    LODWORD(v4) = v819;
                    goto LABEL_481;
                  }
                  v298 = v825 - 80;
                  if (v323 < v338)
                  {
                    v9 = &v846[8];
                    a1 = v825;
                    goto LABEL_626;
                  }
                  a1 = v825;
                  v295 = v825;
                  v9 = &v846[8];
                  v277 = v820;
                  LODWORD(v4) = v819;
                  v292 = v323;
                  v325 = v834[8];
                  LODWORD(v5) = v834[9];
                  if (*(unsigned __int8 *)(v825 + 27) < v822)
                    continue;
LABEL_578:
                  v339 = *(_DWORD *)(v298 + 112);
                  v340 = v339;
                  if (v339 >> 31 != v339)
                  {
                    v749 = *(unsigned __int8 *)(v298 + 128);
                    v748 = *(unsigned __int8 *)(v298 + 129);
                    v747 = *(unsigned __int8 *)(v298 + 130);
                    v746 = *(unsigned __int8 *)(v298 + 131);
                    HIDWORD(v744) = *(unsigned __int8 *)(v298 + 132);
                    LODWORD(v744) = *(unsigned __int8 *)(v298 + 133);
                    HIDWORD(v743) = *(unsigned __int8 *)(v298 + 134);
                    HIDWORD(v742) = *(unsigned __int8 *)(v298 + 136);
                    LODWORD(v743) = *(unsigned __int8 *)(v298 + 135);
                    HIDWORD(v741) = *(unsigned __int8 *)(v298 + 138);
                    LODWORD(v742) = *(unsigned __int8 *)(v298 + 137);
                    v340 = v339 >> 31;
                    LODWORD(v741) = *(unsigned __int8 *)(v298 + 139);
                  }
                  v341 = *(_QWORD *)(v298 + 120);
                  v342 = v340 ^ v339;
                  v343 = v342 >> 31;
                  if (v782 != v836)
                    break;
                  if (v343 == v342)
                  {
                    v295 = a1;
                    if ((unint64_t)v837 >= v341)
                      continue;
                  }
                  goto LABEL_633;
                }
                v295 = a1;
                if (v343 == v342)
                  goto LABEL_479;
                if (v837 < *(_QWORD *)(v298 + 120))
                  break;
                v295 = a1;
                if (v837 > *(_QWORD *)(v298 + 120))
                  goto LABEL_479;
                if (BYTE1(v837) < BYTE1(v341))
                  break;
                v295 = a1;
                if (BYTE1(v837) > BYTE1(v341))
                  goto LABEL_479;
                if (BYTE2(v837) < BYTE2(v341))
                  break;
                v295 = a1;
                if (BYTE2(v837) > BYTE2(v341))
                  goto LABEL_479;
                if (BYTE3(v837) < BYTE3(v341))
                  break;
                v295 = a1;
                if (BYTE3(v837) > BYTE3(v341))
                  goto LABEL_479;
                if (BYTE4(v837) < BYTE4(v341))
                  break;
                v295 = a1;
                if (BYTE4(v837) > BYTE4(v341))
                  goto LABEL_479;
                if (BYTE5(v837) < BYTE5(v341))
                  break;
                v295 = a1;
                if (BYTE5(v837) > BYTE5(v341))
                  goto LABEL_479;
                if (BYTE6(v837) < BYTE6(v341))
                  break;
                v295 = a1;
                if (BYTE6(v837) > BYTE6(v341))
                  goto LABEL_479;
                v344 = HIBYTE(v341);
                if (BYTE7(v837) < v344)
                  break;
                v295 = a1;
                if (BYTE7(v837) > v344)
                  goto LABEL_479;
                if (BYTE8(v837) < v749)
                  break;
                v295 = a1;
                if (v749 < BYTE8(v837))
                  goto LABEL_479;
                if (BYTE9(v837) < v748)
                  break;
                v295 = a1;
                if (v748 < BYTE9(v837))
                  goto LABEL_479;
                if (BYTE10(v837) < v747)
                  break;
                v295 = a1;
                if (v747 < BYTE10(v837))
                  goto LABEL_479;
                if (BYTE11(v837) < v746)
                  break;
                v295 = a1;
                if (v746 < BYTE11(v837))
                  goto LABEL_479;
                if (BYTE12(v837) < HIDWORD(v744))
                  break;
                v295 = a1;
                if (HIDWORD(v744) < BYTE12(v837))
                  goto LABEL_479;
                if (BYTE13(v837) < v744)
                  goto LABEL_787;
                v295 = v825;
                v277 = v820;
                LODWORD(v4) = v819;
                if (v744 < BYTE13(v837))
                  goto LABEL_479;
                if (BYTE14(v837) < HIDWORD(v743))
                  goto LABEL_787;
                v295 = v825;
                v277 = v820;
                LODWORD(v4) = v819;
                if (HIDWORD(v743) < BYTE14(v837))
                  goto LABEL_479;
                if (HIBYTE(v837) < v743)
                  goto LABEL_787;
                v295 = v825;
                v277 = v820;
                LODWORD(v4) = v819;
                if (v743 < HIBYTE(v837))
                  goto LABEL_479;
                if (v838 < HIDWORD(v742))
                  goto LABEL_787;
                v295 = v825;
                v277 = v820;
                LODWORD(v4) = v819;
                if (HIDWORD(v742) < v838)
                  goto LABEL_479;
                if (BYTE1(v838) < v742)
                  goto LABEL_787;
                v295 = v825;
                v277 = v820;
                LODWORD(v4) = v819;
                if (v742 < BYTE1(v838))
                  goto LABEL_479;
                if (BYTE2(v838) < HIDWORD(v741))
                {
LABEL_787:
                  v9 = &v846[8];
                  a1 = v825;
                  v277 = v820;
                  LODWORD(v4) = v819;
                  goto LABEL_632;
                }
                a1 = v825;
                v295 = v825;
                v9 = &v846[8];
                v277 = v820;
                LODWORD(v4) = v819;
                v325 = v834[8];
                LODWORD(v5) = v834[9];
                if (HIDWORD(v741) >= BYTE2(v838))
                {
                  v295 = v825;
                  if (HIBYTE(v838) < v741)
                    break;
                }
              }
LABEL_633:
              v276 = v292;
              LODWORD(v817) = v293;
              v774 = v275;
              v345 = v776;
              while (1)
              {
                while (1)
                {
                  while (1)
                  {
                    do
                    {
                      while (2)
                      {
                        v346 = v804;
                        if (HIDWORD(v817) != *(_DWORD *)v834)
                        {
                          v776 = v345;
                          v370 = v804;
                          v371 = v792;
                          v372 = v791;
                          v373 = HIDWORD(v790);
                          v374 = v790;
                          v375 = *(_DWORD *)&v789[8];
                          v376 = *(_DWORD *)&v789[4];
                          v377 = *(_DWORD *)v789;
                          v378 = v788;
                          v379 = v787;
                          v380 = v785;
                          v381 = v784;
                          while (1)
                          {
                            v346 = v370;
                            v383 = *(_DWORD *)(v370 - 80);
                            v370 -= 80;
                            v382 = v383;
                            v384 = v383 >> 31;
                            v385 = v383;
                            v386 = v383 >> 31 == v383;
                            if (v383 >> 31 != v383)
                            {
                              v371 = *(unsigned __int8 *)(v346 - 64);
                              v375 = *(unsigned __int8 *)(v346 - 63);
                              v376 = *(unsigned __int8 *)(v346 - 62);
                              v379 = *(unsigned __int8 *)(v346 - 61);
                              v381 = *(unsigned __int8 *)(v346 - 60);
                              v373 = *(unsigned __int8 *)(v346 - 59);
                              v377 = *(unsigned __int8 *)(v346 - 58);
                              v380 = *(unsigned __int8 *)(v346 - 57);
                              v372 = *(unsigned __int8 *)(v346 - 56);
                              v374 = *(unsigned __int8 *)(v346 - 55);
                              v378 = *(unsigned __int8 *)(v346 - 54);
                              v385 = v384;
                              LODWORD(v827) = *(unsigned __int8 *)(v346 - 53);
                            }
                            v349 = *(_QWORD *)(v346 - 72);
                            v351 = v349;
                            v279 = v828;
                            if ((v385 ^ v382) == (v385 ^ v382) >> 31)
                            {
LABEL_728:
                              v784 = v381;
                              v785 = v380;
                              v787 = v379;
                              v788 = v378;
                              *(_DWORD *)v789 = v377;
                              *(_QWORD *)&v789[4] = __PAIR64__(v375, v376);
                              v790 = __PAIR64__(v373, v374);
                              LODWORD(v791) = v372;
                              LODWORD(v792) = v371;
                              v804 = v346 - 80;
                              v280 = v834[16];
                              v281 = v834[17];
                              v282 = v834[18];
                              v283 = v834[19];
                              v284 = v834[20];
                              v285 = v834[21];
                              v286 = v834[22];
                              v287 = v834[23];
                              v288 = v835;
                              v289 = BYTE1(v835);
                              v290 = BYTE2(v835);
                              v291 = HIBYTE(v835);
                              v275 = v774;
                              goto LABEL_729;
                            }
                            if (v325 >= v349)
                            {
                              if (v325 > v349)
                                goto LABEL_728;
                              if (v5 >= BYTE1(v349))
                              {
                                if (v5 > BYTE1(v349))
                                  goto LABEL_728;
                                if (v834[10] >= BYTE2(v349))
                                {
                                  if (v834[10] > BYTE2(v349))
                                    goto LABEL_728;
                                  if (v834[11] >= BYTE3(v349))
                                  {
                                    if (v834[11] > BYTE3(v349))
                                      goto LABEL_728;
                                    if (v834[12] >= BYTE4(v349))
                                    {
                                      if (v834[12] > BYTE4(v349))
                                        goto LABEL_728;
                                      if (v834[13] >= BYTE5(v349))
                                      {
                                        if (v834[13] > BYTE5(v349))
                                          goto LABEL_728;
                                        if (v834[14] >= BYTE6(v349))
                                        {
                                          if (v834[14] > BYTE6(v349))
                                            goto LABEL_728;
                                          if (v759 >= HIBYTE(v349))
                                          {
                                            if (v759 > HIBYTE(v349))
                                              goto LABEL_728;
                                            if (v834[16] >= v371)
                                            {
                                              if (v371 < v834[16])
                                                goto LABEL_728;
                                              if (v834[17] >= v375)
                                              {
                                                if (v375 < v834[17])
                                                  goto LABEL_728;
                                                if (v834[18] >= v376)
                                                {
                                                  if (v376 < v834[18])
                                                    goto LABEL_728;
                                                  if (v834[19] >= v379)
                                                  {
                                                    if (v379 < v834[19])
                                                      goto LABEL_728;
                                                    if (v834[20] >= v381)
                                                    {
                                                      if (v381 < v834[20])
                                                        goto LABEL_728;
                                                      if (v834[21] >= v373)
                                                      {
                                                        if (v373 < v834[21])
                                                          goto LABEL_728;
                                                        if (v834[22] >= v377)
                                                        {
                                                          if (v377 < v834[22])
                                                            goto LABEL_728;
                                                          if (v834[23] >= v380)
                                                          {
                                                            if (v380 < v834[23])
                                                              goto LABEL_728;
                                                            if (v835 >= v372)
                                                            {
                                                              if (v372 < v835)
                                                                goto LABEL_728;
                                                              if (BYTE1(v835) >= v374)
                                                              {
                                                                if (v374 < BYTE1(v835))
                                                                  goto LABEL_728;
                                                                if (BYTE2(v835) >= v378)
                                                                  break;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          v773 = v276;
                          v784 = v381;
                          v785 = v380;
                          v787 = v379;
                          *(_DWORD *)v789 = v377;
                          *(_QWORD *)&v789[4] = __PAIR64__(v375, v376);
                          v790 = __PAIR64__(v373, v374);
                          LODWORD(v791) = v372;
                          LODWORD(v792) = v371;
                          v804 = v346 - 80;
                          v788 = v378;
                          if (v378 >= BYTE2(v835))
                          {
                            v280 = v834[16];
                            v281 = v834[17];
                            v282 = v834[18];
                            v283 = v834[19];
                            v284 = v834[20];
                            v285 = v834[21];
                            v286 = v834[22];
                            v287 = v834[23];
                            v288 = v835;
                            v289 = BYTE1(v835);
                            v290 = BYTE2(v835);
                            v291 = HIBYTE(v835);
                            v9 = &v846[8];
                            a1 = v825;
                            v277 = v820;
                            LODWORD(v4) = v819;
                            v278 = HIDWORD(v818);
                            v279 = v828;
                            v275 = v774;
                            v276 = v276;
                            v325 = v834[8];
                            LODWORD(v5) = v834[9];
                            v345 = v776;
                            if (HIBYTE(v835) < v827)
                              continue;
LABEL_729:
                            if (!v386)
                              goto LABEL_643;
                            goto LABEL_730;
                          }
                          v280 = v834[16];
                          v281 = v834[17];
                          v282 = v834[18];
                          v283 = v834[19];
                          v284 = v834[20];
                          v285 = v834[21];
                          v286 = v834[22];
                          v287 = v834[23];
                          v288 = v835;
                          v289 = BYTE1(v835);
                          v290 = BYTE2(v835);
                          v291 = HIBYTE(v835);
                          v9 = &v846[8];
                          a1 = v825;
                          v277 = v820;
                          LODWORD(v4) = v819;
                          v278 = HIDWORD(v818);
                          v279 = v828;
                          v275 = v774;
                          v276 = v276;
                          v325 = v834[8];
                          LODWORD(v5) = v834[9];
                          if (v386)
                            goto LABEL_730;
                          goto LABEL_643;
                        }
                        break;
                      }
                      v347 = *(_DWORD *)(v804 - 80);
                      v804 -= 80;
                      v348 = v347;
                      if (v347 >> 31 != v347)
                      {
                        LODWORD(v792) = *(unsigned __int8 *)(v346 - 64);
                        *(_DWORD *)&v789[8] = *(unsigned __int8 *)(v346 - 63);
                        *(_DWORD *)&v789[4] = *(unsigned __int8 *)(v346 - 62);
                        v787 = *(unsigned __int8 *)(v346 - 61);
                        v784 = *(unsigned __int8 *)(v346 - 60);
                        HIDWORD(v790) = *(unsigned __int8 *)(v346 - 59);
                        *(_DWORD *)v789 = *(unsigned __int8 *)(v346 - 58);
                        v785 = *(unsigned __int8 *)(v346 - 57);
                        LODWORD(v791) = *(unsigned __int8 *)(v346 - 56);
                        LODWORD(v790) = *(unsigned __int8 *)(v346 - 55);
                        v788 = *(unsigned __int8 *)(v346 - 54);
                        v348 = v347 >> 31;
                        LODWORD(v827) = *(unsigned __int8 *)(v346 - 53);
                      }
                      v349 = *(_QWORD *)(v346 - 72);
                      v350 = (v348 ^ v347) == (v348 ^ v347) >> 31 && *(_QWORD *)&v834[8] >= v349;
                      v279 = v828;
                    }
                    while (!v350);
                    v351 = *(_QWORD *)(v346 - 72);
                    v280 = HIDWORD(v792);
                    v281 = v793;
                    v282 = HIDWORD(v793);
                    v283 = v794;
                    v284 = HIDWORD(v794);
                    v285 = v795;
                    v286 = v796;
                    v287 = v797;
                    v288 = v798;
                    v289 = v799;
                    v290 = v800;
                    v291 = v345;
                    if (v347 >> 31 == v347)
                    {
LABEL_730:
                      if (v815 != (_DWORD)v816 || v349 < *(_QWORD *)&v834[8])
                        goto LABEL_477;
                      goto LABEL_732;
                    }
LABEL_643:
                    if (v815 != (_DWORD)v816)
                    {
                      if (v351 < v325)
                        goto LABEL_477;
                      if (v351 <= v325)
                      {
                        v352 = *(unsigned __int8 *)(v346 - 71);
                        if (v352 < v5)
                          goto LABEL_477;
                        if (v352 <= v5)
                        {
                          v353 = *(unsigned __int8 *)(v346 - 70);
                          if (v353 < v834[10])
                            goto LABEL_477;
                          if (v353 <= v834[10])
                          {
                            v354 = *(unsigned __int8 *)(v346 - 69);
                            if (v354 < v834[11])
                              goto LABEL_477;
                            if (v354 <= v834[11])
                            {
                              v355 = *(unsigned __int8 *)(v346 - 68);
                              if (v355 < v834[12])
                                goto LABEL_477;
                              if (v355 <= v834[12])
                              {
                                v356 = *(unsigned __int8 *)(v346 - 67);
                                if (v356 < v834[13])
                                  goto LABEL_477;
                                if (v356 <= v834[13])
                                {
                                  v357 = *(unsigned __int8 *)(v346 - 66);
                                  if (v357 < v834[14])
                                    goto LABEL_477;
                                  if (v357 <= v834[14])
                                  {
                                    v358 = *(unsigned __int8 *)(v346 - 65);
                                    if (v358 < v759)
                                      goto LABEL_477;
                                    if (v358 <= v759)
                                    {
                                      v359 = *(unsigned __int8 *)(v346 - 64);
                                      if (v359 < v280)
                                        goto LABEL_477;
                                      if (v280 >= v359)
                                      {
                                        v360 = *(unsigned __int8 *)(v346 - 63);
                                        if (v360 < v281)
                                          goto LABEL_477;
                                        if (v281 >= v360)
                                        {
                                          v361 = *(unsigned __int8 *)(v346 - 62);
                                          if (v361 < v282)
                                            goto LABEL_477;
                                          if (v282 >= v361)
                                          {
                                            v362 = *(unsigned __int8 *)(v346 - 61);
                                            if (v362 < v283)
                                              goto LABEL_477;
                                            if (v283 >= v362)
                                            {
                                              v363 = *(unsigned __int8 *)(v346 - 60);
                                              if (v363 < v284)
                                                goto LABEL_477;
                                              if (v284 >= v363)
                                              {
                                                v364 = *(unsigned __int8 *)(v346 - 59);
                                                if (v364 < v285)
                                                  goto LABEL_477;
                                                if (v285 >= v364)
                                                {
                                                  v365 = *(unsigned __int8 *)(v346 - 58);
                                                  if (v365 < v286)
                                                    goto LABEL_477;
                                                  if (v286 >= v365)
                                                  {
                                                    v366 = *(unsigned __int8 *)(v346 - 57);
                                                    if (v366 < v287)
                                                      goto LABEL_785;
                                                    v9 = &v846[8];
                                                    a1 = v825;
                                                    v277 = v820;
                                                    LODWORD(v4) = v819;
                                                    v278 = HIDWORD(v818);
                                                    v275 = v774;
                                                    v325 = v834[8];
                                                    LODWORD(v5) = v834[9];
                                                    if (v287 >= v366)
                                                    {
                                                      v367 = *(unsigned __int8 *)(v346 - 56);
                                                      if (v367 < v288)
                                                        goto LABEL_785;
                                                      v9 = &v846[8];
                                                      a1 = v825;
                                                      v277 = v820;
                                                      LODWORD(v4) = v819;
                                                      v278 = HIDWORD(v818);
                                                      v275 = v774;
                                                      v325 = v834[8];
                                                      LODWORD(v5) = v834[9];
                                                      if (v288 >= v367)
                                                      {
                                                        v368 = *(unsigned __int8 *)(v346 - 55);
                                                        if (v368 < v289)
                                                          goto LABEL_785;
                                                        v9 = &v846[8];
                                                        a1 = v825;
                                                        v277 = v820;
                                                        LODWORD(v4) = v819;
                                                        v278 = HIDWORD(v818);
                                                        v275 = v774;
                                                        v325 = v834[8];
                                                        LODWORD(v5) = v834[9];
                                                        if (v289 >= v368)
                                                        {
                                                          v369 = *(unsigned __int8 *)(v346 - 54);
                                                          if (v369 < v290)
                                                            goto LABEL_785;
                                                          v9 = &v846[8];
                                                          a1 = v825;
                                                          v277 = v820;
                                                          LODWORD(v4) = v819;
                                                          v278 = HIDWORD(v818);
                                                          v279 = v828;
                                                          v275 = v774;
                                                          v325 = v834[8];
                                                          LODWORD(v5) = v834[9];
                                                          if (v290 >= v369
                                                            && *(unsigned __int8 *)(v346 - 53) < v291)
                                                          {
                                                            goto LABEL_477;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
LABEL_732:
                    v387 = *(_DWORD *)(v346 - 48);
                    v388 = v387;
                    if (v387 >> 31 != v387)
                    {
                      v771 = *(unsigned __int8 *)(v346 - 32);
                      HIDWORD(v770) = *(unsigned __int8 *)(v346 - 31);
                      LODWORD(v770) = *(unsigned __int8 *)(v346 - 30);
                      HIDWORD(v769) = *(unsigned __int8 *)(v346 - 29);
                      LODWORD(v769) = *(unsigned __int8 *)(v346 - 28);
                      HIDWORD(v768) = *(unsigned __int8 *)(v346 - 27);
                      LODWORD(v768) = *(unsigned __int8 *)(v346 - 26);
                      HIDWORD(v767) = *(unsigned __int8 *)(v346 - 25);
                      LODWORD(v767) = *(unsigned __int8 *)(v346 - 24);
                      v766 = *(unsigned __int8 *)(v346 - 23);
                      v765 = *(unsigned __int8 *)(v346 - 22);
                      v388 = v387 >> 31;
                      v764 = *(unsigned __int8 *)(v346 - 21);
                    }
                    v389 = *(_QWORD *)(v346 - 40);
                    v390 = v388 ^ v387;
                    v391 = v390 >> 31;
                    if (v782 != v836)
                      break;
                    v345 = v291;
                    v800 = v290;
                    LODWORD(v799) = v289;
                    LODWORD(v798) = v288;
                    LODWORD(v797) = v287;
                    v796 = v286;
                    LODWORD(v795) = v285;
                    v794 = __PAIR64__(v284, v283);
                    v793 = __PAIR64__(v282, v281);
                    HIDWORD(v792) = v280;
                    v324 = v391 == v390;
                    v279 = v828;
                    if (v324)
                    {
                      v345 = v291;
                      v800 = v290;
                      LODWORD(v799) = v289;
                      LODWORD(v798) = v288;
                      LODWORD(v797) = v287;
                      v796 = v286;
                      LODWORD(v795) = v285;
                      v794 = __PAIR64__(v284, v283);
                      v793 = __PAIR64__(v282, v281);
                      HIDWORD(v792) = v280;
                      if ((unint64_t)v837 >= v389)
                        goto LABEL_477;
                    }
                  }
                  if (v391 == v390)
                  {
                    v279 = v828;
                    goto LABEL_477;
                  }
                  v345 = v291;
                  v800 = v290;
                  LODWORD(v799) = v289;
                  LODWORD(v798) = v288;
                  LODWORD(v797) = v287;
                  v796 = v286;
                  LODWORD(v795) = v285;
                  v794 = __PAIR64__(v284, v283);
                  v793 = __PAIR64__(v282, v281);
                  HIDWORD(v792) = v280;
                  v279 = v828;
                  if (v837 >= v389)
                  {
                    if (v837 > v389)
                      goto LABEL_477;
                    v345 = v291;
                    v800 = v290;
                    LODWORD(v799) = v289;
                    LODWORD(v798) = v288;
                    LODWORD(v797) = v287;
                    v796 = v286;
                    LODWORD(v795) = v285;
                    v794 = __PAIR64__(v284, v283);
                    v793 = __PAIR64__(v282, v281);
                    HIDWORD(v792) = v280;
                    v279 = v828;
                    if (BYTE1(v837) >= BYTE1(v389))
                    {
                      if (BYTE1(v837) > BYTE1(v389))
                        goto LABEL_477;
                      v345 = v291;
                      v800 = v290;
                      LODWORD(v799) = v289;
                      LODWORD(v798) = v288;
                      LODWORD(v797) = v287;
                      v796 = v286;
                      LODWORD(v795) = v285;
                      v794 = __PAIR64__(v284, v283);
                      v793 = __PAIR64__(v282, v281);
                      HIDWORD(v792) = v280;
                      v279 = v828;
                      if (BYTE2(v837) >= BYTE2(v389))
                      {
                        if (BYTE2(v837) > BYTE2(v389))
                          goto LABEL_477;
                        v345 = v291;
                        v800 = v290;
                        LODWORD(v799) = v289;
                        LODWORD(v798) = v288;
                        LODWORD(v797) = v287;
                        v796 = v286;
                        LODWORD(v795) = v285;
                        v794 = __PAIR64__(v284, v283);
                        v793 = __PAIR64__(v282, v281);
                        HIDWORD(v792) = v280;
                        v279 = v828;
                        if (BYTE3(v837) >= BYTE3(v389))
                        {
                          if (BYTE3(v837) > BYTE3(v389))
                            goto LABEL_477;
                          v345 = v291;
                          v800 = v290;
                          LODWORD(v799) = v289;
                          LODWORD(v798) = v288;
                          LODWORD(v797) = v287;
                          v796 = v286;
                          LODWORD(v795) = v285;
                          v794 = __PAIR64__(v284, v283);
                          v793 = __PAIR64__(v282, v281);
                          HIDWORD(v792) = v280;
                          v279 = v828;
                          if (BYTE4(v837) >= BYTE4(v389))
                          {
                            if (BYTE4(v837) > BYTE4(v389))
                              goto LABEL_477;
                            v345 = v291;
                            v800 = v290;
                            LODWORD(v799) = v289;
                            LODWORD(v798) = v288;
                            LODWORD(v797) = v287;
                            v796 = v286;
                            LODWORD(v795) = v285;
                            v794 = __PAIR64__(v284, v283);
                            v793 = __PAIR64__(v282, v281);
                            HIDWORD(v792) = v280;
                            v279 = v828;
                            if (BYTE5(v837) >= BYTE5(v389))
                            {
                              if (BYTE5(v837) > BYTE5(v389))
                                goto LABEL_477;
                              v345 = v291;
                              v800 = v290;
                              LODWORD(v799) = v289;
                              LODWORD(v798) = v288;
                              LODWORD(v797) = v287;
                              v796 = v286;
                              LODWORD(v795) = v285;
                              v794 = __PAIR64__(v284, v283);
                              v793 = __PAIR64__(v282, v281);
                              HIDWORD(v792) = v280;
                              v279 = v828;
                              if (BYTE6(v837) >= BYTE6(v389))
                              {
                                if (BYTE6(v837) > BYTE6(v389))
                                  goto LABEL_477;
                                v392 = HIBYTE(v389);
                                v345 = v291;
                                v800 = v290;
                                LODWORD(v799) = v289;
                                LODWORD(v798) = v288;
                                LODWORD(v797) = v287;
                                v796 = v286;
                                LODWORD(v795) = v285;
                                v794 = __PAIR64__(v284, v283);
                                v793 = __PAIR64__(v282, v281);
                                HIDWORD(v792) = v280;
                                if (v737 >= v392)
                                {
                                  if (v737 > v392)
                                    goto LABEL_477;
                                  v345 = v291;
                                  v800 = v290;
                                  LODWORD(v799) = v289;
                                  LODWORD(v798) = v288;
                                  LODWORD(v797) = v287;
                                  v796 = v286;
                                  LODWORD(v795) = v285;
                                  v794 = __PAIR64__(v284, v283);
                                  v793 = __PAIR64__(v282, v281);
                                  HIDWORD(v792) = v280;
                                  if (BYTE8(v837) >= v771)
                                  {
                                    if (v771 < BYTE8(v837))
                                      goto LABEL_477;
                                    v345 = v291;
                                    v800 = v290;
                                    LODWORD(v799) = v289;
                                    LODWORD(v798) = v288;
                                    LODWORD(v797) = v287;
                                    v796 = v286;
                                    LODWORD(v795) = v285;
                                    v794 = __PAIR64__(v284, v283);
                                    v793 = __PAIR64__(v282, v281);
                                    HIDWORD(v792) = v280;
                                    if (BYTE9(v837) >= HIDWORD(v770))
                                    {
                                      if (HIDWORD(v770) < BYTE9(v837))
                                        goto LABEL_477;
                                      v345 = v291;
                                      v800 = v290;
                                      LODWORD(v799) = v289;
                                      LODWORD(v798) = v288;
                                      LODWORD(v797) = v287;
                                      v796 = v286;
                                      LODWORD(v795) = v285;
                                      v794 = __PAIR64__(v284, v283);
                                      v793 = __PAIR64__(v282, v281);
                                      HIDWORD(v792) = v280;
                                      if (BYTE10(v837) >= v770)
                                      {
                                        if (v770 < BYTE10(v837))
                                          goto LABEL_477;
                                        v345 = v291;
                                        v800 = v290;
                                        LODWORD(v799) = v289;
                                        LODWORD(v798) = v288;
                                        LODWORD(v797) = v287;
                                        v796 = v286;
                                        LODWORD(v795) = v285;
                                        v794 = __PAIR64__(v284, v283);
                                        v793 = __PAIR64__(v282, v281);
                                        HIDWORD(v792) = v280;
                                        if (BYTE11(v837) >= HIDWORD(v769))
                                        {
                                          if (HIDWORD(v769) < BYTE11(v837))
                                            goto LABEL_477;
                                          v345 = v291;
                                          v800 = v290;
                                          LODWORD(v799) = v289;
                                          LODWORD(v798) = v288;
                                          LODWORD(v797) = v287;
                                          v796 = v286;
                                          LODWORD(v795) = v285;
                                          v794 = __PAIR64__(v284, v283);
                                          v793 = __PAIR64__(v282, v281);
                                          HIDWORD(v792) = v280;
                                          if (BYTE12(v837) >= v769)
                                          {
                                            if (v769 < BYTE12(v837))
                                              goto LABEL_477;
                                            v345 = v291;
                                            v800 = v290;
                                            LODWORD(v799) = v289;
                                            LODWORD(v798) = v288;
                                            LODWORD(v797) = v287;
                                            v796 = v286;
                                            LODWORD(v795) = v285;
                                            v794 = __PAIR64__(v284, v283);
                                            v793 = __PAIR64__(v282, v281);
                                            HIDWORD(v792) = v280;
                                            if (BYTE13(v837) >= HIDWORD(v768))
                                            {
                                              if (HIDWORD(v768) < BYTE13(v837))
                                                goto LABEL_477;
                                              v345 = v291;
                                              v800 = v290;
                                              LODWORD(v799) = v289;
                                              LODWORD(v798) = v288;
                                              LODWORD(v797) = v287;
                                              v796 = v286;
                                              LODWORD(v795) = v285;
                                              v794 = __PAIR64__(v284, v283);
                                              v793 = __PAIR64__(v282, v281);
                                              HIDWORD(v792) = v280;
                                              if (BYTE14(v837) >= v768)
                                              {
                                                if (v768 < BYTE14(v837))
                                                  goto LABEL_477;
                                                v345 = v291;
                                                v800 = v290;
                                                LODWORD(v799) = v289;
                                                LODWORD(v798) = v288;
                                                LODWORD(v797) = v287;
                                                v796 = v286;
                                                LODWORD(v795) = v285;
                                                v794 = __PAIR64__(v284, v283);
                                                v793 = __PAIR64__(v282, v281);
                                                HIDWORD(v792) = v280;
                                                if (HIBYTE(v837) >= HIDWORD(v767))
                                                {
                                                  if (HIDWORD(v767) < HIBYTE(v837))
                                                    goto LABEL_785;
                                                  v345 = v291;
                                                  v800 = v290;
                                                  LODWORD(v799) = v289;
                                                  LODWORD(v798) = v288;
                                                  LODWORD(v797) = v287;
                                                  v796 = v286;
                                                  LODWORD(v795) = v285;
                                                  v794 = __PAIR64__(v284, v283);
                                                  v793 = __PAIR64__(v282, v281);
                                                  HIDWORD(v792) = v280;
                                                  v9 = &v846[8];
                                                  a1 = v825;
                                                  v277 = v820;
                                                  LODWORD(v4) = v819;
                                                  v278 = HIDWORD(v818);
                                                  v275 = v774;
                                                  v325 = v834[8];
                                                  LODWORD(v5) = v834[9];
                                                  if (v838 >= v767)
                                                  {
                                                    if (v767 < v838)
                                                      goto LABEL_785;
                                                    v345 = v291;
                                                    v800 = v290;
                                                    LODWORD(v799) = v289;
                                                    LODWORD(v798) = v288;
                                                    LODWORD(v797) = v287;
                                                    v796 = v286;
                                                    LODWORD(v795) = v285;
                                                    v794 = __PAIR64__(v284, v283);
                                                    v793 = __PAIR64__(v282, v281);
                                                    HIDWORD(v792) = v280;
                                                    v9 = &v846[8];
                                                    a1 = v825;
                                                    v277 = v820;
                                                    LODWORD(v4) = v819;
                                                    v278 = HIDWORD(v818);
                                                    v275 = v774;
                                                    v325 = v834[8];
                                                    LODWORD(v5) = v834[9];
                                                    if (BYTE1(v838) >= v766)
                                                    {
                                                      if (v766 < BYTE1(v838))
                                                        goto LABEL_785;
                                                      v345 = v291;
                                                      v800 = v290;
                                                      LODWORD(v799) = v289;
                                                      LODWORD(v798) = v288;
                                                      LODWORD(v797) = v287;
                                                      v796 = v286;
                                                      LODWORD(v795) = v285;
                                                      v794 = __PAIR64__(v284, v283);
                                                      v793 = __PAIR64__(v282, v281);
                                                      HIDWORD(v792) = v280;
                                                      v9 = &v846[8];
                                                      a1 = v825;
                                                      v277 = v820;
                                                      LODWORD(v4) = v819;
                                                      v278 = HIDWORD(v818);
                                                      v275 = v774;
                                                      v325 = v834[8];
                                                      LODWORD(v5) = v834[9];
                                                      if (BYTE2(v838) >= v765)
                                                        break;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                if (v765 < BYTE2(v838))
                  break;
                v345 = v291;
                v800 = v290;
                LODWORD(v799) = v289;
                LODWORD(v798) = v288;
                LODWORD(v797) = v287;
                v796 = v286;
                LODWORD(v795) = v285;
                v794 = __PAIR64__(v284, v283);
                v793 = __PAIR64__(v282, v281);
                HIDWORD(v792) = v280;
                v9 = &v846[8];
                a1 = v825;
                v277 = v820;
                LODWORD(v4) = v819;
                v278 = HIDWORD(v818);
                v279 = v828;
                v275 = v774;
                v325 = v834[8];
                LODWORD(v5) = v834[9];
                if (HIBYTE(v838) >= v764)
                  goto LABEL_477;
              }
LABEL_785:
              v9 = &v846[8];
              a1 = v825;
              v277 = v820;
              LODWORD(v4) = v819;
              v278 = HIDWORD(v818);
              v279 = v828;
              v275 = v774;
LABEL_477:
              v274 = v804;
            }
            while (a1 < v804);
          }
          v393 = (int *)(a1 - 80);
          a3 = v733;
          v8 = &v834[8];
          if (a1 - 80 != v745)
          {
            if (*(_DWORD *)v745 == *v393)
            {
              v394 = (_QWORD *)(a1 - 72);
              if (*(_DWORD *)v745 == *(int *)v745 >> 31)
              {
                *v723 = *v394;
              }
              else
              {
                v398 = *(_OWORD *)v394;
                *(_DWORD *)(v745 + 24) = *(_DWORD *)(a1 - 56);
                *(_OWORD *)v723 = v398;
              }
            }
            else
            {
              v395 = *v393 ^ (*v393 >> 31);
              v396 = (__int128 *)(a1 - 72);
              if (v395)
              {
                v397 = *v396;
                *(_DWORD *)(v745 + 24) = *(_DWORD *)(a1 - 56);
                *(_OWORD *)v723 = v397;
                *(_DWORD *)v745 = v395;
              }
              else
              {
                *(_QWORD *)(v745 + 8) = *(_QWORD *)v396;
                *(_DWORD *)v745 = 0;
              }
            }
            v399 = *(_DWORD *)(v745 + 32);
            v400 = *(_DWORD *)(a1 - 48);
            if (v399 == v400)
            {
              v401 = (_QWORD *)(a1 - 40);
              if (v399 == v399 >> 31)
              {
                *v724 = *v401;
              }
              else
              {
                v405 = *(_OWORD *)v401;
                *(_DWORD *)(v745 + 56) = *(_DWORD *)(a1 - 24);
                *(_OWORD *)v724 = v405;
              }
            }
            else
            {
              v402 = v400 ^ (v400 >> 31);
              v403 = (__int128 *)(a1 - 40);
              if (v402)
              {
                v404 = *v403;
                *(_DWORD *)(v745 + 56) = *(_DWORD *)(a1 - 24);
                *(_OWORD *)v724 = v404;
                *(_DWORD *)(v745 + 32) = v402;
              }
              else
              {
                *(_QWORD *)(v745 + 40) = *(_QWORD *)v403;
                *(_DWORD *)(v745 + 32) = 0;
              }
            }
            v406 = *(_QWORD *)(a1 - 16);
            *(_DWORD *)(v745 + 72) = *(_DWORD *)(a1 - 8);
            *(_QWORD *)(v745 + 64) = v406;
          }
          v407 = *v393;
          if (*v393 == *(_DWORD *)v834)
          {
            v408 = (_QWORD *)(a1 - 72);
            if (v407 == v407 >> 31)
            {
              *v408 = *(_QWORD *)&v834[8];
            }
            else
            {
              v412 = *(_OWORD *)&v834[8];
              *(_DWORD *)(a1 - 56) = v835;
              *(_OWORD *)v408 = v412;
            }
          }
          else
          {
            v409 = *(_DWORD *)v834 ^ (*(int *)v834 >> 31);
            v410 = (_OWORD *)(a1 - 72);
            if (v409)
            {
              v411 = *(_OWORD *)&v834[8];
              *(_DWORD *)(a1 - 56) = v835;
              *v410 = v411;
              *v393 = v409;
            }
            else
            {
              *(_QWORD *)v410 = *(_QWORD *)&v834[8];
              *v393 = 0;
            }
          }
          v413 = *(_DWORD *)(a1 - 48);
          if (v413 == v836)
          {
            v414 = (_QWORD *)(a1 - 40);
            if (v413 == v413 >> 31)
            {
              *v414 = v837;
            }
            else
            {
              v418 = v837;
              *(_DWORD *)(a1 - 24) = v838;
              *(_OWORD *)v414 = v418;
            }
          }
          else
          {
            v415 = v836 ^ (v836 >> 31);
            if (v415)
            {
              v416 = a1 - 40;
              v417 = v837;
              *(_DWORD *)(v416 + 16) = v838;
              *(_OWORD *)v416 = v417;
              *(_DWORD *)(a1 - 48) = v415;
            }
            else
            {
              *(_QWORD *)(a1 - 40) = v837;
              *(_DWORD *)(a1 - 48) = 0;
            }
          }
          a4 = 0;
          v419 = v839;
          *(_DWORD *)(a1 - 8) = DWORD2(v839);
          *(_QWORD *)(a1 - 16) = v419;
          goto LABEL_2;
        }
        if ((a4 & 1) == 0)
        {
          if ((int *)v745 == v10)
            return;
          v682 = v745 + 80;
          if ((int *)(v745 + 80) == v10)
            return;
          LODWORD(v804) = 0;
          LODWORD(v805) = 0;
          LODWORD(v806) = 0;
          LODWORD(v807) = 0;
          LODWORD(v808) = 0;
          LODWORD(v809) = 0;
          LODWORD(v810) = 0;
          *(_DWORD *)v811 = 0;
          *(_QWORD *)&v811[4] = 0;
          *(_DWORD *)&v811[12] = 0;
          LODWORD(v812) = 0;
          memset(v789, 0, sizeof(v789));
          v790 = 0;
          LODWORD(v791) = 0;
          v792 = 0;
          v793 = 0;
          v794 = 0;
          LODWORD(v814) = 0;
          v815 = 0;
          LODWORD(v816) = 0;
          v817 = 0;
          v818 = 0;
          LODWORD(v819) = 0;
          v820 = 0;
          v821 = 0;
          LODWORD(v828) = 0;
          LODWORD(v827) = 0;
          LODWORD(v826) = 0;
          LODWORD(v825) = 0;
          v824 = 0uLL;
          v823 = 0;
          v822 = 0;
          while (1)
          {
            while (1)
            {
              v683 = (int *)v682;
              if (sub_1001DF450(v682, v745))
                break;
              v682 = (uint64_t)(v683 + 20);
              v745 = (uint64_t)v683;
              if (v683 + 20 == (int *)a2)
                return;
            }
            v684 = *v683;
            v685 = *v683;
            v686 = v745;
            if (*v683 >> 31 != *v683)
            {
              HIDWORD(v821) = *(unsigned __int8 *)(v745 + 96);
              LODWORD(v821) = *(unsigned __int8 *)(v745 + 97);
              HIDWORD(v820) = *(unsigned __int8 *)(v745 + 98);
              LODWORD(v820) = *(unsigned __int8 *)(v745 + 99);
              LODWORD(v819) = *(unsigned __int8 *)(v745 + 100);
              HIDWORD(v818) = *(unsigned __int8 *)(v745 + 101);
              LODWORD(v818) = *(unsigned __int8 *)(v745 + 102);
              HIDWORD(v817) = *(unsigned __int8 *)(v745 + 103);
              LODWORD(v817) = *(unsigned __int8 *)(v745 + 104);
              LODWORD(v816) = *(unsigned __int8 *)(v745 + 105);
              v815 = *(unsigned __int8 *)(v745 + 106);
              v685 = v684 >> 31;
              LODWORD(v814) = *(unsigned __int8 *)(v745 + 107);
            }
            v687 = *(_DWORD *)(v745 + 112);
            v688 = v687;
            if (v687 >> 31 != v687)
            {
              HIDWORD(v794) = *(unsigned __int8 *)(v745 + 128);
              LODWORD(v794) = *(unsigned __int8 *)(v745 + 129);
              HIDWORD(v793) = *(unsigned __int8 *)(v745 + 130);
              LODWORD(v793) = *(unsigned __int8 *)(v745 + 131);
              HIDWORD(v792) = *(unsigned __int8 *)(v745 + 132);
              LODWORD(v792) = *(unsigned __int8 *)(v745 + 133);
              LODWORD(v791) = *(unsigned __int8 *)(v745 + 134);
              HIDWORD(v790) = *(unsigned __int8 *)(v745 + 135);
              LODWORD(v790) = *(unsigned __int8 *)(v745 + 136);
              *(_DWORD *)&v789[8] = *(unsigned __int8 *)(v745 + 137);
              *(_DWORD *)&v789[4] = *(unsigned __int8 *)(v745 + 138);
              v688 = v687 >> 31;
              *(_DWORD *)v789 = *(unsigned __int8 *)(v745 + 139);
            }
            v689 = *(_QWORD *)(v745 + 88);
            v783 = HIBYTE(v689);
            v690 = v685 ^ v684;
            v691 = *(_QWORD *)(v745 + 120);
            v786 = HIBYTE(v691);
            v692 = v688 ^ v687;
            *(_OWORD *)&v846[4] = *(_OWORD *)(v745 + 144);
            v693 = (v685 ^ v684) >> 31;
            v694 = (v688 ^ v687) >> 31;
            while (1)
            {
              if (v684 == *(_DWORD *)v686)
              {
                v695 = (_QWORD *)(v686 + 8);
                v696 = (_QWORD *)(v686 + 88);
                if (v684 == v684 >> 31)
                {
                  *v696 = *v695;
                  v697 = *(_DWORD *)(v686 + 112);
                  v698 = *(_DWORD *)(v686 + 32);
                  if (v697 != v698)
                    goto LABEL_1217;
                }
                else
                {
                  *(_OWORD *)v696 = *(_OWORD *)v695;
                  *(_DWORD *)(v686 + 104) = *(_DWORD *)(v686 + 24);
                  v697 = *(_DWORD *)(v686 + 112);
                  v698 = *(_DWORD *)(v686 + 32);
                  if (v697 != v698)
                    goto LABEL_1217;
                }
              }
              else
              {
                v700 = *(_DWORD *)v686 ^ (*(int *)v686 >> 31);
                if (v700)
                {
                  *(_OWORD *)(v686 + 88) = *(_OWORD *)(v686 + 8);
                  *(_DWORD *)(v686 + 104) = *(_DWORD *)(v686 + 24);
                  *(_DWORD *)(v686 + 80) = v700;
                  v697 = *(_DWORD *)(v686 + 112);
                  v698 = *(_DWORD *)(v686 + 32);
                  if (v697 != v698)
                    goto LABEL_1217;
                }
                else
                {
                  *(_QWORD *)(v686 + 88) = *(_QWORD *)(v686 + 8);
                  *(_DWORD *)(v686 + 80) = 0;
                  v697 = *(_DWORD *)(v686 + 112);
                  v698 = *(_DWORD *)(v686 + 32);
                  if (v697 != v698)
                  {
LABEL_1217:
                    v699 = v698 ^ (v698 >> 31);
                    if (v699)
                    {
                      *(_OWORD *)(v686 + 120) = *(_OWORD *)(v686 + 40);
                      *(_DWORD *)(v686 + 136) = *(_DWORD *)(v686 + 56);
                      *(_DWORD *)(v686 + 112) = v699;
                    }
                    else
                    {
                      *(_QWORD *)(v686 + 120) = *(_QWORD *)(v686 + 40);
                      *(_DWORD *)(v686 + 112) = 0;
                    }
                    goto LABEL_1227;
                  }
                }
              }
              v701 = (_QWORD *)(v686 + 40);
              v702 = (_QWORD *)(v686 + 120);
              if (v697 == v697 >> 31)
              {
                *v702 = *v701;
              }
              else
              {
                *(_OWORD *)v702 = *(_OWORD *)v701;
                *(_DWORD *)(v686 + 136) = *(_DWORD *)(v686 + 56);
              }
LABEL_1227:
              *(_QWORD *)(v686 + 144) = *(_QWORD *)(v686 + 64);
              *(_DWORD *)(v686 + 152) = *(_DWORD *)(v686 + 72);
              v703 = v686;
              v705 = *(_DWORD *)(v686 - 80);
              v686 -= 80;
              v704 = v705;
              v706 = v705 >> 31;
              v707 = v705;
              if (v705 >> 31 != v705)
              {
                LODWORD(v828) = *(unsigned __int8 *)(v703 - 64);
                LODWORD(v827) = *(unsigned __int8 *)(v703 - 63);
                LODWORD(v826) = *(unsigned __int8 *)(v703 - 62);
                LODWORD(v825) = *(unsigned __int8 *)(v703 - 61);
                HIDWORD(v824) = *(unsigned __int8 *)(v703 - 60);
                DWORD2(v824) = *(unsigned __int8 *)(v703 - 59);
                DWORD1(v824) = *(unsigned __int8 *)(v703 - 58);
                LODWORD(v824) = *(unsigned __int8 *)(v703 - 57);
                HIDWORD(v823) = *(unsigned __int8 *)(v703 - 56);
                LODWORD(v823) = *(unsigned __int8 *)(v703 - 55);
                HIDWORD(v822) = *(unsigned __int8 *)(v703 - 54);
                v707 = v706;
                LODWORD(v822) = *(unsigned __int8 *)(v703 - 53);
              }
              v708 = (unsigned __int8 *)(v686 + 8);
              v709 = *(_QWORD *)(v686 + 8);
              v710 = v707 ^ v704;
              v711 = v710 >> 31;
              if (v693 == v690)
              {
                if (v711 != v710 || v689 < v709)
                  goto LABEL_1213;
                *(_QWORD *)&v834[8] = v689;
                v712 = 0;
                *(_DWORD *)v834 = 0;
                v713 = 0;
                if (v706 != v704)
                  goto LABEL_1233;
              }
              else
              {
                if (v711 != v710)
                {
                  if (v689 < *(_QWORD *)(v686 + 8))
                    goto LABEL_1213;
                  if (v689 <= *(_QWORD *)(v686 + 8))
                  {
                    if (BYTE1(v689) < BYTE1(v709))
                      goto LABEL_1213;
                    if (BYTE1(v689) <= BYTE1(v709))
                    {
                      if (BYTE2(v689) < BYTE2(v709))
                        goto LABEL_1213;
                      if (BYTE2(v689) <= BYTE2(v709))
                      {
                        if (BYTE3(v689) < BYTE3(v709))
                          goto LABEL_1213;
                        if (BYTE3(v689) <= BYTE3(v709))
                        {
                          if (BYTE4(v689) < BYTE4(v709))
                            goto LABEL_1213;
                          if (BYTE4(v689) <= BYTE4(v709))
                          {
                            if (BYTE5(v689) < BYTE5(v709))
                              goto LABEL_1213;
                            if (BYTE5(v689) <= BYTE5(v709))
                            {
                              if (BYTE6(v689) < BYTE6(v709))
                                goto LABEL_1213;
                              if (BYTE6(v689) <= BYTE6(v709))
                              {
                                v720 = HIBYTE(v709);
                                if (v783 < v720
                                  || v783 <= v720
                                  && (HIDWORD(v821) < v828
                                   || v828 >= HIDWORD(v821)
                                   && (v821 < v827
                                    || v827 >= v821
                                    && (HIDWORD(v820) < v826
                                     || v826 >= HIDWORD(v820)
                                     && (v820 < v825
                                      || v825 >= v820
                                      && (v819 < HIDWORD(v824)
                                       || HIDWORD(v824) >= v819
                                       && (HIDWORD(v818) < DWORD2(v824)
                                        || DWORD2(v824) >= HIDWORD(v818)
                                        && (v818 < DWORD1(v824)
                                         || DWORD1(v824) >= v818
                                         && (HIDWORD(v817) < v824
                                          || v824 >= HIDWORD(v817)
                                          && (v817 < HIDWORD(v823)
                                           || HIDWORD(v823) >= v817
                                           && (v816 < v823
                                            || v823 >= v816 && __PAIR64__(v815, v814) < v822)))))))))))
                                {
                                  goto LABEL_1213;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                *(_QWORD *)&v834[8] = v689;
                v834[16] = BYTE4(v821);
                v834[17] = v821;
                v834[18] = BYTE4(v820);
                v834[19] = v820;
                v834[20] = v819;
                v834[21] = BYTE4(v818);
                v834[22] = v818;
                v834[23] = BYTE4(v817);
                LOBYTE(v835) = v817;
                BYTE1(v835) = v816;
                BYTE2(v835) = v815;
                HIBYTE(v835) = v814;
                v712 = v693 ^ v690;
                *(_DWORD *)v834 = v693 ^ v690;
                v713 = (v693 ^ v690) >> 31;
                if (v706 != v704)
                {
LABEL_1233:
                  if (v713 != v712 && sub_1001D7688(v708, &v834[8]))
                    break;
                  goto LABEL_1242;
                }
              }
              if (v713 != v712 || *(_QWORD *)v708 < v689)
                break;
LABEL_1242:
              v714 = *(_DWORD *)(v703 - 48);
              v715 = v714;
              if (v714 >> 31 != v714)
              {
                LODWORD(v812) = *(unsigned __int8 *)(v703 - 32);
                *(_DWORD *)&v811[12] = *(unsigned __int8 *)(v703 - 31);
                *(_DWORD *)&v811[8] = *(unsigned __int8 *)(v703 - 30);
                *(_DWORD *)&v811[4] = *(unsigned __int8 *)(v703 - 29);
                *(_DWORD *)v811 = *(unsigned __int8 *)(v703 - 28);
                LODWORD(v810) = *(unsigned __int8 *)(v703 - 27);
                LODWORD(v809) = *(unsigned __int8 *)(v703 - 26);
                LODWORD(v808) = *(unsigned __int8 *)(v703 - 25);
                LODWORD(v807) = *(unsigned __int8 *)(v703 - 24);
                LODWORD(v806) = *(unsigned __int8 *)(v703 - 23);
                LODWORD(v805) = *(unsigned __int8 *)(v703 - 22);
                v715 = v714 >> 31;
                LODWORD(v804) = *(unsigned __int8 *)(v703 - 21);
              }
              v716 = *(_QWORD *)(v703 - 40);
              v717 = v715 ^ v714;
              v718 = v717 >> 31;
              if (v694 == v692)
              {
                if (v718 == v717 && v691 >= v716)
                  break;
              }
              else
              {
                if (v718 == v717)
                  break;
                if (v691 >= *(_QWORD *)(v703 - 40))
                {
                  if (*(_QWORD *)(v703 - 40) < v691)
                    break;
                  if (BYTE1(v691) >= BYTE1(v716))
                  {
                    if (BYTE1(v716) < BYTE1(v691))
                      break;
                    if (BYTE2(v691) >= BYTE2(v716))
                    {
                      if (BYTE2(v716) < BYTE2(v691))
                        break;
                      if (BYTE3(v691) >= BYTE3(v716))
                      {
                        if (BYTE3(v716) < BYTE3(v691))
                          break;
                        if (BYTE4(v691) >= BYTE4(v716))
                        {
                          if (BYTE4(v716) < BYTE4(v691))
                            break;
                          if (BYTE5(v691) >= BYTE5(v716))
                          {
                            if (BYTE5(v716) < BYTE5(v691))
                              break;
                            if (BYTE6(v691) >= BYTE6(v716))
                            {
                              if (BYTE6(v716) < BYTE6(v691))
                                break;
                              v719 = HIBYTE(v716);
                              if (v786 >= v719
                                && (v719 < v786
                                 || HIDWORD(v794) >= v812
                                 && (v812 < HIDWORD(v794)
                                  || v794 >= *(_DWORD *)&v811[12]
                                  && (*(_DWORD *)&v811[12] < v794
                                   || HIDWORD(v793) >= *(_DWORD *)&v811[8]
                                   && (*(_DWORD *)&v811[8] < HIDWORD(v793)
                                    || v793 >= *(_DWORD *)&v811[4]
                                    && (*(_DWORD *)&v811[4] < v793
                                     || HIDWORD(v792) >= *(_DWORD *)v811
                                     && (*(_DWORD *)v811 < HIDWORD(v792)
                                      || v792 >= v810
                                      && (v810 < v792
                                       || v791 >= v809
                                       && (v809 < v791
                                        || HIDWORD(v790) >= v808
                                        && (v808 < HIDWORD(v790)
                                         || v790 >= v807
                                         && (v807 < v790
                                          || *(_DWORD *)&v789[8] >= v806
                                          && (v806 < *(_DWORD *)&v789[8]
                                           || *(_QWORD *)v789 >= __PAIR64__(v805, v804)))))))))))))
                              {
                                break;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
LABEL_1213:
              v684 = *(_DWORD *)v703;
            }
            if (*(_DWORD *)v703 != v690)
            {
              if (v693 != v690)
              {
                *(_QWORD *)(v703 + 8) = v689;
                *(_BYTE *)(v703 + 16) = BYTE4(v821);
                *(_BYTE *)(v703 + 17) = v821;
                *(_BYTE *)(v703 + 18) = BYTE4(v820);
                *(_BYTE *)(v703 + 19) = v820;
                *(_BYTE *)(v703 + 20) = v819;
                *(_BYTE *)(v703 + 21) = BYTE4(v818);
                *(_BYTE *)(v703 + 22) = v818;
                *(_BYTE *)(v703 + 23) = BYTE4(v817);
                *(_BYTE *)(v703 + 24) = v817;
                *(_BYTE *)(v703 + 25) = v816;
                *(_BYTE *)(v703 + 26) = v815;
                *(_BYTE *)(v703 + 27) = v814;
                *(_DWORD *)v703 = v693 ^ v690;
                v721 = (int *)a2;
                if (*(_DWORD *)(v703 + 32) != v692)
                  goto LABEL_1328;
              }
              else
              {
                *(_QWORD *)(v703 + 8) = v689;
                *(_DWORD *)v703 = 0;
                v721 = (int *)a2;
                if (*(_DWORD *)(v703 + 32) != v692)
                  goto LABEL_1328;
              }
              goto LABEL_1332;
            }
            if (v693 != v690)
            {
              *(_QWORD *)(v703 + 8) = v689;
              *(_BYTE *)(v703 + 16) = BYTE4(v821);
              *(_BYTE *)(v703 + 17) = v821;
              *(_BYTE *)(v703 + 18) = BYTE4(v820);
              *(_BYTE *)(v703 + 19) = v820;
              *(_BYTE *)(v703 + 20) = v819;
              *(_BYTE *)(v703 + 21) = BYTE4(v818);
              *(_BYTE *)(v703 + 22) = v818;
              *(_BYTE *)(v703 + 23) = BYTE4(v817);
              *(_BYTE *)(v703 + 24) = v817;
              *(_BYTE *)(v703 + 25) = v816;
              *(_BYTE *)(v703 + 26) = v815;
              *(_BYTE *)(v703 + 27) = v814;
              v721 = (int *)a2;
              if (*(_DWORD *)(v703 + 32) != v692)
                goto LABEL_1328;
LABEL_1332:
              *(_QWORD *)(v703 + 40) = v691;
              if (v694 != v692)
              {
                *(_BYTE *)(v703 + 48) = BYTE4(v794);
                *(_BYTE *)(v703 + 49) = v794;
                *(_BYTE *)(v703 + 50) = BYTE4(v793);
                *(_BYTE *)(v703 + 51) = v793;
                *(_BYTE *)(v703 + 52) = BYTE4(v792);
                *(_BYTE *)(v703 + 53) = v792;
                *(_BYTE *)(v703 + 54) = v791;
                *(_BYTE *)(v703 + 55) = BYTE4(v790);
                *(_BYTE *)(v703 + 56) = v790;
                *(_BYTE *)(v703 + 57) = v789[8];
                *(_BYTE *)(v703 + 58) = v789[4];
                *(_BYTE *)(v703 + 59) = v789[0];
              }
              goto LABEL_1338;
            }
            *(_QWORD *)(v703 + 8) = v689;
            v721 = (int *)a2;
            if (*(_DWORD *)(v703 + 32) == v692)
              goto LABEL_1332;
LABEL_1328:
            *(_QWORD *)(v703 + 40) = v691;
            if (v694 != v692)
            {
              *(_BYTE *)(v703 + 48) = BYTE4(v794);
              *(_BYTE *)(v703 + 49) = v794;
              *(_BYTE *)(v703 + 50) = BYTE4(v793);
              *(_BYTE *)(v703 + 51) = v793;
              *(_BYTE *)(v703 + 52) = BYTE4(v792);
              *(_BYTE *)(v703 + 53) = v792;
              *(_BYTE *)(v703 + 54) = v791;
              *(_BYTE *)(v703 + 55) = BYTE4(v790);
              *(_BYTE *)(v703 + 56) = v790;
              *(_BYTE *)(v703 + 57) = v789[8];
              *(_BYTE *)(v703 + 58) = v789[4];
              *(_BYTE *)(v703 + 59) = v789[0];
              *(_DWORD *)(v703 + 32) = v694 ^ v692;
            }
            else
            {
              *(_DWORD *)(v703 + 32) = 0;
            }
LABEL_1338:
            v722 = *(_QWORD *)&v846[4];
            *(_DWORD *)(v703 + 72) = *(_DWORD *)&v846[12];
            *(_QWORD *)(v703 + 64) = v722;
            v682 = (uint64_t)(v683 + 20);
            v745 = (uint64_t)v683;
            if (v683 + 20 == v721)
              return;
          }
        }
        if ((int *)v745 == v10)
          return;
        v423 = v745 + 80;
        if ((int *)(v745 + 80) == v10)
          return;
        v424 = 0;
        v425 = v745;
        while (2)
        {
          v471 = (int *)v423;
          if (!sub_1001DF450(v423, v425))
            goto LABEL_886;
          v472 = *v471;
          v473 = *v471 >> 31;
          v474 = (_QWORD *)(v425 + 88);
          if (v472 >> 31 == v472)
          {
            *(_QWORD *)&v834[8] = *v474;
            v473 = v472;
          }
          else
          {
            *(_OWORD *)&v834[8] = *(_OWORD *)v474;
            v835 = *(_DWORD *)(v425 + 104);
          }
          *(_DWORD *)v834 = v473 ^ v472;
          v475 = *(_DWORD *)(v425 + 112);
          v476 = v475 >> 31;
          v477 = (_QWORD *)(v425 + 120);
          if (v475 >> 31 == v475)
          {
            *(_QWORD *)&v837 = *v477;
            v476 = v475;
          }
          else
          {
            v837 = *(_OWORD *)v477;
            v838 = *(_DWORD *)(v425 + 136);
          }
          v836 = v476 ^ v475;
          v839 = *(_OWORD *)(v425 + 144);
          for (i = v424; ; i -= 80)
          {
            v479 = (_DWORD *)(v745 + i);
            v480 = *(_DWORD *)(v745 + i);
            if (v472 == v480)
            {
              v481 = v479 + 2;
              v482 = v479 + 22;
              if (v472 == v472 >> 31)
              {
                *v482 = *v481;
                v483 = (_DWORD *)(v745 + i);
                v484 = *(_DWORD *)(v745 + i + 112);
                v485 = *(_DWORD *)(v745 + i + 32);
                if (v484 != v485)
                  goto LABEL_899;
              }
              else
              {
                *(_OWORD *)v482 = *(_OWORD *)v481;
                v479[26] = v479[6];
                v483 = (_DWORD *)(v745 + i);
                v484 = *(_DWORD *)(v745 + i + 112);
                v485 = *(_DWORD *)(v745 + i + 32);
                if (v484 != v485)
                  goto LABEL_899;
              }
            }
            else
            {
              v489 = v480 ^ (v480 >> 31);
              v490 = v479 + 2;
              v491 = v479 + 22;
              if (v489)
              {
                *v491 = *v490;
                v479[26] = v479[6];
                v479[20] = v489;
                v483 = (_DWORD *)(v745 + i);
                v484 = *(_DWORD *)(v745 + i + 112);
                v485 = *(_DWORD *)(v745 + i + 32);
                if (v484 != v485)
                  goto LABEL_899;
              }
              else
              {
                *(_QWORD *)v491 = *(_QWORD *)v490;
                v479[20] = 0;
                v483 = (_DWORD *)(v745 + i);
                v484 = *(_DWORD *)(v745 + i + 112);
                v485 = *(_DWORD *)(v745 + i + 32);
                if (v484 != v485)
                {
LABEL_899:
                  v486 = v485 ^ (v485 >> 31);
                  v487 = v483 + 10;
                  v488 = v483 + 30;
                  if (v486)
                  {
                    *v488 = *v487;
                    v483[34] = v483[14];
                    v483[28] = v486;
                  }
                  else
                  {
                    *(_QWORD *)v488 = *(_QWORD *)v487;
                    v483[28] = 0;
                  }
                  goto LABEL_909;
                }
              }
            }
            v492 = v483 + 10;
            v493 = v483 + 30;
            if (v484 == v484 >> 31)
            {
              *(_QWORD *)v493 = *(_QWORD *)v492;
            }
            else
            {
              *(_OWORD *)v493 = *(_OWORD *)v492;
              v493[4] = v492[4];
            }
LABEL_909:
            v494 = v745 + i;
            *(_QWORD *)(v494 + 144) = *(_QWORD *)(v745 + i + 64);
            *(_DWORD *)(v494 + 152) = *(_DWORD *)(v745 + i + 72);
            if (!i)
            {
              v425 = v745;
              v511 = *(_DWORD *)v745;
              v512 = *(_DWORD *)v834;
              if (*(_DWORD *)v745 == *(_DWORD *)v834)
                goto LABEL_941;
LABEL_946:
              v518 = v512 ^ (v512 >> 31);
              if (v518)
              {
                v519 = *(_OWORD *)&v834[8];
                *(_DWORD *)(v425 + 24) = v835;
                *(_OWORD *)(v425 + 8) = v519;
                *(_DWORD *)v425 = v518;
                v514 = *(_DWORD *)(v425 + 32);
                v515 = v836;
                if (v514 == v836)
                  goto LABEL_948;
              }
              else
              {
                *(_QWORD *)(v425 + 8) = *(_QWORD *)&v834[8];
                *(_DWORD *)v425 = 0;
                v514 = *(_DWORD *)(v425 + 32);
                v515 = v836;
                if (v514 == v836)
                  goto LABEL_948;
              }
              goto LABEL_943;
            }
            v495 = *(_DWORD *)(v494 - 80);
            v496 = v495 >> 31;
            v497 = (_QWORD *)(v494 - 72);
            if (v495 >> 31 == v495)
            {
              *(_QWORD *)&v846[8] = *v497;
              v496 = v495;
            }
            else
            {
              v498 = *(_OWORD *)v497;
              v847 = *(_DWORD *)(v494 - 56);
              *(_OWORD *)&v846[8] = v498;
            }
            v499 = v496 ^ v495;
            *(_DWORD *)v846 = v499;
            v500 = *(_DWORD *)v834;
            v501 = *(int *)v834 >> 31;
            v502 = v499 >> 31;
            if (*(int *)v834 >> 31 != *(_DWORD *)v834)
              break;
            if (v502 != v499)
              goto LABEL_895;
            v503 = *(_QWORD *)&v834[8];
            if (*(_QWORD *)&v834[8] < *(_QWORD *)&v846[8])
              goto LABEL_895;
LABEL_922:
            *(_QWORD *)&v844 = v503;
            v504 = 0;
            v843 = 0;
            v505 = 0;
            if (*(_DWORD *)(v494 - 80) != *(int *)(v494 - 80) >> 31)
              goto LABEL_929;
LABEL_923:
            if (v505 != v504 || *v497 < (unint64_t)v844)
              goto LABEL_939;
LABEL_931:
            v506 = *(_DWORD *)(v745 + i - 48);
            v507 = (_QWORD *)(v745 + i - 40);
            if (v506 >> 31 == v506)
            {
              *(_QWORD *)&v841 = *v507;
              v508 = 0;
              v840 = 0;
              v509 = 0;
              if (v836 == v836 >> 31)
                goto LABEL_937;
            }
            else
            {
              v510 = *(_OWORD *)v507;
              v842 = *(_DWORD *)(v745 + i - 24);
              v841 = v510;
              v508 = (v506 >> 31) ^ v506;
              v840 = v508;
              v509 = v508 >> 31;
              if (v836 == v836 >> 31)
              {
LABEL_937:
                if (v509 == v508 && (unint64_t)v837 >= (unint64_t)v841)
                  goto LABEL_939;
                goto LABEL_895;
              }
            }
            if (v509 == v508)
              goto LABEL_939;
            if (!sub_1001D7688((unsigned __int8 *)&v837, (unsigned __int8 *)&v841))
              goto LABEL_940;
LABEL_895:
            v425 -= 80;
            v472 = *v479;
          }
          if (v502 != v499)
          {
            if (sub_1001D7688(&v834[8], &v846[8]))
              goto LABEL_895;
            v500 = *(_DWORD *)v834;
            v501 = *(int *)v834 >> 31;
          }
          if (v501 == v500)
          {
            v503 = *(_QWORD *)&v834[8];
            goto LABEL_922;
          }
          v844 = *(_OWORD *)&v834[8];
          v845 = v835;
          v504 = v501 ^ v500;
          v843 = v504;
          v505 = v504 >> 31;
          if (*(_DWORD *)(v494 - 80) == *(int *)(v494 - 80) >> 31)
            goto LABEL_923;
LABEL_929:
          if (v505 == v504 || !sub_1001D7688((unsigned __int8 *)(v494 - 72), (unsigned __int8 *)&v844))
            goto LABEL_931;
LABEL_939:
          v425 = v745 + i;
LABEL_940:
          v511 = *(_DWORD *)v425;
          v512 = *(_DWORD *)v834;
          if (*(_DWORD *)v425 != *(_DWORD *)v834)
            goto LABEL_946;
LABEL_941:
          v513 = (_OWORD *)(v425 + 8);
          if (v511 != v511 >> 31)
          {
            v521 = *(_OWORD *)&v834[8];
            *(_DWORD *)(v425 + 24) = v835;
            *v513 = v521;
            v514 = *(_DWORD *)(v425 + 32);
            v515 = v836;
            if (v514 == v836)
              goto LABEL_948;
LABEL_943:
            v516 = v515 ^ (v515 >> 31);
            if (v516)
            {
              v517 = v837;
              *(_DWORD *)(v425 + 56) = v838;
              *(_OWORD *)(v425 + 40) = v517;
              *(_DWORD *)(v425 + 32) = v516;
            }
            else
            {
              *(_QWORD *)(v425 + 40) = v837;
              *(_DWORD *)(v425 + 32) = 0;
            }
            goto LABEL_885;
          }
          *(_QWORD *)v513 = *(_QWORD *)&v834[8];
          v514 = *(_DWORD *)(v425 + 32);
          v515 = v836;
          if (v514 != v836)
            goto LABEL_943;
LABEL_948:
          v520 = (_QWORD *)(v425 + 40);
          if (v514 == v514 >> 31)
          {
            *v520 = v837;
          }
          else
          {
            v469 = v837;
            *(_DWORD *)(v425 + 56) = v838;
            *(_OWORD *)v520 = v469;
          }
LABEL_885:
          v470 = v839;
          *(_DWORD *)(v494 + 72) = DWORD2(v839);
          *(_QWORD *)(v494 + 64) = v470;
LABEL_886:
          v423 = (uint64_t)(v471 + 20);
          v424 += 80;
          v425 = (uint64_t)v471;
          if (v471 + 20 != v10)
            continue;
          return;
        }
    }
  }
}

__n128 sub_1001DEC74(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 result;
  int v11;
  int v12;
  int v13;
  unsigned __int32 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  sub_1001DF938(a1, a2, a3, a4);
  if (sub_1001DF450(a5, a4))
  {
    sub_1001DF660(a4, a5);
    v15 = *(_OWORD *)(a4 + 64);
    v11 = *(_DWORD *)(a5 + 72);
    *(_QWORD *)(a4 + 64) = *(_QWORD *)(a5 + 64);
    *(_DWORD *)(a4 + 72) = v11;
    *(_QWORD *)(a5 + 64) = v15;
    *(_DWORD *)(a5 + 72) = DWORD2(v15);
    if (sub_1001DF450(a4, a3))
    {
      sub_1001DF660(a3, a4);
      v16 = *(_OWORD *)(a3 + 64);
      v12 = *(_DWORD *)(a4 + 72);
      *(_QWORD *)(a3 + 64) = *(_QWORD *)(a4 + 64);
      *(_DWORD *)(a3 + 72) = v12;
      *(_QWORD *)(a4 + 64) = v16;
      *(_DWORD *)(a4 + 72) = DWORD2(v16);
      if (sub_1001DF450(a3, a2))
      {
        sub_1001DF660(a2, a3);
        v17 = *(_OWORD *)(a2 + 64);
        v13 = *(_DWORD *)(a3 + 72);
        *(_QWORD *)(a2 + 64) = *(_QWORD *)(a3 + 64);
        *(_DWORD *)(a2 + 72) = v13;
        *(_QWORD *)(a3 + 64) = v17;
        *(_DWORD *)(a3 + 72) = DWORD2(v17);
        if (sub_1001DF450(a2, (uint64_t)a1))
        {
          sub_1001DF660((uint64_t)a1, a2);
          result = a1[4];
          v14 = *(_DWORD *)(a2 + 72);
          a1[4].n128_u64[0] = *(_QWORD *)(a2 + 64);
          a1[4].n128_u32[2] = v14;
          *(_QWORD *)(a2 + 64) = result.n128_u64[0];
          *(_DWORD *)(a2 + 72) = result.n128_u32[2];
        }
      }
    }
  }
  return result;
}

uint64_t sub_1001DEDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  __int128 *v12;
  int v13;
  int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v6 = sub_1001DF450(a2, a1);
  result = sub_1001DF450(a3, a2);
  if (v6)
  {
    v8 = a1 + 64;
    if ((_DWORD)result)
    {
      result = sub_1001DF660(a1, a3);
      v15 = *(_OWORD *)v8;
      v9 = *(_DWORD *)(a3 + 72);
      *(_QWORD *)v8 = *(_QWORD *)(a3 + 64);
      *(_DWORD *)(a1 + 72) = v9;
LABEL_10:
      *(_QWORD *)(a3 + 64) = v15;
      *(_DWORD *)(a3 + 72) = DWORD2(v15);
      return result;
    }
    sub_1001DF660(a1, a2);
    v12 = (__int128 *)(a2 + 64);
    v18 = *(_OWORD *)v8;
    v13 = *(_DWORD *)(a2 + 72);
    *(_QWORD *)v8 = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(v8 + 8) = v13;
    *(_QWORD *)(a2 + 64) = v18;
    *(_DWORD *)(a2 + 72) = DWORD2(v18);
    result = sub_1001DF450(a3, a2);
    if ((_DWORD)result)
    {
      result = sub_1001DF660(a2, a3);
      v15 = *v12;
      v14 = *(_DWORD *)(a3 + 72);
      *(_QWORD *)v12 = *(_QWORD *)(a3 + 64);
      *(_DWORD *)(a2 + 72) = v14;
      goto LABEL_10;
    }
  }
  else if ((_DWORD)result)
  {
    sub_1001DF660(a2, a3);
    v16 = *(_OWORD *)(a2 + 64);
    v10 = *(_DWORD *)(a3 + 72);
    *(_QWORD *)(a2 + 64) = *(_QWORD *)(a3 + 64);
    *(_DWORD *)(a2 + 72) = v10;
    *(_QWORD *)(a3 + 64) = v16;
    *(_DWORD *)(a3 + 72) = DWORD2(v16);
    result = sub_1001DF450(a2, a1);
    if ((_DWORD)result)
    {
      result = sub_1001DF660(a1, a2);
      v17 = *(_OWORD *)(a1 + 64);
      v11 = *(_DWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_DWORD *)(a1 + 72) = v11;
      *(_QWORD *)(a2 + 64) = v17;
      *(_DWORD *)(a2 + 72) = DWORD2(v17);
    }
  }
  return result;
}

BOOL sub_1001DEF6C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _BOOL8 result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _DWORD *v18;
  int v19;
  int v20;
  _DWORD *v21;
  _DWORD *v22;
  _DWORD *v23;
  int v24;
  int v25;
  int v26;
  _OWORD *v27;
  _OWORD *v28;
  _DWORD *v29;
  _DWORD *v30;
  int v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;
  _BYTE v44[24];
  int v45;
  int v46;
  __int128 v47;
  int v48;
  __int128 v49;

  v4 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1) >> 4);
  result = 1;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      if (sub_1001DF450(a2 - 80, a1))
      {
        sub_1001DF660(a1, a2 - 80);
        *(_OWORD *)v44 = *(_OWORD *)(a1 + 64);
        v6 = *(_DWORD *)(a2 - 8);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 - 16);
        *(_DWORD *)(a1 + 72) = v6;
        *(_QWORD *)(a2 - 16) = *(_QWORD *)v44;
        *(_DWORD *)(a2 - 8) = *(_DWORD *)&v44[8];
      }
      return 1;
    case 3uLL:
      sub_1001DEDD8(a1, a1 + 80, a2 - 80);
      return 1;
    case 4uLL:
      sub_1001DF938((__n128 *)a1, a1 + 80, a1 + 160, a2 - 80);
      return 1;
    case 5uLL:
      sub_1001DEC74((__n128 *)a1, a1 + 80, a1 + 160, a1 + 240, a2 - 80);
      return 1;
    default:
      v7 = a1 + 160;
      sub_1001DEDD8(a1, a1 + 80, a1 + 160);
      v8 = a1 + 240;
      if (a1 + 240 == a2)
        return 1;
      v9 = 0;
      v10 = 0;
      break;
  }
  while (2)
  {
    if (!sub_1001DF450(v8, v7))
      goto LABEL_8;
    v12 = (_QWORD *)(v8 + 8);
    v11 = *(_DWORD *)v8;
    v13 = *(int *)v8 >> 31;
    if (v11 >> 31 == v11)
    {
      *(_QWORD *)&v44[8] = *v12;
      v13 = v11;
    }
    else
    {
      *(_OWORD *)&v44[8] = *(_OWORD *)v12;
      v45 = *(_DWORD *)(v8 + 24);
    }
    *(_DWORD *)v44 = v13 ^ v11;
    v14 = *(_DWORD *)(v8 + 32);
    v15 = v14 >> 31;
    v16 = (_QWORD *)(v8 + 40);
    if (v14 >> 31 == v14)
    {
      *(_QWORD *)&v47 = *v16;
      v15 = v14;
    }
    else
    {
      v47 = *(_OWORD *)v16;
      v48 = *(_DWORD *)(v8 + 56);
    }
    v46 = v14 ^ v15;
    v49 = *(_OWORD *)(v8 + 64);
    v17 = v9;
    while (1)
    {
      v18 = (_DWORD *)(a1 + v17);
      v19 = *(_DWORD *)(a1 + v17 + 240);
      v20 = *(_DWORD *)(a1 + v17 + 160);
      if (v19 == v20)
      {
        v21 = v18 + 42;
        v22 = v18 + 62;
        if (v19 == v19 >> 31)
        {
          *(_QWORD *)v22 = *(_QWORD *)v21;
          v23 = (_DWORD *)(a1 + v17);
          v24 = *(_DWORD *)(a1 + v17 + 272);
          v25 = *(_DWORD *)(a1 + v17 + 192);
          if (v24 != v25)
            goto LABEL_29;
        }
        else
        {
          *(_OWORD *)v22 = *(_OWORD *)v21;
          v22[4] = v21[4];
          v23 = (_DWORD *)(a1 + v17);
          v24 = *(_DWORD *)(a1 + v17 + 272);
          v25 = *(_DWORD *)(a1 + v17 + 192);
          if (v24 != v25)
            goto LABEL_29;
        }
      }
      else
      {
        v26 = v20 ^ (v20 >> 31);
        v27 = v18 + 42;
        v28 = v18 + 62;
        if (v26)
        {
          *v28 = *v27;
          v18[66] = v18[46];
          v18[60] = v26;
          v23 = (_DWORD *)(a1 + v17);
          v24 = *(_DWORD *)(a1 + v17 + 272);
          v25 = *(_DWORD *)(a1 + v17 + 192);
          if (v24 != v25)
            goto LABEL_29;
        }
        else
        {
          *(_QWORD *)v28 = *(_QWORD *)v27;
          v18[60] = 0;
          v23 = (_DWORD *)(a1 + v17);
          v24 = *(_DWORD *)(a1 + v17 + 272);
          v25 = *(_DWORD *)(a1 + v17 + 192);
          if (v24 != v25)
          {
LABEL_29:
            v31 = v25 ^ (v25 >> 31);
            v32 = v23 + 50;
            v33 = v23 + 70;
            if (v31)
            {
              *v33 = *v32;
              v23[74] = v23[54];
              v23[68] = v31;
            }
            else
            {
              *(_QWORD *)v33 = *(_QWORD *)v32;
              v23[68] = 0;
            }
            goto LABEL_32;
          }
        }
      }
      v29 = v23 + 50;
      v30 = v23 + 70;
      if (v24 == v24 >> 31)
      {
        *(_QWORD *)v30 = *(_QWORD *)v29;
      }
      else
      {
        *(_OWORD *)v30 = *(_OWORD *)v29;
        v30[4] = v29[4];
      }
LABEL_32:
      v34 = a1 + v17;
      *(_QWORD *)(v34 + 304) = *(_QWORD *)(a1 + v17 + 224);
      *(_DWORD *)(v34 + 312) = *(_DWORD *)(a1 + v17 + 232);
      if (v17 == -160)
        break;
      v17 -= 80;
      if (!sub_1001DF450((uint64_t)v44, v34 + 80))
      {
        v35 = a1 + v17 + 240;
        v36 = *(_DWORD *)v35;
        v37 = *(_DWORD *)v44;
        if (*(_DWORD *)v35 != *(_DWORD *)v44)
          goto LABEL_35;
LABEL_39:
        v41 = (_QWORD *)(v35 + 8);
        if (v36 == v36 >> 31)
        {
          *v41 = *(_QWORD *)&v44[8];
          v39 = *(_DWORD *)(v35 + 32);
          v40 = v46;
          if (v39 != v46)
          {
LABEL_46:
            v43 = v40 ^ (v40 >> 31);
            if (v43)
            {
              *(_OWORD *)(v35 + 40) = v47;
              *(_DWORD *)(v35 + 56) = v48;
              *(_DWORD *)(v35 + 32) = v43;
            }
            else
            {
              *(_QWORD *)(v35 + 40) = v47;
              *(_DWORD *)(v35 + 32) = 0;
            }
            goto LABEL_7;
          }
        }
        else
        {
          *(_OWORD *)v41 = *(_OWORD *)&v44[8];
          *(_DWORD *)(v35 + 24) = v45;
          v39 = *(_DWORD *)(v35 + 32);
          v40 = v46;
          if (v39 != v46)
            goto LABEL_46;
        }
        goto LABEL_43;
      }
    }
    v35 = a1;
    v36 = *(_DWORD *)a1;
    v37 = *(_DWORD *)v44;
    if (*(_DWORD *)a1 == *(_DWORD *)v44)
      goto LABEL_39;
LABEL_35:
    v38 = v37 ^ (v37 >> 31);
    if (v38)
    {
      *(_OWORD *)(v35 + 8) = *(_OWORD *)&v44[8];
      *(_DWORD *)(v35 + 24) = v45;
      *(_DWORD *)v35 = v38;
      v39 = *(_DWORD *)(v35 + 32);
      v40 = v46;
      if (v39 != v46)
        goto LABEL_46;
    }
    else
    {
      *(_QWORD *)(v35 + 8) = *(_QWORD *)&v44[8];
      *(_DWORD *)v35 = 0;
      v39 = *(_DWORD *)(v35 + 32);
      v40 = v46;
      if (v39 != v46)
        goto LABEL_46;
    }
LABEL_43:
    v42 = v35 + 40;
    if (v39 == v39 >> 31)
    {
      *(_QWORD *)v42 = v47;
    }
    else
    {
      *(_OWORD *)v42 = v47;
      *(_DWORD *)(v42 + 16) = v48;
    }
LABEL_7:
    *(_QWORD *)(v34 + 224) = v49;
    *(_DWORD *)(v34 + 232) = DWORD2(v49);
    if (++v10 == 8)
      return v8 + 80 == a2;
LABEL_8:
    v7 = v8;
    v9 += 80;
    v8 += 80;
    if (v8 != a2)
      continue;
    return 1;
  }
}

BOOL sub_1001DF450(uint64_t a1, uint64_t a2)
{
  int v4;
  _QWORD *v5;
  int v6;
  int v7;
  int v8;
  _QWORD *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _QWORD *v16;
  int v17;
  unsigned __int8 *v18;
  int v19;
  __int128 v21;
  int v22;
  int v23;
  __int128 v24;
  int v25;
  int v26;
  __int128 v27;
  int v28;

  v5 = (_QWORD *)(a2 + 8);
  v4 = *(_DWORD *)a2;
  v6 = *(int *)a2 >> 31;
  if (v4 >> 31 == v4)
  {
    *(_QWORD *)&v27 = *v5;
    v6 = v4;
  }
  else
  {
    v27 = *(_OWORD *)v5;
    v28 = *(_DWORD *)(a2 + 24);
  }
  v7 = v6 ^ v4;
  v26 = v7;
  v9 = (_QWORD *)(a1 + 8);
  v8 = *(_DWORD *)a1;
  v10 = *(int *)a1 >> 31;
  v11 = v7 >> 31;
  if (v10 != *(_DWORD *)a1)
  {
    if (v11 == v7)
      goto LABEL_11;
    if (!sub_1001D7688((unsigned __int8 *)(a1 + 8), (unsigned __int8 *)&v27))
    {
      v8 = *(_DWORD *)a1;
      v10 = *(int *)a1 >> 31;
      goto LABEL_11;
    }
    return 1;
  }
  if (v11 != v7 || *v9 < (unint64_t)v27)
    return 1;
LABEL_11:
  if (v10 != v8)
  {
    v24 = *(_OWORD *)v9;
    v25 = *(_DWORD *)(a1 + 24);
    v12 = v10 ^ v8;
    v23 = v12;
    v13 = v12 >> 31;
    if (*(_DWORD *)a2 != *(int *)a2 >> 31)
      goto LABEL_13;
LABEL_17:
    if (v13 != v12 || *v5 < (unint64_t)v24)
      return 0;
    goto LABEL_19;
  }
  *(_QWORD *)&v24 = *v9;
  v12 = 0;
  v23 = 0;
  v13 = 0;
  if (*(_DWORD *)a2 == *(int *)a2 >> 31)
    goto LABEL_17;
LABEL_13:
  if (v13 != v12 && sub_1001D7688((unsigned __int8 *)(a2 + 8), (unsigned __int8 *)&v24))
    return 0;
LABEL_19:
  v14 = *(_DWORD *)(a2 + 32);
  v15 = v14 >> 31;
  v16 = (_QWORD *)(a2 + 40);
  if (v14 >> 31 == v14)
  {
    *(_QWORD *)&v21 = *v16;
    v15 = v14;
  }
  else
  {
    v21 = *(_OWORD *)v16;
    v22 = *(_DWORD *)(a2 + 56);
  }
  v17 = v15 ^ v14;
  v18 = (unsigned __int8 *)(a1 + 40);
  v19 = v17 >> 31;
  if (*(_DWORD *)(a1 + 32) == *(int *)(a1 + 32) >> 31)
  {
    if (v19 == v17)
      return *(_QWORD *)v18 < (unint64_t)v21;
    return 1;
  }
  if (v19 != v17)
    return sub_1001D7688(v18, (unsigned __int8 *)&v21);
  return 0;
}

uint64_t sub_1001DF660(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int v12;
  int v13;
  int v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;
  int v19;
  int v20;
  __int128 v21;
  int v22;
  __int128 *v23;
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;

  v2 = *(_DWORD *)result;
  v3 = *(int *)result >> 31;
  v4 = *(_DWORD *)result;
  if (v3 != *(_DWORD *)result)
  {
    v28 = *(_QWORD *)(result + 16);
    v29 = *(_DWORD *)(result + 24);
    v4 = v2 >> 31;
  }
  v6 = (_QWORD *)(result + 40);
  v5 = *(_QWORD *)(result + 40);
  v7 = *(_DWORD *)(result + 32);
  v8 = v7;
  if (v7 >> 31 != v7)
  {
    v26 = *(_QWORD *)(result + 48);
    v27 = *(_DWORD *)(result + 56);
    v8 = v7 >> 31;
  }
  v10 = (_QWORD *)(result + 8);
  v9 = *(_QWORD *)(result + 8);
  if (v2 == *(_DWORD *)a2)
  {
    v11 = (_QWORD *)(a2 + 8);
    if (v3 == v2)
    {
      *v10 = *v11;
      v12 = v4 ^ v2;
      v13 = *(_DWORD *)(a2 + 32);
      if (v7 != v13)
        goto LABEL_19;
    }
    else
    {
      v17 = *(_OWORD *)v11;
      *(_DWORD *)(result + 24) = *(_DWORD *)(a2 + 24);
      *(_OWORD *)v10 = v17;
      v12 = v4 ^ v2;
      v13 = *(_DWORD *)(a2 + 32);
      if (v7 != v13)
        goto LABEL_19;
    }
LABEL_13:
    v18 = (_QWORD *)(a2 + 40);
    if (v7 >> 31 == v7)
    {
      *v6 = *v18;
      v19 = v8 ^ v7;
      v20 = v12 >> 31;
      if (*(_DWORD *)a2 == v12)
        goto LABEL_21;
    }
    else
    {
      v21 = *(_OWORD *)v18;
      *(_DWORD *)(result + 56) = *(_DWORD *)(a2 + 56);
      *(_OWORD *)v6 = v21;
      v19 = v8 ^ v7;
      v20 = v12 >> 31;
      if (*(_DWORD *)a2 == v12)
        goto LABEL_21;
    }
    goto LABEL_25;
  }
  v14 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  v15 = (_QWORD *)(a2 + 8);
  if (!v14)
  {
    *(_QWORD *)(result + 8) = *v15;
    *(_DWORD *)result = 0;
    v12 = v4 ^ v2;
    v13 = *(_DWORD *)(a2 + 32);
    if (v7 != v13)
      goto LABEL_19;
    goto LABEL_13;
  }
  v16 = *(_OWORD *)v15;
  *(_DWORD *)(result + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)v10 = v16;
  *(_DWORD *)result = v14;
  v12 = v4 ^ v2;
  v13 = *(_DWORD *)(a2 + 32);
  if (v7 == v13)
    goto LABEL_13;
LABEL_19:
  v22 = v13 ^ (v13 >> 31);
  v23 = (__int128 *)(a2 + 40);
  if (v22)
  {
    v24 = *v23;
    *(_DWORD *)(result + 56) = *(_DWORD *)(a2 + 56);
    *(_OWORD *)v6 = v24;
    *(_DWORD *)(result + 32) = v22;
    v19 = v8 ^ v7;
    v20 = v12 >> 31;
    if (*(_DWORD *)a2 == v12)
      goto LABEL_21;
LABEL_25:
    *(_QWORD *)(a2 + 8) = v9;
    if (v20 == v12)
    {
      *(_DWORD *)a2 = 0;
      v25 = v19 >> 31;
      if (*(_DWORD *)(a2 + 32) != v19)
        goto LABEL_31;
      goto LABEL_28;
    }
    *(_QWORD *)(a2 + 16) = v28;
    *(_DWORD *)(a2 + 24) = v29;
    *(_DWORD *)a2 = v20 ^ v12;
LABEL_27:
    v25 = v19 >> 31;
    if (*(_DWORD *)(a2 + 32) != v19)
      goto LABEL_31;
    goto LABEL_28;
  }
  *(_QWORD *)(result + 40) = *(_QWORD *)v23;
  *(_DWORD *)(result + 32) = 0;
  v19 = v8 ^ v7;
  v20 = v12 >> 31;
  if (*(_DWORD *)a2 != v12)
    goto LABEL_25;
LABEL_21:
  *(_QWORD *)(a2 + 8) = v9;
  if (v20 == v12)
    goto LABEL_27;
  *(_QWORD *)(a2 + 16) = v28;
  *(_DWORD *)(a2 + 24) = v29;
  v25 = v19 >> 31;
  if (*(_DWORD *)(a2 + 32) != v19)
  {
LABEL_31:
    *(_QWORD *)(a2 + 40) = v5;
    if (v25 != v19)
    {
      *(_QWORD *)(a2 + 48) = v26;
      *(_DWORD *)(a2 + 56) = v27;
      *(_DWORD *)(a2 + 32) = v25 ^ v19;
    }
    else
    {
      *(_DWORD *)(a2 + 32) = 0;
    }
    return result;
  }
LABEL_28:
  *(_QWORD *)(a2 + 40) = v5;
  if (v25 != v19)
  {
    *(_QWORD *)(a2 + 48) = v26;
    *(_DWORD *)(a2 + 56) = v27;
  }
  return result;
}

__n128 sub_1001DF938(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  int v9;
  int v10;
  unsigned __int32 v11;
  __int128 v12;
  __int128 v13;

  sub_1001DEDD8((uint64_t)a1, a2, a3);
  if (sub_1001DF450(a4, a3))
  {
    sub_1001DF660(a3, a4);
    v12 = *(_OWORD *)(a3 + 64);
    v9 = *(_DWORD *)(a4 + 72);
    *(_QWORD *)(a3 + 64) = *(_QWORD *)(a4 + 64);
    *(_DWORD *)(a3 + 72) = v9;
    *(_QWORD *)(a4 + 64) = v12;
    *(_DWORD *)(a4 + 72) = DWORD2(v12);
    if (sub_1001DF450(a3, a2))
    {
      sub_1001DF660(a2, a3);
      v13 = *(_OWORD *)(a2 + 64);
      v10 = *(_DWORD *)(a3 + 72);
      *(_QWORD *)(a2 + 64) = *(_QWORD *)(a3 + 64);
      *(_DWORD *)(a2 + 72) = v10;
      *(_QWORD *)(a3 + 64) = v13;
      *(_DWORD *)(a3 + 72) = DWORD2(v13);
      if (sub_1001DF450(a2, (uint64_t)a1))
      {
        sub_1001DF660((uint64_t)a1, a2);
        result = a1[4];
        v11 = *(_DWORD *)(a2 + 72);
        a1[4].n128_u64[0] = *(_QWORD *)(a2 + 64);
        a1[4].n128_u32[2] = v11;
        *(_QWORD *)(a2 + 64) = result.n128_u64[0];
        *(_DWORD *)(a2 + 72) = result.n128_u32[2];
      }
    }
  }
  return result;
}

std::string *sub_1001DFA48@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001DFA78(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001DFA94@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t result;
  std::bad_cast v3;
  _UNKNOWN **v4;
  _UNKNOWN **v5;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  result = sub_1001DFB30(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_1003EFFF0;
    sub_1000F9804((uint64_t)&v3);
  }
  return result;
}

void sub_1001DFB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  uint64_t v10;

  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0)
    operator delete(*(void **)v10);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DFB30(uint64_t a1, std::string *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  std::string *v9;
  std::string::size_type size;
  std::string::size_type v11;
  unint64_t v12;
  unint64_t v13;
  std::string *v14;
  char *v15;
  __int128 *v16;
  std::string::size_type *v17;
  unint64_t v18;
  __int128 v19;
  std::string::value_type v20;
  __n128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void *__p[2];
  __int128 v27;
  uint64_t v28;
  void (__cdecl **v29)(std::ostream *__hidden);
  std::ios_base v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v28 = 0;
  *(_OWORD *)__p = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  std::streambuf::basic_streambuf(&v22);
  *(_OWORD *)__p = 0u;
  v27 = 0u;
  LODWORD(v28) = 24;
  *(_QWORD *)&v24 = 0;
  v23 = 0uLL;
  v22.n128_u64[0] = (unint64_t)off_1003EFE30;
  std::ios_base::init(&v30, &v22);
  v31 = 0;
  v32 = -1;
  v34 = (char *)&v33;
  v35 = (char *)&v33 + 2;
  sub_1001DFD88(&v22, a1);
  v5 = v4;
  if ((v4 & 1) != 0)
  {
    v7 = v34;
    v6 = v35;
    v8 = v35 - v34;
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      v12 = a2->__r_.__value_.__r.__words[2];
      v11 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v11 >= v8)
      {
        v13 = HIBYTE(v12);
LABEL_9:
        if ((v13 & 0x80u) == 0)
          v9 = a2;
        else
          v9 = (std::string *)a2->__r_.__value_.__r.__words[0];
LABEL_12:
        if (v7 == v6)
        {
          v14 = v9;
        }
        else
        {
          if (v8 < 0x20 || (unint64_t)((char *)v9 - v7) < 0x20)
          {
            v14 = v9;
            v15 = v7;
          }
          else
          {
            v14 = (std::string *)((char *)v9 + (v8 & 0xFFFFFFFFFFFFFFE0));
            v15 = &v7[v8 & 0xFFFFFFFFFFFFFFE0];
            v16 = (__int128 *)(v7 + 16);
            v17 = &v9->__r_.__value_.__r.__words[2];
            v18 = v8 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v19 = *v16;
              *((_OWORD *)v17 - 1) = *(v16 - 1);
              *(_OWORD *)v17 = v19;
              v16 += 2;
              v17 += 4;
              v18 -= 32;
            }
            while (v18);
            if (v8 == (v8 & 0xFFFFFFFFFFFFFFE0))
              goto LABEL_22;
          }
          do
          {
            v20 = *v15++;
            v14->__r_.__value_.__s.__data_[0] = v20;
            v14 = (std::string *)((char *)v14 + 1);
          }
          while (v15 != v6);
        }
LABEL_22:
        v14->__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
          a2->__r_.__value_.__l.__size_ = v8;
        else
          *((_BYTE *)&a2->__r_.__value_.__s + 23) = v8 & 0x7F;
        goto LABEL_25;
      }
      size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v9 = a2;
      if (v8 <= 0x16)
        goto LABEL_12;
      size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      v11 = 22;
    }
    std::string::__grow_by(a2, v11, v8 - v11, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v13) = *((_BYTE *)&a2->__r_.__value_.__s + 23);
    goto LABEL_9;
  }
LABEL_25:
  std::ostream::~ostream(&v29);
  if (SBYTE7(v27) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf(&v22);
  return v5;
}

